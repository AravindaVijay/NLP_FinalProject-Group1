{
    "clean_data": "Sr Java Full Stack Developer Srspan lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Ge Healthcare Waukesha WI Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC and familiarity of Service Oriented Architecture SOA Expert in methodologies like Agile SCRUM TDD Waterfall Scrum Iteration and Pair Programming and proficient in developing UMLVisio diagrams using case tools like Enterprise Architect Visio and Rational Rose Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Spring Ribbon Spring Netflix Zuul Experience on design patterns such as Session Facade Business Delegate Adaptor Bean Factory Singleton Front Controller Data Access Object Service Locator MVC and Data Transfer Object Experience in developing Web based UIs using JSP HTML DHTML CSS JavaScript and its data representation format like JSON Angular JS Action Script DOJO jQuery Backbone JS Bootstrap EXT JS and Ajax Experienced in Full stack UI technologies using Grunt js Gulp Server for Angular and experienced in working with Spring JDBC Templates JMS Templates Spring EAI and Spring Rest Templates Strong understanding of Microservices Design Patterns Circuit BreakerHystrix DTD Aggregator Proxy Chaining and expertise in XML technologies like XSL XSLT XPATH and parsers like JAXP SAX DOM and JAXB Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Worked on creating Docker images Containers pushpull and on integration with Spring Boot and experienced with messaging systems like Kafka Kafka event sourcing Expertise with tools like SQL Workbench SQL Developer and TOAD tool for accessing the Database server and Expertised in Web Services architecture in RESTFUL and WSDL using JAXRPC Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Experience in working with NoSQL databases like MongoDB Cassandra and experienced in JUnit frame work with Mockito and Easy mock Spring Junit Runner Good Working knowledge of ANT MAVEN Gradle and Log4J and well experienced in using JUnit Log 4J Test NG and SOAP UI for testing framework Extensive experience in testing on multiple operating systems including UNIX Linux Sun Solaris and Windows Expertise in using configuration management tool like Rational Clear case CVS and Git for version controlling Experienced in IDEs such as Eclipse Rational Application Developer RAD NetBeans STS Intellij 14x15x Experienced in developing UNIX shell scripts for batch processing Perl and Python scripts Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Ability to communicate effectively with all levels of the organization such as technical management and customers and presented technical designs and strategies through daily operations meetings Work Experience Sr Java Full Stack Developer Ge Healthcare Waukesha WI May 2017 to Present GE Healthcare provides transformational medical technologies and services that are shaping a new age of patient care GE health Care board expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance solutions services help its customers to deliver better care to more people around the world at a lower cost Responsibilities Actively involving in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile Methodology in the SCRUM Cycle model Developed using new features of Java 8 like Lambda Expressions functional interfaces Stream API and Date API Worked with Core java concepts like Collections Framework Multithreading and Memory management Implemented application using design patterns such as Session Facade Adaptor Bean Factory and Singleton Implemented and developed UI components using Angular 4 features like dependency Injection Models data binding and controllers for devolving single page applications Developed Interactive web pages using Angular4 AJAX HTML CSS and JavaScript Involved in Angular4 Node JS HTML5 and CSS3 code optimization loading and cross browser compatibility Used Microservices architecture with Spring Boot Apache Kafka message broker deployed to AWS cloud Used Spring Core Annotations for Dependency Injection and Spring Boot for microservices Spring MVC Framework design pattern is used to have relationships between application components Developed Entity objects and used Hibernate the ORM tool to access persistent data from SQL Server Using Spring AOP Module to implement logging in the application for application status Spring Security is utilized with the help of Method Level Security by using AOP AspectOriented Programming and URL Level Security by using Servlet filters for web sockets Implement Spring Gateway API Zulu server to handle the load balance for all Restful MicroWebServices in different servers for all environments Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented REST based web services using JAXRS annotations and consumed using HTTP services Developed several REST which produces both XML and JSON to perform tasks leveraged by both web and mobile applications and RESTful using Jersey for JAXRS implementation Worked on creation of Docker container images tagging pushing images integrating Spring boot Created the Docker containers and Docker consoles for managing the application life cycle Utilized AWS Lambda platform to upload data into AWS S3buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Database development required creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and SQL tuning to reduce response time in the application Wrote SQL queries Stored procedures and enhanced performance by running explain plans Developed the data access classes using Hibernate and SQL queries to read and update data from the database as well as to connect database in the DAO implementation classes Developed Applications using Rule EnginesJBoss Drools Work flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Worked on MongoDB database concepts such as locking transactions indexes sharing replication and schema design Using JIRA to assign track report and audit the issues in the application Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with GitHub Jenkins Jobs Responsible for Continuous Integration CI and Continuous Delivery CD process implementation for database using Jenkins and UDeploy and tools like Jenkins Worked closely with QA team and fixed QA bugs with a quick turnaround time Executed test scripts and regression suite of JUnit using Mockito and analyzed the test results Used Log4j utility to generate runtime logs and NGNIX for reverse proxy server process to load balancing Environment Java18 J2EE Angular4 NodeJS jQuery CSS HTML5 AJAX Hibernate Web Services Spring Boot XML WSDL PLSQL MongoDB Docker AWS Cloud SwaggerUI Tomcat Maven Apache Kafka Log4j Mockito Junit Jenkins JIRA GitHub Sr Java Full Stack Developer Pnc Bank Philadelphia PA April 2016 to April 2017 The project Mortgage Loans involved developing clientserver architecture for accessingmanaging mortgage accounts online and providing credit and decision support solutions Supported mortgage types FRM ARM Equity etc Provided a variety of online services like application processing and evaluated user eligibility for a mortgage calculators to figure out different loan scenarios Responsibilities Involved in various SDLC phases like requirement gathering Design Analysis and Code development Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used message brokers such as RabbitMQ Used JAXB parser for marshaling and unmarshaling Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins And deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins Environment Java J2EE JDK HTML CSS Bootstrap AJAX JavaScript JSF 21 Spring Dependency Injection Spring 3x Hibernate Soap UI Maven SVN XML SOAP web service PCF RabbitMQ JBoss PLSQL Oracle 11g JIRA Mockito Java Full Stack Developer American Family Insurance Madison WI December 2014 to March 2016 Project is an Online Auto Insurance Sales tool used to estimate the quote calculate the premium as per state rules and sell the quote to customers Customers can access this tool and buy insurance online Sales tool Rewrite project is an enhancement and Integration project with the following major business requirements Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questionsresponses necessary to provide a quote premium sales Responsibilities Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using IBM Rational Rose and RUP Used Rational Application Developer RAD as Java IDE tool for creating JSPs Servlets EJBs and XML Design and implemented the backend layer using Hibernate Developed the application front end and validations using Java Server Faces JSF Develop named HQL queries and Criteria queries for use in application Implemented transaction management for ORM project using Spring Transaction Management API Created Stored Procedures and other SQL scripts using PLSQL Implemented logging using log4j and Spring AOP Configuring the service on WeblogicWAS application server for successful deployment Created JSON files showing changed data records only VBNET Developed server side JavaScript using Node JS Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate Applied design patterns including MVC Pattern Faade Pattern Abstract Factory Pattern DAO Pattern and Singleton Developed a core component of Analytics with Node JS and AngularJS Extensively used JMX API for management and monitoring solutions Involved in developing front end screens using JSP JSTL DHTML HTML CSS AJAX JavaScript Developed Web services to allow communication between applications through SOAP over HTTP using Apache Axis2 Performed security assessments for the clientfacing apps The associated IT infrastructure such as database management systems middleware systems Linux and Mainframe systems web services SOA were also included in the security assessments Developed Portlets for user level interaction and encapsulating the business logic Developed the automation environment for build deployment and configuration of Portlets onto the IBM websphere portal server using ANT scripts XML Access scripts and JACL scripts Used Spring Framework for Dependency injection and integrated with the EJB 30 using annotations Developed RESTful web service at back end by using Nodejs and Expressjs Implemented the application using the concrete principles laid down by several design patterns such as Business Delegate Session Faade Service Locator Data Access ObjectDAO and Data Transfer Object Generated Hibernate XML files for the configured beans The business logic was written in EJB DAO classes and the service layer classes were configured in Springservicexml XSLT style sheets for the XML data transformations that included both midlayer transformations XML to XML and final transformations XML to HTML Implemented modules into Nodejs to integrate with designs and requirements Implemented Initial setup and component migration to Redux Used MongoDB along with Nodejs as a database to store JSON Used Nodejs to offer an easy and safe way to build high performance and scalable network application Worked on UNIX Shell scripts and Cron jobs Made use of content negotiation XML JSON textplain using JAXB GSON Jackson and XStream Technical evaluation with the architects for Drools business rules engine and Eclipse IDE for Java development Designed structures for Mongo Data store and processing JBoss Drools as ruleengine Investigate debug and fixed potential bugs or defects in the implemented code Implemented junit tests and mandated 90 min code coverage Developed RESTful services using Jersey JAXRS and Restlet to call third party vendors Used source control used as plugin in eclipse Environment Solaris JSP JSF Spring Servlet Hibernate Node Js JMS JCA JMX XML CSS XML Schema AJAX JQUERY AJAX JSON JAXP SAX DOM JAXB Java Portlet Specifications JAXRPC SAAJ SOAP Java script PLSQL DHTML XHTML Maven Log4j JUnit Drools Weblogic 80 Oracle 9i RDBMS Mercury Quality Center 90 Eclipse 32 JavaJ2ee Developer Bayer Healthcare November 2013 to November 2014 This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Created struts form beans action classes JSPs following Struts framework standards Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJs to integrate with designs and requirements Developed real time tracking of class schedules using NodeJs socketio based on socket technology Express JS framework Taken care of java MultiThreading in common java classeslibrary Extensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing Involved in development maintenance of various web services using IBM WebSphere to interact with other Applications Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB2 Worked on Linux environment for deploying the application running scripts for jobs Involved in fixing bugs the bugs or defects in the application Worked as the part of a core team to monitor and enhance the performance of the application Provided troubleshooting and error handling support in multiple projects Environment Jakarta Struts Framework 2x Core Java Hibernate 30 EJB Web Services CSS NodeJs Eclipse CVS WebSphere Application Server 65 JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Jpmc Kansas City MO October 2011 to October 2013 JPMC is an American multinational banking and financial services holding company it is used by the investment banking asset management private banking private wealth management and treasury securities services divisions My expertise involves Analyze Design and developing crosscutting and complex technological solutions for the enterprise level single sign on solutions and online finance application integration patterns Responsibilities Provide post production support for the project during business hours Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Interacted coordinated with the Design team Business analyst and end users of the system Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern Developed front end using Struts framework business components using EJBs Implementing Tiless based framework to present the layouts to the user Created the web UI using Struts JSP Servlets and Custom tags Deployment of Application in the JBoss Server environment using ANT tool using Struts architecture with the JSP Client Configured Struts Dyna Action Forms Message Resources Action Messages Action Errors Validationxml and Validatorrulesxml Designed and developed Caching and Logging service using Singleton pattern Log4j Coded different action classes in struts responsible for maintaining deployment descriptors like strutsconfig ejbjar and webxml using XML Designed and developed frontend using struts framework Used JSP JavaScript JSTL EL Custom Tag libraries Tiles and Validations provided by struts framework Used HTML CSS JavaScript AJAX and jQuery for building rich user interfaces Configured Hibernate session factory using spring  Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using EJB 30 Developed stored procedures and complex packages extensively using PLSQL and shell programs Used StrutsValidator framework for all frontend Validations for all the form entries Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Design and development of JAXB components for transfer objects Prepared EJB deployment descriptors using XML Involved in Configuration and Usage of Apache Log4J for logging and debugging purposes Wrote Action Classes to service the requests from the UI populate business objects invoke EJBs Used JAXP DOM XSLT XSD for XML data generation and presentation Wrote Junit test classes for the services and prepared documentation Environment JavaJ2SE 15 JSP Servlets Struts20 Hibernate30 JAXB20 XSLT DOM XML EJB 30 Web Services JNDI J2EE5 RSA CVS Oracle9i Junit Rational Rose JBoss Application Server 51 JavaScript DHTML Java Developer Graylogic Technologie June 2010 to September 2011 Description This project involves developing a J2EE based framework to support dynamic report creation from various distributed databases The framework supports dynamic PDF report generation using iText an open source PDF generation library The framework facilitates new report formats and databases by using xml configuration files Responsibilities Involved in designing and developing modules at both Client and Server Side Developed Servlets and Java Server Pages JSP Responsible for validating the data at the client side using JavaScript Involved in developing Server Side Java Servlet to capture the posted form data and process it on the Server side Responsible for Integration unit testing system testing and stress testing for all the phases of project Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Accessed stored procedures and functions using JDBC Callable statements Executed and coordinated the installation for the project Developed and wrote UNIX Shell scripts to automate various tasks Environment Java Servlets JSP JavaScript JDBC Unix Shell scripting HTMLDHTML Eclipse 33 Oracle 8i WebLogic 8 Windows NT Education Bachelors Skills HTML 7 years Integration 7 years INTEGRATOR 7 years Java 8 years JavaScript 8 years Additional Information AREAS OF EXPERTISE Web Application Development Software Development Project Coordination Program DesignImplementation Software Coding Web Programming Test Design and Execution Software Implementation Requirements Management Unit and Integration Testing Technology Integration Program Documentation SKILLS C C Java UML SQL PLSQL XSLT Perl Shell script Java Beans Servlets Applets JSP JDBC EJB JSF JMS RMI WebServices SOAP RESTful Struts122x Spring 202530314x Hibernate2030323x CXF AXIS SQL server 2005 Oracle 8i9i10g Access MySQL DB2 MongoDB Cassandra HTML CSS JavaScript TypeScript AJAX ExtJS JSON XML XSL XPATH XQuery jQuery Angular Reactjs Nodejs bootstrap Oracle WebLogic server 91010311g IBM Websphere 6x7x JBOSS Application Server 40516771 Apache Tomcat 556x7x8x Eclipse43 Rational Application Developer RAD 678 WSAD50 Jenkins Chef Puppet Docker EC2 VPN Route 53 RDS CLI DNS Dyamo DB MyEclipse Netbeans IDE Intellij Dreamweaver Brackets FireBug IE Tester Chrome Element Inspector Junit JIRABugzilla CVS SVN GIT Rational Clear Case PVCS Agile Methodology Waterfall ANT Maven Gradle Log4j HQL MS Vision Window2000XPVista7 UNIX Type script",
    "entities": [
        "Database Created",
        "Spring Framework",
        "Design Analysis",
        "Developed Portlets",
        "Analysis Design Development System Testing",
        "Responsibilities Actively",
        "ORM",
        "Nodejs",
        "Validations",
        "UNIX",
        "Session Facade Adaptor Bean Factory",
        "GitHub Jenkins Jobs Responsible for Continuous Integration CI",
        "Validatorrulesxml Designed",
        "Jersey",
        "HTTP",
        "JTA",
        "Software Development Lifecycle SDLC",
        "Used SOAP UI",
        "Responsible for Integration",
        "AWS S3buckets",
        "IBM",
        "CVS",
        "Hibernate Session Factory",
        "Usage of Apache",
        "SVN Subversion",
        "Mongo Data",
        "JAR",
        "XML",
        "SOAP",
        "Used React JS",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "Shell",
        "Spring Boot",
        "SQL Server",
        "Care board",
        "Used Spring Framework for Dependency",
        "NodeJs",
        "ANT MAVEN Gradle",
        "Microservices Design Patterns Circuit BreakerHystrix",
        "Philadelphia",
        "Node JS Involved",
        "Developed",
        "DAO",
        "Implementing Tiless",
        "Spring Transaction Management API Created Stored Procedures",
        "Created JSON",
        "Spark Data",
        "Java Server Faces",
        "NGNIX",
        "Tomcat WebSphere WebLogic",
        "JMX API",
        "XStream Technical",
        "Mockito",
        "Rational Clear",
        "HTMLDHTML",
        "Responsibilities Involved",
        "Session Facade Business Delegate Adaptor Bean Factory",
        "Business Delegate Session Faade Service Locator Data Access",
        "Spring MVC IOC",
        "Stream API",
        "UMLVisio",
        "Core",
        "Analytics",
        "Restlet",
        "JBoss Servers Ability",
        "SOA",
        "Present GE Healthcare",
        "Spring Security",
        "JavaScript Involved",
        "JSP",
        "Hibernate Developed",
        "XML Design",
        "Java Server Pages JSP Responsible",
        "Bayer Healthcare",
        "JAXP SAX DOM",
        "Database Design Creation",
        "JBoss Drools",
        "Customers",
        "JAXB Proficient",
        "MVC Pattern Faade Pattern Abstract Factory Pattern",
        "Investigate",
        "Integration Testing Technology Integration Program Documentation",
        "SOAPHTTP",
        "JAXRPC",
        "MVC",
        "EJB",
        "VPN Route",
        "Node JS",
        "Ajax Experienced",
        "SQL Workbench SQL Developer",
        "HTML CSS",
        "JS",
        "Used JAXP DOM XSLT XSD",
        "Database",
        "HTML Implemented",
        "Rational Rose for the Configuration Cache",
        "QA",
        "IDE Intellij Dreamweaver Brackets FireBug IE Tester Chrome Element Inspector",
        "POJO",
        "PDF",
        "Virtual DOM JSX React Native concepts Involved",
        "Types",
        "Drools",
        "Created",
        "RDS CLI",
        "Server",
        "Developed Interactive",
        "Weblogic 80 Oracle",
        "Oracle",
        "Singleton",
        "Created the Docker",
        "Struts JSP Servlets",
        "Injection Models",
        "XML Involved",
        "Web Application using React",
        "RSA CVS Oracle9i Junit Rational Rose JBoss Application",
        "the Data Repository Users",
        "MVC Framework",
        "Implemented Initial",
        "HTML",
        "Cron",
        "Data Transfer Object Experience",
        "User Acceptance Testing Successfully",
        "JSF Develop",
        "RESTFUL",
        "SQL",
        "Spring Inversion of Control IOC",
        "Method Level Security",
        "JBoss Server",
        "DML",
        "Bootstrap",
        "Spring Boot Apache Kafka",
        "WebSphere Application Server Implement",
        "JAXRS",
        "Used Microservices",
        "JACL",
        "JSON Angular JS Action Script DOJO jQuery Backbone",
        "Schemas",
        "CICD",
        "Wrote Action Classes",
        "Server Side Developed Servlets",
        "Nodejs and Expressjs Implemented",
        "JBoss Created CICD",
        "the JSP Client Configured",
        "EL Custom Tag",
        "Responsibilities Designed Use Case Diagrams Class Diagrams",
        "AOP AspectOriented Programming and URL Level Security",
        "PCF",
        "Session Faade Business Delegate Service Locator",
        "Data Repository",
        "JavaScript Servlets",
        "Servlet",
        "Maven",
        "Springservicexml XSLT",
        "CXF AXIS SQL",
        "Drools Dashboard for Business",
        "Sequence Diagrams",
        "RUP Used Rational Application Developer RAD",
        "Applications Successfully",
        "JavaScript",
        "ANT",
        "Eclipse Rational Application Developer",
        "UI",
        "OOAD",
        "JSP Servlets",
        "Cases",
        "Online Auto Insurance Sales",
        "SOAP UI",
        "Expertise",
        "Web Services for Integrating with the Enterprise Information System Tier Design",
        "jQuery",
        "AppDynamics",
        "REST",
        "XML Access",
        "NoSQL",
        "Custom tags Deployment of Application",
        "GE",
        "Amazon Web Services AWS Extensive",
        "VBNET Developed",
        "Integration",
        "Microservice",
        "Node",
        "Oracle WebLogic"
    ],
    "experience": "Experience on design patterns such as Session Facade Business Delegate Adaptor Bean Factory Singleton Front Controller Data Access Object Service Locator MVC and Data Transfer Object Experience in developing Web based UIs using JSP HTML DHTML CSS JavaScript and its data representation format like JSON Angular JS Action Script DOJO jQuery Backbone JS Bootstrap EXT JS and Ajax Experienced in Full stack UI technologies using Grunt js Gulp Server for Angular and experienced in working with Spring JDBC Templates JMS Templates Spring EAI and Spring Rest Templates Strong understanding of Microservices Design Patterns Circuit BreakerHystrix DTD Aggregator Proxy Chaining and expertise in XML technologies like XSL XSLT XPATH and parsers like JAXP SAX DOM and JAXB Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Worked on creating Docker images Containers pushpull and on integration with Spring Boot and experienced with messaging systems like Kafka Kafka event sourcing Expertise with tools like SQL Workbench SQL Developer and TOAD tool for accessing the Database server and Expertised in Web Services architecture in RESTFUL and WSDL using JAXRPC Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Experience in working with NoSQL databases like MongoDB Cassandra and experienced in JUnit frame work with Mockito and Easy mock Spring Junit Runner Good Working knowledge of ANT MAVEN Gradle and Log4J and well experienced in using JUnit Log 4J Test NG and SOAP UI for testing framework Extensive experience in testing on multiple operating systems including UNIX Linux Sun Solaris and Windows Expertise in using configuration management tool like Rational Clear case CVS and Git for version controlling Experienced in IDEs such as Eclipse Rational Application Developer RAD NetBeans STS Intellij 14x15x Experienced in developing UNIX shell scripts for batch processing Perl and Python scripts Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Ability to communicate effectively with all levels of the organization such as technical management and customers and presented technical designs and strategies through daily operations meetings Work Experience Sr Java Full Stack Developer Ge Healthcare Waukesha WI May 2017 to Present GE Healthcare provides transformational medical technologies and services that are shaping a new age of patient care GE health Care board expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance solutions services help its customers to deliver better care to more people around the world at a lower cost Responsibilities Actively involving in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile Methodology in the SCRUM Cycle model Developed using new features of Java 8 like Lambda Expressions functional interfaces Stream API and Date API Worked with Core java concepts like Collections Framework Multithreading and Memory management Implemented application using design patterns such as Session Facade Adaptor Bean Factory and Singleton Implemented and developed UI components using Angular 4 features like dependency Injection Models data binding and controllers for devolving single page applications Developed Interactive web pages using Angular4 AJAX HTML CSS and JavaScript Involved in Angular4 Node JS HTML5 and CSS3 code optimization loading and cross browser compatibility Used Microservices architecture with Spring Boot Apache Kafka message broker deployed to AWS cloud Used Spring Core Annotations for Dependency Injection and Spring Boot for microservices Spring MVC Framework design pattern is used to have relationships between application components Developed Entity objects and used Hibernate the ORM tool to access persistent data from SQL Server Using Spring AOP Module to implement logging in the application for application status Spring Security is utilized with the help of Method Level Security by using AOP AspectOriented Programming and URL Level Security by using Servlet filters for web sockets Implement Spring Gateway API Zulu server to handle the load balance for all Restful MicroWebServices in different servers for all environments Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented REST based web services using JAXRS annotations and consumed using HTTP services Developed several REST which produces both XML and JSON to perform tasks leveraged by both web and mobile applications and RESTful using Jersey for JAXRS implementation Worked on creation of Docker container images tagging pushing images integrating Spring boot Created the Docker containers and Docker consoles for managing the application life cycle Utilized AWS Lambda platform to upload data into AWS S3buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Database development required creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and SQL tuning to reduce response time in the application Wrote SQL queries Stored procedures and enhanced performance by running explain plans Developed the data access classes using Hibernate and SQL queries to read and update data from the database as well as to connect database in the DAO implementation classes Developed Applications using Rule EnginesJBoss Drools Work flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Worked on MongoDB database concepts such as locking transactions indexes sharing replication and schema design Using JIRA to assign track report and audit the issues in the application Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with GitHub Jenkins Jobs Responsible for Continuous Integration CI and Continuous Delivery CD process implementation for database using Jenkins and UDeploy and tools like Jenkins Worked closely with QA team and fixed QA bugs with a quick turnaround time Executed test scripts and regression suite of JUnit using Mockito and analyzed the test results Used Log4j utility to generate runtime logs and NGNIX for reverse proxy server process to load balancing Environment Java18 J2EE Angular4 NodeJS jQuery CSS HTML5 AJAX Hibernate Web Services Spring Boot XML WSDL PLSQL MongoDB Docker AWS Cloud SwaggerUI Tomcat Maven Apache Kafka Log4j Mockito Junit Jenkins JIRA GitHub Sr Java Full Stack Developer Pnc Bank Philadelphia PA April 2016 to April 2017 The project Mortgage Loans involved developing clientserver architecture for accessingmanaging mortgage accounts online and providing credit and decision support solutions Supported mortgage types FRM ARM Equity etc Provided a variety of online services like application processing and evaluated user eligibility for a mortgage calculators to figure out different loan scenarios Responsibilities Involved in various SDLC phases like requirement gathering Design Analysis and Code development Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used message brokers such as RabbitMQ Used JAXB parser for marshaling and unmarshaling Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11 g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins And deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins Environment Java J2EE JDK HTML CSS Bootstrap AJAX JavaScript JSF 21 Spring Dependency Injection Spring 3x Hibernate Soap UI Maven SVN XML SOAP web service PCF RabbitMQ JBoss PLSQL Oracle 11 g JIRA Mockito Java Full Stack Developer American Family Insurance Madison WI December 2014 to March 2016 Project is an Online Auto Insurance Sales tool used to estimate the quote calculate the premium as per state rules and sell the quote to customers Customers can access this tool and buy insurance online Sales tool Rewrite project is an enhancement and Integration project with the following major business requirements Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questionsresponses necessary to provide a quote premium sales Responsibilities Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using IBM Rational Rose and RUP Used Rational Application Developer RAD as Java IDE tool for creating JSPs Servlets EJBs and XML Design and implemented the backend layer using Hibernate Developed the application front end and validations using Java Server Faces JSF Develop named HQL queries and Criteria queries for use in application Implemented transaction management for ORM project using Spring Transaction Management API Created Stored Procedures and other SQL scripts using PLSQL Implemented logging using log4j and Spring AOP Configuring the service on WeblogicWAS application server for successful deployment Created JSON files showing changed data records only VBNET Developed server side JavaScript using Node JS Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate Applied design patterns including MVC Pattern Faade Pattern Abstract Factory Pattern DAO Pattern and Singleton Developed a core component of Analytics with Node JS and AngularJS Extensively used JMX API for management and monitoring solutions Involved in developing front end screens using JSP JSTL DHTML HTML CSS AJAX JavaScript Developed Web services to allow communication between applications through SOAP over HTTP using Apache Axis2 Performed security assessments for the clientfacing apps The associated IT infrastructure such as database management systems middleware systems Linux and Mainframe systems web services SOA were also included in the security assessments Developed Portlets for user level interaction and encapsulating the business logic Developed the automation environment for build deployment and configuration of Portlets onto the IBM websphere portal server using ANT scripts XML Access scripts and JACL scripts Used Spring Framework for Dependency injection and integrated with the EJB 30 using annotations Developed RESTful web service at back end by using Nodejs and Expressjs Implemented the application using the concrete principles laid down by several design patterns such as Business Delegate Session Faade Service Locator Data Access ObjectDAO and Data Transfer Object Generated Hibernate XML files for the configured beans The business logic was written in EJB DAO classes and the service layer classes were configured in Springservicexml XSLT style sheets for the XML data transformations that included both midlayer transformations XML to XML and final transformations XML to HTML Implemented modules into Nodejs to integrate with designs and requirements Implemented Initial setup and component migration to Redux Used MongoDB along with Nodejs as a database to store JSON Used Nodejs to offer an easy and safe way to build high performance and scalable network application Worked on UNIX Shell scripts and Cron jobs Made use of content negotiation XML JSON textplain using JAXB GSON Jackson and XStream Technical evaluation with the architects for Drools business rules engine and Eclipse IDE for Java development Designed structures for Mongo Data store and processing JBoss Drools as ruleengine Investigate debug and fixed potential bugs or defects in the implemented code Implemented junit tests and mandated 90 min code coverage Developed RESTful services using Jersey JAXRS and Restlet to call third party vendors Used source control used as plugin in eclipse Environment Solaris JSP JSF Spring Servlet Hibernate Node Js JMS JCA JMX XML CSS XML Schema AJAX JQUERY AJAX JSON JAXP SAX DOM JAXB Java Portlet Specifications JAXRPC SAAJ SOAP Java script PLSQL DHTML XHTML Maven Log4j JUnit Drools Weblogic 80 Oracle 9i RDBMS Mercury Quality Center 90 Eclipse 32 JavaJ2ee Developer Bayer Healthcare November 2013 to November 2014 This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Created struts form beans action classes JSPs following Struts framework standards Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJs to integrate with designs and requirements Developed real time tracking of class schedules using NodeJs socketio based on socket technology Express JS framework Taken care of java MultiThreading in common java classeslibrary Extensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing Involved in development maintenance of various web services using IBM WebSphere to interact with other Applications Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB2 Worked on Linux environment for deploying the application running scripts for jobs Involved in fixing bugs the bugs or defects in the application Worked as the part of a core team to monitor and enhance the performance of the application Provided troubleshooting and error handling support in multiple projects Environment Jakarta Struts Framework 2x Core Java Hibernate 30 EJB Web Services CSS NodeJs Eclipse CVS WebSphere Application Server 65 JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Jpmc Kansas City MO October 2011 to October 2013 JPMC is an American multinational banking and financial services holding company it is used by the investment banking asset management private banking private wealth management and treasury securities services divisions My expertise involves Analyze Design and developing crosscutting and complex technological solutions for the enterprise level single sign on solutions and online finance application integration patterns Responsibilities Provide post production support for the project during business hours Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Interacted coordinated with the Design team Business analyst and end users of the system Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern Developed front end using Struts framework business components using EJBs Implementing Tiless based framework to present the layouts to the user Created the web UI using Struts JSP Servlets and Custom tags Deployment of Application in the JBoss Server environment using ANT tool using Struts architecture with the JSP Client Configured Struts Dyna Action Forms Message Resources Action Messages Action Errors Validationxml and Validatorrulesxml Designed and developed Caching and Logging service using Singleton pattern Log4j Coded different action classes in struts responsible for maintaining deployment descriptors like strutsconfig ejbjar and webxml using XML Designed and developed frontend using struts framework Used JSP JavaScript JSTL EL Custom Tag libraries Tiles and Validations provided by struts framework Used HTML CSS JavaScript AJAX and jQuery for building rich user interfaces Configured Hibernate session factory using spring   Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using EJB 30 Developed stored procedures and complex packages extensively using PLSQL and shell programs Used StrutsValidator framework for all frontend Validations for all the form entries Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Design and development of JAXB components for transfer objects Prepared EJB deployment descriptors using XML Involved in Configuration and Usage of Apache Log4J for logging and debugging purposes Wrote Action Classes to service the requests from the UI populate business objects invoke EJBs Used JAXP DOM XSLT XSD for XML data generation and presentation Wrote Junit test classes for the services and prepared documentation Environment JavaJ2SE 15 JSP Servlets Struts20 Hibernate30 JAXB20 XSLT DOM XML EJB 30 Web Services JNDI J2EE5 RSA CVS Oracle9i Junit Rational Rose JBoss Application Server 51 JavaScript DHTML Java Developer Graylogic Technologie June 2010 to September 2011 Description This project involves developing a J2EE based framework to support dynamic report creation from various distributed databases The framework supports dynamic PDF report generation using iText an open source PDF generation library The framework facilitates new report formats and databases by using xml configuration files Responsibilities Involved in designing and developing modules at both Client and Server Side Developed Servlets and Java Server Pages JSP Responsible for validating the data at the client side using JavaScript Involved in developing Server Side Java Servlet to capture the posted form data and process it on the Server side Responsible for Integration unit testing system testing and stress testing for all the phases of project Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Accessed stored procedures and functions using JDBC Callable statements Executed and coordinated the installation for the project Developed and wrote UNIX Shell scripts to automate various tasks Environment Java Servlets JSP JavaScript JDBC Unix Shell scripting HTMLDHTML Eclipse 33 Oracle 8i WebLogic 8 Windows NT Education Bachelors Skills HTML 7 years Integration 7 years INTEGRATOR 7 years Java 8 years JavaScript 8 years Additional Information AREAS OF EXPERTISE Web Application Development Software Development Project Coordination Program DesignImplementation Software Coding Web Programming Test Design and Execution Software Implementation Requirements Management Unit and Integration Testing Technology Integration Program Documentation SKILLS C C Java UML SQL PLSQL XSLT Perl Shell script Java Beans Servlets Applets JSP JDBC EJB JSF JMS RMI WebServices SOAP RESTful Struts122x Spring 202530314x Hibernate2030323x CXF AXIS SQL server 2005 Oracle 8i9i10 g Access MySQL DB2 MongoDB Cassandra HTML CSS JavaScript TypeScript AJAX ExtJS JSON XML XSL XPATH XQuery jQuery Angular Reactjs Nodejs bootstrap Oracle WebLogic server 91010311 g IBM Websphere 6x7x JBOSS Application Server 40516771 Apache Tomcat 556x7x8x Eclipse43 Rational Application Developer RAD 678 WSAD50 Jenkins Chef Puppet Docker EC2 VPN Route 53 RDS CLI DNS Dyamo DB MyEclipse Netbeans IDE Intellij Dreamweaver Brackets FireBug IE Tester Chrome Element Inspector Junit JIRABugzilla CVS SVN GIT Rational Clear Case PVCS Agile Methodology Waterfall ANT Maven Gradle Log4j HQL MS Vision Window2000XPVista7 UNIX Type script",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Srspan",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Ge",
        "Healthcare",
        "Waukesha",
        "WI",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "familiarity",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Expert",
        "methodologies",
        "SCRUM",
        "TDD",
        "Waterfall",
        "Scrum",
        "Iteration",
        "Pair",
        "Programming",
        "UMLVisio",
        "diagrams",
        "case",
        "tools",
        "Enterprise",
        "Architect",
        "Visio",
        "Rational",
        "Rose",
        "Strong",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Micro",
        "services",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "Netflix",
        "Zuul",
        "Experience",
        "design",
        "patterns",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Adaptor",
        "Bean",
        "Factory",
        "Singleton",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "MVC",
        "Data",
        "Transfer",
        "Object",
        "Experience",
        "Web",
        "UIs",
        "JSP",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "data",
        "representation",
        "format",
        "JSON",
        "Angular",
        "JS",
        "Action",
        "Script",
        "DOJO",
        "jQuery",
        "Backbone",
        "JS",
        "Bootstrap",
        "EXT",
        "JS",
        "Ajax",
        "stack",
        "UI",
        "technologies",
        "Grunt",
        "js",
        "Gulp",
        "Server",
        "Angular",
        "Spring",
        "JDBC",
        "Templates",
        "JMS",
        "Templates",
        "Spring",
        "EAI",
        "Spring",
        "Rest",
        "understanding",
        "Microservices",
        "Design",
        "Patterns",
        "Circuit",
        "BreakerHystrix",
        "DTD",
        "Aggregator",
        "Proxy",
        "Chaining",
        "expertise",
        "XML",
        "technologies",
        "XSL",
        "XSLT",
        "XPATH",
        "parsers",
        "JAXP",
        "SAX",
        "DOM",
        "JAXB",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "experience",
        "services",
        "EC2",
        "VPC",
        "Cloud",
        "Watch",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "Amazon",
        "RDS",
        "Elastic",
        "Cache",
        "SNS",
        "SQS",
        "Configured",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Groups",
        "Users",
        "login",
        "authentication",
        "Docker",
        "images",
        "Containers",
        "pushpull",
        "integration",
        "Spring",
        "Boot",
        "systems",
        "Kafka",
        "Kafka",
        "event",
        "Expertise",
        "tools",
        "SQL",
        "Workbench",
        "SQL",
        "Developer",
        "TOAD",
        "tool",
        "Database",
        "server",
        "Web",
        "Services",
        "architecture",
        "RESTFUL",
        "WSDL",
        "JAXRPC",
        "Experience",
        "Database",
        "Design",
        "Creation",
        "management",
        "Schemas",
        "Procedures",
        "functions",
        "DDL",
        "DML",
        "SQL",
        "Experience",
        "SQL",
        "PLSQL",
        "programming",
        "Experience",
        "NoSQL",
        "databases",
        "MongoDB",
        "Cassandra",
        "JUnit",
        "frame",
        "work",
        "Mockito",
        "Easy",
        "Spring",
        "Junit",
        "Runner",
        "Good",
        "Working",
        "knowledge",
        "ANT",
        "MAVEN",
        "Gradle",
        "Log4J",
        "JUnit",
        "Log",
        "4J",
        "Test",
        "NG",
        "SOAP",
        "UI",
        "testing",
        "framework",
        "experience",
        "testing",
        "operating",
        "systems",
        "UNIX",
        "Linux",
        "Sun",
        "Solaris",
        "Windows",
        "Expertise",
        "configuration",
        "management",
        "tool",
        "Rational",
        "Clear",
        "case",
        "CVS",
        "Git",
        "version",
        "IDEs",
        "Eclipse",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "NetBeans",
        "STS",
        "Intellij",
        "UNIX",
        "shell",
        "scripts",
        "batch",
        "processing",
        "Perl",
        "Python",
        "Experience",
        "applications",
        "Tomcat",
        "WebSphere",
        "WebLogic",
        "JBoss",
        "Servers",
        "Ability",
        "levels",
        "organization",
        "management",
        "customers",
        "designs",
        "strategies",
        "operations",
        "meetings",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Ge",
        "Healthcare",
        "Waukesha",
        "WI",
        "May",
        "Present",
        "GE",
        "Healthcare",
        "technologies",
        "services",
        "age",
        "patient",
        "care",
        "GE",
        "health",
        "Care",
        "board",
        "expertise",
        "imaging",
        "information",
        "technologies",
        "diagnostics",
        "monitoring",
        "systems",
        "drug",
        "discovery",
        "manufacturing",
        "technologies",
        "performance",
        "improvement",
        "performance",
        "solutions",
        "services",
        "customers",
        "care",
        "people",
        "world",
        "cost",
        "Responsibilities",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Agile",
        "Methodology",
        "SCRUM",
        "Cycle",
        "model",
        "features",
        "Java",
        "Lambda",
        "Expressions",
        "interfaces",
        "Stream",
        "API",
        "Date",
        "API",
        "Core",
        "concepts",
        "Collections",
        "Framework",
        "Multithreading",
        "Memory",
        "management",
        "application",
        "design",
        "patterns",
        "Session",
        "Facade",
        "Adaptor",
        "Bean",
        "Factory",
        "Singleton",
        "UI",
        "components",
        "Angular",
        "features",
        "dependency",
        "Injection",
        "Models",
        "data",
        "controllers",
        "page",
        "applications",
        "web",
        "pages",
        "Angular4",
        "AJAX",
        "HTML",
        "CSS",
        "JavaScript",
        "Angular4",
        "Node",
        "JS",
        "HTML5",
        "CSS3",
        "code",
        "optimization",
        "loading",
        "browser",
        "compatibility",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "Apache",
        "Kafka",
        "message",
        "broker",
        "AWS",
        "cloud",
        "Used",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "Boot",
        "microservices",
        "Spring",
        "MVC",
        "Framework",
        "design",
        "pattern",
        "relationships",
        "application",
        "components",
        "Developed",
        "Entity",
        "objects",
        "Hibernate",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Spring",
        "AOP",
        "Module",
        "application",
        "application",
        "status",
        "Spring",
        "Security",
        "help",
        "Method",
        "Level",
        "Security",
        "AOP",
        "AspectOriented",
        "Programming",
        "URL",
        "Level",
        "Security",
        "Servlet",
        "filters",
        "web",
        "sockets",
        "Implement",
        "Spring",
        "Gateway",
        "API",
        "Zulu",
        "server",
        "load",
        "balance",
        "MicroWebServices",
        "servers",
        "environments",
        "Configured",
        "SwaggerUI",
        "Microservice",
        "Eureka",
        "server",
        "service",
        "Spring",
        "Boot",
        "REST",
        "web",
        "services",
        "JAXRS",
        "annotations",
        "HTTP",
        "services",
        "REST",
        "XML",
        "JSON",
        "tasks",
        "web",
        "applications",
        "Jersey",
        "JAXRS",
        "implementation",
        "creation",
        "Docker",
        "container",
        "images",
        "images",
        "Spring",
        "boot",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3buckets",
        "Lambda",
        "functions",
        "EC2",
        "MongoDB",
        "highavailability",
        "fault",
        "tolerance",
        "Database",
        "development",
        "creation",
        "tables",
        "procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "SQL",
        "response",
        "time",
        "application",
        "Wrote",
        "SQL",
        "procedures",
        "performance",
        "explain",
        "plans",
        "data",
        "access",
        "classes",
        "Hibernate",
        "SQL",
        "data",
        "database",
        "database",
        "DAO",
        "implementation",
        "classes",
        "Applications",
        "Rule",
        "EnginesJBoss",
        "Drools",
        "Work",
        "tasks",
        "Business",
        "rules",
        "validations",
        "Drools",
        "Dashboard",
        "Business",
        "users",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "JIRA",
        "track",
        "report",
        "issues",
        "application",
        "Maven",
        "build",
        "dependency",
        "management",
        "tool",
        "EAR",
        "WAR",
        "JAR",
        "file",
        "application",
        "servers",
        "GitHub",
        "Jenkins",
        "Jobs",
        "Responsible",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "database",
        "Jenkins",
        "UDeploy",
        "tools",
        "Jenkins",
        "QA",
        "team",
        "QA",
        "bugs",
        "turnaround",
        "time",
        "test",
        "scripts",
        "regression",
        "suite",
        "JUnit",
        "Mockito",
        "test",
        "results",
        "Log4j",
        "utility",
        "runtime",
        "logs",
        "NGNIX",
        "server",
        "process",
        "Environment",
        "Java18",
        "J2EE",
        "Angular4",
        "NodeJS",
        "jQuery",
        "CSS",
        "HTML5",
        "AJAX",
        "Hibernate",
        "Web",
        "Services",
        "Spring",
        "Boot",
        "XML",
        "WSDL",
        "PLSQL",
        "MongoDB",
        "Docker",
        "AWS",
        "Cloud",
        "Tomcat",
        "Maven",
        "Apache",
        "Kafka",
        "Log4j",
        "Mockito",
        "Junit",
        "Jenkins",
        "JIRA",
        "GitHub",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Pnc",
        "Bank",
        "Philadelphia",
        "PA",
        "April",
        "April",
        "project",
        "Mortgage",
        "Loans",
        "architecture",
        "mortgage",
        "accounts",
        "credit",
        "decision",
        "support",
        "solutions",
        "mortgage",
        "types",
        "FRM",
        "ARM",
        "Equity",
        "variety",
        "services",
        "application",
        "processing",
        "user",
        "eligibility",
        "mortgage",
        "calculators",
        "loan",
        "scenarios",
        "Responsibilities",
        "SDLC",
        "phases",
        "requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Multithreading",
        "data",
        "chunks",
        "performance",
        "practices",
        "casting",
        "generics",
        "Hash",
        "Map",
        "Collections",
        "comparator",
        "list",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Singleton",
        "React",
        "JS",
        "controllers",
        "events",
        "clients",
        "request",
        "React",
        "JS",
        "UIs",
        "Oneway",
        "data",
        "DOM",
        "JSX",
        "React",
        "concepts",
        "efficiency",
        "Web",
        "Application",
        "React",
        "Node",
        "JS",
        "web",
        "pages",
        "HTML",
        "CSS",
        "JS",
        "Bootstrap",
        "cross",
        "browser",
        "compatibility",
        "design",
        "website",
        "Tablets",
        "users",
        "ReactJS",
        "tier",
        "Restful",
        "Web",
        "API",
        "layer",
        "applications",
        "Scala",
        "library",
        "data",
        "scientists",
        "data",
        "structures",
        "part",
        "library",
        "data",
        "structures",
        "Spark",
        "Data",
        "frames",
        "functionality",
        "Developed",
        "Spring",
        "presentation",
        "layer",
        "hibernate",
        "DAO",
        "layer",
        "Spring",
        "Dependency",
        "injection",
        "ORM",
        "Web",
        "modules",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "Spring",
        "Batch",
        "spring",
        "batch",
        "jobs",
        "requirements",
        "reliability",
        "robustness",
        "traceability",
        "processing",
        "amount",
        "data",
        "Spring",
        "Security",
        "Authorization",
        "Method",
        "Level",
        "Authorization",
        "URL",
        "Level",
        "Authorization",
        "Spring",
        "Transaction",
        "degree",
        "isolation",
        "transactions",
        "transaction",
        "scope",
        "transaction",
        "transaction",
        "Wrote",
        "code",
        "Web",
        "Services",
        "JAXWS",
        "system",
        "SOAPHTTP",
        "call",
        "data",
        "web",
        "services",
        "XML",
        "response",
        "HTML",
        "pages",
        "Web",
        "services",
        "SOAP",
        "transmission",
        "blocks",
        "data",
        "HTTP",
        "XML",
        "Web",
        "Services",
        "protocol",
        "data",
        "application",
        "message",
        "brokers",
        "RabbitMQ",
        "JAXB",
        "parser",
        "Cloud",
        "Foundry",
        "access",
        "controls",
        "roles",
        "permissions",
        "users",
        "spaces",
        "access",
        "Configured",
        "Hibernate",
        "Spring",
        "Beans",
        "Spring",
        "Configuration",
        "File",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "Oracle",
        "g",
        "Database",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "store",
        "images",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "Maven",
        "build",
        "tool",
        "dependencies",
        "application",
        "SOAP",
        "UI",
        "web",
        "services",
        "AppDynamics",
        "application",
        "health",
        "Mockito",
        "procedures",
        "applications",
        "part",
        "scheduling",
        "mechanisms",
        "Log4j",
        "framework",
        "application",
        "integration",
        "Jenkins",
        "JBoss",
        "Created",
        "CICD",
        "pipelines",
        "setup",
        "auto",
        "trigger",
        "auto",
        "build",
        "auto",
        "deployment",
        "help",
        "CICD",
        "tool",
        "Jenkins",
        "Environment",
        "Java",
        "J2EE",
        "JDK",
        "HTML",
        "CSS",
        "Bootstrap",
        "AJAX",
        "JavaScript",
        "JSF",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "Hibernate",
        "Soap",
        "UI",
        "Maven",
        "SVN",
        "XML",
        "SOAP",
        "web",
        "service",
        "PCF",
        "RabbitMQ",
        "JBoss",
        "PLSQL",
        "Oracle",
        "g",
        "JIRA",
        "Mockito",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "American",
        "Family",
        "Insurance",
        "Madison",
        "WI",
        "December",
        "March",
        "Project",
        "Online",
        "Auto",
        "Insurance",
        "Sales",
        "tool",
        "quote",
        "premium",
        "state",
        "rules",
        "quote",
        "customers",
        "Customers",
        "tool",
        "insurance",
        "Sales",
        "tool",
        "Rewrite",
        "project",
        "enhancement",
        "Integration",
        "project",
        "business",
        "requirements",
        "Online",
        "Auto",
        "Insurance",
        "Sales",
        "process",
        "number",
        "questionsresponses",
        "premium",
        "sales",
        "Responsibilities",
        "Use",
        "Case",
        "Diagrams",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Object",
        "Diagrams",
        "IBM",
        "Rational",
        "Rose",
        "RUP",
        "Used",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Java",
        "IDE",
        "tool",
        "JSPs",
        "Servlets",
        "EJBs",
        "XML",
        "Design",
        "layer",
        "Hibernate",
        "application",
        "end",
        "validations",
        "Java",
        "Server",
        "Faces",
        "JSF",
        "Develop",
        "HQL",
        "queries",
        "Criteria",
        "use",
        "application",
        "transaction",
        "management",
        "ORM",
        "project",
        "Spring",
        "Transaction",
        "Management",
        "API",
        "Stored",
        "Procedures",
        "SQL",
        "scripts",
        "log4j",
        "Spring",
        "AOP",
        "service",
        "application",
        "server",
        "deployment",
        "JSON",
        "files",
        "data",
        "records",
        "VBNET",
        "server",
        "side",
        "JavaScript",
        "Node",
        "JS",
        "J2EE",
        "design",
        "Spring",
        "Inversion",
        "Control",
        "IOC",
        "architecture",
        "Hibernate",
        "design",
        "patterns",
        "MVC",
        "Pattern",
        "Faade",
        "Pattern",
        "Abstract",
        "Factory",
        "Pattern",
        "DAO",
        "Pattern",
        "Singleton",
        "core",
        "component",
        "Analytics",
        "Node",
        "JS",
        "AngularJS",
        "JMX",
        "API",
        "management",
        "monitoring",
        "solutions",
        "end",
        "screens",
        "JSP",
        "JSTL",
        "DHTML",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Developed",
        "Web",
        "services",
        "communication",
        "applications",
        "SOAP",
        "HTTP",
        "Apache",
        "Axis2",
        "security",
        "assessments",
        "clientfacing",
        "apps",
        "IT",
        "infrastructure",
        "database",
        "management",
        "systems",
        "middleware",
        "systems",
        "Linux",
        "Mainframe",
        "systems",
        "web",
        "services",
        "SOA",
        "security",
        "Developed",
        "Portlets",
        "user",
        "level",
        "interaction",
        "business",
        "logic",
        "automation",
        "environment",
        "build",
        "deployment",
        "configuration",
        "Portlets",
        "IBM",
        "websphere",
        "server",
        "ANT",
        "scripts",
        "XML",
        "Access",
        "scripts",
        "JACL",
        "scripts",
        "Spring",
        "Framework",
        "Dependency",
        "injection",
        "EJB",
        "annotations",
        "web",
        "service",
        "end",
        "Nodejs",
        "Expressjs",
        "application",
        "principles",
        "design",
        "patterns",
        "Business",
        "Delegate",
        "Session",
        "Faade",
        "Service",
        "Locator",
        "Data",
        "Access",
        "ObjectDAO",
        "Data",
        "Transfer",
        "Object",
        "Hibernate",
        "XML",
        "files",
        "beans",
        "business",
        "logic",
        "EJB",
        "DAO",
        "classes",
        "service",
        "layer",
        "classes",
        "Springservicexml",
        "XSLT",
        "style",
        "sheets",
        "XML",
        "data",
        "transformations",
        "midlayer",
        "transformations",
        "transformations",
        "HTML",
        "modules",
        "Nodejs",
        "designs",
        "requirements",
        "setup",
        "component",
        "migration",
        "Redux",
        "MongoDB",
        "Nodejs",
        "database",
        "JSON",
        "Nodejs",
        "way",
        "performance",
        "network",
        "application",
        "UNIX",
        "Shell",
        "scripts",
        "Cron",
        "jobs",
        "use",
        "content",
        "negotiation",
        "XML",
        "JSON",
        "textplain",
        "JAXB",
        "GSON",
        "Jackson",
        "XStream",
        "Technical",
        "evaluation",
        "architects",
        "Drools",
        "business",
        "rules",
        "engine",
        "Eclipse",
        "IDE",
        "Java",
        "development",
        "structures",
        "Mongo",
        "Data",
        "store",
        "JBoss",
        "Drools",
        "Investigate",
        "bugs",
        "defects",
        "code",
        "junit",
        "tests",
        "min",
        "code",
        "coverage",
        "services",
        "Jersey",
        "JAXRS",
        "Restlet",
        "party",
        "vendors",
        "source",
        "control",
        "eclipse",
        "Environment",
        "Solaris",
        "JSP",
        "JSF",
        "Spring",
        "Servlet",
        "Hibernate",
        "Node",
        "Js",
        "JMS",
        "JCA",
        "JMX",
        "XML",
        "CSS",
        "XML",
        "Schema",
        "JQUERY",
        "AJAX",
        "JSON",
        "JAXP",
        "SAX",
        "DOM",
        "JAXB",
        "Java",
        "Portlet",
        "Specifications",
        "JAXRPC",
        "SAAJ",
        "SOAP",
        "Java",
        "script",
        "PLSQL",
        "DHTML",
        "XHTML",
        "Maven",
        "Log4j",
        "JUnit",
        "Drools",
        "Weblogic",
        "Oracle",
        "9i",
        "RDBMS",
        "Mercury",
        "Quality",
        "Center",
        "Eclipse",
        "JavaJ2ee",
        "Developer",
        "Bayer",
        "Healthcare",
        "November",
        "November",
        "web",
        "application",
        "J2EE",
        "architecture",
        "access",
        "outpatient",
        "data",
        "Data",
        "Repository",
        "Users",
        "update",
        "data",
        "data",
        "clinicians",
        "Data",
        "Repository",
        "data",
        "decisions",
        "Data",
        "Repository",
        "modules",
        "application",
        "project",
        "company",
        "data",
        "health",
        "policy",
        "decisions",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "struts",
        "form",
        "action",
        "classes",
        "JSPs",
        "Struts",
        "framework",
        "standards",
        "presentation",
        "layer",
        "Struts",
        "JavaScript",
        "Developed",
        "Action",
        "classes",
        "Dyna",
        "Action",
        "Forms",
        "Validation",
        "framework",
        "EJB",
        "StatelessStateful",
        "session",
        "beans",
        "business",
        "logic",
        "session",
        "handling",
        "transaction",
        "Enterprise",
        "Java",
        "Beans",
        "Session",
        "Entity",
        "WebSphere",
        "Application",
        "Server",
        "Implement",
        "modules",
        "NodeJs",
        "designs",
        "requirements",
        "time",
        "tracking",
        "class",
        "schedules",
        "NodeJs",
        "socketio",
        "socket",
        "technology",
        "Express",
        "JS",
        "framework",
        "care",
        "MultiThreading",
        "java",
        "classeslibrary",
        "Java",
        "Scripts",
        "client",
        "side",
        "validations",
        "JQuery",
        "processing",
        "development",
        "maintenance",
        "web",
        "services",
        "IBM",
        "WebSphere",
        "Applications",
        "modeling",
        "time",
        "knowledge",
        "sharing",
        "project",
        "groups",
        "team",
        "meetings",
        "status",
        "update",
        "calls",
        "unit",
        "testing",
        "troubleshooting",
        "Modifying",
        "programs",
        "enhancements",
        "UNIX",
        "shell",
        "scripts",
        "jobs",
        "Entity",
        "Beans",
        "Bean",
        "Managed",
        "Persistence",
        "Entity",
        "Beans",
        "JDBC",
        "database",
        "DB2",
        "Linux",
        "environment",
        "application",
        "scripts",
        "jobs",
        "bugs",
        "bugs",
        "defects",
        "application",
        "part",
        "core",
        "team",
        "performance",
        "application",
        "troubleshooting",
        "error",
        "handling",
        "support",
        "projects",
        "Environment",
        "Jakarta",
        "Struts",
        "Framework",
        "Core",
        "Java",
        "Hibernate",
        "EJB",
        "Web",
        "Services",
        "CSS",
        "Eclipse",
        "CVS",
        "WebSphere",
        "Application",
        "Server",
        "JUnit",
        "UNIX",
        "JavaScript",
        "Servlets",
        "JSP",
        "JDBC",
        "JQuery",
        "DB2",
        "Java",
        "Developer",
        "Jpmc",
        "Kansas",
        "City",
        "MO",
        "October",
        "October",
        "JPMC",
        "banking",
        "services",
        "company",
        "investment",
        "banking",
        "asset",
        "management",
        "banking",
        "wealth",
        "management",
        "treasury",
        "securities",
        "services",
        "divisions",
        "expertise",
        "Analyze",
        "Design",
        "solutions",
        "enterprise",
        "level",
        "sign",
        "solutions",
        "finance",
        "application",
        "integration",
        "patterns",
        "Responsibilities",
        "post",
        "production",
        "support",
        "project",
        "business",
        "hours",
        "OOAD",
        "building",
        "applications",
        "business",
        "requirements",
        "project",
        "use",
        "Cases",
        "Class",
        "Diagrams",
        "Interacted",
        "Design",
        "team",
        "Business",
        "analyst",
        "users",
        "system",
        "sequence",
        "diagrams",
        "collaboration",
        "diagrams",
        "class",
        "diagrams",
        "usecases",
        "activity",
        "diagrams",
        "Rational",
        "Rose",
        "Configuration",
        "Cache",
        "Services",
        "project",
        "MVC",
        "design",
        "pattern",
        "end",
        "Struts",
        "framework",
        "business",
        "components",
        "EJBs",
        "Implementing",
        "Tiless",
        "framework",
        "layouts",
        "user",
        "web",
        "UI",
        "Struts",
        "JSP",
        "Servlets",
        "Custom",
        "tags",
        "Deployment",
        "Application",
        "JBoss",
        "Server",
        "environment",
        "ANT",
        "tool",
        "Struts",
        "architecture",
        "JSP",
        "Client",
        "Configured",
        "Struts",
        "Dyna",
        "Action",
        "Forms",
        "Message",
        "Resources",
        "Action",
        "Messages",
        "Action",
        "Errors",
        "Validationxml",
        "Validatorrulesxml",
        "Caching",
        "Logging",
        "service",
        "Singleton",
        "pattern",
        "Log4j",
        "action",
        "classes",
        "struts",
        "deployment",
        "descriptors",
        "strutsconfig",
        "ejbjar",
        "webxml",
        "XML",
        "frontend",
        "struts",
        "framework",
        "JSP",
        "JavaScript",
        "JSTL",
        "EL",
        "Custom",
        "Tag",
        "Tiles",
        "Validations",
        "struts",
        "framework",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "jQuery",
        "user",
        "Hibernate",
        "session",
        "factory",
        "spring",
        "techniques",
        "POJO",
        "classes",
        "data",
        "DAOs",
        "data",
        "database",
        "configurations",
        "EJB",
        "procedures",
        "packages",
        "PLSQL",
        "programs",
        "StrutsValidator",
        "framework",
        "frontend",
        "Validations",
        "form",
        "SOAP",
        "Web",
        "Services",
        "Enterprise",
        "Information",
        "System",
        "Tier",
        "Design",
        "development",
        "JAXB",
        "components",
        "transfer",
        "Prepared",
        "EJB",
        "deployment",
        "descriptors",
        "XML",
        "Configuration",
        "Usage",
        "Apache",
        "Log4J",
        "purposes",
        "Wrote",
        "Action",
        "Classes",
        "requests",
        "UI",
        "populate",
        "business",
        "EJBs",
        "JAXP",
        "DOM",
        "XSLT",
        "XSD",
        "XML",
        "data",
        "generation",
        "presentation",
        "Wrote",
        "Junit",
        "test",
        "classes",
        "services",
        "documentation",
        "Environment",
        "JavaJ2SE",
        "JSP",
        "Servlets",
        "Struts20",
        "Hibernate30",
        "XSLT",
        "DOM",
        "XML",
        "EJB",
        "Web",
        "Services",
        "JNDI",
        "J2EE5",
        "RSA",
        "CVS",
        "Oracle9i",
        "Junit",
        "Rational",
        "Rose",
        "JBoss",
        "Application",
        "Server",
        "JavaScript",
        "DHTML",
        "Java",
        "Developer",
        "Graylogic",
        "Technologie",
        "June",
        "September",
        "Description",
        "project",
        "J2EE",
        "framework",
        "report",
        "creation",
        "databases",
        "framework",
        "PDF",
        "report",
        "generation",
        "iText",
        "source",
        "PDF",
        "generation",
        "library",
        "framework",
        "report",
        "formats",
        "databases",
        "xml",
        "configuration",
        "files",
        "Responsibilities",
        "modules",
        "Client",
        "Server",
        "Side",
        "Developed",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "Responsible",
        "data",
        "client",
        "side",
        "JavaScript",
        "Server",
        "Side",
        "Java",
        "Servlet",
        "form",
        "data",
        "Server",
        "side",
        "Integration",
        "unit",
        "testing",
        "system",
        "testing",
        "stress",
        "testing",
        "phases",
        "project",
        "tables",
        "views",
        "Types",
        "join",
        "queries",
        "procedures",
        "functions",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "procedures",
        "functions",
        "JDBC",
        "statements",
        "installation",
        "project",
        "UNIX",
        "Shell",
        "scripts",
        "tasks",
        "Environment",
        "Java",
        "Servlets",
        "JSP",
        "JavaScript",
        "JDBC",
        "Unix",
        "Shell",
        "HTMLDHTML",
        "Eclipse",
        "Oracle",
        "WebLogic",
        "Windows",
        "NT",
        "Education",
        "Bachelors",
        "Skills",
        "HTML",
        "years",
        "Integration",
        "years",
        "INTEGRATOR",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "Additional",
        "Information",
        "AREAS",
        "EXPERTISE",
        "Web",
        "Application",
        "Development",
        "Software",
        "Development",
        "Project",
        "Coordination",
        "Program",
        "DesignImplementation",
        "Software",
        "Coding",
        "Web",
        "Programming",
        "Test",
        "Design",
        "Execution",
        "Software",
        "Implementation",
        "Requirements",
        "Management",
        "Unit",
        "Integration",
        "Testing",
        "Technology",
        "Integration",
        "Program",
        "Documentation",
        "SKILLS",
        "C",
        "C",
        "Java",
        "UML",
        "SQL",
        "PLSQL",
        "XSLT",
        "Perl",
        "Shell",
        "script",
        "Java",
        "Beans",
        "Servlets",
        "Applets",
        "JSP",
        "JDBC",
        "EJB",
        "JSF",
        "JMS",
        "RMI",
        "WebServices",
        "Struts122x",
        "Spring",
        "Hibernate2030323x",
        "CXF",
        "SQL",
        "server",
        "Oracle",
        "g",
        "Access",
        "MySQL",
        "DB2",
        "Cassandra",
        "HTML",
        "CSS",
        "JavaScript",
        "TypeScript",
        "AJAX",
        "JSON",
        "XML",
        "XSL",
        "XPATH",
        "XQuery",
        "jQuery",
        "Angular",
        "Reactjs",
        "Nodejs",
        "bootstrap",
        "Oracle",
        "WebLogic",
        "server",
        "g",
        "IBM",
        "Websphere",
        "6x7x",
        "JBOSS",
        "Application",
        "Server",
        "Apache",
        "Tomcat",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "WSAD50",
        "Jenkins",
        "Chef",
        "Puppet",
        "Docker",
        "EC2",
        "VPN",
        "Route",
        "RDS",
        "CLI",
        "DNS",
        "Dyamo",
        "DB",
        "MyEclipse",
        "Netbeans",
        "IDE",
        "Intellij",
        "Dreamweaver",
        "Brackets",
        "FireBug",
        "IE",
        "Tester",
        "Chrome",
        "Element",
        "Inspector",
        "Junit",
        "JIRABugzilla",
        "CVS",
        "SVN",
        "GIT",
        "Rational",
        "Clear",
        "Case",
        "PVCS",
        "Agile",
        "Methodology",
        "Waterfall",
        "ANT",
        "Maven",
        "Gradle",
        "Log4j",
        "HQL",
        "MS",
        "Vision",
        "Window2000XPVista7",
        "UNIX",
        "Type",
        "script"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:13:32.424437",
    "resume_data": "Sr Java Full Stack Developer Srspan lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Ge Healthcare Waukesha WI Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC and familiarity of Service Oriented Architecture SOA Expert in methodologies like Agile SCRUM TDD Waterfall Scrum Iteration and Pair Programming and proficient in developing UMLVisio diagrams using case tools like Enterprise Architect Visio and Rational Rose Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Spring Ribbon Spring Netflix Zuul Experience on design patterns such as Session Facade Business Delegate Adaptor Bean Factory Singleton Front Controller Data Access Object Service Locator MVC and Data Transfer Object Experience in developing Web based UIs using JSP HTML DHTML CSS JavaScript and its data representation format like JSON Angular JS Action Script DOJO jQuery Backbone JS Bootstrap EXT JS and Ajax Experienced in Full stack UI technologies using Grunt js Gulp Server for Angular and experienced in working with Spring JDBC Templates JMS Templates Spring EAI and Spring Rest Templates Strong understanding of Microservices Design Patterns Circuit BreakerHystrix DTD Aggregator Proxy Chaining and expertise in XML technologies like XSL XSLT XPATH and parsers like JAXP SAX DOM and JAXB Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Worked on creating Docker images Containers pushpull and on integration with Spring Boot and experienced with messaging systems like Kafka Kafka event sourcing Expertise with tools like SQL Workbench SQL Developer and TOAD tool for accessing the Database server and Expertised in Web Services architecture in RESTFUL and WSDL using JAXRPC Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Experience in working with NoSQL databases like MongoDB Cassandra and experienced in JUnit frame work with Mockito and Easy mock Spring Junit Runner Good Working knowledge of ANT MAVEN Gradle and Log4J and well experienced in using JUnit Log 4J Test NG and SOAP UI for testing framework Extensive experience in testing on multiple operating systems including UNIX Linux Sun Solaris and Windows Expertise in using configuration management tool like Rational Clear case CVS and Git for version controlling Experienced in IDEs such as Eclipse Rational Application Developer RAD NetBeans STS Intellij 14x15x Experienced in developing UNIX shell scripts for batch processing Perl and Python scripts Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Ability to communicate effectively with all levels of the organization such as technical management and customers and presented technical designs and strategies through daily operations meetings Work Experience Sr Java Full Stack Developer Ge Healthcare Waukesha WI May 2017 to Present GE Healthcare provides transformational medical technologies and services that are shaping a new age of patient care GE health Care board expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance solutions services help its customers to deliver better care to more people around the world at a lower cost Responsibilities Actively involving in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile Methodology in the SCRUM Cycle model Developed using new features of Java 8 like Lambda Expressions functional interfaces Stream API and Date API Worked with Core java concepts like Collections Framework Multithreading and Memory management Implemented application using design patterns such as Session Facade Adaptor Bean Factory and Singleton Implemented and developed UI components using Angular 4 features like dependency Injection Models data binding and controllers for devolving single page applications Developed Interactive web pages using Angular4 AJAX HTML CSS and JavaScript Involved in Angular4 Node JS HTML5 and CSS3 code optimization loading and cross browser compatibility Used Microservices architecture with Spring Boot Apache Kafka message broker deployed to AWS cloud Used Spring Core Annotations for Dependency Injection and Spring Boot for microservices Spring MVC Framework design pattern is used to have relationships between application components Developed Entity objects and used Hibernate the ORM tool to access persistent data from SQL Server Using Spring AOP Module to implement logging in the application for application status Spring Security is utilized with the help of Method Level Security by using AOP AspectOriented Programming and URL Level Security by using Servlet filters for web sockets Implement Spring Gateway API Zulu server to handle the load balance for all Restful MicroWebServices in different servers for all environments Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented REST based web services using JAXRS annotations and consumed using HTTP services Developed several REST which produces both XML and JSON to perform tasks leveraged by both web and mobile applications and RESTful using Jersey for JAXRS implementation Worked on creation of Docker container images tagging pushing images integrating Spring boot Created the Docker containers and Docker consoles for managing the application life cycle Utilized AWS Lambda platform to upload data into AWS S3buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Database development required creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and SQL tuning to reduce response time in the application Wrote SQL queries Stored procedures and enhanced performance by running explain plans Developed the data access classes using Hibernate and SQL queries to read and update data from the database as well as to connect database in the DAO implementation classes Developed Applications using Rule EnginesJBoss Drools Work flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Worked on MongoDB database concepts such as locking transactions indexes sharing replication and schema design Using JIRA to assign track report and audit the issues in the application Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with GitHub Jenkins Jobs Responsible for Continuous Integration CI and Continuous Delivery CD process implementation for database using Jenkins and UDeploy and tools like Jenkins Worked closely with QA team and fixed QA bugs with a quick turnaround time Executed test scripts and regression suite of JUnit using Mockito and analyzed the test results Used Log4j utility to generate runtime logs and NGNIX for reverse proxy server process to load balancing Environment Java18 J2EE Angular4 NodeJS jQuery CSS HTML5 AJAX Hibernate Web Services Spring Boot XML WSDL PLSQL MongoDB Docker AWS Cloud SwaggerUI Tomcat Maven Apache Kafka Log4j Mockito Junit Jenkins JIRA GitHub Sr Java Full Stack Developer Pnc Bank Philadelphia PA April 2016 to April 2017 The project Mortgage Loans involved developing clientserver architecture for accessingmanaging mortgage accounts online and providing credit and decision support solutions Supported mortgage types FRM ARM Equity etc Provided a variety of online services like application processing and evaluated user eligibility for a mortgage calculators to figure out different loan scenarios Responsibilities Involved in various SDLC phases like requirement gathering Design Analysis and Code development Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used message brokers such as RabbitMQ Used JAXB parser for marshaling and unmarshaling Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins And deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins Environment Java J2EE JDK HTML CSS Bootstrap AJAX JavaScript JSF 21 Spring Dependency Injection Spring 3x Hibernate Soap UI Maven SVN XML SOAP web service PCF RabbitMQ JBoss PLSQL Oracle 11g JIRA Mockito Java Full Stack Developer American Family Insurance Madison WI December 2014 to March 2016 Project is an Online Auto Insurance Sales tool used to estimate the quote calculate the premium as per state rules and sell the quote to customers Customers can access this tool and buy insurance online Sales tool Rewrite project is an enhancement and Integration project with the following major business requirements Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questionsresponses necessary to provide a quote premium sales Responsibilities Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using IBM Rational Rose and RUP Used Rational Application Developer RAD as Java IDE tool for creating JSPs Servlets EJBs and XML Design and implemented the backend layer using Hibernate Developed the application front end and validations using Java Server Faces JSF Develop named HQL queries and Criteria queries for use in application Implemented transaction management for ORM project using Spring Transaction Management API Created Stored Procedures and other SQL scripts using PLSQL Implemented logging using log4j and Spring AOP Configuring the service on WeblogicWAS application server for successful deployment Created JSON files showing changed data records only VBNET Developed server side JavaScript using Node JS Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate Applied design patterns including MVC Pattern Faade Pattern Abstract Factory Pattern DAO Pattern and Singleton Developed a core component of Analytics with Node JS and AngularJS Extensively used JMX API for management and monitoring solutions Involved in developing front end screens using JSP JSTL DHTML HTML CSS AJAX JavaScript Developed Web services to allow communication between applications through SOAP over HTTP using Apache Axis2 Performed security assessments for the clientfacing apps The associated IT infrastructure such as database management systems middleware systems Linux and Mainframe systems web services SOA were also included in the security assessments Developed Portlets for user level interaction and encapsulating the business logic Developed the automation environment for build deployment and configuration of Portlets onto the IBM websphere portal server using ANT scripts XML Access scripts and JACL scripts Used Spring Framework for Dependency injection and integrated with the EJB 30 using annotations Developed RESTful web service at back end by using Nodejs and Expressjs Implemented the application using the concrete principles laid down by several design patterns such as Business Delegate Session Faade Service Locator Data Access ObjectDAO and Data Transfer Object Generated Hibernate XML files for the configured beans The business logic was written in EJB DAO classes and the service layer classes were configured in Springservicexml XSLT style sheets for the XML data transformations that included both midlayer transformations XML to XML and final transformations XML to HTML Implemented modules into Nodejs to integrate with designs and requirements Implemented Initial setup and component migration to Redux Used MongoDB along with Nodejs as a database to store JSON Used Nodejs to offer an easy and safe way to build high performance and scalable network application Worked on UNIX Shell scripts and Cron jobs Made use of content negotiation XML JSON textplain using JAXB GSON Jackson and XStream Technical evaluation with the architects for Drools business rules engine and Eclipse IDE for Java development Designed structures for Mongo Data store and processing JBoss Drools as ruleengine Investigate debug and fixed potential bugs or defects in the implemented code Implemented junit tests and mandated 90 min code coverage Developed RESTful services using Jersey JAXRS and Restlet to call third party vendors Used source control used as plugin in eclipse Environment Solaris JSP JSF Spring Servlet Hibernate Node Js JMS JCA JMX XML CSS XML Schema AJAX JQUERY AJAX JSON JAXP SAX DOM JAXB Java Portlet Specifications JAXRPC SAAJ SOAP Java script PLSQL DHTML XHTML Maven Log4j JUnit Drools Weblogic 80 Oracle 9i RDBMS Mercury Quality Center 90 Eclipse 32 JavaJ2ee Developer Bayer Healthcare November 2013 to November 2014 This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Created struts form beans action classes JSPs following Struts framework standards Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJs to integrate with designs and requirements Developed real time tracking of class schedules using NodeJs socketio based on socket technology Express JS framework Taken care of java MultiThreading in common java classeslibrary Extensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing Involved in development maintenance of various web services using IBM WebSphere to interact with other Applications Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB2 Worked on Linux environment for deploying the application running scripts for jobs Involved in fixing bugs the bugs or defects in the application Worked as the part of a core team to monitor and enhance the performance of the application Provided troubleshooting and error handling support in multiple projects Environment Jakarta Struts Framework 2x Core Java Hibernate 30 EJB Web Services CSS NodeJs Eclipse CVS WebSphere Application Server 65 JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Jpmc Kansas City MO October 2011 to October 2013 JPMC is an American multinational banking and financial services holding company it is used by the investment banking asset management private banking private wealth management and treasury securities services divisions My expertise involves Analyze Design and developing crosscutting and complex technological solutions for the enterprise level single sign on solutions and online finance application integration patterns Responsibilities Provide post production support for the project during business hours Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Interacted coordinated with the Design team Business analyst and end users of the system Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern Developed front end using Struts framework business components using EJBs Implementing Tiless based framework to present the layouts to the user Created the web UI using Struts JSP Servlets and Custom tags Deployment of Application in the JBoss Server environment using ANT tool using Struts architecture with the JSP Client Configured Struts Dyna Action Forms Message Resources Action Messages Action Errors Validationxml and Validatorrulesxml Designed and developed Caching and Logging service using Singleton pattern Log4j Coded different action classes in struts responsible for maintaining deployment descriptors like strutsconfig ejbjar and webxml using XML Designed and developed frontend using struts framework Used JSP JavaScript JSTL EL Custom Tag libraries Tiles and Validations provided by struts framework Used HTML CSS JavaScript AJAX and jQuery for building rich user interfaces Configured Hibernate session factory using spring applicationcontextXML Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using EJB 30 Developed stored procedures and complex packages extensively using PLSQL and shell programs Used StrutsValidator framework for all frontend Validations for all the form entries Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Design and development of JAXB components for transfer objects Prepared EJB deployment descriptors using XML Involved in Configuration and Usage of Apache Log4J for logging and debugging purposes Wrote Action Classes to service the requests from the UI populate business objects invoke EJBs Used JAXP DOM XSLT XSD for XML data generation and presentation Wrote Junit test classes for the services and prepared documentation Environment JavaJ2SE 15 JSP Servlets Struts20 Hibernate30 JAXB20 XSLT DOM XML EJB 30 Web Services JNDI J2EE5 RSA CVS Oracle9i Junit Rational Rose JBoss Application Server 51 JavaScript DHTML Java Developer Graylogic Technologie June 2010 to September 2011 Description This project involves developing a J2EE based framework to support dynamic report creation from various distributed databases The framework supports dynamic PDF report generation using iText an open source PDF generation library The framework facilitates new report formats and databases by using xml configuration files Responsibilities Involved in designing and developing modules at both Client and Server Side Developed Servlets and Java Server Pages JSP Responsible for validating the data at the client side using JavaScript Involved in developing Server Side Java Servlet to capture the posted form data and process it on the Server side Responsible for Integration unit testing system testing and stress testing for all the phases of project Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Accessed stored procedures and functions using JDBC Callable statements Executed and coordinated the installation for the project Developed and wrote UNIX Shell scripts to automate various tasks Environment Java Servlets JSP JavaScript JDBC Unix Shell scripting HTMLDHTML Eclipse 33 Oracle 8i WebLogic 8 Windows NT Education Bachelors Skills HTML 7 years Integration 7 years INTEGRATOR 7 years Java 8 years JavaScript 8 years Additional Information AREAS OF EXPERTISE Web Application Development Software Development Project Coordination Program DesignImplementation Software Coding Web Programming Test Design and Execution Software Implementation Requirements Management Unit and Integration Testing Technology Integration Program Documentation SKILLS C C Java UML SQL PLSQL XSLT Perl Shell script Java Beans Servlets Applets JSP JDBC EJB JSF JMS RMI WebServices SOAP RESTful Struts122x Spring 202530314x Hibernate2030323x CXF AXIS SQL server 2005 Oracle 8i9i10g Access MySQL DB2 MongoDB Cassandra HTML CSS JavaScript TypeScript AJAX ExtJS JSON XML XSL XPATH XQuery jQuery Angular Reactjs Nodejs bootstrap Oracle WebLogic server 91010311g IBM Websphere 6x7x JBOSS Application Server 40516771 Apache Tomcat 556x7x8x Eclipse333435384243 Rational Application Developer RAD 678 WSAD50 Jenkins Chef Puppet Docker EC2 VPN Route 53 RDS CLI DNS Dyamo DB MyEclipse Netbeans IDE Intellij Dreamweaver Brackets FireBug IE Tester Chrome Element Inspector Junit JIRABugzilla CVS SVN GIT Rational Clear Case PVCS Agile Methodology Waterfall ANT Maven Gradle Log4j HQL MS Vision Window2000XPVista7 UNIX Type script",
    "unique_id": "4eb649bf-f455-4d81-a372-d2e211b497be"
}