{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Johnson Johnson New Jersey Fremont CA Over 5 years of experience in full software development life cycle including requirement analysis design coding testing debugging and maintenance Proficient in NoSQL transactional databases like Cassandra Mongo dB and big data technologies like SparkStorm Kafka and Hadoop Map Reduce Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Experience in JavaScript Unit testing with Jasmine Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Experience in developing Restful microservices and deployment in the AWS Cloud using spring boot and Spring Cloud Experienced in using Jenkins as a Continuous Integration server to configure with GitHub and Maven Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway Cloudwatch CloudFormation and Elastic Beanstalk Experience in writing the SQL queries in Oracle MYSQL and SQL Server Experience with amazon web services AWS and amazon cloud technologies such as Amazon EC2 virtual servers Amazon Cloud Watch monitoring Developed webbased enterprise applications using core Java J2EE Servlets JSP EJB JMS JDBC Hibernate Web Services SOAP and REST MVC framework Struts Spring MVC SQL and ObjectOriented Programming techniques Experience in Developing User Interface UI Rich Web Applications and Web Service Applications using Front EndUser Interface UI Technologies like Object Oriented JavaScript Type Script Angular JS Node JS Bootstrap Media Queries CSS Frameworks Java Experience with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Extensive knowledge and onhands experience in serverside programming using JSP Servlets RESTful and SOAP Services Developed Microservices using Spring Boot and deploying Microservices into AWS cloud using Jenkins Expert in setting up Kafka cluster security using Kerberos or SSL and SASL and knowledge of latest development approaches including applications in Spark using Scala Good knowledge on creating Data Pipelines in Spark using Scala Experience of Angular JS to interact with a web service to render the page from data returned from the service Experience in using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Complete understanding of the DevOps process with continuous integration using Jenkins JIRA GIT Docker Ansible Nagios CHEF Used Java Messaging Services JMS Spring Rabbit MQ and Apache Kafka for reliable and asynchronous exchange of important information such as payment status report Experience with multiple web and application Servers like Apache Tomcat IBM Web Sphere Oracle Web Logic Glass fish and JBoss Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Wrote lambda functions that validates and provides authorization to the logged in user to upload or download the file Experience working with standard Java Design Patterns MVC Singleton Session Facade DAO Factory Business Delegate Value Object Front Controller Strong experience in developing the clientserverbased applications using Oracle Rational Database Management System Experience in developing a data pipeline through KafkaSpark API Springkafka and Confluent Kafka KAFKA APIs KAFKA CONNECT KAFKA STREAMS Authorized to work in the US for any employer Work Experience Java Developer Johnson Johnson New Jersey August 2018 to Present Developed code for Responsive web design in JavaScript using frameworks like Angularjs Reactjs Implemented Rest API Design Guidelines for the microservices Used Amazon Web Services AWS data store for storing the records prescriptions bills etc and accessed them using AWS SDK for Java utilizing NoSQL queries Developed Spark scripts by using Scala shell commands as per the requirement Developed API for using AWS Lambda to manage the servers and run the code in AWS Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Worked with Nodejs and similar backend Express web application frameworks Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Worked with NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Worked with core Java technologies like MultiThreading and synchronization Multithreading was used to process data in chunks to improve performance Used to oAuth 20 to secure the API requests Used Java MultiThreading part in backend component one thread will be running for each user Developed internal coding using JEE technologies based on the MVC Architecture Developed the REST services using oAuth Security Infrastructure in a secure way Implemented Business Logic using Java Spring MVC and Hibernate Used Kibana and Elastic search to identify the Kafka message failure scenarios Implemented reprocessing of failure messages in Kafka using offset id Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire objects of business classes Implemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Wrote application front end with HTML JSP Ajax jQuery and wrote custom JSP tags for rolebased sorting and filtering Developed softwares for AWS in Java 8 using Spring Framework 50 MySQL 56 AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Developed and execute Unit Test plans using Junit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Developed Error mail code in Scala which triggers mail to specified group when error occurs in processing the json file Java Developer PepsiCo Cookeville TN May 2017 to July 2018 Developed presentation layer using JSP HTML5 and CSS3JQuery Backbone JS and Angular JS Developed Bootstrap responsive web application pages using Angular 25 services components and directives for front end UI and consuming the Restful Web service API and made use of CRUD Services for effective use of Web services Used GIT to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch Developed REST API for test server for Express Router middlewarebased APIs with Mongo DB integration Implemented Microservices based Cloud Architecture utilizing Spring Boot Solved defects in the Java J2EE application running on a JBOSS J2EEweb server Worked with IBM Web Sphere Application Server Developer Tools for Eclipse by using lightweight set of tools to assemble develop and deploy Java EE Web 20 and mobile applications Used core java concepts like Collections multithreading while developing serverside services Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions Expertise in client scripting language and serverside scripting languages like Nodejs and used Bootstrap AngularJS Angular245 Developed Controller classes validations by using spring Framework Responsible for writing angular pages for client components Developed Spark scripts by using Scala shell commands as per the requirement Developed Spark core and SparkSQL scripts using Scala for faster data processing Used IBM MQ and IBM Broker is used for transferring the data across multiple applications Implemented backend services for a web application using NodeJS Typescript JavaScript and performed unit testing using chai mocha Used Maven tool for building and packaging the application Wrote SQL queries stored procedures and triggers to perform backend database operations by using DB2 database Played the role of J2EE Developer with heavy handson coding and entire SDLC Developed Test Engine Information stored PLSQL data stores and performs on the fly aggregation over queues for dashboard queries Migrating the legacy monolithic struts application to Micro services platform Design and developed Micro sites Aggregators and Micro services Reports the dynamic execution profile of your PLSQL program organized by subprogram calls Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Developed API for using AWS Lambda to manage the servers and run the code in AWS Implemented spring boot micro services to process the messages into the Kafka cluster setup Handled message flow using Apache Kafka Consumer API and Producer APIs to consume messages posted from downstream applications Java Developer DXC Technology TysonsVA November 2015 to March 2017 Coding to build REST MicroServices using Spring Cloud Oracle XSD JSON and Spring Config Built MicroServices using spring boot with continuous deployment and continuous integration using Jenkins Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Developed JUnit test framework and executed unit test cases by using JUNIT for fixes Hosted containers for both monolith microservices architecture and broke down the existing monolith application to microservices on AWS EC2 instance Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented OAuth as security for token generation in Google API Implemented authentication services using LDAP SSL OAuth OAuth 20 and SAML Extensive use of concurrency frameworks collections reflections IO framework and generics for multithreaded environment used core Java 7 and 8 Designed and developed Micro Services using MEAN Stack nodejs Mongo DB Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Enhanced and wrote stored procedures views Wrote SQL queries in Oracle for generating the reports Performed testing on the developer environment prior to passing on the module to the test team during integration Implemented using spring framework using Java JSP java script and CSS Implemented server business logic using Java and Design patterns and Developed user interfaces using JSP HTML and CSS Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions to handle the searching Developed the complete architecture of Prime link using spring frameworks Implemented Spring MVC Free marker component for locale support Worked as a J2EE Developer and involved in analysis of requirements the design development integration deployment and testing Developed camel routes to transfer data to Kafka Created Java based Kafka producers to capture livestream data into various Kafka topics Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Written Programs in Spark using Scala and Python for Data quality check Data analysis using Spark with Scala Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Lead major activities like promoting Docker Swarm Kubernetes to design imagescontainers for microservices architectures production Cloud SSL management AWS deployment automations",
    "entities": [
        "Micro Services",
        "Hosted",
        "API Integration",
        "Java and Design",
        "Nodejs",
        "Oracle Rational Database Management System",
        "JBoss Understanding",
        "ELB AutoScaling SNS SQS",
        "Developed Spark",
        "SASL",
        "Implemented Business Logic",
        "IBM",
        "Developed Error",
        "Amazon Web Services AWS",
        "REST MicroServices",
        "Express",
        "Scala Created",
        "Spring Cloud Oracle XSD JSON",
        "DevOps",
        "Apache Spark",
        "Amazon",
        "SparkStorm Kafka",
        "Hadoop File",
        "SQL Server",
        "Developed",
        "SparkSQL",
        "Kerberos",
        "CRUD Services",
        "Used IBM MQ",
        "Unit Test",
        "MultiThreading",
        "Apache Spark Wrote",
        "New Jersey",
        "Restful",
        "Struts Spring",
        "Lambda Expressions",
        "Quality Assurance",
        "JSP",
        "Front Controller MVC Business Delegate Data",
        "Micro",
        "Data Access Objects Developed",
        "AWS Console",
        "Implemented Microservices",
        "SSL",
        "ObjectOriented Programming",
        "Angular JS",
        "Spark",
        "GIT",
        "API",
        "US",
        "Jenkins JIRA",
        "AWS",
        "Oracle",
        "Producer",
        "Backbone JS",
        "Data Pipelines",
        "HBase Written Programs",
        "CSS Implemented",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "the MVC Architecture Developed the REST",
        "Express Router",
        "JavaScript Unit",
        "Spring Annotations Wrote",
        "Angularjs Reactjs Implemented Rest API Design Guidelines",
        "JUNIT",
        "Fremont",
        "HBase Worked",
        "JSP HTML5",
        "oAuth Security Infrastructure",
        "Maven",
        "lJavaspan",
        "KafkaSpark API Springkafka",
        "Bootstrap Media Queries CSS Frameworks Java",
        "boot micro services",
        "JavaScript",
        "Cisco",
        "UI",
        "JSP Servlets",
        "Continuous Integration",
        "Backbonejs React",
        "CSS",
        "Present Developed",
        "REST",
        "J2EE Developer",
        "MEAN Stack nodejs Mongo DB Neo4J Elastic",
        "UI Technologies",
        "JEE",
        "NoSQL",
        "Implemented Spring MVC Free",
        "KAFKA",
        "Oracle MYSQL"
    ],
    "experience": "Experience in JavaScript Unit testing with Jasmine Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Experience in developing Restful microservices and deployment in the AWS Cloud using spring boot and Spring Cloud Experienced in using Jenkins as a Continuous Integration server to configure with GitHub and Maven Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway Cloudwatch CloudFormation and Elastic Beanstalk Experience in writing the SQL queries in Oracle MYSQL and SQL Server Experience with amazon web services AWS and amazon cloud technologies such as Amazon EC2 virtual servers Amazon Cloud Watch monitoring Developed webbased enterprise applications using core Java J2EE Servlets JSP EJB JMS JDBC Hibernate Web Services SOAP and REST MVC framework Struts Spring MVC SQL and ObjectOriented Programming techniques Experience in Developing User Interface UI Rich Web Applications and Web Service Applications using Front EndUser Interface UI Technologies like Object Oriented JavaScript Type Script Angular JS Node JS Bootstrap Media Queries CSS Frameworks Java Experience with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Extensive knowledge and onhands experience in serverside programming using JSP Servlets RESTful and SOAP Services Developed Microservices using Spring Boot and deploying Microservices into AWS cloud using Jenkins Expert in setting up Kafka cluster security using Kerberos or SSL and SASL and knowledge of latest development approaches including applications in Spark using Scala Good knowledge on creating Data Pipelines in Spark using Scala Experience of Angular JS to interact with a web service to render the page from data returned from the service Experience in using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Complete understanding of the DevOps process with continuous integration using Jenkins JIRA GIT Docker Ansible Nagios CHEF Used Java Messaging Services JMS Spring Rabbit MQ and Apache Kafka for reliable and asynchronous exchange of important information such as payment status report Experience with multiple web and application Servers like Apache Tomcat IBM Web Sphere Oracle Web Logic Glass fish and JBoss Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Wrote lambda functions that validates and provides authorization to the logged in user to upload or download the file Experience working with standard Java Design Patterns MVC Singleton Session Facade DAO Factory Business Delegate Value Object Front Controller Strong experience in developing the clientserverbased applications using Oracle Rational Database Management System Experience in developing a data pipeline through KafkaSpark API Springkafka and Confluent Kafka KAFKA APIs KAFKA CONNECT KAFKA STREAMS Authorized to work in the US for any employer Work Experience Java Developer Johnson Johnson New Jersey August 2018 to Present Developed code for Responsive web design in JavaScript using frameworks like Angularjs Reactjs Implemented Rest API Design Guidelines for the microservices Used Amazon Web Services AWS data store for storing the records prescriptions bills etc and accessed them using AWS SDK for Java utilizing NoSQL queries Developed Spark scripts by using Scala shell commands as per the requirement Developed API for using AWS Lambda to manage the servers and run the code in AWS Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Worked with Nodejs and similar backend Express web application frameworks Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Worked with NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Worked with core Java technologies like MultiThreading and synchronization Multithreading was used to process data in chunks to improve performance Used to oAuth 20 to secure the API requests Used Java MultiThreading part in backend component one thread will be running for each user Developed internal coding using JEE technologies based on the MVC Architecture Developed the REST services using oAuth Security Infrastructure in a secure way Implemented Business Logic using Java Spring MVC and Hibernate Used Kibana and Elastic search to identify the Kafka message failure scenarios Implemented reprocessing of failure messages in Kafka using offset i d Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire objects of business classes Implemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Wrote application front end with HTML JSP Ajax jQuery and wrote custom JSP tags for rolebased sorting and filtering Developed softwares for AWS in Java 8 using Spring Framework 50 MySQL 56 AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Developed and execute Unit Test plans using Junit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Developed Error mail code in Scala which triggers mail to specified group when error occurs in processing the json file Java Developer PepsiCo Cookeville TN May 2017 to July 2018 Developed presentation layer using JSP HTML5 and CSS3JQuery Backbone JS and Angular JS Developed Bootstrap responsive web application pages using Angular 25 services components and directives for front end UI and consuming the Restful Web service API and made use of CRUD Services for effective use of Web services Used GIT to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch Developed REST API for test server for Express Router middlewarebased APIs with Mongo DB integration Implemented Microservices based Cloud Architecture utilizing Spring Boot Solved defects in the Java J2EE application running on a JBOSS J2EEweb server Worked with IBM Web Sphere Application Server Developer Tools for Eclipse by using lightweight set of tools to assemble develop and deploy Java EE Web 20 and mobile applications Used core java concepts like Collections multithreading while developing serverside services Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions Expertise in client scripting language and serverside scripting languages like Nodejs and used Bootstrap AngularJS Angular245 Developed Controller classes validations by using spring Framework Responsible for writing angular pages for client components Developed Spark scripts by using Scala shell commands as per the requirement Developed Spark core and SparkSQL scripts using Scala for faster data processing Used IBM MQ and IBM Broker is used for transferring the data across multiple applications Implemented backend services for a web application using NodeJS Typescript JavaScript and performed unit testing using chai mocha Used Maven tool for building and packaging the application Wrote SQL queries stored procedures and triggers to perform backend database operations by using DB2 database Played the role of J2EE Developer with heavy handson coding and entire SDLC Developed Test Engine Information stored PLSQL data stores and performs on the fly aggregation over queues for dashboard queries Migrating the legacy monolithic struts application to Micro services platform Design and developed Micro sites Aggregators and Micro services Reports the dynamic execution profile of your PLSQL program organized by subprogram calls Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Developed API for using AWS Lambda to manage the servers and run the code in AWS Implemented spring boot micro services to process the messages into the Kafka cluster setup Handled message flow using Apache Kafka Consumer API and Producer APIs to consume messages posted from downstream applications Java Developer DXC Technology TysonsVA November 2015 to March 2017 Coding to build REST MicroServices using Spring Cloud Oracle XSD JSON and Spring Config Built MicroServices using spring boot with continuous deployment and continuous integration using Jenkins Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Developed JUnit test framework and executed unit test cases by using JUNIT for fixes Hosted containers for both monolith microservices architecture and broke down the existing monolith application to microservices on AWS EC2 instance Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented OAuth as security for token generation in Google API Implemented authentication services using LDAP SSL OAuth OAuth 20 and SAML Extensive use of concurrency frameworks collections reflections IO framework and generics for multithreaded environment used core Java 7 and 8 Designed and developed Micro Services using MEAN Stack nodejs Mongo DB Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Enhanced and wrote stored procedures views Wrote SQL queries in Oracle for generating the reports Performed testing on the developer environment prior to passing on the module to the test team during integration Implemented using spring framework using Java JSP java script and CSS Implemented server business logic using Java and Design patterns and Developed user interfaces using JSP HTML and CSS Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions to handle the searching Developed the complete architecture of Prime link using spring frameworks Implemented Spring MVC Free marker component for locale support Worked as a J2EE Developer and involved in analysis of requirements the design development integration deployment and testing Developed camel routes to transfer data to Kafka Created Java based Kafka producers to capture livestream data into various Kafka topics Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Written Programs in Spark using Scala and Python for Data quality check Data analysis using Spark with Scala Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Lead major activities like promoting Docker Swarm Kubernetes to design imagescontainers for microservices architectures production Cloud SSL management AWS deployment automations",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Johnson",
        "Johnson",
        "New",
        "Jersey",
        "Fremont",
        "CA",
        "years",
        "experience",
        "software",
        "development",
        "life",
        "cycle",
        "requirement",
        "analysis",
        "design",
        "testing",
        "debugging",
        "maintenance",
        "Proficient",
        "NoSQL",
        "databases",
        "Cassandra",
        "Mongo",
        "data",
        "technologies",
        "SparkStorm",
        "Kafka",
        "Hadoop",
        "Map",
        "Reduce",
        "Expertise",
        "design",
        "development",
        "web",
        "enterprise",
        "applications",
        "Type",
        "technologies",
        "Scala",
        "Akka",
        "Play",
        "framework",
        "Slick",
        "Experience",
        "JavaScript",
        "Unit",
        "testing",
        "Jasmine",
        "Karma",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Backbone",
        "JS",
        "Experience",
        "microservices",
        "deployment",
        "AWS",
        "Cloud",
        "spring",
        "boot",
        "Spring",
        "Cloud",
        "Jenkins",
        "Continuous",
        "Integration",
        "server",
        "configure",
        "GitHub",
        "Maven",
        "Managed",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "bucket",
        "ELB",
        "AutoScaling",
        "SNS",
        "SQS",
        "AMI",
        "IAM",
        "Dynamo",
        "DB",
        "Elasticsearch",
        "Virtual",
        "Cloud",
        "VPC",
        "AWS",
        "Console",
        "API",
        "Integration",
        "Experience",
        "AWS",
        "services",
        "EC2",
        "EBS",
        "ELB",
        "S3",
        "SQS",
        "RDS",
        "DynamoDB",
        "Lambda",
        "API",
        "Gateway",
        "Cloudwatch",
        "CloudFormation",
        "Elastic",
        "Beanstalk",
        "Experience",
        "SQL",
        "queries",
        "Oracle",
        "MYSQL",
        "SQL",
        "Server",
        "Experience",
        "amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "cloud",
        "technologies",
        "Amazon",
        "EC2",
        "servers",
        "Amazon",
        "Cloud",
        "Watch",
        "enterprise",
        "applications",
        "core",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "EJB",
        "JMS",
        "JDBC",
        "Hibernate",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "MVC",
        "framework",
        "Struts",
        "Spring",
        "MVC",
        "SQL",
        "ObjectOriented",
        "Programming",
        "techniques",
        "Experience",
        "User",
        "Interface",
        "UI",
        "Rich",
        "Web",
        "Applications",
        "Web",
        "Service",
        "Applications",
        "Front",
        "EndUser",
        "Interface",
        "UI",
        "Technologies",
        "Object",
        "Oriented",
        "JavaScript",
        "Type",
        "Script",
        "Angular",
        "JS",
        "Node",
        "JS",
        "Bootstrap",
        "Media",
        "Queries",
        "CSS",
        "Frameworks",
        "Java",
        "Experience",
        "design",
        "management",
        "configuration",
        "troubleshooting",
        "production",
        "environments",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Apache",
        "HadoopHBase",
        "knowledge",
        "experience",
        "serverside",
        "programming",
        "JSP",
        "Servlets",
        "SOAP",
        "Services",
        "Developed",
        "Microservices",
        "Spring",
        "Boot",
        "Microservices",
        "AWS",
        "cloud",
        "Jenkins",
        "Expert",
        "Kafka",
        "cluster",
        "security",
        "Kerberos",
        "SSL",
        "SASL",
        "knowledge",
        "development",
        "approaches",
        "applications",
        "Spark",
        "Scala",
        "knowledge",
        "Data",
        "Pipelines",
        "Spark",
        "Scala",
        "Experience",
        "JS",
        "web",
        "service",
        "page",
        "data",
        "service",
        "Experience",
        "JavaScript",
        "Web",
        "application",
        "libraries",
        "Backbonejs",
        "React",
        "JS",
        "Ember",
        "JS",
        "Requirejs",
        "Knockout",
        "Angularjs",
        "bootstrap",
        "Google",
        "Web",
        "Toolkit",
        "understanding",
        "DevOps",
        "process",
        "integration",
        "Jenkins",
        "JIRA",
        "GIT",
        "Docker",
        "Ansible",
        "Nagios",
        "CHEF",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "Spring",
        "Rabbit",
        "MQ",
        "Apache",
        "Kafka",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "Experience",
        "web",
        "application",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "Sphere",
        "Oracle",
        "Web",
        "Logic",
        "Glass",
        "fish",
        "JBoss",
        "Understanding",
        "data",
        "technologies",
        "Apache",
        "Hive",
        "Kafka",
        "Hadoop",
        "Apache",
        "Spark",
        "Wrote",
        "lambda",
        "functions",
        "authorization",
        "user",
        "file",
        "Experience",
        "Java",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "Session",
        "Facade",
        "DAO",
        "Factory",
        "Business",
        "Delegate",
        "Value",
        "Object",
        "Front",
        "Controller",
        "Strong",
        "experience",
        "applications",
        "Oracle",
        "Rational",
        "Database",
        "Management",
        "System",
        "Experience",
        "data",
        "pipeline",
        "KafkaSpark",
        "API",
        "Springkafka",
        "Confluent",
        "Kafka",
        "KAFKA",
        "APIs",
        "KAFKA",
        "CONNECT",
        "KAFKA",
        "STREAMS",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Johnson",
        "Johnson",
        "New",
        "Jersey",
        "August",
        "Present",
        "code",
        "Responsive",
        "web",
        "design",
        "JavaScript",
        "frameworks",
        "Angularjs",
        "Reactjs",
        "Rest",
        "API",
        "Design",
        "Guidelines",
        "microservices",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "data",
        "store",
        "records",
        "prescriptions",
        "bills",
        "AWS",
        "SDK",
        "Java",
        "Developed",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "Developed",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "SparkStreaming",
        "applications",
        "data",
        "Kafka",
        "topics",
        "streams",
        "HBase",
        "Nodejs",
        "Express",
        "web",
        "application",
        "frameworks",
        "JSP",
        "HTML5",
        "CSS3",
        "JavaScript",
        "web",
        "pages",
        "presentation",
        "Layer",
        "application",
        "databases",
        "Cassandra",
        "MongoDB",
        "Apache",
        "Spark",
        "cluster",
        "management",
        "Apache",
        "Kafka",
        "system",
        "core",
        "Java",
        "technologies",
        "MultiThreading",
        "synchronization",
        "Multithreading",
        "data",
        "chunks",
        "performance",
        "oAuth",
        "API",
        "requests",
        "Java",
        "MultiThreading",
        "part",
        "component",
        "thread",
        "user",
        "coding",
        "JEE",
        "technologies",
        "MVC",
        "Architecture",
        "REST",
        "services",
        "oAuth",
        "Security",
        "Infrastructure",
        "way",
        "Business",
        "Logic",
        "Java",
        "Spring",
        "MVC",
        "Hibernate",
        "Kibana",
        "search",
        "Kafka",
        "message",
        "failure",
        "scenarios",
        "failure",
        "messages",
        "Kafka",
        "i",
        "d",
        "Dependency",
        "injection",
        "Spring",
        "services",
        "Spring",
        "controllers",
        "DAOs",
        "wire",
        "objects",
        "business",
        "classes",
        "DAO",
        "pattern",
        "data",
        "database",
        "Hibernate",
        "database",
        "operations",
        "database",
        "access",
        "statements",
        "business",
        "components",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "Injection",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "Annotations",
        "application",
        "end",
        "HTML",
        "JSP",
        "Ajax",
        "jQuery",
        "custom",
        "JSP",
        "tags",
        "softwares",
        "AWS",
        "Java",
        "Spring",
        "Framework",
        "MySQL",
        "AWS",
        "Aurora",
        "Lambda",
        "API",
        "Gateway",
        "S3",
        "SNS",
        "SQS",
        "EC2",
        "EBS",
        "Akamai",
        "WAF",
        "web",
        "application",
        "firewall",
        "Apache",
        "Tomcat",
        "web",
        "server",
        "design",
        "patterns",
        "Front",
        "Controller",
        "MVC",
        "Business",
        "Delegate",
        "Data",
        "Transfer",
        "Objects",
        "Data",
        "Access",
        "Unit",
        "Test",
        "plans",
        "Junit",
        "results",
        "Quality",
        "Assurance",
        "teams",
        "testing",
        "Developed",
        "Error",
        "mail",
        "code",
        "Scala",
        "mail",
        "group",
        "error",
        "json",
        "file",
        "Java",
        "Developer",
        "PepsiCo",
        "Cookeville",
        "TN",
        "May",
        "July",
        "presentation",
        "layer",
        "JSP",
        "HTML5",
        "CSS3JQuery",
        "Backbone",
        "JS",
        "Angular",
        "JS",
        "Developed",
        "Bootstrap",
        "web",
        "application",
        "pages",
        "Angular",
        "services",
        "components",
        "directives",
        "end",
        "UI",
        "Restful",
        "Web",
        "service",
        "API",
        "use",
        "CRUD",
        "Services",
        "use",
        "Web",
        "services",
        "GIT",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "Developed",
        "REST",
        "API",
        "test",
        "server",
        "Express",
        "Router",
        "APIs",
        "Mongo",
        "DB",
        "integration",
        "Microservices",
        "Cloud",
        "Architecture",
        "Spring",
        "Boot",
        "defects",
        "Java",
        "J2EE",
        "application",
        "JBOSS",
        "server",
        "IBM",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Developer",
        "Tools",
        "Eclipse",
        "set",
        "tools",
        "Java",
        "EE",
        "Web",
        "applications",
        "core",
        "concepts",
        "Collections",
        "serverside",
        "services",
        "fundamentals",
        "Java",
        "streams",
        "filters",
        "expressions",
        "Expertise",
        "client",
        "scripting",
        "language",
        "scripting",
        "languages",
        "Nodejs",
        "Bootstrap",
        "AngularJS",
        "Angular245",
        "Developed",
        "Controller",
        "classes",
        "validations",
        "spring",
        "Framework",
        "Responsible",
        "pages",
        "client",
        "components",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "Developed",
        "Spark",
        "core",
        "SparkSQL",
        "scripts",
        "Scala",
        "data",
        "processing",
        "IBM",
        "MQ",
        "IBM",
        "Broker",
        "data",
        "applications",
        "services",
        "web",
        "application",
        "NodeJS",
        "Typescript",
        "JavaScript",
        "unit",
        "testing",
        "chai",
        "mocha",
        "Maven",
        "tool",
        "building",
        "application",
        "Wrote",
        "SQL",
        "procedures",
        "triggers",
        "database",
        "operations",
        "DB2",
        "database",
        "role",
        "J2EE",
        "Developer",
        "handson",
        "coding",
        "SDLC",
        "Developed",
        "Test",
        "Engine",
        "Information",
        "PLSQL",
        "data",
        "stores",
        "fly",
        "aggregation",
        "queues",
        "dashboard",
        "queries",
        "struts",
        "application",
        "Micro",
        "services",
        "platform",
        "Design",
        "Micro",
        "sites",
        "Aggregators",
        "Micro",
        "services",
        "execution",
        "profile",
        "PLSQL",
        "program",
        "subprogram",
        "Developed",
        "Applications",
        "Angular",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "Annotations",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "spring",
        "boot",
        "micro",
        "services",
        "messages",
        "Kafka",
        "cluster",
        "setup",
        "message",
        "flow",
        "Apache",
        "Kafka",
        "Consumer",
        "API",
        "Producer",
        "APIs",
        "messages",
        "applications",
        "Java",
        "Developer",
        "DXC",
        "Technology",
        "November",
        "March",
        "Coding",
        "REST",
        "MicroServices",
        "Spring",
        "Cloud",
        "Oracle",
        "XSD",
        "JSON",
        "Spring",
        "Config",
        "MicroServices",
        "spring",
        "boot",
        "deployment",
        "integration",
        "Jenkins",
        "SQL",
        "Server",
        "data",
        "database",
        "Levels",
        "SQL",
        "queries",
        "JDBC",
        "interactions",
        "data",
        "sources",
        "Kafka",
        "data",
        "Hadoop",
        "File",
        "system",
        "data",
        "MongoDB",
        "database",
        "Developed",
        "JUnit",
        "test",
        "framework",
        "unit",
        "test",
        "cases",
        "JUNIT",
        "fixes",
        "containers",
        "monolith",
        "microservices",
        "architecture",
        "monolith",
        "application",
        "microservices",
        "AWS",
        "EC2",
        "instance",
        "RESTHTTP",
        "APIs",
        "data",
        "formats",
        "API",
        "versioning",
        "strategy",
        "OAuth",
        "security",
        "generation",
        "Google",
        "API",
        "authentication",
        "services",
        "LDAP",
        "SSL",
        "OAuth",
        "OAuth",
        "use",
        "concurrency",
        "frameworks",
        "collections",
        "IO",
        "framework",
        "generics",
        "environment",
        "core",
        "Java",
        "Micro",
        "Services",
        "MEAN",
        "Stack",
        "Mongo",
        "DB",
        "Neo4J",
        "search",
        "Cisco",
        "Cloud",
        "OpenStack",
        "Platform",
        "Enhanced",
        "procedures",
        "views",
        "Wrote",
        "SQL",
        "Oracle",
        "reports",
        "Performed",
        "testing",
        "developer",
        "environment",
        "module",
        "test",
        "team",
        "integration",
        "spring",
        "framework",
        "Java",
        "JSP",
        "java",
        "script",
        "CSS",
        "server",
        "business",
        "logic",
        "Java",
        "Design",
        "patterns",
        "user",
        "interfaces",
        "JSP",
        "HTML",
        "CSS",
        "fundamentals",
        "Java",
        "streams",
        "filters",
        "expressions",
        "architecture",
        "Prime",
        "link",
        "spring",
        "frameworks",
        "Spring",
        "MVC",
        "Free",
        "marker",
        "component",
        "locale",
        "support",
        "J2EE",
        "Developer",
        "analysis",
        "requirements",
        "design",
        "development",
        "integration",
        "deployment",
        "camel",
        "routes",
        "data",
        "Kafka",
        "Created",
        "Java",
        "Kafka",
        "producers",
        "livestream",
        "data",
        "Kafka",
        "topics",
        "SparkStreaming",
        "applications",
        "data",
        "Kafka",
        "topics",
        "streams",
        "HBase",
        "Written",
        "Programs",
        "Spark",
        "Scala",
        "Python",
        "Data",
        "quality",
        "check",
        "Data",
        "analysis",
        "Spark",
        "Scala",
        "Created",
        "JIRA",
        "projects",
        "departments",
        "JIRA",
        "projects",
        "activities",
        "Docker",
        "Swarm",
        "Kubernetes",
        "imagescontainers",
        "microservices",
        "production",
        "Cloud",
        "SSL",
        "management",
        "AWS",
        "deployment",
        "automations"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:04:22.704418",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Johnson Johnson New Jersey Fremont CA Over 5 years of experience in full software development life cycle including requirement analysis design coding testing debugging and maintenance Proficient in NoSQL transactional databases like Cassandra Mongo dB and big data technologies like SparkStorm Kafka and Hadoop Map Reduce Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Experience in JavaScript Unit testing with Jasmine Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Experience in developing Restful microservices and deployment in the AWS Cloud using spring boot and Spring Cloud Experienced in using Jenkins as a Continuous Integration server to configure with GitHub and Maven Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway Cloudwatch CloudFormation and Elastic Beanstalk Experience in writing the SQL queries in Oracle MYSQL and SQL Server Experience with amazon web services AWS and amazon cloud technologies such as Amazon EC2 virtual servers Amazon Cloud Watch monitoring Developed webbased enterprise applications using core Java J2EE Servlets JSP EJB JMS JDBC Hibernate Web Services SOAP and REST MVC framework Struts Spring MVC SQL and ObjectOriented Programming techniques Experience in Developing User Interface UI Rich Web Applications and Web Service Applications using Front EndUser Interface UI Technologies like Object Oriented JavaScript Type Script Angular JS Node JS Bootstrap Media Queries CSS Frameworks Java Experience with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Extensive knowledge and onhands experience in serverside programming using JSP Servlets RESTful and SOAP Services Developed Microservices using Spring Boot and deploying Microservices into AWS cloud using Jenkins Expert in setting up Kafka cluster security using Kerberos or SSL and SASL and knowledge of latest development approaches including applications in Spark using Scala Good knowledge on creating Data Pipelines in Spark using Scala Experience of Angular JS to interact with a web service to render the page from data returned from the service Experience in using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Complete understanding of the DevOps process with continuous integration using Jenkins JIRA GIT Docker Ansible Nagios CHEF Used Java Messaging Services JMS Spring Rabbit MQ and Apache Kafka for reliable and asynchronous exchange of important information such as payment status report Experience with multiple web and application Servers like Apache Tomcat IBM Web Sphere Oracle Web Logic Glass fish and JBoss Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Wrote lambda functions that validates and provides authorization to the logged in user to upload or download the file Experience working with standard Java Design Patterns MVC Singleton Session Facade DAO Factory Business Delegate Value Object Front Controller Strong experience in developing the clientserverbased applications using Oracle Rational Database Management System Experience in developing a data pipeline through KafkaSpark API Springkafka and Confluent Kafka KAFKA APIs KAFKA CONNECT KAFKA STREAMS Authorized to work in the US for any employer Work Experience Java Developer Johnson Johnson New Jersey August 2018 to Present Developed code for Responsive web design in JavaScript using frameworks like Angularjs Reactjs Implemented Rest API Design Guidelines for the microservices Used Amazon Web Services AWS data store for storing the records prescriptions bills etc and accessed them using AWS SDK for Java utilizing NoSQL queries Developed Spark scripts by using Scala shell commands as per the requirement Developed API for using AWS Lambda to manage the servers and run the code in AWS Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Worked with Nodejs and similar backend Express web application frameworks Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Worked with NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Worked with core Java technologies like MultiThreading and synchronization Multithreading was used to process data in chunks to improve performance Used to oAuth 20 to secure the API requests Used Java MultiThreading part in backend component one thread will be running for each user Developed internal coding using JEE technologies based on the MVC Architecture Developed the REST services using oAuth Security Infrastructure in a secure way Implemented Business Logic using Java Spring MVC and Hibernate Used Kibana and Elastic search to identify the Kafka message failure scenarios Implemented reprocessing of failure messages in Kafka using offset id Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire objects of business classes Implemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Wrote application front end with HTML JSP Ajax jQuery and wrote custom JSP tags for rolebased sorting and filtering Developed softwares for AWS in Java 8 using Spring Framework 50 MySQL 56 AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Developed and execute Unit Test plans using Junit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Developed Error mail code in Scala which triggers mail to specified group when error occurs in processing the json file Java Developer PepsiCo Cookeville TN May 2017 to July 2018 Developed presentation layer using JSP HTML5 and CSS3JQuery Backbone JS and Angular JS Developed Bootstrap responsive web application pages using Angular 25 services components and directives for front end UI and consuming the Restful Web service API and made use of CRUD Services for effective use of Web services Used GIT to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch Developed REST API for test server for Express Router middlewarebased APIs with Mongo DB integration Implemented Microservices based Cloud Architecture utilizing Spring Boot Solved defects in the Java J2EE application running on a JBOSS J2EEweb server Worked with IBM Web Sphere Application Server Developer Tools for Eclipse by using lightweight set of tools to assemble develop and deploy Java EE Web 20 and mobile applications Used core java concepts like Collections multithreading while developing serverside services Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions Expertise in client scripting language and serverside scripting languages like Nodejs and used Bootstrap AngularJS Angular245 Developed Controller classes validations by using spring Framework Responsible for writing angular pages for client components Developed Spark scripts by using Scala shell commands as per the requirement Developed Spark core and SparkSQL scripts using Scala for faster data processing Used IBM MQ and IBM Broker is used for transferring the data across multiple applications Implemented backend services for a web application using NodeJS Typescript JavaScript and performed unit testing using chai mocha Used Maven tool for building and packaging the application Wrote SQL queries stored procedures and triggers to perform backend database operations by using DB2 database Played the role of J2EE Developer with heavy handson coding and entire SDLC Developed Test Engine Information stored PLSQL data stores and performs on the fly aggregation over queues for dashboard queries Migrating the legacy monolithic struts application to Micro services platform Design and developed Micro sites Aggregators and Micro services Reports the dynamic execution profile of your PLSQL program organized by subprogram calls Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Developed API for using AWS Lambda to manage the servers and run the code in AWS Implemented spring boot micro services to process the messages into the Kafka cluster setup Handled message flow using Apache Kafka Consumer API and Producer APIs to consume messages posted from downstream applications Java Developer DXC Technology TysonsVA November 2015 to March 2017 Coding to build REST MicroServices using Spring Cloud Oracle XSD JSON and Spring Config Built MicroServices using spring boot with continuous deployment and continuous integration using Jenkins Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Developed JUnit test framework and executed unit test cases by using JUNIT for fixes Hosted containers for both monolith microservices architecture and broke down the existing monolith application to microservices on AWS EC2 instance Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented OAuth as security for token generation in Google API Implemented authentication services using LDAP SSL OAuth OAuth 20 and SAML Extensive use of concurrency frameworks collections reflections IO framework and generics for multithreaded environment used core Java 7 and 8 Designed and developed Micro Services using MEAN Stack nodejs Mongo DB Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Enhanced and wrote stored procedures views Wrote SQL queries in Oracle for generating the reports Performed testing on the developer environment prior to passing on the module to the test team during integration Implemented using spring framework using Java JSP java script and CSS Implemented server business logic using Java and Design patterns and Developed user interfaces using JSP HTML and CSS Used the fundamentals of Java 18 like parallel streams and filters through lambda expressions to handle the searching Developed the complete architecture of Prime link using spring frameworks Implemented Spring MVC Free marker component for locale support Worked as a J2EE Developer and involved in analysis of requirements the design development integration deployment and testing Developed camel routes to transfer data to Kafka Created Java based Kafka producers to capture livestream data into various Kafka topics Developed SparkStreaming applications to consume the data from Kafka topics and to insert the processed streams to HBase Written Programs in Spark using Scala and Python for Data quality check Data analysis using Spark with Scala Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Lead major activities like promoting Docker Swarm Kubernetes to design imagescontainers for microservices architectures production Cloud SSL management AWS deployment automations",
    "unique_id": "b9061696-f1a2-412e-a511-8f9d1207602f"
}