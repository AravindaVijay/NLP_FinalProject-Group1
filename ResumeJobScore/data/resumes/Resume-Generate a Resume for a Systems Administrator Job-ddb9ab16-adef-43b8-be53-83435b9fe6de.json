{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer UHG Minneapolis MN Around 8 years of IT Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Experienced in creating AWS IAM and Security Group in Public and Private Subnets in VPC Created AWS Route53 to route traffic between different regions Experience in writing Terraform scripts for AWS infrastructure Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Extended Testing framework by adding some helper classes and methods Good Knowledge in implementation of Python best Practices PEP8 Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Proficient in using editors Eclipse PyCharm PyScripter Notepad and Sublime Text while developing different applications Experienced in developing test automation framework with Python scripting Selenium Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Shares expertise throughout the organization and may provide user training for products Excellent in Business Analytics Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in team environment AUTHORIZED TO WORK IN UNITED STATES FOR ANY EMPLOYER Authorized to work in the US for any employer Work Experience Python Developer UHG Minneapolis MN March 2017 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Wells Fargo Mansfield MA November 2015 to February 2017 Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful MicroServices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer WPS Health Solutions Monona WI April 2015 to October 2015 Responsibilities Defining the scope of testing within the context of each release delivery To test Sirius Programmer Mobile Application on Android and iOS devices using See Test test automation tool Deploying and managing resour ces for testing Analyzing test requirements and developing test scripts Planning deploying and managing the testing effort for any given engagement Developing test automation framework using python and See Test APIs Developing Requirement Traceability Tool using python Coordinating with the development team for any assistance in issue reproduction and testing Executing test scripts using Visual Studio MTM and See Test tool Involved in Code reviews and Test Case reviews Prepare any risk mitigation plans if in case any delays are foreseen Training new joiners on test reporting test automation and test management Environment Python Pytest Pylint Microsoft Visual Studio Microsoft Test Manager See Test automation Tool and TFS Python Developer Par Pharmaceutical Montebello NY December 2013 to March 2015 Responsibilities Involved understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating graphics XML processing data exchange and business logic implementation Supported Apache Server on Linux Platform Installation and setting up PythonUnix test beds Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Write Automationtest python scripts to test Flex development exposure of Flex layout and navigation event handling popup dialogs menus and skinning used HTML CSS for frontend applications Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Responsible for analysis design development and integration of Market Risk applications with JAVA PYTHON Held meetings with client and worked all alone for the entire project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Provided technical and business knowledge to clients Analyzed data using Excel VBA scripts and Macros Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Managed requirements and tasks using JIRA Automate the outboundinbound EDI document to drop files in the client ftp server Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment MS Visio JIRA UML Python 27 Sublime text2IDE Windows 7 SQL Requests urllib urllib2 Beautiful soup Django Python Developer Schlumberger August 2010 to November 2013 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django 13 MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Bachelors Skills AJAX 3 years Amazon Elastic Compute Cloud 3 years AWS 3 years Bugzilla 3 years CSS 8 years Django 8 years EC2 3 years Git 3 years HTML 6 years JAVA 4 years JIRA 4 years jQuery 5 years Linux 8 years MySQL 4 years Oracle 3 years Python 8 years scripting 3 years SQL 3 years Subversion 3 years XML 4 years Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services PHP Javascript Android HTML 5 ASP Additional Information SKILLS DJANGO 7 years HTML 6 years PYTHON 8 years CSS 7 years LINUX 7 years Technical Skills Programming Languages C C Python35 27 SQL and Shell Scripting Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy Matplotlib Pickle Pyside SciPy wxPython PyTables pdb Frameworks Django Spark web2py pyramid Flask Mongodb Hadoop Big Data and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Version Control GIT GitHub SVN Protocols TCPIP HTTPHTTPS SNMP SMTP IDEs Development Tools NetBeans Android Studio Py Charm Eclipse and Sublime Text Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall Databases Access SQL Server MySQL Teradata Oracle Software packages MS Word Advanced MS Excel MS PowerPoint SQL Plus Reporting Tools SSRS Tableau MSWord and MSPowerPoint Operating systems LinuxUnix Windows Variants Cloud Environment AWS Services EC2 ELB VPC RDS AMI IAM Cloud formation S3 Cloud Operating Systems",
    "entities": [
        "Object Oriented Programming",
        "Spark Context",
        "Informatica",
        "Chef Implemented",
        "MN",
        "HTML AJAX CSS",
        "Android",
        "Macros Working",
        "UNIX",
        "Sublime Text",
        "LINUX Experienced",
        "Present Responsibilities Involved",
        "Amazon Web Services AWS",
        "ER",
        "Model View Control MVC",
        "Hadoop",
        "XML",
        "Used React JS",
        "Software Development Life Cycle SDLC",
        "csv",
        "the Performance of Stored Procedures and Queries Installed",
        "CSS Bootstrap Technologies",
        "Apache Spark",
        "PowerPoint SQL Plus Reporting Tools SSRS Tableau",
        "Bootstrap Working",
        "OpenSource Chef",
        "Cloudera Hadoop",
        "Bigdata Integration and Analytics",
        "See Test",
        "Oracle MySQL DB2 Proficient",
        "Flex",
        "Sirius Programmer Mobile Application",
        "JS Version",
        "LinuxUnix Windows Variants Cloud Environment AWS Services EC2",
        "Oracle Relational",
        "CSS Bootstrap",
        "Python REST API Frame",
        "Reengineered",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Flask Mongodb Hadoop Big Data",
        "Django",
        "Ops Works Build",
        "Git",
        "Virtual DOM React Props Lifecycle",
        "Firebug Web Services",
        "Amazon Elastic Compute Cloud",
        "Developed Serverside",
        "Linux",
        "Minneapolis",
        "Flask",
        "ASP Additional Information SKILLS",
        "TFS Python Developer Par Pharmaceutical Montebello",
        "Worked",
        "Shell Scripting",
        "HTML CSS jQuery",
        "RDS",
        "Teradata Hadoop connectors Hands",
        "SQLbased",
        "Azure Migrating",
        "AWS Chef",
        "MVC",
        "Python REST API Framework Involved",
        "Spark",
        "PythonDjango",
        "GIT",
        "Node JS",
        "HTML CSS",
        "Web Services",
        "Terraform",
        "US",
        "Sqoop",
        "QA",
        "See Test APIs Developing Requirement Traceability Tool",
        "Created",
        "AWS",
        "Glacier Bamboo ELB Load Balancers RDS SNS SWF",
        "Analyzed",
        "Used Circle CI",
        "Shell Scripting Python Libraries Python Django Flask Beautiful Soup httplib2",
        "JSX",
        "Sublime Text Application Tools Net Beans",
        "Python ORM Libraries",
        "Python Spring IOC Inversion",
        "SQL",
        "Django Migrations",
        "Amazon Web Services",
        "ELB VPC RDS AMI IAM Cloud",
        "lPythonspan",
        "Python Spring Security",
        "Firebug Web Services Python Developer Wells Fargo Mansfield",
        "See Test tool Involved",
        "Model View Control",
        "CICD",
        "Wrote",
        "MultiThreading Exception Handling",
        "the React States",
        "Pandas",
        "Python Integrated Development Environments",
        "ETL",
        "Visual Studio MTM",
        "Terraform Used Spark API",
        "MSWord",
        "CM",
        "EDI",
        "Djangos",
        "Android Visual Studio MySQL Deployment Tools Heroku Jenkins Tracking Tools Bugzilla",
        "Firebug Used JIRA",
        "Django Python Developer",
        "Test Case",
        "SVN",
        "CSS",
        "VBA",
        "Amazon Web Service",
        "Data",
        "Business Analytics Interpersonal",
        "UNITED STATES",
        "NoSQL",
        "EBS",
        "Operations",
        "JQuery",
        "Market Risk",
        "Node",
        "Validation Controls"
    ],
    "experience": "Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Experienced in creating AWS IAM and Security Group in Public and Private Subnets in VPC Created AWS Route53 to route traffic between different regions Experience in writing Terraform scripts for AWS infrastructure Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Extended Testing framework by adding some helper classes and methods Good Knowledge in implementation of Python best Practices PEP8 Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Proficient in using editors Eclipse PyCharm PyScripter Notepad and Sublime Text while developing different applications Experienced in developing test automation framework with Python scripting Selenium Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Shares expertise throughout the organization and may provide user training for products Excellent in Business Analytics Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in team environment AUTHORIZED TO WORK IN UNITED STATES FOR ANY EMPLOYER Authorized to work in the US for any employer Work Experience Python Developer UHG Minneapolis MN March 2017 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Wells Fargo Mansfield MA November 2015 to February 2017 Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful MicroServices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer WPS Health Solutions Monona WI April 2015 to October 2015 Responsibilities Defining the scope of testing within the context of each release delivery To test Sirius Programmer Mobile Application on Android and iOS devices using See Test test automation tool Deploying and managing resour ces for testing Analyzing test requirements and developing test scripts Planning deploying and managing the testing effort for any given engagement Developing test automation framework using python and See Test APIs Developing Requirement Traceability Tool using python Coordinating with the development team for any assistance in issue reproduction and testing Executing test scripts using Visual Studio MTM and See Test tool Involved in Code reviews and Test Case reviews Prepare any risk mitigation plans if in case any delays are foreseen Training new joiners on test reporting test automation and test management Environment Python Pytest Pylint Microsoft Visual Studio Microsoft Test Manager See Test automation Tool and TFS Python Developer Par Pharmaceutical Montebello NY December 2013 to March 2015 Responsibilities Involved understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating graphics XML processing data exchange and business logic implementation Supported Apache Server on Linux Platform Installation and setting up PythonUnix test beds Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Write Automationtest python scripts to test Flex development exposure of Flex layout and navigation event handling popup dialogs menus and skinning used HTML CSS for frontend applications Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Responsible for analysis design development and integration of Market Risk applications with JAVA PYTHON Held meetings with client and worked all alone for the entire project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Provided technical and business knowledge to clients Analyzed data using Excel VBA scripts and Macros Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Managed requirements and tasks using JIRA Automate the outboundinbound EDI document to drop files in the client ftp server Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment MS Visio JIRA UML Python 27 Sublime text2IDE Windows 7 SQL Requests urllib urllib2 Beautiful soup Django Python Developer Schlumberger August 2010 to November 2013 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django 13 MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Bachelors Skills AJAX 3 years Amazon Elastic Compute Cloud 3 years AWS 3 years Bugzilla 3 years CSS 8 years Django 8 years EC2 3 years Git 3 years HTML 6 years JAVA 4 years JIRA 4 years jQuery 5 years Linux 8 years MySQL 4 years Oracle 3 years Python 8 years scripting 3 years SQL 3 years Subversion 3 years XML 4 years Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services PHP Javascript Android HTML 5 ASP Additional Information SKILLS DJANGO 7 years HTML 6 years PYTHON 8 years CSS 7 years LINUX 7 years Technical Skills Programming Languages C C Python35 27 SQL and Shell Scripting Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy Matplotlib Pickle Pyside SciPy wxPython PyTables pdb Frameworks Django Spark web2py pyramid Flask Mongodb Hadoop Big Data and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Version Control GIT GitHub SVN Protocols TCPIP HTTPHTTPS SNMP SMTP IDEs Development Tools NetBeans Android Studio Py Charm Eclipse and Sublime Text Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall Databases Access SQL Server MySQL Teradata Oracle Software packages MS Word Advanced MS Excel MS PowerPoint SQL Plus Reporting Tools SSRS Tableau MSWord and MSPowerPoint Operating systems LinuxUnix Windows Variants Cloud Environment AWS Services EC2 ELB VPC RDS AMI IAM Cloud formation S3 Cloud Operating Systems",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "UHG",
        "Minneapolis",
        "MN",
        "years",
        "IT",
        "Experience",
        "testing",
        "standalone",
        "enterprise",
        "application",
        "software",
        "Python",
        "domains",
        "experience",
        "Python",
        "expertise",
        "tools",
        "developments",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "Jasy",
        "Scipy",
        "matplotlib",
        "Pickle",
        "PySide",
        "pythontwitter",
        "networks",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "com",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "Basic",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "knowledge",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "facets",
        "process",
        "tools",
        "SVN",
        "GIT",
        "PVCS",
        "Clear",
        "Case",
        "Clear",
        "Quest",
        "Perforce",
        "Cruise",
        "Control",
        "Jenkins",
        "Bamboo",
        "Chef",
        "Puppet",
        "AWS",
        "IAM",
        "Security",
        "Group",
        "Public",
        "Private",
        "Subnets",
        "VPC",
        "Created",
        "AWS",
        "Route53",
        "traffic",
        "regions",
        "Experience",
        "Terraform",
        "scripts",
        "AWS",
        "infrastructure",
        "DevOps",
        "methodologies",
        "infrastructure",
        "automation",
        "tools",
        "AWS",
        "Chef",
        "Terraform",
        "Used",
        "Spark",
        "API",
        "Cloudera",
        "Hadoop",
        "YARN",
        "analytics",
        "data",
        "Spark",
        "performance",
        "optimization",
        "algorithms",
        "Hadoop",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "Spark",
        "YARN",
        "ETL",
        "transformations",
        "tables",
        "Informatica",
        "Strong",
        "experience",
        "data",
        "Bigdata",
        "Integration",
        "Analytics",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "Kafka",
        "Storm",
        "Good",
        "Experience",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "Sound",
        "experience",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "Experience",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Pyramid",
        "web",
        "applications",
        "Extended",
        "Testing",
        "framework",
        "helper",
        "classes",
        "methods",
        "Good",
        "Knowledge",
        "implementation",
        "Python",
        "Practices",
        "PEP8",
        "Good",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "DB2",
        "Proficient",
        "editors",
        "Eclipse",
        "PyCharm",
        "PyScripter",
        "Notepad",
        "Sublime",
        "Text",
        "applications",
        "test",
        "automation",
        "framework",
        "Python",
        "Selenium",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "net",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Data",
        "analytics",
        "data",
        "Excel",
        "data",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "LINUX",
        "Shell",
        "Scripting",
        "UNIX",
        "Shares",
        "expertise",
        "organization",
        "user",
        "training",
        "products",
        "Excellent",
        "Business",
        "Analytics",
        "Interpersonal",
        "communication",
        "skills",
        "time",
        "management",
        "organization",
        "ability",
        "tasks",
        "team",
        "environment",
        "AUTHORIZED",
        "UNITED",
        "STATES",
        "EMPLOYER",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "UHG",
        "Minneapolis",
        "MN",
        "March",
        "Present",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Automated",
        "Regular",
        "AWS",
        "tasks",
        "snapshots",
        "creation",
        "Python",
        "scripts",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "servers",
        "Ubuntu",
        "Linux",
        "Windows",
        "AWS",
        "EC2",
        "OpenSource",
        "Chef",
        "server",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "configuration",
        "management",
        "Chef",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "integration",
        "database",
        "systems",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "NoSQL",
        "JavaScript",
        "JQuery",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "py",
        "Builder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "Python",
        "Developer",
        "Wells",
        "Fargo",
        "Mansfield",
        "MA",
        "November",
        "February",
        "Responsibilities",
        "server",
        "module",
        "issues",
        "enhancements",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "Django",
        "ORM",
        "module",
        "queries",
        "Load",
        "balancing",
        "ETL",
        "processes",
        "database",
        "performance",
        "ETL",
        "processing",
        "tools",
        "data",
        "Teradata",
        "HDFS",
        "Teradata",
        "Hadoop",
        "connectors",
        "Hands",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "provisioning",
        "knowledge",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Red",
        "shift",
        "Glacier",
        "Bamboo",
        "ELB",
        "Load",
        "Balancers",
        "RDS",
        "SNS",
        "SWF",
        "EBS",
        "etc",
        "Azure",
        "Migrating",
        "production",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Formation",
        "Code",
        "EBS",
        "Ops",
        "Works",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "stack",
        "provision",
        "machines",
        "clients",
        "Django",
        "API",
        "profiling",
        "techniques",
        "information",
        "Ansible",
        "Vagrant",
        "Docker",
        "application",
        "environments",
        "Python",
        "scripts",
        "car",
        "services",
        "Splunk",
        "performance",
        "server",
        "level",
        "problems",
        "Validation",
        "Controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "Object",
        "Oriented",
        "JavaScript",
        "Working",
        "QA",
        "Operations",
        "teams",
        "design",
        "data",
        "flow",
        "requirements",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "Developed",
        "Restful",
        "MicroServices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "Django",
        "queues",
        "data",
        "Sqoop",
        "data",
        "MySQL",
        "HDFS",
        "basis",
        "Circle",
        "CI",
        "integration",
        "delivery",
        "platform",
        "GIT",
        "Django",
        "Migrations",
        "database",
        "task",
        "python",
        "scripting",
        "CICD",
        "pipeline",
        "management",
        "releases",
        "Jira",
        "tasks",
        "performance",
        "recommendations",
        "team",
        "terms",
        "testing",
        "techniques",
        "testing",
        "tasks",
        "Environment",
        "Python",
        "27AWSDevops",
        "Django",
        "Django",
        "Rest",
        "Flask",
        "React",
        "Redux",
        "Circle",
        "CI",
        "Vagrant",
        "Splunk",
        "New",
        "Relic",
        "Server",
        "GitHub",
        "Ansible",
        "HTML5CSS",
        "PostgreSQL",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "S3",
        "EC2",
        "EBS",
        "PyCharm",
        "Microsoft",
        "Visual",
        "Code",
        "Linux",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Developer",
        "WPS",
        "Health",
        "Solutions",
        "Monona",
        "WI",
        "April",
        "October",
        "Responsibilities",
        "scope",
        "testing",
        "context",
        "release",
        "delivery",
        "Sirius",
        "Programmer",
        "Mobile",
        "Application",
        "Android",
        "devices",
        "See",
        "Test",
        "test",
        "automation",
        "tool",
        "Deploying",
        "ces",
        "test",
        "requirements",
        "test",
        "scripts",
        "Planning",
        "testing",
        "effort",
        "engagement",
        "test",
        "automation",
        "framework",
        "python",
        "Test",
        "APIs",
        "Requirement",
        "Traceability",
        "Tool",
        "python",
        "development",
        "team",
        "assistance",
        "issue",
        "reproduction",
        "test",
        "scripts",
        "Visual",
        "Studio",
        "MTM",
        "Test",
        "tool",
        "Code",
        "reviews",
        "Test",
        "Case",
        "reviews",
        "risk",
        "mitigation",
        "plans",
        "case",
        "delays",
        "joiners",
        "test",
        "reporting",
        "test",
        "automation",
        "test",
        "management",
        "Environment",
        "Python",
        "Pytest",
        "Pylint",
        "Microsoft",
        "Visual",
        "Studio",
        "Microsoft",
        "Test",
        "Manager",
        "Test",
        "automation",
        "Tool",
        "TFS",
        "Python",
        "Developer",
        "Par",
        "Pharmaceutical",
        "Montebello",
        "NY",
        "December",
        "March",
        "Responsibilities",
        "business",
        "process",
        "scope",
        "project",
        "position",
        "statement",
        "modules",
        "changes",
        "system",
        "web",
        "pages",
        "python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Apache",
        "Server",
        "Linux",
        "Platform",
        "Installation",
        "PythonUnix",
        "test",
        "beds",
        "usecase",
        "scenarios",
        "storyboards",
        "MS",
        "Word",
        "MS",
        "PowerPoint",
        "visualization",
        "application",
        "python",
        "scripts",
        "Flex",
        "development",
        "exposure",
        "Flex",
        "layout",
        "navigation",
        "event",
        "popup",
        "dialogs",
        "menus",
        "HTML",
        "CSS",
        "frontend",
        "applications",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "issues",
        "process",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "analysis",
        "design",
        "development",
        "integration",
        "Market",
        "Risk",
        "applications",
        "JAVA",
        "PYTHON",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "business",
        "knowledge",
        "clients",
        "data",
        "Excel",
        "VBA",
        "scripts",
        "Macros",
        "Working",
        "architect",
        "developers",
        "business",
        "issues",
        "system",
        "testers",
        "requirements",
        "requirements",
        "tasks",
        "JIRA",
        "Automate",
        "outboundinbound",
        "EDI",
        "document",
        "files",
        "client",
        "ftp",
        "server",
        "Data",
        "mapping",
        "data",
        "class",
        "diagrams",
        "ER",
        "diagrams",
        "SQL",
        "queries",
        "data",
        "Oracle",
        "database",
        "Environment",
        "MS",
        "Visio",
        "JIRA",
        "UML",
        "Python",
        "Sublime",
        "text2IDE",
        "Windows",
        "SQL",
        "Requests",
        "Beautiful",
        "soup",
        "Django",
        "Python",
        "Developer",
        "Schlumberger",
        "August",
        "November",
        "Responsibilities",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Design",
        "test",
        "deploy",
        "website",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "JQuery",
        "Java",
        "script",
        "manipulation",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "SVN",
        "CSS",
        "AJAX",
        "Bugzilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Education",
        "Bachelors",
        "Bachelors",
        "Skills",
        "AJAX",
        "years",
        "Amazon",
        "Elastic",
        "Compute",
        "Cloud",
        "years",
        "AWS",
        "years",
        "Bugzilla",
        "years",
        "CSS",
        "years",
        "Django",
        "years",
        "EC2",
        "years",
        "Git",
        "years",
        "HTML",
        "years",
        "years",
        "JIRA",
        "years",
        "jQuery",
        "years",
        "Linux",
        "years",
        "MySQL",
        "years",
        "Oracle",
        "years",
        "Python",
        "years",
        "years",
        "SQL",
        "years",
        "Subversion",
        "years",
        "XML",
        "years",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "NoSQL",
        "JavaScript",
        "JQuery",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "py",
        "Builder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "PHP",
        "Javascript",
        "Android",
        "HTML",
        "ASP",
        "Information",
        "SKILLS",
        "DJANGO",
        "years",
        "HTML",
        "years",
        "PYTHON",
        "years",
        "CSS",
        "years",
        "LINUX",
        "years",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "C",
        "C",
        "Python35",
        "SQL",
        "Shell",
        "Scripting",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Numpy",
        "Matplotlib",
        "Pickle",
        "Pyside",
        "SciPy",
        "wxPython",
        "PyTables",
        "pdb",
        "Frameworks",
        "Django",
        "Spark",
        "pyramid",
        "Flask",
        "Mongodb",
        "Hadoop",
        "Big",
        "Data",
        "CSS",
        "Bootstrap",
        "Technologies",
        "HTML",
        "CSS",
        "DOM",
        "SAX",
        "Java",
        "Script",
        "JQuery",
        "AJAX",
        "XML",
        "Angular",
        "JS",
        "Version",
        "Control",
        "GIT",
        "GitHub",
        "SVN",
        "Protocols",
        "HTTPHTTPS",
        "SNMP",
        "SMTP",
        "IDEs",
        "Development",
        "Tools",
        "NetBeans",
        "Android",
        "Studio",
        "Py",
        "Charm",
        "Eclipse",
        "Sublime",
        "Text",
        "Application",
        "Tools",
        "Net",
        "Beans",
        "Eclipse",
        "SE",
        "EE",
        "Android",
        "Visual",
        "Studio",
        "MySQL",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Tracking",
        "Tools",
        "Bugzilla",
        "JIRA",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Databases",
        "Access",
        "SQL",
        "Server",
        "MySQL",
        "Teradata",
        "Oracle",
        "Software",
        "MS",
        "Word",
        "Advanced",
        "MS",
        "Excel",
        "MS",
        "PowerPoint",
        "SQL",
        "Reporting",
        "Tools",
        "SSRS",
        "Tableau",
        "MSWord",
        "MSPowerPoint",
        "Operating",
        "systems",
        "LinuxUnix",
        "Windows",
        "Variants",
        "Cloud",
        "Environment",
        "AWS",
        "Services",
        "EC2",
        "ELB",
        "VPC",
        "RDS",
        "AMI",
        "IAM",
        "Cloud",
        "formation",
        "S3",
        "Cloud",
        "Operating",
        "Systems"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:26:46.425972",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer UHG Minneapolis MN Around 8 years of IT Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Experienced in creating AWS IAM and Security Group in Public and Private Subnets in VPC Created AWS Route53 to route traffic between different regions Experience in writing Terraform scripts for AWS infrastructure Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Extended Testing framework by adding some helper classes and methods Good Knowledge in implementation of Python best Practices PEP8 Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Proficient in using editors Eclipse PyCharm PyScripter Notepad and Sublime Text while developing different applications Experienced in developing test automation framework with Python scripting Selenium Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Shares expertise throughout the organization and may provide user training for products Excellent in Business Analytics Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in team environment AUTHORIZED TO WORK IN UNITED STATES FOR ANY EMPLOYER Authorized to work in the US for any employer Work Experience Python Developer UHG Minneapolis MN March 2017 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Wells Fargo Mansfield MA November 2015 to February 2017 Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful MicroServices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer WPS Health Solutions Monona WI April 2015 to October 2015 Responsibilities Defining the scope of testing within the context of each release delivery To test Sirius Programmer Mobile Application on Android and iOS devices using See Test test automation tool Deploying and managing resour ces for testing Analyzing test requirements and developing test scripts Planning deploying and managing the testing effort for any given engagement Developing test automation framework using python and See Test APIs Developing Requirement Traceability Tool using python Coordinating with the development team for any assistance in issue reproduction and testing Executing test scripts using Visual Studio MTM and See Test tool Involved in Code reviews and Test Case reviews Prepare any risk mitigation plans if in case any delays are foreseen Training new joiners on test reporting test automation and test management Environment Python Pytest Pylint Microsoft Visual Studio Microsoft Test Manager See Test automation Tool and TFS Python Developer Par Pharmaceutical Montebello NY December 2013 to March 2015 Responsibilities Involved understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating graphics XML processing data exchange and business logic implementation Supported Apache Server on Linux Platform Installation and setting up PythonUnix test beds Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Write Automationtest python scripts to test Flex development exposure of Flex layout and navigation event handling popup dialogs menus and skinning used HTML CSS for frontend applications Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Responsible for analysis design development and integration of Market Risk applications with JAVA PYTHON Held meetings with client and worked all alone for the entire project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Provided technical and business knowledge to clients Analyzed data using Excel VBA scripts and Macros Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Managed requirements and tasks using JIRA Automate the outboundinbound EDI document to drop files in the client ftp server Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment MS Visio JIRA UML Python 27 Sublime text2IDE Windows 7 SQL Requests urllib urllib2 Beautiful soup Django Python Developer Schlumberger August 2010 to November 2013 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django 13 MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Bachelors Skills AJAX 3 years Amazon Elastic Compute Cloud 3 years AWS 3 years Bugzilla 3 years CSS 8 years Django 8 years EC2 3 years Git 3 years HTML 6 years JAVA 4 years JIRA 4 years jQuery 5 years Linux 8 years MySQL 4 years Oracle 3 years Python 8 years scripting 3 years SQL 3 years Subversion 3 years XML 4 years Python Django Web Framework AWS HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services PHP Javascript Android HTML 5 ASP Additional Information SKILLS DJANGO 7 years HTML 6 years PYTHON 8 years CSS 7 years LINUX 7 years Technical Skills Programming Languages C C Python35 27 SQL and Shell Scripting Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy Matplotlib Pickle Pyside SciPy wxPython PyTables pdb Frameworks Django Spark web2py pyramid Flask Mongodb Hadoop Big Data and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Version Control GIT GitHub SVN Protocols TCPIP HTTPHTTPS SNMP SMTP IDEs Development Tools NetBeans Android Studio Py Charm Eclipse and Sublime Text Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall Databases Access SQL Server MySQL Teradata Oracle Software packages MS Word Advanced MS Excel MS PowerPoint SQL Plus Reporting Tools SSRS Tableau MSWord and MSPowerPoint Operating systems LinuxUnix Windows Variants Cloud Environment AWS Services EC2 ELB VPC RDS AMI IAM Cloud formation S3 Cloud Operating Systems",
    "unique_id": "ddb9ab16-adef-43b8-be53-83435b9fe6de"
}