{
    "clean_data": "Senior PythonMongoDB Developer Senior span lPythonspanMongoDB span lDeveloperspan Senior Python Developer with 10 years of experience in Software Development with expertise in design development and providing solutions for the clients Technical expertise in Python Mongo DB CORE Java J2EE technologies Servlet JSP JMS EJB WebServices SOAP and REST JDBC ORACLE DB2 IBM Websphere Oracle Weblogic XML UML Rational Rose JavaScript Strong experience in developing the RESTful APIS service using Python Flask framework Strong knowledge in MongoDB concepts CRUD operations and aggregation framework Experience in the design of Mongo DB database Indexing and Sharding Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experience in using Version Control Systems like GIT and CVS Exceptional handson experience on MultiThreading Collections Exceptions Garbage Collection concepts in Java and good knowledge on using jmapjstatjconsole tools for memory related statistics performance diagnosis Handson experience on application servers such as IBM Web Sphere Oracle Web logic Dynamo and web server like Apache Tomcat Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Strong knowledge in Object Oriented programming making code more flexible maintainable analyzing various performance or runtime complexities Excellent communication skills interpersonal skills selfmotivated quick learner team player Well versed with Quality Processes Procedures Experience in Planning Estimation and leading a team Worked on Waterfall Agile and Test Driven SDLC methodologies Work Experience Senior PythonMongoDB Developer Miami FL February 2015 to Present Project Description Media Acquisition exchange is the application used by the Finance and Accounting departments to scrub carrier reports usage and inventory and by the Fraud and Loss Prevention department to issue alert alarms and monitor usage The raw usage files are dropped at the FTP site on daily basis from different carriers for TracFone customers MAX system enriches the raw data calculate bank balance for voice text and data and then raise the alarms if there is any fraud in the usage Project Responsibilities Requirements Study of the Functional requirements received from the business team and perform Impact Analysis Involved in Developing a Restful service using Python Flask framework Developed the frontend and backend modules using Python on Django Web Framework with GIT Experienced in web applications development using Django Python Flask Python while using HTMLCSSJS for serverside rendered application Used the mongoimport command to load the huge data into the Database Developed the code with CRUD operations and aggregation framework to interact with the database Preparation of Shell scripts to perform testing of the application and to run the automated scripts to analyze the performance of the created database objects Senior PythonMongoDB Developer Moodys Investors Service New York NY June 2013 to January 2015 Project Description Banking FM system collect store and map financial data to the Moodys Chart of Accounts apply foreign exchange FX rates compute derived accounts and calculate the details of statements for derived organizations and periods The Banking FM system loads structured data after converting it to a common format It also allows data to be entered adjusted and approved using a custombuilt frontend application Banking FM product includes the Banking Statistical Supplement and Rating Committee Package as well as the capabilities to generate customized reports Project Responsibilities Analyzed database requirements in detail with the project stakeholders by conducting Joint Requirements Development sessions Developed a portal to manage the entities in the legacy system using Flask Designed the Mongo DB database for the financial system using the concepts of indexing and Sharding Wrote python scripts to parse XML documents and load the data in database Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Project Name BFM Reporting Data model Senior Python Developer Moodys Investors Service New York NY January 2012 to May 2013 Project Description To enhance the performance of the BFMo reports a denormalized form of model called as reporting data model is developed Previously the reporting includes a service layers of Java UI and Client Cognos BI reporting and DB2 stored procedures to retrieve the data based on the business logic and showcase on the different reports As interaction through Cognos and DB2 stored procedures was time and cost consuming Java services are designed in such a way that use the denormalized form of reporting data model to retrieve the data and use Aspose for reporting Project Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed and developed data management system using Oracle Built application logic using Python 27 Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Worked on development of SQL and stored procedures on Oracle Works with the supporting teams SCM and Middleware team to provide the deployment instructions and support the rollouts Python Developer Project Name ALIR May CA May 2008 to November 2010 Project Description The Auto Liability Insurance Reporting ALIR system used DRIF to obtain the data reported each state for liability insurance Due to problems associated with extracting data from DRIF such as quality type accuracy and timeliness it was obvious that the ALIR process required a complete rewrite The new ALIR process evolved by rewriting the programs that extract the data through DB2 stored procedures for each specific state in the ALIR system The APPS data is extracted and loaded in ALIR to transmit to Department of Motor Vehicles DMV Project Responsibilities Requirements Study on the Functional requirements received from business team and perform Impact Analysis Proposing Design solutions for the complex requirements in turn preparing the lowlevel design Application Development of Database objects triggers user defined functions and stored procedures Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Software Application Developer United Health Group August 2005 to May 2008 Physician United Health Group August 2005 to May 2008 Duration Aug 2005 to May 2008 Project Description Network Data Base is a system which maintains the data for UHG applications Contracted Par and NonContracted NonPar provider records are loaded for United Health Group All provider types including Physicians Physician groups Allied Health Professionals Ancillaries and Facilities are included in NDB Entry of all new provider records and maintenance to existing provider records will be performed in NDB NDB is a system whose data is fed via nightly Batch feed to COSMOS and UNET to correct Claims payment and printing of provider directories Project Responsibilities Receiving of incidents from the end users Working on the incidents based on the severity and priority of the tickets Monitoring of the jobs in the production so as to review the daily schedule of the jobs and run as per the dependencies Creation of change requests and working on them based on the size of the change required to resolve the incidents raised by the end users after the prioritization from business team Performs rigorous Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents",
    "entities": [
        "Flask Designed",
        "GIT",
        "FTP",
        "Python Flask",
        "Project Responsibilities Requirements Study",
        "CVS Exceptional",
        "Python Mongo DB",
        "the Banking Statistical Supplement",
        "Allied Health Professionals Ancillaries and Facilities",
        "CRUD",
        "UHG",
        "New York",
        "GIT Experienced",
        "Physician United Health Group",
        "Apache Tomcat Excellent",
        "Rating Committee Package",
        "Department of Motor Vehicles DMV Project Responsibilities Requirements Study",
        "Weblogic XML UML",
        "Present Project Description Media Acquisition",
        "Project Responsibilities Analyzed",
        "Loss Prevention",
        "Sharding Wrote",
        "Cognos",
        "Moodys Investors Service",
        "Project Description Network Data Base",
        "REST JDBC ORACLE DB2",
        "Finance",
        "OOAD",
        "ALIR",
        "Contracted Par",
        "Software Development Lifecycle SDLC",
        "FX",
        "The Auto Liability Insurance Reporting",
        "Planning Estimation",
        "DRIF",
        "Version Control Systems",
        "Python Developer Project Name",
        "Working",
        "NDB NDB",
        "IBM",
        "the Moodys Chart of Accounts apply foreign exchange",
        "Oracle Works",
        "TracFone",
        "Software Application Developer United Health Group",
        "fed",
        "APPS",
        "NonContracted",
        "United Health Group",
        "Application Development of Database",
        "SQL",
        "Oracle Built",
        "Project Responsibilities Receiving",
        "Quality Processes Procedures",
        "XML",
        "MultiThreading Collections Exceptions Garbage Collection",
        "Miami",
        "UNET",
        "HTMLCSSJS",
        "Performs Unit",
        "PHP",
        "Project Description",
        "MAX",
        "Joint Requirements Development",
        "Software Development",
        "Shell",
        "Project Description Banking FM",
        "Python 27 Expertise in Service Oriented Architecture SOA",
        "Handson"
    ],
    "experience": "Experience in the design of Mongo DB database Indexing and Sharding Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experience in using Version Control Systems like GIT and CVS Exceptional handson experience on MultiThreading Collections Exceptions Garbage Collection concepts in Java and good knowledge on using jmapjstatjconsole tools for memory related statistics performance diagnosis Handson experience on application servers such as IBM Web Sphere Oracle Web logic Dynamo and web server like Apache Tomcat Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Strong knowledge in Object Oriented programming making code more flexible maintainable analyzing various performance or runtime complexities Excellent communication skills interpersonal skills selfmotivated quick learner team player Well versed with Quality Processes Procedures Experience in Planning Estimation and leading a team Worked on Waterfall Agile and Test Driven SDLC methodologies Work Experience Senior PythonMongoDB Developer Miami FL February 2015 to Present Project Description Media Acquisition exchange is the application used by the Finance and Accounting departments to scrub carrier reports usage and inventory and by the Fraud and Loss Prevention department to issue alert alarms and monitor usage The raw usage files are dropped at the FTP site on daily basis from different carriers for TracFone customers MAX system enriches the raw data calculate bank balance for voice text and data and then raise the alarms if there is any fraud in the usage Project Responsibilities Requirements Study of the Functional requirements received from the business team and perform Impact Analysis Involved in Developing a Restful service using Python Flask framework Developed the frontend and backend modules using Python on Django Web Framework with GIT Experienced in web applications development using Django Python Flask Python while using HTMLCSSJS for serverside rendered application Used the mongoimport command to load the huge data into the Database Developed the code with CRUD operations and aggregation framework to interact with the database Preparation of Shell scripts to perform testing of the application and to run the automated scripts to analyze the performance of the created database objects Senior PythonMongoDB Developer Moodys Investors Service New York NY June 2013 to January 2015 Project Description Banking FM system collect store and map financial data to the Moodys Chart of Accounts apply foreign exchange FX rates compute derived accounts and calculate the details of statements for derived organizations and periods The Banking FM system loads structured data after converting it to a common format It also allows data to be entered adjusted and approved using a custombuilt frontend application Banking FM product includes the Banking Statistical Supplement and Rating Committee Package as well as the capabilities to generate customized reports Project Responsibilities Analyzed database requirements in detail with the project stakeholders by conducting Joint Requirements Development sessions Developed a portal to manage the entities in the legacy system using Flask Designed the Mongo DB database for the financial system using the concepts of indexing and Sharding Wrote python scripts to parse XML documents and load the data in database Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Project Name BFM Reporting Data model Senior Python Developer Moodys Investors Service New York NY January 2012 to May 2013 Project Description To enhance the performance of the BFMo reports a denormalized form of model called as reporting data model is developed Previously the reporting includes a service layers of Java UI and Client Cognos BI reporting and DB2 stored procedures to retrieve the data based on the business logic and showcase on the different reports As interaction through Cognos and DB2 stored procedures was time and cost consuming Java services are designed in such a way that use the denormalized form of reporting data model to retrieve the data and use Aspose for reporting Project Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed and developed data management system using Oracle Built application logic using Python 27 Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Worked on development of SQL and stored procedures on Oracle Works with the supporting teams SCM and Middleware team to provide the deployment instructions and support the rollouts Python Developer Project Name ALIR May CA May 2008 to November 2010 Project Description The Auto Liability Insurance Reporting ALIR system used DRIF to obtain the data reported each state for liability insurance Due to problems associated with extracting data from DRIF such as quality type accuracy and timeliness it was obvious that the ALIR process required a complete rewrite The new ALIR process evolved by rewriting the programs that extract the data through DB2 stored procedures for each specific state in the ALIR system The APPS data is extracted and loaded in ALIR to transmit to Department of Motor Vehicles DMV Project Responsibilities Requirements Study on the Functional requirements received from business team and perform Impact Analysis Proposing Design solutions for the complex requirements in turn preparing the lowlevel design Application Development of Database objects triggers user defined functions and stored procedures Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Software Application Developer United Health Group August 2005 to May 2008 Physician United Health Group August 2005 to May 2008 Duration Aug 2005 to May 2008 Project Description Network Data Base is a system which maintains the data for UHG applications Contracted Par and NonContracted NonPar provider records are loaded for United Health Group All provider types including Physicians Physician groups Allied Health Professionals Ancillaries and Facilities are included in NDB Entry of all new provider records and maintenance to existing provider records will be performed in NDB NDB is a system whose data is fed via nightly Batch feed to COSMOS and UNET to correct Claims payment and printing of provider directories Project Responsibilities Receiving of incidents from the end users Working on the incidents based on the severity and priority of the tickets Monitoring of the jobs in the production so as to review the daily schedule of the jobs and run as per the dependencies Creation of change requests and working on them based on the size of the change required to resolve the incidents raised by the end users after the prioritization from business team Performs rigorous Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents",
    "extracted_keywords": [
        "PythonMongoDB",
        "Developer",
        "Senior",
        "span",
        "lPythonspanMongoDB",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "years",
        "experience",
        "Software",
        "Development",
        "expertise",
        "design",
        "development",
        "solutions",
        "clients",
        "expertise",
        "Python",
        "Mongo",
        "DB",
        "CORE",
        "Java",
        "J2EE",
        "technologies",
        "Servlet",
        "JSP",
        "JMS",
        "EJB",
        "WebServices",
        "SOAP",
        "REST",
        "JDBC",
        "ORACLE",
        "DB2",
        "IBM",
        "Websphere",
        "Oracle",
        "Weblogic",
        "XML",
        "UML",
        "Rational",
        "Rose",
        "JavaScript",
        "Strong",
        "experience",
        "APIS",
        "service",
        "Python",
        "Flask",
        "knowledge",
        "MongoDB",
        "concepts",
        "CRUD",
        "operations",
        "aggregation",
        "framework",
        "Experience",
        "design",
        "Mongo",
        "DB",
        "database",
        "Indexing",
        "Sharding",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "Experience",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "CVS",
        "Exceptional",
        "handson",
        "experience",
        "MultiThreading",
        "Collections",
        "Exceptions",
        "Garbage",
        "Collection",
        "concepts",
        "Java",
        "knowledge",
        "tools",
        "memory",
        "statistics",
        "performance",
        "diagnosis",
        "Handson",
        "experience",
        "application",
        "servers",
        "IBM",
        "Web",
        "Sphere",
        "Oracle",
        "Web",
        "logic",
        "Dynamo",
        "web",
        "server",
        "Apache",
        "Tomcat",
        "Excellent",
        "experience",
        "SQL",
        "queries",
        "procedures",
        "knowledge",
        "Object",
        "programming",
        "code",
        "maintainable",
        "performance",
        "runtime",
        "complexities",
        "communication",
        "skills",
        "learner",
        "team",
        "player",
        "Quality",
        "Processes",
        "Procedures",
        "Experience",
        "Planning",
        "Estimation",
        "team",
        "Waterfall",
        "Agile",
        "Test",
        "SDLC",
        "methodologies",
        "Work",
        "Experience",
        "Senior",
        "PythonMongoDB",
        "Developer",
        "Miami",
        "FL",
        "February",
        "Present",
        "Project",
        "Description",
        "Media",
        "Acquisition",
        "exchange",
        "application",
        "Finance",
        "Accounting",
        "departments",
        "scrub",
        "carrier",
        "reports",
        "usage",
        "inventory",
        "Fraud",
        "Loss",
        "Prevention",
        "department",
        "alarms",
        "usage",
        "usage",
        "files",
        "FTP",
        "site",
        "basis",
        "carriers",
        "TracFone",
        "customers",
        "MAX",
        "system",
        "data",
        "bank",
        "balance",
        "voice",
        "text",
        "data",
        "alarms",
        "fraud",
        "usage",
        "Project",
        "Responsibilities",
        "Requirements",
        "Study",
        "requirements",
        "business",
        "team",
        "Impact",
        "Analysis",
        "service",
        "Python",
        "Flask",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "HTMLCSSJS",
        "serverside",
        "application",
        "command",
        "data",
        "Database",
        "code",
        "CRUD",
        "operations",
        "aggregation",
        "framework",
        "database",
        "Preparation",
        "Shell",
        "scripts",
        "testing",
        "application",
        "scripts",
        "performance",
        "database",
        "Senior",
        "PythonMongoDB",
        "Developer",
        "Moodys",
        "Investors",
        "Service",
        "New",
        "York",
        "NY",
        "June",
        "January",
        "Project",
        "Description",
        "Banking",
        "FM",
        "system",
        "store",
        "data",
        "Moodys",
        "Chart",
        "Accounts",
        "exchange",
        "FX",
        "rates",
        "accounts",
        "details",
        "statements",
        "organizations",
        "periods",
        "Banking",
        "FM",
        "system",
        "data",
        "format",
        "data",
        "custombuilt",
        "frontend",
        "application",
        "Banking",
        "FM",
        "product",
        "Banking",
        "Statistical",
        "Supplement",
        "Rating",
        "Committee",
        "Package",
        "capabilities",
        "reports",
        "Project",
        "Responsibilities",
        "database",
        "requirements",
        "detail",
        "project",
        "stakeholders",
        "Joint",
        "Requirements",
        "Development",
        "sessions",
        "portal",
        "entities",
        "legacy",
        "system",
        "Flask",
        "Mongo",
        "DB",
        "database",
        "system",
        "concepts",
        "indexing",
        "Sharding",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Unit",
        "Integration",
        "testing",
        "use",
        "cases",
        "requirement",
        "documents",
        "Collaborates",
        "value",
        "participation",
        "peer",
        "code",
        "reviews",
        "comments",
        "suggestions",
        "Project",
        "Name",
        "BFM",
        "Reporting",
        "Data",
        "model",
        "Senior",
        "Python",
        "Developer",
        "Moodys",
        "Investors",
        "Service",
        "New",
        "York",
        "NY",
        "January",
        "May",
        "Project",
        "Description",
        "performance",
        "BFMo",
        "form",
        "model",
        "data",
        "model",
        "reporting",
        "service",
        "layers",
        "Java",
        "UI",
        "Client",
        "Cognos",
        "BI",
        "reporting",
        "DB2",
        "procedures",
        "data",
        "business",
        "logic",
        "showcase",
        "reports",
        "interaction",
        "Cognos",
        "DB2",
        "procedures",
        "time",
        "cost",
        "Java",
        "services",
        "way",
        "form",
        "data",
        "model",
        "data",
        "Aspose",
        "Project",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "Oracle",
        "application",
        "logic",
        "Python",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "WSDLs",
        "SOAP11",
        "XML",
        "XSD",
        "XSLT",
        "development",
        "SQL",
        "procedures",
        "Oracle",
        "Works",
        "teams",
        "SCM",
        "Middleware",
        "team",
        "deployment",
        "instructions",
        "rollouts",
        "Python",
        "Developer",
        "Project",
        "Name",
        "ALIR",
        "May",
        "CA",
        "May",
        "November",
        "Project",
        "Description",
        "Auto",
        "Liability",
        "Insurance",
        "ALIR",
        "system",
        "DRIF",
        "data",
        "state",
        "liability",
        "insurance",
        "problems",
        "data",
        "DRIF",
        "quality",
        "type",
        "accuracy",
        "timeliness",
        "ALIR",
        "process",
        "rewrite",
        "ALIR",
        "process",
        "programs",
        "data",
        "DB2",
        "procedures",
        "state",
        "ALIR",
        "system",
        "APPS",
        "data",
        "ALIR",
        "Department",
        "Motor",
        "Vehicles",
        "DMV",
        "Project",
        "Responsibilities",
        "Requirements",
        "Study",
        "requirements",
        "business",
        "team",
        "Impact",
        "Analysis",
        "Proposing",
        "Design",
        "solutions",
        "requirements",
        "turn",
        "lowlevel",
        "design",
        "Application",
        "Development",
        "Database",
        "triggers",
        "user",
        "functions",
        "procedures",
        "Unit",
        "Integration",
        "testing",
        "use",
        "cases",
        "requirement",
        "documents",
        "Collaborates",
        "value",
        "participation",
        "peer",
        "code",
        "reviews",
        "comments",
        "suggestions",
        "Software",
        "Application",
        "Developer",
        "United",
        "Health",
        "Group",
        "August",
        "May",
        "Physician",
        "United",
        "Health",
        "Group",
        "August",
        "May",
        "Duration",
        "Aug",
        "May",
        "Project",
        "Description",
        "Network",
        "Data",
        "Base",
        "system",
        "data",
        "UHG",
        "applications",
        "Par",
        "NonContracted",
        "NonPar",
        "provider",
        "records",
        "United",
        "Health",
        "Group",
        "provider",
        "types",
        "Physicians",
        "groups",
        "Allied",
        "Health",
        "Professionals",
        "Ancillaries",
        "Facilities",
        "NDB",
        "Entry",
        "provider",
        "records",
        "maintenance",
        "provider",
        "records",
        "NDB",
        "NDB",
        "system",
        "data",
        "Batch",
        "feed",
        "COSMOS",
        "UNET",
        "Claims",
        "payment",
        "printing",
        "provider",
        "directories",
        "Project",
        "Responsibilities",
        "incidents",
        "end",
        "users",
        "incidents",
        "severity",
        "priority",
        "tickets",
        "Monitoring",
        "jobs",
        "production",
        "schedule",
        "jobs",
        "dependencies",
        "Creation",
        "change",
        "requests",
        "size",
        "change",
        "incidents",
        "end",
        "users",
        "prioritization",
        "business",
        "team",
        "Unit",
        "Integration",
        "testing",
        "use",
        "cases",
        "requirement",
        "documents"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:20:16.028690",
    "resume_data": "Senior PythonMongoDB Developer Senior span lPythonspanMongoDB span lDeveloperspan Senior Python Developer with 10 years of experience in Software Development with expertise in design development and providing solutions for the clients Technical expertise in Python Mongo DB CORE Java J2EE technologies Servlet JSP JMS EJB WebServices SOAP and REST JDBC ORACLE DB2 IBM Websphere Oracle Weblogic XML UML Rational Rose JavaScript Strong experience in developing the RESTful APIS service using Python Flask framework Strong knowledge in MongoDB concepts CRUD operations and aggregation framework Experience in the design of Mongo DB database Indexing and Sharding Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experience in using Version Control Systems like GIT and CVS Exceptional handson experience on MultiThreading Collections Exceptions Garbage Collection concepts in Java and good knowledge on using jmapjstatjconsole tools for memory related statistics performance diagnosis Handson experience on application servers such as IBM Web Sphere Oracle Web logic Dynamo and web server like Apache Tomcat Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Strong knowledge in Object Oriented programming making code more flexible maintainable analyzing various performance or runtime complexities Excellent communication skills interpersonal skills selfmotivated quick learner team player Well versed with Quality Processes Procedures Experience in Planning Estimation and leading a team Worked on Waterfall Agile and Test Driven SDLC methodologies Work Experience Senior PythonMongoDB Developer Miami FL February 2015 to Present Project Description Media Acquisition exchange is the application used by the Finance and Accounting departments to scrub carrier reports usage and inventory and by the Fraud and Loss Prevention department to issue alert alarms and monitor usage The raw usage files are dropped at the FTP site on daily basis from different carriers for TracFone customers MAX system enriches the raw data calculate bank balance for voice text and data and then raise the alarms if there is any fraud in the usage Project Responsibilities Requirements Study of the Functional requirements received from the business team and perform Impact Analysis Involved in Developing a Restful service using Python Flask framework Developed the frontend and backend modules using Python on Django Web Framework with GIT Experienced in web applications development using Django Python Flask Python while using HTMLCSSJS for serverside rendered application Used the mongoimport command to load the huge data into the Database Developed the code with CRUD operations and aggregation framework to interact with the database Preparation of Shell scripts to perform testing of the application and to run the automated scripts to analyze the performance of the created database objects Senior PythonMongoDB Developer Moodys Investors Service New York NY June 2013 to January 2015 Project Description Banking FM system collect store and map financial data to the Moodys Chart of Accounts apply foreign exchange FX rates compute derived accounts and calculate the details of statements for derived organizations and periods The Banking FM system loads structured data after converting it to a common format It also allows data to be entered adjusted and approved using a custombuilt frontend application Banking FM product includes the Banking Statistical Supplement and Rating Committee Package as well as the capabilities to generate customized reports Project Responsibilities Analyzed database requirements in detail with the project stakeholders by conducting Joint Requirements Development sessions Developed a portal to manage the entities in the legacy system using Flask Designed the Mongo DB database for the financial system using the concepts of indexing and Sharding Wrote python scripts to parse XML documents and load the data in database Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Project Name BFM Reporting Data model Senior Python Developer Moodys Investors Service New York NY January 2012 to May 2013 Project Description To enhance the performance of the BFMo reports a denormalized form of model called as reporting data model is developed Previously the reporting includes a service layers of Java UI and Client Cognos BI reporting and DB2 stored procedures to retrieve the data based on the business logic and showcase on the different reports As interaction through Cognos and DB2 stored procedures was time and cost consuming Java services are designed in such a way that use the denormalized form of reporting data model to retrieve the data and use Aspose for reporting Project Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed and developed data management system using Oracle Built application logic using Python 27 Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Worked on development of SQL and stored procedures on Oracle Works with the supporting teams SCM and Middleware team to provide the deployment instructions and support the rollouts Python Developer Project Name ALIR May CA May 2008 to November 2010 Project Description The Auto Liability Insurance Reporting ALIR system used DRIF to obtain the data reported each state for liability insurance Due to problems associated with extracting data from DRIF such as quality type accuracy and timeliness it was obvious that the ALIR process required a complete rewrite The new ALIR process evolved by rewriting the programs that extract the data through DB2 stored procedures for each specific state in the ALIR system The APPS data is extracted and loaded in ALIR to transmit to Department of Motor Vehicles DMV Project Responsibilities Requirements Study on the Functional requirements received from business team and perform Impact Analysis Proposing Design solutions for the complex requirements in turn preparing the lowlevel design Application Development of Database objects triggers user defined functions and stored procedures Performs Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents Collaborates and adds value through participation in peer code reviews providing comments and suggestions Software Application Developer United Health Group August 2005 to May 2008 Physician United Health Group August 2005 to May 2008 Duration Aug 2005 to May 2008 Project Description Network Data Base is a system which maintains the data for UHG applications Contracted Par and NonContracted NonPar provider records are loaded for United Health Group All provider types including Physicians Physician groups Allied Health Professionals Ancillaries and Facilities are included in NDB Entry of all new provider records and maintenance to existing provider records will be performed in NDB NDB is a system whose data is fed via nightly Batch feed to COSMOS and UNET to correct Claims payment and printing of provider directories Project Responsibilities Receiving of incidents from the end users Working on the incidents based on the severity and priority of the tickets Monitoring of the jobs in the production so as to review the daily schedule of the jobs and run as per the dependencies Creation of change requests and working on them based on the size of the change required to resolve the incidents raised by the end users after the prioritization from business team Performs rigorous Unit and endtoend Integration testing so as to cover all the use cases from the functional requirement documents",
    "unique_id": "ad15c26d-0957-48b4-8ffc-bc7441ac494c"
}