{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Sr Python Developer CISCO Systems INC 7 years of professional experience as a Python Developer proficient coder in multiple languages and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS C C JAVA and SQL Handsonexperience on python web application development using Django and Serverless framework Worked in Python Integrated Development Environments like NetBeans PyDev PyCharm and Sublime Text Experienced in developing webbased applications using Python Django XML CSS HTML and JavaScript Experience in developing python scripts for automation and performing functional tests and data validation Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Developed web applications and RESTful web services and APIs using Python Flask Django Pyramid Designed and managed API system deployment using fast http server and Amazon AWS architecture Extensive knowledge in relational and nonrelational databases MySQL Cassandra Mongo db Worked with MVW frameworks like Django Angular JS HTML CSS XML Java Script jQuery Bootstrap JSON Wrote REST APIs in python for largescale applications Experience in building frameworks and automating complex workflows using Python for Test Automation Good working Experience in Agile SCRUM using Rally and TFS RUP and Waterfall methodologies with high quality deliverables delivered ontime Good at automating repetitive work through Shell scripts and Python Experience in Creation and managing user accounts security rights disk space and process monitoring in Solaris and Red hat Linux Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Working with backend python automation CI pipelines Docker and cloud provisioningautomation Actively involved in each phase of software Development life cycle SDLC and experience in Agile Software Methodology Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Built all database mapping classes using Django models and Cassandra Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Performed research to explore and identify new technological platforms Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Migrated applications to the AWS cloud and Involved in DevOps processes for build and deploy systems Build and lead POCs for tools for internal use to support DevOps best practices using Docker for Container based Virtualization and documenting with MS Word and SnagIt Worked on creating the Docker containers and Docker consoles for managing the application life Actively involved in each phase of Software Development Life Cycle SDLC and experience in Agile Software Methodology Work Experience Python Developer CISCO Systems INC San Jose CA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Created Python script to monitor server load performance in production environment and horizontally scale the servers by deploying new instances Proficiency with AWS Technologies like eg EC2 RDS DynamoDB ELB Lambda S3 IAM CloudWatch KMS SNS SQS Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Used Django Database APIs to access database objects Used Restful APIs with JSON XML to extract Network traffic information Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Implemented RESTful Web Services to retrieve data from client side using Micro Services architecture Used JSON based and RESTful API for information extraction Experience in working with AWS services like S3 EBL ESB Autoscaling cloud Watch RDS etc Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using PostgreSQL Integrated application with 3rd party APIs Google Facebook Stripe PayPal Googles Natural language API Creating the API with the Serverless framework in Python 36 Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Working on MVC architecture using Python PHP AS controller Created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and Managed releases of Helm packages Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Worked on Agile Methodologies Scrum stories and sprints experience in a Python based environment Used GitHub for Python source code version control Jenkins for automating the build Docker containers Responsible for installing and administrating the SonarQube for code quality check Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Version control using GitHub Involved in writing queries in SparkSQL using Scala Involved in writing stored procedures using MySQL ENVIRONMENT Python 3 Django Jenkins Linux HTML CSS JSON Restful Web Services JavaScript Serverless framework PostgreSQL MySQL Docker Amazon Web Services AWS REST API SPARK Jenkins Eclipse CloudWatch GIT LAMBA Kubernetes Docker Python Developer Santander Bank Dorchester MA February 2016 to February 2017 Responsibilities Gathering requirements and translating the Business details into Technical design for developing CRITs tool Participated in all the stages of software development lifecycle SDLC like design development and implementation and testing Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Implemented firsthand the bestworst practices for integrating Micro Services into existing system architecture Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features Used Pivotal Cloud Foundry to deploy Micro Service applications Involved in conducting trainings to user on interact filter sort and customize views on an existing visualization generated thru Tableau desktop Experience in Data analysis and mapping creation and usage of metadata Utilized Apache Spark with Python to develop and execute Big Data Analytics and Machine learning applications executed machine Learning use cases under Spark ML Data sources are extracted transformed and loaded to generate CSV data files with Python programming and SQL queries Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Automation of OpenShift operations using Jenkins as orchestrating tool Creating Jenkins jobs for automation of Devops tools Created Advance connections join new tables create manage Extract and Monitor Queries using SQL Assistant Defended the dashboard requirements and provided the best practicesapproach to perform ETL and publish data to the reportsdashboards Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Install and configure IBM HTTP Server test the installation map the default application to use the Web Server and regenerate the plugin configuration file Install and configure WebSphere Portal v70 in Windows and Linux environment Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Created PHPMySQL backend for data entry from Flash Used Python based GUI components for the frontend functionality such as selection criteria Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for Plugin Management User Management and BackupDisaster Recovery PlanImplementation BDR on Jenkins ENVIRONMENT Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL jQuery SQLite Docker Windows 12 Server AWS EC2 S3 PyUnit Jenkins Selenium Automation Testing Python Developer Illumina Inc San Diego CA September 2013 to November 2015 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Proficient using Python packages such as NumPy SciPy Requests matplotlib Pickle Pandas Fragment Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Develop consumerbased features and applications using Python Flask HTML and TestDriven Development TDD Used ORM to avoid the duplication of data and reduce the cost of maintenance Configured JMS Modules SAF Agents SAF Modules using Configuration Management Process using Ansible Setting up continuous integration and formal builds using Jenkins with GIT repository Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Wrote python scripts to parse XML documents and load the data in database Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Helped implement the DAL layer of Web API using Entity Framework 5 Experienced in designing and deployment of Hadoop cluster and various Big Data Analytic tools including PIG HIVE Spark Kafka Oozie Sqoop Impala with Horton works distribution Performed source data transformations using HIVE ENVIRONMENT Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Jenkins Unix Shell Scripting Angular JS TCPIP UDP SNMP GIT Red Hat Linux AWS Ansible Education Bachelors Skills JAVASCRIPT 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years DATABASE 6 years Git Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including VLANs TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database PostgreSQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Service Now Delivery Tools Saltstack Chef Puppet",
    "entities": [
        "Micro Services",
        "SQL Handsonexperience",
        "Test Driven Development TDD",
        "GUI",
        "Horton",
        "Helm packages Container",
        "Building",
        "Agile Software Methodology",
        "Working",
        "IPVP4",
        "IBM",
        "Created the Automation",
        "Amazon Web Services AWS",
        "Panda",
        "Rally and TFS RUP",
        "Hadoop",
        "XML",
        "Big Data Analytic",
        "Automation",
        "Software Development Life Cycle SDLC",
        "DevOps",
        "Shell",
        "Git Additional Information TECHNICAL SKILLS Languages C C Python",
        "Agile Software Methodology Work",
        "Devops",
        "Amazon",
        "Creation",
        "Python",
        "Sublime Text Experienced",
        "Amazon AWS S3",
        "SparkSQL",
        "Present Responsibilities Responsible",
        "Statistical Analysis",
        "Created Python",
        "Developed Business Logic",
        "uDeploy Puppet",
        "Windows",
        "Waterfall",
        "San Jose",
        "Develop",
        "Created Data",
        "Solaris",
        "Database PostgreSQL MS",
        "Version",
        "DAL",
        "SonarQube",
        "Docker",
        "RDS",
        "WebSphere Portal",
        "AWS Technologies",
        "Created Advance",
        "TestDriven Development",
        "MVC",
        "Agile",
        "GIT",
        "CSV",
        "API",
        "Scala Involved",
        "Extract and Monitor Queries",
        "GitHub Involved",
        "Directory Services LDAP",
        "AWS",
        "CA",
        "Virtualization",
        "Python Developer",
        "Bash Designed",
        "Big Data Analytics",
        "PIG",
        "Design Development Implementation of Python Django Flask Pyramid",
        "DNS",
        "ELB",
        "HTML",
        "Amazon Cloud Proficient",
        "SQL",
        "Python Developer CISCO Systems INC",
        "JBoss IBM",
        "Used Python",
        "lPythonspan",
        "Kubernetes",
        "Ant",
        "CI",
        "CSHTML",
        "MVW",
        "Amazon AWS",
        "Created PHPMySQL",
        "Pandas",
        "Python Integrated Development Environments",
        "ETL",
        "Cassandra Created",
        "Responsible for Plugin Management User Management",
        "Spark ML Data",
        "S3 PyUnit Jenkins Selenium Automation Testing Python Developer Illumina Inc",
        "Build",
        "Maven",
        "Performed",
        "Python for Test Automation Good",
        "Djangos",
        "JavaScript",
        "Network",
        "OpenShift Automation of OpenShift",
        "WebSphere MQ Series Administrations",
        "SPA",
        "REST",
        "Data",
        "ASPNET",
        "Micro Service",
        "NetBeans",
        "Tableau",
        "UNIX Linux",
        "JSON XML"
    ],
    "experience": "Experience in developing python scripts for automation and performing functional tests and data validation Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Developed web applications and RESTful web services and APIs using Python Flask Django Pyramid Designed and managed API system deployment using fast http server and Amazon AWS architecture Extensive knowledge in relational and nonrelational databases MySQL Cassandra Mongo db Worked with MVW frameworks like Django Angular JS HTML CSS XML Java Script jQuery Bootstrap JSON Wrote REST APIs in python for largescale applications Experience in building frameworks and automating complex workflows using Python for Test Automation Good working Experience in Agile SCRUM using Rally and TFS RUP and Waterfall methodologies with high quality deliverables delivered ontime Good at automating repetitive work through Shell scripts and Python Experience in Creation and managing user accounts security rights disk space and process monitoring in Solaris and Red hat Linux Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Working with backend python automation CI pipelines Docker and cloud provisioningautomation Actively involved in each phase of software Development life cycle SDLC and experience in Agile Software Methodology Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Built all database mapping classes using Django models and Cassandra Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Performed research to explore and identify new technological platforms Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Migrated applications to the AWS cloud and Involved in DevOps processes for build and deploy systems Build and lead POCs for tools for internal use to support DevOps best practices using Docker for Container based Virtualization and documenting with MS Word and SnagIt Worked on creating the Docker containers and Docker consoles for managing the application life Actively involved in each phase of Software Development Life Cycle SDLC and experience in Agile Software Methodology Work Experience Python Developer CISCO Systems INC San Jose CA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Created Python script to monitor server load performance in production environment and horizontally scale the servers by deploying new instances Proficiency with AWS Technologies like eg EC2 RDS DynamoDB ELB Lambda S3 IAM CloudWatch KMS SNS SQS Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Used Django Database APIs to access database objects Used Restful APIs with JSON XML to extract Network traffic information Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Implemented RESTful Web Services to retrieve data from client side using Micro Services architecture Used JSON based and RESTful API for information extraction Experience in working with AWS services like S3 EBL ESB Autoscaling cloud Watch RDS etc Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using PostgreSQL Integrated application with 3rd party APIs Google Facebook Stripe PayPal Googles Natural language API Creating the API with the Serverless framework in Python 36 Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Working on MVC architecture using Python PHP AS controller Created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and Managed releases of Helm packages Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Worked on Agile Methodologies Scrum stories and sprints experience in a Python based environment Used GitHub for Python source code version control Jenkins for automating the build Docker containers Responsible for installing and administrating the SonarQube for code quality check Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Version control using GitHub Involved in writing queries in SparkSQL using Scala Involved in writing stored procedures using MySQL ENVIRONMENT Python 3 Django Jenkins Linux HTML CSS JSON Restful Web Services JavaScript Serverless framework PostgreSQL MySQL Docker Amazon Web Services AWS REST API SPARK Jenkins Eclipse CloudWatch GIT LAMBA Kubernetes Docker Python Developer Santander Bank Dorchester MA February 2016 to February 2017 Responsibilities Gathering requirements and translating the Business details into Technical design for developing CRITs tool Participated in all the stages of software development lifecycle SDLC like design development and implementation and testing Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Implemented firsthand the bestworst practices for integrating Micro Services into existing system architecture Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features Used Pivotal Cloud Foundry to deploy Micro Service applications Involved in conducting trainings to user on interact filter sort and customize views on an existing visualization generated thru Tableau desktop Experience in Data analysis and mapping creation and usage of metadata Utilized Apache Spark with Python to develop and execute Big Data Analytics and Machine learning applications executed machine Learning use cases under Spark ML Data sources are extracted transformed and loaded to generate CSV data files with Python programming and SQL queries Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Automation of OpenShift operations using Jenkins as orchestrating tool Creating Jenkins jobs for automation of Devops tools Created Advance connections join new tables create manage Extract and Monitor Queries using SQL Assistant Defended the dashboard requirements and provided the best practicesapproach to perform ETL and publish data to the reportsdashboards Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Install and configure IBM HTTP Server test the installation map the default application to use the Web Server and regenerate the plugin configuration file Install and configure WebSphere Portal v70 in Windows and Linux environment Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Created PHPMySQL backend for data entry from Flash Used Python based GUI components for the frontend functionality such as selection criteria Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for Plugin Management User Management and BackupDisaster Recovery PlanImplementation BDR on Jenkins ENVIRONMENT Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL jQuery SQLite Docker Windows 12 Server AWS EC2 S3 PyUnit Jenkins Selenium Automation Testing Python Developer Illumina Inc San Diego CA September 2013 to November 2015 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Proficient using Python packages such as NumPy SciPy Requests matplotlib Pickle Pandas Fragment Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Develop consumerbased features and applications using Python Flask HTML and TestDriven Development TDD Used ORM to avoid the duplication of data and reduce the cost of maintenance Configured JMS Modules SAF Agents SAF Modules using Configuration Management Process using Ansible Setting up continuous integration and formal builds using Jenkins with GIT repository Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Wrote python scripts to parse XML documents and load the data in database Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Helped implement the DAL layer of Web API using Entity Framework 5 Experienced in designing and deployment of Hadoop cluster and various Big Data Analytic tools including PIG HIVE Spark Kafka Oozie Sqoop Impala with Horton works distribution Performed source data transformations using HIVE ENVIRONMENT Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Jenkins Unix Shell Scripting Angular JS TCPIP UDP SNMP GIT Red Hat Linux AWS Ansible Education Bachelors Skills JAVASCRIPT 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years DATABASE 6 years Git Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including VLANs TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database PostgreSQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Service Now Delivery Tools Saltstack Chef Puppet",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "CISCO",
        "Systems",
        "INC",
        "years",
        "experience",
        "Python",
        "Developer",
        "proficient",
        "coder",
        "languages",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "Python",
        "Django",
        "Flask",
        "Pyramid",
        "clientserver",
        "applications",
        "services",
        "AWS",
        "C",
        "C",
        "JAVA",
        "SQL",
        "Handsonexperience",
        "web",
        "application",
        "development",
        "Django",
        "Serverless",
        "framework",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "NetBeans",
        "PyDev",
        "PyCharm",
        "Sublime",
        "Text",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "Experience",
        "python",
        "scripts",
        "automation",
        "tests",
        "data",
        "validation",
        "knowledge",
        "MultiThreading",
        "Collections",
        "concepts",
        "Python",
        "Pandas",
        "library",
        "Statistical",
        "Analysis",
        "Experience",
        "data",
        "analysis",
        "machine",
        "techniques",
        "handsonexperience",
        "python",
        "libraries",
        "NumPyPandasSciPy",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "Pyramid",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "knowledge",
        "databases",
        "MySQL",
        "Cassandra",
        "Mongo",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "HTML",
        "CSS",
        "XML",
        "Java",
        "Script",
        "jQuery",
        "Bootstrap",
        "JSON",
        "Wrote",
        "REST",
        "APIs",
        "python",
        "largescale",
        "applications",
        "Experience",
        "frameworks",
        "workflows",
        "Python",
        "Test",
        "Automation",
        "Good",
        "Experience",
        "Agile",
        "SCRUM",
        "Rally",
        "TFS",
        "RUP",
        "Waterfall",
        "methodologies",
        "quality",
        "deliverables",
        "work",
        "Shell",
        "scripts",
        "Python",
        "Experience",
        "Creation",
        "user",
        "security",
        "rights",
        "disk",
        "space",
        "process",
        "monitoring",
        "Solaris",
        "hat",
        "Linux",
        "Experience",
        "Building",
        "applications",
        "OpenShift",
        "Pods",
        "Configured",
        "Secrets",
        "config",
        "maps",
        "services",
        "routes",
        "OpenShift",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "phase",
        "software",
        "Development",
        "life",
        "cycle",
        "SDLC",
        "experience",
        "Agile",
        "Software",
        "Methodology",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Excel",
        "data",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Cassandra",
        "Automation",
        "scripts",
        "Python",
        "testing",
        "applications",
        "integration",
        "application",
        "APIs",
        "UIs",
        "REST",
        "calls",
        "Python",
        "JSON",
        "responses",
        "research",
        "platforms",
        "Data",
        "layer",
        "MYSQL",
        "data",
        "Python",
        "scripts",
        "PLSQL",
        "packages",
        "applications",
        "AWS",
        "cloud",
        "DevOps",
        "processes",
        "build",
        "systems",
        "Build",
        "POCs",
        "tools",
        "use",
        "DevOps",
        "practices",
        "Docker",
        "Container",
        "Virtualization",
        "MS",
        "Word",
        "SnagIt",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "phase",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "experience",
        "Agile",
        "Software",
        "Methodology",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "CISCO",
        "Systems",
        "INC",
        "San",
        "Jose",
        "CA",
        "March",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Created",
        "Python",
        "script",
        "server",
        "load",
        "performance",
        "production",
        "environment",
        "servers",
        "instances",
        "Proficiency",
        "AWS",
        "Technologies",
        "eg",
        "EC2",
        "RDS",
        "DynamoDB",
        "ELB",
        "Lambda",
        "S3",
        "IAM",
        "CloudWatch",
        "KMS",
        "SNS",
        "SQS",
        "Python",
        "websites",
        "data",
        "options",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Django",
        "Database",
        "APIs",
        "database",
        "APIs",
        "JSON",
        "XML",
        "Network",
        "traffic",
        "information",
        "Automation",
        "scripts",
        "Python",
        "testing",
        "applications",
        "integration",
        "application",
        "APIs",
        "UIs",
        "REST",
        "calls",
        "Python",
        "responses",
        "Web",
        "Services",
        "data",
        "client",
        "side",
        "Micro",
        "Services",
        "architecture",
        "JSON",
        "API",
        "information",
        "extraction",
        "Experience",
        "AWS",
        "services",
        "S3",
        "EBL",
        "ESB",
        "Autoscaling",
        "cloud",
        "RDS",
        "datasets",
        "Panda",
        "data",
        "frames",
        "PostgreSQL",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "application",
        "party",
        "APIs",
        "Google",
        "Facebook",
        "Stripe",
        "PayPal",
        "Googles",
        "language",
        "API",
        "API",
        "Serverless",
        "framework",
        "Python",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "MVC",
        "architecture",
        "Python",
        "PHP",
        "controller",
        "builds",
        "Kubernetes",
        "applications",
        "Kubernetes",
        "files",
        "releases",
        "Helm",
        "packages",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "SonarQube",
        "code",
        "quality",
        "check",
        "MySQL",
        "database",
        "MySQL",
        "dB",
        "python",
        "database",
        "connector",
        "MySQL",
        "server",
        "Version",
        "control",
        "GitHub",
        "queries",
        "SparkSQL",
        "Scala",
        "procedures",
        "MySQL",
        "ENVIRONMENT",
        "Python",
        "Django",
        "Jenkins",
        "Linux",
        "HTML",
        "CSS",
        "JSON",
        "Restful",
        "Web",
        "Services",
        "JavaScript",
        "Serverless",
        "framework",
        "PostgreSQL",
        "MySQL",
        "Docker",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "REST",
        "API",
        "SPARK",
        "Jenkins",
        "Eclipse",
        "CloudWatch",
        "GIT",
        "LAMBA",
        "Kubernetes",
        "Docker",
        "Python",
        "Developer",
        "Santander",
        "Bank",
        "Dorchester",
        "MA",
        "February",
        "February",
        "Responsibilities",
        "Gathering",
        "requirements",
        "Business",
        "details",
        "design",
        "CRITs",
        "tool",
        "stages",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "design",
        "development",
        "implementation",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "bestworst",
        "practices",
        "Micro",
        "Services",
        "system",
        "architecture",
        "Micro",
        "Services",
        "strategy",
        "application",
        "business",
        "features",
        "Cloud",
        "Foundry",
        "Micro",
        "Service",
        "applications",
        "trainings",
        "user",
        "interact",
        "filter",
        "sort",
        "views",
        "visualization",
        "Tableau",
        "desktop",
        "Experience",
        "Data",
        "analysis",
        "mapping",
        "creation",
        "usage",
        "metadata",
        "Apache",
        "Spark",
        "Python",
        "Big",
        "Data",
        "Analytics",
        "Machine",
        "learning",
        "applications",
        "machine",
        "Learning",
        "use",
        "cases",
        "Spark",
        "ML",
        "Data",
        "sources",
        "CSV",
        "data",
        "files",
        "Python",
        "programming",
        "SQL",
        "Experience",
        "Building",
        "applications",
        "OpenShift",
        "Pods",
        "Configured",
        "Secrets",
        "config",
        "maps",
        "services",
        "routes",
        "OpenShift",
        "Automation",
        "OpenShift",
        "operations",
        "Jenkins",
        "tool",
        "Creating",
        "Jenkins",
        "jobs",
        "automation",
        "Devops",
        "tools",
        "Advance",
        "connections",
        "tables",
        "Extract",
        "Monitor",
        "Queries",
        "SQL",
        "Assistant",
        "dashboard",
        "requirements",
        "practicesapproach",
        "ETL",
        "data",
        "reportsdashboards",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Administration",
        "RHEL",
        "machine",
        "Apache",
        "configuration",
        "files",
        "UNIX",
        "Linux",
        "internals",
        "cryptography",
        "security",
        "reports",
        "package",
        "NumPy",
        "Matplotlib",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Install",
        "IBM",
        "HTTP",
        "Server",
        "test",
        "installation",
        "map",
        "default",
        "application",
        "Web",
        "Server",
        "configuration",
        "file",
        "Install",
        "WebSphere",
        "Portal",
        "v70",
        "Windows",
        "Linux",
        "environment",
        "Administer",
        "WebSphere",
        "Message",
        "Broker",
        "WebSphere",
        "MQ",
        "Series",
        "Administrations",
        "Windows",
        "Linux",
        "environment",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Used",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "uDeploy",
        "Puppet",
        "Designing",
        "solutions",
        "AWS",
        "product",
        "suite",
        "experience",
        "way",
        "login",
        "AWS",
        "users",
        "Directory",
        "Services",
        "LDAP",
        "OpenVPN",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Plugin",
        "Management",
        "User",
        "Management",
        "BackupDisaster",
        "Recovery",
        "PlanImplementation",
        "BDR",
        "Jenkins",
        "ENVIRONMENT",
        "Python",
        "Django",
        "CherryPy",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "AJAX",
        "webservice",
        "MongoDB",
        "MySQL",
        "jQuery",
        "SQLite",
        "Docker",
        "Windows",
        "Server",
        "AWS",
        "EC2",
        "S3",
        "PyUnit",
        "Jenkins",
        "Selenium",
        "Automation",
        "Testing",
        "Python",
        "Developer",
        "Illumina",
        "Inc",
        "San",
        "Diego",
        "CA",
        "September",
        "November",
        "Responsibilities",
        "engineering",
        "specification",
        "OOA",
        "OOD",
        "UML",
        "Tools",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Collaboration",
        "Sequence",
        "Diagrams",
        "State",
        "Diagrams",
        "Data",
        "Modeling",
        "application",
        "logic",
        "Python",
        "Java",
        "script",
        "Java",
        "C",
        "JMS",
        "Mailing",
        "plans",
        "Java",
        "Server",
        "Pages",
        "content",
        "layout",
        "presentation",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Proficient",
        "Python",
        "packages",
        "NumPy",
        "SciPy",
        "Requests",
        "matplotlib",
        "Pickle",
        "Pandas",
        "Fragment",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Develop",
        "features",
        "applications",
        "Python",
        "Flask",
        "HTML",
        "TestDriven",
        "Development",
        "TDD",
        "ORM",
        "duplication",
        "data",
        "cost",
        "maintenance",
        "Configured",
        "JMS",
        "Modules",
        "SAF",
        "Agents",
        "SAF",
        "Modules",
        "Configuration",
        "Management",
        "Process",
        "Ansible",
        "Setting",
        "integration",
        "builds",
        "Jenkins",
        "GIT",
        "repository",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "frontend",
        "SPA",
        "CSHTML",
        "AngularJS",
        "bootstrap",
        "ASPNET",
        "MVC",
        "Web",
        "API",
        "DAL",
        "layer",
        "Web",
        "API",
        "Entity",
        "Framework",
        "designing",
        "deployment",
        "Hadoop",
        "cluster",
        "Big",
        "Data",
        "tools",
        "PIG",
        "HIVE",
        "Spark",
        "Kafka",
        "Oozie",
        "Sqoop",
        "Impala",
        "Horton",
        "distribution",
        "Performed",
        "source",
        "data",
        "transformations",
        "HIVE",
        "ENVIRONMENT",
        "Java",
        "Python",
        "JavaScript",
        "HTMLCSS",
        "MySQL",
        "PLSQL",
        "JDBC",
        "Jenkins",
        "Unix",
        "Shell",
        "Scripting",
        "Angular",
        "JS",
        "UDP",
        "SNMP",
        "GIT",
        "Red",
        "Hat",
        "Linux",
        "AWS",
        "Ansible",
        "Education",
        "Bachelors",
        "Skills",
        "JAVASCRIPT",
        "years",
        "LINUX",
        "years",
        "MYSQL",
        "years",
        "PYTHON",
        "years",
        "DATABASE",
        "years",
        "Git",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Python",
        "JavaScript",
        "PHP",
        "XML",
        "SQL",
        "SCM",
        "Tools",
        "Subversion",
        "Perforce",
        "JenkinsHudson",
        "Sonar",
        "Jira",
        "TFS",
        "Confluence",
        "Clear",
        "Case",
        "GIT",
        "GitHub",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Solaris",
        "Windows",
        "DOS",
        "VMware",
        "Protocols",
        "OSI",
        "Reference",
        "Model",
        "IPv4",
        "IPv6",
        "Ethernet",
        "LAN",
        "DNS",
        "HTTP",
        "NFS",
        "SSL",
        "SSH",
        "UDP",
        "concepts",
        "network",
        "concepts",
        "VLANs",
        "stack",
        "virtualization",
        "IPVP4",
        "IPV6",
        "FTP",
        "Intranet",
        "Database",
        "PostgreSQL",
        "MS",
        "Access",
        "SQL",
        "Server",
        "MYSQL",
        "Sybase",
        "Oracle",
        "DB2",
        "JDBC",
        "ODBC",
        "Application",
        "Servers",
        "Web",
        "logic",
        "JBoss",
        "IBM",
        "WebSphere",
        "Apache",
        "tomcat55",
        "IIS",
        "Issue",
        "Tracking",
        "Tools",
        "ATLASSIAN",
        "JIRA",
        "BUGZILLA",
        "Mantis",
        "Service",
        "Delivery",
        "Tools",
        "Saltstack",
        "Chef",
        "Puppet"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:16:28.220076",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Sr Python Developer CISCO Systems INC 7 years of professional experience as a Python Developer proficient coder in multiple languages and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS C C JAVA and SQL Handsonexperience on python web application development using Django and Serverless framework Worked in Python Integrated Development Environments like NetBeans PyDev PyCharm and Sublime Text Experienced in developing webbased applications using Python Django XML CSS HTML and JavaScript Experience in developing python scripts for automation and performing functional tests and data validation Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Developed web applications and RESTful web services and APIs using Python Flask Django Pyramid Designed and managed API system deployment using fast http server and Amazon AWS architecture Extensive knowledge in relational and nonrelational databases MySQL Cassandra Mongo db Worked with MVW frameworks like Django Angular JS HTML CSS XML Java Script jQuery Bootstrap JSON Wrote REST APIs in python for largescale applications Experience in building frameworks and automating complex workflows using Python for Test Automation Good working Experience in Agile SCRUM using Rally and TFS RUP and Waterfall methodologies with high quality deliverables delivered ontime Good at automating repetitive work through Shell scripts and Python Experience in Creation and managing user accounts security rights disk space and process monitoring in Solaris and Red hat Linux Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Working with backend python automation CI pipelines Docker and cloud provisioningautomation Actively involved in each phase of software Development life cycle SDLC and experience in Agile Software Methodology Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Built all database mapping classes using Django models and Cassandra Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Performed research to explore and identify new technological platforms Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Migrated applications to the AWS cloud and Involved in DevOps processes for build and deploy systems Build and lead POCs for tools for internal use to support DevOps best practices using Docker for Container based Virtualization and documenting with MS Word and SnagIt Worked on creating the Docker containers and Docker consoles for managing the application life Actively involved in each phase of Software Development Life Cycle SDLC and experience in Agile Software Methodology Work Experience Python Developer CISCO Systems INC San Jose CA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Created Python script to monitor server load performance in production environment and horizontally scale the servers by deploying new instances Proficiency with AWS Technologies like eg EC2 RDS DynamoDB ELB Lambda S3 IAM CloudWatch KMS SNS SQS Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Used Django Database APIs to access database objects Used Restful APIs with JSON XML to extract Network traffic information Created the Automation scripts using Python for testing applications as well as the integration of these application APIs UIs based on REST calls using Python phrasing the JSON responses Implemented RESTful Web Services to retrieve data from client side using Micro Services architecture Used JSON based and RESTful API for information extraction Experience in working with AWS services like S3 EBL ESB Autoscaling cloud Watch RDS etc Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using PostgreSQL Integrated application with 3rd party APIs Google Facebook Stripe PayPal Googles Natural language API Creating the API with the Serverless framework in Python 36 Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Working on MVC architecture using Python PHP AS controller Created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and Managed releases of Helm packages Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Worked on Agile Methodologies Scrum stories and sprints experience in a Python based environment Used GitHub for Python source code version control Jenkins for automating the build Docker containers Responsible for installing and administrating the SonarQube for code quality check Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Version control using GitHub Involved in writing queries in SparkSQL using Scala Involved in writing stored procedures using MySQL ENVIRONMENT Python 3 Django Jenkins Linux HTML CSS JSON Restful Web Services JavaScript Serverless framework PostgreSQL MySQL Docker Amazon Web Services AWS REST API SPARK Jenkins Eclipse CloudWatch GIT LAMBA Kubernetes Docker Python Developer Santander Bank Dorchester MA February 2016 to February 2017 Responsibilities Gathering requirements and translating the Business details into Technical design for developing CRITs tool Participated in all the stages of software development lifecycle SDLC like design development and implementation and testing Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Implemented firsthand the bestworst practices for integrating Micro Services into existing system architecture Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features Used Pivotal Cloud Foundry to deploy Micro Service applications Involved in conducting trainings to user on interact filter sort and customize views on an existing visualization generated thru Tableau desktop Experience in Data analysis and mapping creation and usage of metadata Utilized Apache Spark with Python to develop and execute Big Data Analytics and Machine learning applications executed machine Learning use cases under Spark ML Data sources are extracted transformed and loaded to generate CSV data files with Python programming and SQL queries Experience in Building and deploying the applications on OpenShift Pods Configured Secrets config maps services and routes in OpenShift Automation of OpenShift operations using Jenkins as orchestrating tool Creating Jenkins jobs for automation of Devops tools Created Advance connections join new tables create manage Extract and Monitor Queries using SQL Assistant Defended the dashboard requirements and provided the best practicesapproach to perform ETL and publish data to the reportsdashboards Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Install and configure IBM HTTP Server test the installation map the default application to use the Web Server and regenerate the plugin configuration file Install and configure WebSphere Portal v70 in Windows and Linux environment Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Created PHPMySQL backend for data entry from Flash Used Python based GUI components for the frontend functionality such as selection criteria Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for Plugin Management User Management and BackupDisaster Recovery PlanImplementation BDR on Jenkins ENVIRONMENT Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL jQuery SQLite Docker Windows 12 Server AWS EC2 S3 PyUnit Jenkins Selenium Automation Testing Python Developer Illumina Inc San Diego CA September 2013 to November 2015 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Proficient using Python packages such as NumPy SciPy Requests matplotlib Pickle Pandas Fragment Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Develop consumerbased features and applications using Python Flask HTML and TestDriven Development TDD Used ORM to avoid the duplication of data and reduce the cost of maintenance Configured JMS Modules SAF Agents SAF Modules using Configuration Management Process using Ansible Setting up continuous integration and formal builds using Jenkins with GIT repository Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Wrote python scripts to parse XML documents and load the data in database Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Helped implement the DAL layer of Web API using Entity Framework 5 Experienced in designing and deployment of Hadoop cluster and various Big Data Analytic tools including PIG HIVE Spark Kafka Oozie Sqoop Impala with Horton works distribution Performed source data transformations using HIVE ENVIRONMENT Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Jenkins Unix Shell Scripting Angular JS TCPIP UDP SNMP GIT Red Hat Linux AWS Ansible Education Bachelors Skills JAVASCRIPT 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years DATABASE 6 years Git Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including VLANs TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database PostgreSQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Service Now Delivery Tools Saltstack Chef Puppet",
    "unique_id": "a005a488-95e7-4981-a79a-b581eb53f8ce"
}