{
    "clean_data": "Sr Cloud DevOps Engineer Sr Cloud DevOps Engineer Sr Cloud DevOps Engineer Fifth Third Bank Cincinnati OH 7 years of overall experience in Cloud DevOps and Build and Release Management involving extensive work towards code compilation packaging building debugging automating managing tuning and deploying code across multiple environments Designed configured and managed cloud infrastructures utilizing Amazon Web Services AWS including EC2 S3 RedShift CloudFront RDS DynamoDB VPC Route53 CloudFormation Elasticsearch Elastic Container Service Worked with AWS Identity Access Management IAM service creating new IAM users groups defining roles and policies and Identity providers setting up AWS EC2 instances virtual private cloud VPCs and security groups and setting up databases using AWS RDS storage using S3 bucket and configuring instance backups to S3 bucket Experience working on Multiple AWS instances set the Security Groups Elastic Load Balancer Auto Scaling to design cost effective fault tolerant and highly available systems and created alarms and trigger points in CloudWatch based on thresholds and monitored the servers performance CPU Utilization disk usage Deployed applications on AWS by using Elastic Beanstalk Experience in designing configuring and deploying with Microsoft Azure for a multitude of applications utilizing the Azure stack Compute Web Mobile Blobs Resource Groups Azure SQL Cloud Services and ARM Resource Manager focusing on highavailability fault tolerance and autoscaling Experienced on creating Azure VM Azure Cloud Services and Storages by using Azure PowerShell Script and also orchestrate the data to and from Data Lake Store using Azure Data factory Experience in creating and managing Azure AD tenants and configured application with Azure AD Configuring ADFS authentication flow ADFS installation using Azure AD Connect Extensively worked in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Implemented Terraform modules for deployment of various applications across Azure cloud provider and managing infrastructure Proficient with Vagrant Docker Kubernetes based cluster container and virtualization deployments to create shelf environments for dev teams containerizationVirtualization of environment delivery for releases using virtualization tools like VMware VirtualBox and OpenStack cloud Worked on installing of Docker using Docker toolbox creation of custom Docker container images tagging and pushing the images removing images and managing Docker volumes and setting up Docker Host in CentOS and Ubuntu Worked on all major components of Docker like Docker Daemon Hub Images Registry Well versed in container orchestration using Kubernetes Experienced in Kubernetes deployment of microservices replication controllers Helm charts Scheduler clusters Experience Installing and configuring Kubernetes UI for better visualization of the Cluster Managements Nodes and Pods in the environments Experience working with Ansible to automate repetitive tasks to deploy critical applications quickly and proactively manage the changes Worked with Ansible playbooks written in YAML for virtual and physical instance provisioning configuration management patching and software deployment Experienced in Writing Chef Recipes to automate the builddeployment process and do an overall process improvement to any manual processes Good knowledge in managing Nexus and JFrog artifactory repositories for the maven artifacts and dependencies Experience in CI Continuous Integration and CD Continuous Delivery methodologies using Jenkins for EndtoEnd automation for all build and deployments of Java or J2EE applications Strong experience utilizing Jenkins for enterprise scale infrastructure configuration and application deployments checking out the code from GIT and use AntMaven to build JAR WAR TAR and EAR artifacts Ability to build deployment build scripts and automated solutions using various Scripting languages such as Shell Python Ruby Experience in using Splunk for log analyzing and improving the performance of servers Monitor performance of server as per daily activities using Nagios monitoring tools Experience in Building dashboards to correlate important events billing and security related data with the ELK Stack Experience in working on version control systems like GIT and used Source code management client tools like GitLab GitHub Git GUI and other command line applications Strong knowledge on source controller concepts like Branching Merging Inventoried and administered Red Hat Enterprise Linux RHEL FreeBSD and VMware servers writing several utilities to manage them simultaneously Understanding of protocols and technologies such as Internet Protocol IP Voice over IP VOIP LocalWide Area Network LANWAN Domain name system DNS and Dynamic host configuration protocol DHCP Proficient in tracing complex build problems release issues and environment issues in a multicomponent environment Work Experience Sr Cloud DevOps Engineer Fifth Third Bank Cincinnati OH June 2018 to Present Responsibilities Configured and deployed Azure Automation Scripts for a large set of applications utilizing the Azure stack Including Compute Blob Storage ADFS Active directory Federation Services Resource Groups Azure Data Lake HDInsight Clusters Azure Data Factory Azure SQL Cloud Services and ARM Services and Utilities focusing on Automation Configured Azure MultiFactor Authentication as a part of Azure Active Directory AD Premium to securely authenticate users Created Azure Automation Assets Graphical runbooks PowerShell runbooks that will automate specific tasks and excellent skills in deploying Azure AD Connect configuring ADFS authentication flow ADFS installation using Azure AD Connect Configured DSC configurations to deploy Handled escalated Support tickets till closure for MS Azure PaaS platform Configured AD connect to configure federation with onpremises Active Directory Federation Services ADFS and Azure AD Used Azure Blob Storage to access required files and Azure Storage Queues to communicate between related processes Configured Azure Virtual Machines in availability sets using ARM templates to provide resiliency for IaaS based solution and scale sets using Azure Resource Manager to manage network traffic Created Environment with both PowerShell and ARM Templates together Migrated current Azure SQL Data center environment using Azure Disaster Recovery ADR Also did Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Deployed the initial Azure components like Azure Virtual Networks Azure Application Gateway Azure Storage and Affinity groups Used Jenkins pipelines to drive all micro Services builds out to the Docker registry and then deployed to Azure Kubernetes Services Created Pods and managed using Azure Kubernetes services Managed different infrastructure resources like physical machines VMs and even Docker containers using Terraform Virtualized the servers using the Docker for the test environments and devenvironments needs And also configuration automation using Docker containers Created additional Docker Slave Nodes for Jenkins using custom Docker Images and pulled them to ACR Used Kubernetes to manage containerized applications using its nodes helmcharts ConfigMaps selector Services and deployed application containers as Pods Deployed Application Containers into Pods in Kubernetes Node Clusters and also managed Kubernetes with KubeCtl and also Manage from Kubernetes UI Installed Ansible Server and Ansible Clients to pick up the build from Jenkins repository and deploy in target environments Using Ansible galaxy for Documentation and References and creating Ansible playbook and Deploying on nodes Implemented a CICD pipeline with Docker Jenkins and GitHub by virtualizing the servers using Docker for the Dev and Test environments by achieving needs through configuring automation using Containerization Used Ansible Configuration management to deploy packages with the required build artifacts from Artifactory and facilitate a stable and scalable build and deploy infrastructure Automated infrastructure activities like Continuous Deployment setting up and configuring Tomcat servers managing the configuration changes and Stack monitoring using Ansible playbooks based on YAML Wrote the Ansible playbooks which are the entry point for Ansible provisioning where the automation is defined through tasks using YAML format Run Ansible Scripts to provision Dev servers Experienced in writing Bash and Python scripts Included to supplement automation provided by Ansible and terraform Used Jenkins for CICD pipelines to automate most of the build related tasks using Poll SCM Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs using Jenkins Git and JUnit Worked on GIT version control systems by setting up the repositories for Jenkins build jobs polled Version Control Systems in a sequential manner using Cron Jobs Used Nagios for application and hardware resource monitoring Writing new plugins in Nagios to monitor resources Written automation scripts in Shell for configuring logging monitoring agents on system and application level Worked on ManagingTracking the defects status by using JIRA tool and Planning resolving the issues as per SLA Environments Azure Azure VM Blob Storage Active Directory Federation Services Azure AD Azure SQL ARM Templates AD Connect Docker Kubernetes Jenkins Nagios Junit JFrog Artifactory Terraform Maven Ansible Agile Bash Shell Python Sr Cloud DevOps Engineer Mokxa Technologies Columbia MD May 2017 to May 2018 Responsibilities Worked in a team of DevOps Engineers for providing infrastructure support on AWS cloud Involved in designing and deploying multitude applications utilizing AWS stack Including EC2 S3 AMI Route53 RDS SNS SQS IAM focusing on highavailability fault tolerance and AutoScaling Created AWS RDS instances to serve data through servers for responding to requests Created snapshots and images to store launch configurations of the AWS EC2 instances Utilized highly available AWS Environment to launch the applications in different regions and implemented CloudFront with AWS Lambda to reduce latency Also developed micro service with AWS Lambda and S3 using Java to improvise the performance of the application Responsible for defining and creating API architecture for a largescale digital transformation using AWS API Gateway and Lambda functions Created SNS for EC2 servers to get notifications if it is shutdown terminated or start Also used SQS queues for getting messages from another team Used IAM to create new accounts roles and groups and engaged in enabling lambda functions for dynamic creation of Roles and also the policies Performed Migration of data present in Datacenters from onpremises to a public Cloud using AWS ImportExport Snowball service Used Terraform and did Infrastructure as a code and modifying terraform scripts as and when configuration changes happens Automated deployment of web app to AWS using Terraform Worked with Consistent environment using Kubernetes for deployment scaling and load balancing to the application from dev through production easing the code development and deployment pipeline by implementing Docker containerization with multiple namespace Worked on creating clusters using Kubernetes and worked on initializing pods replication controllers deployments labels health checks and ingress by writing YAML files also wrote Helm Charts for deploying microservices into Kubernetes clusters Created pods and services using Master and Minion architecture of Kubernetes and developed microservice on boarding tools leveraging Python allowing for creation and maintenance build jobs and Kubernetes deploy services Extensively used Kubernetes charts using Helm and created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and managed releases of Helm packages Created the pods in OpenShift Environment by using Docker file and Created clusters from the docker containers with the help of Kubernetes on the OpenShift platform Written python scripts to containerize using Docker and orchestrate it using Kubernetes Configured the services using modern DevOps tools like Ansible Automated application deployment in the cloud using Docker technology using Elastic Container Service scheduler Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Implemented Ansible to deploy the builds for Dev QA and production Automation of infrastructure by creating Ansible Playbooks in YAML Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Development servers Written Chef Recipes to automate deployment process and data bags in Chef for better environment management and test kitchen to validate cookbooks Extensively worked with Jenkins to know various things like build status count of builds GIT commit version used by Jenkins builds etc using Groovy Script Wrote groovy scripts for Jenkins pipelines build deploy on multiple nodes for 80 servers Setup Jenkins tool to integrate the JAVA project and maintained Jenkins with continuous integration and deployment Designed an ELK system to monitor and search enterprise alerts and Installed configured and maintained the ELK Stack for Log management within VMs for Elastic Search Monitored performance of the applications and analyzed log information using ELK Elasticsearch Logstash Kibana Installed configured and managed the ELK Elastic Search Log stash and Kibana for Log management within EC2 Elastic Load balancer Configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Worked on JIRA installation and upgrade and performed JIRA configuration Troubleshoot environment related issues provide fixes and incident tickets and track them to closure on JIRA Environment AWS EC2 S3 AMI Route53 RDS SNS SQS IAM Autoscaling Lambda API Gateway SNS SQS CloudWatch Elastic Block Storage Shell Python GIT Jenkins Groovy ELK Ansible Chef Docker Kubernetes OpenShift Terraform Jira DevOps Engineer ARRIS Horsham PA September 2016 to April 2017 Responsibilities Implement systems that are highly available scalable and selfhealing on the AWS platform Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in Cloud Formation JSON templates Connected user requests to infrastructure running in AWS such as Amazon EC2 instances Elastic Load Balancing load balancers or Amazon S3 buckets and outside AWS using Amazon Route 53 Provided high level technical trouble shooting of all OpenStack services across Chef and Red Hat OSP deployed clouds varying over a multitude of versions and deployment strategies Was Responsible for Planning amendments advancing architecture executing quality control of all technical maintenance plans for diverse OpenStack private Cloud based customers Implemented Chef Recipes for Deployment on build on internal Data Center Servers Also reused and modified same Chef Recipes to create a Deployment directly into Amazon EC2 instances Also Installed Workstation Bootstrapped Nodes wrote Recipes and Cookbooks and uploaded them to Chefserver and managed AWS for EC2 S3 ELB with Chef Cookbooks Deployment and management of many servers and Maintaining Infrastructure automation by writing Cookbooks in Chef Configured and monitored distributed and multiplatform servers using Chef Defined Chef Server and workstation to manage and configure nodes Written wrapper scripts to automate deployment of Chef cookbooks on nodes and running the Chef client on them in Chef environment Worked with Jenkins under the CICD pipeline providing continuous improvement to Agile software development teams Configured Jenkins and integrated it with Chef to schedule jobs on all the bootstrapped nodes and created pipelines to complete automation from commit to deployment Administered Seven Jenkins servers which includes install upgrade backup adding users creating plans installing localremote agent adding capabilities performance tuning troubleshooting issues and maintenance Used Jenkins to create various build and deployment scenario such as jobs to build from various branches deploy tasks to development server or QA server or StagingProduction server Created and maintained the Shell and Python deployment scripts for web application servers Developed Python and Shell Scripts for automation of the build and release process Work with the tools such Git JIRA to store and share the application code issue tracking and code reviews respectively Work with application development and operation teams using a variety of automated testing and build and deploy tools MAVEN Nexus to resolve issues with transition to new DevOps solution Experienced in authoring Pomxml files performing releases with the Maven release plugin Maven for Java projects and managing Maven repositories and Analyzed the Maven build projects for conversion and converting to Maven build automation projects Used Maven as build tools on Java projects for the development of build artifacts on the source code Worked on Drive complex deployments of Splunk dashboards and reports while working side by side with technical teams to solve their integration issues Monitoring Splunk dashboards Splunk Alerts and configure scheduled alerts based on the internal customer requirement Prepared arranged and tested Splunk search strings and operational strings Used Hashicorp Vault and encrypted and decrypted data without storing it and Implemented Table Level Logical replication in PostgreSQL Environment AWS EC2 S3 IAM EBS Security Groups Auto Scaling RDS Cloud Formation Route 53 Elastic Load Balancer VPC OpenStack Shell Scripting Python Chef Jenkins Splunk JIRA Maven Chef GIT Vault Build and Release Engineer Semantic Space Technologies Hyderabad Telangana April 2014 to July 2016 Responsibilities Creating of Release Plan collection analysis and presentation of Release Project Metrics on weekly basis Worked on Jenkins CICD pipeline jobs for endtoend automation to build test and deliver artifacts and Troubleshoot the build issue during the Jenkins build process Created tested and deployed an endtoend CICD pipeline for various applications using Jenkins as the main Integration server for Dev QA Staging and Prod environments Managed Dependency Management within the teams by installing and configuring Nexus Repository Manager Also managed artifacts in Nexus repository Creating Local Virtual Repositories in Artifactory for the project and release builds repository management in ANT to share snapshots and releases of internal projects using JFrog Artifactory Worked on leveraging digital CICD platform Jenkins incorporating automated build processes unit testing framework endtoend mock testing code quality checking and artifact management using Nexus Create configuration pipeline using Jenkins vault to maintain application configuration independent of application releases Setup Jenkins server and built jobs to provide continuous automated builds based on polling the GIT and integrated GIT with Jenkins to automate the code check out process with the help of Jenkins DSL Plugin Created repositories branches tags in GIT assisted the developers to fix merging issues Responsible for developing and maintaining build deployment scripts for test Staging and Production environments using ANT Developed build pipelines to produce Linux Server master images on a schedule as well as track configuration changes Used ANT as a build tool on java projects for the development of build artifacts on the source code Deployed the EAR and WAR archives into WebLogic and Apache Servers Experience integrating Junit SonarQube code analysis and testing during the build Environment Jenkins Nexus JFrog Artifactory ANT Git Jira Linux Junit SonarQube WebLogic Apache Shell Scripts Systems Administrator Global Logic Hyderabad Telangana April 2013 to March 2014 Responsibilities Performed standard System administration tasks such as troubleshooting and problem resolution patching installing packages using rpm and yum drivers software and hardware upgrades Worked on Cron jobs Systems backup and OS installation using Jumpstart and Kickstart for RedHat Enterprise Linux environments Work with specifically within the Linux OS storage how applications interact with underlying systems Wrote and enhanced existing scripts in Bash Shell and Python which are used for data center migration and performance improvements on operating systems and developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed automated processes that run daily to check disk usage and perform cleanup of file systems on Linux environments using shell Bash scriptingksh Python Worked on building testing and deployment of Java Applications on to Test Servers and Production Servers Involved in troubleshooting network by verifying the ports are opened and not blocked by the firewalls for the application if not requesting firewall Iptables checking the hostnames etc traffic and its diagnosis using tools like ping Wireshark and TCPdump Responsible for maintaining and configuring NFS DNS DHCP and iSCSI servers Monitored system performance tuneup kernel parameter adding removing administering hosts users disks on DNS NIS domain Environment Red Hat Enterprise Linux Bash Shell Python Networking TCP DNS Wireshark NIS NFS DHCP Firewalls Linux Administrator Inforlinx Solutions Private Ltd Hyderabad Telangana February 2012 to March 2013 Responsibilities Provide End to End Linux Administration including installation configuration upgrades and maintenance and troubleshooting of Linux systems Perform Daytoday hands on work building patching and maintaining Linux systems in a highly virtualized VMware environment Worked on patches installation patch upgrades and packages installation on Red Hat Linux servers by using RPM YUM Written different bash shell scripts as per the needs for monitoring automation of installs and configurations for RedHat Linux environment Demonstrated scripting experience in bash ksh or Shell Experience working in a team and large environment Expertise in writing Bash Scripts hash and arrays Python Scripts for deployment of Java applications on bare servers or Middleware tools Responsible for administration the Engineering LANWAN including switch and router provisioning and administration Setting up network environments using TCPIP NIS NFS DNS SNMP agents DHCP and Proxy Environment RedHat Enterprise Linux VMWare shell Python Bash Java Network LAN WAN TCPIP NIS NFS DNS SNMP DHCP Skills Docker Git Gradle Groovy Jenkins Perl Python Ruby Scripting Ant Configuration management Maven Chef Nagios Networking Puppet Tcpip Virtualization Jira Junit Links httpwwwlinkedincominharshithTH Additional Information TECHNICAL SKILLS Operating Systems Windows UNIX Red Hat LINUX Ubuntu CentOS Source Code Management Tools GIT Bitbucket Build Tools Ant Maven Gradle Continuous Integration Tools Jenkins Bug Tracking and Testing JIRA Junit Configuration Management Tools Chef Ansible Puppet Terraform Scripting Shell Script Ruby Perl Python Bash Groovy Virtualization Tools Virtual Box VMware Vagrant Cloud Services AWS Azure OpenStack SDLC Agile Scrum Waterfall Methodologies Networking Services FTP SSH TELNET TCPIP HTTP DHCP SNMP FTP SMTP NFS WinSCP Monitoring Tools Splunk Nagios ELK Repositories Nexus JFrog Artifactory Containerization and Orchestration Docker Kubernetes OpenShift",
    "entities": [
        "AWS ImportExport Snowball",
        "the Cluster Managements Nodes",
        "Infrastructure",
        "Implemented Chef Recipes for Deployment",
        "Red Hat",
        "Stack",
        "Environment Jenkins Nexus JFrog Artifactory ANT Git",
        "Nexus Repository",
        "Kubernetes UI",
        "YAML Wrote",
        "Bash Shell",
        "Pomxml",
        "Building",
        "Azure Storage Queues",
        "Maintaining Infrastructure",
        "MAVEN Nexus",
        "Creating Local Virtual Repositories",
        "CloudFront",
        "OpenStack",
        "Amazon Web Services AWS",
        "Nagios",
        "EAR",
        "Azure Kubernetes Services Created Pods",
        "Cincinnati",
        "WebLogic",
        "RPM YUM Written",
        "DevOps",
        "Shell",
        "Data Center Servers",
        "YAML",
        "Amazon",
        "CI Continuous Integration",
        "ELK",
        "AWS Identity Access Management IAM",
        "the Security Groups Elastic Load Balancer Auto Scaling",
        "Azure Resource",
        "Bash Scripts",
        "Developed",
        "Jenkins",
        "Bash",
        "Middleware",
        "Scheduler",
        "GitLab GitHub Git GUI",
        "Installed",
        "Created Azure Automation Assets Graphical",
        "Writing Chef Recipes",
        "Utilized",
        "Apache Servers",
        "VMware",
        "Git",
        "AutoScaling Created AWS RDS",
        "Was Responsible for Planning",
        "Monitored",
        "Release Project Metrics",
        "Utilities",
        "SQL Cloud Services",
        "Recover",
        "Cookbooks",
        "Microsoft Azure",
        "TCPdump Responsible",
        "Linux",
        "IaaS",
        "ARM Services",
        "Responsibilities Implement",
        "Amazon Route",
        "the ELK Stack",
        "Documentation and References",
        "Engineer Mokxa Technologies Columbia",
        "Docker",
        "Terraform Implemented Terraform",
        "CPU Utilization",
        "RDS",
        "Roles",
        "Nexus",
        "Groovy Script Wrote",
        "Kubernetes Experienced",
        "Recovery Services Vault",
        "Worked on Cron",
        "EndtoEnd",
        "DevOps Engineers",
        "Monitoring Splunk",
        "End Linux Administration",
        "GIT",
        "Chef Defined Chef Server",
        "log analytics full text search",
        "Pods Deployed Application Containers",
        "Azure Virtual Networks Azure Application Gateway Azure Storage",
        "API",
        "Implemented Table Level Logical",
        "Terraform",
        "OpenShift",
        "QA",
        "IAM",
        "Chef Cookbooks Deployment",
        "OSP",
        "Terraform Worked with Consistent",
        "Created",
        "AWS",
        "Shell Python Ruby Experience",
        "Jenkins DSL Plugin Created",
        "ANT Developed",
        "Created Environment",
        "Kubernetes UI Installed Ansible Server",
        "Elastic Container Service",
        "ARM Resource",
        "Azure Kubernetes",
        "GitHub",
        "PowerShell",
        "Containerization Used Ansible Configuration",
        "MD",
        "Kubernetes",
        "AWS Lambda and CloudWatch Worked",
        "Test Servers",
        "Jenkins Implemented Ansible",
        "Additional Information TECHNICAL SKILLS Operating Systems Windows UNIX",
        "Virtual Machine Backup",
        "Terraform Virtualized",
        "DHCP Proficient",
        "SSH",
        "Wireshark",
        "Kubernetes Configured",
        "CICD",
        "Developed Python",
        "Identity",
        "Multiple AWS",
        "Automation Configured Azure MultiFactor Authentication",
        "Maven Chef Nagios Networking Puppet",
        "Release Management",
        "Datacenters",
        "ADFS Active directory Federation Services Resource Groups Azure Data Lake HDInsight Clusters Azure Data Factory",
        "Continuous Deployment",
        "SQS",
        "StagingProduction",
        "JAVA",
        "KubeCtl",
        "Build",
        "Maven",
        "Release Engineer Semantic Space Technologies Hyderabad",
        "AntMaven",
        "Cron Jobs Used Nagios",
        "ADFS",
        "ANT",
        "Orchestration Docker Kubernetes OpenShift",
        "OpenShift Environment",
        "Version Control Systems",
        "ACR Used Kubernetes",
        "Tomcat",
        "AWS Lambda",
        "Shell Scripts Systems Administrator Global Logic Hyderabad",
        "NFS",
        "Nexus Create",
        "Data Lake Store",
        "Present Responsibilities Configured",
        "Azure Active Directory AD Premium",
        "Active Directory Federation Services ADFS",
        "Troubleshoot",
        "the ELK Stack for Log",
        "DHCP",
        "DNS"
    ],
    "experience": "Experience working on Multiple AWS instances set the Security Groups Elastic Load Balancer Auto Scaling to design cost effective fault tolerant and highly available systems and created alarms and trigger points in CloudWatch based on thresholds and monitored the servers performance CPU Utilization disk usage Deployed applications on AWS by using Elastic Beanstalk Experience in designing configuring and deploying with Microsoft Azure for a multitude of applications utilizing the Azure stack Compute Web Mobile Blobs Resource Groups Azure SQL Cloud Services and ARM Resource Manager focusing on highavailability fault tolerance and autoscaling Experienced on creating Azure VM Azure Cloud Services and Storages by using Azure PowerShell Script and also orchestrate the data to and from Data Lake Store using Azure Data factory Experience in creating and managing Azure AD tenants and configured application with Azure AD Configuring ADFS authentication flow ADFS installation using Azure AD Connect Extensively worked in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Implemented Terraform modules for deployment of various applications across Azure cloud provider and managing infrastructure Proficient with Vagrant Docker Kubernetes based cluster container and virtualization deployments to create shelf environments for dev teams containerizationVirtualization of environment delivery for releases using virtualization tools like VMware VirtualBox and OpenStack cloud Worked on installing of Docker using Docker toolbox creation of custom Docker container images tagging and pushing the images removing images and managing Docker volumes and setting up Docker Host in CentOS and Ubuntu Worked on all major components of Docker like Docker Daemon Hub Images Registry Well versed in container orchestration using Kubernetes Experienced in Kubernetes deployment of microservices replication controllers Helm charts Scheduler clusters Experience Installing and configuring Kubernetes UI for better visualization of the Cluster Managements Nodes and Pods in the environments Experience working with Ansible to automate repetitive tasks to deploy critical applications quickly and proactively manage the changes Worked with Ansible playbooks written in YAML for virtual and physical instance provisioning configuration management patching and software deployment Experienced in Writing Chef Recipes to automate the builddeployment process and do an overall process improvement to any manual processes Good knowledge in managing Nexus and JFrog artifactory repositories for the maven artifacts and dependencies Experience in CI Continuous Integration and CD Continuous Delivery methodologies using Jenkins for EndtoEnd automation for all build and deployments of Java or J2EE applications Strong experience utilizing Jenkins for enterprise scale infrastructure configuration and application deployments checking out the code from GIT and use AntMaven to build JAR WAR TAR and EAR artifacts Ability to build deployment build scripts and automated solutions using various Scripting languages such as Shell Python Ruby Experience in using Splunk for log analyzing and improving the performance of servers Monitor performance of server as per daily activities using Nagios monitoring tools Experience in Building dashboards to correlate important events billing and security related data with the ELK Stack Experience in working on version control systems like GIT and used Source code management client tools like GitLab GitHub Git GUI and other command line applications Strong knowledge on source controller concepts like Branching Merging Inventoried and administered Red Hat Enterprise Linux RHEL FreeBSD and VMware servers writing several utilities to manage them simultaneously Understanding of protocols and technologies such as Internet Protocol IP Voice over IP VOIP LocalWide Area Network LANWAN Domain name system DNS and Dynamic host configuration protocol DHCP Proficient in tracing complex build problems release issues and environment issues in a multicomponent environment Work Experience Sr Cloud DevOps Engineer Fifth Third Bank Cincinnati OH June 2018 to Present Responsibilities Configured and deployed Azure Automation Scripts for a large set of applications utilizing the Azure stack Including Compute Blob Storage ADFS Active directory Federation Services Resource Groups Azure Data Lake HDInsight Clusters Azure Data Factory Azure SQL Cloud Services and ARM Services and Utilities focusing on Automation Configured Azure MultiFactor Authentication as a part of Azure Active Directory AD Premium to securely authenticate users Created Azure Automation Assets Graphical runbooks PowerShell runbooks that will automate specific tasks and excellent skills in deploying Azure AD Connect configuring ADFS authentication flow ADFS installation using Azure AD Connect Configured DSC configurations to deploy Handled escalated Support tickets till closure for MS Azure PaaS platform Configured AD connect to configure federation with onpremises Active Directory Federation Services ADFS and Azure AD Used Azure Blob Storage to access required files and Azure Storage Queues to communicate between related processes Configured Azure Virtual Machines in availability sets using ARM templates to provide resiliency for IaaS based solution and scale sets using Azure Resource Manager to manage network traffic Created Environment with both PowerShell and ARM Templates together Migrated current Azure SQL Data center environment using Azure Disaster Recovery ADR Also did Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Deployed the initial Azure components like Azure Virtual Networks Azure Application Gateway Azure Storage and Affinity groups Used Jenkins pipelines to drive all micro Services builds out to the Docker registry and then deployed to Azure Kubernetes Services Created Pods and managed using Azure Kubernetes services Managed different infrastructure resources like physical machines VMs and even Docker containers using Terraform Virtualized the servers using the Docker for the test environments and devenvironments needs And also configuration automation using Docker containers Created additional Docker Slave Nodes for Jenkins using custom Docker Images and pulled them to ACR Used Kubernetes to manage containerized applications using its nodes helmcharts ConfigMaps selector Services and deployed application containers as Pods Deployed Application Containers into Pods in Kubernetes Node Clusters and also managed Kubernetes with KubeCtl and also Manage from Kubernetes UI Installed Ansible Server and Ansible Clients to pick up the build from Jenkins repository and deploy in target environments Using Ansible galaxy for Documentation and References and creating Ansible playbook and Deploying on nodes Implemented a CICD pipeline with Docker Jenkins and GitHub by virtualizing the servers using Docker for the Dev and Test environments by achieving needs through configuring automation using Containerization Used Ansible Configuration management to deploy packages with the required build artifacts from Artifactory and facilitate a stable and scalable build and deploy infrastructure Automated infrastructure activities like Continuous Deployment setting up and configuring Tomcat servers managing the configuration changes and Stack monitoring using Ansible playbooks based on YAML Wrote the Ansible playbooks which are the entry point for Ansible provisioning where the automation is defined through tasks using YAML format Run Ansible Scripts to provision Dev servers Experienced in writing Bash and Python scripts Included to supplement automation provided by Ansible and terraform Used Jenkins for CICD pipelines to automate most of the build related tasks using Poll SCM Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs using Jenkins Git and JUnit Worked on GIT version control systems by setting up the repositories for Jenkins build jobs polled Version Control Systems in a sequential manner using Cron Jobs Used Nagios for application and hardware resource monitoring Writing new plugins in Nagios to monitor resources Written automation scripts in Shell for configuring logging monitoring agents on system and application level Worked on ManagingTracking the defects status by using JIRA tool and Planning resolving the issues as per SLA Environments Azure Azure VM Blob Storage Active Directory Federation Services Azure AD Azure SQL ARM Templates AD Connect Docker Kubernetes Jenkins Nagios Junit JFrog Artifactory Terraform Maven Ansible Agile Bash Shell Python Sr Cloud DevOps Engineer Mokxa Technologies Columbia MD May 2017 to May 2018 Responsibilities Worked in a team of DevOps Engineers for providing infrastructure support on AWS cloud Involved in designing and deploying multitude applications utilizing AWS stack Including EC2 S3 AMI Route53 RDS SNS SQS IAM focusing on highavailability fault tolerance and AutoScaling Created AWS RDS instances to serve data through servers for responding to requests Created snapshots and images to store launch configurations of the AWS EC2 instances Utilized highly available AWS Environment to launch the applications in different regions and implemented CloudFront with AWS Lambda to reduce latency Also developed micro service with AWS Lambda and S3 using Java to improvise the performance of the application Responsible for defining and creating API architecture for a largescale digital transformation using AWS API Gateway and Lambda functions Created SNS for EC2 servers to get notifications if it is shutdown terminated or start Also used SQS queues for getting messages from another team Used IAM to create new accounts roles and groups and engaged in enabling lambda functions for dynamic creation of Roles and also the policies Performed Migration of data present in Datacenters from onpremises to a public Cloud using AWS ImportExport Snowball service Used Terraform and did Infrastructure as a code and modifying terraform scripts as and when configuration changes happens Automated deployment of web app to AWS using Terraform Worked with Consistent environment using Kubernetes for deployment scaling and load balancing to the application from dev through production easing the code development and deployment pipeline by implementing Docker containerization with multiple namespace Worked on creating clusters using Kubernetes and worked on initializing pods replication controllers deployments labels health checks and ingress by writing YAML files also wrote Helm Charts for deploying microservices into Kubernetes clusters Created pods and services using Master and Minion architecture of Kubernetes and developed microservice on boarding tools leveraging Python allowing for creation and maintenance build jobs and Kubernetes deploy services Extensively used Kubernetes charts using Helm and created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and managed releases of Helm packages Created the pods in OpenShift Environment by using Docker file and Created clusters from the docker containers with the help of Kubernetes on the OpenShift platform Written python scripts to containerize using Docker and orchestrate it using Kubernetes Configured the services using modern DevOps tools like Ansible Automated application deployment in the cloud using Docker technology using Elastic Container Service scheduler Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Implemented Ansible to deploy the builds for Dev QA and production Automation of infrastructure by creating Ansible Playbooks in YAML Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Development servers Written Chef Recipes to automate deployment process and data bags in Chef for better environment management and test kitchen to validate cookbooks Extensively worked with Jenkins to know various things like build status count of builds GIT commit version used by Jenkins builds etc using Groovy Script Wrote groovy scripts for Jenkins pipelines build deploy on multiple nodes for 80 servers Setup Jenkins tool to integrate the JAVA project and maintained Jenkins with continuous integration and deployment Designed an ELK system to monitor and search enterprise alerts and Installed configured and maintained the ELK Stack for Log management within VMs for Elastic Search Monitored performance of the applications and analyzed log information using ELK Elasticsearch Logstash Kibana Installed configured and managed the ELK Elastic Search Log stash and Kibana for Log management within EC2 Elastic Load balancer Configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Worked on JIRA installation and upgrade and performed JIRA configuration Troubleshoot environment related issues provide fixes and incident tickets and track them to closure on JIRA Environment AWS EC2 S3 AMI Route53 RDS SNS SQS IAM Autoscaling Lambda API Gateway SNS SQS CloudWatch Elastic Block Storage Shell Python GIT Jenkins Groovy ELK Ansible Chef Docker Kubernetes OpenShift Terraform Jira DevOps Engineer ARRIS Horsham PA September 2016 to April 2017 Responsibilities Implement systems that are highly available scalable and selfhealing on the AWS platform Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in Cloud Formation JSON templates Connected user requests to infrastructure running in AWS such as Amazon EC2 instances Elastic Load Balancing load balancers or Amazon S3 buckets and outside AWS using Amazon Route 53 Provided high level technical trouble shooting of all OpenStack services across Chef and Red Hat OSP deployed clouds varying over a multitude of versions and deployment strategies Was Responsible for Planning amendments advancing architecture executing quality control of all technical maintenance plans for diverse OpenStack private Cloud based customers Implemented Chef Recipes for Deployment on build on internal Data Center Servers Also reused and modified same Chef Recipes to create a Deployment directly into Amazon EC2 instances Also Installed Workstation Bootstrapped Nodes wrote Recipes and Cookbooks and uploaded them to Chefserver and managed AWS for EC2 S3 ELB with Chef Cookbooks Deployment and management of many servers and Maintaining Infrastructure automation by writing Cookbooks in Chef Configured and monitored distributed and multiplatform servers using Chef Defined Chef Server and workstation to manage and configure nodes Written wrapper scripts to automate deployment of Chef cookbooks on nodes and running the Chef client on them in Chef environment Worked with Jenkins under the CICD pipeline providing continuous improvement to Agile software development teams Configured Jenkins and integrated it with Chef to schedule jobs on all the bootstrapped nodes and created pipelines to complete automation from commit to deployment Administered Seven Jenkins servers which includes install upgrade backup adding users creating plans installing localremote agent adding capabilities performance tuning troubleshooting issues and maintenance Used Jenkins to create various build and deployment scenario such as jobs to build from various branches deploy tasks to development server or QA server or StagingProduction server Created and maintained the Shell and Python deployment scripts for web application servers Developed Python and Shell Scripts for automation of the build and release process Work with the tools such Git JIRA to store and share the application code issue tracking and code reviews respectively Work with application development and operation teams using a variety of automated testing and build and deploy tools MAVEN Nexus to resolve issues with transition to new DevOps solution Experienced in authoring Pomxml files performing releases with the Maven release plugin Maven for Java projects and managing Maven repositories and Analyzed the Maven build projects for conversion and converting to Maven build automation projects Used Maven as build tools on Java projects for the development of build artifacts on the source code Worked on Drive complex deployments of Splunk dashboards and reports while working side by side with technical teams to solve their integration issues Monitoring Splunk dashboards Splunk Alerts and configure scheduled alerts based on the internal customer requirement Prepared arranged and tested Splunk search strings and operational strings Used Hashicorp Vault and encrypted and decrypted data without storing it and Implemented Table Level Logical replication in PostgreSQL Environment AWS EC2 S3 IAM EBS Security Groups Auto Scaling RDS Cloud Formation Route 53 Elastic Load Balancer VPC OpenStack Shell Scripting Python Chef Jenkins Splunk JIRA Maven Chef GIT Vault Build and Release Engineer Semantic Space Technologies Hyderabad Telangana April 2014 to July 2016 Responsibilities Creating of Release Plan collection analysis and presentation of Release Project Metrics on weekly basis Worked on Jenkins CICD pipeline jobs for endtoend automation to build test and deliver artifacts and Troubleshoot the build issue during the Jenkins build process Created tested and deployed an endtoend CICD pipeline for various applications using Jenkins as the main Integration server for Dev QA Staging and Prod environments Managed Dependency Management within the teams by installing and configuring Nexus Repository Manager Also managed artifacts in Nexus repository Creating Local Virtual Repositories in Artifactory for the project and release builds repository management in ANT to share snapshots and releases of internal projects using JFrog Artifactory Worked on leveraging digital CICD platform Jenkins incorporating automated build processes unit testing framework endtoend mock testing code quality checking and artifact management using Nexus Create configuration pipeline using Jenkins vault to maintain application configuration independent of application releases Setup Jenkins server and built jobs to provide continuous automated builds based on polling the GIT and integrated GIT with Jenkins to automate the code check out process with the help of Jenkins DSL Plugin Created repositories branches tags in GIT assisted the developers to fix merging issues Responsible for developing and maintaining build deployment scripts for test Staging and Production environments using ANT Developed build pipelines to produce Linux Server master images on a schedule as well as track configuration changes Used ANT as a build tool on java projects for the development of build artifacts on the source code Deployed the EAR and WAR archives into WebLogic and Apache Servers Experience integrating Junit SonarQube code analysis and testing during the build Environment Jenkins Nexus JFrog Artifactory ANT Git Jira Linux Junit SonarQube WebLogic Apache Shell Scripts Systems Administrator Global Logic Hyderabad Telangana April 2013 to March 2014 Responsibilities Performed standard System administration tasks such as troubleshooting and problem resolution patching installing packages using rpm and yum drivers software and hardware upgrades Worked on Cron jobs Systems backup and OS installation using Jumpstart and Kickstart for RedHat Enterprise Linux environments Work with specifically within the Linux OS storage how applications interact with underlying systems Wrote and enhanced existing scripts in Bash Shell and Python which are used for data center migration and performance improvements on operating systems and developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed automated processes that run daily to check disk usage and perform cleanup of file systems on Linux environments using shell Bash scriptingksh Python Worked on building testing and deployment of Java Applications on to Test Servers and Production Servers Involved in troubleshooting network by verifying the ports are opened and not blocked by the firewalls for the application if not requesting firewall Iptables checking the hostnames etc traffic and its diagnosis using tools like ping Wireshark and TCPdump Responsible for maintaining and configuring NFS DNS DHCP and iSCSI servers Monitored system performance tuneup kernel parameter adding removing administering hosts users disks on DNS NIS domain Environment Red Hat Enterprise Linux Bash Shell Python Networking TCP DNS Wireshark NIS NFS DHCP Firewalls Linux Administrator Inforlinx Solutions Private Ltd Hyderabad Telangana February 2012 to March 2013 Responsibilities Provide End to End Linux Administration including installation configuration upgrades and maintenance and troubleshooting of Linux systems Perform Daytoday hands on work building patching and maintaining Linux systems in a highly virtualized VMware environment Worked on patches installation patch upgrades and packages installation on Red Hat Linux servers by using RPM YUM Written different bash shell scripts as per the needs for monitoring automation of installs and configurations for RedHat Linux environment Demonstrated scripting experience in bash ksh or Shell Experience working in a team and large environment Expertise in writing Bash Scripts hash and arrays Python Scripts for deployment of Java applications on bare servers or Middleware tools Responsible for administration the Engineering LANWAN including switch and router provisioning and administration Setting up network environments using TCPIP NIS NFS DNS SNMP agents DHCP and Proxy Environment RedHat Enterprise Linux VMWare shell Python Bash Java Network LAN WAN TCPIP NIS NFS DNS SNMP DHCP Skills Docker Git Gradle Groovy Jenkins Perl Python Ruby Scripting Ant Configuration management Maven Chef Nagios Networking Puppet Tcpip Virtualization Jira Junit Links httpwwwlinkedincominharshithTH Additional Information TECHNICAL SKILLS Operating Systems Windows UNIX Red Hat LINUX Ubuntu CentOS Source Code Management Tools GIT Bitbucket Build Tools Ant Maven Gradle Continuous Integration Tools Jenkins Bug Tracking and Testing JIRA Junit Configuration Management Tools Chef Ansible Puppet Terraform Scripting Shell Script Ruby Perl Python Bash Groovy Virtualization Tools Virtual Box VMware Vagrant Cloud Services AWS Azure OpenStack SDLC Agile Scrum Waterfall Methodologies Networking Services FTP SSH TELNET TCPIP HTTP DHCP SNMP FTP SMTP NFS WinSCP Monitoring Tools Splunk Nagios ELK Repositories Nexus JFrog Artifactory Containerization and Orchestration Docker Kubernetes OpenShift",
    "extracted_keywords": [
        "Sr",
        "Cloud",
        "DevOps",
        "Engineer",
        "Sr",
        "Cloud",
        "DevOps",
        "Engineer",
        "Sr",
        "Cloud",
        "DevOps",
        "Engineer",
        "Fifth",
        "Third",
        "Bank",
        "Cincinnati",
        "OH",
        "years",
        "experience",
        "Cloud",
        "DevOps",
        "Build",
        "Release",
        "Management",
        "work",
        "code",
        "compilation",
        "packaging",
        "building",
        "tuning",
        "code",
        "environments",
        "cloud",
        "infrastructures",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "RedShift",
        "CloudFront",
        "RDS",
        "DynamoDB",
        "VPC",
        "Route53",
        "CloudFormation",
        "Elasticsearch",
        "Elastic",
        "Container",
        "Service",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "service",
        "IAM",
        "users",
        "groups",
        "roles",
        "policies",
        "Identity",
        "providers",
        "AWS",
        "EC2",
        "instances",
        "cloud",
        "VPCs",
        "security",
        "groups",
        "databases",
        "AWS",
        "RDS",
        "storage",
        "S3",
        "bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Experience",
        "AWS",
        "instances",
        "Security",
        "Groups",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "Scaling",
        "cost",
        "fault",
        "systems",
        "alarms",
        "trigger",
        "points",
        "CloudWatch",
        "thresholds",
        "servers",
        "CPU",
        "Utilization",
        "disk",
        "usage",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Experience",
        "configuring",
        "Microsoft",
        "Azure",
        "multitude",
        "applications",
        "Azure",
        "stack",
        "Compute",
        "Web",
        "Mobile",
        "Blobs",
        "Resource",
        "Groups",
        "Azure",
        "SQL",
        "Cloud",
        "Services",
        "ARM",
        "Resource",
        "Manager",
        "highavailability",
        "fault",
        "tolerance",
        "VM",
        "Cloud",
        "Services",
        "Storages",
        "Azure",
        "PowerShell",
        "Script",
        "data",
        "Data",
        "Lake",
        "Store",
        "Azure",
        "Data",
        "factory",
        "Experience",
        "AD",
        "tenants",
        "application",
        "Azure",
        "AD",
        "Configuring",
        "ADFS",
        "authentication",
        "flow",
        "ADFS",
        "installation",
        "Azure",
        "AD",
        "Connect",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managed",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Implemented",
        "Terraform",
        "modules",
        "deployment",
        "applications",
        "cloud",
        "provider",
        "infrastructure",
        "Proficient",
        "Vagrant",
        "Docker",
        "Kubernetes",
        "cluster",
        "container",
        "virtualization",
        "deployments",
        "shelf",
        "environments",
        "dev",
        "teams",
        "containerizationVirtualization",
        "environment",
        "delivery",
        "releases",
        "virtualization",
        "tools",
        "VMware",
        "VirtualBox",
        "OpenStack",
        "cloud",
        "Docker",
        "Docker",
        "toolbox",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "images",
        "Docker",
        "volumes",
        "Docker",
        "Host",
        "CentOS",
        "Ubuntu",
        "components",
        "Docker",
        "Docker",
        "Daemon",
        "Hub",
        "Images",
        "Registry",
        "container",
        "orchestration",
        "Kubernetes",
        "Kubernetes",
        "deployment",
        "microservices",
        "replication",
        "Helm",
        "charts",
        "Scheduler",
        "Experience",
        "Installing",
        "Kubernetes",
        "UI",
        "visualization",
        "Cluster",
        "Managements",
        "Nodes",
        "Pods",
        "environments",
        "Experience",
        "Ansible",
        "tasks",
        "applications",
        "changes",
        "playbooks",
        "YAML",
        "instance",
        "configuration",
        "management",
        "patching",
        "software",
        "deployment",
        "Writing",
        "Chef",
        "Recipes",
        "process",
        "process",
        "improvement",
        "manual",
        "knowledge",
        "Nexus",
        "JFrog",
        "repositories",
        "maven",
        "artifacts",
        "dependencies",
        "Experience",
        "CI",
        "Continuous",
        "Integration",
        "CD",
        "Continuous",
        "Delivery",
        "methodologies",
        "Jenkins",
        "EndtoEnd",
        "automation",
        "build",
        "deployments",
        "Java",
        "J2EE",
        "applications",
        "experience",
        "Jenkins",
        "enterprise",
        "scale",
        "infrastructure",
        "configuration",
        "application",
        "deployments",
        "code",
        "GIT",
        "AntMaven",
        "JAR",
        "WAR",
        "TAR",
        "EAR",
        "Ability",
        "deployment",
        "build",
        "scripts",
        "solutions",
        "Scripting",
        "languages",
        "Shell",
        "Python",
        "Ruby",
        "Experience",
        "Splunk",
        "log",
        "performance",
        "servers",
        "performance",
        "server",
        "activities",
        "Nagios",
        "tools",
        "Experience",
        "Building",
        "dashboards",
        "events",
        "billing",
        "security",
        "data",
        "ELK",
        "Stack",
        "Experience",
        "version",
        "control",
        "systems",
        "GIT",
        "Source",
        "code",
        "management",
        "client",
        "tools",
        "GitLab",
        "GitHub",
        "Git",
        "GUI",
        "command",
        "line",
        "applications",
        "knowledge",
        "source",
        "controller",
        "concepts",
        "Merging",
        "Inventoried",
        "Red",
        "Hat",
        "Enterprise",
        "Linux",
        "RHEL",
        "FreeBSD",
        "VMware",
        "servers",
        "utilities",
        "Understanding",
        "protocols",
        "technologies",
        "Internet",
        "Protocol",
        "IP",
        "Voice",
        "IP",
        "VOIP",
        "LocalWide",
        "Area",
        "Network",
        "LANWAN",
        "Domain",
        "name",
        "system",
        "DNS",
        "host",
        "configuration",
        "protocol",
        "DHCP",
        "Proficient",
        "build",
        "problems",
        "release",
        "issues",
        "environment",
        "issues",
        "environment",
        "Work",
        "Experience",
        "Sr",
        "Cloud",
        "DevOps",
        "Engineer",
        "Fifth",
        "Third",
        "Bank",
        "Cincinnati",
        "OH",
        "June",
        "Present",
        "Responsibilities",
        "Azure",
        "Automation",
        "Scripts",
        "set",
        "applications",
        "stack",
        "Compute",
        "Blob",
        "Storage",
        "ADFS",
        "Active",
        "directory",
        "Federation",
        "Services",
        "Resource",
        "Groups",
        "Azure",
        "Data",
        "Lake",
        "HDInsight",
        "Clusters",
        "Azure",
        "Data",
        "Factory",
        "Azure",
        "SQL",
        "Cloud",
        "Services",
        "ARM",
        "Services",
        "Utilities",
        "Automation",
        "Configured",
        "Azure",
        "MultiFactor",
        "Authentication",
        "part",
        "Azure",
        "Active",
        "Directory",
        "AD",
        "Premium",
        "users",
        "Azure",
        "Automation",
        "Assets",
        "Graphical",
        "PowerShell",
        "tasks",
        "skills",
        "AD",
        "Connect",
        "ADFS",
        "authentication",
        "flow",
        "ADFS",
        "installation",
        "Azure",
        "AD",
        "Connect",
        "Configured",
        "DSC",
        "configurations",
        "Support",
        "tickets",
        "closure",
        "MS",
        "Azure",
        "PaaS",
        "platform",
        "Configured",
        "AD",
        "connect",
        "configure",
        "federation",
        "onpremises",
        "Active",
        "Directory",
        "Federation",
        "Services",
        "ADFS",
        "AD",
        "Azure",
        "Blob",
        "Storage",
        "files",
        "Azure",
        "Storage",
        "Queues",
        "processes",
        "Azure",
        "Virtual",
        "Machines",
        "availability",
        "sets",
        "ARM",
        "templates",
        "resiliency",
        "IaaS",
        "solution",
        "scale",
        "sets",
        "Azure",
        "Resource",
        "Manager",
        "network",
        "traffic",
        "Created",
        "Environment",
        "PowerShell",
        "ARM",
        "Templates",
        "Azure",
        "SQL",
        "Data",
        "center",
        "environment",
        "Azure",
        "Disaster",
        "Recovery",
        "ADR",
        "Virtual",
        "Machine",
        "Backup",
        "Recover",
        "Recovery",
        "Services",
        "Vault",
        "Azure",
        "PowerShell",
        "Portal",
        "Azure",
        "components",
        "Azure",
        "Virtual",
        "Networks",
        "Azure",
        "Application",
        "Gateway",
        "Azure",
        "Storage",
        "Affinity",
        "groups",
        "Jenkins",
        "pipelines",
        "micro",
        "Services",
        "Docker",
        "registry",
        "Azure",
        "Kubernetes",
        "Services",
        "Pods",
        "Azure",
        "Kubernetes",
        "services",
        "infrastructure",
        "resources",
        "machines",
        "VMs",
        "Docker",
        "containers",
        "Terraform",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "configuration",
        "automation",
        "Docker",
        "containers",
        "Docker",
        "Slave",
        "Nodes",
        "Jenkins",
        "custom",
        "Docker",
        "Images",
        "ACR",
        "Kubernetes",
        "applications",
        "nodes",
        "helmcharts",
        "ConfigMaps",
        "selector",
        "Services",
        "application",
        "containers",
        "Pods",
        "Deployed",
        "Application",
        "Containers",
        "Pods",
        "Kubernetes",
        "Node",
        "Clusters",
        "Kubernetes",
        "KubeCtl",
        "Kubernetes",
        "UI",
        "Installed",
        "Ansible",
        "Server",
        "Ansible",
        "Clients",
        "build",
        "Jenkins",
        "repository",
        "target",
        "environments",
        "galaxy",
        "Documentation",
        "References",
        "playbook",
        "nodes",
        "CICD",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "servers",
        "Docker",
        "Dev",
        "Test",
        "environments",
        "needs",
        "automation",
        "Containerization",
        "Used",
        "Ansible",
        "Configuration",
        "management",
        "packages",
        "build",
        "artifacts",
        "Artifactory",
        "build",
        "infrastructure",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Tomcat",
        "servers",
        "configuration",
        "changes",
        "Stack",
        "monitoring",
        "playbooks",
        "YAML",
        "playbooks",
        "entry",
        "point",
        "provisioning",
        "automation",
        "tasks",
        "YAML",
        "format",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Bash",
        "Python",
        "scripts",
        "automation",
        "Ansible",
        "Jenkins",
        "CICD",
        "pipelines",
        "build",
        "tasks",
        "Poll",
        "SCM",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "Git",
        "source",
        "control",
        "system",
        "day",
        "builds",
        "development",
        "needs",
        "Jenkins",
        "Git",
        "JUnit",
        "GIT",
        "version",
        "control",
        "systems",
        "repositories",
        "Jenkins",
        "jobs",
        "Version",
        "Control",
        "Systems",
        "manner",
        "Cron",
        "Jobs",
        "Nagios",
        "application",
        "hardware",
        "resource",
        "monitoring",
        "plugins",
        "Nagios",
        "resources",
        "automation",
        "scripts",
        "Shell",
        "agents",
        "system",
        "application",
        "level",
        "ManagingTracking",
        "defects",
        "status",
        "JIRA",
        "tool",
        "Planning",
        "issues",
        "SLA",
        "Environments",
        "Azure",
        "Azure",
        "VM",
        "Blob",
        "Storage",
        "Active",
        "Directory",
        "Federation",
        "Services",
        "Azure",
        "AD",
        "Azure",
        "SQL",
        "ARM",
        "Templates",
        "AD",
        "Connect",
        "Docker",
        "Kubernetes",
        "Jenkins",
        "Nagios",
        "Junit",
        "JFrog",
        "Artifactory",
        "Terraform",
        "Maven",
        "Ansible",
        "Agile",
        "Bash",
        "Shell",
        "Python",
        "Sr",
        "Cloud",
        "DevOps",
        "Engineer",
        "Mokxa",
        "Technologies",
        "Columbia",
        "MD",
        "May",
        "May",
        "Responsibilities",
        "team",
        "DevOps",
        "Engineers",
        "infrastructure",
        "support",
        "AWS",
        "cloud",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "S3",
        "AMI",
        "Route53",
        "RDS",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AutoScaling",
        "AWS",
        "RDS",
        "instances",
        "data",
        "servers",
        "requests",
        "snapshots",
        "images",
        "launch",
        "configurations",
        "AWS",
        "EC2",
        "instances",
        "AWS",
        "Environment",
        "applications",
        "regions",
        "CloudFront",
        "AWS",
        "Lambda",
        "latency",
        "micro",
        "service",
        "AWS",
        "Lambda",
        "S3",
        "Java",
        "performance",
        "application",
        "API",
        "architecture",
        "largescale",
        "transformation",
        "AWS",
        "API",
        "Gateway",
        "Lambda",
        "functions",
        "SNS",
        "EC2",
        "servers",
        "notifications",
        "SQS",
        "queues",
        "messages",
        "team",
        "IAM",
        "accounts",
        "roles",
        "groups",
        "lambda",
        "functions",
        "creation",
        "Roles",
        "policies",
        "Performed",
        "Migration",
        "data",
        "Datacenters",
        "onpremises",
        "Cloud",
        "AWS",
        "ImportExport",
        "Snowball",
        "service",
        "Terraform",
        "Infrastructure",
        "code",
        "terraform",
        "scripts",
        "configuration",
        "changes",
        "deployment",
        "web",
        "app",
        "AWS",
        "Terraform",
        "Worked",
        "environment",
        "Kubernetes",
        "deployment",
        "scaling",
        "load",
        "application",
        "dev",
        "production",
        "code",
        "development",
        "deployment",
        "pipeline",
        "Docker",
        "containerization",
        "namespace",
        "clusters",
        "Kubernetes",
        "pods",
        "replication",
        "controllers",
        "deployments",
        "health",
        "checks",
        "ingress",
        "YAML",
        "files",
        "Helm",
        "Charts",
        "microservices",
        "Kubernetes",
        "clusters",
        "pods",
        "services",
        "Master",
        "Minion",
        "architecture",
        "Kubernetes",
        "microservice",
        "boarding",
        "tools",
        "Python",
        "creation",
        "maintenance",
        "build",
        "jobs",
        "Kubernetes",
        "services",
        "Kubernetes",
        "charts",
        "Helm",
        "builds",
        "Kubernetes",
        "applications",
        "Kubernetes",
        "files",
        "releases",
        "Helm",
        "packages",
        "pods",
        "OpenShift",
        "Environment",
        "Docker",
        "file",
        "clusters",
        "docker",
        "containers",
        "help",
        "Kubernetes",
        "OpenShift",
        "platform",
        "python",
        "scripts",
        "Docker",
        "Kubernetes",
        "services",
        "DevOps",
        "tools",
        "application",
        "deployment",
        "cloud",
        "Docker",
        "technology",
        "Elastic",
        "Container",
        "Service",
        "scheduler",
        "Docker",
        "deployment",
        "pipeline",
        "custom",
        "application",
        "images",
        "cloud",
        "Jenkins",
        "Implemented",
        "Ansible",
        "builds",
        "Dev",
        "QA",
        "production",
        "Automation",
        "infrastructure",
        "Playbooks",
        "YAML",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Development",
        "servers",
        "Written",
        "Chef",
        "Recipes",
        "deployment",
        "process",
        "data",
        "bags",
        "Chef",
        "environment",
        "management",
        "test",
        "kitchen",
        "cookbooks",
        "Jenkins",
        "things",
        "status",
        "count",
        "builds",
        "GIT",
        "version",
        "Jenkins",
        "Groovy",
        "Script",
        "Wrote",
        "scripts",
        "Jenkins",
        "pipelines",
        "deploy",
        "nodes",
        "servers",
        "Setup",
        "Jenkins",
        "tool",
        "project",
        "Jenkins",
        "integration",
        "deployment",
        "ELK",
        "system",
        "search",
        "enterprise",
        "alerts",
        "Installed",
        "ELK",
        "Stack",
        "Log",
        "management",
        "VMs",
        "Elastic",
        "Search",
        "performance",
        "applications",
        "log",
        "information",
        "ELK",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "Installed",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "stash",
        "Kibana",
        "Log",
        "management",
        "EC2",
        "Elastic",
        "Load",
        "balancer",
        "Configured",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "JIRA",
        "installation",
        "JIRA",
        "configuration",
        "Troubleshoot",
        "environment",
        "issues",
        "fixes",
        "incident",
        "tickets",
        "JIRA",
        "Environment",
        "EC2",
        "S3",
        "AMI",
        "Route53",
        "RDS",
        "SNS",
        "SQS",
        "IAM",
        "Autoscaling",
        "Lambda",
        "API",
        "Gateway",
        "SNS",
        "SQS",
        "CloudWatch",
        "Elastic",
        "Block",
        "Storage",
        "Shell",
        "Python",
        "GIT",
        "Jenkins",
        "Groovy",
        "ELK",
        "Ansible",
        "Chef",
        "Docker",
        "Kubernetes",
        "OpenShift",
        "Terraform",
        "Jira",
        "DevOps",
        "Engineer",
        "ARRIS",
        "Horsham",
        "PA",
        "September",
        "April",
        "Responsibilities",
        "Implement",
        "systems",
        "AWS",
        "platform",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Group",
        "Auto",
        "Scaling",
        "RDS",
        "Cloud",
        "Formation",
        "JSON",
        "user",
        "requests",
        "infrastructure",
        "AWS",
        "Amazon",
        "EC2",
        "Elastic",
        "Load",
        "load",
        "balancers",
        "Amazon",
        "S3",
        "buckets",
        "AWS",
        "Amazon",
        "Route",
        "level",
        "trouble",
        "OpenStack",
        "services",
        "Chef",
        "Red",
        "Hat",
        "OSP",
        "clouds",
        "multitude",
        "versions",
        "deployment",
        "strategies",
        "Planning",
        "amendments",
        "architecture",
        "quality",
        "control",
        "maintenance",
        "plans",
        "OpenStack",
        "Cloud",
        "customers",
        "Chef",
        "Recipes",
        "Deployment",
        "build",
        "Data",
        "Center",
        "Servers",
        "Chef",
        "Recipes",
        "Deployment",
        "Amazon",
        "EC2",
        "instances",
        "Workstation",
        "Bootstrapped",
        "Nodes",
        "Recipes",
        "Cookbooks",
        "Chefserver",
        "AWS",
        "EC2",
        "S3",
        "ELB",
        "Chef",
        "Cookbooks",
        "Deployment",
        "management",
        "servers",
        "Infrastructure",
        "automation",
        "Cookbooks",
        "Chef",
        "Configured",
        "servers",
        "Chef",
        "Defined",
        "Chef",
        "Server",
        "workstation",
        "configure",
        "nodes",
        "wrapper",
        "scripts",
        "deployment",
        "Chef",
        "cookbooks",
        "nodes",
        "Chef",
        "client",
        "Chef",
        "environment",
        "Jenkins",
        "CICD",
        "pipeline",
        "improvement",
        "software",
        "development",
        "teams",
        "Configured",
        "Jenkins",
        "Chef",
        "jobs",
        "nodes",
        "pipelines",
        "automation",
        "commit",
        "deployment",
        "Administered",
        "Seven",
        "Jenkins",
        "servers",
        "install",
        "backup",
        "users",
        "plans",
        "agent",
        "capabilities",
        "performance",
        "troubleshooting",
        "issues",
        "maintenance",
        "Jenkins",
        "build",
        "deployment",
        "scenario",
        "jobs",
        "branches",
        "tasks",
        "development",
        "server",
        "QA",
        "server",
        "StagingProduction",
        "server",
        "Shell",
        "Python",
        "deployment",
        "scripts",
        "web",
        "application",
        "servers",
        "Python",
        "Shell",
        "Scripts",
        "automation",
        "build",
        "release",
        "process",
        "tools",
        "Git",
        "JIRA",
        "application",
        "code",
        "issue",
        "tracking",
        "code",
        "reviews",
        "application",
        "development",
        "operation",
        "teams",
        "variety",
        "testing",
        "tools",
        "MAVEN",
        "Nexus",
        "issues",
        "transition",
        "DevOps",
        "solution",
        "Pomxml",
        "files",
        "releases",
        "Maven",
        "release",
        "Maven",
        "Java",
        "projects",
        "Maven",
        "repositories",
        "Maven",
        "build",
        "projects",
        "conversion",
        "Maven",
        "automation",
        "projects",
        "Maven",
        "build",
        "tools",
        "Java",
        "projects",
        "development",
        "build",
        "artifacts",
        "source",
        "code",
        "deployments",
        "Splunk",
        "dashboards",
        "reports",
        "side",
        "side",
        "teams",
        "integration",
        "issues",
        "Splunk",
        "dashboards",
        "Splunk",
        "Alerts",
        "configure",
        "alerts",
        "customer",
        "requirement",
        "Prepared",
        "Splunk",
        "search",
        "strings",
        "strings",
        "Hashicorp",
        "Vault",
        "data",
        "Table",
        "Level",
        "replication",
        "PostgreSQL",
        "Environment",
        "AWS",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Groups",
        "Auto",
        "Scaling",
        "RDS",
        "Cloud",
        "Formation",
        "Route",
        "Elastic",
        "Load",
        "Balancer",
        "VPC",
        "OpenStack",
        "Shell",
        "Scripting",
        "Python",
        "Chef",
        "Jenkins",
        "Splunk",
        "JIRA",
        "Maven",
        "Chef",
        "GIT",
        "Vault",
        "Build",
        "Release",
        "Engineer",
        "Semantic",
        "Space",
        "Technologies",
        "Hyderabad",
        "Telangana",
        "April",
        "July",
        "Responsibilities",
        "Release",
        "Plan",
        "collection",
        "analysis",
        "presentation",
        "Release",
        "Project",
        "Metrics",
        "basis",
        "Jenkins",
        "CICD",
        "pipeline",
        "jobs",
        "endtoend",
        "automation",
        "test",
        "artifacts",
        "build",
        "issue",
        "Jenkins",
        "build",
        "process",
        "endtoend",
        "CICD",
        "pipeline",
        "applications",
        "Jenkins",
        "Integration",
        "server",
        "Dev",
        "QA",
        "Staging",
        "Prod",
        "Managed",
        "Dependency",
        "Management",
        "teams",
        "Nexus",
        "Repository",
        "Manager",
        "artifacts",
        "Nexus",
        "repository",
        "Local",
        "Virtual",
        "Repositories",
        "Artifactory",
        "project",
        "release",
        "repository",
        "management",
        "ANT",
        "snapshots",
        "releases",
        "projects",
        "JFrog",
        "Artifactory",
        "CICD",
        "platform",
        "Jenkins",
        "build",
        "processes",
        "unit",
        "testing",
        "framework",
        "testing",
        "code",
        "quality",
        "checking",
        "artifact",
        "management",
        "Nexus",
        "Create",
        "configuration",
        "pipeline",
        "Jenkins",
        "vault",
        "application",
        "configuration",
        "application",
        "releases",
        "Setup",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "GIT",
        "GIT",
        "Jenkins",
        "code",
        "process",
        "help",
        "Jenkins",
        "DSL",
        "Plugin",
        "repositories",
        "tags",
        "GIT",
        "developers",
        "merging",
        "issues",
        "build",
        "deployment",
        "scripts",
        "test",
        "Staging",
        "Production",
        "environments",
        "ANT",
        "build",
        "pipelines",
        "Linux",
        "Server",
        "master",
        "images",
        "schedule",
        "configuration",
        "changes",
        "ANT",
        "build",
        "tool",
        "projects",
        "development",
        "build",
        "artifacts",
        "source",
        "code",
        "EAR",
        "WAR",
        "archives",
        "WebLogic",
        "Apache",
        "Servers",
        "Experience",
        "Junit",
        "SonarQube",
        "code",
        "analysis",
        "testing",
        "build",
        "Environment",
        "Jenkins",
        "Nexus",
        "JFrog",
        "Artifactory",
        "ANT",
        "Git",
        "Jira",
        "Linux",
        "Junit",
        "SonarQube",
        "WebLogic",
        "Apache",
        "Shell",
        "Scripts",
        "Systems",
        "Administrator",
        "Global",
        "Logic",
        "Hyderabad",
        "Telangana",
        "April",
        "March",
        "Responsibilities",
        "System",
        "administration",
        "tasks",
        "troubleshooting",
        "problem",
        "resolution",
        "packages",
        "rpm",
        "yum",
        "drivers",
        "software",
        "hardware",
        "upgrades",
        "Cron",
        "jobs",
        "Systems",
        "backup",
        "OS",
        "installation",
        "Jumpstart",
        "Kickstart",
        "RedHat",
        "Enterprise",
        "Linux",
        "Linux",
        "OS",
        "storage",
        "applications",
        "systems",
        "Wrote",
        "scripts",
        "Bash",
        "Shell",
        "Python",
        "data",
        "center",
        "migration",
        "performance",
        "improvements",
        "operating",
        "systems",
        "wrapper",
        "scripts",
        "Bash",
        "shell",
        "execution",
        "Python",
        "scripts",
        "processes",
        "disk",
        "usage",
        "cleanup",
        "file",
        "systems",
        "Linux",
        "environments",
        "shell",
        "Bash",
        "Python",
        "building",
        "testing",
        "deployment",
        "Java",
        "Applications",
        "Servers",
        "Production",
        "Servers",
        "troubleshooting",
        "network",
        "ports",
        "firewalls",
        "application",
        "firewall",
        "Iptables",
        "hostnames",
        "traffic",
        "diagnosis",
        "tools",
        "ping",
        "Wireshark",
        "TCPdump",
        "Responsible",
        "NFS",
        "DNS",
        "iSCSI",
        "servers",
        "system",
        "performance",
        "tuneup",
        "kernel",
        "parameter",
        "hosts",
        "users",
        "disks",
        "DNS",
        "NIS",
        "domain",
        "Environment",
        "Red",
        "Hat",
        "Enterprise",
        "Linux",
        "Bash",
        "Shell",
        "Python",
        "Networking",
        "TCP",
        "DNS",
        "Wireshark",
        "NIS",
        "NFS",
        "DHCP",
        "Firewalls",
        "Linux",
        "Administrator",
        "Inforlinx",
        "Solutions",
        "Private",
        "Ltd",
        "Hyderabad",
        "Telangana",
        "February",
        "March",
        "Responsibilities",
        "End",
        "End",
        "Linux",
        "Administration",
        "installation",
        "configuration",
        "upgrades",
        "maintenance",
        "troubleshooting",
        "Linux",
        "systems",
        "Perform",
        "Daytoday",
        "hands",
        "work",
        "building",
        "Linux",
        "systems",
        "VMware",
        "environment",
        "patches",
        "installation",
        "patch",
        "upgrades",
        "packages",
        "installation",
        "Red",
        "Hat",
        "Linux",
        "servers",
        "RPM",
        "YUM",
        "bash",
        "shell",
        "scripts",
        "needs",
        "automation",
        "installs",
        "configurations",
        "RedHat",
        "Linux",
        "environment",
        "scripting",
        "experience",
        "bash",
        "ksh",
        "Shell",
        "Experience",
        "team",
        "environment",
        "Expertise",
        "Bash",
        "Scripts",
        "hash",
        "arrays",
        "Python",
        "Scripts",
        "deployment",
        "Java",
        "applications",
        "servers",
        "Middleware",
        "tools",
        "administration",
        "Engineering",
        "LANWAN",
        "switch",
        "provisioning",
        "administration",
        "network",
        "environments",
        "TCPIP",
        "NIS",
        "NFS",
        "DNS",
        "SNMP",
        "agents",
        "DHCP",
        "Proxy",
        "Environment",
        "RedHat",
        "Enterprise",
        "Linux",
        "VMWare",
        "shell",
        "Python",
        "Bash",
        "Java",
        "Network",
        "LAN",
        "WAN",
        "NIS",
        "NFS",
        "DNS",
        "SNMP",
        "Skills",
        "Docker",
        "Git",
        "Gradle",
        "Groovy",
        "Jenkins",
        "Perl",
        "Python",
        "Ruby",
        "Scripting",
        "Ant",
        "Configuration",
        "management",
        "Maven",
        "Chef",
        "Nagios",
        "Networking",
        "Puppet",
        "Tcpip",
        "Virtualization",
        "Jira",
        "Junit",
        "Links",
        "httpwwwlinkedincominharshithTH",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Operating",
        "Systems",
        "Windows",
        "UNIX",
        "Red",
        "Hat",
        "LINUX",
        "Ubuntu",
        "CentOS",
        "Source",
        "Code",
        "Management",
        "Tools",
        "GIT",
        "Bitbucket",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Gradle",
        "Continuous",
        "Integration",
        "Tools",
        "Jenkins",
        "Bug",
        "Tracking",
        "Testing",
        "JIRA",
        "Junit",
        "Configuration",
        "Management",
        "Tools",
        "Chef",
        "Ansible",
        "Puppet",
        "Terraform",
        "Scripting",
        "Shell",
        "Script",
        "Ruby",
        "Perl",
        "Python",
        "Bash",
        "Groovy",
        "Virtualization",
        "Tools",
        "Virtual",
        "Box",
        "VMware",
        "Vagrant",
        "Cloud",
        "Services",
        "AWS",
        "Azure",
        "OpenStack",
        "SDLC",
        "Agile",
        "Scrum",
        "Waterfall",
        "Methodologies",
        "Networking",
        "Services",
        "FTP",
        "SSH",
        "TELNET",
        "HTTP",
        "SNMP",
        "FTP",
        "SMTP",
        "NFS",
        "WinSCP",
        "Monitoring",
        "Tools",
        "Splunk",
        "Nagios",
        "ELK",
        "Repositories",
        "Nexus",
        "JFrog",
        "Artifactory",
        "Containerization",
        "Orchestration",
        "Docker",
        "Kubernetes",
        "OpenShift"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:20:09.092642",
    "resume_data": "Sr Cloud DevOps Engineer Sr Cloud DevOps Engineer Sr Cloud DevOps Engineer Fifth Third Bank Cincinnati OH 7 years of overall experience in Cloud DevOps and Build and Release Management involving extensive work towards code compilation packaging building debugging automating managing tuning and deploying code across multiple environments Designed configured and managed cloud infrastructures utilizing Amazon Web Services AWS including EC2 S3 RedShift CloudFront RDS DynamoDB VPC Route53 CloudFormation Elasticsearch Elastic Container Service Worked with AWS Identity Access Management IAM service creating new IAM users groups defining roles and policies and Identity providers setting up AWS EC2 instances virtual private cloud VPCs and security groups and setting up databases using AWS RDS storage using S3 bucket and configuring instance backups to S3 bucket Experience working on Multiple AWS instances set the Security Groups Elastic Load Balancer Auto Scaling to design cost effective fault tolerant and highly available systems and created alarms and trigger points in CloudWatch based on thresholds and monitored the servers performance CPU Utilization disk usage Deployed applications on AWS by using Elastic Beanstalk Experience in designing configuring and deploying with Microsoft Azure for a multitude of applications utilizing the Azure stack Compute Web Mobile Blobs Resource Groups Azure SQL Cloud Services and ARM Resource Manager focusing on highavailability fault tolerance and autoscaling Experienced on creating Azure VM Azure Cloud Services and Storages by using Azure PowerShell Script and also orchestrate the data to and from Data Lake Store using Azure Data factory Experience in creating and managing Azure AD tenants and configured application with Azure AD Configuring ADFS authentication flow ADFS installation using Azure AD Connect Extensively worked in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Implemented Terraform modules for deployment of various applications across Azure cloud provider and managing infrastructure Proficient with Vagrant Docker Kubernetes based cluster container and virtualization deployments to create shelf environments for dev teams containerizationVirtualization of environment delivery for releases using virtualization tools like VMware VirtualBox and OpenStack cloud Worked on installing of Docker using Docker toolbox creation of custom Docker container images tagging and pushing the images removing images and managing Docker volumes and setting up Docker Host in CentOS and Ubuntu Worked on all major components of Docker like Docker Daemon Hub Images Registry Well versed in container orchestration using Kubernetes Experienced in Kubernetes deployment of microservices replication controllers Helm charts Scheduler clusters Experience Installing and configuring Kubernetes UI for better visualization of the Cluster Managements Nodes and Pods in the environments Experience working with Ansible to automate repetitive tasks to deploy critical applications quickly and proactively manage the changes Worked with Ansible playbooks written in YAML for virtual and physical instance provisioning configuration management patching and software deployment Experienced in Writing Chef Recipes to automate the builddeployment process and do an overall process improvement to any manual processes Good knowledge in managing Nexus and JFrog artifactory repositories for the maven artifacts and dependencies Experience in CI Continuous Integration and CD Continuous Delivery methodologies using Jenkins for EndtoEnd automation for all build and deployments of Java or J2EE applications Strong experience utilizing Jenkins for enterprise scale infrastructure configuration and application deployments checking out the code from GIT and use AntMaven to build JAR WAR TAR and EAR artifacts Ability to build deployment build scripts and automated solutions using various Scripting languages such as Shell Python Ruby Experience in using Splunk for log analyzing and improving the performance of servers Monitor performance of server as per daily activities using Nagios monitoring tools Experience in Building dashboards to correlate important events billing and security related data with the ELK Stack Experience in working on version control systems like GIT and used Source code management client tools like GitLab GitHub Git GUI and other command line applications Strong knowledge on source controller concepts like Branching Merging Inventoried and administered Red Hat Enterprise Linux RHEL FreeBSD and VMware servers writing several utilities to manage them simultaneously Understanding of protocols and technologies such as Internet Protocol IP Voice over IP VOIP LocalWide Area Network LANWAN Domain name system DNS and Dynamic host configuration protocol DHCP Proficient in tracing complex build problems release issues and environment issues in a multicomponent environment Work Experience Sr Cloud DevOps Engineer Fifth Third Bank Cincinnati OH June 2018 to Present Responsibilities Configured and deployed Azure Automation Scripts for a large set of applications utilizing the Azure stack Including Compute Blob Storage ADFS Active directory Federation Services Resource Groups Azure Data Lake HDInsight Clusters Azure Data Factory Azure SQL Cloud Services and ARM Services and Utilities focusing on Automation Configured Azure MultiFactor Authentication as a part of Azure Active Directory AD Premium to securely authenticate users Created Azure Automation Assets Graphical runbooks PowerShell runbooks that will automate specific tasks and excellent skills in deploying Azure AD Connect configuring ADFS authentication flow ADFS installation using Azure AD Connect Configured DSC configurations to deploy Handled escalated Support tickets till closure for MS Azure PaaS platform Configured AD connect to configure federation with onpremises Active Directory Federation Services ADFS and Azure AD Used Azure Blob Storage to access required files and Azure Storage Queues to communicate between related processes Configured Azure Virtual Machines in availability sets using ARM templates to provide resiliency for IaaS based solution and scale sets using Azure Resource Manager to manage network traffic Created Environment with both PowerShell and ARM Templates together Migrated current Azure SQL Data center environment using Azure Disaster Recovery ADR Also did Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Deployed the initial Azure components like Azure Virtual Networks Azure Application Gateway Azure Storage and Affinity groups Used Jenkins pipelines to drive all micro Services builds out to the Docker registry and then deployed to Azure Kubernetes Services Created Pods and managed using Azure Kubernetes services Managed different infrastructure resources like physical machines VMs and even Docker containers using Terraform Virtualized the servers using the Docker for the test environments and devenvironments needs And also configuration automation using Docker containers Created additional Docker Slave Nodes for Jenkins using custom Docker Images and pulled them to ACR Used Kubernetes to manage containerized applications using its nodes helmcharts ConfigMaps selector Services and deployed application containers as Pods Deployed Application Containers into Pods in Kubernetes Node Clusters and also managed Kubernetes with KubeCtl and also Manage from Kubernetes UI Installed Ansible Server and Ansible Clients to pick up the build from Jenkins repository and deploy in target environments Using Ansible galaxy for Documentation and References and creating Ansible playbook and Deploying on nodes Implemented a CICD pipeline with Docker Jenkins and GitHub by virtualizing the servers using Docker for the Dev and Test environments by achieving needs through configuring automation using Containerization Used Ansible Configuration management to deploy packages with the required build artifacts from Artifactory and facilitate a stable and scalable build and deploy infrastructure Automated infrastructure activities like Continuous Deployment setting up and configuring Tomcat servers managing the configuration changes and Stack monitoring using Ansible playbooks based on YAML Wrote the Ansible playbooks which are the entry point for Ansible provisioning where the automation is defined through tasks using YAML format Run Ansible Scripts to provision Dev servers Experienced in writing Bash and Python scripts Included to supplement automation provided by Ansible and terraform Used Jenkins for CICD pipelines to automate most of the build related tasks using Poll SCM Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs using Jenkins Git and JUnit Worked on GIT version control systems by setting up the repositories for Jenkins build jobs polled Version Control Systems in a sequential manner using Cron Jobs Used Nagios for application and hardware resource monitoring Writing new plugins in Nagios to monitor resources Written automation scripts in Shell for configuring logging monitoring agents on system and application level Worked on ManagingTracking the defects status by using JIRA tool and Planning resolving the issues as per SLA Environments Azure Azure VM Blob Storage Active Directory Federation Services Azure AD Azure SQL ARM Templates AD Connect Docker Kubernetes Jenkins Nagios Junit JFrog Artifactory Terraform Maven Ansible Agile Bash Shell Python Sr Cloud DevOps Engineer Mokxa Technologies Columbia MD May 2017 to May 2018 Responsibilities Worked in a team of DevOps Engineers for providing infrastructure support on AWS cloud Involved in designing and deploying multitude applications utilizing AWS stack Including EC2 S3 AMI Route53 RDS SNS SQS IAM focusing on highavailability fault tolerance and AutoScaling Created AWS RDS instances to serve data through servers for responding to requests Created snapshots and images to store launch configurations of the AWS EC2 instances Utilized highly available AWS Environment to launch the applications in different regions and implemented CloudFront with AWS Lambda to reduce latency Also developed micro service with AWS Lambda and S3 using Java to improvise the performance of the application Responsible for defining and creating API architecture for a largescale digital transformation using AWS API Gateway and Lambda functions Created SNS for EC2 servers to get notifications if it is shutdown terminated or start Also used SQS queues for getting messages from another team Used IAM to create new accounts roles and groups and engaged in enabling lambda functions for dynamic creation of Roles and also the policies Performed Migration of data present in Datacenters from onpremises to a public Cloud using AWS ImportExport Snowball service Used Terraform and did Infrastructure as a code and modifying terraform scripts as and when configuration changes happens Automated deployment of web app to AWS using Terraform Worked with Consistent environment using Kubernetes for deployment scaling and load balancing to the application from dev through production easing the code development and deployment pipeline by implementing Docker containerization with multiple namespace Worked on creating clusters using Kubernetes and worked on initializing pods replication controllers deployments labels health checks and ingress by writing YAML files also wrote Helm Charts for deploying microservices into Kubernetes clusters Created pods and services using Master and Minion architecture of Kubernetes and developed microservice on boarding tools leveraging Python allowing for creation and maintenance build jobs and Kubernetes deploy services Extensively used Kubernetes charts using Helm and created reproducible builds of the Kubernetes applications managed Kubernetes manifest files and managed releases of Helm packages Created the pods in OpenShift Environment by using Docker file and Created clusters from the docker containers with the help of Kubernetes on the OpenShift platform Written python scripts to containerize using Docker and orchestrate it using Kubernetes Configured the services using modern DevOps tools like Ansible Automated application deployment in the cloud using Docker technology using Elastic Container Service scheduler Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Implemented Ansible to deploy the builds for Dev QA and production Automation of infrastructure by creating Ansible Playbooks in YAML Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Development servers Written Chef Recipes to automate deployment process and data bags in Chef for better environment management and test kitchen to validate cookbooks Extensively worked with Jenkins to know various things like build status count of builds GIT commit version used by Jenkins builds etc using Groovy Script Wrote groovy scripts for Jenkins pipelines build deploy on multiple nodes for 80 servers Setup Jenkins tool to integrate the JAVA project and maintained Jenkins with continuous integration and deployment Designed an ELK system to monitor and search enterprise alerts and Installed configured and maintained the ELK Stack for Log management within VMs for Elastic Search Monitored performance of the applications and analyzed log information using ELK Elasticsearch Logstash Kibana Installed configured and managed the ELK Elastic Search Log stash and Kibana for Log management within EC2 Elastic Load balancer Configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Worked on JIRA installation and upgrade and performed JIRA configuration Troubleshoot environment related issues provide fixes and incident tickets and track them to closure on JIRA Environment AWS EC2 S3 AMI Route53 RDS SNS SQS IAM Autoscaling Lambda API Gateway SNS SQS CloudWatch Elastic Block Storage Shell Python GIT Jenkins Groovy ELK Ansible Chef Docker Kubernetes OpenShift Terraform Jira DevOps Engineer ARRIS Horsham PA September 2016 to April 2017 Responsibilities Implement systems that are highly available scalable and selfhealing on the AWS platform Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in Cloud Formation JSON templates Connected user requests to infrastructure running in AWS such as Amazon EC2 instances Elastic Load Balancing load balancers or Amazon S3 buckets and outside AWS using Amazon Route 53 Provided high level technical trouble shooting of all OpenStack services across Chef and Red Hat OSP deployed clouds varying over a multitude of versions and deployment strategies Was Responsible for Planning amendments advancing architecture executing quality control of all technical maintenance plans for diverse OpenStack private Cloud based customers Implemented Chef Recipes for Deployment on build on internal Data Center Servers Also reused and modified same Chef Recipes to create a Deployment directly into Amazon EC2 instances Also Installed Workstation Bootstrapped Nodes wrote Recipes and Cookbooks and uploaded them to Chefserver and managed AWS for EC2 S3 ELB with Chef Cookbooks Deployment and management of many servers and Maintaining Infrastructure automation by writing Cookbooks in Chef Configured and monitored distributed and multiplatform servers using Chef Defined Chef Server and workstation to manage and configure nodes Written wrapper scripts to automate deployment of Chef cookbooks on nodes and running the Chef client on them in Chef environment Worked with Jenkins under the CICD pipeline providing continuous improvement to Agile software development teams Configured Jenkins and integrated it with Chef to schedule jobs on all the bootstrapped nodes and created pipelines to complete automation from commit to deployment Administered Seven Jenkins servers which includes install upgrade backup adding users creating plans installing localremote agent adding capabilities performance tuning troubleshooting issues and maintenance Used Jenkins to create various build and deployment scenario such as jobs to build from various branches deploy tasks to development server or QA server or StagingProduction server Created and maintained the Shell and Python deployment scripts for web application servers Developed Python and Shell Scripts for automation of the build and release process Work with the tools such Git JIRA to store and share the application code issue tracking and code reviews respectively Work with application development and operation teams using a variety of automated testing and build and deploy tools MAVEN Nexus to resolve issues with transition to new DevOps solution Experienced in authoring Pomxml files performing releases with the Maven release plugin Maven for Java projects and managing Maven repositories and Analyzed the Maven build projects for conversion and converting to Maven build automation projects Used Maven as build tools on Java projects for the development of build artifacts on the source code Worked on Drive complex deployments of Splunk dashboards and reports while working side by side with technical teams to solve their integration issues Monitoring Splunk dashboards Splunk Alerts and configure scheduled alerts based on the internal customer requirement Prepared arranged and tested Splunk search strings and operational strings Used Hashicorp Vault and encrypted and decrypted data without storing it and Implemented Table Level Logical replication in PostgreSQL Environment AWS EC2 S3 IAM EBS Security Groups Auto Scaling RDS Cloud Formation Route 53 Elastic Load Balancer VPC OpenStack Shell Scripting Python Chef Jenkins Splunk JIRA Maven Chef GIT Vault Build and Release Engineer Semantic Space Technologies Hyderabad Telangana April 2014 to July 2016 Responsibilities Creating of Release Plan collection analysis and presentation of Release Project Metrics on weekly basis Worked on Jenkins CICD pipeline jobs for endtoend automation to build test and deliver artifacts and Troubleshoot the build issue during the Jenkins build process Created tested and deployed an endtoend CICD pipeline for various applications using Jenkins as the main Integration server for Dev QA Staging and Prod environments Managed Dependency Management within the teams by installing and configuring Nexus Repository Manager Also managed artifacts in Nexus repository Creating Local Virtual Repositories in Artifactory for the project and release builds repository management in ANT to share snapshots and releases of internal projects using JFrog Artifactory Worked on leveraging digital CICD platform Jenkins incorporating automated build processes unit testing framework endtoend mock testing code quality checking and artifact management using Nexus Create configuration pipeline using Jenkins vault to maintain application configuration independent of application releases Setup Jenkins server and built jobs to provide continuous automated builds based on polling the GIT and integrated GIT with Jenkins to automate the code check out process with the help of Jenkins DSL Plugin Created repositories branches tags in GIT assisted the developers to fix merging issues Responsible for developing and maintaining build deployment scripts for test Staging and Production environments using ANT Developed build pipelines to produce Linux Server master images on a schedule as well as track configuration changes Used ANT as a build tool on java projects for the development of build artifacts on the source code Deployed the EAR and WAR archives into WebLogic and Apache Servers Experience integrating Junit SonarQube code analysis and testing during the build Environment Jenkins Nexus JFrog Artifactory ANT Git Jira Linux Junit SonarQube WebLogic Apache Shell Scripts Systems Administrator Global Logic Hyderabad Telangana April 2013 to March 2014 Responsibilities Performed standard System administration tasks such as troubleshooting and problem resolution patching installing packages using rpm and yum drivers software and hardware upgrades Worked on Cron jobs Systems backup and OS installation using Jumpstart and Kickstart for RedHat Enterprise Linux environments Work with specifically within the Linux OS storage how applications interact with underlying systems Wrote and enhanced existing scripts in Bash Shell and Python which are used for data center migration and performance improvements on operating systems and developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed automated processes that run daily to check disk usage and perform cleanup of file systems on Linux environments using shell Bash scriptingksh Python Worked on building testing and deployment of Java Applications on to Test Servers and Production Servers Involved in troubleshooting network by verifying the ports are opened and not blocked by the firewalls for the application if not requesting firewall Iptables checking the hostnames etc traffic and its diagnosis using tools like ping Wireshark and TCPdump Responsible for maintaining and configuring NFS DNS DHCP and iSCSI servers Monitored system performance tuneup kernel parameter adding removing administering hosts users disks on DNS NIS domain Environment Red Hat Enterprise Linux Bash Shell Python Networking TCP DNS Wireshark NIS NFS DHCP Firewalls Linux Administrator Inforlinx Solutions Private Ltd Hyderabad Telangana February 2012 to March 2013 Responsibilities Provide End to End Linux Administration including installation configuration upgrades and maintenance and troubleshooting of Linux systems Perform Daytoday hands on work building patching and maintaining Linux systems in a highly virtualized VMware environment Worked on patches installation patch upgrades and packages installation on Red Hat Linux servers by using RPM YUM Written different bash shell scripts as per the needs for monitoring automation of installs and configurations for RedHat Linux environment Demonstrated scripting experience in bash ksh or Shell Experience working in a team and large environment Expertise in writing Bash Scripts hash and arrays Python Scripts for deployment of Java applications on bare servers or Middleware tools Responsible for administration the Engineering LANWAN including switch and router provisioning and administration Setting up network environments using TCPIP NIS NFS DNS SNMP agents DHCP and Proxy Environment RedHat Enterprise Linux VMWare shell Python Bash Java Network LAN WAN TCPIP NIS NFS DNS SNMP DHCP Skills Docker Git Gradle Groovy Jenkins Perl Python Ruby Scripting Ant Configuration management Maven Chef Nagios Networking Puppet Tcpip Virtualization Jira Junit Links httpwwwlinkedincominharshithTH Additional Information TECHNICAL SKILLS Operating Systems Windows UNIX Red Hat LINUX Ubuntu CentOS Source Code Management Tools GIT Bitbucket Build Tools Ant Maven Gradle Continuous Integration Tools Jenkins Bug Tracking and Testing JIRA Junit Configuration Management Tools Chef Ansible Puppet Terraform Scripting Shell Script Ruby Perl Python Bash Groovy Virtualization Tools Virtual Box VMware Vagrant Cloud Services AWS Azure OpenStack SDLC Agile Scrum Waterfall Methodologies Networking Services FTP SSH TELNET TCPIP HTTP DHCP SNMP FTP SMTP NFS WinSCP Monitoring Tools Splunk Nagios ELK Repositories Nexus JFrog Artifactory Containerization and Orchestration Docker Kubernetes OpenShift",
    "unique_id": "c7d26730-19b1-4ddc-b18a-b32431b28720"
}