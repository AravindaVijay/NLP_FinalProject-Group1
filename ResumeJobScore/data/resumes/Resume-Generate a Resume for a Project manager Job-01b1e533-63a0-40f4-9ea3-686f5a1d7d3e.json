{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Orion Systems Integrators Inc California City CA Having 9 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy Pandas python packages like SciPy tables etc Developed a novel approach detecting vowels nucleus of loudness called VLD in a recorded speech utterance using above features Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used PythonDjango MVC framework to design and develop the application Experience in Kubernets that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Authorized to work in the US for any employer Work Experience Senior Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ August 2018 to Present Roles Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Senior Python Developer Matlen Silver New York NY December 2015 to July 2018 Roles Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Anexinet Inc King of Prussia PA September 2012 to November 2015 Roles Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Halvik Washington DC January 2010 to August 2012 Roles Responsibilities Designed front end using HTML Bootstrap and CSS Created entire application using Python Django MongoDB and Linux Used Python libraries like Selenium Numpy and SQLAlchemy Worked on several Python libraries like Numpy Pandas and Matplotlib Developed and implemented the user registration and login feature for the application process by extending Django user model Design develop and test HTML5 CSS3 Bootstrap JavaScript and React that meets accessibility and web browser standards for website Created entire application using Python Django MySQL and Linux Created Several XML Schemas and Developed Stored PLSQL Procedures and Packages to automatically create and drop table indexes Generated Python Django forms to record data of online users and used PyTest for writing test cases Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Developed web applications and RESTful web services and APIs using Python Responsible for setting up Python REST API framework using DJANGO Used Numpy Matplotlib and Pandas to generate products for major enterprises Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Designed and developed the UI of the website using HTML and CSS Wrote executed various MYSQL database queries from Python using PythonMySQL connector MySQL dB package Developed and designed automation script using Python and Bash Built SQL queries for performing various CRUD operations like create update read and delete Responsible for setting up Python REST API framework using Django Environment Python MySQL Hive JSON RESTful Pandas Machine Learning Version One Linux Shell Scripting IBM Natuzzi JavaScript AngularJS Toad Data Point SQLPutty Linux Education Bachelors",
    "entities": [
        "Flask Admin MySQL and SQLite Responsible",
        "GUI",
        "New York",
        "HTML AJAX CSS",
        "UNIX",
        "HTTP",
        "Working",
        "JSON",
        "OpenStack",
        "Software Configuration Management",
        "Model View Control MVC",
        "XML",
        "DHTML",
        "Python 3627 Django 1718",
        "jQuery Created",
        "Pandas Machine Learning",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "jQuery J2EE Experienced",
        "Implemented Terraform",
        "Amazon",
        "WebSphere",
        "Python",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Stored Procedures",
        "Developed",
        "CSS Bootstrap",
        "Python Flask framework Involved",
        "Automation Test",
        "MS Excel",
        "JQuery Implemented",
        "VLD",
        "Analysis Design Development and Testing Developed",
        "SQL PLSQL",
        "Kubernets",
        "HTML Developed",
        "Bash Python",
        "Technologies",
        "DjangoREST",
        "CSS Wrote",
        "Develop",
        "JSP",
        "jQuery Developed Consumerbased",
        "Flask",
        "MVC",
        "Created a Python",
        "PythonDjango",
        "GIT Proficient",
        "Integration Testing",
        "GIT",
        "CSS Created",
        "HTML CSS",
        "API",
        "US",
        "Database",
        "HTML CSS JavaScript",
        "QA",
        "AWS",
        "Implemented",
        "Oracle",
        "AWS SNS Wrote",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Worked with View Sets",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "HTML",
        "SSRS",
        "SQL",
        "lPythonspan",
        "Nginx",
        "SSH",
        "SQL Alchemy",
        "Built an",
        "Anaconda",
        "CI",
        "MVW",
        "Amazon AWS",
        "google analytics",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "Frigate",
        "JavaScript",
        "the Application Developed",
        "RedisCache",
        "UI",
        "Front",
        "Expertise",
        "CSS",
        "Tomcat",
        "REST",
        "UNIX Wrote Python",
        "Software Development Life Cycle",
        "HTML Bootstrap",
        "PyTest",
        "Configs",
        "Node",
        "Implemented RESTful WebServices",
        "Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ"
    ],
    "experience": "Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy Pandas python packages like SciPy tables etc Developed a novel approach detecting vowels nucleus of loudness called VLD in a recorded speech utterance using above features Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used PythonDjango MVC framework to design and develop the application Experience in Kubernets that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Authorized to work in the US for any employer Work Experience Senior Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ August 2018 to Present Roles Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Senior Python Developer Matlen Silver New York NY December 2015 to July 2018 Roles Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Anexinet Inc King of Prussia PA September 2012 to November 2015 Roles Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Halvik Washington DC January 2010 to August 2012 Roles Responsibilities Designed front end using HTML Bootstrap and CSS Created entire application using Python Django MongoDB and Linux Used Python libraries like Selenium Numpy and SQLAlchemy Worked on several Python libraries like Numpy Pandas and Matplotlib Developed and implemented the user registration and login feature for the application process by extending Django user model Design develop and test HTML5 CSS3 Bootstrap JavaScript and React that meets accessibility and web browser standards for website Created entire application using Python Django MySQL and Linux Created Several XML Schemas and Developed Stored PLSQL Procedures and Packages to automatically create and drop table indexes Generated Python Django forms to record data of online users and used PyTest for writing test cases Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Developed web applications and RESTful web services and APIs using Python Responsible for setting up Python REST API framework using DJANGO Used Numpy Matplotlib and Pandas to generate products for major enterprises Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Designed and developed the UI of the website using HTML and CSS Wrote executed various MYSQL database queries from Python using PythonMySQL connector MySQL dB package Developed and designed automation script using Python and Bash Built SQL queries for performing various CRUD operations like create update read and delete Responsible for setting up Python REST API framework using Django Environment Python MySQL Hive JSON RESTful Pandas Machine Learning Version One Linux Shell Scripting IBM Natuzzi JavaScript AngularJS Toad Data Point SQLPutty Linux Education Bachelors",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "Orion",
        "Systems",
        "Integrators",
        "Inc",
        "California",
        "City",
        "CA",
        "Years",
        "Experience",
        "webapplication",
        "developer",
        "software",
        "development",
        "design",
        "python",
        "Django",
        "Java",
        "Webapp2",
        "Angularjs",
        "HTMLCSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "Consumerbased",
        "custom",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "experience",
        "data",
        "engineering",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupiter",
        "Notebook",
        "PyCharm",
        "Emacs",
        "Spyder",
        "Visual",
        "Studio",
        "Strong",
        "expertise",
        "development",
        "applications",
        "Python",
        "Flask",
        "Dojo",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "J2EE",
        "Python",
        "programming",
        "Python",
        "libraries",
        "data",
        "science",
        "Anaconda",
        "distribution",
        "NumPy",
        "Pandas",
        "python",
        "packages",
        "SciPy",
        "tables",
        "approach",
        "vowels",
        "nucleus",
        "loudness",
        "VLD",
        "speech",
        "utterance",
        "features",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "python",
        "Django",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTML",
        "CSS",
        "jQuery",
        "data",
        "visualization",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Anisole",
        "Anisole",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "Testing",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Working",
        "experience",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Python",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "Frigate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MYSQL",
        "Oracle",
        "SQL",
        "Cassandra",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Experience",
        "List",
        "Comprehensions",
        "Python",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Experience",
        "CI",
        "tools",
        "Hudson",
        "Build",
        "Forge",
        "Jenkins",
        "builds",
        "PythonDjango",
        "MVC",
        "framework",
        "application",
        "Experience",
        "Kubernets",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Orion",
        "Systems",
        "Integrators",
        "Inc",
        "Woodcliff",
        "Lake",
        "NJ",
        "August",
        "Present",
        "Roles",
        "Responsibilities",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "sales",
        "data",
        "years",
        "model",
        "sales",
        "understanding",
        "Balance",
        "sheet",
        "Daily",
        "Income",
        "sheet",
        "analysis",
        "profit",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Experience",
        "ad",
        "reports",
        "MS",
        "Excel",
        "builder",
        "SSRS",
        "SSIS",
        "packages",
        "data",
        "transformations",
        "column",
        "lookup",
        "confidential",
        "split",
        "merge",
        "join",
        "sort",
        "SQL",
        "task",
        "data",
        "database",
        "inventory",
        "forecasts",
        "managers",
        "performance",
        "issues",
        "custom",
        "reports",
        "management",
        "companys",
        "business",
        "process",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "demoralization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Anisole",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Agulars",
        "Developed",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "Cloud",
        "Watch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Senior",
        "Python",
        "Developer",
        "Matlen",
        "Silver",
        "New",
        "York",
        "NY",
        "December",
        "July",
        "Roles",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "Wrote",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "WebServices",
        "data",
        "systems",
        "Jenkins",
        "configuring",
        "integrationCI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "Bash",
        "Perl",
        "Python",
        "daytoday",
        "tasks",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "Dynamo",
        "DB",
        "notification",
        "AWS",
        "SNS",
        "Wrote",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Developed",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Work",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "product",
        "situations",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "Cloud",
        "Watch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Python",
        "Developer",
        "Anexinet",
        "Inc",
        "King",
        "Prussia",
        "PA",
        "September",
        "November",
        "Roles",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirement",
        "gathering",
        "system",
        "configuration",
        "specifications",
        "client",
        "interaction",
        "Developed",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "service",
        "Python",
        "Flask",
        "framework",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "REST",
        "Web",
        "services",
        "business",
        "methods",
        "services",
        "project",
        "Interface",
        "Django",
        "Salesforce",
        "Django",
        "RESTAPI",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "Application",
        "software",
        "tools",
        "clients",
        "customers",
        "organization",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "SQLite",
        "Responsible",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "AJAX",
        "Tomcat",
        "Apache",
        "HTTP",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "Shell",
        "Scripting",
        "GIT",
        "Hub",
        "MYSQL",
        "Cassandra",
        "JIRA",
        "Python",
        "Developer",
        "Halvik",
        "Washington",
        "DC",
        "January",
        "August",
        "Roles",
        "Responsibilities",
        "end",
        "HTML",
        "Bootstrap",
        "CSS",
        "application",
        "Python",
        "Django",
        "MongoDB",
        "Linux",
        "Python",
        "libraries",
        "Selenium",
        "Numpy",
        "SQLAlchemy",
        "Python",
        "libraries",
        "Numpy",
        "Pandas",
        "Matplotlib",
        "Developed",
        "user",
        "registration",
        "login",
        "feature",
        "application",
        "process",
        "Django",
        "user",
        "model",
        "Design",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "React",
        "accessibility",
        "web",
        "browser",
        "standards",
        "website",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "XML",
        "Schemas",
        "Developed",
        "Stored",
        "PLSQL",
        "Procedures",
        "Packages",
        "table",
        "indexes",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "deployment",
        "environment",
        "Web",
        "system",
        "preferences",
        "UI",
        "screens",
        "JSP",
        "HTML",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "DJANGO",
        "Numpy",
        "Matplotlib",
        "Pandas",
        "products",
        "enterprises",
        "Python",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSS",
        "UI",
        "website",
        "HTML",
        "CSS",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "automation",
        "script",
        "Python",
        "Bash",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "Environment",
        "Python",
        "MySQL",
        "Hive",
        "JSON",
        "Pandas",
        "Machine",
        "Learning",
        "Version",
        "Linux",
        "Shell",
        "Scripting",
        "IBM",
        "Natuzzi",
        "JavaScript",
        "Toad",
        "Data",
        "Point",
        "SQLPutty",
        "Linux",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:57:01.610796",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Orion Systems Integrators Inc California City CA Having 9 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy Pandas python packages like SciPy tables etc Developed a novel approach detecting vowels nucleus of loudness called VLD in a recorded speech utterance using above features Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used PythonDjango MVC framework to design and develop the application Experience in Kubernets that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Authorized to work in the US for any employer Work Experience Senior Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ August 2018 to Present Roles Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Senior Python Developer Matlen Silver New York NY December 2015 to July 2018 Roles Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Anexinet Inc King of Prussia PA September 2012 to November 2015 Roles Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Halvik Washington DC January 2010 to August 2012 Roles Responsibilities Designed front end using HTML Bootstrap and CSS Created entire application using Python Django MongoDB and Linux Used Python libraries like Selenium Numpy and SQLAlchemy Worked on several Python libraries like Numpy Pandas and Matplotlib Developed and implemented the user registration and login feature for the application process by extending Django user model Design develop and test HTML5 CSS3 Bootstrap JavaScript and React that meets accessibility and web browser standards for website Created entire application using Python Django MySQL and Linux Created Several XML Schemas and Developed Stored PLSQL Procedures and Packages to automatically create and drop table indexes Generated Python Django forms to record data of online users and used PyTest for writing test cases Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Developed web applications and RESTful web services and APIs using Python Responsible for setting up Python REST API framework using DJANGO Used Numpy Matplotlib and Pandas to generate products for major enterprises Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Designed and developed the UI of the website using HTML and CSS Wrote executed various MYSQL database queries from Python using PythonMySQL connector MySQL dB package Developed and designed automation script using Python and Bash Built SQL queries for performing various CRUD operations like create update read and delete Responsible for setting up Python REST API framework using Django Environment Python MySQL Hive JSON RESTful Pandas Machine Learning Version One Linux Shell Scripting IBM Natuzzi JavaScript AngularJS Toad Data Point SQLPutty Linux Education Bachelors",
    "unique_id": "01b1e533-63a0-40f4-9ea3-686f5a1d7d3e"
}