{
    "clean_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Open Systems Technologies New York NY Over 10 years of IT experience in design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analyzing complex business requirements mapping them to system specifications Experience in developing webbased applications using Python 3427 Django 2013 Java Webapp2 Angularjs HTML5CSS3 JavaScript and JQuery Designed and implemented large scale business critical systems Experience in developing webbased applications using Python 3427 Django 1917 Developed web applications and RESTful web services and APIs using Python Flask Django Excellent experience with OOPS MultiThreading and Collections concepts in Python Working experience in UNIX and Linux shell environments using command line utilities Experience in developing theRESTful APIS service using Python Django framework Expertise in working with different databases like Oracle MySQL and PostgreSQL Experience in using UNIX shell Scripts for automating batch programs Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio Implemented different python libraries BeautifulSoup numpy scipy pytables matplotlib pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in using Message Brokers like RabbitMQ Kafka and Messaging libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Open Systems Technologies New York NY December 2018 to Present Responsibilities Worked on Selfservice development of system For Glogou This included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML Javascript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a javaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git DingTalk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed responsive UI using HTML5CSS3 AngularJS and Javascript Developed database layer including Tables and Stored procedures in MYSQL Used JSON based and RESTful API for information extraction Worked with Marketing and Sales teams to enhance applications to suit their needs Debug application deployments on multiple environments Environment Python Django Oracle Jinja Flask framework HTML JavaScript Jenkins Numpy Jenkins and Jupyter Notebook Sr Python Developer Corporate Biz Solutions Inc Titusville NJ February 2017 to November 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Scrapy data using Python 27 Used Django framework for application development Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Built the Web API on top of Flask framework to perform REST methodsDeveloped database migrations using SQLAlchemy Migration Developed server based web traffic statistical analysis tool using Flask Pandas Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Modified queries functions cursors triggers and stored procedures for MySql database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Created Python and Bash tools to increase efficiency of call center application system and operationsdata conversion scripts REST JSON and CRUD scripts for API Integration Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Created databaseusing MySQL Wrote queries and Django APIs to extract data from database Wrote scripts in Python for extracting data Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 2733 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Slait Consulting Norfolk VA August 2015 to January 2017 Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Experience in using containers like Docker Environment Python 27 25 Django 17 15 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet MS SQL Server Nginix server Amazon s3 Jenkins Mongo DB postgreSQL Elastic search TSQL Beautiful soup Teradata Eclipse Git GitHub Linux andMACOSX Python Developer Mitchell Martin Inc Charlotte NC September 2013 to July 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Python Developer Eliassen Group Austin TX March 2012 to August 2013 Responsibilities The project is developed through Waterfall method of Software Development Life Cycle Involved in Planning Design Construction and Operation phases of the project Developed scalable applications using Python Django framework Used AJAX to reduce page reloads Used MVW framework to build modular and maintainable applications Performed Flow Control response to FrontEnd Request using Python JQuery and AJAX Worked with JSON based REST Web Services and AWS Developed multipage application from beginning to end Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requirement Maintained user manuals and technical documentation Implemented code to perform CURD operations on Mongo DB using Py Mongo module Implemented Bootstrap as a mechanism to manage and organize the HTML page layouts Created Views and developed Stored Procedures Functions and Triggers Assisted automated test design and various automation framework improvements Used SVN for code maintenance Participated in Daily standup meetings and provided status on work progress Environment Python Django Web Framework HTML5 CSS MySQL JavaScript JQuery Sublime Text Jira GitHub Python Developer SummitWorks Technologies Inc South Plainfield NJ December 2010 to February 2012 Responsibilities Involved in prototyping design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Developed GUI using flask for dynamically displaying the test block documentation and other features of python code using a web browser Involved in the development of front end of the application Python HTMLCSSAJAXJSON and JQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed and designed SQL procedures and Linux shell scripts for data exportimport and for converting data Performed efficient delivery of code and continuous integration to keep in line with Agile principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using custom tools developed inPython and Bash Designed and developed front view components using JSP and HTML Implemented Servlets to handle HTTP requests for oniline requests payments and registration Developed reusable utility classes in core java for validation which are used across all modules Developed UI navigation using Struts MVC architecture Used JNDI to support transparent access to distributed components directories and services Deployed and tested the application with web server Tomcat WebSphere Developed Interactive web pages using AJAX and JavaScript Worked on Report Module generating PDF CSV according to template Configured and tested the application with database server Oracle 10g and MySQL 50 Performed Design involved in code reviews and wrote unit tests in Python Environment Python JSP Servlets XML HTML Java Script AJAX SOAP WSDL UML JDBC JUnit Oracle 10g Database Python Developer BCBS MI May 2009 to November 2010 Responsibilities Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented code in Python to retrieve and manipulate data Also used Bootstrap as a mechanism to manage and organize the HTML page layout Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Accountable for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using DjangosREST framework Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Environment Python 27 Django 16 Tableau 82 Beautiful soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery Angular JS Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Education Bachelors Skills C Git Javascript Jenkins Php Python Subversion Xml Database Db2 Jdbc Ms access Sql server Mysql Odbc Oracle Sql Sybase Dns Iis Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including vSwitch VLANs dvSwitch TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis",
    "entities": [
        "Work Experience Sr Python Developer Open Systems Technologies",
        "REST Web Services",
        "Python Flask Django Excellent",
        "AJAX",
        "ExportedImported",
        "XMLJSON",
        "Implemented Bootstrap",
        "New York",
        "AWS Developed",
        "UNIX",
        "SQL Server Management Studio Maintained",
        "Software Development Life Cycle Involved",
        "HTTP",
        "Interfacing",
        "Created Database",
        "API Integration Exposure",
        "Scrapy",
        "JSON",
        "IPVP4",
        "LAMP Linux",
        "Python Django framework Expertise",
        "Panda",
        "Heroku",
        "XML",
        "Jenkins Nexus Extensive",
        "Amazon Transaction",
        "Heavily leveraged Pythons",
        "Maintained",
        "PDF CSV",
        "Shell",
        "Python Working",
        "TX",
        "Amazon",
        "Wrote Python",
        "Interface Implementation",
        "Python",
        "HTML Implemented Servlets",
        "Developed",
        "Mysql Odbc Oracle Sql Sybase Dns Iis Additional Information Technical Skills Languages C C Python",
        "Bash",
        "Created Python",
        "NC",
        "Python Unit",
        "MultiThreading",
        "FrontEnd Request",
        "Waterfall",
        "Worked on",
        "Tomcat WebSphere Developed Interactive",
        "HTML5",
        "JNDI",
        "API RESTful Web Service",
        "Linux",
        "JSP",
        "Performed Flow Control",
        "FLASK Framework Developed",
        "Flask",
        "Daily",
        "VMWare API",
        "the Data Security",
        "San Francisco Food Trucks Project Python",
        "vSwitch",
        "San Francisco Food Trucks Project Application Search",
        "Created Unit",
        "Views",
        "PyQt",
        "Oracle 10",
        "Agile",
        "GIT",
        "PyCharm PyScripter Spyder PyStudio Implemented",
        "CSV",
        "API",
        "US",
        "Model APIs Views",
        "QA",
        "Developed MVC",
        "Created",
        "Process Amazon Transaction Project Python Git DingTalk",
        "Coding",
        "Created Views",
        "Bash Designed",
        "DNS",
        "Java Script AJAX SOAP WSDL UML JDBC JUnit Oracle",
        "Sql",
        "UMLRational Rose Developed",
        "HTML",
        "Implemented Data",
        "SQL",
        "Worked with Marketing and Sales",
        "Account Management",
        "JBoss IBM",
        "Python Django",
        "FLASK",
        "Administrators",
        "HTMLCSSAJAXJSON",
        "Python Environment Python",
        "MVW",
        "Created PHPMySQL",
        "TestDriven",
        "Pandas",
        "VA",
        "CRUD",
        "Build",
        "Performed",
        "Stored Procedures Functions",
        "Created UI",
        "Present Responsibilities Worked on",
        "Scripts",
        "JavaScript",
        "UI",
        "Unit Test Framework Created Selenium",
        "Microsoft",
        "Continuous Integration",
        "Test Plans and Test Cases Verifying",
        "Django Improved",
        "SVN",
        "UNIX Utilized",
        "Tomcat",
        "SDK",
        "REST",
        "Oracle MySQL and PostgreSQL",
        "Developed UI",
        "Tableau",
        "HTML5CSS3",
        "AzureAws Established",
        "Jenkins Mongo DB postgreSQL Elastic",
        "JQuery",
        "Django Jinja Oracle DB PostgreSQL",
        "AWS Environment Created Test",
        "MySql"
    ],
    "experience": "Experience in developing webbased applications using Python 3427 Django 2013 Java Webapp2 Angularjs HTML5CSS3 JavaScript and JQuery Designed and implemented large scale business critical systems Experience in developing webbased applications using Python 3427 Django 1917 Developed web applications and RESTful web services and APIs using Python Flask Django Excellent experience with OOPS MultiThreading and Collections concepts in Python Working experience in UNIX and Linux shell environments using command line utilities Experience in developing theRESTful APIS service using Python Django framework Expertise in working with different databases like Oracle MySQL and PostgreSQL Experience in using UNIX shell Scripts for automating batch programs Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio Implemented different python libraries BeautifulSoup numpy scipy pytables matplotlib pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in using Message Brokers like RabbitMQ Kafka and Messaging libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Open Systems Technologies New York NY December 2018 to Present Responsibilities Worked on Selfservice development of system For Glogou This included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML Javascript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a javaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git DingTalk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed responsive UI using HTML5CSS3 AngularJS and Javascript Developed database layer including Tables and Stored procedures in MYSQL Used JSON based and RESTful API for information extraction Worked with Marketing and Sales teams to enhance applications to suit their needs Debug application deployments on multiple environments Environment Python Django Oracle Jinja Flask framework HTML JavaScript Jenkins Numpy Jenkins and Jupyter Notebook Sr Python Developer Corporate Biz Solutions Inc Titusville NJ February 2017 to November 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Scrapy data using Python 27 Used Django framework for application development Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Built the Web API on top of Flask framework to perform REST methodsDeveloped database migrations using SQLAlchemy Migration Developed server based web traffic statistical analysis tool using Flask Pandas Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Modified queries functions cursors triggers and stored procedures for MySql database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Created Python and Bash tools to increase efficiency of call center application system and operationsdata conversion scripts REST JSON and CRUD scripts for API Integration Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Created databaseusing MySQL Wrote queries and Django APIs to extract data from database Wrote scripts in Python for extracting data Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 2733 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Slait Consulting Norfolk VA August 2015 to January 2017 Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Experience in using containers like Docker Environment Python 27 25 Django 17 15 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet MS SQL Server Nginix server Amazon s3 Jenkins Mongo DB postgreSQL Elastic search TSQL Beautiful soup Teradata Eclipse Git GitHub Linux andMACOSX Python Developer Mitchell Martin Inc Charlotte NC September 2013 to July 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Python Developer Eliassen Group Austin TX March 2012 to August 2013 Responsibilities The project is developed through Waterfall method of Software Development Life Cycle Involved in Planning Design Construction and Operation phases of the project Developed scalable applications using Python Django framework Used AJAX to reduce page reloads Used MVW framework to build modular and maintainable applications Performed Flow Control response to FrontEnd Request using Python JQuery and AJAX Worked with JSON based REST Web Services and AWS Developed multipage application from beginning to end Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requirement Maintained user manuals and technical documentation Implemented code to perform CURD operations on Mongo DB using Py Mongo module Implemented Bootstrap as a mechanism to manage and organize the HTML page layouts Created Views and developed Stored Procedures Functions and Triggers Assisted automated test design and various automation framework improvements Used SVN for code maintenance Participated in Daily standup meetings and provided status on work progress Environment Python Django Web Framework HTML5 CSS MySQL JavaScript JQuery Sublime Text Jira GitHub Python Developer SummitWorks Technologies Inc South Plainfield NJ December 2010 to February 2012 Responsibilities Involved in prototyping design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Developed GUI using flask for dynamically displaying the test block documentation and other features of python code using a web browser Involved in the development of front end of the application Python HTMLCSSAJAXJSON and JQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed and designed SQL procedures and Linux shell scripts for data exportimport and for converting data Performed efficient delivery of code and continuous integration to keep in line with Agile principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using custom tools developed inPython and Bash Designed and developed front view components using JSP and HTML Implemented Servlets to handle HTTP requests for oniline requests payments and registration Developed reusable utility classes in core java for validation which are used across all modules Developed UI navigation using Struts MVC architecture Used JNDI to support transparent access to distributed components directories and services Deployed and tested the application with web server Tomcat WebSphere Developed Interactive web pages using AJAX and JavaScript Worked on Report Module generating PDF CSV according to template Configured and tested the application with database server Oracle 10 g and MySQL 50 Performed Design involved in code reviews and wrote unit tests in Python Environment Python JSP Servlets XML HTML Java Script AJAX SOAP WSDL UML JDBC JUnit Oracle 10 g Database Python Developer BCBS MI May 2009 to November 2010 Responsibilities Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented code in Python to retrieve and manipulate data Also used Bootstrap as a mechanism to manage and organize the HTML page layout Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Accountable for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using DjangosREST framework Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Environment Python 27 Django 16 Tableau 82 Beautiful soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery Angular JS Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Education Bachelors Skills C Git Javascript Jenkins Php Python Subversion Xml Database Db2 Jdbc Ms access Sql server Mysql Odbc Oracle Sql Sybase Dns Iis Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including vSwitch VLANs dvSwitch TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Srspan",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Open",
        "Systems",
        "Technologies",
        "New",
        "York",
        "NY",
        "years",
        "IT",
        "experience",
        "design",
        "development",
        "testing",
        "implementation",
        "standalone",
        "architecture",
        "enterprise",
        "application",
        "software",
        "technologies",
        "business",
        "requirements",
        "specifications",
        "Experience",
        "applications",
        "Python",
        "Django",
        "Java",
        "Webapp2",
        "Angularjs",
        "HTML5CSS3",
        "JavaScript",
        "JQuery",
        "scale",
        "business",
        "systems",
        "Experience",
        "applications",
        "Python",
        "Django",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "Excellent",
        "experience",
        "MultiThreading",
        "Collections",
        "concepts",
        "Python",
        "Working",
        "experience",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Experience",
        "APIS",
        "service",
        "Python",
        "Django",
        "framework",
        "Expertise",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "Experience",
        "UNIX",
        "shell",
        "Scripts",
        "batch",
        "programs",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "python",
        "BeautifulSoup",
        "scipy",
        "pytables",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "Pyvmomi",
        "Fabric",
        "urllib2",
        "tasks",
        "Message",
        "Brokers",
        "RabbitMQ",
        "Kafka",
        "libraries",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Open",
        "Systems",
        "Technologies",
        "New",
        "York",
        "NY",
        "December",
        "Present",
        "Responsibilities",
        "Selfservice",
        "development",
        "system",
        "Glogou",
        "web",
        "crawler",
        "data",
        "analysis",
        "management",
        "San",
        "Francisco",
        "Food",
        "Trucks",
        "Project",
        "Application",
        "Search",
        "Engine",
        "Project",
        "Process",
        "Amazon",
        "Transaction",
        "Project",
        "San",
        "Francisco",
        "Food",
        "Trucks",
        "Project",
        "Python",
        "HTML",
        "Javascript",
        "CSS",
        "GIT",
        "Provide",
        "Food",
        "Trucks",
        "web",
        "service",
        "amount",
        "source",
        "files",
        "functionalities",
        "page",
        "style",
        "sheet",
        "homecss",
        "API",
        "code",
        "file",
        "mapjs",
        "folder",
        "images",
        "Process",
        "Amazon",
        "Transaction",
        "Project",
        "Python",
        "Git",
        "DingTalk",
        "UNIX",
        "SQL",
        "Wrote",
        "program",
        "Amazon",
        "Transaction",
        "payment",
        "detail",
        "functions",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PYTHON",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Django",
        "UI",
        "HTML5CSS3",
        "AngularJS",
        "Javascript",
        "database",
        "layer",
        "Tables",
        "procedures",
        "MYSQL",
        "JSON",
        "API",
        "information",
        "extraction",
        "Marketing",
        "Sales",
        "teams",
        "applications",
        "needs",
        "Debug",
        "application",
        "deployments",
        "environments",
        "Environment",
        "Python",
        "Django",
        "Oracle",
        "Jinja",
        "Flask",
        "framework",
        "HTML",
        "JavaScript",
        "Jenkins",
        "Numpy",
        "Jenkins",
        "Jupyter",
        "Notebook",
        "Sr",
        "Python",
        "Developer",
        "Corporate",
        "Biz",
        "Solutions",
        "Inc",
        "Titusville",
        "NJ",
        "February",
        "November",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Scrapy",
        "data",
        "Python",
        "Used",
        "Django",
        "framework",
        "application",
        "development",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "Web",
        "API",
        "top",
        "Flask",
        "framework",
        "REST",
        "database",
        "migrations",
        "SQLAlchemy",
        "Migration",
        "server",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Modified",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySql",
        "database",
        "performance",
        "data",
        "Database",
        "functions",
        "procedures",
        "statements",
        "PLSQL",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "MySQL",
        "Wrote",
        "queries",
        "Django",
        "APIs",
        "data",
        "database",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "vendors",
        "queries",
        "Git",
        "version",
        "control",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "AJAX",
        "Tomcat",
        "Apache",
        "HTTP",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "OOD",
        "Shell",
        "Scripting",
        "GIT",
        "Hub",
        "MYSQL",
        "Cassandra",
        "JIRA",
        "Python",
        "Developer",
        "Slait",
        "Consulting",
        "Norfolk",
        "VA",
        "August",
        "January",
        "Responsibilities",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "database",
        "model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Collections",
        "Python",
        "user",
        "objects",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Python",
        "modules",
        "CSV",
        "itertools",
        "pickle",
        "development",
        "Angularjs",
        "client",
        "web",
        "application",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Pythons",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "application",
        "Python",
        "stock",
        "APIs",
        "Spark",
        "Code",
        "python",
        "processing",
        "data",
        "databases",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "Experience",
        "containers",
        "Docker",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "MS",
        "SQL",
        "Server",
        "Nginix",
        "server",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "postgreSQL",
        "search",
        "TSQL",
        "soup",
        "Teradata",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Python",
        "Developer",
        "Mitchell",
        "Martin",
        "Inc",
        "Charlotte",
        "NC",
        "September",
        "July",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Build",
        "database",
        "mapping",
        "classes",
        "FLASK",
        "models",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Created",
        "Test",
        "plans",
        "SQL",
        "scripts",
        "data",
        "tables",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "domain",
        "class",
        "business",
        "logic",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Expert",
        "knowledge",
        "application",
        "development",
        "patterns",
        "web",
        "concept",
        "business",
        "logic",
        "discussions",
        "use",
        "case",
        "design",
        "product",
        "requirement",
        "documents",
        "specifications",
        "test",
        "strategy",
        "test",
        "plan",
        "test",
        "case",
        "documents",
        "Experience",
        "Selenium",
        "Automation",
        "Selenium",
        "Web",
        "Driver",
        "Java",
        "Unit",
        "Test",
        "Framework",
        "Created",
        "Selenium",
        "webdriver",
        "automation",
        "scripts",
        "Python",
        "functionality",
        "browsers",
        "understanding",
        "Microsoft",
        "Azure",
        "cloud",
        "platform",
        "Experience",
        "cloud",
        "delivery",
        "platforms",
        "AzureAws",
        "framework",
        "Continuous",
        "Integration",
        "environment",
        "Jenkins",
        "Nexus",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "selenium",
        "automation",
        "framework",
        "TestNG",
        "Developed",
        "Maven",
        "targets",
        "automation",
        "suites",
        "command",
        "line",
        "AWS",
        "Cloud",
        "instances",
        "EC2",
        "Participated",
        "release",
        "meetings",
        "Technology",
        "stakeholders",
        "risks",
        "releases",
        "Test",
        "Plans",
        "Test",
        "Cases",
        "Verifying",
        "Web",
        "application",
        "applications",
        "Subversion",
        "SVN",
        "Python",
        "Developer",
        "Eliassen",
        "Group",
        "Austin",
        "TX",
        "March",
        "August",
        "Responsibilities",
        "project",
        "Waterfall",
        "method",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Planning",
        "Design",
        "Construction",
        "Operation",
        "phases",
        "project",
        "applications",
        "Python",
        "Django",
        "framework",
        "AJAX",
        "page",
        "MVW",
        "framework",
        "applications",
        "Performed",
        "Flow",
        "Control",
        "response",
        "FrontEnd",
        "Request",
        "Python",
        "JQuery",
        "AJAX",
        "JSON",
        "REST",
        "Web",
        "Services",
        "AWS",
        "multipage",
        "application",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "Data",
        "Security",
        "report",
        "data",
        "UI",
        "JavaScript",
        "HTML5CSS3",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "MySQL",
        "connector",
        "information",
        "MySQL",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "web",
        "application",
        "prototype",
        "jQuery",
        "Angular",
        "JS",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "application",
        "accordance",
        "clienteles",
        "requirement",
        "user",
        "manuals",
        "documentation",
        "code",
        "CURD",
        "operations",
        "Mongo",
        "DB",
        "Py",
        "Mongo",
        "module",
        "Bootstrap",
        "mechanism",
        "HTML",
        "page",
        "Created",
        "Views",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Assisted",
        "test",
        "design",
        "automation",
        "framework",
        "improvements",
        "SVN",
        "code",
        "maintenance",
        "Daily",
        "standup",
        "meetings",
        "status",
        "work",
        "progress",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML5",
        "CSS",
        "MySQL",
        "JavaScript",
        "JQuery",
        "Sublime",
        "Text",
        "Jira",
        "GitHub",
        "Python",
        "Developer",
        "SummitWorks",
        "Technologies",
        "Inc",
        "South",
        "Plainfield",
        "NJ",
        "December",
        "February",
        "Responsibilities",
        "design",
        "Interface",
        "Implementation",
        "testing",
        "maintenance",
        "use",
        "case",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "system",
        "UMLRational",
        "Rose",
        "Developed",
        "GUI",
        "flask",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "development",
        "end",
        "application",
        "Python",
        "HTMLCSSAJAXJSON",
        "JQuery",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Jinja",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "SQL",
        "procedures",
        "Linux",
        "shell",
        "scripts",
        "data",
        "exportimport",
        "data",
        "delivery",
        "code",
        "integration",
        "line",
        "principles",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "integration",
        "system",
        "custom",
        "tools",
        "inPython",
        "Bash",
        "view",
        "components",
        "JSP",
        "HTML",
        "Servlets",
        "HTTP",
        "requests",
        "requests",
        "payments",
        "registration",
        "utility",
        "classes",
        "core",
        "validation",
        "modules",
        "UI",
        "navigation",
        "Struts",
        "MVC",
        "architecture",
        "JNDI",
        "access",
        "components",
        "directories",
        "services",
        "application",
        "web",
        "server",
        "Tomcat",
        "WebSphere",
        "Interactive",
        "web",
        "pages",
        "AJAX",
        "JavaScript",
        "Report",
        "Module",
        "PDF",
        "CSV",
        "template",
        "Configured",
        "application",
        "database",
        "server",
        "Oracle",
        "g",
        "MySQL",
        "Performed",
        "Design",
        "code",
        "reviews",
        "unit",
        "tests",
        "Python",
        "Environment",
        "Python",
        "JSP",
        "Servlets",
        "XML",
        "HTML",
        "Java",
        "Script",
        "AJAX",
        "WSDL",
        "UML",
        "JDBC",
        "JUnit",
        "Oracle",
        "g",
        "Database",
        "Python",
        "Developer",
        "BCBS",
        "MI",
        "May",
        "November",
        "Responsibilities",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "millions",
        "database",
        "records",
        "basis",
        "errors",
        "data",
        "patterns",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "users",
        "manuals",
        "documentation",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "code",
        "Python",
        "manipulate",
        "data",
        "Bootstrap",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "technologies",
        "features",
        "system",
        "services",
        "aspects",
        "development",
        "process",
        "product",
        "inception",
        "production",
        "Accountable",
        "software",
        "development",
        "practices",
        "team",
        "engineers",
        "collaboration",
        "project",
        "managers",
        "management",
        "teams",
        "Sales",
        "Account",
        "Management",
        "business",
        "requirements",
        "approaches",
        "implementation",
        "REST",
        "APIs",
        "part",
        "applications",
        "insurance",
        "premium",
        "calculations",
        "DjangosREST",
        "framework",
        "serverside",
        "applications",
        "Python",
        "programming",
        "clients",
        "business",
        "requirements",
        "Django",
        "frameworks",
        "Python",
        "webpages",
        "tools",
        "monitoring",
        "notification",
        "Python",
        "application",
        "HTML",
        "Java",
        "script",
        "design",
        "development",
        "data",
        "structures",
        "directories",
        "tuples",
        "class",
        "inheritance",
        "algorithms",
        "networks",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "tandem",
        "Flash",
        "developer",
        "data",
        "query",
        "string",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "web",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Data",
        "tables",
        "update",
        "patient",
        "records",
        "policy",
        "information",
        "PyQt",
        "module",
        "status",
        "Apache",
        "Cassandra",
        "instance",
        "python",
        "Pythons",
        "graphics",
        "APIs",
        "graphics",
        "serialization",
        "libraries",
        "data",
        "XMLJSON",
        "formats",
        "Environment",
        "Python",
        "Django",
        "Tableau",
        "Beautiful",
        "soup",
        "HTML5",
        "CSSCSS3",
        "Bootstrap",
        "XML",
        "JSON",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "Restful",
        "Web",
        "services",
        "Apache",
        "Linux",
        "Git",
        "Amazon",
        "s3",
        "Jenkins",
        "MySQL",
        "Mongo",
        "DB",
        "TSQL",
        "Eclipse",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "Git",
        "Javascript",
        "Jenkins",
        "Php",
        "Python",
        "Subversion",
        "Xml",
        "Database",
        "Jdbc",
        "Ms",
        "access",
        "Sql",
        "server",
        "Mysql",
        "Odbc",
        "Oracle",
        "Sql",
        "Sybase",
        "Dns",
        "Iis",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "C",
        "C",
        "Python",
        "JavaScript",
        "PHP",
        "XML",
        "SQL",
        "SCM",
        "Tools",
        "Subversion",
        "Perforce",
        "JenkinsHudson",
        "Sonar",
        "Jira",
        "TFS",
        "Confluence",
        "Clear",
        "Case",
        "AccuRev",
        "GIT",
        "GitHub",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Solaris",
        "Windows",
        "DOS",
        "VMware",
        "Protocols",
        "OSI",
        "Reference",
        "Model",
        "IPv4",
        "IPv6",
        "Ethernet",
        "LAN",
        "DNS",
        "HTTP",
        "NFS",
        "SSL",
        "SSH",
        "UDP",
        "concepts",
        "network",
        "concepts",
        "vSwitch",
        "VLANs",
        "dvSwitch",
        "stack",
        "virtualization",
        "IPVP4",
        "IPV6",
        "FTP",
        "Intranet",
        "Database",
        "Postgre",
        "SQL",
        "MS",
        "Access",
        "SQL",
        "Server",
        "MYSQL",
        "Sybase",
        "Oracle",
        "DB2",
        "JDBC",
        "ODBC",
        "Application",
        "Servers",
        "Web",
        "logic",
        "JBoss",
        "IBM",
        "WebSphere",
        "Apache",
        "tomcat55",
        "IIS",
        "Issue",
        "Tracking",
        "Tools",
        "ATLASSIAN",
        "JIRA",
        "BUGZILLA",
        "Mantis"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:46:30.195147",
    "resume_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Open Systems Technologies New York NY Over 10 years of IT experience in design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analyzing complex business requirements mapping them to system specifications Experience in developing webbased applications using Python 3427 Django 2013 Java Webapp2 Angularjs HTML5CSS3 JavaScript and JQuery Designed and implemented large scale business critical systems Experience in developing webbased applications using Python 3427 Django 1917 Developed web applications and RESTful web services and APIs using Python Flask Django Excellent experience with OOPS MultiThreading and Collections concepts in Python Working experience in UNIX and Linux shell environments using command line utilities Experience in developing theRESTful APIS service using Python Django framework Expertise in working with different databases like Oracle MySQL and PostgreSQL Experience in using UNIX shell Scripts for automating batch programs Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio Implemented different python libraries BeautifulSoup numpy scipy pytables matplotlib pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in using Message Brokers like RabbitMQ Kafka and Messaging libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Open Systems Technologies New York NY December 2018 to Present Responsibilities Worked on Selfservice development of system For Glogou This included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML Javascript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a javaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git DingTalk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed responsive UI using HTML5CSS3 AngularJS and Javascript Developed database layer including Tables and Stored procedures in MYSQL Used JSON based and RESTful API for information extraction Worked with Marketing and Sales teams to enhance applications to suit their needs Debug application deployments on multiple environments Environment Python Django Oracle Jinja Flask framework HTML JavaScript Jenkins Numpy Jenkins and Jupyter Notebook Sr Python Developer Corporate Biz Solutions Inc Titusville NJ February 2017 to November 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Scrapy data using Python 27 Used Django framework for application development Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Built the Web API on top of Flask framework to perform REST methodsDeveloped database migrations using SQLAlchemy Migration Developed server based web traffic statistical analysis tool using Flask Pandas Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Modified queries functions cursors triggers and stored procedures for MySql database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Created Python and Bash tools to increase efficiency of call center application system and operationsdata conversion scripts REST JSON and CRUD scripts for API Integration Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Created databaseusing MySQL Wrote queries and Django APIs to extract data from database Wrote scripts in Python for extracting data Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 2733 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Slait Consulting Norfolk VA August 2015 to January 2017 Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Experience in using containers like Docker Environment Python 27 25 Django 17 15 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet MS SQL Server Nginix server Amazon s3 Jenkins Mongo DB postgreSQL Elastic search TSQL Beautiful soup Teradata Eclipse Git GitHub Linux andMACOSX Python Developer Mitchell Martin Inc Charlotte NC September 2013 to July 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Python Developer Eliassen Group Austin TX March 2012 to August 2013 Responsibilities The project is developed through Waterfall method of Software Development Life Cycle Involved in Planning Design Construction and Operation phases of the project Developed scalable applications using Python Django framework Used AJAX to reduce page reloads Used MVW framework to build modular and maintainable applications Performed Flow Control response to FrontEnd Request using Python JQuery and AJAX Worked with JSON based REST Web Services and AWS Developed multipage application from beginning to end Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requirement Maintained user manuals and technical documentation Implemented code to perform CURD operations on Mongo DB using Py Mongo module Implemented Bootstrap as a mechanism to manage and organize the HTML page layouts Created Views and developed Stored Procedures Functions and Triggers Assisted automated test design and various automation framework improvements Used SVN for code maintenance Participated in Daily standup meetings and provided status on work progress Environment Python Django Web Framework HTML5 CSS MySQL JavaScript JQuery Sublime Text Jira GitHub Python Developer SummitWorks Technologies Inc South Plainfield NJ December 2010 to February 2012 Responsibilities Involved in prototyping design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Developed GUI using flask for dynamically displaying the test block documentation and other features of python code using a web browser Involved in the development of front end of the application Python HTMLCSSAJAXJSON and JQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed and designed SQL procedures and Linux shell scripts for data exportimport and for converting data Performed efficient delivery of code and continuous integration to keep in line with Agile principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using custom tools developed inPython and Bash Designed and developed front view components using JSP and HTML Implemented Servlets to handle HTTP requests for oniline requests payments and registration Developed reusable utility classes in core java for validation which are used across all modules Developed UI navigation using Struts MVC architecture Used JNDI to support transparent access to distributed components directories and services Deployed and tested the application with web server Tomcat WebSphere Developed Interactive web pages using AJAX and JavaScript Worked on Report Module generating PDF CSV according to template Configured and tested the application with database server Oracle 10g and MySQL 50 Performed Design involved in code reviews and wrote unit tests in Python Environment Python JSP Servlets XML HTML Java Script AJAX SOAP WSDL UML JDBC JUnit Oracle 10g Database Python Developer BCBS MI May 2009 to November 2010 Responsibilities Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented code in Python to retrieve and manipulate data Also used Bootstrap as a mechanism to manage and organize the HTML page layout Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Accountable for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using DjangosREST framework Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Environment Python 27 Django 16 Tableau 82 Beautiful soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery Angular JS Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Education Bachelors Skills C Git Javascript Jenkins Php Python Subversion Xml Database Db2 Jdbc Ms access Sql server Mysql Odbc Oracle Sql Sybase Dns Iis Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Protocols OSI Reference Model IPv4 and IPv6 addressing and subnetting Ethernet LAN TCPIP DNS HTTP NFS SSL SSH UDP switches routing concepts virtual network concepts including vSwitch VLANs dvSwitch TCPIP stack for virtualization IPVP4 IPV6 FTP Intranet Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 JDBC ODBC Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis",
    "unique_id": "9ab391bb-03e7-437f-9605-858b48e47689"
}