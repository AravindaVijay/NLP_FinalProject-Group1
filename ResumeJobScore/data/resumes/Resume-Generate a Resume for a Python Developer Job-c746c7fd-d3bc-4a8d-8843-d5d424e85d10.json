{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Prime Inc Columbus OH Over 8 Years of experience in Analyzing Developing Managing and implementing various standalone clientserver enterprise applications using Python Django Java and mapping the requirements to Respective systems Responsible for front end development using React Mobx CSS Ant design and various node modules Extensively used promises In Angular JS for the application flow control Experience in implementing Component life cycle architecture store actions using socketio in ReactRedux app to handle real time data installing React Router Thunk Redux for API calls in React JS Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Development of web applications using Python frameworks as Django Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in databasedriven web application development using a variety of frameworks such as Django on Python Hands on experience in using Hadoop ecosystem components like Hadoop Hive Pig Sqoop HBase Cassandra Spark Spark Streaming Spark SQL Oozie ZooKeeper Kafka Flume MapReduce and Yarn Worked on PostgreSQL development tables views joins and migrations from SQLite databases preserving the integrity Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Work Experience Sr Python Developer Prime Inc Springfield MO August 2017 to Present Responsibilities Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed web applications in Django Frameworks model view control MVC architecture Implemented a POC to pick a state management tool between Redux and MobX Developed Created web pages using HTML5 CSS3 JavaScript XML JSON JavaScript JSPs JQuery Handlebars Lodash SASS and Angular JS for developing user interface Single Pages Application using HTML5 CSS3 Bootstrap  Nextjs GraphQl Expressjs NodeJS Socket LESS Used Redux Thunk Middleware in application to retrieve data from BackEnd and to also perform RESTFUL services Introduced reduxthunk and Immutablejs as additional libraries to support ReactJs application Implemented backend Web API with the use of MongoDB ExpressJS and NodeJS and established connectivity with the use of Axios Achieved APIs calls from back end NodeJS using React axios Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on different testing methodologies like unit testing Integration testing web application testing Used ES6 features libraries to handle Web socket events Design and implemented custom scripts Implemented the various requirements using the jS HTML5 and cordova best practices and standards Implemented HTTP requests using Rxjs Observable library to handle multiple values over time As Enterprise Architect and senior OODOOP developer created complex web and mobile business system applications using many specialized software tools also was trained in C Java Java Beans applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Developed consumer based features and applications using Python Django HTML and Test Driven Development TDD Created singlepage applications using React and ES6 including a flashcard application and an Evernote clone Rewrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Experience in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Designed the API structures with Nodejs running on Nginx Extensively used Grunt and Gulp as an associate to Node JS to establish the connectivity between database and client Capable of using AWS utilities such as EMR S3 and cloud watch to run and monitor Hadoop and spark jobs on AWS Expertise in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Created marketing collateral to get partners onboard OpenShift Marketplace Built Web pages that are more userinteractive using AJAX JavaScript LESS Bootstrap and AngularJS Developed server by using Flask framework writing routes and queries to build Restful API Implemented ReactRouter React Redux architecture ES6 web pack and Grunt to turn application into Single Page Application Built dynamically generated dropdown lists using ES6 Worked in designing tables in Hive MYSQL using SQOOP and processing data like importing and exporting of databases to the HDFS involved in processing large datasets of different forms including structured semistructured and unstructured data Developed rest APIs using python with flask and Django framework and done the integration of various data sources including Java JDBC RDBMS Shell Scripting Spreadsheets and Text files Worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Experienced in developing service oriented architecture SOA and web Services using SOAP JAXWS WSDL and UDDI Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Environment Python Django Djangocms SSO database access Djangocms plugins CircleCI Bootstrap JavaScript HTML5 CSS3 Agile MAVEN Hadoop BigdataES6 Redux Object Oriented programming Flask Twisted Jenkins Webpack Grunt and Less HTTP web servers  Kubernetes OpenShift Sr Python Developer Freedom Mortgage Corp Columbia MD February 2016 to July 2017 Responsibilities Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed a web application for both the company user and customer user with different Login and Signup authorization using firebase authentication Implemented web page using the semantic markup and page layout of HTML5 and implemented the new CSS3 borderradius property for the design layout and CSS3 transitions to change property values over a given duration Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Implemented unit and integration testing for all layers of the applications using frameworks like JUnit Spock Mocha Jasmine Debugging applications in different browsers using Firebug and testing applications using QUnit Jasmine karma and Mocha Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Developed RESTful API microweb services in controller and service layer to handle http requests Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed cross browser compatible RWD with use of HTML5 CSS3 Bootstrap and jQuery Mobile Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Worked on migrating MapReduce programs into Spark transformations using Scala Responsible for building scalable distributed data solutions using Hadoop Developed user interface by using the React JS Flux for SPA development Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Assist with SSL installations on ApacheNginx server Developed the User Interactive web application in a professional manner with using web technologies like HTML5 CSS3 Bootstrap Less Javascript and AngularJS as per companys standards Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Used Elastic search as the data indexer and query parser All the Python code is formatted in PEP8 Coding standard Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and Sqoop Wrote Python normalizations scripts to find duplicate data in different environments Used Jenkins for automating Builds and Automating Deployments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Loaded and transformed large sets of structured semistructured and unstructured data using HadoopBig Data concepts Designed and implemented 100 Swaggerbased RESTfulAPIs and unit test cases with Flask and Python Responsible design and development of user portal using Ruby on Rails framework Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Engaged in understanding PHP Code and rebuild the code in Python Environment Python Django HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite AWS EC2 S3 Karma Jenkins Twisted Selenium MongoDB soap Web Services Eclipse Websphere Portal Subversion SVN ES6 Redux Object Oriented programming Flask Twisted Jenkins Grunt and Less HTTP web servers  OpenShift Sr Python Developer United health Group Columbus OH February 2015 to January 2016 Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Developed the unit testing scripts using JEST for testing the React components using Enzyme and react test renderer Involved in unit testing of various modules by generating the test cases using Jest Enzyme Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Created a crypto currency wallet and a blockchain based reward engagement platform built with ReactReduxSagas NodeKoa Used Express Framework to set up middleware to respond to the HTTP request with the help of Babel and developed the backend by Webpack Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Netbeans Jboss Mercurial ClearCase Selenium Water fall model UML JSP SERVLET ANT Xml Python Developer Comcast Corporation Atlanta GA September 2013 to January 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options and used Python modules such as requests urllib and urllib2 for web crawling Worked on writing and as well as read data from csv and excel file formats and Used other packages such as Beautiful soup for data parsing Developed a MATLAB algorithm which determines an objects dimensions from digital images Designed RESTful API plugin using Nodejs MongoDB Mongoose ODM and Express which optimized the code using Promises by 20 Used Promises to do AJAX call to connect frontend and backend Webservices backend development using Python CherryPy Django SQLAlchemy Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Developed approaches for improving NLP pipeline and NLP File Prep SettlementPrepare files for review for Settlement Create custom VB scripts in repackaging applications as needed Participated in the complete SDLC process and Held meetings with client and worked all alone for the entire project with limited help from the client Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team and developed rich user interface using CSS HTML JavaScript and jQuery Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux GIT MySQL SAS NLP Python Developer SA Technologies Inc Santa Clara CA October 2011 to August 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Used Django framework for application development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on CSS Bootstrap to develop web applications Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Designed and developed Web services using XML and jQuery Improved performance by using more modularized approach and using more in built methods Experienced in Agile Methodologies and SCRUM Process Maintained program libraries users manuals and technical documentation Wrote unit test cases for testing tools Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Built various graphs for business decision making using Python matplotlib library Worked in development of applications especially in UNIX environment and familiar with all its commands esponsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Environment Python Django MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server NO SQL jQuery Web developer CITI Bank New York NY October 2009 to September 2011 Responsibilities Developed project using MongoDB ExpressJS Angular 2 NodeJS Typescript and Bootstrap Developed various Angular 2 Components Modules Services observablepromises and Pipes using TypeScript Implemented Angular Router to enable navigation from one view to the next as user performs application tasks Used angular validation controls so it can help managers to fill forms easier Used Twitter bootstrap concepts to make the web application responsive to mobile and tablet screens Creating Procedures and functions Design and development of various reports Windows service Development and deployment Design and Coding Moving Load Analysis MLA Moving Load Analysis is windowsbased application for analyzing the effect of moving load on bridge Application is developed using threetier architecture Visual Studio SQL Server Involved in Forms design and development Creating objects like tables indexes views Actively involved in code review and code quality check process Implemented optimization techniques to reduce page size and load times to enhance user experience using sprites Worked with backend developer to optimize existing API calls to create efficiencies by deprecating unnecessary API calls Environment Angular 2 Typescript Angular CLI ExpressJS NodeJS MongoDB Mongoose AJAX Lodash JSON NPM Bootstrap XML Jasmine and GIT Software Developer Novartis Seattle WA February 2006 to September 2009 Responsibilities Implement pages based on mockups from designersstyle guides Develop enterprise applications using JS MVC frameworks Reactjs and Redux Build Web pages that are more userinteractive using AJAX JavaScript and  Redux Used  to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA DOM manipulations using JavaScript Write Unit Test suites using Jest Used Webpack to minify and bundle the code along with gulp Worked on JOI Validations both on client side and server side Developing CSS Style for web page using SASS Structure Handling cross browser compatibility issues Implementing Web Accessibility and SEO techniquesTransformation and integration of APIs Used SQL and C created and maintained a nightly process that loaded parsed validated and imported data from different sources and platforms into SQL servers Providing analysis and recommendations based on current reporting technology trends Completed classes in SSRS and Oracle Bi Managing 1 TB production databases which handle all incoming directbusiness mutual funds trades include monitoring of internal and external jobs designing production scripts working with lines of business through various issues that may arise Working on a team to design and upgrade of databases to SQL Server 2008 Headed a team which processed and remediated 5 years of mutual fund data to clients in an industry wide effort to correct mutual funds breakpoint issues using Microsoft SQL databases Work with Product Owners UX Designers build conceptual demos and POCs Make REST API calls to fetch data Use RadarAgile tool to track tasks assigned Follow Agile methodology and TestDriven Development Environment JavaScript  Redux Jest GIT NPM Webpack Environment Java J2EE Struts Spring MVC Spring Integration Ibatis Oracle JQuery XML WAS Accurev IBM DataPower XSLT CSS AJAX HP Fortify SSO Siteminder REST Webservices JMS Webspher MQ Education Master of Science Science and Engineering Florida State University",
    "entities": [
        "CSS HTML JavaScript",
        "Rxjs Observable",
        "NLP File Prep SettlementPrepare",
        "Resource",
        "the React JS Flux for SPA development",
        "AJAX",
        "Container",
        "Test Driven Development TDD",
        "the Global Shipping Team",
        "Nodejs",
        "HTML AJAX CSS",
        "PHP Code",
        "AWS Expertise",
        "HDFS",
        "UNIX",
        "Used Express Framework",
        "Agile Software Methodology",
        "Developer United",
        "ReactRedux",
        "Python Django AWS J2EE PostgreSQL",
        "HTTP",
        "Interfacing",
        "TestDriven Development Environment",
        "CITI Bank New York",
        "Hadoop Developed",
        "LAMP Linux",
        "Springfield",
        "IBM",
        "Heroku",
        "Node Package",
        "Panda",
        "Developed Hadoop",
        "Design Development and Deployment Testing and Implementation",
        "Hadoop",
        "BackEnd",
        "XML",
        "Setup Created",
        "React",
        "SSO",
        "MVC Spring Integration Ibatis Oracle",
        "JUnit",
        "Scala Responsible",
        "GIT Software",
        "csv",
        "Shell",
        "Reactjs",
        "node JS",
        "Amazon",
        "S3 Karma Jenkins Twisted Selenium",
        "Hadoop Hive Pig Sqoop",
        "Python",
        "SQL Server",
        "JavaScript React JS",
        "Project OAUTH",
        "Developed",
        "Enzyme",
        "CSS Bootstrap",
        "MATLAB",
        "Utilized",
        "Developed Business Logic",
        "Group",
        "jQuery Improved",
        "UML JSP",
        "HTML5",
        "Develop",
        "SOA",
        "Django CMS Experienced",
        "Firebug",
        "HadoopBig Data",
        "Linux",
        "JSP",
        "Flask",
        "Bootstrap Developed",
        "Docker",
        "DOM",
        "Created a Handler",
        "AJAX JavaScript",
        "Webpack Responsible",
        "SSL",
        "MS",
        "CLI",
        "Angular JS",
        "MVC",
        "Spark",
        "PythonDjango",
        "QUnit Jasmine",
        "Redux",
        "Node JS",
        "AJAX JavaScript LESS Bootstrap",
        "API",
        "HTML CSS JavaScript",
        "Single Pages Application",
        "Santa Clara",
        "Process Maintained",
        "Kubernetes OpenShift Sr Python Developer Freedom Mortgage Corp Columbia",
        "Created",
        "AWS",
        "CA",
        "WAMP Windows Apache",
        "Respective systems Responsible",
        "OODOOP",
        "RWD",
        "SSRS",
        "RESTFUL",
        "SQL",
        "Developer SA Technologies Inc",
        "Developed the User Interactive",
        "React Flux",
        "MD",
        "React Router Thunk Redux",
        "lPythonspan",
        "Nginx",
        "jQuery Mobile Created",
        "Flask Twisted Jenkins Webpack Grunt",
        "NLP",
        "Jenkins Ansible",
        "Administrators",
        "MO",
        "WireFraming",
        "Developer Comcast Corporation",
        "SQOOP",
        "Typescript",
        "Python Implemented",
        "NPM Node Package",
        "SQLite",
        "Babel",
        "JavaScript Created",
        "Websphere Portal Subversion",
        "Cluster",
        "DCL",
        "Djangos",
        "Angular 2 Components Modules Services",
        "UI",
        "Follow Agile",
        "Django Database",
        "CSS",
        "Nodejs MongoDB",
        "Shell Scripting Spreadsheets",
        "jQuery",
        "SPA",
        "MapReduce",
        "Developed Ruby on Rails",
        "PHP",
        "Application",
        "NameNode Data",
        "Visual Studio SQL Server Involved",
        "Integration",
        "Single Page Application",
        "Djangocms",
        "Cassandra Configuration",
        "Microsoft SQL",
        "Bash Developed",
        "JS MVC"
    ],
    "experience": "Experience in implementing Component life cycle architecture store actions using socketio in ReactRedux app to handle real time data installing React Router Thunk Redux for API calls in React JS Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Development of web applications using Python frameworks as Django Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in databasedriven web application development using a variety of frameworks such as Django on Python Hands on experience in using Hadoop ecosystem components like Hadoop Hive Pig Sqoop HBase Cassandra Spark Spark Streaming Spark SQL Oozie ZooKeeper Kafka Flume MapReduce and Yarn Worked on PostgreSQL development tables views joins and migrations from SQLite databases preserving the integrity Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Work Experience Sr Python Developer Prime Inc Springfield MO August 2017 to Present Responsibilities Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed web applications in Django Frameworks model view control MVC architecture Implemented a POC to pick a state management tool between Redux and MobX Developed Created web pages using HTML5 CSS3 JavaScript XML JSON JavaScript JSPs JQuery Handlebars Lodash SASS and Angular JS for developing user interface Single Pages Application using HTML5 CSS3 Bootstrap   Nextjs GraphQl Expressjs NodeJS Socket LESS Used Redux Thunk Middleware in application to retrieve data from BackEnd and to also perform RESTFUL services Introduced reduxthunk and Immutablejs as additional libraries to support ReactJs application Implemented backend Web API with the use of MongoDB ExpressJS and NodeJS and established connectivity with the use of Axios Achieved APIs calls from back end NodeJS using React axios Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on different testing methodologies like unit testing Integration testing web application testing Used ES6 features libraries to handle Web socket events Design and implemented custom scripts Implemented the various requirements using the jS HTML5 and cordova best practices and standards Implemented HTTP requests using Rxjs Observable library to handle multiple values over time As Enterprise Architect and senior OODOOP developer created complex web and mobile business system applications using many specialized software tools also was trained in C Java Java Beans applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Developed consumer based features and applications using Python Django HTML and Test Driven Development TDD Created singlepage applications using React and ES6 including a flashcard application and an Evernote clone Rewrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Experience in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Designed the API structures with Nodejs running on Nginx Extensively used Grunt and Gulp as an associate to Node JS to establish the connectivity between database and client Capable of using AWS utilities such as EMR S3 and cloud watch to run and monitor Hadoop and spark jobs on AWS Expertise in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Created marketing collateral to get partners onboard OpenShift Marketplace Built Web pages that are more userinteractive using AJAX JavaScript LESS Bootstrap and AngularJS Developed server by using Flask framework writing routes and queries to build Restful API Implemented ReactRouter React Redux architecture ES6 web pack and Grunt to turn application into Single Page Application Built dynamically generated dropdown lists using ES6 Worked in designing tables in Hive MYSQL using SQOOP and processing data like importing and exporting of databases to the HDFS involved in processing large datasets of different forms including structured semistructured and unstructured data Developed rest APIs using python with flask and Django framework and done the integration of various data sources including Java JDBC RDBMS Shell Scripting Spreadsheets and Text files Worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Experienced in developing service oriented architecture SOA and web Services using SOAP JAXWS WSDL and UDDI Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10 g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Environment Python Django Djangocms SSO database access Djangocms plugins CircleCI Bootstrap JavaScript HTML5 CSS3 Agile MAVEN Hadoop BigdataES6 Redux Object Oriented programming Flask Twisted Jenkins Webpack Grunt and Less HTTP web servers   Kubernetes OpenShift Sr Python Developer Freedom Mortgage Corp Columbia MD February 2016 to July 2017 Responsibilities Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed a web application for both the company user and customer user with different Login and Signup authorization using firebase authentication Implemented web page using the semantic markup and page layout of HTML5 and implemented the new CSS3 borderradius property for the design layout and CSS3 transitions to change property values over a given duration Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Implemented unit and integration testing for all layers of the applications using frameworks like JUnit Spock Mocha Jasmine Debugging applications in different browsers using Firebug and testing applications using QUnit Jasmine karma and Mocha Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Developed RESTful API microweb services in controller and service layer to handle http requests Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed cross browser compatible RWD with use of HTML5 CSS3 Bootstrap and jQuery Mobile Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Worked on migrating MapReduce programs into Spark transformations using Scala Responsible for building scalable distributed data solutions using Hadoop Developed user interface by using the React JS Flux for SPA development Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Assist with SSL installations on ApacheNginx server Developed the User Interactive web application in a professional manner with using web technologies like HTML5 CSS3 Bootstrap Less Javascript and AngularJS as per companys standards Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Used Elastic search as the data indexer and query parser All the Python code is formatted in PEP8 Coding standard Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and Sqoop Wrote Python normalizations scripts to find duplicate data in different environments Used Jenkins for automating Builds and Automating Deployments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Loaded and transformed large sets of structured semistructured and unstructured data using HadoopBig Data concepts Designed and implemented 100 Swaggerbased RESTfulAPIs and unit test cases with Flask and Python Responsible design and development of user portal using Ruby on Rails framework Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Engaged in understanding PHP Code and rebuild the code in Python Environment Python Django HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite AWS EC2 S3 Karma Jenkins Twisted Selenium MongoDB soap Web Services Eclipse Websphere Portal Subversion SVN ES6 Redux Object Oriented programming Flask Twisted Jenkins Grunt and Less HTTP web servers   OpenShift Sr Python Developer United health Group Columbus OH February 2015 to January 2016 Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Developed the unit testing scripts using JEST for testing the React components using Enzyme and react test renderer Involved in unit testing of various modules by generating the test cases using Jest Enzyme Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Created a crypto currency wallet and a blockchain based reward engagement platform built with ReactReduxSagas NodeKoa Used Express Framework to set up middleware to respond to the HTTP request with the help of Babel and developed the backend by Webpack Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Netbeans Jboss Mercurial ClearCase Selenium Water fall model UML JSP SERVLET ANT Xml Python Developer Comcast Corporation Atlanta GA September 2013 to January 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options and used Python modules such as requests urllib and urllib2 for web crawling Worked on writing and as well as read data from csv and excel file formats and Used other packages such as Beautiful soup for data parsing Developed a MATLAB algorithm which determines an objects dimensions from digital images Designed RESTful API plugin using Nodejs MongoDB Mongoose ODM and Express which optimized the code using Promises by 20 Used Promises to do AJAX call to connect frontend and backend Webservices backend development using Python CherryPy Django SQLAlchemy Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Developed approaches for improving NLP pipeline and NLP File Prep SettlementPrepare files for review for Settlement Create custom VB scripts in repackaging applications as needed Participated in the complete SDLC process and Held meetings with client and worked all alone for the entire project with limited help from the client Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team and developed rich user interface using CSS HTML JavaScript and jQuery Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux GIT MySQL SAS NLP Python Developer SA Technologies Inc Santa Clara CA October 2011 to August 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Used Django framework for application development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on CSS Bootstrap to develop web applications Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Designed and developed Web services using XML and jQuery Improved performance by using more modularized approach and using more in built methods Experienced in Agile Methodologies and SCRUM Process Maintained program libraries users manuals and technical documentation Wrote unit test cases for testing tools Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Built various graphs for business decision making using Python matplotlib library Worked in development of applications especially in UNIX environment and familiar with all its commands esponsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Environment Python Django MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server NO SQL jQuery Web developer CITI Bank New York NY October 2009 to September 2011 Responsibilities Developed project using MongoDB ExpressJS Angular 2 NodeJS Typescript and Bootstrap Developed various Angular 2 Components Modules Services observablepromises and Pipes using TypeScript Implemented Angular Router to enable navigation from one view to the next as user performs application tasks Used angular validation controls so it can help managers to fill forms easier Used Twitter bootstrap concepts to make the web application responsive to mobile and tablet screens Creating Procedures and functions Design and development of various reports Windows service Development and deployment Design and Coding Moving Load Analysis MLA Moving Load Analysis is windowsbased application for analyzing the effect of moving load on bridge Application is developed using threetier architecture Visual Studio SQL Server Involved in Forms design and development Creating objects like tables indexes views Actively involved in code review and code quality check process Implemented optimization techniques to reduce page size and load times to enhance user experience using sprites Worked with backend developer to optimize existing API calls to create efficiencies by deprecating unnecessary API calls Environment Angular 2 Typescript Angular CLI ExpressJS NodeJS MongoDB Mongoose AJAX Lodash JSON NPM Bootstrap XML Jasmine and GIT Software Developer Novartis Seattle WA February 2006 to September 2009 Responsibilities Implement pages based on mockups from designersstyle guides Develop enterprise applications using JS MVC frameworks Reactjs and Redux Build Web pages that are more userinteractive using AJAX JavaScript and   Redux Used   to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA DOM manipulations using JavaScript Write Unit Test suites using Jest Used Webpack to minify and bundle the code along with gulp Worked on JOI Validations both on client side and server side Developing CSS Style for web page using SASS Structure Handling cross browser compatibility issues Implementing Web Accessibility and SEO techniquesTransformation and integration of APIs Used SQL and C created and maintained a nightly process that loaded parsed validated and imported data from different sources and platforms into SQL servers Providing analysis and recommendations based on current reporting technology trends Completed classes in SSRS and Oracle Bi Managing 1 TB production databases which handle all incoming directbusiness mutual funds trades include monitoring of internal and external jobs designing production scripts working with lines of business through various issues that may arise Working on a team to design and upgrade of databases to SQL Server 2008 Headed a team which processed and remediated 5 years of mutual fund data to clients in an industry wide effort to correct mutual funds breakpoint issues using Microsoft SQL databases Work with Product Owners UX Designers build conceptual demos and POCs Make REST API calls to fetch data Use RadarAgile tool to track tasks assigned Follow Agile methodology and TestDriven Development Environment JavaScript   Redux Jest GIT NPM Webpack Environment Java J2EE Struts Spring MVC Spring Integration Ibatis Oracle JQuery XML WAS Accurev IBM DataPower XSLT CSS AJAX HP Fortify SSO Siteminder REST Webservices JMS Webspher MQ Education Master of Science Science and Engineering Florida State University",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Prime",
        "Inc",
        "Columbus",
        "OH",
        "Years",
        "experience",
        "Developing",
        "Managing",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "Java",
        "requirements",
        "Respective",
        "systems",
        "end",
        "development",
        "React",
        "Mobx",
        "CSS",
        "Ant",
        "design",
        "node",
        "modules",
        "promises",
        "JS",
        "application",
        "flow",
        "control",
        "Experience",
        "Component",
        "life",
        "cycle",
        "architecture",
        "store",
        "actions",
        "socketio",
        "ReactRedux",
        "app",
        "time",
        "data",
        "React",
        "Router",
        "Thunk",
        "Redux",
        "API",
        "calls",
        "React",
        "JS",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "NodeJS",
        "WireFraming",
        "HTML5",
        "Responsible",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "JSON",
        "AngularJS",
        "Adobe",
        "JSP",
        "views",
        "functionality",
        "UI",
        "screens",
        "client",
        "technologies",
        "JQuery",
        "JavaScript",
        "HTML",
        "CSS",
        "files",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Development",
        "web",
        "applications",
        "Python",
        "frameworks",
        "Django",
        "Successful",
        "migration",
        "default",
        "Djangos",
        "database",
        "efficiency",
        "integrity",
        "security",
        "data",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "Django",
        "Python",
        "Hands",
        "experience",
        "Hadoop",
        "ecosystem",
        "components",
        "Hadoop",
        "Hive",
        "Pig",
        "Sqoop",
        "HBase",
        "Cassandra",
        "Spark",
        "Spark",
        "Streaming",
        "Spark",
        "SQL",
        "Oozie",
        "ZooKeeper",
        "Kafka",
        "Flume",
        "MapReduce",
        "Yarn",
        "PostgreSQL",
        "development",
        "tables",
        "views",
        "joins",
        "migrations",
        "SQLite",
        "databases",
        "integrity",
        "Experience",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "framework",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "PHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "PHP",
        "Architecture",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Prime",
        "Inc",
        "Springfield",
        "MO",
        "August",
        "Present",
        "Responsibilities",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Developed",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "POC",
        "state",
        "management",
        "tool",
        "Redux",
        "MobX",
        "Developed",
        "Created",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "XML",
        "JSON",
        "JavaScript",
        "JQuery",
        "Handlebars",
        "Lodash",
        "SASS",
        "JS",
        "user",
        "interface",
        "Single",
        "Pages",
        "Application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Nextjs",
        "GraphQl",
        "Expressjs",
        "NodeJS",
        "Socket",
        "Redux",
        "Thunk",
        "Middleware",
        "application",
        "data",
        "BackEnd",
        "RESTFUL",
        "services",
        "reduxthunk",
        "Immutablejs",
        "libraries",
        "ReactJs",
        "application",
        "backend",
        "Web",
        "API",
        "use",
        "ExpressJS",
        "NodeJS",
        "connectivity",
        "use",
        "Axios",
        "APIs",
        "end",
        "NodeJS",
        "React",
        "axios",
        "Frontend",
        "applications",
        "Mobile",
        "Application",
        "user",
        "UI",
        "web",
        "pages",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "Es6",
        "JavaScript",
        "React",
        "JS",
        "ReactNativeRedux",
        "Saga",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "ES6",
        "features",
        "libraries",
        "Web",
        "socket",
        "events",
        "Design",
        "custom",
        "scripts",
        "requirements",
        "jS",
        "HTML5",
        "cordova",
        "practices",
        "standards",
        "HTTP",
        "requests",
        "Rxjs",
        "Observable",
        "library",
        "values",
        "time",
        "Enterprise",
        "Architect",
        "developer",
        "web",
        "business",
        "system",
        "applications",
        "software",
        "tools",
        "C",
        "Java",
        "Java",
        "Beans",
        "applications",
        "Python",
        "Django",
        "Flask",
        "MySQL",
        "PostgreSQL",
        "Apache",
        "Nginx",
        "Gunicorn",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "singlepage",
        "applications",
        "React",
        "ES6",
        "application",
        "Evernote",
        "clone",
        "Rewrote",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "monitoring",
        "project",
        "status",
        "JIRA",
        "Agile",
        "Developed",
        "Python",
        "web",
        "services",
        "JSON",
        "Data",
        "layer",
        "Experience",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "API",
        "structures",
        "Nodejs",
        "Nginx",
        "Grunt",
        "Gulp",
        "associate",
        "Node",
        "JS",
        "connectivity",
        "database",
        "client",
        "AWS",
        "utilities",
        "EMR",
        "S3",
        "cloud",
        "Hadoop",
        "spark",
        "jobs",
        "AWS",
        "Expertise",
        "Reactjs",
        "framework",
        "SPA",
        "React",
        "Flux",
        "Redux",
        "architecture",
        "marketing",
        "collateral",
        "partners",
        "OpenShift",
        "Marketplace",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "LESS",
        "Bootstrap",
        "server",
        "Flask",
        "framework",
        "writing",
        "routes",
        "queries",
        "API",
        "ReactRouter",
        "React",
        "Redux",
        "architecture",
        "ES6",
        "web",
        "pack",
        "Grunt",
        "application",
        "Single",
        "Page",
        "Application",
        "lists",
        "ES6",
        "Worked",
        "tables",
        "Hive",
        "MYSQL",
        "SQOOP",
        "processing",
        "data",
        "exporting",
        "databases",
        "HDFS",
        "datasets",
        "forms",
        "data",
        "rest",
        "APIs",
        "python",
        "flask",
        "Django",
        "framework",
        "integration",
        "data",
        "sources",
        "Java",
        "JDBC",
        "RDBMS",
        "Shell",
        "Scripting",
        "Spreadsheets",
        "Text",
        "files",
        "Hadoop",
        "architecture",
        "daemons",
        "Hadoop",
        "NameNode",
        "Data",
        "Node",
        "Job",
        "Tracker",
        "Task",
        "Tracker",
        "Resource",
        "Manager",
        "Created",
        "brochures",
        "PageTurnPro",
        "photo",
        "galleries",
        "website",
        "Django",
        "CMS",
        "Django",
        "CMS",
        "Configuring",
        "SSO",
        "applications",
        "domains",
        "Cookie",
        "Provider",
        "troubleshooting",
        "issues",
        "Maintenance",
        "development",
        "demand",
        "site",
        "platform",
        "Django",
        "CMS",
        "service",
        "architecture",
        "SOA",
        "web",
        "Services",
        "SOAP",
        "JAXWS",
        "WSDL",
        "UDDI",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "g",
        "MongoDB",
        "Knowledgeable",
        "deployment",
        "Heroku",
        "Jenkins",
        "Environment",
        "Python",
        "Django",
        "Djangocms",
        "SSO",
        "database",
        "access",
        "Djangocms",
        "plugins",
        "Bootstrap",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Agile",
        "MAVEN",
        "Hadoop",
        "BigdataES6",
        "Redux",
        "Object",
        "programming",
        "Flask",
        "Twisted",
        "Jenkins",
        "Webpack",
        "Grunt",
        "HTTP",
        "web",
        "servers",
        "Kubernetes",
        "OpenShift",
        "Sr",
        "Python",
        "Developer",
        "Freedom",
        "Mortgage",
        "Corp",
        "Columbia",
        "MD",
        "February",
        "July",
        "Responsibilities",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "web",
        "application",
        "company",
        "user",
        "customer",
        "user",
        "Login",
        "authorization",
        "firebase",
        "authentication",
        "web",
        "page",
        "markup",
        "page",
        "layout",
        "HTML5",
        "CSS3",
        "borderradius",
        "property",
        "design",
        "layout",
        "CSS3",
        "transitions",
        "property",
        "values",
        "duration",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "unit",
        "integration",
        "testing",
        "layers",
        "applications",
        "frameworks",
        "JUnit",
        "Spock",
        "Mocha",
        "Jasmine",
        "Debugging",
        "applications",
        "browsers",
        "Firebug",
        "testing",
        "applications",
        "QUnit",
        "Jasmine",
        "karma",
        "Mocha",
        "Wrote",
        "Python",
        "scripts",
        "data",
        "files",
        "Linux",
        "server",
        "configuration",
        "Python",
        "template",
        "tool",
        "API",
        "microweb",
        "services",
        "controller",
        "service",
        "layer",
        "http",
        "requests",
        "Developed",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "JVM",
        "Parameters",
        "Developed",
        "cross",
        "browser",
        "RWD",
        "use",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "Mobile",
        "JSP",
        "views",
        "functionality",
        "UI",
        "screens",
        "client",
        "technologies",
        "JQuery",
        "JavaScript",
        "HTML",
        "CSS",
        "files",
        "MapReduce",
        "programs",
        "Spark",
        "transformations",
        "Scala",
        "Responsible",
        "data",
        "solutions",
        "Hadoop",
        "Developed",
        "user",
        "interface",
        "React",
        "JS",
        "Flux",
        "SPA",
        "development",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "redux",
        "library",
        "Handler",
        "function",
        "Python",
        "AWS",
        "Lambda",
        "service",
        "Assist",
        "SSL",
        "installations",
        "ApacheNginx",
        "server",
        "User",
        "Interactive",
        "web",
        "application",
        "manner",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Less",
        "Javascript",
        "AngularJS",
        "companys",
        "standards",
        "OpenShift",
        "TestDrive",
        "Admins",
        "Installation",
        "OCP",
        "Cluster",
        "management",
        "Project",
        "OAUTH",
        "SSO",
        "authentication",
        "Login",
        "services",
        "search",
        "data",
        "indexer",
        "query",
        "parser",
        "Python",
        "code",
        "PEP8",
        "standard",
        "Worked",
        "Hadoop",
        "stack",
        "data",
        "tools",
        "Pig",
        "Hive",
        "HBase",
        "database",
        "Sqoop",
        "Wrote",
        "Python",
        "normalizations",
        "data",
        "environments",
        "Jenkins",
        "Builds",
        "Automating",
        "Deployments",
        "Jenkins",
        "integration",
        "process",
        "automation",
        "code",
        "coverage",
        "analysis",
        "reports",
        "sets",
        "data",
        "HadoopBig",
        "Data",
        "concepts",
        "RESTfulAPIs",
        "unit",
        "test",
        "cases",
        "Flask",
        "Python",
        "design",
        "development",
        "user",
        "portal",
        "Ruby",
        "Rails",
        "framework",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "PHP",
        "Code",
        "code",
        "Python",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "AJAX",
        "Restful",
        "web",
        "service",
        "MySQL",
        "AWS",
        "EC2",
        "S3",
        "Karma",
        "Jenkins",
        "Twisted",
        "Selenium",
        "MongoDB",
        "soap",
        "Web",
        "Services",
        "Eclipse",
        "Websphere",
        "Portal",
        "Subversion",
        "SVN",
        "ES6",
        "Redux",
        "Object",
        "programming",
        "Flask",
        "Twisted",
        "Jenkins",
        "Grunt",
        "HTTP",
        "web",
        "servers",
        "OpenShift",
        "Sr",
        "Python",
        "Developer",
        "United",
        "health",
        "Group",
        "Columbus",
        "OH",
        "February",
        "January",
        "Responsibilities",
        "operating",
        "system",
        "Linux",
        "DCL",
        "programs",
        "Python",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "NodeJS",
        "WireFraming",
        "HTML5",
        "unit",
        "testing",
        "scripts",
        "JEST",
        "React",
        "components",
        "Enzyme",
        "test",
        "renderer",
        "unit",
        "testing",
        "modules",
        "test",
        "cases",
        "Jest",
        "Enzyme",
        "WebPack",
        "Babel",
        "gulp",
        "transpilationcompilation",
        "configuration",
        "Typescript",
        "JavaScript",
        "WebPack",
        "Babel",
        "gulp",
        "transpilationcompilation",
        "configuration",
        "Typescript",
        "JavaScript",
        "currency",
        "wallet",
        "reward",
        "engagement",
        "platform",
        "ReactReduxSagas",
        "NodeKoa",
        "Express",
        "Framework",
        "middleware",
        "HTTP",
        "request",
        "help",
        "Babel",
        "backend",
        "Webpack",
        "Responsible",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "JSON",
        "AngularJS",
        "Adobe",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "scripting",
        "PythonOpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "OracleDB",
        "PostgreSQL",
        "VMWareAPI",
        "integration",
        "system",
        "Git",
        "MySQL",
        "Jenkins",
        "custom",
        "tools",
        "Python",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQLdb",
        "package",
        "information",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Netbeans",
        "Jboss",
        "Mercurial",
        "ClearCase",
        "Selenium",
        "Water",
        "fall",
        "model",
        "UML",
        "JSP",
        "SERVLET",
        "ANT",
        "Xml",
        "Python",
        "Developer",
        "Comcast",
        "Corporation",
        "Atlanta",
        "GA",
        "September",
        "January",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Worked",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "packages",
        "soup",
        "data",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "API",
        "plugin",
        "Nodejs",
        "Mongoose",
        "ODM",
        "Express",
        "code",
        "Promises",
        "Promises",
        "AJAX",
        "frontend",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQLAlchemy",
        "Prepared",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "addition",
        "Hadoop",
        "processing",
        "IT",
        "infrastructure",
        "customer",
        "data",
        "collection",
        "PySparkHadoop",
        "analytics",
        "Developed",
        "Hadoop",
        "integrations",
        "data",
        "ingestion",
        "data",
        "mapping",
        "data",
        "processing",
        "XML",
        "display",
        "options",
        "box",
        "description",
        "web",
        "page",
        "approaches",
        "NLP",
        "pipeline",
        "NLP",
        "File",
        "Prep",
        "SettlementPrepare",
        "review",
        "Settlement",
        "Create",
        "custom",
        "VB",
        "scripts",
        "applications",
        "Participated",
        "SDLC",
        "process",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "Developed",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "jQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "GIT",
        "MySQL",
        "SAS",
        "NLP",
        "Python",
        "Developer",
        "SA",
        "Technologies",
        "Inc",
        "Santa",
        "Clara",
        "CA",
        "October",
        "August",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Django",
        "framework",
        "application",
        "development",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "CSS",
        "Bootstrap",
        "web",
        "applications",
        "AJAX",
        "portions",
        "web",
        "pages",
        "request",
        "server",
        "need",
        "web",
        "page",
        "Web",
        "services",
        "XML",
        "jQuery",
        "performance",
        "approach",
        "methods",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "program",
        "users",
        "manuals",
        "documentation",
        "Wrote",
        "unit",
        "test",
        "cases",
        "testing",
        "tools",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "Database",
        "APIs",
        "database",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "SQL",
        "jQuery",
        "Web",
        "developer",
        "CITI",
        "Bank",
        "New",
        "York",
        "NY",
        "October",
        "September",
        "Responsibilities",
        "project",
        "ExpressJS",
        "Angular",
        "NodeJS",
        "Typescript",
        "Bootstrap",
        "Angular",
        "Components",
        "Modules",
        "Services",
        "Pipes",
        "TypeScript",
        "Angular",
        "Router",
        "navigation",
        "view",
        "user",
        "application",
        "tasks",
        "validation",
        "controls",
        "managers",
        "forms",
        "Used",
        "Twitter",
        "bootstrap",
        "concepts",
        "web",
        "application",
        "tablet",
        "screens",
        "Procedures",
        "functions",
        "Design",
        "development",
        "reports",
        "Windows",
        "service",
        "Development",
        "deployment",
        "Design",
        "Coding",
        "Moving",
        "Load",
        "Analysis",
        "MLA",
        "Moving",
        "Load",
        "Analysis",
        "application",
        "effect",
        "load",
        "bridge",
        "Application",
        "architecture",
        "Visual",
        "Studio",
        "SQL",
        "Server",
        "Forms",
        "design",
        "development",
        "Creating",
        "objects",
        "tables",
        "indexes",
        "views",
        "code",
        "review",
        "code",
        "quality",
        "check",
        "process",
        "optimization",
        "techniques",
        "page",
        "size",
        "load",
        "times",
        "user",
        "experience",
        "sprites",
        "developer",
        "API",
        "calls",
        "efficiencies",
        "API",
        "Environment",
        "Angular",
        "Typescript",
        "Angular",
        "CLI",
        "ExpressJS",
        "NodeJS",
        "Mongoose",
        "AJAX",
        "JSON",
        "NPM",
        "Bootstrap",
        "XML",
        "Jasmine",
        "GIT",
        "Software",
        "Developer",
        "Novartis",
        "Seattle",
        "WA",
        "February",
        "September",
        "Responsibilities",
        "Implement",
        "pages",
        "mockups",
        "designersstyle",
        "guides",
        "Develop",
        "enterprise",
        "applications",
        "JS",
        "MVC",
        "frameworks",
        "Reactjs",
        "Redux",
        "Build",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "Redux",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Application",
        "SPA",
        "DOM",
        "manipulations",
        "JavaScript",
        "Write",
        "Unit",
        "Test",
        "suites",
        "Jest",
        "Webpack",
        "code",
        "gulp",
        "JOI",
        "Validations",
        "client",
        "side",
        "server",
        "side",
        "CSS",
        "Style",
        "web",
        "page",
        "SASS",
        "Structure",
        "Handling",
        "cross",
        "browser",
        "compatibility",
        "issues",
        "Web",
        "Accessibility",
        "SEO",
        "techniquesTransformation",
        "integration",
        "APIs",
        "SQL",
        "C",
        "process",
        "data",
        "sources",
        "platforms",
        "SQL",
        "servers",
        "analysis",
        "recommendations",
        "reporting",
        "technology",
        "trends",
        "classes",
        "SSRS",
        "Oracle",
        "Bi",
        "Managing",
        "TB",
        "production",
        "databases",
        "funds",
        "trades",
        "monitoring",
        "jobs",
        "production",
        "scripts",
        "lines",
        "business",
        "issues",
        "Working",
        "team",
        "databases",
        "SQL",
        "Server",
        "team",
        "years",
        "fund",
        "data",
        "clients",
        "industry",
        "effort",
        "funds",
        "breakpoint",
        "issues",
        "Microsoft",
        "SQL",
        "Product",
        "Owners",
        "UX",
        "Designers",
        "demos",
        "POCs",
        "REST",
        "API",
        "data",
        "Use",
        "RadarAgile",
        "tool",
        "tasks",
        "Follow",
        "methodology",
        "TestDriven",
        "Development",
        "Environment",
        "JavaScript",
        "Redux",
        "Jest",
        "GIT",
        "NPM",
        "Webpack",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "Spring",
        "MVC",
        "Spring",
        "Integration",
        "Ibatis",
        "Oracle",
        "JQuery",
        "XML",
        "Accurev",
        "IBM",
        "DataPower",
        "XSLT",
        "CSS",
        "AJAX",
        "HP",
        "Fortify",
        "SSO",
        "Siteminder",
        "REST",
        "Webservices",
        "JMS",
        "Webspher",
        "MQ",
        "Education",
        "Master",
        "Science",
        "Science",
        "Engineering",
        "Florida",
        "State",
        "University"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:13:26.795103",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Prime Inc Columbus OH Over 8 Years of experience in Analyzing Developing Managing and implementing various standalone clientserver enterprise applications using Python Django Java and mapping the requirements to Respective systems Responsible for front end development using React Mobx CSS Ant design and various node modules Extensively used promises In Angular JS for the application flow control Experience in implementing Component life cycle architecture store actions using socketio in ReactRedux app to handle real time data installing React Router Thunk Redux for API calls in React JS Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Development of web applications using Python frameworks as Django Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in databasedriven web application development using a variety of frameworks such as Django on Python Hands on experience in using Hadoop ecosystem components like Hadoop Hive Pig Sqoop HBase Cassandra Spark Spark Streaming Spark SQL Oozie ZooKeeper Kafka Flume MapReduce and Yarn Worked on PostgreSQL development tables views joins and migrations from SQLite databases preserving the integrity Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Work Experience Sr Python Developer Prime Inc Springfield MO August 2017 to Present Responsibilities Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed web applications in Django Frameworks model view control MVC architecture Implemented a POC to pick a state management tool between Redux and MobX Developed Created web pages using HTML5 CSS3 JavaScript XML JSON JavaScript JSPs JQuery Handlebars Lodash SASS and Angular JS for developing user interface Single Pages Application using HTML5 CSS3 Bootstrap ReactJS Nextjs GraphQl Expressjs NodeJS Socket LESS Used Redux Thunk Middleware in application to retrieve data from BackEnd and to also perform RESTFUL services Introduced reduxthunk and Immutablejs as additional libraries to support ReactJs application Implemented backend Web API with the use of MongoDB ExpressJS and NodeJS and established connectivity with the use of Axios Achieved APIs calls from back end NodeJS using React axios Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on different testing methodologies like unit testing Integration testing web application testing Used ES6 features libraries to handle Web socket events Design and implemented custom scripts Implemented the various requirements using the jS HTML5 and cordova best practices and standards Implemented HTTP requests using Rxjs Observable library to handle multiple values over time As Enterprise Architect and senior OODOOP developer created complex web and mobile business system applications using many specialized software tools also was trained in C Java Java Beans applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Developed consumer based features and applications using Python Django HTML and Test Driven Development TDD Created singlepage applications using React and ES6 including a flashcard application and an Evernote clone Rewrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Experience in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Designed the API structures with Nodejs running on Nginx Extensively used Grunt and Gulp as an associate to Node JS to establish the connectivity between database and client Capable of using AWS utilities such as EMR S3 and cloud watch to run and monitor Hadoop and spark jobs on AWS Expertise in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Created marketing collateral to get partners onboard OpenShift Marketplace Built Web pages that are more userinteractive using AJAX JavaScript LESS Bootstrap and AngularJS Developed server by using Flask framework writing routes and queries to build Restful API Implemented ReactRouter React Redux architecture ES6 web pack and Grunt to turn application into Single Page Application Built dynamically generated dropdown lists using ES6 Worked in designing tables in Hive MYSQL using SQOOP and processing data like importing and exporting of databases to the HDFS involved in processing large datasets of different forms including structured semistructured and unstructured data Developed rest APIs using python with flask and Django framework and done the integration of various data sources including Java JDBC RDBMS Shell Scripting Spreadsheets and Text files Worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Experienced in developing service oriented architecture SOA and web Services using SOAP JAXWS WSDL and UDDI Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Environment Python Django Djangocms SSO database access Djangocms plugins CircleCI Bootstrap JavaScript HTML5 CSS3 Agile MAVEN Hadoop BigdataES6 Redux Object Oriented programming Flask Twisted Jenkins Webpack Grunt and Less HTTP web servers NGINX Kubernetes OpenShift Sr Python Developer Freedom Mortgage Corp Columbia MD February 2016 to July 2017 Responsibilities Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed a web application for both the company user and customer user with different Login and Signup authorization using firebase authentication Implemented web page using the semantic markup and page layout of HTML5 and implemented the new CSS3 borderradius property for the design layout and CSS3 transitions to change property values over a given duration Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Implemented unit and integration testing for all layers of the applications using frameworks like JUnit Spock Mocha Jasmine Debugging applications in different browsers using Firebug and testing applications using QUnit Jasmine karma and Mocha Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Developed RESTful API microweb services in controller and service layer to handle http requests Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed cross browser compatible RWD with use of HTML5 CSS3 Bootstrap and jQuery Mobile Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Worked on migrating MapReduce programs into Spark transformations using Scala Responsible for building scalable distributed data solutions using Hadoop Developed user interface by using the React JS Flux for SPA development Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Assist with SSL installations on ApacheNginx server Developed the User Interactive web application in a professional manner with using web technologies like HTML5 CSS3 Bootstrap Less Javascript and AngularJS as per companys standards Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Used Elastic search as the data indexer and query parser All the Python code is formatted in PEP8 Coding standard Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and Sqoop Wrote Python normalizations scripts to find duplicate data in different environments Used Jenkins for automating Builds and Automating Deployments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Loaded and transformed large sets of structured semistructured and unstructured data using HadoopBig Data concepts Designed and implemented 100 Swaggerbased RESTfulAPIs and unit test cases with Flask and Python Responsible design and development of user portal using Ruby on Rails framework Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Engaged in understanding PHP Code and rebuild the code in Python Environment Python Django HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite AWS EC2 S3 Karma Jenkins Twisted Selenium MongoDB soap Web Services Eclipse Websphere Portal Subversion SVN ES6 Redux Object Oriented programming Flask Twisted Jenkins Grunt and Less HTTP web servers NGINX OpenShift Sr Python Developer United health Group Columbus OH February 2015 to January 2016 Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Developed the unit testing scripts using JEST for testing the React components using Enzyme and react test renderer Involved in unit testing of various modules by generating the test cases using Jest Enzyme Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Used WebPack Babel and gulp for transpilationcompilation configuration for Typescript to be converted to JavaScript Created a crypto currency wallet and a blockchain based reward engagement platform built with ReactReduxSagas NodeKoa Used Express Framework to set up middleware to respond to the HTTP request with the help of Babel and developed the backend by Webpack Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Netbeans Jboss Mercurial ClearCase Selenium Water fall model UML JSP SERVLET ANT Xml Python Developer Comcast Corporation Atlanta GA September 2013 to January 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options and used Python modules such as requests urllib and urllib2 for web crawling Worked on writing and as well as read data from csv and excel file formats and Used other packages such as Beautiful soup for data parsing Developed a MATLAB algorithm which determines an objects dimensions from digital images Designed RESTful API plugin using Nodejs MongoDB Mongoose ODM and Express which optimized the code using Promises by 20 Used Promises to do AJAX call to connect frontend and backend Webservices backend development using Python CherryPy Django SQLAlchemy Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Developed approaches for improving NLP pipeline and NLP File Prep SettlementPrepare files for review for Settlement Create custom VB scripts in repackaging applications as needed Participated in the complete SDLC process and Held meetings with client and worked all alone for the entire project with limited help from the client Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team and developed rich user interface using CSS HTML JavaScript and jQuery Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux GIT MySQL SAS NLP Python Developer SA Technologies Inc Santa Clara CA October 2011 to August 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Used Django framework for application development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on CSS Bootstrap to develop web applications Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Designed and developed Web services using XML and jQuery Improved performance by using more modularized approach and using more in built methods Experienced in Agile Methodologies and SCRUM Process Maintained program libraries users manuals and technical documentation Wrote unit test cases for testing tools Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Built various graphs for business decision making using Python matplotlib library Worked in development of applications especially in UNIX environment and familiar with all its commands esponsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Environment Python Django MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server NO SQL jQuery Web developer CITI Bank New York NY October 2009 to September 2011 Responsibilities Developed project using MongoDB ExpressJS Angular 2 NodeJS Typescript and Bootstrap Developed various Angular 2 Components Modules Services observablepromises and Pipes using TypeScript Implemented Angular Router to enable navigation from one view to the next as user performs application tasks Used angular validation controls so it can help managers to fill forms easier Used Twitter bootstrap concepts to make the web application responsive to mobile and tablet screens Creating Procedures and functions Design and development of various reports Windows service Development and deployment Design and Coding Moving Load Analysis MLA Moving Load Analysis is windowsbased application for analyzing the effect of moving load on bridge Application is developed using threetier architecture Visual Studio SQL Server Involved in Forms design and development Creating objects like tables indexes views Actively involved in code review and code quality check process Implemented optimization techniques to reduce page size and load times to enhance user experience using sprites Worked with backend developer to optimize existing API calls to create efficiencies by deprecating unnecessary API calls Environment Angular 2 Typescript Angular CLI ExpressJS NodeJS MongoDB Mongoose AJAX Lodash JSON NPM Bootstrap XML Jasmine and GIT Software Developer Novartis Seattle WA February 2006 to September 2009 Responsibilities Implement pages based on mockups from designersstyle guides Develop enterprise applications using JS MVC frameworks Reactjs and Redux Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA DOM manipulations using JavaScript Write Unit Test suites using Jest Used Webpack to minify and bundle the code along with gulp Worked on JOI Validations both on client side and server side Developing CSS Style for web page using SASS Structure Handling cross browser compatibility issues Implementing Web Accessibility and SEO techniquesTransformation and integration of APIs Used SQL and C created and maintained a nightly process that loaded parsed validated and imported data from different sources and platforms into SQL servers Providing analysis and recommendations based on current reporting technology trends Completed classes in SSRS and Oracle Bi Managing 1 TB production databases which handle all incoming directbusiness mutual funds trades include monitoring of internal and external jobs designing production scripts working with lines of business through various issues that may arise Working on a team to design and upgrade of databases to SQL Server 2008 Headed a team which processed and remediated 5 years of mutual fund data to clients in an industry wide effort to correct mutual funds breakpoint issues using Microsoft SQL databases Work with Product Owners UX Designers build conceptual demos and POCs Make REST API calls to fetch data Use RadarAgile tool to track tasks assigned Follow Agile methodology and TestDriven Development Environment JavaScript ReactJS Redux Jest GIT NPM Webpack Environment Java J2EE Struts Spring MVC Spring Integration Ibatis Oracle JQuery XML WAS Accurev IBM DataPower XSLT CSS AJAX HP Fortify SSO Siteminder REST Webservices JMS Webspher MQ Education Master of Science Science and Engineering Florida State University",
    "unique_id": "c746c7fd-d3bc-4a8d-8843-d5d424e85d10"
}