{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Thermo Fishers Pittsburgh PA Around 5 years of IT experience as a JavaJ2EE developer in Analysis Design Development Testing Implementation Enhancement and Support of full life cycle web applications using NTier J2EE architecture in Financial Banking Healthcare insurance and Telecommunication domain Work Experience Java Developer Thermo Fishers Pittsburgh PA October 2018 to Present Project Description Working on project that enables B2B customers of Fisher Scientific to find and purchase products via their own integrated procurement platforms Also working with new updated B2B enterprise B2B customer administration portal as part of this project Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all their requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Designed LowLevel Architecture for Microservices and estimating LOE Level of effort for programming application Analyzing programming utilizing existing commerce functionality for migrating to updated technology Micro service Architecture Implementing distributed and highloaded system with massive back office system and integrating based on IBM Web ECommerce platform Extensively involved in Identity portal management developing the Micro services with latest technology and frameworks using JavaJEE Spring Boot Spring Cloud Spring Data Docker Mongo Db SQL Developed internal coding using J2EE technologies based on the MVC Architecture Implemented Business Logic using Java 18 Spring 31 Struts 20 and Hibernate 30 Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Developed Serverside components based on Struts MVC and the persistence layer build on Hibernate ORM framework and HibernateEH Cache for second level caching to increase the usability of the database and reduce the time process for the retrieval of data from the web logic Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Converted data from database into JSON format files and retrieve useful information using AJAX calls to render the response in UI Integrated the UI code with Backend Used JSON for data exchange between the client and server Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11g db Extensively worked on Jenkins by installing configuring and maintaining the purpose of CI and EndtoEnd automation for all build and deployments implementing CICD for database using Jenkins Configuring Jenkins job to spin up infrastructure using Terraform scripts Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment Java 1718 HTML5 CSS3 JSP Spring Boot Framework XML SQL UML Micro Services Apache Tomcat JQuery AJAX SOA Junit Jira Mongo dB Oracle MySql Log4j Kafka Intellij IBM RAD IBM WebSphere AWS Java Developer Samsung Corporation Bellevue WA May 2017 to September 2018 Project Description This project is targeted to enhance the capabilities of digital banking solutions It includes various features such as retail banking building customer relationship new product marketing and transactions support on multiple platforms Responsibilities Analyzed the technical requirements and created various models required for the project Implemented Model View Controller MVC architecture using Spring Framework Involved in all phases of Software Development Life Cycle SDLC like Analysis Designing Developing Testing Finalizing Presentation tier component is developed using JSF Framework and responsible for design and development of various frontend screens following GUI standards Developed Presentation tier implementation which involves in creating the JSP pages defining the page navigations creating and configuring the backing beans and integrating JSF with the businesslogic tier Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Designed and implemented web module using Spring MVC Designed user interface layout using CSS HTML Created JSP pages using standard JSF tags decorated using CSS Designed business middleware solution by integrating application using SAO architecture Implemented JAVAJ2EE design patterns such as Factory DAO Session Faade and Singleton Developed spring boot applications using spring data Expertise in implementing Micro Services using spring spring boot and spring cloud Implemented clientserver business applications using Micro services Used Ajax to provide dynamic features where applicable with the help of prototype library and Ajax4JSF Used a Microservices architecture with SpringBoot based services interacting through a combination of REST and SpringBoot Setup the Automation framework using Selenium to run test cases in multiple browsers and platforms Involved in designing of automation framework to be used in UI testing with Selenium Involved in build and deployment of MicroservicesSpring Boot with Jenkins Used Log4J for logging and analyzing system performance and flow involved in code refactoring and bug fixing Developed a RESTful service to provide all the CRUD capabilities for Salesforce App Designed and Developed the UI screens using JavaScript Angular JS jQuery JSP react JS Html and CSS Design and implemented the backend layer using Hibernate Tested Service and data access tier using JUnit in TDD methodology Used Agile Development methodology of software development Used JBOSS for the application deployment LOG4J for logging and SVN for Source Control Project builds and integration with Maven and Jenkins Worked on Oracle as the backend database Improved reliability and performance of high volume applications by moving them to Mongo DB Created and configured EC2 instances on Amazon Web services AWS for establishing clusters on cloud and created S3 buckets for our application Performed Branching Tagging Release Activities on Version Control Tools SVN GitHub Performed builds and deployment and responsible for source code control and release management Worked on WindowsLinux environment and debugged the application issues via accessing logs Environment Core Java 1718 Servlets JDBC Java Util Packages Java Script Angular JS HTML5 CSS3 JSON JSP Hibernate 3x Spring Framework XML SQL Eclipse UML Agile Methodology Microservices Apache Tomcat JBoss jQuery AJAX SOA Junit Jira Unix Shell Script Mongo dB Log4j Maven JavaJ2EE Developer SmartThings Mountain View CA January 2016 to April 2017 Project Description HARMAN designs and engineers connected products and solutions for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation solutions and services supporting the Internet of Things Here Harman have the contractual relation with Smart things Responsibilities Developed the application by using Scrum methodology in agile environment Responsible for building scalable distributed data solutions using Hadoop Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Experience in installation configuration support and monitoring of Hadoop clusters using Apache Cloudera distributions and AWS Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Single Page Web Applications using RESTFUL web services Ajax Bootstrap Reactjs Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer Infosys Hyderabad Telangana May 2014 to June 2015 Project Description It is a project funded to save huge money for the cell tower installation This tool will help to change the tilt configuration based on the density of population in that area These tilt configurations are done through the web interface and will be effect at the actual site Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Developed REST APIs using Nodejs to perform CRUD operations Used Struts Validator framework for clientside validations Worked in using React JS components Forms Events Keys Router Animations and Flux concept Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education Masters in Software Engineering in Software Engineering Gannon University May 2017 B Tech in Computer Science in Computer Science JNTU May 2014 Skills AJAX 4 years Apache 4 years Architecture 4 years Java 4 years JavaScript 4 years Java J2Ee Spring Rest Hibernate J2Ee",
    "entities": [
        "Micro Services",
        "Spring Framework",
        "Designing Development JUnit",
        "Used Hibernate",
        "AJAX",
        "Java Developer Samsung Corporation Bellevue",
        "GUI",
        "Nodejs",
        "WebSphere Application",
        "Dispatcher Servlets Controllers Model",
        "Dependency",
        "Backend Used JSON",
        "JSF Framework",
        "Converted",
        "Architecture Implementing",
        "IBM",
        "Created DDL",
        "CSS Design",
        "Created System Requirement Specifications",
        "Ajax Bootstrap Reactjs Experienced",
        "Java Developer Infosys Hyderabad",
        "JAR",
        "Hadoop",
        "XML",
        "Implemented DAO",
        "EAR",
        "Telangana",
        "JSF Controllers",
        "Hibernate Tested Service",
        "Project Description",
        "Financial Banking Healthcare",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "JAXWS",
        "Agile Methodology Designed",
        "JavaJ2EE",
        "Amazon",
        "Developed JavaJ2EE",
        "Oracle Single Page Web Applications",
        "SAO",
        "JS Html",
        "Developed",
        "Software Engineering Gannon University",
        "CSS HTML Created",
        "Development of application communication",
        "Analysis Design Development Testing Implementation Enhancement",
        "Spring MVC",
        "Responsibilities Involved",
        "UML",
        "Servlets",
        "UML Micro Services",
        "Developed Business",
        "RSA JMS JSP Servlets",
        "Developed Serverside",
        "JSP",
        "Integration of many components",
        "Micro",
        "MicroservicesSpring Boot with Jenkins Used",
        "Fisher Scientific",
        "Boot Framework XML",
        "HTTP Used Hibernate",
        "MVC",
        "EndtoEnd",
        "Integration Testing",
        "Agile",
        "Agile Development",
        "Implemented Model View Controller MVC",
        "REST Web Services Involved",
        "Terraform",
        "Database",
        "the MVC Architecture Implemented Business Logic",
        "POJO",
        "SRS",
        "Created",
        "Oracle",
        "Coordinated",
        "RDBMS Created",
        "JSF",
        "Maven JavaJ2EE Developer SmartThings Mountain View",
        "Software Engineering",
        "SQL Server Development of XMLXSLTXSD",
        "React JS",
        "HTML",
        "Implemented Data",
        "Worked on Multiple AWS",
        "RESTFUL",
        "SQL",
        "Source Control Project",
        "DML",
        "Bootstrap",
        "Internal Application",
        "UI Integrated",
        "Present Project Description Working",
        "technology Micro service",
        "REST Hibernate",
        "CI",
        "CICD",
        "Identity",
        "Skills AJAX",
        "Smart things Responsibilities Developed",
        "CRUD",
        "Bootstrap XML",
        "Designed LowLevel Architecture for Microservices",
        "WindowsLinux",
        "Spring Hibernate",
        "Maven",
        "lJavaspan",
        "Mongo DB Created",
        "JavaScript",
        "Responsibilities Analyzed",
        "UI",
        "Implemented JAVAJ2EE",
        "Selenium",
        "JS jQuery JSP",
        "JMS MQ MDB",
        "XSD",
        "Data Model",
        "Inversion of Control IOC",
        "JavaScript Implemented Responsive",
        "SOAP UI",
        "SVN",
        "Content Management",
        "SpringHibernate",
        "REST",
        "TDD",
        "Selenium Involved",
        "Used Hibernate Transaction Management",
        "Application",
        "Functionality",
        "Project Description HARMAN",
        "Operations",
        "CSS Designed"
    ],
    "experience": "Experience Java Developer Thermo Fishers Pittsburgh PA October 2018 to Present Project Description Working on project that enables B2B customers of Fisher Scientific to find and purchase products via their own integrated procurement platforms Also working with new updated B2B enterprise B2B customer administration portal as part of this project Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all their requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Designed LowLevel Architecture for Microservices and estimating LOE Level of effort for programming application Analyzing programming utilizing existing commerce functionality for migrating to updated technology Micro service Architecture Implementing distributed and highloaded system with massive back office system and integrating based on IBM Web ECommerce platform Extensively involved in Identity portal management developing the Micro services with latest technology and frameworks using JavaJEE Spring Boot Spring Cloud Spring Data Docker Mongo Db SQL Developed internal coding using J2EE technologies based on the MVC Architecture Implemented Business Logic using Java 18 Spring 31 Struts 20 and Hibernate 30 Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Developed Serverside components based on Struts MVC and the persistence layer build on Hibernate ORM framework and HibernateEH Cache for second level caching to increase the usability of the database and reduce the time process for the retrieval of data from the web logic Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Converted data from database into JSON format files and retrieve useful information using AJAX calls to render the response in UI Integrated the UI code with Backend Used JSON for data exchange between the client and server Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11 g db Extensively worked on Jenkins by installing configuring and maintaining the purpose of CI and EndtoEnd automation for all build and deployments implementing CICD for database using Jenkins Configuring Jenkins job to spin up infrastructure using Terraform scripts Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment Java 1718 HTML5 CSS3 JSP Spring Boot Framework XML SQL UML Micro Services Apache Tomcat JQuery AJAX SOA Junit Jira Mongo dB Oracle MySql Log4j Kafka Intellij IBM RAD IBM WebSphere AWS Java Developer Samsung Corporation Bellevue WA May 2017 to September 2018 Project Description This project is targeted to enhance the capabilities of digital banking solutions It includes various features such as retail banking building customer relationship new product marketing and transactions support on multiple platforms Responsibilities Analyzed the technical requirements and created various models required for the project Implemented Model View Controller MVC architecture using Spring Framework Involved in all phases of Software Development Life Cycle SDLC like Analysis Designing Developing Testing Finalizing Presentation tier component is developed using JSF Framework and responsible for design and development of various frontend screens following GUI standards Developed Presentation tier implementation which involves in creating the JSP pages defining the page navigations creating and configuring the backing beans and integrating JSF with the businesslogic tier Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Designed and implemented web module using Spring MVC Designed user interface layout using CSS HTML Created JSP pages using standard JSF tags decorated using CSS Designed business middleware solution by integrating application using SAO architecture Implemented JAVAJ2EE design patterns such as Factory DAO Session Faade and Singleton Developed spring boot applications using spring data Expertise in implementing Micro Services using spring spring boot and spring cloud Implemented clientserver business applications using Micro services Used Ajax to provide dynamic features where applicable with the help of prototype library and Ajax4JSF Used a Microservices architecture with SpringBoot based services interacting through a combination of REST and SpringBoot Setup the Automation framework using Selenium to run test cases in multiple browsers and platforms Involved in designing of automation framework to be used in UI testing with Selenium Involved in build and deployment of MicroservicesSpring Boot with Jenkins Used Log4J for logging and analyzing system performance and flow involved in code refactoring and bug fixing Developed a RESTful service to provide all the CRUD capabilities for Salesforce App Designed and Developed the UI screens using JavaScript Angular JS jQuery JSP react JS Html and CSS Design and implemented the backend layer using Hibernate Tested Service and data access tier using JUnit in TDD methodology Used Agile Development methodology of software development Used JBOSS for the application deployment LOG4J for logging and SVN for Source Control Project builds and integration with Maven and Jenkins Worked on Oracle as the backend database Improved reliability and performance of high volume applications by moving them to Mongo DB Created and configured EC2 instances on Amazon Web services AWS for establishing clusters on cloud and created S3 buckets for our application Performed Branching Tagging Release Activities on Version Control Tools SVN GitHub Performed builds and deployment and responsible for source code control and release management Worked on WindowsLinux environment and debugged the application issues via accessing logs Environment Core Java 1718 Servlets JDBC Java Util Packages Java Script Angular JS HTML5 CSS3 JSON JSP Hibernate 3x Spring Framework XML SQL Eclipse UML Agile Methodology Microservices Apache Tomcat JBoss jQuery AJAX SOA Junit Jira Unix Shell Script Mongo dB Log4j Maven JavaJ2EE Developer SmartThings Mountain View CA January 2016 to April 2017 Project Description HARMAN designs and engineers connected products and solutions for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation solutions and services supporting the Internet of Things Here Harman have the contractual relation with Smart things Responsibilities Developed the application by using Scrum methodology in agile environment Responsible for building scalable distributed data solutions using Hadoop Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Experience in installation configuration support and monitoring of Hadoop clusters using Apache Cloudera distributions and AWS Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Single Page Web Applications using RESTFUL web services Ajax Bootstrap Reactjs Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11 g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer Infosys Hyderabad Telangana May 2014 to June 2015 Project Description It is a project funded to save huge money for the cell tower installation This tool will help to change the tilt configuration based on the density of population in that area These tilt configurations are done through the web interface and will be effect at the actual site Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Developed REST APIs using Nodejs to perform CRUD operations Used Struts Validator framework for clientside validations Worked in using React JS components Forms Events Keys Router Animations and Flux concept Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education Masters in Software Engineering in Software Engineering Gannon University May 2017 B Tech in Computer Science in Computer Science JNTU May 2014 Skills AJAX 4 years Apache 4 years Architecture 4 years Java 4 years JavaScript 4 years Java J2Ee Spring Rest Hibernate J2Ee",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Thermo",
        "Fishers",
        "Pittsburgh",
        "PA",
        "years",
        "IT",
        "experience",
        "JavaJ2EE",
        "developer",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "Enhancement",
        "Support",
        "life",
        "cycle",
        "web",
        "applications",
        "NTier",
        "J2EE",
        "architecture",
        "Financial",
        "Banking",
        "Healthcare",
        "insurance",
        "Telecommunication",
        "domain",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Thermo",
        "Fishers",
        "Pittsburgh",
        "PA",
        "October",
        "Present",
        "Project",
        "Description",
        "Working",
        "project",
        "customers",
        "Fisher",
        "Scientific",
        "products",
        "procurement",
        "platforms",
        "B2B",
        "enterprise",
        "B2B",
        "customer",
        "administration",
        "portal",
        "part",
        "project",
        "Responsibilities",
        "phases",
        "project",
        "analysis",
        "requirement",
        "phase",
        "project",
        "Created",
        "System",
        "Requirement",
        "Specifications",
        "SRS",
        "report",
        "project",
        "requirements",
        "client",
        "requirements",
        "project",
        "scope",
        "functionalities",
        "Agile",
        "Methodology",
        "frontend",
        "presentation",
        "logic",
        "JSP",
        "CSS3",
        "Strut",
        "tags",
        "validations",
        "JavaScript",
        "JavaScript",
        "functions",
        "validations",
        "LowLevel",
        "Architecture",
        "Microservices",
        "LOE",
        "Level",
        "effort",
        "programming",
        "application",
        "programming",
        "commerce",
        "functionality",
        "technology",
        "Micro",
        "service",
        "Architecture",
        "Implementing",
        "system",
        "office",
        "system",
        "IBM",
        "Web",
        "ECommerce",
        "platform",
        "Identity",
        "management",
        "Micro",
        "services",
        "technology",
        "frameworks",
        "JavaJEE",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Data",
        "Docker",
        "Mongo",
        "Db",
        "SQL",
        "coding",
        "J2EE",
        "technologies",
        "MVC",
        "Architecture",
        "Business",
        "Logic",
        "Java",
        "Spring",
        "Struts",
        "Hibernate",
        "Java",
        "Streams",
        "API",
        "Streams",
        "API",
        "processing",
        "collections",
        "environment",
        "Developed",
        "Business",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "Dependency",
        "injection",
        "Spring",
        "services",
        "Spring",
        "controllers",
        "DAOs",
        "Objects",
        "business",
        "classes",
        "Serverside",
        "components",
        "Struts",
        "MVC",
        "persistence",
        "layer",
        "Hibernate",
        "ORM",
        "framework",
        "HibernateEH",
        "Cache",
        "level",
        "usability",
        "database",
        "time",
        "process",
        "retrieval",
        "data",
        "web",
        "logic",
        "DAO",
        "pattern",
        "data",
        "database",
        "Hibernate",
        "database",
        "Operations",
        "database",
        "access",
        "statements",
        "XML",
        "mapping",
        "files",
        "POJO",
        "data",
        "database",
        "format",
        "files",
        "information",
        "AJAX",
        "calls",
        "response",
        "UI",
        "Integrated",
        "UI",
        "code",
        "Backend",
        "JSON",
        "data",
        "exchange",
        "client",
        "server",
        "Hibernate",
        "Transaction",
        "Management",
        "SpringHibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "Concepts",
        "session",
        "EJBs",
        "information",
        "Oracle",
        "database",
        "SpringHibernate",
        "Used",
        "AJAX",
        "end",
        "user",
        "interface",
        "features",
        "application",
        "REST",
        "Web",
        "services",
        "data",
        "client",
        "side",
        "Web",
        "Services",
        "client",
        "applications",
        "WSDLs",
        "DDL",
        "DML",
        "SQL",
        "scripts",
        "creation",
        "database",
        "objects",
        "Oracle",
        "g",
        "db",
        "Jenkins",
        "configuring",
        "purpose",
        "CI",
        "EndtoEnd",
        "automation",
        "build",
        "deployments",
        "CICD",
        "database",
        "Jenkins",
        "Configuring",
        "Jenkins",
        "job",
        "infrastructure",
        "Terraform",
        "scripts",
        "data",
        "models",
        "practice",
        "concepts",
        "normalization",
        "tables",
        "procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "Required",
        "SQL",
        "response",
        "time",
        "application",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "tests",
        "piece",
        "Functionality",
        "functionality",
        "Jenkins",
        "JAR",
        "files",
        "Database",
        "application",
        "Maven",
        "building",
        "tool",
        "EAR",
        "file",
        "application",
        "servers",
        "Dependency",
        "management",
        "code",
        "application",
        "Eclipse",
        "IDE",
        "application",
        "code",
        "Log4j",
        "utility",
        "runtime",
        "logs",
        "Environment",
        "Java",
        "HTML5",
        "CSS3",
        "JSP",
        "Spring",
        "Boot",
        "Framework",
        "XML",
        "SQL",
        "UML",
        "Micro",
        "Services",
        "Apache",
        "Tomcat",
        "JQuery",
        "AJAX",
        "SOA",
        "Junit",
        "Jira",
        "Mongo",
        "Oracle",
        "MySql",
        "Log4j",
        "Kafka",
        "Intellij",
        "IBM",
        "RAD",
        "IBM",
        "WebSphere",
        "AWS",
        "Java",
        "Developer",
        "Samsung",
        "Corporation",
        "Bellevue",
        "WA",
        "May",
        "September",
        "Project",
        "Description",
        "project",
        "capabilities",
        "banking",
        "solutions",
        "features",
        "banking",
        "building",
        "customer",
        "relationship",
        "product",
        "marketing",
        "transactions",
        "support",
        "platforms",
        "Responsibilities",
        "requirements",
        "models",
        "project",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Designing",
        "Developing",
        "Testing",
        "Presentation",
        "tier",
        "component",
        "JSF",
        "Framework",
        "design",
        "development",
        "frontend",
        "screens",
        "GUI",
        "standards",
        "Presentation",
        "tier",
        "implementation",
        "JSP",
        "pages",
        "page",
        "navigations",
        "backing",
        "beans",
        "JSF",
        "tier",
        "Spring",
        "Framework",
        "tier",
        "application",
        "framework",
        "persistence",
        "strategy",
        "spring",
        "support",
        "Hibernate",
        "database",
        "web",
        "module",
        "Spring",
        "MVC",
        "user",
        "interface",
        "layout",
        "CSS",
        "HTML",
        "JSP",
        "pages",
        "JSF",
        "tags",
        "CSS",
        "business",
        "middleware",
        "solution",
        "application",
        "SAO",
        "architecture",
        "JAVAJ2EE",
        "design",
        "patterns",
        "Factory",
        "DAO",
        "Session",
        "Faade",
        "Singleton",
        "Developed",
        "spring",
        "boot",
        "applications",
        "spring",
        "data",
        "Expertise",
        "Micro",
        "Services",
        "spring",
        "spring",
        "boot",
        "spring",
        "cloud",
        "clientserver",
        "business",
        "applications",
        "Micro",
        "services",
        "Ajax",
        "features",
        "help",
        "prototype",
        "library",
        "Microservices",
        "architecture",
        "SpringBoot",
        "services",
        "combination",
        "REST",
        "SpringBoot",
        "Setup",
        "Automation",
        "framework",
        "Selenium",
        "test",
        "cases",
        "browsers",
        "platforms",
        "designing",
        "automation",
        "framework",
        "UI",
        "testing",
        "Selenium",
        "build",
        "deployment",
        "MicroservicesSpring",
        "Boot",
        "Jenkins",
        "Log4J",
        "system",
        "performance",
        "flow",
        "code",
        "refactoring",
        "bug",
        "service",
        "CRUD",
        "capabilities",
        "Salesforce",
        "App",
        "UI",
        "screens",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "JSP",
        "JS",
        "Html",
        "CSS",
        "Design",
        "layer",
        "Hibernate",
        "Tested",
        "Service",
        "data",
        "access",
        "tier",
        "JUnit",
        "TDD",
        "methodology",
        "Agile",
        "Development",
        "methodology",
        "software",
        "development",
        "JBOSS",
        "application",
        "deployment",
        "LOG4J",
        "logging",
        "SVN",
        "Source",
        "Control",
        "Project",
        "integration",
        "Maven",
        "Jenkins",
        "Oracle",
        "database",
        "reliability",
        "performance",
        "volume",
        "applications",
        "Mongo",
        "DB",
        "Created",
        "EC2",
        "instances",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "clusters",
        "cloud",
        "S3",
        "buckets",
        "application",
        "Performed",
        "Tagging",
        "Release",
        "Activities",
        "Version",
        "Control",
        "Tools",
        "SVN",
        "GitHub",
        "Performed",
        "builds",
        "deployment",
        "source",
        "code",
        "control",
        "management",
        "WindowsLinux",
        "environment",
        "application",
        "issues",
        "logs",
        "Environment",
        "Core",
        "Java",
        "Servlets",
        "JDBC",
        "Java",
        "Util",
        "Packages",
        "Java",
        "Script",
        "Angular",
        "JS",
        "HTML5",
        "CSS3",
        "JSON",
        "JSP",
        "Hibernate",
        "Spring",
        "Framework",
        "XML",
        "SQL",
        "Eclipse",
        "UML",
        "Agile",
        "Methodology",
        "Microservices",
        "Apache",
        "Tomcat",
        "JBoss",
        "jQuery",
        "AJAX",
        "SOA",
        "Junit",
        "Jira",
        "Unix",
        "Shell",
        "Script",
        "Mongo",
        "Log4j",
        "Maven",
        "JavaJ2EE",
        "Developer",
        "SmartThings",
        "Mountain",
        "View",
        "CA",
        "January",
        "April",
        "Project",
        "Description",
        "HARMAN",
        "products",
        "solutions",
        "automakers",
        "consumers",
        "enterprises",
        "car",
        "systems",
        "audio",
        "products",
        "enterprise",
        "automation",
        "solutions",
        "services",
        "Internet",
        "Things",
        "Harman",
        "relation",
        "Smart",
        "things",
        "Responsibilities",
        "application",
        "Scrum",
        "methodology",
        "environment",
        "data",
        "solutions",
        "Hadoop",
        "architecture",
        "J2EE",
        "Model",
        "approach",
        "MVC",
        "design",
        "paradigm",
        "application",
        "Spring",
        "framework",
        "features",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Security",
        "Spring",
        "Web",
        "flow",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "cloud",
        "Microservices",
        "application",
        "configuration",
        "REST",
        "Micro",
        "services",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JPA",
        "application",
        "modules",
        "base",
        "classes",
        "utility",
        "classes",
        "core",
        "Spring",
        "dependency",
        "injections",
        "annotations",
        "configuration",
        "files",
        "Spring",
        "Rest",
        "Template",
        "REST",
        "Web",
        "Services",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "annotations",
        "spring",
        "components",
        "Dispatcher",
        "Servlets",
        "Controllers",
        "Model",
        "View",
        "Developed",
        "Business",
        "components",
        "Java",
        "Objects",
        "Hibernate",
        "framework",
        "Java",
        "classes",
        "database",
        "Annotations",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "Development",
        "application",
        "communication",
        "message",
        "JMS",
        "MQ",
        "MDB",
        "process",
        "message",
        "pointtopoint",
        "scenarios",
        "JavaJ2EE",
        "code",
        "business",
        "logic",
        "Spring",
        "Hibernate",
        "framework",
        "OOP",
        "concepts",
        "Peer",
        "code",
        "reviews",
        "Data",
        "validations",
        "functionalities",
        "Angular2",
        "JavaScript",
        "Responsive",
        "development",
        "Bootstrap",
        "CSS3",
        "media",
        "queries",
        "AWS",
        "instances",
        "security",
        "groups",
        "Elastic",
        "Load",
        "Balancer",
        "AMIs",
        "Auto",
        "scaling",
        "design",
        "cost",
        "fault",
        "systems",
        "Experience",
        "installation",
        "configuration",
        "support",
        "monitoring",
        "Hadoop",
        "clusters",
        "Apache",
        "Cloudera",
        "distributions",
        "AWS",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "features",
        "services",
        "Spring",
        "MVC",
        "rest",
        "services",
        "template",
        "Functionality",
        "web",
        "services",
        "spring",
        "boot",
        "JPA",
        "Cloud",
        "foundry",
        "Oracle",
        "Single",
        "Page",
        "Web",
        "Applications",
        "RESTFUL",
        "web",
        "services",
        "Ajax",
        "Bootstrap",
        "Reactjs",
        "SQL",
        "data",
        "tables",
        "SQL",
        "queries",
        "transactions",
        "data",
        "data",
        "sources",
        "Oracle",
        "files",
        "SQL",
        "Server",
        "Development",
        "XMLXSLTXSD",
        "schema",
        "definitions",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "application",
        "support",
        "maintenance",
        "application",
        "defects",
        "testing",
        "team",
        "bug",
        "reports",
        "fixes",
        "tickets",
        "JIRA",
        "Good",
        "experience",
        "test",
        "software",
        "development",
        "unit",
        "testing",
        "tool",
        "JUnit",
        "test",
        "GIT",
        "HUB",
        "component",
        "version",
        "management",
        "Jenkins",
        "file",
        "web",
        "services",
        "SOAP",
        "UI",
        "SOAP",
        "Sonar",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "logs",
        "Environment",
        "Windows",
        "XP",
        "JDK",
        "Servlets",
        "JSP",
        "HTML",
        "AWS",
        "Spring",
        "Boot",
        "SQL",
        "Server",
        "SQL",
        "Server",
        "Eclipse",
        "Maven",
        "WebLogic",
        "g",
        "SVN",
        "JUnit",
        "Log4j",
        "NoSQL",
        "Spring",
        "REST",
        "Hibernate",
        "Java",
        "Developer",
        "Infosys",
        "Hyderabad",
        "Telangana",
        "May",
        "June",
        "Project",
        "Description",
        "project",
        "money",
        "cell",
        "tower",
        "installation",
        "tool",
        "tilt",
        "configuration",
        "density",
        "population",
        "area",
        "tilt",
        "configurations",
        "web",
        "interface",
        "effect",
        "site",
        "Responsibilities",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "UML",
        "diagrams",
        "use",
        "cases",
        "class",
        "diagrams",
        "interaction",
        "diagrams",
        "sequence",
        "collaboration",
        "activity",
        "diagrams",
        "work",
        "environment",
        "Content",
        "Management",
        "system",
        "workflow",
        "management",
        "content",
        "framework",
        "data",
        "HTML",
        "JavaScript",
        "Application",
        "Struts",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "MVC",
        "design",
        "pattern",
        "JSF",
        "Rich",
        "UI",
        "framework",
        "Designing",
        "Development",
        "JUnit",
        "testing",
        "Integration",
        "components",
        "applications",
        "endtoend",
        "Frontend",
        "View",
        "JSF",
        "Controllers",
        "configurations",
        "Data",
        "Model",
        "JPA",
        "mappings",
        "generating",
        "entities",
        "user",
        "screens",
        "validations",
        "HTML",
        "jQuery",
        "JSF",
        "user",
        "requirements",
        "search",
        "functionality",
        "Internal",
        "Application",
        "JS",
        "Developed",
        "REST",
        "APIs",
        "Nodejs",
        "CRUD",
        "operations",
        "Struts",
        "Validator",
        "framework",
        "validations",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "Spring",
        "Dependency",
        "Injection",
        "properties",
        "layers",
        "Web",
        "Service",
        "client",
        "login",
        "authentication",
        "credit",
        "reports",
        "information",
        "JAXWS",
        "Apache",
        "Axis",
        "Web",
        "services",
        "SOAP",
        "Rest",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Hibernate",
        "ORM",
        "framework",
        "Spring",
        "framework",
        "data",
        "persistence",
        "transaction",
        "management",
        "Hibernate",
        "object",
        "data",
        "mapping",
        "framework",
        "data",
        "Oracle",
        "MySQL",
        "Maven",
        "compilation",
        "packaging",
        "deployment",
        "Apache",
        "Tomcat",
        "WebSphere",
        "Application",
        "servers",
        "logging",
        "mechanism",
        "Log4j",
        "framework",
        "Environment",
        "JDK",
        "Agile",
        "Development",
        "Process",
        "Struts",
        "JSF2x",
        "Spring",
        "Spring",
        "framework",
        "Hibernate",
        "RSA",
        "JMS",
        "JSP",
        "Servlets",
        "Web",
        "Sphere",
        "NodeJS",
        "Apache",
        "Tomcat",
        "Oracle",
        "MySQL",
        "Databases",
        "AJAX",
        "Windows",
        "XP",
        "HTML",
        "XML",
        "SOAP",
        "Maven2x",
        "Log4J",
        "Bootstrap",
        "XML",
        "XSLT",
        "XSD",
        "jQuery",
        "JavaScript",
        "JUnit",
        "SVN",
        "Education",
        "Masters",
        "Software",
        "Engineering",
        "Software",
        "Engineering",
        "Gannon",
        "University",
        "May",
        "B",
        "Tech",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "JNTU",
        "May",
        "Skills",
        "AJAX",
        "years",
        "Apache",
        "years",
        "Architecture",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "Java",
        "J2Ee",
        "Spring",
        "Rest",
        "Hibernate",
        "J2Ee"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:56:48.402097",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Thermo Fishers Pittsburgh PA Around 5 years of IT experience as a JavaJ2EE developer in Analysis Design Development Testing Implementation Enhancement and Support of full life cycle web applications using NTier J2EE architecture in Financial Banking Healthcare insurance and Telecommunication domain Work Experience Java Developer Thermo Fishers Pittsburgh PA October 2018 to Present Project Description Working on project that enables B2B customers of Fisher Scientific to find and purchase products via their own integrated procurement platforms Also working with new updated B2B enterprise B2B customer administration portal as part of this project Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all their requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Designed LowLevel Architecture for Microservices and estimating LOE Level of effort for programming application Analyzing programming utilizing existing commerce functionality for migrating to updated technology Micro service Architecture Implementing distributed and highloaded system with massive back office system and integrating based on IBM Web ECommerce platform Extensively involved in Identity portal management developing the Micro services with latest technology and frameworks using JavaJEE Spring Boot Spring Cloud Spring Data Docker Mongo Db SQL Developed internal coding using J2EE technologies based on the MVC Architecture Implemented Business Logic using Java 18 Spring 31 Struts 20 and Hibernate 30 Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Developed Serverside components based on Struts MVC and the persistence layer build on Hibernate ORM framework and HibernateEH Cache for second level caching to increase the usability of the database and reduce the time process for the retrieval of data from the web logic Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Converted data from database into JSON format files and retrieve useful information using AJAX calls to render the response in UI Integrated the UI code with Backend Used JSON for data exchange between the client and server Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11g db Extensively worked on Jenkins by installing configuring and maintaining the purpose of CI and EndtoEnd automation for all build and deployments implementing CICD for database using Jenkins Configuring Jenkins job to spin up infrastructure using Terraform scripts Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment Java 1718 HTML5 CSS3 JSP Spring Boot Framework XML SQL UML Micro Services Apache Tomcat JQuery AJAX SOA Junit Jira Mongo dB Oracle MySql Log4j Kafka Intellij IBM RAD IBM WebSphere AWS Java Developer Samsung Corporation Bellevue WA May 2017 to September 2018 Project Description This project is targeted to enhance the capabilities of digital banking solutions It includes various features such as retail banking building customer relationship new product marketing and transactions support on multiple platforms Responsibilities Analyzed the technical requirements and created various models required for the project Implemented Model View Controller MVC architecture using Spring Framework Involved in all phases of Software Development Life Cycle SDLC like Analysis Designing Developing Testing Finalizing Presentation tier component is developed using JSF Framework and responsible for design and development of various frontend screens following GUI standards Developed Presentation tier implementation which involves in creating the JSP pages defining the page navigations creating and configuring the backing beans and integrating JSF with the businesslogic tier Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Designed and implemented web module using Spring MVC Designed user interface layout using CSS HTML Created JSP pages using standard JSF tags decorated using CSS Designed business middleware solution by integrating application using SAO architecture Implemented JAVAJ2EE design patterns such as Factory DAO Session Faade and Singleton Developed spring boot applications using spring data Expertise in implementing Micro Services using spring spring boot and spring cloud Implemented clientserver business applications using Micro services Used Ajax to provide dynamic features where applicable with the help of prototype library and Ajax4JSF Used a Microservices architecture with SpringBoot based services interacting through a combination of REST and SpringBoot Setup the Automation framework using Selenium to run test cases in multiple browsers and platforms Involved in designing of automation framework to be used in UI testing with Selenium Involved in build and deployment of MicroservicesSpring Boot with Jenkins Used Log4J for logging and analyzing system performance and flow involved in code refactoring and bug fixing Developed a RESTful service to provide all the CRUD capabilities for Salesforce App Designed and Developed the UI screens using JavaScript Angular JS jQuery JSP react JS Html and CSS Design and implemented the backend layer using Hibernate Tested Service and data access tier using JUnit in TDD methodology Used Agile Development methodology of software development Used JBOSS for the application deployment LOG4J for logging and SVN for Source Control Project builds and integration with Maven and Jenkins Worked on Oracle as the backend database Improved reliability and performance of high volume applications by moving them to Mongo DB Created and configured EC2 instances on Amazon Web services AWS for establishing clusters on cloud and created S3 buckets for our application Performed Branching Tagging Release Activities on Version Control Tools SVN GitHub Performed builds and deployment and responsible for source code control and release management Worked on WindowsLinux environment and debugged the application issues via accessing logs Environment Core Java 1718 Servlets JDBC Java Util Packages Java Script Angular JS HTML5 CSS3 JSON JSP Hibernate 3x Spring Framework XML SQL Eclipse UML Agile Methodology Microservices Apache Tomcat JBoss jQuery AJAX SOA Junit Jira Unix Shell Script Mongo dB Log4j Maven JavaJ2EE Developer SmartThings Mountain View CA January 2016 to April 2017 Project Description HARMAN designs and engineers connected products and solutions for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation solutions and services supporting the Internet of Things Here Harman have the contractual relation with Smart things Responsibilities Developed the application by using Scrum methodology in agile environment Responsible for building scalable distributed data solutions using Hadoop Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Experience in installation configuration support and monitoring of Hadoop clusters using Apache Cloudera distributions and AWS Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Single Page Web Applications using RESTFUL web services Ajax Bootstrap Reactjs Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer Infosys Hyderabad Telangana May 2014 to June 2015 Project Description It is a project funded to save huge money for the cell tower installation This tool will help to change the tilt configuration based on the density of population in that area These tilt configurations are done through the web interface and will be effect at the actual site Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Developed REST APIs using Nodejs to perform CRUD operations Used Struts Validator framework for clientside validations Worked in using React JS components Forms Events Keys Router Animations and Flux concept Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education Masters in Software Engineering in Software Engineering Gannon University May 2017 B Tech in Computer Science in Computer Science JNTU May 2014 Skills AJAX 4 years Apache 4 years Architecture 4 years Java 4 years JavaScript 4 years Java J2Ee Spring Rest Hibernate J2Ee",
    "unique_id": "2d49b11b-4df8-4fa5-873c-aa0a0b41c8c9"
}