{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Citigroup Inc New York NY Authorized to work in the US for any employer Work Experience Sr Python Developer Citigroup Inc New York NY December 2015 to Present Responsibilities Involved in Developing a Restful service using Python Flask framework Made Django web based apps for Insurance premium calculations Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Experienced in web applications development using Django Python NETC Flask Python and Nodejs Angularjs emberjs Jquery Ajax while using HTMLCSSJS for serverside rendered application Expertise in developing webbased open stack applications using Python and Django for large dataset analysis Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Reviewed and implemented instrument pricing and modelling methodologies in collaboration with technical engineers Analyzed and documented how instrument prices move as underlying market data sources change Good hands on experience in data warehouse developer database engineer for highvolume data processing Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Installed Configured administered and monitored multi Data center Cassandra clusters Involved in upgrading the present Oracle data model to Cassandra data model Evaluated and tuned data model by running endurance tests using JMeter Cassandra Stress Tool and OpsCenter Providing support for Linux servers and workstations in Department of Physics Installing and configuring NIS servers to authenticate between Linux Apple and Windows environments Writing bash shell scripts on local setups to automate jobs Designed front end using UI HTML CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Full Stack Developer for custom Drupal 7 build Responsibilities included site maintenance new feature development and user support Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Used Django framework for application development Developed user interface using CSS HTML JavaScript and Jquery and Django Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Also used methods for cross application use using the Class Builder and Object Oriented programming Generated an API Reference guide to help application developers for creating the software applications to store data using DDN S3 compatible with Amazon S3 API or DDN OpenStack Swift API calls Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used TDD Test driven development methodology Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for Javascript manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Coded test programs and evaluated existing engineering processes Designed and configured database and backend applications and programs Performed research to explore and identify new technological platforms Environment Python Django HTML5 CSS3 MySQL JavaScript Jquery wxPython numPY matPlotLib MySQL PyQT NET PyQuery MVW DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL and pythonlibraries such as Numpy sqlalchemy etc Python Developer United Health Group Austin TX January 2015 to December 2015 Responsibilities Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented MVC architecture in developing the web application by Django framework Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Fetched twitter feeds for certain important keyword using pythontwitter library Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQLdb package Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Environment Python Django mod python Angular JQuery JavaScript AJAX HTMLXHTML XML MsSQL server TSQL Jasper GIT Reports RESTful Linux Python Developer Atlanta GA July 2013 to January 2015 Responsibilities Worked on requirement gathering and High level design Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Performed UnitSystem test Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Pythonprogramming Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 2627 Scipy Pandas BugZilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML5CSS Apache Python Developer Bosch Designs Atlanta GA July 2012 to June 2013 Project Description Bosch designs and produces precision automotive components and systems sold to vehicle and powertrain manufacturers worldwide These include systems and components for gasoline and diesel injection airbag components ABS and conventional braking systems telematics as well as small motors electrical and electronic equipment Worked on development of Warranty and defects tracking system Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Environment Python Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer Lifelock Mountain View CA July 2011 to June 2012 Responsibilities Associated with the business community to define business requirements and analyze the possible technical solutions Extensively used UML for designing to develop various use cases class diagrams and sequence diagrams Developed entire frontend and backend modules using Python on Django Web Framework Built all database mapping classes using Django models Develop and maintain Automation Framework customizedfor testing Desktop based application VehicleSpy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Generated Python Django Forms Crispy forms to record data login and signup of online users Part of team implementing REST APIs in Python using microframework like Django with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Developed dynamic web pages to view the reports generated using Django Framework and also worked in NoSQL database MongoDB Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Designing mobile search application system requirements and coded backend and frontend in Python Associated on CSS Bootstrap to develop web applications BuildSQL NOSQLqueries implementing functions packages views triggers and tables Worked on Python OpenStack APIs and used NumPy for Numerical analysis Working along with AutomationTeam to automate scripts using java scripting language Familiarity with Selenium AutomationFramework Implemented Model View Control architecture in developing web applications using Django frame work Participated in daily scrum to implement Agile scrum methodology helping the team maintain focus on the business objective with constant assessment and feedback Managed code versioning with Github and deployment to staging and production servers Environment Python Django 13 HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Python Developer Verizon Wireless Tampa FL July 2010 to June 2011 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Master of Science Columbia University New York NY Skills JAVASCRIPT 6 years jQuery 6 years LINUX 5 years BOOTSTRAP 5 years MYSQL 5 years Additional Information TECHNICAL SKILLS Programming languages C C JAVA J2EE Web Technologies HTML5 CSS3 JavaScript JQuery proficient JSON JSP PHP5 JSTL Bootstrap GRUNT Mobile JQuery Mobile Android Phone Gap Databases MS SQL MS Access Oracle SQLite Operating Systems Windows Linux Mac Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Workbench Adobe Dreamweaver MS Office Virtual Box MS SQL Server SDLC Methodologies Agile SCRUM Frame Works Angularjs Backbonejs Ext JS Nodejs Express JS Reactjs D3js Testing Junit Jira JasmineKarma Jenkins Mocha Protractor Jest Browsers IE9 Mozilla Fire Fox Opera mobile Browser Chrome Safari",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "Nose Modifying",
        "ISO",
        "NLP File Prep SettlementPrepare",
        "AJAX",
        "GUI",
        "Android Visual Studio",
        "UI HTML CSS",
        "Desktop",
        "Fox Opera",
        "REST JSON",
        "Interfacing",
        "Nodejs Express",
        "DDN S3",
        "Present Responsibilities Involved",
        "OpenStack",
        "Panda",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "NIS",
        "XML",
        "SOAP",
        "Atlanta",
        "CherryPy",
        "Microsofts ISA",
        "Department of Physics Installing",
        "OpsCenter",
        "API Integration Used Celery",
        "csv",
        "Shell",
        "SASAccess SAS SQL",
        "LAMP",
        "TX",
        "Amazon",
        "DataLayer",
        "Followed AGILE development",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "Bash",
        "CSS Bootstrap",
        "BuildSQL NOSQLqueries",
        "MATLAB",
        "Created Python",
        "Python Unit",
        "Evaluated",
        "Implemented MVC",
        "UML",
        "Complete Software",
        "Performed UnitSystem",
        "Created Reports",
        "Windows Linux Mac Application",
        "Oracle 9i",
        "Cleaned",
        "Created Data",
        "HTML CSS JavaScript JQuery Angular JS",
        "Developed Unit Integration",
        "Flask",
        "JQuery Utilized Python",
        "RDS",
        "PyQtto",
        "MVC",
        "Work Experience Sr Python Developer Citigroup Inc New York",
        "VehicleSpy",
        "Agile",
        "Django Curl XML JSON",
        "GIT",
        "JASPER Created",
        "API",
        "US",
        "HTML CSS JavaScript",
        "Microsoft Excel Parsers",
        "Created",
        "JMeter Cassandra Stress Tool",
        "Warranty",
        "Jquery and Django Assisted",
        "Oracle",
        "Coded",
        "Python Developer United Health Group",
        "Autoscaling EC2 VPC",
        "SQL Wrote",
        "Dreamweaver MS Office",
        "Converted Visual",
        "SAS",
        "java",
        "SQL",
        "NLP",
        "lPythonspan",
        "Github",
        "Familiarity with Selenium AutomationFramework Implemented Model View Control",
        "Wireshark",
        "Amazon AWS",
        "SQLite",
        "CRUD",
        "JQuery Created",
        "cat5",
        "Performed",
        "Djangos",
        "Cisco",
        "UI",
        "SVN",
        "the Business requirements Involved",
        "Additional Information TECHNICAL SKILLS Programming",
        "CSS",
        "Implemented Integration",
        "JSON JSP PHP5",
        "the Global Shipping Team Created",
        "Access Oracle",
        "REST",
        "HTMLCSSJS",
        "TDD",
        "NoSQL",
        "Tableau",
        "PHP",
        "Science Columbia University New York",
        "CloudFormation",
        "DevTest"
    ],
    "experience": "Experience Sr Python Developer Citigroup Inc New York NY December 2015 to Present Responsibilities Involved in Developing a Restful service using Python Flask framework Made Django web based apps for Insurance premium calculations Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Experienced in web applications development using Django Python NETC Flask Python and Nodejs Angularjs emberjs Jquery Ajax while using HTMLCSSJS for serverside rendered application Expertise in developing webbased open stack applications using Python and Django for large dataset analysis Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Reviewed and implemented instrument pricing and modelling methodologies in collaboration with technical engineers Analyzed and documented how instrument prices move as underlying market data sources change Good hands on experience in data warehouse developer database engineer for highvolume data processing Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Installed Configured administered and monitored multi Data center Cassandra clusters Involved in upgrading the present Oracle data model to Cassandra data model Evaluated and tuned data model by running endurance tests using JMeter Cassandra Stress Tool and OpsCenter Providing support for Linux servers and workstations in Department of Physics Installing and configuring NIS servers to authenticate between Linux Apple and Windows environments Writing bash shell scripts on local setups to automate jobs Designed front end using UI HTML CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Full Stack Developer for custom Drupal 7 build Responsibilities included site maintenance new feature development and user support Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Used Django framework for application development Developed user interface using CSS HTML JavaScript and Jquery and Django Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Also used methods for cross application use using the Class Builder and Object Oriented programming Generated an API Reference guide to help application developers for creating the software applications to store data using DDN S3 compatible with Amazon S3 API or DDN OpenStack Swift API calls Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used TDD Test driven development methodology Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for Javascript manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Coded test programs and evaluated existing engineering processes Designed and configured database and backend applications and programs Performed research to explore and identify new technological platforms Environment Python Django HTML5 CSS3 MySQL JavaScript Jquery wxPython numPY matPlotLib MySQL PyQT NET PyQuery MVW DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL and pythonlibraries such as Numpy sqlalchemy etc Python Developer United Health Group Austin TX January 2015 to December 2015 Responsibilities Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented MVC architecture in developing the web application by Django framework Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Fetched twitter feeds for certain important keyword using pythontwitter library Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQLdb package Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Environment Python Django mod python Angular JQuery JavaScript AJAX HTMLXHTML XML MsSQL server TSQL Jasper GIT Reports RESTful Linux Python Developer Atlanta GA July 2013 to January 2015 Responsibilities Worked on requirement gathering and High level design Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Performed UnitSystem test Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Pythonprogramming Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 2627 Scipy Pandas BugZilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML5CSS Apache Python Developer Bosch Designs Atlanta GA July 2012 to June 2013 Project Description Bosch designs and produces precision automotive components and systems sold to vehicle and powertrain manufacturers worldwide These include systems and components for gasoline and diesel injection airbag components ABS and conventional braking systems telematics as well as small motors electrical and electronic equipment Worked on development of Warranty and defects tracking system Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Environment Python Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer Lifelock Mountain View CA July 2011 to June 2012 Responsibilities Associated with the business community to define business requirements and analyze the possible technical solutions Extensively used UML for designing to develop various use cases class diagrams and sequence diagrams Developed entire frontend and backend modules using Python on Django Web Framework Built all database mapping classes using Django models Develop and maintain Automation Framework customizedfor testing Desktop based application VehicleSpy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Generated Python Django Forms Crispy forms to record data login and signup of online users Part of team implementing REST APIs in Python using microframework like Django with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Developed dynamic web pages to view the reports generated using Django Framework and also worked in NoSQL database MongoDB Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Designing mobile search application system requirements and coded backend and frontend in Python Associated on CSS Bootstrap to develop web applications BuildSQL NOSQLqueries implementing functions packages views triggers and tables Worked on Python OpenStack APIs and used NumPy for Numerical analysis Working along with AutomationTeam to automate scripts using java scripting language Familiarity with Selenium AutomationFramework Implemented Model View Control architecture in developing web applications using Django frame work Participated in daily scrum to implement Agile scrum methodology helping the team maintain focus on the business objective with constant assessment and feedback Managed code versioning with Github and deployment to staging and production servers Environment Python Django 13 HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Python Developer Verizon Wireless Tampa FL July 2010 to June 2011 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Master of Science Columbia University New York NY Skills JAVASCRIPT 6 years jQuery 6 years LINUX 5 years BOOTSTRAP 5 years MYSQL 5 years Additional Information TECHNICAL SKILLS Programming languages C C JAVA J2EE Web Technologies HTML5 CSS3 JavaScript JQuery proficient JSON JSP PHP5 JSTL Bootstrap GRUNT Mobile JQuery Mobile Android Phone Gap Databases MS SQL MS Access Oracle SQLite Operating Systems Windows Linux Mac Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Workbench Adobe Dreamweaver MS Office Virtual Box MS SQL Server SDLC Methodologies Agile SCRUM Frame Works Angularjs Backbonejs Ext JS Nodejs Express JS Reactjs D3js Testing Junit Jira JasmineKarma Jenkins Mocha Protractor Jest Browsers IE9 Mozilla Fire Fox Opera mobile Browser Chrome Safari",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Citigroup",
        "Inc",
        "New",
        "York",
        "NY",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Citigroup",
        "Inc",
        "New",
        "York",
        "NY",
        "December",
        "Present",
        "Responsibilities",
        "service",
        "Python",
        "Flask",
        "framework",
        "Django",
        "web",
        "apps",
        "Insurance",
        "premium",
        "calculations",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "NETC",
        "Flask",
        "Python",
        "Nodejs",
        "Angularjs",
        "emberjs",
        "Jquery",
        "Ajax",
        "HTMLCSSJS",
        "serverside",
        "application",
        "Expertise",
        "stack",
        "applications",
        "Python",
        "Django",
        "analysis",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "instrument",
        "pricing",
        "modelling",
        "methodologies",
        "collaboration",
        "engineers",
        "prices",
        "market",
        "data",
        "sources",
        "hands",
        "experience",
        "data",
        "warehouse",
        "developer",
        "database",
        "engineer",
        "highvolume",
        "data",
        "processing",
        "requirement",
        "gathering",
        "sessions",
        "capability",
        "planning",
        "data",
        "center",
        "Cassandra",
        "cluster",
        "Installed",
        "Configured",
        "multi",
        "Data",
        "center",
        "Cassandra",
        "clusters",
        "Oracle",
        "data",
        "model",
        "Cassandra",
        "data",
        "model",
        "data",
        "model",
        "endurance",
        "tests",
        "JMeter",
        "Cassandra",
        "Stress",
        "Tool",
        "OpsCenter",
        "support",
        "Linux",
        "servers",
        "workstations",
        "Department",
        "Physics",
        "Installing",
        "NIS",
        "servers",
        "Linux",
        "Apple",
        "Windows",
        "environments",
        "bash",
        "shell",
        "scripts",
        "setups",
        "jobs",
        "end",
        "UI",
        "HTML",
        "CSS",
        "JavaScript",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "Stack",
        "Developer",
        "custom",
        "Drupal",
        "build",
        "Responsibilities",
        "site",
        "maintenance",
        "feature",
        "development",
        "user",
        "support",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Integration",
        "test",
        "cases",
        "Django",
        "framework",
        "application",
        "development",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "Jquery",
        "Django",
        "reduction",
        "cost",
        "optimization",
        "supplier",
        "selection",
        "CRM",
        "Applications",
        "methods",
        "cross",
        "application",
        "use",
        "Class",
        "Builder",
        "Object",
        "programming",
        "API",
        "Reference",
        "guide",
        "application",
        "developers",
        "software",
        "applications",
        "data",
        "DDN",
        "S3",
        "Amazon",
        "S3",
        "API",
        "DDN",
        "OpenStack",
        "Swift",
        "API",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "TDD",
        "Test",
        "development",
        "methodology",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "data",
        "management",
        "system",
        "MySQL",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "project",
        "technologies",
        "JQuery",
        "Javascript",
        "manipulations",
        "bootstrap",
        "frontend",
        "html",
        "web",
        "application",
        "test",
        "programs",
        "engineering",
        "processes",
        "database",
        "applications",
        "programs",
        "Performed",
        "research",
        "platforms",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS3",
        "MySQL",
        "JavaScript",
        "Jquery",
        "wxPython",
        "numPY",
        "matPlotLib",
        "MySQL",
        "PyQT",
        "NET",
        "PyQuery",
        "MVW",
        "DOM",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "UNIX",
        "Windows",
        "PostgreSQL",
        "pythonlibraries",
        "sqlalchemy",
        "Python",
        "Developer",
        "United",
        "Health",
        "Group",
        "Austin",
        "TX",
        "January",
        "December",
        "Responsibilities",
        "Business",
        "requirements",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "MVC",
        "architecture",
        "web",
        "application",
        "Django",
        "framework",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "web",
        "services",
        "database",
        "calls",
        "inserts",
        "updates",
        "Developed",
        "Unit",
        "Integration",
        "Performance",
        "Test",
        "Cases",
        "Junit",
        "Selenium",
        "Rational",
        "Function",
        "Tester",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Python",
        "library",
        "BeautifulSoup",
        "webscrappingss",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "datasets",
        "Panda",
        "data",
        "frames",
        "SQL",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "package",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "JS",
        "browser",
        "applications",
        "MVC",
        "capability",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Environment",
        "Python",
        "Django",
        "mod",
        "python",
        "Angular",
        "JQuery",
        "JavaScript",
        "AJAX",
        "HTMLXHTML",
        "XML",
        "MsSQL",
        "server",
        "TSQL",
        "Jasper",
        "GIT",
        "Reports",
        "Linux",
        "Python",
        "Developer",
        "Atlanta",
        "GA",
        "July",
        "January",
        "Responsibilities",
        "requirement",
        "gathering",
        "level",
        "design",
        "HTMLCSS",
        "Javascript",
        "UI",
        "development",
        "Application",
        "Python",
        "MSQL",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Created",
        "Reports",
        "JASPER",
        "data",
        "access",
        "SQL",
        "procedures",
        "Performed",
        "UnitSystem",
        "test",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Thales",
        "encryption",
        "decryption",
        "ISO",
        "message",
        "Pythonprogramming",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "programming",
        "company",
        "product",
        "management",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "web",
        "application",
        "Environment",
        "Python",
        "Scipy",
        "Pandas",
        "BugZilla",
        "SVN",
        "C",
        "Java",
        "JQuery",
        "MS",
        "SQL",
        "Visual",
        "Basic",
        "Linux",
        "Eclipse",
        "Java",
        "Script",
        "XML",
        "JASPER",
        "PLSQL",
        "Oracle",
        "9i",
        "Shell",
        "Scripting",
        "HTML5CSS",
        "Apache",
        "Python",
        "Developer",
        "Bosch",
        "Atlanta",
        "GA",
        "July",
        "June",
        "Project",
        "Description",
        "Bosch",
        "precision",
        "components",
        "systems",
        "vehicle",
        "manufacturers",
        "systems",
        "components",
        "gasoline",
        "diesel",
        "injection",
        "airbag",
        "components",
        "ABS",
        "braking",
        "systems",
        "telematics",
        "motors",
        "equipment",
        "development",
        "Warranty",
        "tracking",
        "system",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "packages",
        "Beautifulsoup",
        "data",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQLAlchemy",
        "companys",
        "framework",
        "Python",
        "framework",
        "basement",
        "services",
        "development",
        "Framework",
        "CherryPy",
        "GnuPg",
        "encryption",
        "reGnuPg",
        "module",
        "top",
        "reports",
        "application",
        "Tableau",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "Design",
        "environment",
        "Mongodb",
        "shards",
        "DevTest",
        "Production",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "CherryPy",
        "Postgres",
        "Redis",
        "Bootstrap",
        "Jquery",
        "Mongo",
        "Fabric",
        "Git",
        "Tenjin",
        "Selenium",
        "Sphinx",
        "Nose",
        "Modifying",
        "data",
        "SASBASE",
        "SAS",
        "MACROS",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "Performed",
        "QA",
        "testing",
        "application",
        "approaches",
        "NLP",
        "pipeline",
        "custom",
        "VB",
        "scripts",
        "applications",
        "NLP",
        "File",
        "Prep",
        "SettlementPrepare",
        "review",
        "Settlement",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "processing",
        "Django",
        "framework",
        "application",
        "development",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Setup",
        "cron",
        "jobs",
        "data",
        "database",
        "graphs",
        "bar",
        "charts",
        "charts",
        "wiki",
        "database",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "vendors",
        "queries",
        "Perforce",
        "version",
        "control",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Python",
        "Developer",
        "Lifelock",
        "Mountain",
        "View",
        "CA",
        "July",
        "June",
        "Responsibilities",
        "business",
        "community",
        "business",
        "requirements",
        "solutions",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Automation",
        "Framework",
        "customizedfor",
        "Desktop",
        "application",
        "VehicleSpy",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "Python",
        "Django",
        "Forms",
        "Crispy",
        "forms",
        "data",
        "login",
        "users",
        "Part",
        "team",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Django",
        "SQLAlchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "web",
        "pages",
        "reports",
        "Django",
        "Framework",
        "NoSQL",
        "database",
        "MongoDB",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Designing",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "Associated",
        "CSS",
        "Bootstrap",
        "web",
        "applications",
        "BuildSQL",
        "NOSQLqueries",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "AutomationTeam",
        "scripts",
        "scripting",
        "language",
        "Familiarity",
        "Selenium",
        "AutomationFramework",
        "Model",
        "View",
        "Control",
        "architecture",
        "web",
        "applications",
        "Django",
        "frame",
        "work",
        "scrum",
        "scrum",
        "methodology",
        "team",
        "focus",
        "business",
        "objective",
        "assessment",
        "Managed",
        "code",
        "Github",
        "deployment",
        "staging",
        "production",
        "servers",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "JavaScript",
        "JQuery",
        "CSS",
        "AJAX",
        "Angular",
        "JS",
        "MySQL",
        "PostgreSQL",
        "Linux",
        "Python",
        "Developer",
        "Verizon",
        "Wireless",
        "Tampa",
        "FL",
        "July",
        "June",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "package",
        "information",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Python",
        "wxPython",
        "numPY",
        "Twisted",
        "matPlotLib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "PHP",
        "page",
        "data",
        "AJAX",
        "data",
        "page",
        "data",
        "csv",
        "Microsoft",
        "Excel",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Install",
        "setup",
        "Cisco",
        "TCPIP",
        "intranetwork",
        "access",
        "point",
        "network",
        "area",
        "network",
        "WiFi",
        "hardware",
        "installation",
        "patch",
        "panels",
        "fiber",
        "optic",
        "connectivity",
        "hubs",
        "cat5",
        "RJ45",
        "connectors",
        "internet",
        "security",
        "acceleration",
        "network",
        "Microsofts",
        "ISA",
        "server",
        "phpunit",
        "test",
        "cases",
        "DataLayer",
        "Searchserver",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "Numpy",
        "matPlotLib",
        "Usage",
        "advance",
        "features",
        "pickleunpickle",
        "python",
        "information",
        "applications",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Data",
        "tables",
        "PyQtto",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "Administration",
        "RHEL",
        "machine",
        "Apache",
        "configuration",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "scripts",
        "CloudFormation",
        "installation",
        "Autoscaling",
        "EC2",
        "VPC",
        "services",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "party",
        "JQuery",
        "plugins",
        "JQueryUI",
        "Datatables",
        "JavaScript",
        "Form",
        "Submit",
        "UI",
        "elements",
        "development",
        "Utilize",
        "knowledge",
        "experience",
        "LAMP",
        "leadingedge",
        "products",
        "technology",
        "conjunction",
        "industry",
        "business",
        "skills",
        "solutions",
        "customer",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "REST",
        "UI",
        "testing",
        "web",
        "service",
        "server",
        "side",
        "changes",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "REST",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "EC2",
        "S3",
        "RDS",
        "Education",
        "Master",
        "Science",
        "Columbia",
        "University",
        "New",
        "York",
        "NY",
        "Skills",
        "JAVASCRIPT",
        "years",
        "jQuery",
        "years",
        "LINUX",
        "years",
        "BOOTSTRAP",
        "years",
        "MYSQL",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "C",
        "C",
        "J2EE",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "JSP",
        "PHP5",
        "JSTL",
        "Bootstrap",
        "GRUNT",
        "Mobile",
        "JQuery",
        "Mobile",
        "Android",
        "Phone",
        "Gap",
        "Databases",
        "MS",
        "SQL",
        "MS",
        "Access",
        "Oracle",
        "SQLite",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "Mac",
        "Application",
        "Tools",
        "Net",
        "Beans",
        "Eclipse",
        "SE",
        "EE",
        "Android",
        "Visual",
        "Studio",
        "MySQL",
        "Workbench",
        "Adobe",
        "Dreamweaver",
        "MS",
        "Office",
        "Virtual",
        "Box",
        "MS",
        "SQL",
        "Server",
        "SDLC",
        "Methodologies",
        "Agile",
        "SCRUM",
        "Frame",
        "Angularjs",
        "Backbonejs",
        "Ext",
        "JS",
        "Nodejs",
        "Express",
        "JS",
        "Reactjs",
        "D3js",
        "Testing",
        "Junit",
        "Jira",
        "JasmineKarma",
        "Jenkins",
        "Mocha",
        "Protractor",
        "Jest",
        "Browsers",
        "IE9",
        "Mozilla",
        "Fire",
        "Fox",
        "Opera",
        "mobile",
        "Browser",
        "Chrome",
        "Safari"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:09:52.470622",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Citigroup Inc New York NY Authorized to work in the US for any employer Work Experience Sr Python Developer Citigroup Inc New York NY December 2015 to Present Responsibilities Involved in Developing a Restful service using Python Flask framework Made Django web based apps for Insurance premium calculations Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Experienced in web applications development using Django Python NETC Flask Python and Nodejs Angularjs emberjs Jquery Ajax while using HTMLCSSJS for serverside rendered application Expertise in developing webbased open stack applications using Python and Django for large dataset analysis Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Reviewed and implemented instrument pricing and modelling methodologies in collaboration with technical engineers Analyzed and documented how instrument prices move as underlying market data sources change Good hands on experience in data warehouse developer database engineer for highvolume data processing Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Installed Configured administered and monitored multi Data center Cassandra clusters Involved in upgrading the present Oracle data model to Cassandra data model Evaluated and tuned data model by running endurance tests using JMeter Cassandra Stress Tool and OpsCenter Providing support for Linux servers and workstations in Department of Physics Installing and configuring NIS servers to authenticate between Linux Apple and Windows environments Writing bash shell scripts on local setups to automate jobs Designed front end using UI HTML CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Full Stack Developer for custom Drupal 7 build Responsibilities included site maintenance new feature development and user support Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Used Django framework for application development Developed user interface using CSS HTML JavaScript and Jquery and Django Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Also used methods for cross application use using the Class Builder and Object Oriented programming Generated an API Reference guide to help application developers for creating the software applications to store data using DDN S3 compatible with Amazon S3 API or DDN OpenStack Swift API calls Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used TDD Test driven development methodology Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for Javascript manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Coded test programs and evaluated existing engineering processes Designed and configured database and backend applications and programs Performed research to explore and identify new technological platforms Environment Python Django HTML5 CSS3 MySQL JavaScript Jquery wxPython numPY matPlotLib MySQL PyQT NET PyQuery MVW DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL and pythonlibraries such as Numpy sqlalchemy etc Python Developer United Health Group Austin TX January 2015 to December 2015 Responsibilities Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented MVC architecture in developing the web application by Django framework Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Fetched twitter feeds for certain important keyword using pythontwitter library Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQLdb package Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Environment Python Django mod python Angular JQuery JavaScript AJAX HTMLXHTML XML MsSQL server TSQL Jasper GIT Reports RESTful Linux Python Developer Atlanta GA July 2013 to January 2015 Responsibilities Worked on requirement gathering and High level design Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Performed UnitSystem test Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Pythonprogramming Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 2627 Scipy Pandas BugZilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML5CSS Apache Python Developer Bosch Designs Atlanta GA July 2012 to June 2013 Project Description Bosch designs and produces precision automotive components and systems sold to vehicle and powertrain manufacturers worldwide These include systems and components for gasoline and diesel injection airbag components ABS and conventional braking systems telematics as well as small motors electrical and electronic equipment Worked on development of Warranty and defects tracking system Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Environment Python Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer Lifelock Mountain View CA July 2011 to June 2012 Responsibilities Associated with the business community to define business requirements and analyze the possible technical solutions Extensively used UML for designing to develop various use cases class diagrams and sequence diagrams Developed entire frontend and backend modules using Python on Django Web Framework Built all database mapping classes using Django models Develop and maintain Automation Framework customizedfor testing Desktop based application VehicleSpy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Generated Python Django Forms Crispy forms to record data login and signup of online users Part of team implementing REST APIs in Python using microframework like Django with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Developed dynamic web pages to view the reports generated using Django Framework and also worked in NoSQL database MongoDB Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Designing mobile search application system requirements and coded backend and frontend in Python Associated on CSS Bootstrap to develop web applications BuildSQL NOSQLqueries implementing functions packages views triggers and tables Worked on Python OpenStack APIs and used NumPy for Numerical analysis Working along with AutomationTeam to automate scripts using java scripting language Familiarity with Selenium AutomationFramework Implemented Model View Control architecture in developing web applications using Django frame work Participated in daily scrum to implement Agile scrum methodology helping the team maintain focus on the business objective with constant assessment and feedback Managed code versioning with Github and deployment to staging and production servers Environment Python Django 13 HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Python Developer Verizon Wireless Tampa FL July 2010 to June 2011 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Master of Science Columbia University New York NY Skills JAVASCRIPT 6 years jQuery 6 years LINUX 5 years BOOTSTRAP 5 years MYSQL 5 years Additional Information TECHNICAL SKILLS Programming languages C C JAVA J2EE Web Technologies HTML5 CSS3 JavaScript JQuery proficient JSON JSP PHP5 JSTL Bootstrap GRUNT Mobile JQuery Mobile Android Phone Gap Databases MS SQL MS Access Oracle SQLite Operating Systems Windows Linux Mac Application Tools Net Beans Eclipse SE EE Android Visual Studio MySQL Workbench Adobe Dreamweaver MS Office Virtual Box MS SQL Server SDLC Methodologies Agile SCRUM Frame Works Angularjs Backbonejs Ext JS Nodejs Express JS Reactjs D3js Testing Junit Jira JasmineKarma Jenkins Mocha Protractor Jest Browsers IE9 Mozilla Fire Fox Opera mobile Browser Chrome Safari",
    "unique_id": "9dc2d0e5-e565-4a30-b93f-474c528f90e5"
}