{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Citibank Irving TX Around 7 years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications in Python Experience in objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python Django Flask Java XML CSS3 HTML5 JavaScript and jQuery Proficient in Front end development using HTML XML0020CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of Web Services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Python modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLTMQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Citibank Irving TX June 2018 to Present Description Citibank is the consumer division of financial services multinational Citigroup Citibank was founded in 1812 as the City Bank of New York and later became First National City Bank of New York Citibank provides credit cards mortgages personal loans commercial loans and lines of credit Responsibilities Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Develop Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverable within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Worked on Nodejs Middleware framework like Expressjs and Hapijs and Yeoman essentially developed microservices and serve them through middleware Served any Client side libraries through microservice Worked on NPM packages and published them to nexus repositories Developed Gulp grunt task runner or application and involved in to write Unit test cases Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Environment Python Django Go language Shell Scripting AWS Pandas PyQt JavaScript DOJO HTML CSS XML XSLT AJAX JSP JSON Jquery Angularjs Backbonejs Bootstrap Nodejs Reactjs ES6 TypeScript Polymerjs Docker kubernetes Npm Gulp Grunt Bower Core Java UNIX Linux Sybase JDBC Oracle SQL MySql MsSql Toad CRUD Eclipse REST Apache CXF Clear Case Tomcat JUnit JIRA Maven iText Weblogic SVN UML Agile Python Developer Google Mountain View CA July 2017 to May 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Fiserv Dallas TX May 2016 to June 2017 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using python to create Planning and Tracking functions Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Seaton India IT Pvt Ltd September 2014 to December 2015 Responsibilities Full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies and WAMP Windows Apache MYSQL Python Architecture Used Django framework in developing web applications to implement the Model View Control architecture Written Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and developed the presentation layer using HTML CSS JavaScript jQuery and AJAX Performed efficient code delivery based on Test Driven Development TDD principles and continuous integration to keep in line with Agile Software Methodology principles Created an entire application using Python Django MySQL and Linux Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Deployed the application in User Acceptance Testing UAT and Production Websphere environment Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Actively worked as a team member with managers and other staff to meet the goals of the project in the stipulated time Extensively used Python modules such as requests urllib1 urllib2 for web crawling Used Pandas library for statistics Analysis NumPy for Numerical analysis Handled potential points of failure through error handling and communication of failure Developed the required XML Schema documents and implemented the framework for parsing XML documents Managed large datasets using Panda data frames and MySQL and implemented configuration changes for data models Environment Python 27 Django 1415 FLASK Web2py MySQL MAC OS X Linux HTML CSS jQuery AJAX JavaScript GIT SVN Apache Python Developer Yellow Adworks India Pvt ltd June 2012 to August 2014 Responsibilities Worked with the Stakeholders gathered requirements developed high level design documents Have used Python libraries like NumPySciPy Pandas for market analysis and done some machine learning using Python Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Used Django framework in developing web applications to implement the model view control architecture MVC Refactored and extended large existing Django Python code base reducing the number of lines in code and duplication significantly Wrote Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with working on software changes based on the natural call flow with the customer instead of letting the system dictate the call flow Query Optimization through MYSQL server tools for quick response time and using Golang Experience with automation of linear call flows instead of static so the agents have access to an adaptive user interface Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Wrote Python scripts to parse JSON documents and load the data in database and also used python scripts to update content in the database and manipulate files Responsible to set up REST API framework using Django Flask Developed designed managed dashboard control panel for customers and Administrators using Django Oracle DB Splunk Hadoop Apache Hive PostgreSQL API calls Performed some operations visualization on Oracle DB using libraries like Ox oracle MatPlotlib Pandas Continuous Integration and Continuous Development CICD was taken care to Build backend application with Python Django Worked on Dockers Celery and Jenkins Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Used Python based GUI components for the frontend functionality such as selection criteria and developed a GUI for a Java script product Developed the required XML Schema documents and implemented the framework for parsing XML documents Environment Python 27 NumPy SciPy Scikit PySpark Dockers Pandas C JSON Oracle DB MySQL DB2 PLSQL NoSQLSplunk Hadoop Apache Hive Redis Service now SIEM systems Palo Alto Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14 Education Masters Skills DJANGO DOCKER Git JAVASCRIPT PERL PHP PYTHON Ruby SCRIPTING MICROSOFT SQL SERVER SQL SERVER MYSQL ORACLE PLSQL SQL CSS SHAREPOINT LINUX SHELL SCRIPTING ANDROID",
    "entities": [
        "Python Flask",
        "Wrote Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Django Oracle DB Splunk Hadoop",
        "Test Driven Development TDD",
        "GUI",
        "Celery Developed",
        "SIEM",
        "First National City Bank of New York Citibank",
        "AIX",
        "UNIX",
        "Agile Software Methodology",
        "webapp2",
        "MatPlotlib Pandas Continuous Integration",
        "Python Django Worked on Dockers Celery",
        "Interfacing",
        "Working",
        "Software Development Lifecycle SDLC Experienced",
        "Palo Alto Linux",
        "HTML XML0020CSS jQuery JSON",
        "Panda",
        "Design Development and Deployment Testing and Implementation",
        "jQuery Proficient",
        "XML",
        "SOAP",
        "MAC",
        "Shell",
        "TX",
        "Responsible for Design",
        "Python",
        "Jquery Develop",
        "Amazon AWS S3",
        "Developed",
        "Middleware",
        "Dallas",
        "Shell Scripting AWS",
        "Developed Business Logic",
        "Citigroup Citibank",
        "Windows",
        "Git",
        "Client",
        "Restful",
        "Django Websites Created",
        "AJAX Managed",
        "Used Query and Ajax",
        "jQuery Developed",
        "Linux",
        "Created Data",
        "urllib1",
        "the City Bank of New York",
        "DOM JSON PHP HTML5",
        "VMWare API",
        "HTML CSS JavaScript XML",
        "DOM",
        "RDS",
        "Views",
        "flow Query Optimization",
        "PyQt",
        "MVC",
        "linear",
        "API",
        "HTML CSS JavaScript",
        "HTML CSS JavaScript JSON Bootstrap Experienced",
        "MICROSOFT",
        "User Acceptance Testing UAT",
        "Created",
        "AWS",
        "WAMP Windows Apache",
        "Oracle",
        "Python Flask framework Environment Python Django Shell Scripting AWS",
        "Oracle DB",
        "Present Description Citibank",
        "Continuous Development CICD",
        "SQL",
        "GitHub",
        "Fiddler",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "Pandas PyQt PyQuery",
        "Administrators",
        "FLASK",
        "SQL Python",
        "Wireshark",
        "Model View Control",
        "MVW",
        "Utilized Python",
        "Bash Managed",
        "Pandas",
        "ETL",
        "Agile Software Development",
        "cat5",
        "Nodejs Knowledge",
        "Build",
        "Performed",
        "Node JS Express",
        "unittest2",
        "XSLTMQ",
        "Cisco",
        "JavaScript",
        "Web Development Python",
        "UI",
        "Front",
        "OOAD",
        "Data Layer and Search",
        "JavaScript manipulations Involved",
        "HTML CSS JavaScript jQuery",
        "Microsoft",
        "WebApplication",
        "Created Business Logic",
        "ISA",
        "SQL Queries Stored",
        "Nodejs and Projects UI Designing Team Developing",
        "REST",
        "MySQL Created",
        "Analysis Design Development Management and Implementation",
        "PHP",
        "AJAX Performed",
        "PyTest",
        "Python Created",
        "Developed GUI",
        "DHCP"
    ],
    "experience": "Experience in objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python Django Flask Java XML CSS3 HTML5 JavaScript and jQuery Proficient in Front end development using HTML XML0020CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of Web Services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Python modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLTMQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Citibank Irving TX June 2018 to Present Description Citibank is the consumer division of financial services multinational Citigroup Citibank was founded in 1812 as the City Bank of New York and later became First National City Bank of New York Citibank provides credit cards mortgages personal loans commercial loans and lines of credit Responsibilities Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Develop Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverable within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Worked on Nodejs Middleware framework like Expressjs and Hapijs and Yeoman essentially developed microservices and serve them through middleware Served any Client side libraries through microservice Worked on NPM packages and published them to nexus repositories Developed Gulp grunt task runner or application and involved in to write Unit test cases Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Environment Python Django Go language Shell Scripting AWS Pandas PyQt JavaScript DOJO HTML CSS XML XSLT AJAX JSP JSON Jquery Angularjs Backbonejs Bootstrap Nodejs Reactjs ES6 TypeScript Polymerjs Docker kubernetes Npm Gulp Grunt Bower Core Java UNIX Linux Sybase JDBC Oracle SQL MySql MsSql Toad CRUD Eclipse REST Apache CXF Clear Case Tomcat JUnit JIRA Maven iText Weblogic SVN UML Agile Python Developer Google Mountain View CA July 2017 to May 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Fiserv Dallas TX May 2016 to June 2017 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using python to create Planning and Tracking functions Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Seaton India IT Pvt Ltd September 2014 to December 2015 Responsibilities Full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies and WAMP Windows Apache MYSQL Python Architecture Used Django framework in developing web applications to implement the Model View Control architecture Written Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and developed the presentation layer using HTML CSS JavaScript jQuery and AJAX Performed efficient code delivery based on Test Driven Development TDD principles and continuous integration to keep in line with Agile Software Methodology principles Created an entire application using Python Django MySQL and Linux Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Deployed the application in User Acceptance Testing UAT and Production Websphere environment Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Actively worked as a team member with managers and other staff to meet the goals of the project in the stipulated time Extensively used Python modules such as requests urllib1 urllib2 for web crawling Used Pandas library for statistics Analysis NumPy for Numerical analysis Handled potential points of failure through error handling and communication of failure Developed the required XML Schema documents and implemented the framework for parsing XML documents Managed large datasets using Panda data frames and MySQL and implemented configuration changes for data models Environment Python 27 Django 1415 FLASK Web2py MySQL MAC OS X Linux HTML CSS jQuery AJAX JavaScript GIT SVN Apache Python Developer Yellow Adworks India Pvt ltd June 2012 to August 2014 Responsibilities Worked with the Stakeholders gathered requirements developed high level design documents Have used Python libraries like NumPySciPy Pandas for market analysis and done some machine learning using Python Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Used Django framework in developing web applications to implement the model view control architecture MVC Refactored and extended large existing Django Python code base reducing the number of lines in code and duplication significantly Wrote Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with working on software changes based on the natural call flow with the customer instead of letting the system dictate the call flow Query Optimization through MYSQL server tools for quick response time and using Golang Experience with automation of linear call flows instead of static so the agents have access to an adaptive user interface Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Wrote Python scripts to parse JSON documents and load the data in database and also used python scripts to update content in the database and manipulate files Responsible to set up REST API framework using Django Flask Developed designed managed dashboard control panel for customers and Administrators using Django Oracle DB Splunk Hadoop Apache Hive PostgreSQL API calls Performed some operations visualization on Oracle DB using libraries like Ox oracle MatPlotlib Pandas Continuous Integration and Continuous Development CICD was taken care to Build backend application with Python Django Worked on Dockers Celery and Jenkins Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Used Python based GUI components for the frontend functionality such as selection criteria and developed a GUI for a Java script product Developed the required XML Schema documents and implemented the framework for parsing XML documents Environment Python 27 NumPy SciPy Scikit PySpark Dockers Pandas C JSON Oracle DB MySQL DB2 PLSQL NoSQLSplunk Hadoop Apache Hive Redis Service now SIEM systems Palo Alto Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14 Education Masters Skills DJANGO DOCKER Git JAVASCRIPT PERL PHP PYTHON Ruby SCRIPTING MICROSOFT SQL SERVER SQL SERVER MYSQL ORACLE PLSQL SQL CSS SHAREPOINT LINUX SHELL SCRIPTING ANDROID",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Citibank",
        "Irving",
        "TX",
        "years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Management",
        "Implementation",
        "enterprise",
        "applications",
        "Python",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "java",
        "C",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Java",
        "XML",
        "CSS3",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Proficient",
        "Front",
        "end",
        "development",
        "HTML",
        "XML0020CSS",
        "jQuery",
        "JSON",
        "JavaScript",
        "Experience",
        "Web",
        "Development",
        "Python",
        "Django",
        "framework",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "knowledge",
        "Web",
        "Services",
        "protocols",
        "SOAP",
        "REST",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "JIRA",
        "JENKIN",
        "Experience",
        "web",
        "applications",
        "MVC",
        "architecture",
        "Django",
        "framework",
        "SQLAlchemy",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "Python",
        "modules",
        "NumPy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "command",
        "JavaScript",
        "Frameworks",
        "Team",
        "Angularjs",
        "Reactjs",
        "bootstrapjs",
        "Nodejs",
        "Projects",
        "UI",
        "Designing",
        "Team",
        "availability",
        "time",
        "system",
        "financialBanking",
        "transactions",
        "components",
        "Linux",
        "UNIX",
        "AIX",
        "platforms",
        "Tools",
        "C",
        "STL",
        "BOOST",
        "XML",
        "XPath",
        "XSLTMQ",
        "libraries",
        "Perl",
        "Python",
        "Web",
        "application",
        "development",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "Bootstrap",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "APIs",
        "queues",
        "RabbitMQ",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "jQuery",
        "Nodejs",
        "Knowledge",
        "Model",
        "View",
        "Controller",
        "MVC",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "jQuery",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "Node",
        "JS",
        "Express",
        "JS",
        "Server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "Angular",
        "Experience",
        "systems",
        "Celery",
        "RabbitMQ",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "documentation",
        "solutions",
        "IT",
        "infrastructure",
        "sales",
        "systems",
        "Windows",
        "Linux",
        "server",
        "enhancements",
        "system",
        "bugfixing",
        "tasks",
        "tasks",
        "help",
        "Celery",
        "Developed",
        "Python",
        "ETL",
        "scripts",
        "data",
        "web",
        "sites",
        "load",
        "data",
        "MySQL",
        "DB",
        "Experience",
        "Requests",
        "NumPy",
        "Matplotlib",
        "SciPy",
        "PySpark",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Experience",
        "knowledge",
        "AWS",
        "data",
        "lake",
        "storing",
        "data",
        "analytics",
        "spark",
        "data",
        "frames",
        "processing",
        "data",
        "files",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Citibank",
        "Irving",
        "TX",
        "June",
        "Present",
        "Description",
        "Citibank",
        "consumer",
        "division",
        "services",
        "Citigroup",
        "Citibank",
        "City",
        "Bank",
        "New",
        "York",
        "First",
        "National",
        "City",
        "Bank",
        "New",
        "York",
        "Citibank",
        "credit",
        "cards",
        "loans",
        "loans",
        "lines",
        "credit",
        "Responsibilities",
        "Use",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "Develop",
        "Sqoop",
        "scripts",
        "change",
        "data",
        "capture",
        "records",
        "data",
        "tables",
        "Manage",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angularjs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "WebApplication",
        "development",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "Jquery",
        "Develop",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Jquery",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "data",
        "party",
        "spending",
        "data",
        "format",
        "Excel",
        "macros",
        "python",
        "libraries",
        "NumPy",
        "SQLAlchemy",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "manipulation",
        "retrieval",
        "data",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "app",
        "Python",
        "PHP",
        "performance",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Nodejs",
        "Middleware",
        "framework",
        "Expressjs",
        "Hapijs",
        "Yeoman",
        "microservices",
        "middleware",
        "Client",
        "side",
        "microservice",
        "NPM",
        "packages",
        "nexus",
        "repositories",
        "Gulp",
        "grunt",
        "task",
        "runner",
        "application",
        "Unit",
        "test",
        "cases",
        "Apis",
        "Soap",
        "Apis",
        "Expressjs",
        "Hapijs",
        "Apis",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "Language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Environment",
        "Python",
        "Django",
        "Go",
        "language",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyQt",
        "JavaScript",
        "DOJO",
        "HTML",
        "CSS",
        "XML",
        "XSLT",
        "JSP",
        "JSON",
        "Jquery",
        "Angularjs",
        "Backbonejs",
        "Bootstrap",
        "Nodejs",
        "Reactjs",
        "ES6",
        "TypeScript",
        "Polymerjs",
        "Docker",
        "Npm",
        "Gulp",
        "Grunt",
        "Bower",
        "Core",
        "Java",
        "UNIX",
        "Linux",
        "Sybase",
        "JDBC",
        "Oracle",
        "SQL",
        "MySql",
        "MsSql",
        "Toad",
        "CRUD",
        "Eclipse",
        "REST",
        "Apache",
        "CXF",
        "Clear",
        "Case",
        "Tomcat",
        "JUnit",
        "JIRA",
        "Maven",
        "iText",
        "Weblogic",
        "SVN",
        "UML",
        "Agile",
        "Python",
        "Developer",
        "Google",
        "Mountain",
        "View",
        "CA",
        "July",
        "May",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Python",
        "NumPy",
        "matplotlib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Parsers",
        "Python",
        "data",
        "design",
        "database",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "setup",
        "Cisco",
        "TCPIP",
        "intranetwork",
        "access",
        "point",
        "network",
        "area",
        "network",
        "WiFi",
        "Hardware",
        "installation",
        "patch",
        "panels",
        "fiber",
        "optic",
        "connectivity",
        "hubs",
        "cat5",
        "RJ45",
        "connectors",
        "Setup",
        "Windows",
        "clients",
        "PC",
        "kiosks",
        "hospital",
        "Windows",
        "XP",
        "workstations",
        "software",
        "configuration",
        "TCPIP",
        "network",
        "interface",
        "cards",
        "internet",
        "security",
        "acceleration",
        "network",
        "Microsoft",
        "ISA",
        "server",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "XML",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "NumPy",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "party",
        "jQuerybased",
        "plugins",
        "Data",
        "tables",
        "JavaScript",
        "Form",
        "Submit",
        "UI",
        "elements",
        "development",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "jQuery",
        "JavaScript",
        "PyCharm",
        "Python",
        "Developer",
        "Fiserv",
        "Dallas",
        "TX",
        "May",
        "June",
        "Responsibilities",
        "Django",
        "Database",
        "APIs",
        "database",
        "Query",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "order",
        "web",
        "python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Created",
        "Business",
        "Logic",
        "python",
        "Planning",
        "Tracking",
        "functions",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "python",
        "Django",
        "Web",
        "Framework",
        "companys",
        "platform",
        "DCAE",
        "python",
        "components",
        "Python",
        "libraries",
        "Click",
        "Pandas",
        "Matplotlib",
        "analysis",
        "manipulation",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "files",
        "data",
        "Consul",
        "Python",
        "IDE",
        "Pycharm",
        "code",
        "unit",
        "test",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Responsible",
        "Design",
        "maintenance",
        "databases",
        "Python",
        "Developed",
        "Python",
        "APIs",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "IDEA",
        "Development",
        "systems",
        "Python",
        "Created",
        "data",
        "access",
        "modules",
        "python",
        "Designed",
        "solutions",
        "Git",
        "GitHub",
        "microservice",
        "deployment",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wireshark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Seaton",
        "India",
        "IT",
        "Pvt",
        "Ltd",
        "September",
        "December",
        "Responsibilities",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "Architecture",
        "Django",
        "framework",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Written",
        "Subqueries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "code",
        "delivery",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "principles",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "MongoDB",
        "environment",
        "availability",
        "performance",
        "scalability",
        "perspectives",
        "application",
        "User",
        "Acceptance",
        "Testing",
        "UAT",
        "Production",
        "Websphere",
        "environment",
        "jQuery",
        "JavaScript",
        "manipulations",
        "service",
        "Python",
        "Flask",
        "framework",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "team",
        "member",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "NumPy",
        "analysis",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "configuration",
        "changes",
        "data",
        "models",
        "Environment",
        "Python",
        "Django",
        "FLASK",
        "Web2py",
        "MySQL",
        "MAC",
        "OS",
        "X",
        "Linux",
        "HTML",
        "CSS",
        "jQuery",
        "AJAX",
        "JavaScript",
        "GIT",
        "SVN",
        "Apache",
        "Python",
        "Developer",
        "Yellow",
        "Adworks",
        "India",
        "Pvt",
        "ltd",
        "June",
        "August",
        "Responsibilities",
        "Stakeholders",
        "requirements",
        "level",
        "design",
        "documents",
        "Python",
        "libraries",
        "NumPySciPy",
        "Pandas",
        "market",
        "analysis",
        "machine",
        "Python",
        "logs",
        "Python",
        "libraries",
        "occurrence",
        "event",
        "Python",
        "libraries",
        "Django",
        "framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "MVC",
        "Refactored",
        "Django",
        "Python",
        "code",
        "base",
        "number",
        "lines",
        "code",
        "duplication",
        "Wrote",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "software",
        "changes",
        "call",
        "flow",
        "customer",
        "system",
        "call",
        "flow",
        "Query",
        "Optimization",
        "MYSQL",
        "server",
        "tools",
        "response",
        "time",
        "Golang",
        "Experience",
        "automation",
        "call",
        "static",
        "agents",
        "access",
        "user",
        "interface",
        "Developed",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Wrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "REST",
        "API",
        "framework",
        "Django",
        "Flask",
        "Developed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "Splunk",
        "Hadoop",
        "Apache",
        "Hive",
        "PostgreSQL",
        "API",
        "operations",
        "visualization",
        "Oracle",
        "DB",
        "libraries",
        "Ox",
        "oracle",
        "MatPlotlib",
        "Pandas",
        "Continuous",
        "Integration",
        "Continuous",
        "Development",
        "CICD",
        "care",
        "application",
        "Python",
        "Django",
        "Dockers",
        "Celery",
        "Jenkins",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "GUI",
        "Java",
        "script",
        "product",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Environment",
        "Python",
        "NumPy",
        "SciPy",
        "Scikit",
        "PySpark",
        "Dockers",
        "Pandas",
        "C",
        "JSON",
        "Oracle",
        "DB",
        "MySQL",
        "DB2",
        "PLSQL",
        "Hadoop",
        "Apache",
        "Hive",
        "Redis",
        "Service",
        "SIEM",
        "systems",
        "Palo",
        "Alto",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Education",
        "Masters",
        "Skills",
        "DJANGO",
        "DOCKER",
        "Git",
        "JAVASCRIPT",
        "PERL",
        "PHP",
        "PYTHON",
        "Ruby",
        "SCRIPTING",
        "MICROSOFT",
        "SQL",
        "SERVER",
        "SQL",
        "SERVER",
        "MYSQL",
        "ORACLE",
        "PLSQL",
        "SQL",
        "CSS",
        "SHAREPOINT",
        "LINUX",
        "SHELL",
        "SCRIPTING",
        "ANDROID"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:13:52.136317",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Citibank Irving TX Around 7 years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications in Python Experience in objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python Django Flask Java XML CSS3 HTML5 JavaScript and jQuery Proficient in Front end development using HTML XML0020CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of Web Services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Python modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLTMQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Citibank Irving TX June 2018 to Present Description Citibank is the consumer division of financial services multinational Citigroup Citibank was founded in 1812 as the City Bank of New York and later became First National City Bank of New York Citibank provides credit cards mortgages personal loans commercial loans and lines of credit Responsibilities Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Develop Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverable within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Worked on Nodejs Middleware framework like Expressjs and Hapijs and Yeoman essentially developed microservices and serve them through middleware Served any Client side libraries through microservice Worked on NPM packages and published them to nexus repositories Developed Gulp grunt task runner or application and involved in to write Unit test cases Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Environment Python Django Go language Shell Scripting AWS Pandas PyQt JavaScript DOJO HTML CSS XML XSLT AJAX JSP JSON Jquery Angularjs Backbonejs Bootstrap Nodejs Reactjs ES6 TypeScript Polymerjs Docker kubernetes Npm Gulp Grunt Bower Core Java UNIX Linux Sybase JDBC Oracle SQL MySql MsSql Toad CRUD Eclipse REST Apache CXF Clear Case Tomcat JUnit JIRA Maven iText Weblogic SVN UML Agile Python Developer Google Mountain View CA July 2017 to May 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Fiserv Dallas TX May 2016 to June 2017 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using python to create Planning and Tracking functions Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Seaton India IT Pvt Ltd September 2014 to December 2015 Responsibilities Full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies and WAMP Windows Apache MYSQL Python Architecture Used Django framework in developing web applications to implement the Model View Control architecture Written Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and developed the presentation layer using HTML CSS JavaScript jQuery and AJAX Performed efficient code delivery based on Test Driven Development TDD principles and continuous integration to keep in line with Agile Software Methodology principles Created an entire application using Python Django MySQL and Linux Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Deployed the application in User Acceptance Testing UAT and Production Websphere environment Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Actively worked as a team member with managers and other staff to meet the goals of the project in the stipulated time Extensively used Python modules such as requests urllib1 urllib2 for web crawling Used Pandas library for statistics Analysis NumPy for Numerical analysis Handled potential points of failure through error handling and communication of failure Developed the required XML Schema documents and implemented the framework for parsing XML documents Managed large datasets using Panda data frames and MySQL and implemented configuration changes for data models Environment Python 27 Django 1415 FLASK Web2py MySQL MAC OS X Linux HTML CSS jQuery AJAX JavaScript GIT SVN Apache Python Developer Yellow Adworks India Pvt ltd June 2012 to August 2014 Responsibilities Worked with the Stakeholders gathered requirements developed high level design documents Have used Python libraries like NumPySciPy Pandas for market analysis and done some machine learning using Python Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Used Django framework in developing web applications to implement the model view control architecture MVC Refactored and extended large existing Django Python code base reducing the number of lines in code and duplication significantly Wrote Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with working on software changes based on the natural call flow with the customer instead of letting the system dictate the call flow Query Optimization through MYSQL server tools for quick response time and using Golang Experience with automation of linear call flows instead of static so the agents have access to an adaptive user interface Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Wrote Python scripts to parse JSON documents and load the data in database and also used python scripts to update content in the database and manipulate files Responsible to set up REST API framework using Django Flask Developed designed managed dashboard control panel for customers and Administrators using Django Oracle DB Splunk Hadoop Apache Hive PostgreSQL API calls Performed some operations visualization on Oracle DB using libraries like Ox oracle MatPlotlib Pandas Continuous Integration and Continuous Development CICD was taken care to Build backend application with Python Django Worked on Dockers Celery and Jenkins Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Used Python based GUI components for the frontend functionality such as selection criteria and developed a GUI for a Java script product Developed the required XML Schema documents and implemented the framework for parsing XML documents Environment Python 27 NumPy SciPy Scikit PySpark Dockers Pandas C JSON Oracle DB MySQL DB2 PLSQL NoSQLSplunk Hadoop Apache Hive Redis Service now SIEM systems Palo Alto Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14 Education Masters Skills DJANGO DOCKER Git JAVASCRIPT PERL PHP PYTHON Ruby SCRIPTING MICROSOFT SQL SERVER SQL SERVER MYSQL ORACLE PLSQL SQL CSS SHAREPOINT LINUX SHELL SCRIPTING ANDROID",
    "unique_id": "f143c0d1-ae02-404a-aacb-255a3bd6c45c"
}