{
    "clean_data": "Senior Python DeveloperArchitect Senior span lPythonspan span lDeveloperspanArchitect Senior Python DeveloperArchitect Bank of AmericaMerrill Lynch Masters in Computer Engineering with 10 yrs software development experience in professional environments High potential skills in developmentdeployment of DesktopWeb applications using Python SQL Shell Scripting HTML JavaScript targeted for all three major platforms Windows OS X Linux or the Cloud Shell Scripting deployment using continuous integration and automation tools like Jenkins and Ansible is a consistent theme across a majority of my projects Handson experience with FinancialInsurance software GUI development version controlling CPUGPU architectures profiling and debugging in a testdriven environment coding style is less is more Proven abilities in math problemsolving documentation algorithm design and creativeanalytical thinking Working style is extreme passion reasonable and accountable Can work independently or in a team Authorized to work in the US for any employer Work Experience Senior Python DeveloperArchitect Bank of AmericaMerrill Lynch Jersey City NJ July 2017 to Present I am back at BAML for the second time This time an interesting challenge was posed at me to automate the User Interface UI testing So I built a brandnew framework Talos Talos is a UI Automation Testing framework geared towards automating several test scenarios simultaneously for either webbased or desktop apps I built it from scratch in roughly three months This framework saves you a ton of time it was an instant hit at BAML Created a Python UI Automation Testing framework based on an underlying Jython API SikuliX The framework offers 1 A fullfledged UI automation 2 An extremely configurable YAML based scenario builder and 3 The muchcoveted ability to dynamically handle any UI errorsexceptions Integrated Googles Tesseract OCR engine with highly customizable image preprocessing techniques to read data right off the UI Also baked into the framework is a visual recorder that optionally records every single scenario that can be replayed later if testers want to see what went wrong on the UI Talos works seamlessly for both web browser based or Desktop based user interfaces Tools and Libraries Python Git iPython virtualenv PIL pytesseract Google Tesseract FFMPEG jnius SikuliX Senior Python DeveloperArchitect American International Group New York NY January 2017 to June 2017 AIG was working on transitioning from SASExcel to Python to create a webbased platform to host commercial models created by actuaries and used by Underwriters This shortterm project began with three basic models belonging to Auto Liability General Liability and Workers Compensation Starting from Pandas all the way up to koala2 many math calculations based on Python libraries dominated this ExcelTo Python transitional webapp Developed a novel library in Python to perform Excel calculations by using Pandas in tandem with the Generalized Linear Model approach a library called earlybird Test driven development is seriously considered as the methodology to ensure precision up to 10 decimal points of model results at every step Unit and integration tests are written in parallel to accomplish this Spearheaded the effort to migrate from Active State Python 2x to opensource Python 3x Used koala2 for evaluating Excel sheets in Python in order to crossverify the results from the backend service Xlwings library is used as well for automated Excel evaluation for integration testing this is paired with Pandas for fixture generation Shell Scripting and Jenkins pipeline are used for deployment and daytoday operations on CentOS virtual machines Senior Python DeveloperArchitect Tools and Libraries New York NY October 2015 to December 2016 Bloomberg LP has a very agile style of working The project is called KYC Know Your Customer Also known as Entity Exchange and Screening Everything there is proprietary Bloombergs version of Python Bloombergs version of Git Bloombergs version of service routing libraries etc So obviously the challenges were to get things working by operating within the Bloomberg ecosystem Here are a few highlights You will read the word Introduced a lot Might sound redundant but its all true Theres a bunch of data matching algorithms out there but the one I created was original and custom tailored to verify and match the entity information coming from multiple sources Introduced a brandnew SQL Alchemybased framework that integrates seamlessly into Bloomberg Application Service BAS layer The framework supports both ORM and nonORM approaches to SQL Very robust Introduced a welldefined and configurable framework for business logic and data validation on the service layer I called it the Sentinel This was used to prevent any bad data or improper requests from entering your service layer It was quite powerful Introduced a novel way to process the service requests it is called Action Processing It allows you to process service layer requests based on a series of actions Worked with different teams on different deployment strategies for Python applications on Linux servers Worked with Bloomberg custom packaging systems like BPKG and DPKG for deployable packaging of the python applications and libraries Shell Scripting and Jenkins pipeline are heavily used for deployment on RHEL machines Senior Python Developer Tools and Libraries New York NY June 2015 to September 2015 Python Git BAS Bloomberg Application Services MySQL sqlalchemy Flask LinuxUnix Shell Scripting Jenkins Senior Python Developer 15 New York Times New York NY At the New York Times I worked on a shortterm project to help with their big data auditing tools They use several systems to analyze and monitor the readership of daily news content And the technology involved is a combination of inhouse CMS and amazon web services Built a very comprehensive auditing tool in Python to compare the results from two of their top inhouse Analytical systems Used Amazon S3 and Hadoop HDFS tools to create reports on file and content comparison Created new ways to deploy python modules on secure file servers Shell Scripting and Jenkins pipeline are used for deployment on Ubuntu machines Senior Python Developer Tools and Libraries Brooklyn NY September 2014 to June 2015 This project encompassed the technical infrastructure necessary for PARCC Partnership for Assessment of Readiness for College and Careers to provide secure reliable flexible and scalable digital data storage management reporting and analysis for PARCC and its member states And my role is to build the necessary software to support all layers of the infrastructure Develop the Data Warehouse components like Universal Data Loader UDL to support data ingestion and edmigrate a component to migrate all data in to the database for reporting purposes Monitor the core Amazon Machine Images AMIs and deploy apps through various DevOps tools on AWS Manage extensive interAPI communication through RabbitMQ messaging queue service Build test frameworks using Pythonbehave tool and automate them using Ansible Design and architect the Ad Hoc Reporting and Analytics Package Design and Configuration system using PyramidFlaskDjango each libraryframework has its own proscons so a little bit of everything was used Shell Scripting and Jenkins pipeline are used for deployment on a variety of AWS machines Senior Python DeveloperArchitect Tools and Libraries Jersey City NJ August 2012 to August 2014 This is a very largescale enterpriselevel project for developing workflows to approvereject quant models and for reporting statistical model information within the Enterprise Risk Management system I was involved in peer reviewing and consistently made it to Top 3 code committers list in a team of roughly 30 developers the technical challenges revolved mostly around implementing extremely granular business requirements on Bank of Americas Quartz platform Development work comprised 7580 and a 2025 major involvement in architectural design Worked from the inception of converting a Desktop based application to a web based application Designed and developed SQLAlchemybased libraries to interact with SQL stored procedures and functions Responsible for the architecture of RESTful web service layer using Flask library routing mechanism Transitioned raw database calls to performanceoriented ORM calls Modeled the service layer data into separate classes as opposed to packing everything into ORM mappings Adhered to standards like PEP8 code decoupling DRY principles and objectoriented design Code complexity and code legibility given equal importance especially given the kind of flexibility Python offers Agile development through unittesting and selenium testing using SQLite and Flasks web testing framework Deployment is done using a Jenkinslike tool called Bob Monitor Senior Python Developer Tools and Libraries Bloomfield CT May 2012 to August 2012 A shortterm project primarily focused on developing a middlelayer for serving data to frontend Cigna mobile app My role was mostly to fix and redesign their buggy Django layer The code lacked clarity and separation and the previous developers tried to push everything into bloated classes Djangocentric agile development seated on an Amazon EC2 Red Hat and Debian servers Redesigned the Django service layer that talks to Oracle backend Fixed a lot of issues with the ORM models to ensure data integrity for insurance products Shell Scripting is used for deployment on RHEL machines Python Developer Tools and Libraries Trenton NJ November 2011 to May 2012 The job at the State of New Jersey government offices belongs to a category where conventional methods dont work due to heavy work place regulations So I recreated web experience inside a Desktop app in limited time because of the security complications with creating a web app The desktop app was targeted to serve the Department of Homeless Management Information System HMIS a division of NJHMFA and the goal was to give State Employees the ability to manage their website and database records within the State of NJ intranet Created a Desktop software suite called the Dashboard from scratch it mimics Django functionality Used wxPython heavily for widgets and features involved in creating a typical desktop application Enforced CRUD permissions using MySQL and presented them with the beautiful wxPython widgets Shell Scripting is heavily used for deployment and running many scheduling jobs on Ubuntu servers Software EngineerComputer AnalystII Tools and Libraries Princeton NJ August 2010 to October 2011 I had to wear multiple hats for various tasks at this job It was focused on fulfilling diverse software needs required by HHMIs Neuroscience labs at the Princeton University Below are some Python projects developed by me from scratch with MySQL as backend database Video Viewer Application Crossplatform Python GUI app to quick search for a particular video residing on remote samba servers and enable the enduser to play the video remotely by creating local samba share Mass Weighing Utility Windows Python GUI app for animal mass weighing talks to a digital balance using RS232 or USB Has many features like erroneous weight checking automated animal detection Automatic Performance Reporting System Pythonbased GUI system to automate parsing of thousands of database records capture anomalous results generate excel reports and dispatch categorical emails Cluster Computing Harnessed the processing power of over 30 multicore computers through cluster computing on MATLAB running on Windows OSX and UnixLinux Ubuntu Fedora platforms also called the MATLAB Distributed Computing Server MDCS Shell Scripting is used on a consistent basis for scheduling reporting and deployment on UbuntuOS X Software Developer Tools and Libraries Denton TX January 2008 to August 2010 Worked as a parttime software developer at the Multimedia Information Group MIG Dept of CSE UNT in collaboration with Mayo Clinic to create software for automated colonoscopy quality measurement Maintaining a good balance of speed accuracy and precision was the top challenge here Lead software developer for Quality Suite Colonoscopy software used by Mayo Clinic Rochester marketed by the Endometric Corporation RealTime GPU Application 25fold speed up Designed developed and tested an application using C and NVIDIA CUDA which uses the power of singlemultiple Tesla GPUs for realtime computeraided colonoscopy detection methods through binary image processing techniques Built using Microsoft Visual Studio 2008 Maintained PythonDjango based web app which allows manipulation of experimental colonoscopy data records of several patients stored in MySQL and monitored using SVN on Ubuntu First authored the following research paper Effective and Accelerated Informative Frame Filtering in Colonoscopy Videos using Graphic Processing Unit BIOSIGNALS 2011 Published Education MS in Computer Engineering University of North Texas 2010 Skills Django 6 years HTML 4 years MySQL 4 years Python 10 years SQL 3 years Additional Information Skills Using Currently Hot Python Git AWS MySQL SQLAlchemy RabbitMQ Shell Jenkins Ansible HTMLJS Used Recently Warm DjangoFlask knockoutjs wxPython Postgres SQL Server SVN CVS Used a while ago Lukewarm OpenCV Pyramid Mercurial SSL C CUDA Perl Oracle Developed stuff on Windows 7 Windows XP Linux Ubuntu RHEL Fedora OS X 105 Amazon EC2 Played with Quartz Wing IDE PyCharm Eclipse Visual Studio nginx Tornado and several other tools",
    "entities": [
        "Skills Django",
        "Python DeveloperArchitect Bank of AmericaMerrill Lynch",
        "Cigna",
        "GUI",
        "ORM",
        "Colonoscopy Videos",
        "Python DeveloperArchitect Tools",
        "AWS Manage",
        "Desktop",
        "BAML Created a Python UI Automation Testing",
        "Computer Engineering",
        "the Endometric Corporation",
        "New York Times New York",
        "Graphic Processing Unit BIOSIGNALS 2011",
        "Amazon Machine Images",
        "PARCC Partnership for Assessment of Readiness for College and Careers",
        "DPKG",
        "Bloomberg Application Service BAS",
        "NJHMFA",
        "Maintained",
        "DevOps",
        "FinancialInsurance",
        "Bank of Americas Quartz platform Development",
        "TX",
        "Amazon",
        "ExcelTo Python",
        "the Princeton University Below",
        "Mayo Clinic",
        "Python",
        "Jenkinslike",
        "Developed",
        "Computer Engineering University of North Texas",
        "MATLAB",
        "Google Tesseract FFMPEG",
        "New Jersey",
        "State Employees",
        "SQL Alchemybased",
        "the Cloud Shell Scripting",
        "Lukewarm OpenCV Pyramid Mercurial SSL C CUDA Perl Oracle Developed",
        "Linux",
        "Flask",
        "Libraries Trenton NJ",
        "Auto Liability General Liability and Workers Compensation Starting",
        "Shell Scripting",
        "the Department of Homeless Management Information System HMIS",
        "UnixLinux",
        "DesktopWeb",
        "Bloombergs",
        "Mayo Clinic Rochester",
        "Created a Desktop",
        "the Multimedia Information Group MIG Dept of CSE UNT",
        "US",
        "the Enterprise Risk Management",
        "RS232",
        "Created",
        "RHEL",
        "AWS",
        "Libraries Jersey City NJ",
        "Automatic Performance Reporting System Pythonbased",
        "Entity Exchange",
        "PIL",
        "Oracle backend Fixed",
        "SQL",
        "Universal Data Loader UDL",
        "lPythonspan",
        "Libraries New York",
        "GPU Application",
        "nonORM",
        "Bloomberg Application Services MySQL",
        "CPUGPU",
        "Handson",
        "Python SQL Shell Scripting HTML JavaScript",
        "Visual Studio",
        "Pandas",
        "SQLite",
        "Additional Information Skills Using Currently Hot Python Git AWS",
        "Effective and Accelerated Informative Frame Filtering",
        "Tesla",
        "the State of NJ",
        "UI",
        "Libraries Princeton NJ",
        "BPKG",
        "SVN",
        "USB",
        "CMS",
        "the New York Times",
        "UI Also",
        "Python Developer Tools",
        "Python DeveloperArchitect Bank of AmericaMerrill Lynch Masters",
        "Microsoft Visual Studio",
        "the Generalized Linear Model",
        "Video Viewer Application Crossplatform Python GUI"
    ],
    "experience": "Experience Senior Python DeveloperArchitect Bank of AmericaMerrill Lynch Jersey City NJ July 2017 to Present I am back at BAML for the second time This time an interesting challenge was posed at me to automate the User Interface UI testing So I built a brandnew framework Talos Talos is a UI Automation Testing framework geared towards automating several test scenarios simultaneously for either webbased or desktop apps I built it from scratch in roughly three months This framework saves you a ton of time it was an instant hit at BAML Created a Python UI Automation Testing framework based on an underlying Jython API SikuliX The framework offers 1 A fullfledged UI automation 2 An extremely configurable YAML based scenario builder and 3 The muchcoveted ability to dynamically handle any UI errorsexceptions Integrated Googles Tesseract OCR engine with highly customizable image preprocessing techniques to read data right off the UI Also baked into the framework is a visual recorder that optionally records every single scenario that can be replayed later if testers want to see what went wrong on the UI Talos works seamlessly for both web browser based or Desktop based user interfaces Tools and Libraries Python Git iPython virtualenv PIL pytesseract Google Tesseract FFMPEG jnius SikuliX Senior Python DeveloperArchitect American International Group New York NY January 2017 to June 2017 AIG was working on transitioning from SASExcel to Python to create a webbased platform to host commercial models created by actuaries and used by Underwriters This shortterm project began with three basic models belonging to Auto Liability General Liability and Workers Compensation Starting from Pandas all the way up to koala2 many math calculations based on Python libraries dominated this ExcelTo Python transitional webapp Developed a novel library in Python to perform Excel calculations by using Pandas in tandem with the Generalized Linear Model approach a library called earlybird Test driven development is seriously considered as the methodology to ensure precision up to 10 decimal points of model results at every step Unit and integration tests are written in parallel to accomplish this Spearheaded the effort to migrate from Active State Python 2x to opensource Python 3x Used koala2 for evaluating Excel sheets in Python in order to crossverify the results from the backend service Xlwings library is used as well for automated Excel evaluation for integration testing this is paired with Pandas for fixture generation Shell Scripting and Jenkins pipeline are used for deployment and daytoday operations on CentOS virtual machines Senior Python DeveloperArchitect Tools and Libraries New York NY October 2015 to December 2016 Bloomberg LP has a very agile style of working The project is called KYC Know Your Customer Also known as Entity Exchange and Screening Everything there is proprietary Bloombergs version of Python Bloombergs version of Git Bloombergs version of service routing libraries etc So obviously the challenges were to get things working by operating within the Bloomberg ecosystem Here are a few highlights You will read the word Introduced a lot Might sound redundant but its all true There s a bunch of data matching algorithms out there but the one I created was original and custom tailored to verify and match the entity information coming from multiple sources Introduced a brandnew SQL Alchemybased framework that integrates seamlessly into Bloomberg Application Service BAS layer The framework supports both ORM and nonORM approaches to SQL Very robust Introduced a welldefined and configurable framework for business logic and data validation on the service layer I called it the Sentinel This was used to prevent any bad data or improper requests from entering your service layer It was quite powerful Introduced a novel way to process the service requests it is called Action Processing It allows you to process service layer requests based on a series of actions Worked with different teams on different deployment strategies for Python applications on Linux servers Worked with Bloomberg custom packaging systems like BPKG and DPKG for deployable packaging of the python applications and libraries Shell Scripting and Jenkins pipeline are heavily used for deployment on RHEL machines Senior Python Developer Tools and Libraries New York NY June 2015 to September 2015 Python Git BAS Bloomberg Application Services MySQL sqlalchemy Flask LinuxUnix Shell Scripting Jenkins Senior Python Developer 15 New York Times New York NY At the New York Times I worked on a shortterm project to help with their big data auditing tools They use several systems to analyze and monitor the readership of daily news content And the technology involved is a combination of inhouse CMS and amazon web services Built a very comprehensive auditing tool in Python to compare the results from two of their top inhouse Analytical systems Used Amazon S3 and Hadoop HDFS tools to create reports on file and content comparison Created new ways to deploy python modules on secure file servers Shell Scripting and Jenkins pipeline are used for deployment on Ubuntu machines Senior Python Developer Tools and Libraries Brooklyn NY September 2014 to June 2015 This project encompassed the technical infrastructure necessary for PARCC Partnership for Assessment of Readiness for College and Careers to provide secure reliable flexible and scalable digital data storage management reporting and analysis for PARCC and its member states And my role is to build the necessary software to support all layers of the infrastructure Develop the Data Warehouse components like Universal Data Loader UDL to support data ingestion and edmigrate a component to migrate all data in to the database for reporting purposes Monitor the core Amazon Machine Images AMIs and deploy apps through various DevOps tools on AWS Manage extensive interAPI communication through RabbitMQ messaging queue service Build test frameworks using Pythonbehave tool and automate them using Ansible Design and architect the Ad Hoc Reporting and Analytics Package Design and Configuration system using PyramidFlaskDjango each libraryframework has its own proscons so a little bit of everything was used Shell Scripting and Jenkins pipeline are used for deployment on a variety of AWS machines Senior Python DeveloperArchitect Tools and Libraries Jersey City NJ August 2012 to August 2014 This is a very largescale enterpriselevel project for developing workflows to approvereject quant models and for reporting statistical model information within the Enterprise Risk Management system I was involved in peer reviewing and consistently made it to Top 3 code committers list in a team of roughly 30 developers the technical challenges revolved mostly around implementing extremely granular business requirements on Bank of Americas Quartz platform Development work comprised 7580 and a 2025 major involvement in architectural design Worked from the inception of converting a Desktop based application to a web based application Designed and developed SQLAlchemybased libraries to interact with SQL stored procedures and functions Responsible for the architecture of RESTful web service layer using Flask library routing mechanism Transitioned raw database calls to performanceoriented ORM calls Modeled the service layer data into separate classes as opposed to packing everything into ORM mappings Adhered to standards like PEP8 code decoupling DRY principles and objectoriented design Code complexity and code legibility given equal importance especially given the kind of flexibility Python offers Agile development through unittesting and selenium testing using SQLite and Flasks web testing framework Deployment is done using a Jenkinslike tool called Bob Monitor Senior Python Developer Tools and Libraries Bloomfield CT May 2012 to August 2012 A shortterm project primarily focused on developing a middlelayer for serving data to frontend Cigna mobile app My role was mostly to fix and redesign their buggy Django layer The code lacked clarity and separation and the previous developers tried to push everything into bloated classes Djangocentric agile development seated on an Amazon EC2 Red Hat and Debian servers Redesigned the Django service layer that talks to Oracle backend Fixed a lot of issues with the ORM models to ensure data integrity for insurance products Shell Scripting is used for deployment on RHEL machines Python Developer Tools and Libraries Trenton NJ November 2011 to May 2012 The job at the State of New Jersey government offices belongs to a category where conventional methods do nt work due to heavy work place regulations So I recreated web experience inside a Desktop app in limited time because of the security complications with creating a web app The desktop app was targeted to serve the Department of Homeless Management Information System HMIS a division of NJHMFA and the goal was to give State Employees the ability to manage their website and database records within the State of NJ intranet Created a Desktop software suite called the Dashboard from scratch it mimics Django functionality Used wxPython heavily for widgets and features involved in creating a typical desktop application Enforced CRUD permissions using MySQL and presented them with the beautiful wxPython widgets Shell Scripting is heavily used for deployment and running many scheduling jobs on Ubuntu servers Software EngineerComputer AnalystII Tools and Libraries Princeton NJ August 2010 to October 2011 I had to wear multiple hats for various tasks at this job It was focused on fulfilling diverse software needs required by HHMIs Neuroscience labs at the Princeton University Below are some Python projects developed by me from scratch with MySQL as backend database Video Viewer Application Crossplatform Python GUI app to quick search for a particular video residing on remote samba servers and enable the enduser to play the video remotely by creating local samba share Mass Weighing Utility Windows Python GUI app for animal mass weighing talks to a digital balance using RS232 or USB Has many features like erroneous weight checking automated animal detection Automatic Performance Reporting System Pythonbased GUI system to automate parsing of thousands of database records capture anomalous results generate excel reports and dispatch categorical emails Cluster Computing Harnessed the processing power of over 30 multicore computers through cluster computing on MATLAB running on Windows OSX and UnixLinux Ubuntu Fedora platforms also called the MATLAB Distributed Computing Server MDCS Shell Scripting is used on a consistent basis for scheduling reporting and deployment on UbuntuOS X Software Developer Tools and Libraries Denton TX January 2008 to August 2010 Worked as a parttime software developer at the Multimedia Information Group MIG Dept of CSE UNT in collaboration with Mayo Clinic to create software for automated colonoscopy quality measurement Maintaining a good balance of speed accuracy and precision was the top challenge here Lead software developer for Quality Suite Colonoscopy software used by Mayo Clinic Rochester marketed by the Endometric Corporation RealTime GPU Application 25fold speed up Designed developed and tested an application using C and NVIDIA CUDA which uses the power of singlemultiple Tesla GPUs for realtime computeraided colonoscopy detection methods through binary image processing techniques Built using Microsoft Visual Studio 2008 Maintained PythonDjango based web app which allows manipulation of experimental colonoscopy data records of several patients stored in MySQL and monitored using SVN on Ubuntu First authored the following research paper Effective and Accelerated Informative Frame Filtering in Colonoscopy Videos using Graphic Processing Unit BIOSIGNALS 2011 Published Education MS in Computer Engineering University of North Texas 2010 Skills Django 6 years HTML 4 years MySQL 4 years Python 10 years SQL 3 years Additional Information Skills Using Currently Hot Python Git AWS MySQL SQLAlchemy RabbitMQ Shell Jenkins Ansible HTMLJS Used Recently Warm DjangoFlask knockoutjs wxPython Postgres SQL Server SVN CVS Used a while ago Lukewarm OpenCV Pyramid Mercurial SSL C CUDA Perl Oracle Developed stuff on Windows 7 Windows XP Linux Ubuntu RHEL Fedora OS X 105 Amazon EC2 Played with Quartz Wing IDE PyCharm Eclipse Visual Studio nginx Tornado and several other tools",
    "extracted_keywords": [
        "Python",
        "DeveloperArchitect",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspanArchitect",
        "Senior",
        "Python",
        "DeveloperArchitect",
        "Bank",
        "AmericaMerrill",
        "Lynch",
        "Masters",
        "Computer",
        "Engineering",
        "yrs",
        "software",
        "development",
        "experience",
        "environments",
        "skills",
        "developmentdeployment",
        "DesktopWeb",
        "applications",
        "Python",
        "SQL",
        "Shell",
        "Scripting",
        "HTML",
        "JavaScript",
        "platforms",
        "Windows",
        "OS",
        "X",
        "Linux",
        "Cloud",
        "Shell",
        "Scripting",
        "deployment",
        "integration",
        "automation",
        "tools",
        "Jenkins",
        "Ansible",
        "theme",
        "majority",
        "projects",
        "Handson",
        "experience",
        "FinancialInsurance",
        "software",
        "GUI",
        "development",
        "version",
        "CPUGPU",
        "profiling",
        "testdriven",
        "environment",
        "style",
        "abilities",
        "math",
        "documentation",
        "algorithm",
        "design",
        "thinking",
        "style",
        "passion",
        "team",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "DeveloperArchitect",
        "Bank",
        "AmericaMerrill",
        "Lynch",
        "Jersey",
        "City",
        "NJ",
        "July",
        "Present",
        "BAML",
        "time",
        "time",
        "challenge",
        "User",
        "Interface",
        "UI",
        "testing",
        "framework",
        "Talos",
        "Talos",
        "UI",
        "Automation",
        "Testing",
        "framework",
        "test",
        "scenarios",
        "desktop",
        "apps",
        "scratch",
        "months",
        "framework",
        "ton",
        "time",
        "hit",
        "BAML",
        "Python",
        "UI",
        "Automation",
        "Testing",
        "framework",
        "Jython",
        "API",
        "framework",
        "UI",
        "automation",
        "YAML",
        "scenario",
        "builder",
        "ability",
        "UI",
        "errorsexceptions",
        "Integrated",
        "Googles",
        "OCR",
        "engine",
        "image",
        "techniques",
        "data",
        "UI",
        "framework",
        "recorder",
        "scenario",
        "testers",
        "UI",
        "Talos",
        "web",
        "browser",
        "Desktop",
        "user",
        "interfaces",
        "Tools",
        "Libraries",
        "Python",
        "Git",
        "iPython",
        "virtualenv",
        "PIL",
        "pytesseract",
        "Google",
        "Tesseract",
        "FFMPEG",
        "jnius",
        "Senior",
        "Python",
        "DeveloperArchitect",
        "American",
        "International",
        "Group",
        "New",
        "York",
        "NY",
        "January",
        "June",
        "AIG",
        "SASExcel",
        "Python",
        "platform",
        "models",
        "actuaries",
        "Underwriters",
        "shortterm",
        "project",
        "models",
        "Auto",
        "Liability",
        "General",
        "Liability",
        "Workers",
        "Compensation",
        "Pandas",
        "way",
        "math",
        "calculations",
        "Python",
        "libraries",
        "ExcelTo",
        "Python",
        "webapp",
        "library",
        "Python",
        "Excel",
        "calculations",
        "Pandas",
        "tandem",
        "Generalized",
        "Linear",
        "Model",
        "library",
        "earlybird",
        "Test",
        "development",
        "methodology",
        "precision",
        "points",
        "model",
        "results",
        "step",
        "Unit",
        "integration",
        "tests",
        "parallel",
        "effort",
        "Active",
        "State",
        "Python",
        "Python",
        "koala2",
        "Excel",
        "sheets",
        "Python",
        "order",
        "results",
        "service",
        "Xlwings",
        "library",
        "Excel",
        "evaluation",
        "integration",
        "testing",
        "Pandas",
        "fixture",
        "generation",
        "Shell",
        "Scripting",
        "Jenkins",
        "pipeline",
        "deployment",
        "daytoday",
        "operations",
        "CentOS",
        "machines",
        "Senior",
        "Python",
        "DeveloperArchitect",
        "Tools",
        "Libraries",
        "New",
        "York",
        "NY",
        "October",
        "December",
        "Bloomberg",
        "LP",
        "style",
        "project",
        "KYC",
        "Know",
        "Customer",
        "Entity",
        "Exchange",
        "Bloombergs",
        "version",
        "Python",
        "Bloombergs",
        "version",
        "Git",
        "Bloombergs",
        "version",
        "service",
        "routing",
        "libraries",
        "challenges",
        "things",
        "Bloomberg",
        "ecosystem",
        "highlights",
        "word",
        "lot",
        "bunch",
        "data",
        "matching",
        "algorithms",
        "one",
        "custom",
        "entity",
        "information",
        "sources",
        "SQL",
        "framework",
        "Bloomberg",
        "Application",
        "Service",
        "BAS",
        "layer",
        "framework",
        "ORM",
        "nonORM",
        "approaches",
        "SQL",
        "framework",
        "business",
        "logic",
        "data",
        "validation",
        "service",
        "layer",
        "Sentinel",
        "data",
        "requests",
        "service",
        "layer",
        "way",
        "service",
        "requests",
        "Action",
        "Processing",
        "service",
        "layer",
        "requests",
        "series",
        "actions",
        "teams",
        "deployment",
        "strategies",
        "Python",
        "applications",
        "Linux",
        "servers",
        "Bloomberg",
        "custom",
        "packaging",
        "systems",
        "BPKG",
        "DPKG",
        "packaging",
        "python",
        "applications",
        "Shell",
        "Scripting",
        "Jenkins",
        "pipeline",
        "deployment",
        "RHEL",
        "machines",
        "Senior",
        "Python",
        "Developer",
        "Tools",
        "Libraries",
        "New",
        "York",
        "NY",
        "June",
        "September",
        "Python",
        "Git",
        "BAS",
        "Bloomberg",
        "Application",
        "Services",
        "MySQL",
        "sqlalchemy",
        "Flask",
        "LinuxUnix",
        "Shell",
        "Scripting",
        "Jenkins",
        "Senior",
        "Python",
        "Developer",
        "New",
        "York",
        "Times",
        "New",
        "York",
        "NY",
        "New",
        "York",
        "Times",
        "shortterm",
        "project",
        "data",
        "auditing",
        "tools",
        "systems",
        "readership",
        "news",
        "content",
        "technology",
        "combination",
        "inhouse",
        "CMS",
        "amazon",
        "web",
        "services",
        "auditing",
        "tool",
        "Python",
        "results",
        "inhouse",
        "Analytical",
        "systems",
        "Amazon",
        "S3",
        "Hadoop",
        "HDFS",
        "tools",
        "reports",
        "file",
        "content",
        "comparison",
        "ways",
        "modules",
        "file",
        "servers",
        "Shell",
        "Scripting",
        "Jenkins",
        "pipeline",
        "deployment",
        "Ubuntu",
        "machines",
        "Senior",
        "Python",
        "Developer",
        "Tools",
        "Libraries",
        "Brooklyn",
        "NY",
        "September",
        "June",
        "project",
        "infrastructure",
        "PARCC",
        "Partnership",
        "Assessment",
        "Readiness",
        "College",
        "Careers",
        "data",
        "storage",
        "management",
        "reporting",
        "analysis",
        "PARCC",
        "member",
        "states",
        "role",
        "software",
        "layers",
        "infrastructure",
        "Data",
        "Warehouse",
        "components",
        "Universal",
        "Data",
        "Loader",
        "UDL",
        "data",
        "ingestion",
        "component",
        "data",
        "database",
        "reporting",
        "purposes",
        "core",
        "Amazon",
        "Machine",
        "Images",
        "AMIs",
        "apps",
        "DevOps",
        "tools",
        "AWS",
        "interAPI",
        "communication",
        "RabbitMQ",
        "queue",
        "service",
        "Build",
        "test",
        "frameworks",
        "Pythonbehave",
        "tool",
        "Ansible",
        "Design",
        "Ad",
        "Hoc",
        "Reporting",
        "Analytics",
        "Package",
        "Design",
        "Configuration",
        "system",
        "PyramidFlaskDjango",
        "libraryframework",
        "proscons",
        "bit",
        "Shell",
        "Scripting",
        "Jenkins",
        "pipeline",
        "deployment",
        "variety",
        "AWS",
        "Senior",
        "Python",
        "DeveloperArchitect",
        "Tools",
        "Libraries",
        "Jersey",
        "City",
        "NJ",
        "August",
        "August",
        "largescale",
        "enterpriselevel",
        "project",
        "workflows",
        "models",
        "model",
        "information",
        "Enterprise",
        "Risk",
        "Management",
        "system",
        "peer",
        "reviewing",
        "code",
        "committers",
        "team",
        "developers",
        "challenges",
        "business",
        "requirements",
        "Bank",
        "Americas",
        "Quartz",
        "platform",
        "Development",
        "work",
        "involvement",
        "design",
        "inception",
        "Desktop",
        "application",
        "web",
        "application",
        "libraries",
        "SQL",
        "procedures",
        "functions",
        "architecture",
        "web",
        "service",
        "layer",
        "Flask",
        "library",
        "mechanism",
        "database",
        "calls",
        "ORM",
        "calls",
        "service",
        "layer",
        "data",
        "classes",
        "ORM",
        "mappings",
        "standards",
        "PEP8",
        "code",
        "DRY",
        "principles",
        "design",
        "Code",
        "complexity",
        "code",
        "legibility",
        "importance",
        "kind",
        "flexibility",
        "Python",
        "development",
        "unittesting",
        "selenium",
        "testing",
        "SQLite",
        "Flasks",
        "web",
        "testing",
        "framework",
        "Deployment",
        "Jenkinslike",
        "tool",
        "Bob",
        "Monitor",
        "Senior",
        "Python",
        "Developer",
        "Tools",
        "Libraries",
        "Bloomfield",
        "CT",
        "May",
        "August",
        "shortterm",
        "project",
        "middlelayer",
        "data",
        "Cigna",
        "app",
        "role",
        "Django",
        "layer",
        "code",
        "clarity",
        "separation",
        "developers",
        "classes",
        "Djangocentric",
        "development",
        "Amazon",
        "EC2",
        "Red",
        "Hat",
        "servers",
        "Django",
        "service",
        "layer",
        "Oracle",
        "backend",
        "lot",
        "issues",
        "ORM",
        "models",
        "data",
        "integrity",
        "insurance",
        "products",
        "Shell",
        "Scripting",
        "deployment",
        "RHEL",
        "machines",
        "Python",
        "Developer",
        "Tools",
        "Trenton",
        "NJ",
        "November",
        "May",
        "job",
        "State",
        "New",
        "Jersey",
        "government",
        "offices",
        "category",
        "methods",
        "work",
        "place",
        "regulations",
        "web",
        "experience",
        "Desktop",
        "app",
        "time",
        "security",
        "complications",
        "web",
        "app",
        "desktop",
        "app",
        "Department",
        "Homeless",
        "Management",
        "Information",
        "System",
        "HMIS",
        "division",
        "NJHMFA",
        "goal",
        "State",
        "Employees",
        "ability",
        "website",
        "database",
        "records",
        "State",
        "NJ",
        "intranet",
        "Desktop",
        "software",
        "suite",
        "Dashboard",
        "scratch",
        "Django",
        "functionality",
        "widgets",
        "features",
        "desktop",
        "application",
        "CRUD",
        "permissions",
        "MySQL",
        "wxPython",
        "widgets",
        "Shell",
        "Scripting",
        "deployment",
        "scheduling",
        "jobs",
        "Ubuntu",
        "servers",
        "Software",
        "EngineerComputer",
        "AnalystII",
        "Tools",
        "Libraries",
        "Princeton",
        "NJ",
        "August",
        "October",
        "hats",
        "tasks",
        "job",
        "software",
        "needs",
        "HHMIs",
        "Neuroscience",
        "labs",
        "Princeton",
        "University",
        "Below",
        "Python",
        "projects",
        "scratch",
        "MySQL",
        "database",
        "Video",
        "Viewer",
        "Application",
        "Crossplatform",
        "Python",
        "GUI",
        "app",
        "search",
        "video",
        "servers",
        "enduser",
        "video",
        "samba",
        "share",
        "Mass",
        "Weighing",
        "Utility",
        "Windows",
        "Python",
        "GUI",
        "app",
        "animal",
        "weighing",
        "talks",
        "balance",
        "RS232",
        "USB",
        "features",
        "weight",
        "animal",
        "detection",
        "Automatic",
        "Performance",
        "System",
        "Pythonbased",
        "GUI",
        "system",
        "parsing",
        "thousands",
        "database",
        "records",
        "results",
        "reports",
        "emails",
        "Cluster",
        "Computing",
        "processing",
        "power",
        "multicore",
        "computers",
        "cluster",
        "computing",
        "MATLAB",
        "Windows",
        "OSX",
        "UnixLinux",
        "Ubuntu",
        "Fedora",
        "platforms",
        "MATLAB",
        "Computing",
        "Server",
        "MDCS",
        "Shell",
        "Scripting",
        "basis",
        "scheduling",
        "reporting",
        "deployment",
        "UbuntuOS",
        "X",
        "Software",
        "Developer",
        "Tools",
        "Denton",
        "TX",
        "January",
        "August",
        "parttime",
        "software",
        "developer",
        "Multimedia",
        "Information",
        "Group",
        "MIG",
        "Dept",
        "CSE",
        "UNT",
        "collaboration",
        "Mayo",
        "Clinic",
        "software",
        "colonoscopy",
        "quality",
        "measurement",
        "balance",
        "speed",
        "accuracy",
        "precision",
        "challenge",
        "Lead",
        "software",
        "developer",
        "Quality",
        "Suite",
        "Colonoscopy",
        "software",
        "Mayo",
        "Clinic",
        "Rochester",
        "Endometric",
        "Corporation",
        "RealTime",
        "GPU",
        "Application",
        "speed",
        "application",
        "C",
        "NVIDIA",
        "CUDA",
        "power",
        "Tesla",
        "GPUs",
        "realtime",
        "colonoscopy",
        "detection",
        "methods",
        "image",
        "processing",
        "techniques",
        "Microsoft",
        "Visual",
        "Studio",
        "Maintained",
        "PythonDjango",
        "web",
        "app",
        "manipulation",
        "colonoscopy",
        "data",
        "records",
        "patients",
        "MySQL",
        "SVN",
        "Ubuntu",
        "First",
        "research",
        "paper",
        "Accelerated",
        "Informative",
        "Frame",
        "Filtering",
        "Colonoscopy",
        "Videos",
        "Graphic",
        "Processing",
        "Unit",
        "BIOSIGNALS",
        "Education",
        "MS",
        "Computer",
        "Engineering",
        "University",
        "North",
        "Texas",
        "Skills",
        "Django",
        "years",
        "HTML",
        "years",
        "MySQL",
        "years",
        "Python",
        "years",
        "SQL",
        "years",
        "Additional",
        "Information",
        "Skills",
        "Python",
        "Git",
        "AWS",
        "MySQL",
        "SQLAlchemy",
        "RabbitMQ",
        "Shell",
        "Jenkins",
        "Ansible",
        "HTMLJS",
        "Warm",
        "DjangoFlask",
        "knockoutjs",
        "wxPython",
        "Postgres",
        "SQL",
        "Server",
        "SVN",
        "CVS",
        "while",
        "Lukewarm",
        "OpenCV",
        "Pyramid",
        "Mercurial",
        "SSL",
        "C",
        "CUDA",
        "Perl",
        "Oracle",
        "stuff",
        "Windows",
        "Windows",
        "XP",
        "Linux",
        "Ubuntu",
        "RHEL",
        "Fedora",
        "OS",
        "X",
        "Amazon",
        "EC2",
        "Played",
        "Quartz",
        "Wing",
        "IDE",
        "PyCharm",
        "Eclipse",
        "Visual",
        "Studio",
        "Tornado",
        "tools"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:15:01.077307",
    "resume_data": "Senior Python DeveloperArchitect Senior span lPythonspan span lDeveloperspanArchitect Senior Python DeveloperArchitect Bank of AmericaMerrill Lynch Masters in Computer Engineering with 10 yrs software development experience in professional environments High potential skills in developmentdeployment of DesktopWeb applications using Python SQL Shell Scripting HTML JavaScript targeted for all three major platforms Windows OS X Linux or the Cloud Shell Scripting deployment using continuous integration and automation tools like Jenkins and Ansible is a consistent theme across a majority of my projects Handson experience with FinancialInsurance software GUI development version controlling CPUGPU architectures profiling and debugging in a testdriven environment coding style is less is more Proven abilities in math problemsolving documentation algorithm design and creativeanalytical thinking Working style is extreme passion reasonable and accountable Can work independently or in a team Authorized to work in the US for any employer Work Experience Senior Python DeveloperArchitect Bank of AmericaMerrill Lynch Jersey City NJ July 2017 to Present I am back at BAML for the second time This time an interesting challenge was posed at me to automate the User Interface UI testing So I built a brandnew framework Talos Talos is a UI Automation Testing framework geared towards automating several test scenarios simultaneously for either webbased or desktop apps I built it from scratch in roughly three months This framework saves you a ton of time it was an instant hit at BAML Created a Python UI Automation Testing framework based on an underlying Jython API SikuliX The framework offers 1 A fullfledged UI automation 2 An extremely configurable YAML based scenario builder and 3 The muchcoveted ability to dynamically handle any UI errorsexceptions Integrated Googles Tesseract OCR engine with highly customizable image preprocessing techniques to read data right off the UI Also baked into the framework is a visual recorder that optionally records every single scenario that can be replayed later if testers want to see what went wrong on the UI Talos works seamlessly for both web browser based or Desktop based user interfaces Tools and Libraries Python Git iPython virtualenv PIL pytesseract Google Tesseract FFMPEG jnius SikuliX Senior Python DeveloperArchitect American International Group New York NY January 2017 to June 2017 AIG was working on transitioning from SASExcel to Python to create a webbased platform to host commercial models created by actuaries and used by Underwriters This shortterm project began with three basic models belonging to Auto Liability General Liability and Workers Compensation Starting from Pandas all the way up to koala2 many math calculations based on Python libraries dominated this ExcelTo Python transitional webapp Developed a novel library in Python to perform Excel calculations by using Pandas in tandem with the Generalized Linear Model approach a library called earlybird Test driven development is seriously considered as the methodology to ensure precision up to 10 decimal points of model results at every step Unit and integration tests are written in parallel to accomplish this Spearheaded the effort to migrate from Active State Python 2x to opensource Python 3x Used koala2 for evaluating Excel sheets in Python in order to crossverify the results from the backend service Xlwings library is used as well for automated Excel evaluation for integration testing this is paired with Pandas for fixture generation Shell Scripting and Jenkins pipeline are used for deployment and daytoday operations on CentOS virtual machines Senior Python DeveloperArchitect Tools and Libraries New York NY October 2015 to December 2016 Bloomberg LP has a very agile style of working The project is called KYC Know Your Customer Also known as Entity Exchange and Screening Everything there is proprietary Bloombergs version of Python Bloombergs version of Git Bloombergs version of service routing libraries etc So obviously the challenges were to get things working by operating within the Bloomberg ecosystem Here are a few highlights You will read the word Introduced a lot Might sound redundant but its all true Theres a bunch of data matching algorithms out there but the one I created was original and custom tailored to verify and match the entity information coming from multiple sources Introduced a brandnew SQL Alchemybased framework that integrates seamlessly into Bloomberg Application Service BAS layer The framework supports both ORM and nonORM approaches to SQL Very robust Introduced a welldefined and configurable framework for business logic and data validation on the service layer I called it the Sentinel This was used to prevent any bad data or improper requests from entering your service layer It was quite powerful Introduced a novel way to process the service requests it is called Action Processing It allows you to process service layer requests based on a series of actions Worked with different teams on different deployment strategies for Python applications on Linux servers Worked with Bloomberg custom packaging systems like BPKG and DPKG for deployable packaging of the python applications and libraries Shell Scripting and Jenkins pipeline are heavily used for deployment on RHEL machines Senior Python Developer Tools and Libraries New York NY June 2015 to September 2015 Python Git BAS Bloomberg Application Services MySQL sqlalchemy Flask LinuxUnix Shell Scripting Jenkins Senior Python Developer 062015 092015 New York Times New York NY At the New York Times I worked on a shortterm project to help with their big data auditing tools They use several systems to analyze and monitor the readership of daily news content And the technology involved is a combination of inhouse CMS and amazon web services Built a very comprehensive auditing tool in Python to compare the results from two of their top inhouse Analytical systems Used Amazon S3 and Hadoop HDFS tools to create reports on file and content comparison Created new ways to deploy python modules on secure file servers Shell Scripting and Jenkins pipeline are used for deployment on Ubuntu machines Senior Python Developer Tools and Libraries Brooklyn NY September 2014 to June 2015 This project encompassed the technical infrastructure necessary for PARCC Partnership for Assessment of Readiness for College and Careers to provide secure reliable flexible and scalable digital data storage management reporting and analysis for PARCC and its member states And my role is to build the necessary software to support all layers of the infrastructure Develop the Data Warehouse components like Universal Data Loader UDL to support data ingestion and edmigrate a component to migrate all data in to the database for reporting purposes Monitor the core Amazon Machine Images AMIs and deploy apps through various DevOps tools on AWS Manage extensive interAPI communication through RabbitMQ messaging queue service Build test frameworks using Pythonbehave tool and automate them using Ansible Design and architect the Ad Hoc Reporting and Analytics Package Design and Configuration system using PyramidFlaskDjango each libraryframework has its own proscons so a little bit of everything was used Shell Scripting and Jenkins pipeline are used for deployment on a variety of AWS machines Senior Python DeveloperArchitect Tools and Libraries Jersey City NJ August 2012 to August 2014 This is a very largescale enterpriselevel project for developing workflows to approvereject quant models and for reporting statistical model information within the Enterprise Risk Management system I was involved in peer reviewing and consistently made it to Top 3 code committers list in a team of roughly 30 developers the technical challenges revolved mostly around implementing extremely granular business requirements on Bank of Americas Quartz platform Development work comprised 7580 and a 2025 major involvement in architectural design Worked from the inception of converting a Desktop based application to a web based application Designed and developed SQLAlchemybased libraries to interact with SQL stored procedures and functions Responsible for the architecture of RESTful web service layer using Flask library routing mechanism Transitioned raw database calls to performanceoriented ORM calls Modeled the service layer data into separate classes as opposed to packing everything into ORM mappings Adhered to standards like PEP8 code decoupling DRY principles and objectoriented design Code complexity and code legibility given equal importance especially given the kind of flexibility Python offers Agile development through unittesting and selenium testing using SQLite and Flasks web testing framework Deployment is done using a Jenkinslike tool called Bob Monitor Senior Python Developer Tools and Libraries Bloomfield CT May 2012 to August 2012 A shortterm project primarily focused on developing a middlelayer for serving data to frontend Cigna mobile app My role was mostly to fix and redesign their buggy Django layer The code lacked clarity and separation and the previous developers tried to push everything into bloated classes Djangocentric agile development seated on an Amazon EC2 Red Hat and Debian servers Redesigned the Django service layer that talks to Oracle backend Fixed a lot of issues with the ORM models to ensure data integrity for insurance products Shell Scripting is used for deployment on RHEL machines Python Developer Tools and Libraries Trenton NJ November 2011 to May 2012 The job at the State of New Jersey government offices belongs to a category where conventional methods dont work due to heavy work place regulations So I recreated web experience inside a Desktop app in limited time because of the security complications with creating a web app The desktop app was targeted to serve the Department of Homeless Management Information System HMIS a division of NJHMFA and the goal was to give State Employees the ability to manage their website and database records within the State of NJ intranet Created a Desktop software suite called the Dashboard from scratch it mimics Django functionality Used wxPython heavily for widgets and features involved in creating a typical desktop application Enforced CRUD permissions using MySQL and presented them with the beautiful wxPython widgets Shell Scripting is heavily used for deployment and running many scheduling jobs on Ubuntu servers Software EngineerComputer AnalystII Tools and Libraries Princeton NJ August 2010 to October 2011 I had to wear multiple hats for various tasks at this job It was focused on fulfilling diverse software needs required by HHMIs Neuroscience labs at the Princeton University Below are some Python projects developed by me from scratch with MySQL as backend database Video Viewer Application Crossplatform Python GUI app to quick search for a particular video residing on remote samba servers and enable the enduser to play the video remotely by creating local samba share Mass Weighing Utility Windows Python GUI app for animal mass weighing talks to a digital balance using RS232 or USB Has many features like erroneous weight checking automated animal detection Automatic Performance Reporting System Pythonbased GUI system to automate parsing of thousands of database records capture anomalous results generate excel reports and dispatch categorical emails Cluster Computing Harnessed the processing power of over 30 multicore computers through cluster computing on MATLAB running on Windows OSX and UnixLinux Ubuntu Fedora platforms also called the MATLAB Distributed Computing Server MDCS Shell Scripting is used on a consistent basis for scheduling reporting and deployment on UbuntuOS X Software Developer Tools and Libraries Denton TX January 2008 to August 2010 Worked as a parttime software developer at the Multimedia Information Group MIG Dept of CSE UNT in collaboration with Mayo Clinic to create software for automated colonoscopy quality measurement Maintaining a good balance of speed accuracy and precision was the top challenge here Lead software developer for Quality Suite Colonoscopy software used by Mayo Clinic Rochester marketed by the Endometric Corporation RealTime GPU Application 25fold speed up Designed developed and tested an application using C and NVIDIA CUDA which uses the power of singlemultiple Tesla GPUs for realtime computeraided colonoscopy detection methods through binary image processing techniques Built using Microsoft Visual Studio 2008 Maintained PythonDjango based web app which allows manipulation of experimental colonoscopy data records of several patients stored in MySQL and monitored using SVN on Ubuntu First authored the following research paper Effective and Accelerated Informative Frame Filtering in Colonoscopy Videos using Graphic Processing Unit BIOSIGNALS 2011 Published Education MS in Computer Engineering University of North Texas 2010 Skills Django 6 years HTML 4 years MySQL 4 years Python 10 years SQL 3 years Additional Information Skills Using Currently Hot Python Git AWS MySQL SQLAlchemy RabbitMQ Shell Jenkins Ansible HTMLJS Used Recently Warm DjangoFlask knockoutjs wxPython Postgres SQL Server SVN CVS Used a while ago Lukewarm OpenCV Pyramid Mercurial SSL C CUDA Perl Oracle Developed stuff on Windows 7 Windows XP Linux Ubuntu RHEL Fedora OS X 105 Amazon EC2 Played with Quartz Wing IDE PyCharm Eclipse Visual Studio nginx Tornado and several other tools",
    "unique_id": "9f69ce4c-3006-4d12-a76a-9ba9a022c550"
}