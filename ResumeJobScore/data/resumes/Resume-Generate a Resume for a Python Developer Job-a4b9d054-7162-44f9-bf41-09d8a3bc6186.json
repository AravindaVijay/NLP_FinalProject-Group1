{
    "clean_data": "Software Developer Angular 67Web API span lSoftwarespan span lDeveloperspan Angular 67Web API Philadelphia PA Authorized to work in the US for any employer Work Experience Software Developer Angular 67Web API Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Software Developer Angular 6Web API QualCare Inc Piscataway NJ February 2018 to August 2018 Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Software Developer MVCENTITY Bolt on technology Inc Southampton MA November 2016 to February 2018 Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controlsDependency Injection Unity Software Developer MVC WCF The Neat Company Inc Philadelphia PA November 2015 to November 2016 Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON Software Developer Web forms MVC WCF SMA Laboratory Inc Trevose PA June 2014 to November 2015 Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Education Masters in Diploma in Computer Software American Advanced Institute of Technology Philadelphia PA March 2012 to May 2014 Skills ASP CSS HTML 5 Javascript",
    "entities": [
        "C Modified",
        "SQL Server",
        "Computer Software American Advanced Institute of Technology Philadelphia",
        "AJAX",
        "Authentication and Authorization Enable",
        "CRUD",
        "US",
        "Loans Inc Parsippany NJ",
        "SDLC Software Development Life Cycle Software Test Life Cycle STLC",
        "RouterModule",
        "Ntier Architecture Used HTML5 CSS3",
        "Present Working",
        "Onion Architecture Repository Pattern",
        "Work Experience Software Developer",
        "Design Single Page Application",
        "Waterfall",
        "WCF Application",
        "Presentation Business and Data Access Layers",
        "Implemented Net Security",
        "Form Validation",
        "Applied Route Guard",
        "Analysis Design Programming Testing and Deployment Worked with Bootstrap",
        "jQuery",
        "SQL",
        "XML",
        "API QualCare Inc",
        "Software Developer MVCENTITY Bolt",
        "SMA Laboratory Inc Trevose PA June 2014 to November 2015 Rewrite",
        "ASPNET MVC",
        "RXJS",
        "JSON Software Developer",
        "The Neat Company Inc Philadelphia",
        "Software Development Life Cycle SDLC",
        "Diploma",
        "Created Angular",
        "Skills ASP CSS",
        "MVC",
        "Implemented Stored Procedures Views Indexes",
        "FullStack",
        "Created Angular Components",
        "Ajax Users"
    ],
    "experience": "Experience Software Developer Angular 67Web API Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Software Developer Angular 6Web API QualCare Inc Piscataway NJ February 2018 to August 2018 Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Software Developer MVCENTITY Bolt on technology Inc Southampton MA November 2016 to February 2018 Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name i d and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controlsDependency Injection Unity Software Developer MVC WCF The Neat Company Inc Philadelphia PA November 2015 to November 2016 Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON Software Developer Web forms MVC WCF SMA Laboratory Inc Trevose PA June 2014 to November 2015 Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name i d and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Education Masters in Diploma in Computer Software American Advanced Institute of Technology Philadelphia PA March 2012 to May 2014 Skills ASP CSS HTML 5 Javascript",
    "extracted_keywords": [
        "Software",
        "Developer",
        "Angular",
        "API",
        "span",
        "lSoftwarespan",
        "span",
        "lDeveloperspan",
        "Angular",
        "API",
        "Philadelphia",
        "PA",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Software",
        "Developer",
        "Angular",
        "API",
        "Atlantic",
        "Home",
        "Loans",
        "Inc",
        "Parsippany",
        "NJ",
        "August",
        "Present",
        "Working",
        "Agile",
        "Methodologies",
        "development",
        "adaption",
        "requirements",
        "delivery",
        "working",
        "software",
        "Angular",
        "components",
        "modules",
        "services",
        "features",
        "project",
        "functionalities",
        "Web",
        "API",
        "RouterModule",
        "navigation",
        "project",
        "authentication",
        "HTML",
        "CSS3",
        "Bootstrap",
        "Typescript",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "Net",
        "Security",
        "features",
        "Authentication",
        "Authorization",
        "Enable",
        "CORS",
        "communication",
        "project",
        "Web",
        "API",
        "functionality",
        "WEB",
        "API",
        "services",
        "backend",
        "project",
        "manipulate",
        "data",
        "Software",
        "Developer",
        "Angular",
        "API",
        "QualCare",
        "Inc",
        "Piscataway",
        "NJ",
        "February",
        "August",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Programming",
        "Testing",
        "Deployment",
        "Worked",
        "Bootstrap",
        "framework",
        "Angular2",
        "Design",
        "Single",
        "Page",
        "Application",
        "HTML5",
        "CSS3",
        "Typescript",
        "material",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "Angular",
        "Components",
        "Modules",
        "Directives",
        "Services",
        "features",
        "project",
        "functionalities",
        "WEB",
        "API",
        "Observable",
        "RXJS",
        "library",
        "service",
        "layer",
        "subscription",
        "component",
        "Applied",
        "Route",
        "Guard",
        "securing",
        "routes",
        "canActivate",
        "canDeactivate",
        "interfaces",
        "CRUD",
        "operations",
        "http",
        "service",
        "Web",
        "API",
        "methods",
        "Enable",
        "CORS",
        "communication",
        "project",
        "WEB",
        "API",
        "functionality",
        "Software",
        "Developer",
        "MVCENTITY",
        "Bolt",
        "technology",
        "Inc",
        "Southampton",
        "MA",
        "November",
        "February",
        "FullStack",
        "development",
        "Web",
        "applications",
        "technologies",
        "tiers",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "C",
        "end",
        "design",
        "styling",
        "logic",
        "project",
        "Employed",
        "Layout",
        "page",
        "views",
        "view",
        "view",
        "searching",
        "filtering",
        "patient",
        "JavaScript",
        "Ajax",
        "Users",
        "name",
        "i",
        "d",
        "age",
        "page",
        "Application",
        "development",
        "MVC",
        "Model",
        "View",
        "Controller",
        "framework",
        "separation",
        "concerns",
        "code",
        "reusability",
        "components",
        "packages",
        "applications",
        "application",
        "concepts",
        "ASPNET",
        "MVC",
        "Onion",
        "Architecture",
        "Repository",
        "Pattern",
        "project",
        "application",
        "service",
        "feature",
        "units",
        "works",
        "functionality",
        "rest",
        "project",
        "infrastructure",
        "framework",
        "Inversion",
        "controlsDependency",
        "Injection",
        "Unity",
        "Software",
        "Developer",
        "MVC",
        "WCF",
        "Neat",
        "Company",
        "Inc",
        "Philadelphia",
        "PA",
        "November",
        "November",
        "application",
        "concepts",
        "ASPNET",
        "MVC",
        "Ntier",
        "Architecture",
        "HTML5",
        "CSS3",
        "C",
        "end",
        "design",
        "styling",
        "logic",
        "project",
        "Employed",
        "JavaScript",
        "jQuery",
        "AJAX",
        "filtering",
        "jobs",
        "need",
        "page",
        "functionality",
        "frontend",
        "WCF",
        "Application",
        "development",
        "MVC",
        "Model",
        "View",
        "Controller",
        "framework",
        "separation",
        "concerns",
        "code",
        "reusability",
        "components",
        "routing",
        "Authentication",
        "navigability",
        "security",
        "password",
        "Form",
        "Validation",
        "Session",
        "Cookies",
        "users",
        "timeout",
        "connectivity",
        "database",
        "Used",
        "Filter",
        "controller",
        "level",
        "exception",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "hire",
        "requests",
        "Entity",
        "Framework",
        "Database",
        "program",
        "database",
        "Enable",
        "CORS",
        "communication",
        "MVC",
        "project",
        "WCF",
        "functionality",
        "post",
        "actions",
        "data",
        "WCF",
        "form",
        "XML",
        "JSON",
        "Software",
        "Developer",
        "Web",
        "forms",
        "MVC",
        "WCF",
        "SMA",
        "Laboratory",
        "Inc",
        "Trevose",
        "PA",
        "June",
        "November",
        "Rewrite",
        "application",
        "concepts",
        "ASPNET",
        "Web",
        "Forms",
        "MVC",
        "Used",
        "HTML",
        "CSS3",
        "C",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "programming",
        "OOP",
        "C",
        "patient",
        "insurance",
        "information",
        "Pop",
        "window",
        "validation",
        "jQuery",
        "intranet",
        "MVC",
        "application",
        "patient",
        "orders",
        "Modified",
        "procedures",
        "data",
        "tables",
        "information",
        "patient",
        "orders",
        "SQL",
        "server",
        "searching",
        "filtering",
        "patient",
        "JavaScript",
        "Ajax",
        "Users",
        "name",
        "i",
        "d",
        "age",
        "page",
        "read",
        "update",
        "CRUD",
        "functionality",
        "patients",
        "intranet",
        "MVC",
        "application",
        "Modified",
        "Datatable",
        "form",
        "columns",
        "Pop",
        "window",
        "search",
        "patient",
        "Employed",
        "NTier",
        "architecture",
        "Presentation",
        "Business",
        "Data",
        "Access",
        "Layers",
        "CNet",
        "ASPNET",
        "MVC",
        "SQL",
        "An",
        "ADONET",
        "Connection",
        "string",
        "program",
        "database",
        "Stored",
        "Procedures",
        "Views",
        "Indexes",
        "User",
        "Defined",
        "Functions",
        "data",
        "database",
        "SQL",
        "Server",
        "Exposure",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Test",
        "Life",
        "Cycle",
        "STLC",
        "Waterfall",
        "methodology",
        "Education",
        "Masters",
        "Diploma",
        "Computer",
        "Software",
        "American",
        "Advanced",
        "Institute",
        "Technology",
        "Philadelphia",
        "PA",
        "March",
        "May",
        "Skills",
        "ASP",
        "CSS",
        "HTML",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:15:58.317305",
    "resume_data": "Software Developer Angular 67Web API span lSoftwarespan span lDeveloperspan Angular 67Web API Philadelphia PA Authorized to work in the US for any employer Work Experience Software Developer Angular 67Web API Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Software Developer Angular 6Web API QualCare Inc Piscataway NJ February 2018 to August 2018 Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Software Developer MVCENTITY Bolt on technology Inc Southampton MA November 2016 to February 2018 Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controlsDependency Injection Unity Software Developer MVC WCF The Neat Company Inc Philadelphia PA November 2015 to November 2016 Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON Software Developer Web forms MVC WCF SMA Laboratory Inc Trevose PA June 2014 to November 2015 Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Education Masters in Diploma in Computer Software American Advanced Institute of Technology Philadelphia PA March 2012 to May 2014 Skills ASP CSS HTML 5 Javascript",
    "unique_id": "a4b9d054-7162-44f9-bf41-09d8a3bc6186"
}