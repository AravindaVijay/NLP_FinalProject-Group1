{
    "clean_data": "JavaApplication Developer span lJavaspanApplication span lDeveloperspan JavaApplication Developer Johnson Johnson Bridgewater NJ Work Experience JavaApplication Developer Johnson Johnson Bridgewater NJ March 2018 to Present Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application developed using AGILE methodology Managed all phases of Software Development Life Cycle including design development and bugfixing Developed and debugged the applications and services using Spring Tool Suite Developed and configured automation processes as per Technical design document TDD to meet the defined requirements Consumed external web servicesAPIs to support the functionalities in the services and involved in publishing of the web services Service layer was implemented using Spring Integration and IOC Framework Developed Batch processing jobs using Spring Batch Framework Maintaining Git branches during project development Conduct merge and using maven to build and deploying the services to the server Experience in handling MultiThreading Environments Client Server architecture Extensively involved in creating complex SQL queries and calling Stored Procedures Worked extensively with Jenkins for Continuous Integration and Continuous Deployment of the application Worked on UNIX environment for deployments and Unix Shell Scripting was used for scheduling batch jobs Used SVN and GitLab to manage the versioning merging the code and migrated the code from SVN to GIT Used SONAR tool to maintain code quality compliance Performed Unit testing for various modules using JUnits Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Version control and Management is done using Bitbucket Apache Maven as the software build tool and Log4J for logging errors and messages Configured local environment such as Jdbc Webservice urls and Qcfs using WebSphere Server and configuring property files Used Github extensively as versioning tool and used Maven for automated building of projects Used JIRA tracking tool to manage and track the issues reported by QA and prioritize and act based on the severity Transferring and receiving of input and output files from and to different clients through MBOX Used Agile principles to implement the projects using twoweek sprints planning meeting daily standups grooming estimation and retrospectives Working on the Service Request from production like Data issues configuration issues also worked on enhancements as required by the business users Provided 247 support for the project as required Environment Java 17 Hibernate Spring MVC JDBC JSP Html5 CSS3 jQuery JavaScript Maven JBOSS Junit Web Logic Eclipse Oracle 10g11g GIT Apache Tomcat Web services REST Windows 81 SVN Eclipse JIRA Java Developer SunEra Technologies Hyderabad Telangana January 2015 to December 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked with core Java technologies like MultiThreading and synchronization Used AWS SDK to connect with Amazon SQS for bulk email processing Tested the Web services using SOAPUI and by writing Web service client in Java for transmitting the offenders information in XML data using the WSDL provided Strong experience in deploying J2EE components on JBoss Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Implemented a messaging API to sendreceive messages pull messages from thirdparty messaging providers using Java SpringBoot microservices and MongoDB Implemented functionality using Spring IO Spring Boot and Hibernate ORM Experience building REST Apis in Java and NodeJS using Springboot and ExpressJS respectively Implemented Docker mavenplugin and maven pom to build Docker images for all Microservices and later used Docker file to build the Docker images from the java jar files Used MAVEN as a build tool on java projects for development of build artifacts on the source code Configured Kickstart and Jumpstart servers to initiate installation of RedHat Linux and Solaris on several machines at once Creation of WebLogic domains and setup Admin Managed servers for JAVAJ2EE applications on NonProduction and Production environments Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Used advanced core java features like annotations generics enhanced for loop etc throughout the application Developed a Javabased ETL tool which extracts data from sources like MySQL and dumps data in the target tables in MySQL database Maintained version control of the Java files with SVN and GIT Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Experienced in building Java application using make files Ant utility Shell Scripts Involved in Installing Configuring and Upgrading of RedHat Linux AS 45 Solaris 91 0 operating systems Experienced in Red Hat Enterprise Linux 4x 5x 6x 7x Debian CentOS 4x 5x suse Linux Oracle Enterprise Linux Solaris 8910 and VMware vSphere ESX ESXi environment Also involved in migrating Linux Windows servers to cloud AWS and testing Environment Java J2EE REST SOAP HTML 5 CSS XML WebServices JSON Bootstrap JUNIT HTML CSS JavaScript AWS SQL Jenkins GIT JavaJ2EE Developer Apollo HealthCare Hyderabad Telangana June 2014 to December 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Designed Use case diagrams Class diagrams and Sequence diagrams using UML Developed web pages using HTML CSS and JavaScript Created architecture towards a Microservices approach using RESTful java webservices framework Involved in using Core java concepts Collections Exception Handling MultiThreading Developed and implemented DAO design pattern including JSP Servlets FormBeans and DAO classes and another Java APIs Used Message Driven Beans for asynchronous messaging Used Java Message Service API to create send receive and read messages between application components Used JSON for storing and exchanging test information as it is smaller and easier to parse compared to XML Provided connections using JDBC to the database and developed SQL queries to manipulate the data Integrated usage of CRUD operations performed InnerOuter joins used stored procedures stored functions and cursors using Oracle PLSQL Performed unit testing using JUnitto have defect free application code Environment Java 16 Core JavaJ2EE WebSphere HTML CSS JSON XML JSP Servlets JDBC Multithreading SQL Oracle JUnit ANT Log4j Education Masters Additional Information Skills Project Management Strategic Planning Resource Allocation Effective Communication Team Collaboration Technical Proficiencies Languages JavaJ2EE JavaScript Cloud Technologies AWS Web Technologies JSON JSP Servlets XML HTML CSS JavaScript JMS Databases MS SQL Server MySQL Scripting Languages UNIX Shell Scripting Perl Scripting Ruby JSON Operating Servers UNIX Windows RedHat Linux CentOS Network Protocols TCPIP DHCP DNS SNMP SMTP Ethernet NFS Methodologies SDLC Agile J2EE Design Patterns Documentation Microsoft Word Excel PowerPoint IDEs Eclipse",
    "entities": [
        "GIT",
        "Apollo HealthCare Hyderabad",
        "Springboot",
        "REST Apis",
        "Red Hat",
        "Qcfs",
        "WebSphere Server",
        "HTML CSS",
        "Developed",
        "API",
        "DAO",
        "CRUD",
        "SONAR",
        "Creation of WebLogic",
        "QA",
        "Maven",
        "JavaScript Created",
        "Oracle PLSQL Performed",
        "Spring MVC",
        "ExpressJS",
        "MultiThreading",
        "AWS",
        "Working on the Service Request",
        "Sequence",
        "Linux Oracle Enterprise",
        "Microsoft",
        "Core",
        "JSP Servlets FormBeans",
        "Spring Batch Framework Maintaining Git",
        "SQL Jenkins",
        "MBOX",
        "Amazon SQS",
        "UML Developed",
        "Present Responsibilities Involved",
        "SVN",
        "AGILE",
        "Performed Unit",
        "Amazon",
        "VMware vSphere ESX",
        "CSS",
        "JSP",
        "CSS XML WebServices",
        "SQL",
        "Solaris",
        "NonProduction",
        "Spring Integration",
        "Jenkins for Continuous Integration",
        "Data",
        "XML",
        "MultiThreading Environments",
        "Version",
        "MAVEN",
        "TDD",
        "IBM WebSphere",
        "Docker",
        "Software Development Life Cycle SDLC",
        "Maintained",
        "Software Development Life Cycle",
        "JBoss Apache Tomcat BEA WebLogic",
        "GitLab",
        "JavaApplication Developer",
        "XML Provided",
        "InnerOuter"
    ],
    "experience": "Experience JavaApplication Developer Johnson Johnson Bridgewater NJ March 2018 to Present Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application developed using AGILE methodology Managed all phases of Software Development Life Cycle including design development and bugfixing Developed and debugged the applications and services using Spring Tool Suite Developed and configured automation processes as per Technical design document TDD to meet the defined requirements Consumed external web servicesAPIs to support the functionalities in the services and involved in publishing of the web services Service layer was implemented using Spring Integration and IOC Framework Developed Batch processing jobs using Spring Batch Framework Maintaining Git branches during project development Conduct merge and using maven to build and deploying the services to the server Experience in handling MultiThreading Environments Client Server architecture Extensively involved in creating complex SQL queries and calling Stored Procedures Worked extensively with Jenkins for Continuous Integration and Continuous Deployment of the application Worked on UNIX environment for deployments and Unix Shell Scripting was used for scheduling batch jobs Used SVN and GitLab to manage the versioning merging the code and migrated the code from SVN to GIT Used SONAR tool to maintain code quality compliance Performed Unit testing for various modules using JUnits Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Version control and Management is done using Bitbucket Apache Maven as the software build tool and Log4J for logging errors and messages Configured local environment such as Jdbc Webservice urls and Qcfs using WebSphere Server and configuring property files Used Github extensively as versioning tool and used Maven for automated building of projects Used JIRA tracking tool to manage and track the issues reported by QA and prioritize and act based on the severity Transferring and receiving of input and output files from and to different clients through MBOX Used Agile principles to implement the projects using twoweek sprints planning meeting daily standups grooming estimation and retrospectives Working on the Service Request from production like Data issues configuration issues also worked on enhancements as required by the business users Provided 247 support for the project as required Environment Java 17 Hibernate Spring MVC JDBC JSP Html5 CSS3 jQuery JavaScript Maven JBOSS Junit Web Logic Eclipse Oracle 10g11 g GIT Apache Tomcat Web services REST Windows 81 SVN Eclipse JIRA Java Developer SunEra Technologies Hyderabad Telangana January 2015 to December 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked with core Java technologies like MultiThreading and synchronization Used AWS SDK to connect with Amazon SQS for bulk email processing Tested the Web services using SOAPUI and by writing Web service client in Java for transmitting the offenders information in XML data using the WSDL provided Strong experience in deploying J2EE components on JBoss Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Implemented a messaging API to sendreceive messages pull messages from thirdparty messaging providers using Java SpringBoot microservices and MongoDB Implemented functionality using Spring IO Spring Boot and Hibernate ORM Experience building REST Apis in Java and NodeJS using Springboot and ExpressJS respectively Implemented Docker mavenplugin and maven pom to build Docker images for all Microservices and later used Docker file to build the Docker images from the java jar files Used MAVEN as a build tool on java projects for development of build artifacts on the source code Configured Kickstart and Jumpstart servers to initiate installation of RedHat Linux and Solaris on several machines at once Creation of WebLogic domains and setup Admin Managed servers for JAVAJ2EE applications on NonProduction and Production environments Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Used advanced core java features like annotations generics enhanced for loop etc throughout the application Developed a Javabased ETL tool which extracts data from sources like MySQL and dumps data in the target tables in MySQL database Maintained version control of the Java files with SVN and GIT Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Experienced in building Java application using make files Ant utility Shell Scripts Involved in Installing Configuring and Upgrading of RedHat Linux AS 45 Solaris 91 0 operating systems Experienced in Red Hat Enterprise Linux 4x 5x 6x 7x Debian CentOS 4x 5x suse Linux Oracle Enterprise Linux Solaris 8910 and VMware vSphere ESX ESXi environment Also involved in migrating Linux Windows servers to cloud AWS and testing Environment Java J2EE REST SOAP HTML 5 CSS XML WebServices JSON Bootstrap JUNIT HTML CSS JavaScript AWS SQL Jenkins GIT JavaJ2EE Developer Apollo HealthCare Hyderabad Telangana June 2014 to December 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Designed Use case diagrams Class diagrams and Sequence diagrams using UML Developed web pages using HTML CSS and JavaScript Created architecture towards a Microservices approach using RESTful java webservices framework Involved in using Core java concepts Collections Exception Handling MultiThreading Developed and implemented DAO design pattern including JSP Servlets FormBeans and DAO classes and another Java APIs Used Message Driven Beans for asynchronous messaging Used Java Message Service API to create send receive and read messages between application components Used JSON for storing and exchanging test information as it is smaller and easier to parse compared to XML Provided connections using JDBC to the database and developed SQL queries to manipulate the data Integrated usage of CRUD operations performed InnerOuter joins used stored procedures stored functions and cursors using Oracle PLSQL Performed unit testing using JUnitto have defect free application code Environment Java 16 Core JavaJ2EE WebSphere HTML CSS JSON XML JSP Servlets JDBC Multithreading SQL Oracle JUnit ANT Log4j Education Masters Additional Information Skills Project Management Strategic Planning Resource Allocation Effective Communication Team Collaboration Technical Proficiencies Languages JavaJ2EE JavaScript Cloud Technologies AWS Web Technologies JSON JSP Servlets XML HTML CSS JavaScript JMS Databases MS SQL Server MySQL Scripting Languages UNIX Shell Scripting Perl Scripting Ruby JSON Operating Servers UNIX Windows RedHat Linux CentOS Network Protocols TCPIP DHCP DNS SNMP SMTP Ethernet NFS Methodologies SDLC Agile J2EE Design Patterns Documentation Microsoft Word Excel PowerPoint IDEs Eclipse",
    "extracted_keywords": [
        "JavaApplication",
        "Developer",
        "span",
        "lJavaspanApplication",
        "span",
        "lDeveloperspan",
        "JavaApplication",
        "Developer",
        "Johnson",
        "Johnson",
        "Bridgewater",
        "NJ",
        "Work",
        "Experience",
        "JavaApplication",
        "Developer",
        "Johnson",
        "Johnson",
        "Bridgewater",
        "NJ",
        "March",
        "Present",
        "Responsibilities",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "application",
        "methodology",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "design",
        "development",
        "Developed",
        "applications",
        "services",
        "Spring",
        "Tool",
        "Suite",
        "Developed",
        "automation",
        "processes",
        "design",
        "document",
        "TDD",
        "requirements",
        "web",
        "servicesAPIs",
        "functionalities",
        "services",
        "publishing",
        "web",
        "services",
        "Service",
        "layer",
        "Spring",
        "Integration",
        "IOC",
        "Framework",
        "Developed",
        "Batch",
        "processing",
        "jobs",
        "Spring",
        "Batch",
        "Framework",
        "Maintaining",
        "Git",
        "branches",
        "project",
        "development",
        "Conduct",
        "maven",
        "services",
        "server",
        "Experience",
        "MultiThreading",
        "Environments",
        "Client",
        "Server",
        "architecture",
        "SQL",
        "queries",
        "Procedures",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "application",
        "UNIX",
        "environment",
        "deployments",
        "Unix",
        "Shell",
        "Scripting",
        "scheduling",
        "batch",
        "jobs",
        "SVN",
        "GitLab",
        "versioning",
        "code",
        "code",
        "SVN",
        "GIT",
        "Used",
        "SONAR",
        "tool",
        "code",
        "quality",
        "compliance",
        "Performed",
        "Unit",
        "testing",
        "modules",
        "JUnits",
        "Jenkins",
        "CICD",
        "applications",
        "Jenkins",
        "script",
        "automation",
        "build",
        "jobs",
        "Version",
        "control",
        "Management",
        "Bitbucket",
        "Apache",
        "Maven",
        "software",
        "tool",
        "errors",
        "messages",
        "environment",
        "Jdbc",
        "Webservice",
        "urls",
        "Qcfs",
        "WebSphere",
        "Server",
        "property",
        "files",
        "Github",
        "tool",
        "Maven",
        "building",
        "projects",
        "JIRA",
        "tool",
        "issues",
        "QA",
        "severity",
        "receiving",
        "input",
        "output",
        "files",
        "clients",
        "MBOX",
        "principles",
        "projects",
        "twoweek",
        "sprints",
        "planning",
        "meeting",
        "standups",
        "estimation",
        "Working",
        "Service",
        "Request",
        "production",
        "Data",
        "issues",
        "configuration",
        "issues",
        "enhancements",
        "business",
        "users",
        "support",
        "project",
        "Environment",
        "Java",
        "Hibernate",
        "Spring",
        "MVC",
        "JDBC",
        "JSP",
        "Html5",
        "CSS3",
        "jQuery",
        "JavaScript",
        "Maven",
        "JBOSS",
        "Junit",
        "Web",
        "Logic",
        "Eclipse",
        "Oracle",
        "g",
        "GIT",
        "Apache",
        "Tomcat",
        "Web",
        "services",
        "REST",
        "SVN",
        "Eclipse",
        "JIRA",
        "Java",
        "Developer",
        "SunEra",
        "Technologies",
        "Hyderabad",
        "Telangana",
        "January",
        "December",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirement",
        "gathering",
        "analysis",
        "architecture",
        "design",
        "development",
        "core",
        "Java",
        "technologies",
        "MultiThreading",
        "synchronization",
        "AWS",
        "SDK",
        "Amazon",
        "SQS",
        "email",
        "processing",
        "Web",
        "services",
        "SOAPUI",
        "Web",
        "service",
        "client",
        "Java",
        "offenders",
        "information",
        "XML",
        "data",
        "WSDL",
        "experience",
        "J2EE",
        "components",
        "JBoss",
        "Apache",
        "Tomcat",
        "BEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "application",
        "exposure",
        "cloud",
        "computing",
        "Amazon",
        "Web",
        "ServicesAWS",
        "API",
        "messages",
        "messages",
        "thirdparty",
        "providers",
        "Java",
        "SpringBoot",
        "microservices",
        "functionality",
        "Spring",
        "IO",
        "Spring",
        "Boot",
        "Hibernate",
        "ORM",
        "Experience",
        "REST",
        "Apis",
        "Java",
        "NodeJS",
        "Springboot",
        "ExpressJS",
        "Docker",
        "mavenplugin",
        "maven",
        "pom",
        "Docker",
        "images",
        "Microservices",
        "Docker",
        "file",
        "Docker",
        "images",
        "jar",
        "files",
        "MAVEN",
        "build",
        "tool",
        "projects",
        "development",
        "build",
        "artifacts",
        "source",
        "code",
        "Configured",
        "Kickstart",
        "Jumpstart",
        "servers",
        "installation",
        "RedHat",
        "Linux",
        "Solaris",
        "machines",
        "Creation",
        "WebLogic",
        "domains",
        "setup",
        "Admin",
        "Managed",
        "servers",
        "JAVAJ2EE",
        "applications",
        "NonProduction",
        "Production",
        "environments",
        "Java",
        "EE",
        "components",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "transactions",
        "Spring",
        "security",
        "modules",
        "core",
        "annotations",
        "generics",
        "loop",
        "application",
        "Javabased",
        "ETL",
        "tool",
        "data",
        "sources",
        "MySQL",
        "data",
        "target",
        "tables",
        "MySQL",
        "database",
        "version",
        "control",
        "Java",
        "files",
        "SVN",
        "GIT",
        "code",
        "review",
        "sessions",
        "GIT",
        "version",
        "control",
        "GIT",
        "Bash",
        "GIT",
        "interactions",
        "Java",
        "application",
        "files",
        "Ant",
        "utility",
        "Shell",
        "Scripts",
        "Configuring",
        "Upgrading",
        "RedHat",
        "Linux",
        "Solaris",
        "operating",
        "systems",
        "Red",
        "Hat",
        "Enterprise",
        "Linux",
        "5x",
        "7x",
        "Debian",
        "CentOS",
        "4x",
        "suse",
        "Linux",
        "Oracle",
        "Enterprise",
        "Linux",
        "Solaris",
        "VMware",
        "vSphere",
        "ESX",
        "ESXi",
        "environment",
        "Linux",
        "Windows",
        "servers",
        "AWS",
        "Environment",
        "Java",
        "J2EE",
        "REST",
        "HTML",
        "CSS",
        "XML",
        "WebServices",
        "JSON",
        "Bootstrap",
        "JUNIT",
        "HTML",
        "CSS",
        "JavaScript",
        "SQL",
        "Jenkins",
        "GIT",
        "JavaJ2EE",
        "Developer",
        "Apollo",
        "HealthCare",
        "Hyderabad",
        "Telangana",
        "June",
        "December",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Use",
        "case",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "UML",
        "Developed",
        "web",
        "pages",
        "HTML",
        "CSS",
        "JavaScript",
        "architecture",
        "Microservices",
        "approach",
        "webservices",
        "framework",
        "Core",
        "concepts",
        "Collections",
        "Exception",
        "Handling",
        "MultiThreading",
        "Developed",
        "DAO",
        "design",
        "pattern",
        "JSP",
        "Servlets",
        "FormBeans",
        "DAO",
        "classes",
        "Java",
        "APIs",
        "Message",
        "Driven",
        "Beans",
        "messaging",
        "Java",
        "Message",
        "Service",
        "API",
        "messages",
        "application",
        "components",
        "JSON",
        "test",
        "information",
        "XML",
        "connections",
        "JDBC",
        "database",
        "SQL",
        "queries",
        "data",
        "usage",
        "CRUD",
        "operations",
        "InnerOuter",
        "procedures",
        "functions",
        "cursors",
        "Oracle",
        "PLSQL",
        "Performed",
        "unit",
        "testing",
        "JUnitto",
        "application",
        "code",
        "Environment",
        "Java",
        "Core",
        "JavaJ2EE",
        "WebSphere",
        "HTML",
        "CSS",
        "JSON",
        "XML",
        "JSP",
        "Servlets",
        "JDBC",
        "Multithreading",
        "SQL",
        "Oracle",
        "JUnit",
        "ANT",
        "Log4j",
        "Education",
        "Masters",
        "Additional",
        "Information",
        "Skills",
        "Project",
        "Management",
        "Strategic",
        "Planning",
        "Resource",
        "Allocation",
        "Effective",
        "Communication",
        "Team",
        "Collaboration",
        "Technical",
        "Proficiencies",
        "Languages",
        "JavaJ2EE",
        "JavaScript",
        "Cloud",
        "Technologies",
        "AWS",
        "Web",
        "Technologies",
        "JSON",
        "JSP",
        "Servlets",
        "XML",
        "HTML",
        "CSS",
        "JavaScript",
        "JMS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "Scripting",
        "Languages",
        "UNIX",
        "Shell",
        "Scripting",
        "Perl",
        "Scripting",
        "Ruby",
        "JSON",
        "Operating",
        "Servers",
        "UNIX",
        "Windows",
        "RedHat",
        "Linux",
        "CentOS",
        "Network",
        "Protocols",
        "DNS",
        "SNMP",
        "SMTP",
        "Ethernet",
        "NFS",
        "Methodologies",
        "SDLC",
        "Agile",
        "J2EE",
        "Design",
        "Patterns",
        "Documentation",
        "Microsoft",
        "Word",
        "Excel",
        "PowerPoint"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:58:20.801855",
    "resume_data": "JavaApplication Developer span lJavaspanApplication span lDeveloperspan JavaApplication Developer Johnson Johnson Bridgewater NJ Work Experience JavaApplication Developer Johnson Johnson Bridgewater NJ March 2018 to Present Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application developed using AGILE methodology Managed all phases of Software Development Life Cycle including design development and bugfixing Developed and debugged the applications and services using Spring Tool Suite Developed and configured automation processes as per Technical design document TDD to meet the defined requirements Consumed external web servicesAPIs to support the functionalities in the services and involved in publishing of the web services Service layer was implemented using Spring Integration and IOC Framework Developed Batch processing jobs using Spring Batch Framework Maintaining Git branches during project development Conduct merge and using maven to build and deploying the services to the server Experience in handling MultiThreading Environments Client Server architecture Extensively involved in creating complex SQL queries and calling Stored Procedures Worked extensively with Jenkins for Continuous Integration and Continuous Deployment of the application Worked on UNIX environment for deployments and Unix Shell Scripting was used for scheduling batch jobs Used SVN and GitLab to manage the versioning merging the code and migrated the code from SVN to GIT Used SONAR tool to maintain code quality compliance Performed Unit testing for various modules using JUnits Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Version control and Management is done using Bitbucket Apache Maven as the software build tool and Log4J for logging errors and messages Configured local environment such as Jdbc Webservice urls and Qcfs using WebSphere Server and configuring property files Used Github extensively as versioning tool and used Maven for automated building of projects Used JIRA tracking tool to manage and track the issues reported by QA and prioritize and act based on the severity Transferring and receiving of input and output files from and to different clients through MBOX Used Agile principles to implement the projects using twoweek sprints planning meeting daily standups grooming estimation and retrospectives Working on the Service Request from production like Data issues configuration issues also worked on enhancements as required by the business users Provided 247 support for the project as required Environment Java 17 Hibernate Spring MVC JDBC JSP Html5 CSS3 jQuery JavaScript Maven JBOSS Junit Web Logic Eclipse Oracle 10g11g GIT Apache Tomcat Web services REST Windows 81 SVN Eclipse JIRA Java Developer SunEra Technologies Hyderabad Telangana January 2015 to December 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked with core Java technologies like MultiThreading and synchronization Used AWS SDK to connect with Amazon SQS for bulk email processing Tested the Web services using SOAPUI and by writing Web service client in Java for transmitting the offenders information in XML data using the WSDL provided Strong experience in deploying J2EE components on JBoss Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Implemented a messaging API to sendreceive messages pull messages from thirdparty messaging providers using Java SpringBoot microservices and MongoDB Implemented functionality using Spring IO Spring Boot and Hibernate ORM Experience building REST Apis in Java and NodeJS using Springboot and ExpressJS respectively Implemented Docker mavenplugin and maven pom to build Docker images for all Microservices and later used Docker file to build the Docker images from the java jar files Used MAVEN as a build tool on java projects for development of build artifacts on the source code Configured Kickstart and Jumpstart servers to initiate installation of RedHat Linux and Solaris on several machines at once Creation of WebLogic domains and setup Admin Managed servers for JAVAJ2EE applications on NonProduction and Production environments Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Used advanced core java features like annotations generics enhanced for loop etc throughout the application Developed a Javabased ETL tool which extracts data from sources like MySQL and dumps data in the target tables in MySQL database Maintained version control of the Java files with SVN and GIT Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Experienced in building Java application using make files Ant utility Shell Scripts Involved in Installing Configuring and Upgrading of RedHat Linux AS 45 Solaris 91 0 operating systems Experienced in Red Hat Enterprise Linux 4x 5x 6x 7x Debian CentOS 4x 5x suse Linux Oracle Enterprise Linux Solaris 8910 and VMware vSphere ESX ESXi environment Also involved in migrating Linux Windows servers to cloud AWS and testing Environment Java J2EE REST SOAP HTML 5 CSS XML WebServices JSON Bootstrap JUNIT HTML CSS JavaScript AWS SQL Jenkins GIT JavaJ2EE Developer Apollo HealthCare Hyderabad Telangana June 2014 to December 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Designed Use case diagrams Class diagrams and Sequence diagrams using UML Developed web pages using HTML CSS and JavaScript Created architecture towards a Microservices approach using RESTful java webservices framework Involved in using Core java concepts Collections Exception Handling MultiThreading Developed and implemented DAO design pattern including JSP Servlets FormBeans and DAO classes and another Java APIs Used Message Driven Beans for asynchronous messaging Used Java Message Service API to create send receive and read messages between application components Used JSON for storing and exchanging test information as it is smaller and easier to parse compared to XML Provided connections using JDBC to the database and developed SQL queries to manipulate the data Integrated usage of CRUD operations performed InnerOuter joins used stored procedures stored functions and cursors using Oracle PLSQL Performed unit testing using JUnitto have defect free application code Environment Java 16 Core JavaJ2EE WebSphere HTML CSS JSON XML JSP Servlets JDBC Multithreading SQL Oracle JUnit ANT Log4j Education Masters Additional Information Skills Project Management Strategic Planning Resource Allocation Effective Communication Team Collaboration Technical Proficiencies Languages JavaJ2EE JavaScript Cloud Technologies AWS Web Technologies JSON JSP Servlets XML HTML CSS JavaScript JMS Databases MS SQL Server MySQL Scripting Languages UNIX Shell Scripting Perl Scripting Ruby JSON Operating Servers UNIX Windows RedHat Linux CentOS Network Protocols TCPIP DHCP DNS SNMP SMTP Ethernet NFS Methodologies SDLC Agile J2EE Design Patterns Documentation Microsoft Word Excel PowerPoint IDEs Eclipse",
    "unique_id": "ff00add7-5483-4b9b-afaf-fa748785c188"
}