{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Office Depot Boca Raton FL FL Over 5 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecture based enterprise application software in Python on various domains Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Expert in Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python and Django Handy experience in developing WebApplications implementing Model View Control architecture using Django Flask frameworks Experienced in developing webbased applications using Python Django MVC3 Bootstrap and HTML5 Experienced in developing Web Services with Python programming language Experience in Amazon AWS Cloud platform and its features Strong experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Office Depot Boca Raton FL November 2017 to Present Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Workied with Python ORM Libraries including Django ORM Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interfacUsed PyQuery for selecting particular DOM elements when parsing HTML 5 Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Worked with JSON based REST Web services and Amazon Web services AWS Developed different REST APIs in Jinja2 and flask framework with using Python scripting Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS3 HTML framework Developed user interfaces using HTML5 and JavaScript Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 37 Java PyUnit Pandas HTML5 DHTML AJAX CSS3 JavaScript Django Jinja2 Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Comerica Bank Brea CA August 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Redbrick Health February 2015 to July 2016 Responsibilities Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the front end functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Developer Python Developer Prudential Financials Newark NJ September 2013 to January 2015 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Developed application for Google Analytics aggregation and reporting Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Responsible for debugging the project monitored on JIRA Agile Developed Python batch processors to consume and produce various feeds Generated PDF daily and Monthly statements using Aspose PDF Kit Developed internal auxiliary web apps using Python Flask framework with CSSHTML framework Implemented Test Driven Development TDD strategy for the project Using Subversion version control tool to coordinate teamdevelopment Generated property list for every application dynamically using Python Wrote validation scripts in SQL to validate data loading Created a Git repository and added the project to GitHub Environment Python Django MySQL HTML XHTML CSS AJAX JavaScript Apache Web Server Git Linux Skills AJAX 5 years JAVASCRIPT 5 years PYTHON 5 years SQL 5 years MYSQL 4 years Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Jinja2 Databases MS SQL MySQL Oracle Web Technologies XML CSS3 HTML5 DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "entities": [
        "Python Flask",
        "Developed SQL Queries Stored Procedures",
        "HTML Python",
        "Generated",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Pandas",
        "Integrated Development Environments",
        "Djangos Test Module Designed",
        "Developed",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "GUI",
        "FL",
        "Native SQL Created PyUnit",
        "GitHub Environment Python Django MySQL HTML XHTML CSS AJAX",
        "NGINX",
        "Amazon AWS Cloud",
        "QA",
        "Nodejs Python",
        "Build",
        "HTML AJAX CSS",
        "PDF",
        "Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP",
        "lDeveloperspan Python Developer Office Depot",
        "UNIX",
        "Djangos",
        "Developed Business Logic",
        "Windows Created",
        "Git",
        "Framework FlaskDjango Jinja2",
        "UI",
        "Python Wrote",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Python Developer Office Depot",
        "Interfacing",
        "Google Analytics",
        "WebApplications",
        "Utilize PyUnit",
        "Oracle SQL Developer Python Developer Prudential Financials Newark NJ",
        "Present Responsibilities Involved",
        "Generated Python Django Forms",
        "HTML5",
        "GC",
        "Implemented Test Driven Development TDD",
        "Panda",
        "Created Data",
        "Python ORM Libraries",
        "SQL",
        "Oracle SQL",
        "REST",
        "XML",
        "GitHub",
        "Amazon AWS",
        "Python Django MVC3",
        "lPythonspan",
        "Created PyUnit",
        "Utilized Agile",
        "JIRA",
        "DOM",
        "MySQL Worked",
        "GC Implemented",
        "Analysis Design Development Implementation and Testing",
        "Shell",
        "Worked with JSON",
        "Jinja2",
        "Using Subversion",
        "Views",
        "Created a Git",
        "Oracle Web Technologies XML",
        "PyQt",
        "Wireshark",
        "Model View Control",
        "Amazon",
        "Linux Python Developer Comerica Bank",
        "GitHub Utilized Agile"
    ],
    "experience": "Experience in Amazon AWS Cloud platform and its features Strong experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Office Depot Boca Raton FL November 2017 to Present Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Workied with Python ORM Libraries including Django ORM Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interfacUsed PyQuery for selecting particular DOM elements when parsing HTML 5 Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Worked with JSON based REST Web services and Amazon Web services AWS Developed different REST APIs in Jinja2 and flask framework with using Python scripting Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS3 HTML framework Developed user interfaces using HTML5 and JavaScript Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 37 Java PyUnit Pandas HTML5 DHTML AJAX CSS3 JavaScript Django Jinja2 Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Comerica Bank Brea CA August 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Redbrick Health February 2015 to July 2016 Responsibilities Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the front end functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Developer Python Developer Prudential Financials Newark NJ September 2013 to January 2015 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Developed application for Google Analytics aggregation and reporting Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Responsible for debugging the project monitored on JIRA Agile Developed Python batch processors to consume and produce various feeds Generated PDF daily and Monthly statements using Aspose PDF Kit Developed internal auxiliary web apps using Python Flask framework with CSSHTML framework Implemented Test Driven Development TDD strategy for the project Using Subversion version control tool to coordinate teamdevelopment Generated property list for every application dynamically using Python Wrote validation scripts in SQL to validate data loading Created a Git repository and added the project to GitHub Environment Python Django MySQL HTML XHTML CSS AJAX JavaScript Apache Web Server Git Linux Skills AJAX 5 years JAVASCRIPT 5 years PYTHON 5 years SQL 5 years MYSQL 4 years Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Jinja2 Databases MS SQL MySQL Oracle Web Technologies XML CSS3 HTML5 DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Office",
        "Depot",
        "Boca",
        "Raton",
        "FL",
        "FL",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "standalone",
        "architecture",
        "enterprise",
        "application",
        "software",
        "Python",
        "domains",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "Expert",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "Handy",
        "experience",
        "WebApplications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "frameworks",
        "applications",
        "Python",
        "Django",
        "MVC3",
        "Bootstrap",
        "HTML5",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "Amazon",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "networkx",
        "urllib2",
        "MySQLdb",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "Python",
        "programming",
        "language",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "Experience",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Experience",
        "Object",
        "Python",
        "Hash",
        "Tables",
        "Dictionaries",
        "Multithreading",
        "Django",
        "MYSQL",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "MongoDB",
        "Cassandra",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "knowledge",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Ability",
        "technologies",
        "communication",
        "skills",
        "team",
        "player",
        "ability",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Office",
        "Depot",
        "Boca",
        "Raton",
        "FL",
        "November",
        "Present",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Generated",
        "Python",
        "Django",
        "data",
        "users",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Python",
        "batch",
        "processors",
        "feeds",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "testing",
        "tools",
        "Python",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "websites",
        "data",
        "options",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Jenkins",
        "integration",
        "services",
        "Pandas",
        "library",
        "Analysis",
        "Django",
        "Framework",
        "application",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "REST",
        "APIs",
        "Jinja2",
        "flask",
        "framework",
        "Python",
        "scripting",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Angularjs",
        "Bootstrap",
        "CSS3",
        "HTML",
        "framework",
        "user",
        "interfaces",
        "HTML5",
        "JavaScript",
        "rules",
        "policies",
        "Nodejs",
        "Python",
        "end",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Perl",
        "Linux",
        "Windows",
        "Git",
        "repository",
        "project",
        "GitHub",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Java",
        "PyUnit",
        "Pandas",
        "HTML5",
        "DHTML",
        "AJAX",
        "CSS3",
        "JavaScript",
        "Django",
        "Jinja2",
        "Jenkins",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "REST",
        "Angularjs",
        "Bootstrap",
        "Nodejs",
        "Git",
        "JIRA",
        "Perl",
        "SQL",
        "Agile",
        "windows",
        "Linux",
        "Python",
        "Developer",
        "Comerica",
        "Bank",
        "Brea",
        "CA",
        "August",
        "October",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "stack",
        "APIs",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "JSON",
        "REST",
        "Web",
        "services",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "SQL",
        "GitHub",
        "version",
        "control",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "testing",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "datasets",
        "Panda",
        "data",
        "frames",
        "user",
        "groups",
        "software",
        "issuesservice",
        "requests",
        "bugs",
        "data",
        "types",
        "dictionaries",
        "tuples",
        "concepts",
        "inheritance",
        "algorithms",
        "networks",
        "Environment",
        "Python",
        "Django",
        "JavaScript",
        "JQuery",
        "DOJO",
        "Bootstrap",
        "Nodejs",
        "Angularjs",
        "HTML",
        "DHTML",
        "AJAX",
        "CSS",
        "Open",
        "Stack",
        "API",
        "Panda",
        "ANT",
        "Jenkins",
        "Rake",
        "JIRA",
        "Agile",
        "SQL",
        "Windows",
        "Python",
        "Developer",
        "Redbrick",
        "Health",
        "February",
        "July",
        "Responsibilities",
        "GC",
        "tool",
        "Python",
        "clients",
        "data",
        "risk",
        "spectrum",
        "reinsurance",
        "options",
        "custom",
        "reports",
        "HTML",
        "Python",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "workflow",
        "confluence",
        "wiki",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "performance",
        "index",
        "filtering",
        "columns",
        "customers",
        "analytics",
        "data",
        "GC",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "MySQL",
        "Native",
        "SQL",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "testing",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "navigations",
        "paginations",
        "columns",
        "columns",
        "view",
        "GitHub",
        "version",
        "control",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "development",
        "environment",
        "Environment",
        "Python",
        "PyQT",
        "PyQuery",
        "MySQL",
        "HTML",
        "CSS",
        "JavaScript",
        "DOM",
        "Ajax",
        "AWS",
        "JSON",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "PLSQL",
        "Oracle",
        "SQL",
        "Developer",
        "Python",
        "Developer",
        "Prudential",
        "Financials",
        "Newark",
        "NJ",
        "September",
        "January",
        "Responsibilities",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "UI",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JQuery",
        "JavaScript",
        "Responsible",
        "project",
        "JIRA",
        "Agile",
        "Developed",
        "Python",
        "batch",
        "processors",
        "feeds",
        "PDF",
        "statements",
        "Aspose",
        "PDF",
        "Kit",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSSHTML",
        "framework",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "strategy",
        "project",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "property",
        "list",
        "application",
        "Python",
        "Wrote",
        "validation",
        "scripts",
        "SQL",
        "data",
        "loading",
        "Git",
        "repository",
        "project",
        "GitHub",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Git",
        "Linux",
        "Skills",
        "AJAX",
        "years",
        "JAVASCRIPT",
        "years",
        "PYTHON",
        "years",
        "SQL",
        "years",
        "MYSQL",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "C",
        "Java",
        "Shell",
        "Script",
        "Perl",
        "SQL",
        "PHP",
        "Python",
        "Framework",
        "FlaskDjango",
        "Jinja2",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "Web",
        "Technologies",
        "XML",
        "CSS3",
        "HTML5",
        "DHTML",
        "JavaScript",
        "JQuery",
        "MVC3",
        "Bootstrap",
        "AJAX",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Methodologies",
        "Agile",
        "Scrum",
        "Operating",
        "Systems",
        "Window",
        "UNIX",
        "Linux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:02:37.664309",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Office Depot Boca Raton FL FL Over 5 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecture based enterprise application software in Python on various domains Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Expert in Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python and Django Handy experience in developing WebApplications implementing Model View Control architecture using Django Flask frameworks Experienced in developing webbased applications using Python Django MVC3 Bootstrap and HTML5 Experienced in developing Web Services with Python programming language Experience in Amazon AWS Cloud platform and its features Strong experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Office Depot Boca Raton FL November 2017 to Present Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Workied with Python ORM Libraries including Django ORM Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interfacUsed PyQuery for selecting particular DOM elements when parsing HTML 5 Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Worked with JSON based REST Web services and Amazon Web services AWS Developed different REST APIs in Jinja2 and flask framework with using Python scripting Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS3 HTML framework Developed user interfaces using HTML5 and JavaScript Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 37 Java PyUnit Pandas HTML5 DHTML AJAX CSS3 JavaScript Django Jinja2 Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Comerica Bank Brea CA August 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Redbrick Health February 2015 to July 2016 Responsibilities Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the front end functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Developer Python Developer Prudential Financials Newark NJ September 2013 to January 2015 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Developed application for Google Analytics aggregation and reporting Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Responsible for debugging the project monitored on JIRA Agile Developed Python batch processors to consume and produce various feeds Generated PDF daily and Monthly statements using Aspose PDF Kit Developed internal auxiliary web apps using Python Flask framework with CSSHTML framework Implemented Test Driven Development TDD strategy for the project Using Subversion version control tool to coordinate teamdevelopment Generated property list for every application dynamically using Python Wrote validation scripts in SQL to validate data loading Created a Git repository and added the project to GitHub Environment Python Django MySQL HTML XHTML CSS AJAX JavaScript Apache Web Server Git Linux Skills AJAX 5 years JAVASCRIPT 5 years PYTHON 5 years SQL 5 years MYSQL 4 years Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Jinja2 Databases MS SQL MySQL Oracle Web Technologies XML CSS3 HTML5 DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "unique_id": "4824bd6d-901f-40ea-bfdb-b29ad74bb46b"
}