{
    "clean_data": "Software Engineer Multiple Projects span lSoftwarespan Engineer Multiple Projects Software Engineer Multiple Projects McKinney TX Work Experience Software Engineer Multiple Projects MentorTek Richardson TX September 2017 to August 2019 As a developer with MentorTek I was responsible for mostly sole development of features and enhancements and bug fixes The project stack was mostly Python PostgresMySql and Node based with some using PHP instead of Python We built our front end on ReactJS with webpack and our backend utilized Flask for creating the API endpoints Most of what I was responsible for was upgrading our projects to utilize react 16 from both 14 and 15 introducing redux into our applications and the development of other various React based components I was also responsible for running build processes on several projects when necessary Software Engineer Axxess CAHPS Axxess Technology Solutions Dallas TX October 2015 to September 2017 With Axxess I built or rebuilt multiple parts of the CAHPS product The stack utilized a LEMP stack that included Redis MariaDB and Python and Dotnet Core to automate much of the manual processes we had developed I was the sole developer responsible for creating a more general application decoupled from the CAHPS type Since CAHPS is just a patient satisfaction surveying program it is applicable to Home Health as well as Hospital and other medical facility types I had to rebuild the back end to make it easier for us to manage the actual code base I also rewrote a lot of the front end using CanJS and jQuery as the UI framework The generalized version of the product made for easier to build features that were type specific in nature but generic enough to be used across multiple types I was also responsible for building two separate processes for automation The first was a python script that automated how we generated physical surveys to send to patients The script would validate mailing addresses generate batches of surveys into a PDF based on the address and mailing tray sorting logic and then generate both tray labels and shipping documentation The tray sorting was used to minimize costs and maximize the amount put into a tray When this was finally in use we noticed a reduction in cost even with an increase in overall volume Also the manual process went from a week or longer to a two day process limited only by the physical capability of the printer The other part of the automation process required building an application in dotnet core This allowed for easier connection to our database the strict typing gave me a bit more reliability in data integrity and ability to run each process on an individual thread helped with the large volume This application would take data run statistical comparative analysis on user data and come up with a list of surveyable patients From there it would log different matching scores and store them to the database for further review When the list was cleared for sampling the application would run a separate process that sampled with a stored random seed based on the provider This list of sampled users would then be fed into the file generator and processed for printing All of this was managed with Redis PubSub events and all data was verified by our statistician It actually helped in reducing the amount of manual calculations the statistician had to run Java Developer KUMA REALITY GAMES New York NY May 2015 to October 2015 This was a web based social experience application I was the developer and designed a RESTful API using PHP designed a frontend web UI utilizing HTML5 CSS3 and JavaScript with jQuery requirejs handlebars and backbone I set up the web server utilizing Amazon Web Services and managed developer task assignments I also designed our database using OrientDB graph database to create a custom graph for analytics on user data The stack also included MySql as the primary data store utilized RabbitMQ to manage job scheduling and a centralized Java data processor that worked off of jobs queued by user actions and cron scheduled jobs to keep our graph database up to date with our MySql data store Java Developer Radio of Tomorrow May 2013 to May 2015 As a developer on the radio product I was responsible for development maintenance and improvement of new and legacy code bases The languages we used were PHP for our API JavaScript ActionScript3 HTML5 and CSS3 for our web application and mobile app and Java and Python with some use of batch and shell scripting for data processing Our database was MySQL and we did some light work with ObjectiveC when creating or editing plugins for our mobile apps iOs version Backend Redesign I completely redesigned and implemented the majority of our backend processors and servers We were originally dependent on a connection to our socket server for use of our web products After our team released our web based REST API I was responsible for the complete overhaul of our socket server removing all dependency from it I also rewrote our database connection modules to use pooled connection management as opposed to our direct connection implementation I removed our data processors from the socket server and created a multithreaded process runner that runs several data processors concurrently I also worked on optimizing our algorithms for these data processors For our content media server I rewrote the main control modules for our Wowza based media server and separated the playlist generation processing into its own dedicated processor Finally I redesigned our message dispatcher as a scheduled process runner that executes messaging algorithms based on an external XML configuration Mobile Application Our mobile app was written using Apache Cordova to allow us to build on multiple mobile platforms My involvement ranged from implementing new content slides creating native plugins with JavaScript access components utilizing prototypes implemented for use based on device type Web Application Our website was in its early beta stage when I began my involvement with the team I had been responsible for debugging issues with server side PHP client side flash and JavaScript issues as well as implementing new features When I redesigned our socket server and media server I had to redesign the entire Flash component to conform to our new specifications for connection to both products Java Developer Trainee FDM GROUP New York NY September 2012 to April 2013 As a trainee I attend intense daily professional and technical training programs The programs are designed for the development of communication research and interviewing skills and provide firsthand experience working with Java and related technologies through completion of projects Developer training included full working knowledge and best practices in SQL UNIX shell scripting and Java application and J2EE web application development Education Bachelor of Science in computer science in computer science SUNY College at Oneonta Oneonta NY August 2012",
    "entities": [
        "Java Developer Radio of Tomorrow",
        "API",
        "Oneonta Oneonta",
        "New York",
        "Dallas",
        "PDF",
        "Home Health",
        "apps iOs",
        "MentorTek",
        "JavaScript",
        "SUNY College",
        "UI",
        "Wowza",
        "Software Engineer Multiple Projects",
        "Java Developer Trainee FDM GROUP",
        "Redis PubSub",
        "fed",
        "jQuery",
        "SQL",
        "Flask",
        "XML",
        "Amazon Web Services",
        "Mobile Application Our",
        "PHP",
        "CanJS",
        "TX",
        "MySql"
    ],
    "experience": "Projects span lSoftwarespan Engineer Multiple Projects Software Engineer Multiple Projects McKinney TX Work Experience Software Engineer Multiple Projects MentorTek Richardson TX September 2017 to August 2019 As a developer with MentorTek I was responsible for mostly sole development of features and enhancements and bug fixes The project stack was mostly Python PostgresMySql and Node based with some using PHP instead of Python We built our front end on ReactJS with webpack and our backend utilized Flask for creating the API endpoints Most of what I was responsible for was upgrading our projects to utilize react 16 from both 14 and 15 introducing redux into our applications and the development of other various React based components I was also responsible for running build processes on several projects when necessary Software Engineer Axxess CAHPS Axxess Technology Solutions Dallas TX October 2015 to September 2017 With Axxess I built or rebuilt multiple parts of the CAHPS product The stack utilized a LEMP stack that included Redis MariaDB and Python and Dotnet Core to automate much of the manual processes we had developed I was the sole developer responsible for creating a more general application decoupled from the CAHPS type Since CAHPS is just a patient satisfaction surveying program it is applicable to Home Health as well as Hospital and other medical facility types I had to rebuild the back end to make it easier for us to manage the actual code base I also rewrote a lot of the front end using CanJS and jQuery as the UI framework The generalized version of the product made for easier to build features that were type specific in nature but generic enough to be used across multiple types I was also responsible for building two separate processes for automation The first was a python script that automated how we generated physical surveys to send to patients The script would validate mailing addresses generate batches of surveys into a PDF based on the address and mailing tray sorting logic and then generate both tray labels and shipping documentation The tray sorting was used to minimize costs and maximize the amount put into a tray When this was finally in use we noticed a reduction in cost even with an increase in overall volume Also the manual process went from a week or longer to a two day process limited only by the physical capability of the printer The other part of the automation process required building an application in dotnet core This allowed for easier connection to our database the strict typing gave me a bit more reliability in data integrity and ability to run each process on an individual thread helped with the large volume This application would take data run statistical comparative analysis on user data and come up with a list of surveyable patients From there it would log different matching scores and store them to the database for further review When the list was cleared for sampling the application would run a separate process that sampled with a stored random seed based on the provider This list of sampled users would then be fed into the file generator and processed for printing All of this was managed with Redis PubSub events and all data was verified by our statistician It actually helped in reducing the amount of manual calculations the statistician had to run Java Developer KUMA REALITY GAMES New York NY May 2015 to October 2015 This was a web based social experience application I was the developer and designed a RESTful API using PHP designed a frontend web UI utilizing HTML5 CSS3 and JavaScript with jQuery requirejs handlebars and backbone I set up the web server utilizing Amazon Web Services and managed developer task assignments I also designed our database using OrientDB graph database to create a custom graph for analytics on user data The stack also included MySql as the primary data store utilized RabbitMQ to manage job scheduling and a centralized Java data processor that worked off of jobs queued by user actions and cron scheduled jobs to keep our graph database up to date with our MySql data store Java Developer Radio of Tomorrow May 2013 to May 2015 As a developer on the radio product I was responsible for development maintenance and improvement of new and legacy code bases The languages we used were PHP for our API JavaScript ActionScript3 HTML5 and CSS3 for our web application and mobile app and Java and Python with some use of batch and shell scripting for data processing Our database was MySQL and we did some light work with ObjectiveC when creating or editing plugins for our mobile apps iOs version Backend Redesign I completely redesigned and implemented the majority of our backend processors and servers We were originally dependent on a connection to our socket server for use of our web products After our team released our web based REST API I was responsible for the complete overhaul of our socket server removing all dependency from it I also rewrote our database connection modules to use pooled connection management as opposed to our direct connection implementation I removed our data processors from the socket server and created a multithreaded process runner that runs several data processors concurrently I also worked on optimizing our algorithms for these data processors For our content media server I rewrote the main control modules for our Wowza based media server and separated the playlist generation processing into its own dedicated processor Finally I redesigned our message dispatcher as a scheduled process runner that executes messaging algorithms based on an external XML configuration Mobile Application Our mobile app was written using Apache Cordova to allow us to build on multiple mobile platforms My involvement ranged from implementing new content slides creating native plugins with JavaScript access components utilizing prototypes implemented for use based on device type Web Application Our website was in its early beta stage when I began my involvement with the team I had been responsible for debugging issues with server side PHP client side flash and JavaScript issues as well as implementing new features When I redesigned our socket server and media server I had to redesign the entire Flash component to conform to our new specifications for connection to both products Java Developer Trainee FDM GROUP New York NY September 2012 to April 2013 As a trainee I attend intense daily professional and technical training programs The programs are designed for the development of communication research and interviewing skills and provide firsthand experience working with Java and related technologies through completion of projects Developer training included full working knowledge and best practices in SQL UNIX shell scripting and Java application and J2EE web application development Education Bachelor of Science in computer science in computer science SUNY College at Oneonta Oneonta NY August 2012",
    "extracted_keywords": [
        "Software",
        "Engineer",
        "Multiple",
        "Projects",
        "lSoftwarespan",
        "Engineer",
        "Multiple",
        "Projects",
        "Software",
        "Engineer",
        "Multiple",
        "Projects",
        "McKinney",
        "TX",
        "Work",
        "Experience",
        "Software",
        "Engineer",
        "Multiple",
        "Projects",
        "MentorTek",
        "Richardson",
        "TX",
        "September",
        "August",
        "developer",
        "MentorTek",
        "development",
        "features",
        "enhancements",
        "bug",
        "fixes",
        "project",
        "stack",
        "Python",
        "Node",
        "PHP",
        "Python",
        "end",
        "ReactJS",
        "webpack",
        "backend",
        "Flask",
        "API",
        "projects",
        "react",
        "redux",
        "applications",
        "development",
        "React",
        "components",
        "build",
        "processes",
        "projects",
        "Software",
        "Engineer",
        "Axxess",
        "Axxess",
        "Technology",
        "Solutions",
        "Dallas",
        "TX",
        "October",
        "September",
        "Axxess",
        "parts",
        "product",
        "stack",
        "LEMP",
        "stack",
        "Redis",
        "MariaDB",
        "Python",
        "Dotnet",
        "Core",
        "processes",
        "developer",
        "application",
        "type",
        "CAHPS",
        "satisfaction",
        "surveying",
        "program",
        "Home",
        "Health",
        "Hospital",
        "facility",
        "types",
        "end",
        "code",
        "base",
        "lot",
        "end",
        "CanJS",
        "jQuery",
        "UI",
        "framework",
        "version",
        "product",
        "features",
        "type",
        "nature",
        "types",
        "processes",
        "automation",
        "python",
        "script",
        "surveys",
        "patients",
        "script",
        "mailing",
        "addresses",
        "batches",
        "surveys",
        "PDF",
        "address",
        "tray",
        "logic",
        "labels",
        "shipping",
        "documentation",
        "tray",
        "sorting",
        "costs",
        "amount",
        "tray",
        "use",
        "reduction",
        "cost",
        "increase",
        "volume",
        "process",
        "week",
        "day",
        "process",
        "capability",
        "printer",
        "part",
        "automation",
        "process",
        "application",
        "dotnet",
        "core",
        "connection",
        "database",
        "typing",
        "bit",
        "reliability",
        "data",
        "integrity",
        "ability",
        "process",
        "thread",
        "volume",
        "application",
        "data",
        "analysis",
        "user",
        "data",
        "list",
        "patients",
        "matching",
        "scores",
        "database",
        "review",
        "list",
        "application",
        "process",
        "seed",
        "provider",
        "list",
        "users",
        "file",
        "generator",
        "Redis",
        "PubSub",
        "events",
        "data",
        "statistician",
        "amount",
        "calculations",
        "statistician",
        "Java",
        "Developer",
        "KUMA",
        "REALITY",
        "GAMES",
        "New",
        "York",
        "NY",
        "May",
        "October",
        "web",
        "experience",
        "application",
        "developer",
        "API",
        "PHP",
        "frontend",
        "web",
        "UI",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "requirejs",
        "handlebars",
        "backbone",
        "web",
        "server",
        "Amazon",
        "Web",
        "Services",
        "developer",
        "task",
        "assignments",
        "database",
        "OrientDB",
        "graph",
        "database",
        "custom",
        "graph",
        "analytics",
        "user",
        "data",
        "stack",
        "MySql",
        "data",
        "store",
        "RabbitMQ",
        "job",
        "scheduling",
        "Java",
        "data",
        "processor",
        "jobs",
        "user",
        "actions",
        "cron",
        "jobs",
        "graph",
        "database",
        "date",
        "MySql",
        "data",
        "store",
        "Java",
        "Developer",
        "Radio",
        "Tomorrow",
        "May",
        "May",
        "developer",
        "radio",
        "product",
        "development",
        "maintenance",
        "improvement",
        "legacy",
        "code",
        "bases",
        "languages",
        "PHP",
        "API",
        "JavaScript",
        "ActionScript3",
        "HTML5",
        "CSS3",
        "web",
        "application",
        "app",
        "Java",
        "Python",
        "use",
        "batch",
        "scripting",
        "data",
        "database",
        "MySQL",
        "work",
        "ObjectiveC",
        "plugins",
        "apps",
        "iOs",
        "version",
        "Backend",
        "Redesign",
        "majority",
        "processors",
        "servers",
        "connection",
        "socket",
        "server",
        "use",
        "web",
        "products",
        "team",
        "web",
        "REST",
        "API",
        "overhaul",
        "socket",
        "server",
        "dependency",
        "database",
        "connection",
        "modules",
        "connection",
        "management",
        "connection",
        "implementation",
        "data",
        "processors",
        "socket",
        "server",
        "process",
        "runner",
        "data",
        "processors",
        "algorithms",
        "data",
        "processors",
        "content",
        "media",
        "server",
        "control",
        "modules",
        "Wowza",
        "media",
        "server",
        "playlist",
        "generation",
        "processing",
        "processor",
        "message",
        "dispatcher",
        "process",
        "runner",
        "algorithms",
        "XML",
        "configuration",
        "Mobile",
        "Application",
        "app",
        "Apache",
        "Cordova",
        "platforms",
        "involvement",
        "content",
        "plugins",
        "JavaScript",
        "access",
        "components",
        "prototypes",
        "use",
        "device",
        "type",
        "Web",
        "Application",
        "website",
        "stage",
        "involvement",
        "team",
        "issues",
        "server",
        "side",
        "PHP",
        "client",
        "side",
        "flash",
        "JavaScript",
        "issues",
        "features",
        "socket",
        "server",
        "media",
        "server",
        "Flash",
        "component",
        "specifications",
        "connection",
        "products",
        "Java",
        "Developer",
        "Trainee",
        "FDM",
        "GROUP",
        "New",
        "York",
        "NY",
        "September",
        "April",
        "trainee",
        "training",
        "programs",
        "programs",
        "development",
        "communication",
        "research",
        "skills",
        "experience",
        "Java",
        "technologies",
        "completion",
        "projects",
        "Developer",
        "training",
        "knowledge",
        "practices",
        "SQL",
        "UNIX",
        "shell",
        "scripting",
        "Java",
        "application",
        "J2EE",
        "web",
        "application",
        "development",
        "Education",
        "Bachelor",
        "Science",
        "computer",
        "science",
        "computer",
        "science",
        "SUNY",
        "College",
        "Oneonta",
        "Oneonta",
        "NY",
        "August"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:14:11.530688",
    "resume_data": "Software Engineer Multiple Projects span lSoftwarespan Engineer Multiple Projects Software Engineer Multiple Projects McKinney TX Work Experience Software Engineer Multiple Projects MentorTek Richardson TX September 2017 to August 2019 As a developer with MentorTek I was responsible for mostly sole development of features and enhancements and bug fixes The project stack was mostly Python PostgresMySql and Node based with some using PHP instead of Python We built our front end on ReactJS with webpack and our backend utilized Flask for creating the API endpoints Most of what I was responsible for was upgrading our projects to utilize react 16 from both 14 and 15 introducing redux into our applications and the development of other various React based components I was also responsible for running build processes on several projects when necessary Software Engineer Axxess CAHPS Axxess Technology Solutions Dallas TX October 2015 to September 2017 With Axxess I built or rebuilt multiple parts of the CAHPS product The stack utilized a LEMP stack that included Redis MariaDB and Python and Dotnet Core to automate much of the manual processes we had developed I was the sole developer responsible for creating a more general application decoupled from the CAHPS type Since CAHPS is just a patient satisfaction surveying program it is applicable to Home Health as well as Hospital and other medical facility types I had to rebuild the back end to make it easier for us to manage the actual code base I also rewrote a lot of the front end using CanJS and jQuery as the UI framework The generalized version of the product made for easier to build features that were type specific in nature but generic enough to be used across multiple types I was also responsible for building two separate processes for automation The first was a python script that automated how we generated physical surveys to send to patients The script would validate mailing addresses generate batches of surveys into a PDF based on the address and mailing tray sorting logic and then generate both tray labels and shipping documentation The tray sorting was used to minimize costs and maximize the amount put into a tray When this was finally in use we noticed a reduction in cost even with an increase in overall volume Also the manual process went from a week or longer to a two day process limited only by the physical capability of the printer The other part of the automation process required building an application in dotnet core This allowed for easier connection to our database the strict typing gave me a bit more reliability in data integrity and ability to run each process on an individual thread helped with the large volume This application would take data run statistical comparative analysis on user data and come up with a list of surveyable patients From there it would log different matching scores and store them to the database for further review When the list was cleared for sampling the application would run a separate process that sampled with a stored random seed based on the provider This list of sampled users would then be fed into the file generator and processed for printing All of this was managed with Redis PubSub events and all data was verified by our statistician It actually helped in reducing the amount of manual calculations the statistician had to run Java Developer KUMA REALITY GAMES New York NY May 2015 to October 2015 This was a web based social experience application I was the developer and designed a RESTful API using PHP designed a frontend web UI utilizing HTML5 CSS3 and JavaScript with jQuery requirejs handlebars and backbone I set up the web server utilizing Amazon Web Services and managed developer task assignments I also designed our database using OrientDB graph database to create a custom graph for analytics on user data The stack also included MySql as the primary data store utilized RabbitMQ to manage job scheduling and a centralized Java data processor that worked off of jobs queued by user actions and cron scheduled jobs to keep our graph database up to date with our MySql data store Java Developer Radio of Tomorrow May 2013 to May 2015 As a developer on the radio product I was responsible for development maintenance and improvement of new and legacy code bases The languages we used were PHP for our API JavaScript ActionScript3 HTML5 and CSS3 for our web application and mobile app and Java and Python with some use of batch and shell scripting for data processing Our database was MySQL and we did some light work with ObjectiveC when creating or editing plugins for our mobile apps iOs version Backend Redesign I completely redesigned and implemented the majority of our backend processors and servers We were originally dependent on a connection to our socket server for use of our web products After our team released our web based REST API I was responsible for the complete overhaul of our socket server removing all dependency from it I also rewrote our database connection modules to use pooled connection management as opposed to our direct connection implementation I removed our data processors from the socket server and created a multithreaded process runner that runs several data processors concurrently I also worked on optimizing our algorithms for these data processors For our content media server I rewrote the main control modules for our Wowza based media server and separated the playlist generation processing into its own dedicated processor Finally I redesigned our message dispatcher as a scheduled process runner that executes messaging algorithms based on an external XML configuration Mobile Application Our mobile app was written using Apache Cordova to allow us to build on multiple mobile platforms My involvement ranged from implementing new content slides creating native plugins with JavaScript access components utilizing prototypes implemented for use based on device type Web Application Our website was in its early beta stage when I began my involvement with the team I had been responsible for debugging issues with server side PHP client side flash and JavaScript issues as well as implementing new features When I redesigned our socket server and media server I had to redesign the entire Flash component to conform to our new specifications for connection to both products Java Developer Trainee FDM GROUP New York NY September 2012 to April 2013 As a trainee I attend intense daily professional and technical training programs The programs are designed for the development of communication research and interviewing skills and provide firsthand experience working with Java and related technologies through completion of projects Developer training included full working knowledge and best practices in SQL UNIX shell scripting and Java application and J2EE web application development Education Bachelor of Science in computer science in computer science SUNY College at Oneonta Oneonta NY August 2012",
    "unique_id": "2f2fe4d4-efc8-49e0-abc7-c7391a847089"
}