{
    "clean_data": "Sr Hadoop Developer Sr Hadoop span lDeveloperspan Sr Hadoop Developer Humana Health Insurance Louisville KY 7 years of practical experience in building industry specific Java applications and implementing Bigdata technologies in core and enterprise software development 4 years of experience in developing applications that perform large scale Distributed Data Processing using Big Data ecosystem tools Hadoop Hive Pig Sqoop Hbase Cassandra Spark Spark Streaming MLLib Mahout Oozie Zoo Keeper Flume Yarn and Avro Working knowledge in installing and maintaining Cassandra by configuring the cassandrayaml file as per the business requirement and performed readswrites using Java JDBC connectivity Experience with Cloudera Manager for management of Hadoop cluster Good conceptual understanding and experience in cloud computing applications using Amazon EC2 S3 EMR Experience in analyzing data using HiveQL Pig Latin HBase and custom Map Reduce programs in Java Extensive Experience on Teradata database analyzing business needs of clients developing effective and efficient solutions and ensuring client deliverables with in committed timelines Expertise in maintaining data quality data organization and metadata Passionate about Big Data Analytics and skilled in exploring data content and Expert in distributed computing algorithms and data analytics Hands on experience in using various Hadoop distributions Apache Cloudera Hortonworks MapR InDepth knowledge and experience in design development and deployments of Big Data projects using Hadoop Data Analytics NoSQL Distributed Machine Learning frameworks Solid understanding of SQL NOSQL databases such as Oracle PostgreSQL MySQL MongoDB HBase Cassandra Knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Worked on MongoDB database concepts such as locking transactions indexes Sharing replication schema design Very good understanding Cassandra cluster mechanism that includes replication strategies snitch gossip consistent hashing and consistency levels Experience in Coding Teradata SQL Teradata Stored Procedures Macros and Triggers Strong experience in Creating Database Objects such as Tables Views Functions Stored Procedures Indexes Triggers Cursors in Teradata Experience data processing like collecting aggregating moving from various sources using Apache Flume and Kafka Developed a data pipeline using Kafka and Spark Streaming to store data into HDFS and performed the realtime analytics on the incoming data Experience in importing the realtime data to Hadoop using Kafka and implemented the Oozie job for daily imports Experienced in working with inmemory processing framework like Spark Transformations SparkQL MLib and Spark Streaming Expertise in creating Custom Serdes in Hive Good working experience on using Sqoop to import data into HDFS from RDBMS and viceversa Expertise in job scheduling and monitoring tools like Oozie and Zoo Keeper Experience in design and development of Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Experience in performing adhoc queries on structured data using Hive QL and used Partition and Bucketing techniques and joins with HIVE for faster data access Experience in performing ETL operations using Pig Latin scripts Implemented Java APIs and created custom Java programs for fullfledged utilization of Hadoop and its related tools Implemented work flows that involve Hadoop actions using Oozie coordinators Experienced in implementing POC using Spark Sql and Mlib libraries Improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs YARN Hands on experience in handling Hive tables using Spark SQL Hands on experience on writing Queries Stored procedures Functions and Triggers by using SQL Used EMR Elastic Map Reducing to perform bigdata operations in AWS Proficient using version control tools like GIT VSS SVN and PVCS Involvement in all stages of software development life cycle SDLC and follow agile methodologies and continuous delivery Strong skills in Object Oriented Analysis and Design OOAD Well versed in enterprise software development methodologies and practices including TDD BDD design patterns and performance testing Created User Defined Functions UDFs User Defined Aggregated Functions UDAFs in PIG and Hive Experience in dealing with log files to extract data and to copy into HDFS using Flume Experience with Testing MapReduce programs using MRUnit JUnit and Easy Mock Implemented distributed searching capabilities using Solr to empower the geospatial search and navigation feature Experienced in using Solr to create search indexes to perform search operations faster Strong handson experience in Java and J2EE frameworks Experience working with JAVA J2EE JDBC ODBC JSP Java Eclipse Java Beans EJB Servlets Expert in developing web page interfaces using JSP Java Swings and HTML scripting languages Excellent understanding on Java beans and Hibernate framework to implement model logic to interact with RDBMS databases Experience in using IDEs like Eclipse NetBeans and Maven Hands on experienced working with source control tools such as Rational Clear Case and Clear Quest Authorized to work in the US for any employer Work Experience Sr Hadoop Developer Humana Health Insurance Louisville KY September 2018 to Present Responsibilities Analyzed large and critical datasets using Cloudera HDFS HBase MapReduce Hive Hive UDF Pig Sqoop Zookeeper and Spark Gathered the business requirements from the Business Partners and Subject Matter Experts Developed environmental search engine using JAVA Apache SOLR and MYSQL Managed works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting and regionalization with SOLR Search Engine Ingested data from RDBMS and performed data transformations and then export the transformed data to Cassandra as per the business requirement Written multiple MapReduce programs for data extraction transformation and aggregation from multiple file formats including XML JSON CSV other compressed file formats Developed automated processes for flattening the upstream data from Cassandra which in JSON format Used Hive UDFs to flatten the JSON Data Optimized MapReduce Jobs to use HDFS efficiently by using various compression mechanisms Developed PIG UDFs to provide Pig capabilities for manipulating the data according to Business Requirements and worked on developing custom PIG Loaders and Implemented various requirements using Pig scripts Experienced on loading and transforming of large sets of structured semi structured and unstructured data Created POC using Spark Sql and Mlib libraries Developed a Spark Streaming module for consumption of Avro messages from Kafka Implementing different machine learning techniques in Scala using Scala machine learning library and created POC using SparkSql and Mlib libraries Experienced in Querying data using SparkSQL on top of Spark Engine implementing Spark RDDs in Scala Expertise in writing Scala code using Higher order functions for iterative algorithms in Spark for Performance considerations Experienced in managing and reviewing Hadoop log files Worked with different File Formats like TEXTFILE AVROFILE ORC and PARQUET for HIVE querying and processing Loading data by using the Teradata loader connection writing Teradata utilities scripts Fast Load Multiload and working with loader logs To monitor query run times using Teradata Performance Monitor Involved in loading of data into Teradata from legacy systems and flat files using complex MLOAD scripts and FASTLOAD scripts Create and Maintain Teradata Tables Views Macros Triggers and Stored Procedures Monitored workload job performance and capacity planning using Cloudera Distribution Worked on Data loading into Hive for Data Ingestion history and Data content summary Involved in developing Impala scripts for extraction transformation loading of data into data warehouse Used Hive and Impala to query the data in HBase Created Impala tables and SFTP scripts and Shell scripts to import data into Hadoop Developed Hbase java client API for CRUD Operations Created Hive tables and involved in data loading and writing Hive UDFs Developed Hive UDFs for rating aggregation Generated Java APIs for retrieval and analysis on NoSQL database such as HBase and Cassandra Provided adhoc queries and data metrics to the Business Users using Hive Pig Did various performance optimizations like using distributed cache for small datasets partition and bucketing in hive doing map side joins etc Worked on importing and exporting data from Oracle and DB2 into HDFS and HIVE using Sqoop for analysis visualization and to generate reports Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Created data pipeline for different events of ingestion aggregation and load consumer response data in AWS S3 bucket into Hive external tables in HDFS location to serve as feed for tableau dashboards Used EMR Elastic Map Reducing to perform big data operations in AWS Worked on Apache spark writing python applications to convert txt xls files and parse Developed Python scripts UDFs using both Data framesSQL and RDDMapReduce in Spark for Data Aggregation queries and writing data back into RDBMS through Sqoop Installed the application on AWS EC2 instances and configured the storage on S3 buckets Use different components of Talend tOracleInput tOracleOutput tHiveInput tHiveOutput tHiveInputRow tUniqeRow tAggregateRow tRunJob tPreJob tPostJob tMap tJavaRow tJavaFlex tFilterRow etc to develop standard jobs Loading data from different source database files into Hive using Talend tool Load and transform data into HDFS from large set of structured data OracleSql server using Talend Big data studio Implemented Spark using PythonScala and utilizingSpark Core Spark Streaming and Spark SQL for faster processing of data instead of MapReduce in Java Experience in integrating Apache Kafka with Apache Spark for real time processing Exposure on usage of Apache Kafka develop data pipeline of logs as a stream of messages using producers and consumers Scheduled Oozie workflow engine to run multiple Hive and Pig jobs which independently run with time and data availability Worked on custom Pig Loaders and Storage classes to work with a variety of data formats such as JSON Compressed CSV etc Involved in running Hadoop Streaming jobs to process Terabytes of data Used JIRA for bug tracking and CVS for version control Environment Hadoop Map Reduce Hive HDFS PIG Sqoop Oozie Cloudera Flume HBase SOLR CDH3 Cassandra Oracle UnixLinux Hadoop Hive PIG SQOOP Flume HDFS J2EE OracleSQL DB2 UnixLinux JavaScript Ajax Eclipse IDE CVS JIRA Sr Hadoop Developer Microchip Computer Solutions Springfield IL April 2015 to August 2018 Responsibilities Installed and configured Hadoop MapReduce HDFS and developed multiple MapReduce jobs in Java for data cleansing and preprocessing Responsible to manage data coming from different sources Involved in gathering the business requirements from the Business Partners and Subject Matter Experts Proactively monitored systems and services architecture design and implementation of Hadoop deployment configuration management backup and disaster recovery systems and procedures Involved in works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting Supported MapReduce Programs those are running on the cluster Involved in HDFS maintenance and loading of structured and unstructured data Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Worked extensively with importing metadata into Hive using Python and migrated existing tables and applications to work on AWS cloudS3 Installed and configured Pig and written Pig Latin scripts Imported data using Sqoop to load data from MySQL to HDFS on regular basis Expert knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Extracted and restructured the data into MongoDB using import and export command line utility tool Designed and Maintained Tez workflows to manage the flow of jobs in the cluster Developed Scripts and Batch Job to schedule various Hadoop Program Installation of Oozie workflow engine to run multiple Hive and pig jobs Writing Hive queries for data analysis to meet the business requirements Loading log data into HDFS using Flume and performing ETL Integration Collecting and aggregating large amounts of log data using Flume and staging data in HDFS for further analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Created Hive tables and working on them using Hive QL Good Understanding of DAG cycle for entire Spark application flow on Spark application WebUI Developed Spark SQL scripts and involved in converting Hive UDFs to Spark SQL UDFs Implemented procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Developed multiple Spark jobs in ScalaPython for Data cleaning preprocessing and Aggregating Developed Spark programs using Scala Involved in Creating SparkSQL Queries and Developed Oozie workflow for Spark jobs Push data as delimited files into HDFS using Talend Big data studio Analyzed and performed data integration using Talend open integration suite Wrote complex SQL queries to take data from various sources and integrated it with Talend Used Storm for an automatic mechanism for repeating attempts to download and manipulate the data when there is a hiccup Designing and development of technical architecture requirements and statistical models using R Used Storm to analyze large amounts of nonunique data points with low latency and high throughput Developed UI application using AngularJS integrated with Elastic Search to consume REST Writing the shell scripts to monitor the health check of Hadoop daemon services and respond accordingly to any warning or failure conditions Utilized Agile and Scrum Methodology to help manage and organize a team of developers with regular code review sessions Environments Hadoop Hive Linux Map Reduce HDFS Hive Pig HBase Sqoop Kafka Flume Shell Scripting Storm Java JDK 16 Java 6 Eclipse Oracle 10g PLSQL SQLPLUS Toad 96 Linux JIRA 51 Storm CVS JIRA 52 Hadoop Developer Dell Austin TX May 2012 to March 2015 Responsibilities Launching and Setup of HADOOP Cluster which includes configuring different components of HADOOP Hands on experience in loading data from UNIX file system to HDFS Wrote the Map Reduce jobs to parse the web logs which are stored in HDFS Developed Simple to complex MapReduce Jobs using Hive and Pig Developed multiple Map Reduce jobs in PIG and Hive for data cleaning and preprocessing Cluster coordination services through Zookeeper Designed and implemented Hive queries and functions for evaluation filtering loading and storing of data Installed Oozie workflow engine to run multiple Hive and Pig jobs which run independently with time and data availability Expertise in Partitions Bucketing concepts in Hive and analyzed the data using the HiveQL Installed and configured Flume Hive PIG Sqoop and Oozie on the Hadoop cluster Involved in creating Hive tables loading data and running Hive queries in those data Extensive Working knowledge of partitioned table UDFs performance tuning compressionrelated properties thrift server in Hive Used Hive to analyze data ingested into HBase by using HiveHBase integration and compute various metrics for reporting on the dashboard Loading the data to HBase Using Pig Hive and Java APIs Worked with NoSQL databases like HBase in creating HBase tables to load large sets of semistructured Experienced with performing CURD operations in HBase Collected and aggregated large amounts of web log data from different sources such as web servers mobile using Apache Flume and stored the data into HDFSHBase for analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Involved in writing optimized PIG Script along with involved in developing and testing PIG Latin Scripts Created Map Reduce programs for some refined queries on big data Working knowledge in writing PIGs Load and Store functions Environment Apache Hadoop 101 MapReduce HDFS CentOS Zookeeper Sqoop Cassandra Hive PIG Oozie Java Eclipse Amazon EC2 JSP Servlets Java Developer Cubic Technologies Irving TX June 2010 to April 2012 Responsibilities Implemented the project according to the Software Development Life Cycle SDLC Implemented JDBC for mapping an objectoriented domain model to a traditional relational database Created Stored Procedures to manipulate the database and to apply the business logic according to the users specifications Developed the Generic Classes which includes the frequently used functionality so that it can be reusable Exception Management mechanism using Exception Handling Application Blocks to handle the exceptions Designed and developed user interfaces using JSP JavaScript and HTML Involved in Database design and developing SQL Queries stored procedures on MySQL Used CVS for maintaining the Source Code Logging was done through log4j Environment JAVA Java Script HTML log4j JDBC Drivers Soap Web Services UNIX Shell scripting SQL Server JavaJ2EE Developer FINRA Rockville MD January 2009 to May 2010 Responsibilities Responsible for programming and troubleshooting web applications using Java JSP HTML JavaScript CSS and SQLServer Responsible for Crossbrowser testing and debugging and creating graphics Involved in creating CSS for a unified look of the Front End User Interface Created optimizing web graphics including designing and incorporating graphic user interface GUI features Worked with the business stakeholders to determine navigational schemes site flow and general web page functionality Prepared Technical Design Documentation for the modules designed Involved in all facets of software development life cycle from requirements analysis architecture design coding testing and implementation Developed and maintained the application UI based on Eclipse Actively participated in requirements gathering analysis design and testing phases Developed and implemented the MVC architectural pattern JSPs as the view Struts as Controller and as model Created graphical user interfaces GUIs frontend using JSP JavaScript and JSON Struts Action Servlet is used as Front Controller for redirecting the control to the specific J2EE component as per the requirement Developed JSP with Custom Tag Libraries for control of the business processes in the middletier and was involved in their integration Responsible for developing the client side validations using JavaScript and JQuery Developed the XML Schema for the data maintenance and structures Prepared documentation and participated in preparing users manual for the application Involved in unit testing integration testing useracceptance testing and bug fixing Environment JAVA EE5 J2EE XML HTML Struts2 Servlets Java Script JSP CSS JDBC SQL ServerWebSphere8Windows Education Bachelors Additional Information Skill set Hadoop Core Services HDFS Map Reduce Spark YARN Hadoop Distribution Horton works Cloudera Apache NO SQL Databases HBase Cassandra Hadoop Data Services Hive Pig Sqoop Flume Sqoop Hadoop Operational Services Zookeeper Oozie Monitoring Tools Ganglia Cloudera Manager Cloud Computing Tools Amazon AWS Languages C JavaJ2EE Python SQL PLSQL Pig Latin HiveQL Unix Shell Scripting Java J2EE Technologies Core Java Servlets Hibernate Spring Struts JMS EJB Application Servers Web Logic Web Sphere JBoss Tomcat Databases Oracle MySQL Postgress Teradata Operating Systems UNIX Windows LINUX Build Tools Jenkins Maven ANT Development Tools Microsoft SQL Studio Toad Eclipse NetBeans Development methodologies AgileScrum Waterfall",
    "entities": [
        "Implemented Spark",
        "PythonScala",
        "Spark Transformations",
        "TDD BDD",
        "Spark Context",
        "GUI",
        "Talend Used Storm",
        "HDFS",
        "the Business Partners",
        "UNIX",
        "SQL Server JavaJ2EE Developer",
        "Partitions Bucketing",
        "Hadoop Streaming",
        "JSON",
        "Springfield",
        "SparkSql",
        "Tables Views Functions Stored Procedures Indexes Triggers Cursors",
        "CVS",
        "Object Oriented Analysis and Design OOAD Well",
        "AWS Proficient",
        "AWS cloudS3 Installed",
        "Spark Sql and Mlib",
        "Java",
        "Hadoop",
        "Utilized Agile",
        "ETL Integration Collecting",
        "IL",
        "Shell",
        "Spark for Performance",
        "Spark Engine",
        "HBase",
        "Developed Oozie",
        "HBase Using Pig Hive",
        "Apache Spark",
        "Sr Hadoop Developer Sr Hadoop",
        "TX",
        "Amazon",
        "CRUD Worked",
        "JQuery Developed",
        "Environments Hadoop",
        "Java Developer Cubic Technologies",
        "the Software Development Life Cycle SDLC Implemented",
        "Developed",
        "Distributed Data Processing using Big Data",
        "SparkSQL",
        "J2EE OracleSQL DB2",
        "Exception Handling Application Blocks",
        "AWS S3",
        "Cloudera Apache",
        "tMap",
        "Talend Big",
        "PARQUET",
        "PVCS Involvement",
        "ScalaPython",
        "Spark for Data Aggregation",
        "SOLR Search Engine Ingested",
        "the JSON Data Optimized MapReduce Jobs",
        "Creating SparkSQL Queries",
        "Linux",
        "JSP",
        "Hive Experience",
        "Created User Defined Functions",
        "SQL Queries",
        "Present Responsibilities Analyzed",
        "Talend",
        "ORC",
        "Exception Management",
        "InDepth",
        "Hadoop Hive Pig Sqoop Hbase",
        "FASTLOAD",
        "MapReduce Jobs",
        "MVC",
        "Spark",
        "Teradata Performance Monitor Involved",
        "File Formats",
        "GIT",
        "Created Hive",
        "Zookeeper Sqoop",
        "Hadoop Core Services",
        "API for CRUD Operations Created Hive",
        "HTTP Source",
        "US",
        "Database",
        "Sqoop",
        "AWS Worked",
        "HIVE",
        "MLOAD",
        "Sqoop Installed",
        "Hadoop Program Installation of Oozie",
        "Created",
        "OracleSql",
        "Mlib",
        "Scala",
        "AWS",
        "Hadoop MapReduce HDFS",
        "Analyzed",
        "Oracle",
        "Hadoop Developed Hbase",
        "Big Data Analytics",
        "Apache",
        "PIG",
        "Flume Hive PIG Sqoop",
        "Hive for Data Ingestion",
        "log data",
        "JAVA Apache SOLR",
        "Oozie",
        "SQL",
        "Cassandra Oracle UnixLinux Hadoop Hive",
        "Created POC",
        "MD",
        "Easy Mock Implemented",
        "Sr Hadoop Developer Humana Health Insurance",
        "Elastic Search",
        "Big Data",
        "Hive",
        "Work Experience Sr Hadoop Developer Humana Health Insurance",
        "DAG",
        "the Front End User Interface Created",
        "Hadoop Data Analytics NoSQL Distributed Machine Learning",
        "Developed a Spark",
        "Supported MapReduce Programs",
        "Querying",
        "ETL",
        "the Business Users using Hive Pig",
        "CRUD Extracted",
        "HTML Involved",
        "Custom Tag Libraries",
        "Apache Hadoop",
        "NetBeans Development",
        "SQLServer Responsible for Crossbrowser",
        "Impala",
        "HBase Created",
        "Bigdata",
        "HBase Cassandra Hadoop Data Services",
        "Spark Streaming Expertise",
        "Business Requirements",
        "SVN",
        "Expertise",
        "HADOOP Hands",
        "CSS",
        "Prepared Technical Design Documentation",
        "Data",
        "AWS Experienced",
        "HBase Collected",
        "MapReduce",
        "Zookeeper Designed",
        "Developed UI",
        "RDBMS",
        "Stored Procedures Monitored",
        "NoSQL",
        "Oracle PostgreSQL MySQL MongoDB HBase Cassandra Knowledge",
        "Cloudera HDFS HBase MapReduce Hive Hive",
        "Teradata",
        "Maven Hands",
        "Spark SQL Hands"
    ],
    "experience": "Experience with Cloudera Manager for management of Hadoop cluster Good conceptual understanding and experience in cloud computing applications using Amazon EC2 S3 EMR Experience in analyzing data using HiveQL Pig Latin HBase and custom Map Reduce programs in Java Extensive Experience on Teradata database analyzing business needs of clients developing effective and efficient solutions and ensuring client deliverables with in committed timelines Expertise in maintaining data quality data organization and metadata Passionate about Big Data Analytics and skilled in exploring data content and Expert in distributed computing algorithms and data analytics Hands on experience in using various Hadoop distributions Apache Cloudera Hortonworks MapR InDepth knowledge and experience in design development and deployments of Big Data projects using Hadoop Data Analytics NoSQL Distributed Machine Learning frameworks Solid understanding of SQL NOSQL databases such as Oracle PostgreSQL MySQL MongoDB HBase Cassandra Knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Worked on MongoDB database concepts such as locking transactions indexes Sharing replication schema design Very good understanding Cassandra cluster mechanism that includes replication strategies snitch gossip consistent hashing and consistency levels Experience in Coding Teradata SQL Teradata Stored Procedures Macros and Triggers Strong experience in Creating Database Objects such as Tables Views Functions Stored Procedures Indexes Triggers Cursors in Teradata Experience data processing like collecting aggregating moving from various sources using Apache Flume and Kafka Developed a data pipeline using Kafka and Spark Streaming to store data into HDFS and performed the realtime analytics on the incoming data Experience in importing the realtime data to Hadoop using Kafka and implemented the Oozie job for daily imports Experienced in working with inmemory processing framework like Spark Transformations SparkQL MLib and Spark Streaming Expertise in creating Custom Serdes in Hive Good working experience on using Sqoop to import data into HDFS from RDBMS and viceversa Expertise in job scheduling and monitoring tools like Oozie and Zoo Keeper Experience in design and development of Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Experience in performing adhoc queries on structured data using Hive QL and used Partition and Bucketing techniques and joins with HIVE for faster data access Experience in performing ETL operations using Pig Latin scripts Implemented Java APIs and created custom Java programs for fullfledged utilization of Hadoop and its related tools Implemented work flows that involve Hadoop actions using Oozie coordinators Experienced in implementing POC using Spark Sql and Mlib libraries Improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs YARN Hands on experience in handling Hive tables using Spark SQL Hands on experience on writing Queries Stored procedures Functions and Triggers by using SQL Used EMR Elastic Map Reducing to perform bigdata operations in AWS Proficient using version control tools like GIT VSS SVN and PVCS Involvement in all stages of software development life cycle SDLC and follow agile methodologies and continuous delivery Strong skills in Object Oriented Analysis and Design OOAD Well versed in enterprise software development methodologies and practices including TDD BDD design patterns and performance testing Created User Defined Functions UDFs User Defined Aggregated Functions UDAFs in PIG and Hive Experience in dealing with log files to extract data and to copy into HDFS using Flume Experience with Testing MapReduce programs using MRUnit JUnit and Easy Mock Implemented distributed searching capabilities using Solr to empower the geospatial search and navigation feature Experienced in using Solr to create search indexes to perform search operations faster Strong handson experience in Java and J2EE frameworks Experience working with JAVA J2EE JDBC ODBC JSP Java Eclipse Java Beans EJB Servlets Expert in developing web page interfaces using JSP Java Swings and HTML scripting languages Excellent understanding on Java beans and Hibernate framework to implement model logic to interact with RDBMS databases Experience in using IDEs like Eclipse NetBeans and Maven Hands on experienced working with source control tools such as Rational Clear Case and Clear Quest Authorized to work in the US for any employer Work Experience Sr Hadoop Developer Humana Health Insurance Louisville KY September 2018 to Present Responsibilities Analyzed large and critical datasets using Cloudera HDFS HBase MapReduce Hive Hive UDF Pig Sqoop Zookeeper and Spark Gathered the business requirements from the Business Partners and Subject Matter Experts Developed environmental search engine using JAVA Apache SOLR and MYSQL Managed works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting and regionalization with SOLR Search Engine Ingested data from RDBMS and performed data transformations and then export the transformed data to Cassandra as per the business requirement Written multiple MapReduce programs for data extraction transformation and aggregation from multiple file formats including XML JSON CSV other compressed file formats Developed automated processes for flattening the upstream data from Cassandra which in JSON format Used Hive UDFs to flatten the JSON Data Optimized MapReduce Jobs to use HDFS efficiently by using various compression mechanisms Developed PIG UDFs to provide Pig capabilities for manipulating the data according to Business Requirements and worked on developing custom PIG Loaders and Implemented various requirements using Pig scripts Experienced on loading and transforming of large sets of structured semi structured and unstructured data Created POC using Spark Sql and Mlib libraries Developed a Spark Streaming module for consumption of Avro messages from Kafka Implementing different machine learning techniques in Scala using Scala machine learning library and created POC using SparkSql and Mlib libraries Experienced in Querying data using SparkSQL on top of Spark Engine implementing Spark RDDs in Scala Expertise in writing Scala code using Higher order functions for iterative algorithms in Spark for Performance considerations Experienced in managing and reviewing Hadoop log files Worked with different File Formats like TEXTFILE AVROFILE ORC and PARQUET for HIVE querying and processing Loading data by using the Teradata loader connection writing Teradata utilities scripts Fast Load Multiload and working with loader logs To monitor query run times using Teradata Performance Monitor Involved in loading of data into Teradata from legacy systems and flat files using complex MLOAD scripts and FASTLOAD scripts Create and Maintain Teradata Tables Views Macros Triggers and Stored Procedures Monitored workload job performance and capacity planning using Cloudera Distribution Worked on Data loading into Hive for Data Ingestion history and Data content summary Involved in developing Impala scripts for extraction transformation loading of data into data warehouse Used Hive and Impala to query the data in HBase Created Impala tables and SFTP scripts and Shell scripts to import data into Hadoop Developed Hbase java client API for CRUD Operations Created Hive tables and involved in data loading and writing Hive UDFs Developed Hive UDFs for rating aggregation Generated Java APIs for retrieval and analysis on NoSQL database such as HBase and Cassandra Provided adhoc queries and data metrics to the Business Users using Hive Pig Did various performance optimizations like using distributed cache for small datasets partition and bucketing in hive doing map side joins etc Worked on importing and exporting data from Oracle and DB2 into HDFS and HIVE using Sqoop for analysis visualization and to generate reports Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Created data pipeline for different events of ingestion aggregation and load consumer response data in AWS S3 bucket into Hive external tables in HDFS location to serve as feed for tableau dashboards Used EMR Elastic Map Reducing to perform big data operations in AWS Worked on Apache spark writing python applications to convert txt xls files and parse Developed Python scripts UDFs using both Data framesSQL and RDDMapReduce in Spark for Data Aggregation queries and writing data back into RDBMS through Sqoop Installed the application on AWS EC2 instances and configured the storage on S3 buckets Use different components of Talend tOracleInput tOracleOutput tHiveInput tHiveOutput tHiveInputRow tUniqeRow tAggregateRow tRunJob tPreJob tPostJob tMap tJavaRow tJavaFlex tFilterRow etc to develop standard jobs Loading data from different source database files into Hive using Talend tool Load and transform data into HDFS from large set of structured data OracleSql server using Talend Big data studio Implemented Spark using PythonScala and utilizingSpark Core Spark Streaming and Spark SQL for faster processing of data instead of MapReduce in Java Experience in integrating Apache Kafka with Apache Spark for real time processing Exposure on usage of Apache Kafka develop data pipeline of logs as a stream of messages using producers and consumers Scheduled Oozie workflow engine to run multiple Hive and Pig jobs which independently run with time and data availability Worked on custom Pig Loaders and Storage classes to work with a variety of data formats such as JSON Compressed CSV etc Involved in running Hadoop Streaming jobs to process Terabytes of data Used JIRA for bug tracking and CVS for version control Environment Hadoop Map Reduce Hive HDFS PIG Sqoop Oozie Cloudera Flume HBase SOLR CDH3 Cassandra Oracle UnixLinux Hadoop Hive PIG SQOOP Flume HDFS J2EE OracleSQL DB2 UnixLinux JavaScript Ajax Eclipse IDE CVS JIRA Sr Hadoop Developer Microchip Computer Solutions Springfield IL April 2015 to August 2018 Responsibilities Installed and configured Hadoop MapReduce HDFS and developed multiple MapReduce jobs in Java for data cleansing and preprocessing Responsible to manage data coming from different sources Involved in gathering the business requirements from the Business Partners and Subject Matter Experts Proactively monitored systems and services architecture design and implementation of Hadoop deployment configuration management backup and disaster recovery systems and procedures Involved in works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting Supported MapReduce Programs those are running on the cluster Involved in HDFS maintenance and loading of structured and unstructured data Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Worked extensively with importing metadata into Hive using Python and migrated existing tables and applications to work on AWS cloudS3 Installed and configured Pig and written Pig Latin scripts Imported data using Sqoop to load data from MySQL to HDFS on regular basis Expert knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Extracted and restructured the data into MongoDB using import and export command line utility tool Designed and Maintained Tez workflows to manage the flow of jobs in the cluster Developed Scripts and Batch Job to schedule various Hadoop Program Installation of Oozie workflow engine to run multiple Hive and pig jobs Writing Hive queries for data analysis to meet the business requirements Loading log data into HDFS using Flume and performing ETL Integration Collecting and aggregating large amounts of log data using Flume and staging data in HDFS for further analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Created Hive tables and working on them using Hive QL Good Understanding of DAG cycle for entire Spark application flow on Spark application WebUI Developed Spark SQL scripts and involved in converting Hive UDFs to Spark SQL UDFs Implemented procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Developed multiple Spark jobs in ScalaPython for Data cleaning preprocessing and Aggregating Developed Spark programs using Scala Involved in Creating SparkSQL Queries and Developed Oozie workflow for Spark jobs Push data as delimited files into HDFS using Talend Big data studio Analyzed and performed data integration using Talend open integration suite Wrote complex SQL queries to take data from various sources and integrated it with Talend Used Storm for an automatic mechanism for repeating attempts to download and manipulate the data when there is a hiccup Designing and development of technical architecture requirements and statistical models using R Used Storm to analyze large amounts of nonunique data points with low latency and high throughput Developed UI application using AngularJS integrated with Elastic Search to consume REST Writing the shell scripts to monitor the health check of Hadoop daemon services and respond accordingly to any warning or failure conditions Utilized Agile and Scrum Methodology to help manage and organize a team of developers with regular code review sessions Environments Hadoop Hive Linux Map Reduce HDFS Hive Pig HBase Sqoop Kafka Flume Shell Scripting Storm Java JDK 16 Java 6 Eclipse Oracle 10 g PLSQL SQLPLUS Toad 96 Linux JIRA 51 Storm CVS JIRA 52 Hadoop Developer Dell Austin TX May 2012 to March 2015 Responsibilities Launching and Setup of HADOOP Cluster which includes configuring different components of HADOOP Hands on experience in loading data from UNIX file system to HDFS Wrote the Map Reduce jobs to parse the web logs which are stored in HDFS Developed Simple to complex MapReduce Jobs using Hive and Pig Developed multiple Map Reduce jobs in PIG and Hive for data cleaning and preprocessing Cluster coordination services through Zookeeper Designed and implemented Hive queries and functions for evaluation filtering loading and storing of data Installed Oozie workflow engine to run multiple Hive and Pig jobs which run independently with time and data availability Expertise in Partitions Bucketing concepts in Hive and analyzed the data using the HiveQL Installed and configured Flume Hive PIG Sqoop and Oozie on the Hadoop cluster Involved in creating Hive tables loading data and running Hive queries in those data Extensive Working knowledge of partitioned table UDFs performance tuning compressionrelated properties thrift server in Hive Used Hive to analyze data ingested into HBase by using HiveHBase integration and compute various metrics for reporting on the dashboard Loading the data to HBase Using Pig Hive and Java APIs Worked with NoSQL databases like HBase in creating HBase tables to load large sets of semistructured Experienced with performing CURD operations in HBase Collected and aggregated large amounts of web log data from different sources such as web servers mobile using Apache Flume and stored the data into HDFSHBase for analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Involved in writing optimized PIG Script along with involved in developing and testing PIG Latin Scripts Created Map Reduce programs for some refined queries on big data Working knowledge in writing PIGs Load and Store functions Environment Apache Hadoop 101 MapReduce HDFS CentOS Zookeeper Sqoop Cassandra Hive PIG Oozie Java Eclipse Amazon EC2 JSP Servlets Java Developer Cubic Technologies Irving TX June 2010 to April 2012 Responsibilities Implemented the project according to the Software Development Life Cycle SDLC Implemented JDBC for mapping an objectoriented domain model to a traditional relational database Created Stored Procedures to manipulate the database and to apply the business logic according to the users specifications Developed the Generic Classes which includes the frequently used functionality so that it can be reusable Exception Management mechanism using Exception Handling Application Blocks to handle the exceptions Designed and developed user interfaces using JSP JavaScript and HTML Involved in Database design and developing SQL Queries stored procedures on MySQL Used CVS for maintaining the Source Code Logging was done through log4j Environment JAVA Java Script HTML log4j JDBC Drivers Soap Web Services UNIX Shell scripting SQL Server JavaJ2EE Developer FINRA Rockville MD January 2009 to May 2010 Responsibilities Responsible for programming and troubleshooting web applications using Java JSP HTML JavaScript CSS and SQLServer Responsible for Crossbrowser testing and debugging and creating graphics Involved in creating CSS for a unified look of the Front End User Interface Created optimizing web graphics including designing and incorporating graphic user interface GUI features Worked with the business stakeholders to determine navigational schemes site flow and general web page functionality Prepared Technical Design Documentation for the modules designed Involved in all facets of software development life cycle from requirements analysis architecture design coding testing and implementation Developed and maintained the application UI based on Eclipse Actively participated in requirements gathering analysis design and testing phases Developed and implemented the MVC architectural pattern JSPs as the view Struts as Controller and as model Created graphical user interfaces GUIs frontend using JSP JavaScript and JSON Struts Action Servlet is used as Front Controller for redirecting the control to the specific J2EE component as per the requirement Developed JSP with Custom Tag Libraries for control of the business processes in the middletier and was involved in their integration Responsible for developing the client side validations using JavaScript and JQuery Developed the XML Schema for the data maintenance and structures Prepared documentation and participated in preparing users manual for the application Involved in unit testing integration testing useracceptance testing and bug fixing Environment JAVA EE5 J2EE XML HTML Struts2 Servlets Java Script JSP CSS JDBC SQL ServerWebSphere8Windows Education Bachelors Additional Information Skill set Hadoop Core Services HDFS Map Reduce Spark YARN Hadoop Distribution Horton works Cloudera Apache NO SQL Databases HBase Cassandra Hadoop Data Services Hive Pig Sqoop Flume Sqoop Hadoop Operational Services Zookeeper Oozie Monitoring Tools Ganglia Cloudera Manager Cloud Computing Tools Amazon AWS Languages C JavaJ2EE Python SQL PLSQL Pig Latin HiveQL Unix Shell Scripting Java J2EE Technologies Core Java Servlets Hibernate Spring Struts JMS EJB Application Servers Web Logic Web Sphere JBoss Tomcat Databases Oracle MySQL Postgress Teradata Operating Systems UNIX Windows LINUX Build Tools Jenkins Maven ANT Development Tools Microsoft SQL Studio Toad Eclipse NetBeans Development methodologies AgileScrum Waterfall",
    "extracted_keywords": [
        "Sr",
        "Hadoop",
        "Developer",
        "Sr",
        "Hadoop",
        "span",
        "lDeveloperspan",
        "Sr",
        "Hadoop",
        "Developer",
        "Humana",
        "Health",
        "Insurance",
        "Louisville",
        "KY",
        "years",
        "experience",
        "industry",
        "Java",
        "applications",
        "Bigdata",
        "technologies",
        "core",
        "enterprise",
        "software",
        "development",
        "years",
        "experience",
        "applications",
        "scale",
        "Data",
        "Processing",
        "Big",
        "Data",
        "ecosystem",
        "tools",
        "Hadoop",
        "Hive",
        "Pig",
        "Sqoop",
        "Hbase",
        "Cassandra",
        "Spark",
        "Spark",
        "Streaming",
        "MLLib",
        "Mahout",
        "Oozie",
        "Zoo",
        "Keeper",
        "Flume",
        "Yarn",
        "Avro",
        "Working",
        "knowledge",
        "Cassandra",
        "cassandrayaml",
        "file",
        "business",
        "requirement",
        "readswrites",
        "Java",
        "JDBC",
        "connectivity",
        "Experience",
        "Cloudera",
        "Manager",
        "management",
        "Hadoop",
        "cluster",
        "understanding",
        "experience",
        "computing",
        "applications",
        "Amazon",
        "EC2",
        "S3",
        "EMR",
        "Experience",
        "data",
        "HiveQL",
        "Pig",
        "Latin",
        "HBase",
        "custom",
        "Map",
        "Reduce",
        "programs",
        "Java",
        "Extensive",
        "Experience",
        "Teradata",
        "database",
        "business",
        "needs",
        "clients",
        "solutions",
        "client",
        "deliverables",
        "timelines",
        "Expertise",
        "data",
        "quality",
        "data",
        "organization",
        "metadata",
        "Passionate",
        "Big",
        "Data",
        "Analytics",
        "data",
        "content",
        "Expert",
        "algorithms",
        "data",
        "Hands",
        "experience",
        "Hadoop",
        "distributions",
        "Apache",
        "Cloudera",
        "Hortonworks",
        "MapR",
        "InDepth",
        "knowledge",
        "experience",
        "design",
        "development",
        "deployments",
        "Big",
        "Data",
        "projects",
        "Hadoop",
        "Data",
        "Analytics",
        "NoSQL",
        "Machine",
        "Learning",
        "frameworks",
        "understanding",
        "SQL",
        "NOSQL",
        "Oracle",
        "PostgreSQL",
        "MySQL",
        "MongoDB",
        "HBase",
        "Cassandra",
        "Knowledge",
        "NoSQL",
        "data",
        "modeling",
        "disaster",
        "recovery",
        "backup",
        "storage",
        "processing",
        "CRUD",
        "Worked",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "Cassandra",
        "cluster",
        "mechanism",
        "replication",
        "strategies",
        "snitch",
        "gossip",
        "hashing",
        "consistency",
        "levels",
        "Experience",
        "Coding",
        "Teradata",
        "SQL",
        "Teradata",
        "Stored",
        "Procedures",
        "Macros",
        "Triggers",
        "experience",
        "Creating",
        "Database",
        "Objects",
        "Tables",
        "Views",
        "Functions",
        "Stored",
        "Procedures",
        "Indexes",
        "Triggers",
        "Cursors",
        "Teradata",
        "Experience",
        "data",
        "processing",
        "sources",
        "Apache",
        "Flume",
        "Kafka",
        "data",
        "pipeline",
        "Kafka",
        "Spark",
        "Streaming",
        "data",
        "HDFS",
        "analytics",
        "data",
        "Experience",
        "data",
        "Hadoop",
        "Kafka",
        "Oozie",
        "job",
        "imports",
        "inmemory",
        "processing",
        "framework",
        "Spark",
        "Transformations",
        "MLib",
        "Spark",
        "Streaming",
        "Expertise",
        "Custom",
        "Serdes",
        "Hive",
        "Good",
        "working",
        "experience",
        "Sqoop",
        "data",
        "HDFS",
        "RDBMS",
        "viceversa",
        "Expertise",
        "job",
        "scheduling",
        "monitoring",
        "tools",
        "Oozie",
        "Zoo",
        "Keeper",
        "Experience",
        "design",
        "development",
        "Map",
        "Reduce",
        "Programs",
        "Apache",
        "Hadoop",
        "data",
        "requirement",
        "Experience",
        "queries",
        "data",
        "Hive",
        "QL",
        "Partition",
        "Bucketing",
        "techniques",
        "HIVE",
        "data",
        "access",
        "Experience",
        "ETL",
        "operations",
        "Pig",
        "Latin",
        "scripts",
        "Java",
        "APIs",
        "custom",
        "Java",
        "programs",
        "utilization",
        "Hadoop",
        "tools",
        "work",
        "flows",
        "Hadoop",
        "actions",
        "Oozie",
        "coordinators",
        "POC",
        "Spark",
        "Sql",
        "Mlib",
        "performance",
        "optimization",
        "algorithms",
        "Hadoop",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "RDDs",
        "Hands",
        "experience",
        "Hive",
        "tables",
        "Spark",
        "SQL",
        "Hands",
        "experience",
        "Queries",
        "procedures",
        "Functions",
        "Triggers",
        "SQL",
        "EMR",
        "Elastic",
        "Map",
        "bigdata",
        "operations",
        "AWS",
        "Proficient",
        "version",
        "control",
        "tools",
        "GIT",
        "VSS",
        "SVN",
        "PVCS",
        "Involvement",
        "stages",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "methodologies",
        "delivery",
        "skills",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "enterprise",
        "software",
        "development",
        "methodologies",
        "practices",
        "TDD",
        "BDD",
        "design",
        "patterns",
        "performance",
        "testing",
        "User",
        "Defined",
        "Functions",
        "UDFs",
        "User",
        "Aggregated",
        "Functions",
        "UDAFs",
        "PIG",
        "Hive",
        "Experience",
        "log",
        "files",
        "data",
        "HDFS",
        "Flume",
        "Experience",
        "Testing",
        "MapReduce",
        "programs",
        "MRUnit",
        "JUnit",
        "Easy",
        "Mock",
        "capabilities",
        "Solr",
        "search",
        "navigation",
        "feature",
        "Solr",
        "search",
        "indexes",
        "search",
        "operations",
        "handson",
        "experience",
        "Java",
        "J2EE",
        "frameworks",
        "Experience",
        "JAVA",
        "J2EE",
        "JDBC",
        "ODBC",
        "JSP",
        "Java",
        "Eclipse",
        "Java",
        "Beans",
        "EJB",
        "Servlets",
        "Expert",
        "web",
        "page",
        "interfaces",
        "JSP",
        "Java",
        "Swings",
        "HTML",
        "scripting",
        "languages",
        "understanding",
        "Java",
        "beans",
        "Hibernate",
        "framework",
        "model",
        "logic",
        "RDBMS",
        "Experience",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "Maven",
        "Hands",
        "source",
        "control",
        "tools",
        "Rational",
        "Clear",
        "Case",
        "Clear",
        "Quest",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Hadoop",
        "Developer",
        "Humana",
        "Health",
        "Insurance",
        "Louisville",
        "KY",
        "September",
        "Present",
        "Responsibilities",
        "datasets",
        "Cloudera",
        "HDFS",
        "HBase",
        "MapReduce",
        "Hive",
        "Hive",
        "UDF",
        "Pig",
        "Sqoop",
        "Zookeeper",
        "Spark",
        "business",
        "requirements",
        "Business",
        "Partners",
        "Subject",
        "Matter",
        "Experts",
        "search",
        "engine",
        "JAVA",
        "Apache",
        "SOLR",
        "MYSQL",
        "Managed",
        "indexing",
        "data",
        "relevance",
        "custom",
        "tokenizers",
        "filters",
        "functionality",
        "playlist",
        "custom",
        "sorting",
        "regionalization",
        "SOLR",
        "Search",
        "Engine",
        "data",
        "RDBMS",
        "data",
        "transformations",
        "data",
        "Cassandra",
        "business",
        "requirement",
        "Written",
        "MapReduce",
        "programs",
        "data",
        "extraction",
        "transformation",
        "aggregation",
        "file",
        "formats",
        "XML",
        "CSV",
        "file",
        "formats",
        "processes",
        "data",
        "Cassandra",
        "format",
        "Hive",
        "UDFs",
        "JSON",
        "Data",
        "MapReduce",
        "Jobs",
        "HDFS",
        "compression",
        "mechanisms",
        "PIG",
        "UDFs",
        "Pig",
        "capabilities",
        "data",
        "Business",
        "Requirements",
        "custom",
        "PIG",
        "Loaders",
        "requirements",
        "Pig",
        "scripts",
        "loading",
        "transforming",
        "sets",
        "data",
        "Created",
        "POC",
        "Spark",
        "Sql",
        "Mlib",
        "Spark",
        "Streaming",
        "module",
        "consumption",
        "Avro",
        "messages",
        "Kafka",
        "machine",
        "techniques",
        "Scala",
        "Scala",
        "machine",
        "library",
        "POC",
        "SparkSql",
        "Mlib",
        "libraries",
        "Querying",
        "data",
        "SparkSQL",
        "top",
        "Spark",
        "Engine",
        "Spark",
        "RDDs",
        "Scala",
        "Expertise",
        "Scala",
        "code",
        "order",
        "functions",
        "algorithms",
        "Spark",
        "Performance",
        "considerations",
        "Hadoop",
        "log",
        "files",
        "File",
        "Formats",
        "TEXTFILE",
        "AVROFILE",
        "ORC",
        "PARQUET",
        "HIVE",
        "Loading",
        "data",
        "Teradata",
        "loader",
        "connection",
        "Teradata",
        "utilities",
        "Fast",
        "Load",
        "Multiload",
        "loader",
        "logs",
        "query",
        "times",
        "Teradata",
        "Performance",
        "Monitor",
        "loading",
        "data",
        "Teradata",
        "legacy",
        "systems",
        "files",
        "MLOAD",
        "scripts",
        "FASTLOAD",
        "scripts",
        "Maintain",
        "Teradata",
        "Tables",
        "Views",
        "Macros",
        "Triggers",
        "Stored",
        "Procedures",
        "workload",
        "job",
        "performance",
        "capacity",
        "planning",
        "Cloudera",
        "Distribution",
        "Worked",
        "Data",
        "Hive",
        "Data",
        "Ingestion",
        "history",
        "Data",
        "content",
        "summary",
        "Impala",
        "scripts",
        "extraction",
        "transformation",
        "loading",
        "data",
        "data",
        "warehouse",
        "Hive",
        "Impala",
        "data",
        "HBase",
        "Impala",
        "tables",
        "scripts",
        "Shell",
        "scripts",
        "data",
        "Hadoop",
        "Developed",
        "Hbase",
        "client",
        "API",
        "CRUD",
        "Operations",
        "Hive",
        "tables",
        "data",
        "loading",
        "Hive",
        "UDFs",
        "Developed",
        "Hive",
        "UDFs",
        "rating",
        "aggregation",
        "Java",
        "APIs",
        "retrieval",
        "analysis",
        "NoSQL",
        "database",
        "HBase",
        "Cassandra",
        "queries",
        "data",
        "metrics",
        "Business",
        "Users",
        "Hive",
        "Pig",
        "performance",
        "optimizations",
        "cache",
        "datasets",
        "partition",
        "bucketing",
        "hive",
        "map",
        "side",
        "data",
        "Oracle",
        "DB2",
        "HDFS",
        "HIVE",
        "Sqoop",
        "analysis",
        "visualization",
        "reports",
        "file",
        "movements",
        "HDFS",
        "AWS",
        "S3",
        "S3",
        "bucket",
        "AWS",
        "AWS",
        "services",
        "application",
        "cloud",
        "instances",
        "data",
        "pipeline",
        "events",
        "ingestion",
        "aggregation",
        "consumer",
        "response",
        "data",
        "AWS",
        "S3",
        "bucket",
        "Hive",
        "tables",
        "HDFS",
        "location",
        "feed",
        "tableau",
        "dashboards",
        "EMR",
        "Elastic",
        "Map",
        "data",
        "operations",
        "AWS",
        "Apache",
        "spark",
        "python",
        "applications",
        "txt",
        "xls",
        "files",
        "Developed",
        "Python",
        "scripts",
        "UDFs",
        "Data",
        "framesSQL",
        "RDDMapReduce",
        "Spark",
        "Data",
        "Aggregation",
        "data",
        "RDBMS",
        "Sqoop",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "components",
        "Talend",
        "tOracleInput",
        "tOracleOutput",
        "tHiveInput",
        "tHiveOutput",
        "tUniqeRow",
        "tAggregateRow",
        "tRunJob",
        "tPreJob",
        "tPostJob",
        "tMap",
        "tFilterRow",
        "jobs",
        "Loading",
        "data",
        "source",
        "database",
        "files",
        "Hive",
        "tool",
        "Load",
        "data",
        "HDFS",
        "set",
        "data",
        "OracleSql",
        "server",
        "Talend",
        "data",
        "studio",
        "Spark",
        "PythonScala",
        "Core",
        "Spark",
        "Streaming",
        "Spark",
        "SQL",
        "processing",
        "data",
        "MapReduce",
        "Java",
        "Experience",
        "Apache",
        "Kafka",
        "Apache",
        "Spark",
        "time",
        "Exposure",
        "usage",
        "Apache",
        "Kafka",
        "data",
        "pipeline",
        "logs",
        "stream",
        "messages",
        "producers",
        "consumers",
        "Oozie",
        "workflow",
        "engine",
        "Hive",
        "Pig",
        "jobs",
        "time",
        "data",
        "availability",
        "custom",
        "Pig",
        "Loaders",
        "Storage",
        "classes",
        "variety",
        "data",
        "formats",
        "JSON",
        "Compressed",
        "CSV",
        "Hadoop",
        "Streaming",
        "jobs",
        "Terabytes",
        "data",
        "JIRA",
        "bug",
        "tracking",
        "CVS",
        "version",
        "control",
        "Environment",
        "Hadoop",
        "Map",
        "Hive",
        "HDFS",
        "PIG",
        "Sqoop",
        "Oozie",
        "Cloudera",
        "Flume",
        "HBase",
        "SOLR",
        "CDH3",
        "Cassandra",
        "Oracle",
        "UnixLinux",
        "Hadoop",
        "Hive",
        "PIG",
        "SQOOP",
        "Flume",
        "HDFS",
        "J2EE",
        "DB2",
        "UnixLinux",
        "JavaScript",
        "Ajax",
        "Eclipse",
        "IDE",
        "CVS",
        "JIRA",
        "Sr",
        "Hadoop",
        "Developer",
        "Microchip",
        "Computer",
        "Solutions",
        "Springfield",
        "IL",
        "April",
        "August",
        "Responsibilities",
        "Hadoop",
        "MapReduce",
        "HDFS",
        "MapReduce",
        "jobs",
        "Java",
        "data",
        "cleansing",
        "Responsible",
        "data",
        "sources",
        "business",
        "requirements",
        "Business",
        "Partners",
        "Subject",
        "Matter",
        "Experts",
        "systems",
        "services",
        "architecture",
        "design",
        "implementation",
        "Hadoop",
        "deployment",
        "configuration",
        "management",
        "backup",
        "disaster",
        "recovery",
        "systems",
        "procedures",
        "works",
        "indexing",
        "data",
        "relevance",
        "custom",
        "tokenizers",
        "filters",
        "functionality",
        "playlist",
        "custom",
        "MapReduce",
        "Programs",
        "cluster",
        "HDFS",
        "maintenance",
        "loading",
        "data",
        "file",
        "movements",
        "HDFS",
        "AWS",
        "S3",
        "S3",
        "bucket",
        "AWS",
        "metadata",
        "Hive",
        "Python",
        "tables",
        "applications",
        "AWS",
        "Installed",
        "Pig",
        "Pig",
        "Latin",
        "data",
        "Sqoop",
        "data",
        "MySQL",
        "HDFS",
        "basis",
        "Expert",
        "knowledge",
        "NoSQL",
        "data",
        "modeling",
        "disaster",
        "recovery",
        "backup",
        "storage",
        "processing",
        "CRUD",
        "Extracted",
        "data",
        "MongoDB",
        "import",
        "export",
        "command",
        "line",
        "utility",
        "tool",
        "Maintained",
        "Tez",
        "workflows",
        "flow",
        "jobs",
        "cluster",
        "Developed",
        "Scripts",
        "Batch",
        "Job",
        "Hadoop",
        "Program",
        "Installation",
        "Oozie",
        "workflow",
        "engine",
        "Hive",
        "pig",
        "jobs",
        "Hive",
        "queries",
        "data",
        "analysis",
        "business",
        "requirements",
        "Loading",
        "log",
        "data",
        "HDFS",
        "Flume",
        "ETL",
        "Integration",
        "Collecting",
        "amounts",
        "log",
        "data",
        "Flume",
        "data",
        "HDFS",
        "analysis",
        "Developed",
        "Flume",
        "ETL",
        "job",
        "data",
        "HTTP",
        "Source",
        "Sink",
        "HDFS",
        "Hive",
        "tables",
        "Hive",
        "QL",
        "Understanding",
        "DAG",
        "cycle",
        "Spark",
        "application",
        "flow",
        "Spark",
        "application",
        "WebUI",
        "Spark",
        "SQL",
        "scripts",
        "Hive",
        "UDFs",
        "Spark",
        "SQL",
        "UDFs",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "Spark",
        "jobs",
        "ScalaPython",
        "Data",
        "preprocessing",
        "Spark",
        "programs",
        "Scala",
        "SparkSQL",
        "Queries",
        "Developed",
        "Oozie",
        "workflow",
        "Spark",
        "jobs",
        "data",
        "files",
        "HDFS",
        "data",
        "studio",
        "data",
        "integration",
        "Talend",
        "integration",
        "suite",
        "Wrote",
        "SQL",
        "data",
        "sources",
        "Talend",
        "Storm",
        "mechanism",
        "attempts",
        "data",
        "hiccup",
        "Designing",
        "development",
        "architecture",
        "requirements",
        "models",
        "R",
        "Storm",
        "amounts",
        "data",
        "points",
        "latency",
        "throughput",
        "UI",
        "application",
        "Elastic",
        "Search",
        "REST",
        "shell",
        "scripts",
        "health",
        "check",
        "Hadoop",
        "daemon",
        "services",
        "warning",
        "failure",
        "conditions",
        "Agile",
        "Scrum",
        "Methodology",
        "team",
        "developers",
        "code",
        "review",
        "sessions",
        "Environments",
        "Hadoop",
        "Hive",
        "Linux",
        "Map",
        "HDFS",
        "Hive",
        "Pig",
        "HBase",
        "Sqoop",
        "Kafka",
        "Flume",
        "Shell",
        "Scripting",
        "Storm",
        "Java",
        "JDK",
        "Java",
        "Eclipse",
        "Oracle",
        "g",
        "PLSQL",
        "SQLPLUS",
        "Toad",
        "Linux",
        "JIRA",
        "Storm",
        "CVS",
        "JIRA",
        "Hadoop",
        "Developer",
        "Dell",
        "Austin",
        "TX",
        "May",
        "March",
        "Responsibilities",
        "Launching",
        "Setup",
        "HADOOP",
        "Cluster",
        "components",
        "HADOOP",
        "Hands",
        "experience",
        "loading",
        "data",
        "UNIX",
        "file",
        "system",
        "HDFS",
        "Wrote",
        "Map",
        "Reduce",
        "jobs",
        "web",
        "logs",
        "HDFS",
        "Simple",
        "MapReduce",
        "Jobs",
        "Hive",
        "Pig",
        "Map",
        "Reduce",
        "jobs",
        "PIG",
        "Hive",
        "data",
        "Cluster",
        "coordination",
        "services",
        "Zookeeper",
        "Hive",
        "queries",
        "functions",
        "evaluation",
        "loading",
        "storing",
        "data",
        "Oozie",
        "workflow",
        "engine",
        "Hive",
        "Pig",
        "jobs",
        "time",
        "data",
        "availability",
        "Expertise",
        "Partitions",
        "Bucketing",
        "concepts",
        "Hive",
        "data",
        "HiveQL",
        "Installed",
        "Flume",
        "Hive",
        "PIG",
        "Sqoop",
        "Oozie",
        "Hadoop",
        "cluster",
        "Hive",
        "tables",
        "loading",
        "data",
        "Hive",
        "queries",
        "data",
        "Working",
        "knowledge",
        "table",
        "UDFs",
        "performance",
        "properties",
        "thrift",
        "server",
        "Hive",
        "Hive",
        "data",
        "HBase",
        "HiveHBase",
        "integration",
        "metrics",
        "dashboard",
        "data",
        "HBase",
        "Pig",
        "Hive",
        "Java",
        "APIs",
        "databases",
        "HBase",
        "HBase",
        "tables",
        "sets",
        "CURD",
        "operations",
        "HBase",
        "Collected",
        "amounts",
        "web",
        "log",
        "data",
        "sources",
        "web",
        "servers",
        "mobile",
        "Apache",
        "Flume",
        "data",
        "HDFSHBase",
        "analysis",
        "Flume",
        "ETL",
        "job",
        "data",
        "HTTP",
        "Source",
        "Sink",
        "HDFS",
        "PIG",
        "Script",
        "PIG",
        "Latin",
        "Scripts",
        "Created",
        "Map",
        "Reduce",
        "programs",
        "queries",
        "data",
        "knowledge",
        "PIGs",
        "Load",
        "Store",
        "functions",
        "Environment",
        "Apache",
        "Hadoop",
        "MapReduce",
        "HDFS",
        "CentOS",
        "Zookeeper",
        "Sqoop",
        "Cassandra",
        "Hive",
        "PIG",
        "Oozie",
        "Java",
        "Eclipse",
        "Amazon",
        "EC2",
        "JSP",
        "Servlets",
        "Java",
        "Developer",
        "Cubic",
        "Technologies",
        "Irving",
        "TX",
        "June",
        "April",
        "Responsibilities",
        "project",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "JDBC",
        "domain",
        "model",
        "database",
        "Stored",
        "Procedures",
        "database",
        "business",
        "logic",
        "users",
        "specifications",
        "Generic",
        "Classes",
        "functionality",
        "Exception",
        "Management",
        "mechanism",
        "Exception",
        "Handling",
        "Application",
        "Blocks",
        "exceptions",
        "user",
        "interfaces",
        "JSP",
        "JavaScript",
        "HTML",
        "Database",
        "design",
        "SQL",
        "Queries",
        "procedures",
        "MySQL",
        "CVS",
        "Source",
        "Code",
        "Logging",
        "log4j",
        "Environment",
        "JAVA",
        "Java",
        "Script",
        "HTML",
        "log4j",
        "JDBC",
        "Drivers",
        "Soap",
        "Web",
        "Services",
        "UNIX",
        "Shell",
        "SQL",
        "Server",
        "JavaJ2EE",
        "Developer",
        "FINRA",
        "Rockville",
        "MD",
        "January",
        "May",
        "Responsibilities",
        "programming",
        "troubleshooting",
        "web",
        "applications",
        "Java",
        "JSP",
        "HTML",
        "JavaScript",
        "CSS",
        "SQLServer",
        "Crossbrowser",
        "testing",
        "graphics",
        "CSS",
        "look",
        "End",
        "User",
        "Interface",
        "web",
        "graphics",
        "user",
        "interface",
        "GUI",
        "features",
        "business",
        "stakeholders",
        "schemes",
        "site",
        "flow",
        "web",
        "page",
        "functionality",
        "Prepared",
        "Technical",
        "Design",
        "Documentation",
        "modules",
        "facets",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "analysis",
        "architecture",
        "design",
        "testing",
        "implementation",
        "application",
        "UI",
        "Eclipse",
        "requirements",
        "analysis",
        "design",
        "testing",
        "phases",
        "MVC",
        "pattern",
        "JSPs",
        "view",
        "Struts",
        "Controller",
        "model",
        "user",
        "interfaces",
        "GUIs",
        "JSP",
        "JavaScript",
        "JSON",
        "Struts",
        "Action",
        "Servlet",
        "Front",
        "Controller",
        "control",
        "J2EE",
        "component",
        "requirement",
        "JSP",
        "Custom",
        "Tag",
        "Libraries",
        "control",
        "business",
        "processes",
        "middletier",
        "integration",
        "client",
        "side",
        "validations",
        "JavaScript",
        "JQuery",
        "XML",
        "Schema",
        "data",
        "maintenance",
        "structures",
        "documentation",
        "users",
        "manual",
        "application",
        "unit",
        "testing",
        "integration",
        "testing",
        "useracceptance",
        "testing",
        "bug",
        "Environment",
        "EE5",
        "J2EE",
        "XML",
        "HTML",
        "Struts2",
        "Servlets",
        "Java",
        "Script",
        "JSP",
        "CSS",
        "JDBC",
        "SQL",
        "Education",
        "Bachelors",
        "Additional",
        "Information",
        "Skill",
        "Hadoop",
        "Core",
        "Services",
        "HDFS",
        "Map",
        "Reduce",
        "Spark",
        "YARN",
        "Hadoop",
        "Distribution",
        "Horton",
        "Cloudera",
        "Apache",
        "SQL",
        "Databases",
        "HBase",
        "Cassandra",
        "Hadoop",
        "Data",
        "Services",
        "Hive",
        "Pig",
        "Sqoop",
        "Flume",
        "Sqoop",
        "Hadoop",
        "Operational",
        "Services",
        "Zookeeper",
        "Oozie",
        "Monitoring",
        "Tools",
        "Ganglia",
        "Cloudera",
        "Manager",
        "Cloud",
        "Computing",
        "Tools",
        "Amazon",
        "AWS",
        "Languages",
        "C",
        "JavaJ2EE",
        "Python",
        "SQL",
        "PLSQL",
        "Pig",
        "Latin",
        "HiveQL",
        "Unix",
        "Shell",
        "Scripting",
        "Java",
        "J2EE",
        "Technologies",
        "Core",
        "Java",
        "Servlets",
        "Hibernate",
        "Spring",
        "Struts",
        "JMS",
        "EJB",
        "Application",
        "Servers",
        "Web",
        "Logic",
        "Web",
        "Sphere",
        "JBoss",
        "Tomcat",
        "Oracle",
        "MySQL",
        "Postgress",
        "Teradata",
        "Operating",
        "Systems",
        "UNIX",
        "Windows",
        "LINUX",
        "Build",
        "Tools",
        "Jenkins",
        "Maven",
        "ANT",
        "Development",
        "Tools",
        "Microsoft",
        "SQL",
        "Studio",
        "Toad",
        "Eclipse",
        "NetBeans",
        "Development",
        "methodologies",
        "AgileScrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:37:19.123833",
    "resume_data": "Sr Hadoop Developer Sr Hadoop span lDeveloperspan Sr Hadoop Developer Humana Health Insurance Louisville KY 7 years of practical experience in building industry specific Java applications and implementing Bigdata technologies in core and enterprise software development 4 years of experience in developing applications that perform large scale Distributed Data Processing using Big Data ecosystem tools Hadoop Hive Pig Sqoop Hbase Cassandra Spark Spark Streaming MLLib Mahout Oozie Zoo Keeper Flume Yarn and Avro Working knowledge in installing and maintaining Cassandra by configuring the cassandrayaml file as per the business requirement and performed readswrites using Java JDBC connectivity Experience with Cloudera Manager for management of Hadoop cluster Good conceptual understanding and experience in cloud computing applications using Amazon EC2 S3 EMR Experience in analyzing data using HiveQL Pig Latin HBase and custom Map Reduce programs in Java Extensive Experience on Teradata database analyzing business needs of clients developing effective and efficient solutions and ensuring client deliverables with in committed timelines Expertise in maintaining data quality data organization and metadata Passionate about Big Data Analytics and skilled in exploring data content and Expert in distributed computing algorithms and data analytics Hands on experience in using various Hadoop distributions Apache Cloudera Hortonworks MapR InDepth knowledge and experience in design development and deployments of Big Data projects using Hadoop Data Analytics NoSQL Distributed Machine Learning frameworks Solid understanding of SQL NOSQL databases such as Oracle PostgreSQL MySQL MongoDB HBase Cassandra Knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Worked on MongoDB database concepts such as locking transactions indexes Sharing replication schema design Very good understanding Cassandra cluster mechanism that includes replication strategies snitch gossip consistent hashing and consistency levels Experience in Coding Teradata SQL Teradata Stored Procedures Macros and Triggers Strong experience in Creating Database Objects such as Tables Views Functions Stored Procedures Indexes Triggers Cursors in Teradata Experience data processing like collecting aggregating moving from various sources using Apache Flume and Kafka Developed a data pipeline using Kafka and Spark Streaming to store data into HDFS and performed the realtime analytics on the incoming data Experience in importing the realtime data to Hadoop using Kafka and implemented the Oozie job for daily imports Experienced in working with inmemory processing framework like Spark Transformations SparkQL MLib and Spark Streaming Expertise in creating Custom Serdes in Hive Good working experience on using Sqoop to import data into HDFS from RDBMS and viceversa Expertise in job scheduling and monitoring tools like Oozie and Zoo Keeper Experience in design and development of Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Experience in performing adhoc queries on structured data using Hive QL and used Partition and Bucketing techniques and joins with HIVE for faster data access Experience in performing ETL operations using Pig Latin scripts Implemented Java APIs and created custom Java programs for fullfledged utilization of Hadoop and its related tools Implemented work flows that involve Hadoop actions using Oozie coordinators Experienced in implementing POC using Spark Sql and Mlib libraries Improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs YARN Hands on experience in handling Hive tables using Spark SQL Hands on experience on writing Queries Stored procedures Functions and Triggers by using SQL Used EMR Elastic Map Reducing to perform bigdata operations in AWS Proficient using version control tools like GIT VSS SVN and PVCS Involvement in all stages of software development life cycle SDLC and follow agile methodologies and continuous delivery Strong skills in Object Oriented Analysis and Design OOAD Well versed in enterprise software development methodologies and practices including TDD BDD design patterns and performance testing Created User Defined Functions UDFs User Defined Aggregated Functions UDAFs in PIG and Hive Experience in dealing with log files to extract data and to copy into HDFS using Flume Experience with Testing MapReduce programs using MRUnit JUnit and Easy Mock Implemented distributed searching capabilities using Solr to empower the geospatial search and navigation feature Experienced in using Solr to create search indexes to perform search operations faster Strong handson experience in Java and J2EE frameworks Experience working with JAVA J2EE JDBC ODBC JSP Java Eclipse Java Beans EJB Servlets Expert in developing web page interfaces using JSP Java Swings and HTML scripting languages Excellent understanding on Java beans and Hibernate framework to implement model logic to interact with RDBMS databases Experience in using IDEs like Eclipse NetBeans and Maven Hands on experienced working with source control tools such as Rational Clear Case and Clear Quest Authorized to work in the US for any employer Work Experience Sr Hadoop Developer Humana Health Insurance Louisville KY September 2018 to Present Responsibilities Analyzed large and critical datasets using Cloudera HDFS HBase MapReduce Hive Hive UDF Pig Sqoop Zookeeper and Spark Gathered the business requirements from the Business Partners and Subject Matter Experts Developed environmental search engine using JAVA Apache SOLR and MYSQL Managed works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting and regionalization with SOLR Search Engine Ingested data from RDBMS and performed data transformations and then export the transformed data to Cassandra as per the business requirement Written multiple MapReduce programs for data extraction transformation and aggregation from multiple file formats including XML JSON CSV other compressed file formats Developed automated processes for flattening the upstream data from Cassandra which in JSON format Used Hive UDFs to flatten the JSON Data Optimized MapReduce Jobs to use HDFS efficiently by using various compression mechanisms Developed PIG UDFs to provide Pig capabilities for manipulating the data according to Business Requirements and worked on developing custom PIG Loaders and Implemented various requirements using Pig scripts Experienced on loading and transforming of large sets of structured semi structured and unstructured data Created POC using Spark Sql and Mlib libraries Developed a Spark Streaming module for consumption of Avro messages from Kafka Implementing different machine learning techniques in Scala using Scala machine learning library and created POC using SparkSql and Mlib libraries Experienced in Querying data using SparkSQL on top of Spark Engine implementing Spark RDDs in Scala Expertise in writing Scala code using Higher order functions for iterative algorithms in Spark for Performance considerations Experienced in managing and reviewing Hadoop log files Worked with different File Formats like TEXTFILE AVROFILE ORC and PARQUET for HIVE querying and processing Loading data by using the Teradata loader connection writing Teradata utilities scripts Fast Load Multiload and working with loader logs To monitor query run times using Teradata Performance Monitor Involved in loading of data into Teradata from legacy systems and flat files using complex MLOAD scripts and FASTLOAD scripts Create and Maintain Teradata Tables Views Macros Triggers and Stored Procedures Monitored workload job performance and capacity planning using Cloudera Distribution Worked on Data loading into Hive for Data Ingestion history and Data content summary Involved in developing Impala scripts for extraction transformation loading of data into data warehouse Used Hive and Impala to query the data in HBase Created Impala tables and SFTP scripts and Shell scripts to import data into Hadoop Developed Hbase java client API for CRUD Operations Created Hive tables and involved in data loading and writing Hive UDFs Developed Hive UDFs for rating aggregation Generated Java APIs for retrieval and analysis on NoSQL database such as HBase and Cassandra Provided adhoc queries and data metrics to the Business Users using Hive Pig Did various performance optimizations like using distributed cache for small datasets partition and bucketing in hive doing map side joins etc Worked on importing and exporting data from Oracle and DB2 into HDFS and HIVE using Sqoop for analysis visualization and to generate reports Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Created data pipeline for different events of ingestion aggregation and load consumer response data in AWS S3 bucket into Hive external tables in HDFS location to serve as feed for tableau dashboards Used EMR Elastic Map Reducing to perform big data operations in AWS Worked on Apache spark writing python applications to convert txt xls files and parse Developed Python scripts UDFs using both Data framesSQL and RDDMapReduce in Spark for Data Aggregation queries and writing data back into RDBMS through Sqoop Installed the application on AWS EC2 instances and configured the storage on S3 buckets Use different components of Talend tOracleInput tOracleOutput tHiveInput tHiveOutput tHiveInputRow tUniqeRow tAggregateRow tRunJob tPreJob tPostJob tMap tJavaRow tJavaFlex tFilterRow etc to develop standard jobs Loading data from different source database files into Hive using Talend tool Load and transform data into HDFS from large set of structured data OracleSql server using Talend Big data studio Implemented Spark using PythonScala and utilizingSpark Core Spark Streaming and Spark SQL for faster processing of data instead of MapReduce in Java Experience in integrating Apache Kafka with Apache Spark for real time processing Exposure on usage of Apache Kafka develop data pipeline of logs as a stream of messages using producers and consumers Scheduled Oozie workflow engine to run multiple Hive and Pig jobs which independently run with time and data availability Worked on custom Pig Loaders and Storage classes to work with a variety of data formats such as JSON Compressed CSV etc Involved in running Hadoop Streaming jobs to process Terabytes of data Used JIRA for bug tracking and CVS for version control Environment Hadoop Map Reduce Hive HDFS PIG Sqoop Oozie Cloudera Flume HBase SOLR CDH3 Cassandra Oracle UnixLinux Hadoop Hive PIG SQOOP Flume HDFS J2EE OracleSQL DB2 UnixLinux JavaScript Ajax Eclipse IDE CVS JIRA Sr Hadoop Developer Microchip Computer Solutions Springfield IL April 2015 to August 2018 Responsibilities Installed and configured Hadoop MapReduce HDFS and developed multiple MapReduce jobs in Java for data cleansing and preprocessing Responsible to manage data coming from different sources Involved in gathering the business requirements from the Business Partners and Subject Matter Experts Proactively monitored systems and services architecture design and implementation of Hadoop deployment configuration management backup and disaster recovery systems and procedures Involved in works including indexing data tuning relevance developing custom tokenizers and filters adding functionality includes playlist custom sorting Supported MapReduce Programs those are running on the cluster Involved in HDFS maintenance and loading of structured and unstructured data Involved in file movements between HDFS and AWS S3 and extensively worked with S3 bucket in AWS Worked extensively with importing metadata into Hive using Python and migrated existing tables and applications to work on AWS cloudS3 Installed and configured Pig and written Pig Latin scripts Imported data using Sqoop to load data from MySQL to HDFS on regular basis Expert knowledge on MongoDB NoSQL data modeling tuning disaster recovery backup used it for distributed storage and processing using CRUD Extracted and restructured the data into MongoDB using import and export command line utility tool Designed and Maintained Tez workflows to manage the flow of jobs in the cluster Developed Scripts and Batch Job to schedule various Hadoop Program Installation of Oozie workflow engine to run multiple Hive and pig jobs Writing Hive queries for data analysis to meet the business requirements Loading log data into HDFS using Flume and performing ETL Integration Collecting and aggregating large amounts of log data using Flume and staging data in HDFS for further analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Created Hive tables and working on them using Hive QL Good Understanding of DAG cycle for entire Spark application flow on Spark application WebUI Developed Spark SQL scripts and involved in converting Hive UDFs to Spark SQL UDFs Implemented procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Developed multiple Spark jobs in ScalaPython for Data cleaning preprocessing and Aggregating Developed Spark programs using Scala Involved in Creating SparkSQL Queries and Developed Oozie workflow for Spark jobs Push data as delimited files into HDFS using Talend Big data studio Analyzed and performed data integration using Talend open integration suite Wrote complex SQL queries to take data from various sources and integrated it with Talend Used Storm for an automatic mechanism for repeating attempts to download and manipulate the data when there is a hiccup Designing and development of technical architecture requirements and statistical models using R Used Storm to analyze large amounts of nonunique data points with low latency and high throughput Developed UI application using AngularJS integrated with Elastic Search to consume REST Writing the shell scripts to monitor the health check of Hadoop daemon services and respond accordingly to any warning or failure conditions Utilized Agile and Scrum Methodology to help manage and organize a team of developers with regular code review sessions Environments Hadoop Hive Linux Map Reduce HDFS Hive Pig HBase Sqoop Kafka Flume Shell Scripting Storm Java JDK 16 Java 6 Eclipse Oracle 10g PLSQL SQLPLUS Toad 96 Linux JIRA 51 Storm CVS JIRA 52 Hadoop Developer Dell Austin TX May 2012 to March 2015 Responsibilities Launching and Setup of HADOOP Cluster which includes configuring different components of HADOOP Hands on experience in loading data from UNIX file system to HDFS Wrote the Map Reduce jobs to parse the web logs which are stored in HDFS Developed Simple to complex MapReduce Jobs using Hive and Pig Developed multiple Map Reduce jobs in PIG and Hive for data cleaning and preprocessing Cluster coordination services through Zookeeper Designed and implemented Hive queries and functions for evaluation filtering loading and storing of data Installed Oozie workflow engine to run multiple Hive and Pig jobs which run independently with time and data availability Expertise in Partitions Bucketing concepts in Hive and analyzed the data using the HiveQL Installed and configured Flume Hive PIG Sqoop and Oozie on the Hadoop cluster Involved in creating Hive tables loading data and running Hive queries in those data Extensive Working knowledge of partitioned table UDFs performance tuning compressionrelated properties thrift server in Hive Used Hive to analyze data ingested into HBase by using HiveHBase integration and compute various metrics for reporting on the dashboard Loading the data to HBase Using Pig Hive and Java APIs Worked with NoSQL databases like HBase in creating HBase tables to load large sets of semistructured Experienced with performing CURD operations in HBase Collected and aggregated large amounts of web log data from different sources such as web servers mobile using Apache Flume and stored the data into HDFSHBase for analysis Developed Flume ETL job for handling data from HTTP Source and Sink as HDFS Involved in writing optimized PIG Script along with involved in developing and testing PIG Latin Scripts Created Map Reduce programs for some refined queries on big data Working knowledge in writing PIGs Load and Store functions Environment Apache Hadoop 101 MapReduce HDFS CentOS Zookeeper Sqoop Cassandra Hive PIG Oozie Java Eclipse Amazon EC2 JSP Servlets Java Developer Cubic Technologies Irving TX June 2010 to April 2012 Responsibilities Implemented the project according to the Software Development Life Cycle SDLC Implemented JDBC for mapping an objectoriented domain model to a traditional relational database Created Stored Procedures to manipulate the database and to apply the business logic according to the users specifications Developed the Generic Classes which includes the frequently used functionality so that it can be reusable Exception Management mechanism using Exception Handling Application Blocks to handle the exceptions Designed and developed user interfaces using JSP JavaScript and HTML Involved in Database design and developing SQL Queries stored procedures on MySQL Used CVS for maintaining the Source Code Logging was done through log4j Environment JAVA Java Script HTML log4j JDBC Drivers Soap Web Services UNIX Shell scripting SQL Server JavaJ2EE Developer FINRA Rockville MD January 2009 to May 2010 Responsibilities Responsible for programming and troubleshooting web applications using Java JSP HTML JavaScript CSS and SQLServer Responsible for Crossbrowser testing and debugging and creating graphics Involved in creating CSS for a unified look of the Front End User Interface Created optimizing web graphics including designing and incorporating graphic user interface GUI features Worked with the business stakeholders to determine navigational schemes site flow and general web page functionality Prepared Technical Design Documentation for the modules designed Involved in all facets of software development life cycle from requirements analysis architecture design coding testing and implementation Developed and maintained the application UI based on Eclipse Actively participated in requirements gathering analysis design and testing phases Developed and implemented the MVC architectural pattern JSPs as the view Struts as Controller and as model Created graphical user interfaces GUIs frontend using JSP JavaScript and JSON Struts Action Servlet is used as Front Controller for redirecting the control to the specific J2EE component as per the requirement Developed JSP with Custom Tag Libraries for control of the business processes in the middletier and was involved in their integration Responsible for developing the client side validations using JavaScript and JQuery Developed the XML Schema for the data maintenance and structures Prepared documentation and participated in preparing users manual for the application Involved in unit testing integration testing useracceptance testing and bug fixing Environment JAVA EE5 J2EE XML HTML Struts2 Servlets Java Script JSP CSS JDBC SQL ServerWebSphere8Windows Education Bachelors Additional Information Skill set Hadoop Core Services HDFS Map Reduce Spark YARN Hadoop Distribution Horton works Cloudera Apache NO SQL Databases HBase Cassandra Hadoop Data Services Hive Pig Sqoop Flume Sqoop Hadoop Operational Services Zookeeper Oozie Monitoring Tools Ganglia Cloudera Manager Cloud Computing Tools Amazon AWS Languages C JavaJ2EE Python SQL PLSQL Pig Latin HiveQL Unix Shell Scripting Java J2EE Technologies Core Java Servlets Hibernate Spring Struts JMS EJB Application Servers Web Logic Web Sphere JBoss Tomcat Databases Oracle MySQL Postgress Teradata Operating Systems UNIX Windows LINUX Build Tools Jenkins Maven ANT Development Tools Microsoft SQL Studio Toad Eclipse NetBeans Development methodologies AgileScrum Waterfall",
    "unique_id": "aa31df50-3023-4ebe-9a3c-0db0d8f4cff7"
}