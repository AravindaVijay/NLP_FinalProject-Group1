{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Walmart Philadelphia PA Over 8 years of experience as a WebApplication Developer and coding with analytical programming using Python DJango Java and Various JavaScript frameworks Angular JS TypeScript Node JS NPM React JS Redux BackBone Js Knockout JS D3JS VueJS JQuery Ember JS and Ext JS Experience with Python LibrariesPackages such as Py Query Numpy Scipy Pickle PyQT PySide wxPython PyTables DataFrames SQLAlchemy Twisted Pygame pyGtk Pandas and Matplotlib Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience object oriented programming OOP concepts using Python Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Proficient in creating front endsystems using JavaScript jQuery Bootstrap HTML5 CSS3 and MVC frameworks such as Angularjs and Nodejs Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile Experienced in web applications development using Django Python Experience with containerizing applications using Docker Profiled python code for optimization and memory management Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts We have implemented pyspark for Transformation and Actions in Spark Having working Knowledge of Amazon AWS ECS Worked extensively on Big Data analytical models developed in Python Extensive use of Object Oriented design methodology and Agile in software development Experienced in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge in working with continuous deployment using Heroku and Jenkins Experience in developing applications using Amazon web services like EC2 Cloud Search Developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Leveraging queueing architectures with RabbitMQ for scalability performance and building Experienced in installing configuring modifying testing and deploying applications with Apache Proficient in developing multithreaded web services using CherryPy and bottlePy framework Experienced in working with various IDEs Visual Studio and Vim Experienced in developing Web Services with Python Good knowledge of Web Services with protocols SOAP REST Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Experienced in using Integrated Development Environment IDEs inPyDev PyScripter Pycharm Spider Python IDLE Brackets Eclipse JBuilder Jdeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPythonandNetBeans for debugging and also worked with SublimeText2 EditPlus Notepad VimEditors for coding Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies Work Experience Sr Python Developer Walmart Philadelphia PA November 2017 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib Beautiful Soup and Pandas python libraries during development lifecycle PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Created core Python API which will be using among multiple modules Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote and executed various MySQL database queries fromPythonusing PythonMySQL connector and MySQL dB package Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed API services in PythonTornado and NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Used Python library BeautifulSoup for web scrapping to extract data for building graphs Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party messaging storage services Created UI using JavaScript and HTML5CSS3 Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Developed monitoring and notification tools using Python Developed MVC prototype replacement of current product with Django Worked on serializing data using Serializers in Django Rest Framework Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Extensive working experience in agile environment using a CICD model methodology Used and configured NGINX and Nodejs servers for the portal to run on and made them work even for CORS Worked on Container Clustering and Orchestration with Docker Swarm TeamCity and Kubernetes Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Generated Python Django Forms to record data of online usersUsed Kafka for data pipeline Created Data tables utilizing Pit to display accounting information and add delete update records Used Jenkins for Continuous Integration and deployment into AWS ECS fargate Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Installed and configured Jenkins for Automating Deployments and providing an automation solution Integrated GIT into Jenkins to automate the code checkout process Wrote Python normalizations scripts to find duplicate data in different environments Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Managed builds and wrote Build scripts for JAVA and WebSphere based applications Responsibilities for creation of Database Business Logic to display the records dynamically on template based on query providing user permission to access features of the site Generated Python Django forms to record data of online users and used PyTest for writing test cases Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Experience in building frameworks in Python for Test Automation Generated automatic daily build from Travis CI build server Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used SVN GitHub Team Foundation Server TFS and JIRA to developed application for the client Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experienced in working with different operating systems like Windows Linux and UNIX Familiar with Agile and Waterfall development methodologies Environment Python Django Flask Pandas PyCharm PyTorch Numpy scikitlearn Python API Celery ORM Microservices Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TensorFlow ROR Es6 Typescript JSON web token Java MySQL SQL PLSQL PostgreSQL Cassandra Rest Travis Ansible AWS DynamoDB Google Cloud Platform Nginx Kubernetes Docker Swarm GitLab Git unit test Selenium Jest Mockito MAVEN JSON TFS Linux Slack Jenkins Agile Scrum Sr Python Developer Sanofi Raleigh NC September 2015 to October 2017 Responsibilities Developed entire front end and back end modules using Python on Django Web Framework Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed python scripts in order to migrate information from Oracle to MongoDB Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Restful web services using Python REST API Framework Worked on creating Python APIs Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in Developing a Restful APIS service using Python Flask framework Involved in the development of front end of the application using Python HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Developed dynamic web pages using Python Django Frameworks Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Developed monitoring and notification tools using Python Developed web applications and RESTful web services and APIs using Python Elasticsearch and Tornado Improved the application by designing and developing it using HTML and JavaScript Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Generated Python Django Forms to record data of online users Created MySQL backend for data entry from Flash Assisted the Flash developer send the correct data via query strings Built main application in Python Django using technologies like Angularjs Backbonejs Emberjs and Celery Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Experience in agile environment using a CICD model methodology Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Have experience on Kubernetes and Docker Container for runtime environment of system to build test deploy Maintained the Source code using Team Foundation Server TFS in a multi developer environment Worked on Pandas to import the data Sort and plot the statistical data using histograms Wrote a Python module to connect and view the status of an Apache Cassandra instance Worked on converting HiveSQL queries into Spark transformations using Spark RDDs Python and OOP with Python Worked on developing and executing shell scripts to automate the jobs Developed MVC prototype replacement of current product with Django Worked extensively on Spark Streaming Spark SQL PySpark and HadoopHDFS API doing MapReduce Significantly improved report generation efficiency by caching reusing and improve the security level of data Experienced in automation and continuous integration process with Cloud bees Enterprise Jenkins Used Jenkins for Continuous Integration and deployment into Tomcat Application Server Integrated GIT into Jenkins to automate the code checkout process Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party email messaging storage services Strong experience working with Hadoop from Cloudera Data Platform and running services through Clouderamanager Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Wrote Python normalizations scripts to find duplicate data in different environments Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Used Python IDE Pycharm for developing the code and performing unit test Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Environment Python Django PyCharm PyTorch Pandas Flask Python API TensorFlow scikitlearn NumPy Microservices ORM Celery Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TFS ROR Angular React Es6 typescript JSON web token Java MySQL PLSQL PostgreSQL DynamoDB Rest Git unit test Selenium AWS EC2 DynamoDB Google Cloud Platform Chef Kubernetes Maven JSON Jenkins Docker hipchat Zoom Linux Agile Scrum Python Developer Comcast Seattle WA February 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Worked on Django ORM module for signing complex queries Utilized Python libraries python NumPy Twisted and matplotlib Developed API modularizing existing python module with the help of pyyaml libraries Designed and configured database and back end applications and programs Used JavaScript data visualization framework D3js to display the information in a chart view Experienced in developing Web Services with Python programming language Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Created custom directives in Angular JS for reusable components multifield form elements background file uploads Good knowledge in working with Webapplication server Apache Tomcat Tornado Cherrypy Chaussette Rocket Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Involved in various phases of the project like Analysis Design Development and Testing Developed rich user interface using CSS HTML5 JavaScript and jQuery Developed a FrontEnd GUI as standalone Python application Involved in Integrating and Functional System Testing for the entire Data Warehousing Application Experience in python Jupiter Scientific computing stack NumPy SciPy pandas and matplotlib Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Developed new scripts a using many regular expressions to match and extract data as required to comply with various compliance reporting requirements Involved in deployment using Docker Container on AWS Build SQL queries for performing various CRUD operations like create update read and delete Worked on Anti Money Laundering AML application to develop new modules to build reports for identifying various accounts and activities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Installed and configured Jenkins for Automating Deployments and providing an automation solution Participated in requirement gathering and worked closely with the architect in designing and modeling Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Optimized for online queries and Data Warehousing tools using dimensional model Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Used GIT for the version control Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Development done using Eclipse IDE Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 AngularJS Bootstrap JQuery JSON web token SSOSAML Pyramid ROR Java Oracle Rest Eclipse Websphere Git SVN unit test Selenium Maven JSON XML Jira Linux hipchat Jenkins Agile Python Developer eBay Columbus OH July 2012 to January 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Hands on experience with databases using ORMsDOMs for integrating with Oracle MySQL PostgreSQL Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Developed asynchronous notifications by using tornado Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application Used Netbeans IDE for development Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 Bootstrap JQuery Ruby ROR Ruby on Rails JSON web token SSOSAML Pyramid Java AWS EC2 S MySQL Rest Soap Netbeans Websphere CVS SVN Junit Waterfall Ant XML Jira Unix hipchat Python Developer IBM Chicago IL May 2010 to June 2012 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML PHP CSS standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS and HTML Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Performed Scalable Computing and data analytics of big data Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Python Scripts to create Excel and CSV files for documenting the Statistical Reports Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Environment Python Django HTML CSS JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git Education Master of Science in Science and Engineering University of Delaware Skills PHP Javascript MYSQL Git CSS",
    "entities": [
        "CSS HTML JavaScript",
        "Clouderamanager Pyspark",
        "Database Business Logic",
        "GUI",
        "NumPy Microservices ORM Celery Tornado",
        "ORMsDOMs",
        "Java PHP Nodejs Python Ruby",
        "Nodejs",
        "Websphere CVS SVN",
        "HTML AJAX CSS",
        "SQLAlchemy",
        "UNIX",
        "Integrated GIT",
        "Tomcat Application Server Integrated",
        "Python Django Frameworks",
        "Created MySQL",
        "Amazon Web Services AWS",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "Controller",
        "Bootstrap JQuery Ruby ROR Ruby on Rails JSON",
        "Python DJango Java",
        "SublimeText2 EditPlus Notepad VimEditors",
        "XML",
        "Jenkins for Continuous Integration",
        "HTMLCSSJQuery",
        "Hadoop",
        "SOAP",
        "CherryPy",
        "Functional",
        "Rational Application Developer Leveraging",
        "Maintained",
        "Shell",
        "Developed Restful Microservices",
        "Spark Streaming Spark",
        "MySQL Database",
        "Amazon",
        "PyCharm Experienced",
        "UserAcceptance",
        "WebSphere",
        "Developed",
        "Oracle Relational",
        "Jenkins",
        "Integrated Development Environment",
        "Created Python",
        "Python Flask framework Involved",
        "Oracle MySQL PostgreSQL Created",
        "Utilized",
        "HTML JavaScript",
        "Puppet",
        "Analysis Design Development and Testing Developed",
        "Git",
        "Python Libraries",
        "Restful",
        "Selenium AWS EC2",
        "Kubernetes Involved",
        "C NET Created Database Schema",
        "jQuery Developed",
        "Created Data",
        "Spark Performed",
        "Flask",
        "PHP CSS",
        "Python Developer IBM",
        "Requirement Analysis Application Design Development",
        "Spark Wrote",
        "Celery",
        "Views",
        "SQLbased",
        "PyQt",
        "MVC",
        "Docker Container",
        "PythonDjango",
        "Spark",
        "Agile",
        "Cloudera Data Platform",
        "EndtoEnd",
        "GIT",
        "Python Worked",
        "Bugzilla Developed",
        "Python Developed MVC",
        "CSV",
        "API",
        "HTML CSS JavaScript",
        "NGINX",
        "Team Foundation Server TFS",
        "SVN GitHub Team Foundation",
        "Developed MVC",
        "Front and Back end Developing Web Applications",
        "Created",
        "ASPNET MVC Validation",
        "MySQL PostgreSQL Unit",
        "AWS",
        "Oracle",
        "Coding",
        "Python Object Oriented Design",
        "PHP Proficient",
        "HTML",
        "TypeScript",
        "SQL",
        "GitHub",
        "Pandas for Statistical Analysis",
        "lPythonspan",
        "Kubernetes",
        "WebApplication Developer",
        "Chicago",
        "Webapplication",
        "Big Data",
        "CICD",
        "Nodejs Extensive",
        "PHP Created",
        "CSS HTML5 JavaScript",
        "LibrariesPackages",
        "Python API Celery ORM Microservices Tornado",
        "Visual Studio",
        "Utilized Python",
        "Pandas",
        "Python Elasticsearch and Tornado Improved",
        "CRUD",
        "ERDiagrams",
        "JQuery Created",
        "JAVA",
        "JavaScript Created",
        "AWS Build SQL",
        "Created UI",
        "MySQL Used AWstat",
        "Developed API services",
        "Djangos",
        "JavaScript",
        "Selenium Maven JSON",
        "Python for Test Automation Generated",
        "Google Analytics",
        "Microsoft",
        "Python REST API Framework Worked",
        "Ext JS",
        "XSD",
        "Rest Git",
        "Utilized PyUnit",
        "Data Warehousing Application",
        "Django AWS Amazon",
        "Version Control System",
        "CSS",
        "CMS",
        "Transformation and Actions",
        "jQuery",
        "ASPNET",
        "Python HTML5 CSS3 AJAX JSON",
        "CSS Maintained",
        "Data Warehousing",
        "NoSQL",
        "BASH",
        "EBS",
        "Oracle SQLite PostgreSQL",
        "PyTest",
        "Python Unit Test",
        "JQuery",
        "PythonTornado",
        "Python Created",
        "Apache Proficient"
    ],
    "experience": "Experience with Python LibrariesPackages such as Py Query Numpy Scipy Pickle PyQT PySide wxPython PyTables DataFrames SQLAlchemy Twisted Pygame pyGtk Pandas and Matplotlib Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience object oriented programming OOP concepts using Python Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Proficient in creating front endsystems using JavaScript jQuery Bootstrap HTML5 CSS3 and MVC frameworks such as Angularjs and Nodejs Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile Experienced in web applications development using Django Python Experience with containerizing applications using Docker Profiled python code for optimization and memory management Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts We have implemented pyspark for Transformation and Actions in Spark Having working Knowledge of Amazon AWS ECS Worked extensively on Big Data analytical models developed in Python Extensive use of Object Oriented design methodology and Agile in software development Experienced in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge in working with continuous deployment using Heroku and Jenkins Experience in developing applications using Amazon web services like EC2 Cloud Search Developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Leveraging queueing architectures with RabbitMQ for scalability performance and building Experienced in installing configuring modifying testing and deploying applications with Apache Proficient in developing multithreaded web services using CherryPy and bottlePy framework Experienced in working with various IDEs Visual Studio and Vim Experienced in developing Web Services with Python Good knowledge of Web Services with protocols SOAP REST Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Experienced in using Integrated Development Environment IDEs inPyDev PyScripter Pycharm Spider Python IDLE Brackets Eclipse JBuilder Jdeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPythonandNetBeans for debugging and also worked with SublimeText2 EditPlus Notepad VimEditors for coding Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies Work Experience Sr Python Developer Walmart Philadelphia PA November 2017 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib Beautiful Soup and Pandas python libraries during development lifecycle PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Created core Python API which will be using among multiple modules Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote and executed various MySQL database queries fromPythonusing PythonMySQL connector and MySQL dB package Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed API services in PythonTornado and NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Used Python library BeautifulSoup for web scrapping to extract data for building graphs Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party messaging storage services Created UI using JavaScript and HTML5CSS3 Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Developed monitoring and notification tools using Python Developed MVC prototype replacement of current product with Django Worked on serializing data using Serializers in Django Rest Framework Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Extensive working experience in agile environment using a CICD model methodology Used and configured NGINX and Nodejs servers for the portal to run on and made them work even for CORS Worked on Container Clustering and Orchestration with Docker Swarm TeamCity and Kubernetes Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Generated Python Django Forms to record data of online usersUsed Kafka for data pipeline Created Data tables utilizing Pit to display accounting information and add delete update records Used Jenkins for Continuous Integration and deployment into AWS ECS fargate Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Installed and configured Jenkins for Automating Deployments and providing an automation solution Integrated GIT into Jenkins to automate the code checkout process Wrote Python normalizations scripts to find duplicate data in different environments Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Managed builds and wrote Build scripts for JAVA and WebSphere based applications Responsibilities for creation of Database Business Logic to display the records dynamically on template based on query providing user permission to access features of the site Generated Python Django forms to record data of online users and used PyTest for writing test cases Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Experience in building frameworks in Python for Test Automation Generated automatic daily build from Travis CI build server Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used SVN GitHub Team Foundation Server TFS and JIRA to developed application for the client Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experienced in working with different operating systems like Windows Linux and UNIX Familiar with Agile and Waterfall development methodologies Environment Python Django Flask Pandas PyCharm PyTorch Numpy scikitlearn Python API Celery ORM Microservices Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TensorFlow ROR Es6 Typescript JSON web token Java MySQL SQL PLSQL PostgreSQL Cassandra Rest Travis Ansible AWS DynamoDB Google Cloud Platform Nginx Kubernetes Docker Swarm GitLab Git unit test Selenium Jest Mockito MAVEN JSON TFS Linux Slack Jenkins Agile Scrum Sr Python Developer Sanofi Raleigh NC September 2015 to October 2017 Responsibilities Developed entire front end and back end modules using Python on Django Web Framework Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed python scripts in order to migrate information from Oracle to MongoDB Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Restful web services using Python REST API Framework Worked on creating Python APIs Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in Developing a Restful APIS service using Python Flask framework Involved in the development of front end of the application using Python HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Developed dynamic web pages using Python Django Frameworks Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Developed monitoring and notification tools using Python Developed web applications and RESTful web services and APIs using Python Elasticsearch and Tornado Improved the application by designing and developing it using HTML and JavaScript Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Generated Python Django Forms to record data of online users Created MySQL backend for data entry from Flash Assisted the Flash developer send the correct data via query strings Built main application in Python Django using technologies like Angularjs Backbonejs Emberjs and Celery Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Experience in agile environment using a CICD model methodology Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Have experience on Kubernetes and Docker Container for runtime environment of system to build test deploy Maintained the Source code using Team Foundation Server TFS in a multi developer environment Worked on Pandas to import the data Sort and plot the statistical data using histograms Wrote a Python module to connect and view the status of an Apache Cassandra instance Worked on converting HiveSQL queries into Spark transformations using Spark RDDs Python and OOP with Python Worked on developing and executing shell scripts to automate the jobs Developed MVC prototype replacement of current product with Django Worked extensively on Spark Streaming Spark SQL PySpark and HadoopHDFS API doing MapReduce Significantly improved report generation efficiency by caching reusing and improve the security level of data Experienced in automation and continuous integration process with Cloud bees Enterprise Jenkins Used Jenkins for Continuous Integration and deployment into Tomcat Application Server Integrated GIT into Jenkins to automate the code checkout process Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party email messaging storage services Strong experience working with Hadoop from Cloudera Data Platform and running services through Clouderamanager Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Wrote Python normalizations scripts to find duplicate data in different environments Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Used Python IDE Pycharm for developing the code and performing unit test Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Environment Python Django PyCharm PyTorch Pandas Flask Python API TensorFlow scikitlearn NumPy Microservices ORM Celery Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TFS ROR Angular React Es6 typescript JSON web token Java MySQL PLSQL PostgreSQL DynamoDB Rest Git unit test Selenium AWS EC2 DynamoDB Google Cloud Platform Chef Kubernetes Maven JSON Jenkins Docker hipchat Zoom Linux Agile Scrum Python Developer Comcast Seattle WA February 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Worked on Django ORM module for signing complex queries Utilized Python libraries python NumPy Twisted and matplotlib Developed API modularizing existing python module with the help of pyyaml libraries Designed and configured database and back end applications and programs Used JavaScript data visualization framework D3js to display the information in a chart view Experienced in developing Web Services with Python programming language Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Created custom directives in Angular JS for reusable components multifield form elements background file uploads Good knowledge in working with Webapplication server Apache Tomcat Tornado Cherrypy Chaussette Rocket Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Involved in various phases of the project like Analysis Design Development and Testing Developed rich user interface using CSS HTML5 JavaScript and jQuery Developed a FrontEnd GUI as standalone Python application Involved in Integrating and Functional System Testing for the entire Data Warehousing Application Experience in python Jupiter Scientific computing stack NumPy SciPy pandas and matplotlib Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Developed new scripts a using many regular expressions to match and extract data as required to comply with various compliance reporting requirements Involved in deployment using Docker Container on AWS Build SQL queries for performing various CRUD operations like create update read and delete Worked on Anti Money Laundering AML application to develop new modules to build reports for identifying various accounts and activities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Installed and configured Jenkins for Automating Deployments and providing an automation solution Participated in requirement gathering and worked closely with the architect in designing and modeling Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Optimized for online queries and Data Warehousing tools using dimensional model Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Used GIT for the version control Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Development done using Eclipse IDE Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 AngularJS Bootstrap JQuery JSON web token SSOSAML Pyramid ROR Java Oracle Rest Eclipse Websphere Git SVN unit test Selenium Maven JSON XML Jira Linux hipchat Jenkins Agile Python Developer eBay Columbus OH July 2012 to January 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Hands on experience with databases using ORMsDOMs for integrating with Oracle MySQL PostgreSQL Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Developed asynchronous notifications by using tornado Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application Used Netbeans IDE for development Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 Bootstrap JQuery Ruby ROR Ruby on Rails JSON web token SSOSAML Pyramid Java AWS EC2 S MySQL Rest Soap Netbeans Websphere CVS SVN Junit Waterfall Ant XML Jira Unix hipchat Python Developer IBM Chicago IL May 2010 to June 2012 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML PHP CSS standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS and HTML Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Performed Scalable Computing and data analytics of big data Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Python Scripts to create Excel and CSV files for documenting the Statistical Reports Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Environment Python Django HTML CSS JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git Education Master of Science in Science and Engineering University of Delaware Skills PHP Javascript MYSQL Git CSS",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Walmart",
        "Philadelphia",
        "PA",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "DJango",
        "Java",
        "Various",
        "JavaScript",
        "JS",
        "TypeScript",
        "Node",
        "JS",
        "NPM",
        "React",
        "JS",
        "Redux",
        "BackBone",
        "Js",
        "Knockout",
        "JS",
        "D3JS",
        "VueJS",
        "JQuery",
        "Ember",
        "JS",
        "Ext",
        "JS",
        "Experience",
        "Python",
        "LibrariesPackages",
        "Py",
        "Query",
        "Numpy",
        "Scipy",
        "Pickle",
        "PyQT",
        "PySide",
        "wxPython",
        "PyTables",
        "DataFrames",
        "SQLAlchemy",
        "Twisted",
        "Pygame",
        "Pandas",
        "Matplotlib",
        "Experience",
        "libraries",
        "machine",
        "learning",
        "pandas",
        "numpy",
        "matplotlib",
        "dataset",
        "dataset",
        "dataset",
        "algorithms",
        "predictions",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "Proficient",
        "endsystems",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "HTML5",
        "CSS3",
        "MVC",
        "frameworks",
        "Angularjs",
        "Nodejs",
        "experience",
        "Requirement",
        "Analysis",
        "Application",
        "Design",
        "Development",
        "knowledge",
        "SDLC",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Experience",
        "applications",
        "Docker",
        "Profiled",
        "python",
        "code",
        "optimization",
        "memory",
        "management",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "extracts",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Knowledge",
        "Amazon",
        "AWS",
        "ECS",
        "Data",
        "models",
        "Python",
        "use",
        "Object",
        "design",
        "methodology",
        "software",
        "development",
        "NoSQL",
        "technologies",
        "MongoDB",
        "CouchDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Experience",
        "applications",
        "Amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "PyCharm",
        "Eclipse",
        "Google",
        "GWT",
        "Rational",
        "Application",
        "Developer",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "building",
        "testing",
        "applications",
        "Apache",
        "Proficient",
        "web",
        "services",
        "CherryPy",
        "bottlePy",
        "framework",
        "IDEs",
        "Visual",
        "Studio",
        "Vim",
        "Web",
        "Services",
        "Python",
        "knowledge",
        "Web",
        "Services",
        "protocols",
        "SOAP",
        "REST",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Integrated",
        "Development",
        "Environment",
        "IDEs",
        "inPyDev",
        "PyScripter",
        "Pycharm",
        "Spider",
        "Python",
        "IDLE",
        "Brackets",
        "Eclipse",
        "JBuilder",
        "Jdeveloper",
        "Eric",
        "Komodo",
        "Edit",
        "Komodo",
        "IDE",
        "Cloud9",
        "IDE",
        "DrPythonandNetBeans",
        "SublimeText2",
        "EditPlus",
        "Notepad",
        "VimEditors",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Testdriven",
        "development",
        "methodologies",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Walmart",
        "Philadelphia",
        "PA",
        "November",
        "Present",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "Worked",
        "PythonOpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "processing",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "IIS",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "Database",
        "APIs",
        "database",
        "core",
        "Python",
        "API",
        "modules",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "matplotlib",
        "workflows",
        "Python",
        "scripts",
        "UNIX",
        "shell",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "namespace",
        "versions",
        "Python",
        "library",
        "BeautifulSoup",
        "web",
        "data",
        "building",
        "graphs",
        "scripts",
        "APIs",
        "party",
        "applications",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "integrations",
        "party",
        "storage",
        "services",
        "UI",
        "JavaScript",
        "HTML5CSS3",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "data",
        "Serializers",
        "Django",
        "Rest",
        "Framework",
        "data",
        "structures",
        "directories",
        "tuples",
        "inheritance",
        "features",
        "algorithms",
        "networks",
        "working",
        "experience",
        "environment",
        "CICD",
        "model",
        "methodology",
        "NGINX",
        "Nodejs",
        "servers",
        "portal",
        "CORS",
        "Container",
        "Clustering",
        "Orchestration",
        "Docker",
        "Swarm",
        "TeamCity",
        "Kubernetes",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "Kafka",
        "data",
        "pipeline",
        "Data",
        "tables",
        "Pit",
        "accounting",
        "information",
        "update",
        "records",
        "Jenkins",
        "Continuous",
        "Integration",
        "deployment",
        "AWS",
        "ECS",
        "Pandas",
        "Statistical",
        "Analysis",
        "application",
        "Numpy",
        "math",
        "functionalities",
        "Jenkins",
        "Automating",
        "Deployments",
        "automation",
        "solution",
        "Integrated",
        "GIT",
        "Jenkins",
        "code",
        "checkout",
        "process",
        "Wrote",
        "Python",
        "normalizations",
        "data",
        "environments",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "Managed",
        "Build",
        "scripts",
        "JAVA",
        "WebSphere",
        "applications",
        "Responsibilities",
        "creation",
        "Database",
        "Business",
        "Logic",
        "records",
        "template",
        "query",
        "user",
        "permission",
        "features",
        "site",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "change",
        "requests",
        "user",
        "server",
        "configuration",
        "kernel",
        "software",
        "installation",
        "OS",
        "Linux",
        "VMs",
        "Puppet",
        "projects",
        "requirement",
        "Experience",
        "frameworks",
        "Python",
        "Test",
        "Automation",
        "build",
        "Travis",
        "CI",
        "build",
        "server",
        "Agile",
        "Methodologies",
        "Scrum",
        "standup",
        "meetings",
        "servers",
        "Active",
        "Directory",
        "maintenance",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Developed",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "JavaScript",
        "CSS",
        "customers",
        "relationship",
        "management",
        "MySQL",
        "PostgreSQL",
        "Unit",
        "testing",
        "code",
        "bugs",
        "unit",
        "testing",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "SVN",
        "GitHub",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "JIRA",
        "application",
        "client",
        "applications",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Sublime",
        "Text",
        "PyCharm",
        "operating",
        "systems",
        "Windows",
        "Linux",
        "UNIX",
        "Familiar",
        "Agile",
        "Waterfall",
        "development",
        "methodologies",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "Pandas",
        "PyCharm",
        "PyTorch",
        "Numpy",
        "scikitlearn",
        "Python",
        "API",
        "Celery",
        "ORM",
        "Microservices",
        "Tornado",
        "SQLAlchemy",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "React",
        "Redux",
        "Machine",
        "data",
        "science",
        "TensorFlow",
        "ROR",
        "Es6",
        "Typescript",
        "JSON",
        "web",
        "Java",
        "MySQL",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "Cassandra",
        "Rest",
        "Travis",
        "AWS",
        "DynamoDB",
        "Google",
        "Cloud",
        "Platform",
        "Nginx",
        "Kubernetes",
        "Docker",
        "Swarm",
        "GitLab",
        "Git",
        "unit",
        "test",
        "Selenium",
        "Jest",
        "Mockito",
        "MAVEN",
        "JSON",
        "TFS",
        "Linux",
        "Slack",
        "Jenkins",
        "Agile",
        "Scrum",
        "Sr",
        "Python",
        "Developer",
        "Sanofi",
        "Raleigh",
        "NC",
        "September",
        "October",
        "Responsibilities",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "python",
        "scripts",
        "order",
        "information",
        "Oracle",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "Python",
        "APIs",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "web",
        "pages",
        "Python",
        "Django",
        "Frameworks",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Elasticsearch",
        "Tornado",
        "application",
        "HTML",
        "JavaScript",
        "data",
        "structures",
        "directories",
        "tuples",
        "inheritance",
        "features",
        "algorithms",
        "networks",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "MySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Assisted",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "application",
        "Python",
        "Django",
        "technologies",
        "Angularjs",
        "Backbonejs",
        "Emberjs",
        "Celery",
        "Designed",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "Experience",
        "environment",
        "CICD",
        "model",
        "methodology",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "solution",
        "Data",
        "tables",
        "PyQt",
        "patient",
        "policy",
        "information",
        "update",
        "patient",
        "records",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "configuration",
        "management",
        "Chef",
        "experience",
        "Kubernetes",
        "Docker",
        "Container",
        "runtime",
        "environment",
        "system",
        "test",
        "Source",
        "code",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "developer",
        "environment",
        "Pandas",
        "data",
        "Sort",
        "data",
        "histograms",
        "Python",
        "module",
        "status",
        "Apache",
        "Cassandra",
        "instance",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "OOP",
        "Python",
        "Worked",
        "shell",
        "scripts",
        "jobs",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "Spark",
        "Streaming",
        "Spark",
        "SQL",
        "PySpark",
        "API",
        "MapReduce",
        "report",
        "generation",
        "efficiency",
        "security",
        "level",
        "data",
        "automation",
        "integration",
        "process",
        "Cloud",
        "bees",
        "Enterprise",
        "Jenkins",
        "Jenkins",
        "Continuous",
        "Integration",
        "deployment",
        "Tomcat",
        "Application",
        "Server",
        "Integrated",
        "GIT",
        "Jenkins",
        "code",
        "checkout",
        "process",
        "scripts",
        "APIs",
        "party",
        "applications",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "experience",
        "Hadoop",
        "Cloudera",
        "Data",
        "Platform",
        "running",
        "services",
        "Clouderamanager",
        "Pyspark",
        "Caching",
        "Accumulators",
        "UDFs",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Wrote",
        "Python",
        "normalizations",
        "data",
        "environments",
        "Query",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "order",
        "web",
        "solution",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "IDEA",
        "Development",
        "systems",
        "Python",
        "Created",
        "data",
        "access",
        "modules",
        "python",
        "Used",
        "Python",
        "IDE",
        "Pycharm",
        "code",
        "unit",
        "test",
        "solutions",
        "Git",
        "GitHub",
        "microservice",
        "deployment",
        "Environment",
        "Python",
        "Django",
        "PyCharm",
        "PyTorch",
        "Pandas",
        "Flask",
        "Python",
        "API",
        "TensorFlow",
        "NumPy",
        "Microservices",
        "ORM",
        "Celery",
        "Tornado",
        "SQLAlchemy",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "React",
        "Redux",
        "Machine",
        "data",
        "science",
        "TFS",
        "ROR",
        "Angular",
        "React",
        "Es6",
        "typescript",
        "JSON",
        "web",
        "Java",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "DynamoDB",
        "Rest",
        "Git",
        "unit",
        "test",
        "Selenium",
        "AWS",
        "EC2",
        "DynamoDB",
        "Google",
        "Cloud",
        "Platform",
        "Chef",
        "Kubernetes",
        "Maven",
        "JSON",
        "Jenkins",
        "Docker",
        "hipchat",
        "Zoom",
        "Linux",
        "Agile",
        "Scrum",
        "Python",
        "Developer",
        "Comcast",
        "Seattle",
        "WA",
        "February",
        "August",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Worked",
        "Django",
        "ORM",
        "module",
        "queries",
        "Python",
        "NumPy",
        "Twisted",
        "API",
        "module",
        "help",
        "pyyaml",
        "libraries",
        "database",
        "end",
        "applications",
        "programs",
        "JavaScript",
        "data",
        "visualization",
        "framework",
        "D3js",
        "information",
        "chart",
        "view",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "custom",
        "directives",
        "JS",
        "components",
        "multifield",
        "form",
        "elements",
        "background",
        "file",
        "knowledge",
        "Webapplication",
        "server",
        "Apache",
        "Tomcat",
        "Tornado",
        "Cherrypy",
        "Chaussette",
        "Rocket",
        "APIs",
        "party",
        "data",
        "analysis",
        "representation",
        "data",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "user",
        "interface",
        "CSS",
        "HTML5",
        "JavaScript",
        "jQuery",
        "FrontEnd",
        "GUI",
        "Python",
        "application",
        "Integrating",
        "Functional",
        "System",
        "Testing",
        "Data",
        "Warehousing",
        "Application",
        "Experience",
        "python",
        "Jupiter",
        "computing",
        "stack",
        "NumPy",
        "SciPy",
        "pandas",
        "Pyspark",
        "Caching",
        "Accumulators",
        "UDFs",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "scripts",
        "expressions",
        "data",
        "compliance",
        "reporting",
        "requirements",
        "deployment",
        "Docker",
        "Container",
        "AWS",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Worked",
        "Anti",
        "Money",
        "Laundering",
        "AML",
        "application",
        "modules",
        "reports",
        "accounts",
        "activities",
        "Python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "email",
        "marketing",
        "campaigns",
        "forms",
        "data",
        "database",
        "Django",
        "Framework",
        "Installed",
        "Jenkins",
        "Automating",
        "Deployments",
        "automation",
        "solution",
        "requirement",
        "gathering",
        "architect",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "NumPy",
        "matplotlib",
        "queries",
        "Data",
        "Warehousing",
        "tools",
        "model",
        "logs",
        "occurrence",
        "event",
        "Python",
        "libraries",
        "GIT",
        "version",
        "control",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "pythonFlask",
        "Designed",
        "Cassandra",
        "schema",
        "APIs",
        "Development",
        "Eclipse",
        "IDE",
        "monitoring",
        "practices",
        "search",
        "vendors",
        "queries",
        "Environment",
        "Python",
        "Django",
        "ORM",
        "Tornado",
        "JavaScript",
        "HTML5",
        "CSS3",
        "AngularJS",
        "Bootstrap",
        "JQuery",
        "JSON",
        "web",
        "SSOSAML",
        "Pyramid",
        "ROR",
        "Java",
        "Oracle",
        "Rest",
        "Eclipse",
        "Websphere",
        "Git",
        "SVN",
        "unit",
        "test",
        "Selenium",
        "Maven",
        "JSON",
        "XML",
        "Jira",
        "Linux",
        "hipchat",
        "Jenkins",
        "Agile",
        "Python",
        "Developer",
        "eBay",
        "Columbus",
        "OH",
        "July",
        "January",
        "Responsibilities",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Bootstrap",
        "Java",
        "script",
        "query",
        "user",
        "experience",
        "validation",
        "JavaScript",
        "Hands",
        "experience",
        "databases",
        "ORMsDOMs",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "custom",
        "CMS",
        "Django",
        "Amazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "Rewrite",
        "existingPythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "notifications",
        "tornado",
        "Wrote",
        "pythonscripts",
        "XML",
        "documents",
        "data",
        "database",
        "data",
        "management",
        "system",
        "MySQL",
        "AWstat",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "Design",
        "test",
        "deploy",
        "website",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "SDLC",
        "process",
        "project",
        "JIRA",
        "Agile",
        "JQuery",
        "Java",
        "script",
        "manipulation",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "ASPNET",
        "C",
        "Flask",
        "Python",
        "PHP",
        "Created",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "highperformance",
        "MongoDB",
        "replica",
        "sets",
        "EC2",
        "reliability",
        "frontend",
        "modules",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "website",
        "power",
        "company",
        "energy",
        "consumption",
        "customers",
        "database",
        "data",
        "database",
        "customer",
        "accounts",
        "python",
        "modules",
        "operations",
        "data",
        "interface",
        "users",
        "accounts",
        "Pythons",
        "pandas",
        "libraries",
        "data",
        "exploration",
        "visualization",
        "electricity",
        "consumption",
        "data",
        "Python",
        "scripts",
        "quantities",
        "data",
        "databases",
        "energy",
        "storage",
        "projects",
        "countryspecific",
        "energy",
        "policies",
        "Python",
        "Django",
        "Forms",
        "data",
        "login",
        "users",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "modules",
        "csv",
        "itertools",
        "pickle",
        "development",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "testing",
        "methods",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Angularjs",
        "client",
        "web",
        "application",
        "Netbeans",
        "IDE",
        "development",
        "Environment",
        "Python",
        "Django",
        "ORM",
        "Tornado",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JQuery",
        "Ruby",
        "ROR",
        "Ruby",
        "Rails",
        "web",
        "SSOSAML",
        "Pyramid",
        "Java",
        "AWS",
        "EC2",
        "S",
        "MySQL",
        "Rest",
        "Soap",
        "Netbeans",
        "Websphere",
        "CVS",
        "SVN",
        "Junit",
        "Waterfall",
        "Ant",
        "XML",
        "Jira",
        "Unix",
        "hipchat",
        "Python",
        "Developer",
        "IBM",
        "Chicago",
        "IL",
        "May",
        "June",
        "Responsibilities",
        "layers",
        "Front",
        "end",
        "Web",
        "Applications",
        "W3C",
        "XHTML",
        "HTML",
        "PHP",
        "CSS",
        "standards",
        "Python",
        "Django",
        "Payment",
        "Processing",
        "monitoring",
        "payments",
        "solutions",
        "software",
        "life",
        "cycle",
        "SDLC",
        "web",
        "application",
        "JavaScript",
        "Dynamic",
        "Page",
        "Functionality",
        "popup",
        "screens",
        "user",
        "entry",
        "application",
        "Python",
        "Django",
        "EndtoEnd",
        "Web",
        "application",
        "development",
        "MVC",
        "architecture",
        "frontend",
        "CSS",
        "HTML",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "PyUnit",
        "Designed",
        "Database",
        "Model",
        "application",
        "tables",
        "Views",
        "procedures",
        "Implementation",
        "client",
        "side",
        "validations",
        "JQuery",
        "Angular",
        "JS",
        "ASPNET",
        "MVC",
        "Validation",
        "Controller",
        "level",
        "Performed",
        "Scalable",
        "Computing",
        "data",
        "analytics",
        "data",
        "classes",
        "classes",
        "business",
        "logic",
        "C",
        "NET",
        "Created",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "Python",
        "Scripts",
        "Excel",
        "CSV",
        "files",
        "Statistical",
        "Reports",
        "Experience",
        "Python",
        "Libraries",
        "HTTPLib2",
        "Urllib",
        "GitHub",
        "Version",
        "Control",
        "System",
        "project",
        "code",
        "Heroku",
        "Worked",
        "XML",
        "documents",
        "XML",
        "Schema",
        "definition",
        "XSD",
        "scripts",
        "data",
        "database",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JIRA",
        "TDD",
        "AJAX",
        "JQuery",
        "JavaScript",
        "MySQL",
        "Angular",
        "JS",
        "Linux",
        "Apache",
        "XML",
        "Git",
        "Education",
        "Master",
        "Science",
        "Science",
        "Engineering",
        "University",
        "Delaware",
        "Skills",
        "PHP",
        "Javascript",
        "MYSQL",
        "Git",
        "CSS"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:06:01.840526",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Walmart Philadelphia PA Over 8 years of experience as a WebApplication Developer and coding with analytical programming using Python DJango Java and Various JavaScript frameworks Angular JS TypeScript Node JS NPM React JS Redux BackBone Js Knockout JS D3JS VueJS JQuery Ember JS and Ext JS Experience with Python LibrariesPackages such as Py Query Numpy Scipy Pickle PyQT PySide wxPython PyTables DataFrames SQLAlchemy Twisted Pygame pyGtk Pandas and Matplotlib Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience object oriented programming OOP concepts using Python Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Proficient in creating front endsystems using JavaScript jQuery Bootstrap HTML5 CSS3 and MVC frameworks such as Angularjs and Nodejs Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile Experienced in web applications development using Django Python Experience with containerizing applications using Docker Profiled python code for optimization and memory management Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts We have implemented pyspark for Transformation and Actions in Spark Having working Knowledge of Amazon AWS ECS Worked extensively on Big Data analytical models developed in Python Extensive use of Object Oriented design methodology and Agile in software development Experienced in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge in working with continuous deployment using Heroku and Jenkins Experience in developing applications using Amazon web services like EC2 Cloud Search Developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Leveraging queueing architectures with RabbitMQ for scalability performance and building Experienced in installing configuring modifying testing and deploying applications with Apache Proficient in developing multithreaded web services using CherryPy and bottlePy framework Experienced in working with various IDEs Visual Studio and Vim Experienced in developing Web Services with Python Good knowledge of Web Services with protocols SOAP REST Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Experienced in using Integrated Development Environment IDEs inPyDev PyScripter Pycharm Spider Python IDLE Brackets Eclipse JBuilder Jdeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPythonandNetBeans for debugging and also worked with SublimeText2 EditPlus Notepad VimEditors for coding Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies Work Experience Sr Python Developer Walmart Philadelphia PA November 2017 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib Beautiful Soup and Pandas python libraries during development lifecycle PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Created core Python API which will be using among multiple modules Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote and executed various MySQL database queries fromPythonusing PythonMySQL connector and MySQL dB package Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed API services in PythonTornado and NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Used Python library BeautifulSoup for web scrapping to extract data for building graphs Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party messaging storage services Created UI using JavaScript and HTML5CSS3 Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Developed monitoring and notification tools using Python Developed MVC prototype replacement of current product with Django Worked on serializing data using Serializers in Django Rest Framework Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Extensive working experience in agile environment using a CICD model methodology Used and configured NGINX and Nodejs servers for the portal to run on and made them work even for CORS Worked on Container Clustering and Orchestration with Docker Swarm TeamCity and Kubernetes Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Generated Python Django Forms to record data of online usersUsed Kafka for data pipeline Created Data tables utilizing Pit to display accounting information and add delete update records Used Jenkins for Continuous Integration and deployment into AWS ECS fargate Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Installed and configured Jenkins for Automating Deployments and providing an automation solution Integrated GIT into Jenkins to automate the code checkout process Wrote Python normalizations scripts to find duplicate data in different environments Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Managed builds and wrote Build scripts for JAVA and WebSphere based applications Responsibilities for creation of Database Business Logic to display the records dynamically on template based on query providing user permission to access features of the site Generated Python Django forms to record data of online users and used PyTest for writing test cases Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Experience in building frameworks in Python for Test Automation Generated automatic daily build from Travis CI build server Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used SVN GitHub Team Foundation Server TFS and JIRA to developed application for the client Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experienced in working with different operating systems like Windows Linux and UNIX Familiar with Agile and Waterfall development methodologies Environment Python Django Flask Pandas PyCharm PyTorch Numpy scikitlearn Python API Celery ORM Microservices Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TensorFlow ROR Es6 Typescript JSON web token Java MySQL SQL PLSQL PostgreSQL Cassandra Rest Travis Ansible AWS DynamoDB Google Cloud Platform Nginx Kubernetes Docker Swarm GitLab Git unit test Selenium Jest Mockito MAVEN JSON TFS Linux Slack Jenkins Agile Scrum Sr Python Developer Sanofi Raleigh NC September 2015 to October 2017 Responsibilities Developed entire front end and back end modules using Python on Django Web Framework Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed python scripts in order to migrate information from Oracle to MongoDB Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Restful web services using Python REST API Framework Worked on creating Python APIs Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Involved in Developing a Restful APIS service using Python Flask framework Involved in the development of front end of the application using Python HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Developed dynamic web pages using Python Django Frameworks Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Developed monitoring and notification tools using Python Developed web applications and RESTful web services and APIs using Python Elasticsearch and Tornado Improved the application by designing and developing it using HTML and JavaScript Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Generated Python Django Forms to record data of online users Created MySQL backend for data entry from Flash Assisted the Flash developer send the correct data via query strings Built main application in Python Django using technologies like Angularjs Backbonejs Emberjs and Celery Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Experience in agile environment using a CICD model methodology Involved in building database Model APIs and Views utilizing python to build an interactive webbased solution Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Have experience on Kubernetes and Docker Container for runtime environment of system to build test deploy Maintained the Source code using Team Foundation Server TFS in a multi developer environment Worked on Pandas to import the data Sort and plot the statistical data using histograms Wrote a Python module to connect and view the status of an Apache Cassandra instance Worked on converting HiveSQL queries into Spark transformations using Spark RDDs Python and OOP with Python Worked on developing and executing shell scripts to automate the jobs Developed MVC prototype replacement of current product with Django Worked extensively on Spark Streaming Spark SQL PySpark and HadoopHDFS API doing MapReduce Significantly improved report generation efficiency by caching reusing and improve the security level of data Experienced in automation and continuous integration process with Cloud bees Enterprise Jenkins Used Jenkins for Continuous Integration and deployment into Tomcat Application Server Integrated GIT into Jenkins to automate the code checkout process Wrote scripts to integrate APIs with third party applications PythonDjango based web application PostgreSQL and integrations with third party email messaging storage services Strong experience working with Hadoop from Cloudera Data Platform and running services through Clouderamanager Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Wrote Python normalizations scripts to find duplicate data in different environments Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Used Python IDE Pycharm for developing the code and performing unit test Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Environment Python Django PyCharm PyTorch Pandas Flask Python API TensorFlow scikitlearn NumPy Microservices ORM Celery Tornado SQLAlchemy JavaScript HTML5 CSS3 Angular React Redux Machine learning data science TFS ROR Angular React Es6 typescript JSON web token Java MySQL PLSQL PostgreSQL DynamoDB Rest Git unit test Selenium AWS EC2 DynamoDB Google Cloud Platform Chef Kubernetes Maven JSON Jenkins Docker hipchat Zoom Linux Agile Scrum Python Developer Comcast Seattle WA February 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Worked on Django ORM module for signing complex queries Utilized Python libraries python NumPy Twisted and matplotlib Developed API modularizing existing python module with the help of pyyaml libraries Designed and configured database and back end applications and programs Used JavaScript data visualization framework D3js to display the information in a chart view Experienced in developing Web Services with Python programming language Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Created custom directives in Angular JS for reusable components multifield form elements background file uploads Good knowledge in working with Webapplication server Apache Tomcat Tornado Cherrypy Chaussette Rocket Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Involved in various phases of the project like Analysis Design Development and Testing Developed rich user interface using CSS HTML5 JavaScript and jQuery Developed a FrontEnd GUI as standalone Python application Involved in Integrating and Functional System Testing for the entire Data Warehousing Application Experience in python Jupiter Scientific computing stack NumPy SciPy pandas and matplotlib Pyspark we implemented Caching Accumulators and UDFs We have implemented pyspark for Transformation and Actions in Spark Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Developed new scripts a using many regular expressions to match and extract data as required to comply with various compliance reporting requirements Involved in deployment using Docker Container on AWS Build SQL queries for performing various CRUD operations like create update read and delete Worked on Anti Money Laundering AML application to develop new modules to build reports for identifying various accounts and activities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Installed and configured Jenkins for Automating Deployments and providing an automation solution Participated in requirement gathering and worked closely with the architect in designing and modeling Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Optimized for online queries and Data Warehousing tools using dimensional model Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Used GIT for the version control Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Development done using Eclipse IDE Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 AngularJS Bootstrap JQuery JSON web token SSOSAML Pyramid ROR Java Oracle Rest Eclipse Websphere Git SVN unit test Selenium Maven JSON XML Jira Linux hipchat Jenkins Agile Python Developer eBay Columbus OH July 2012 to January 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Hands on experience with databases using ORMsDOMs for integrating with Oracle MySQL PostgreSQL Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Developed asynchronous notifications by using tornado Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application Used Netbeans IDE for development Environment Python Django ORM Pandas Tornado JavaScript HTML5 CSS3 Bootstrap JQuery Ruby ROR Ruby on Rails JSON web token SSOSAML Pyramid Java AWS EC2 S MySQL Rest Soap Netbeans Websphere CVS SVN Junit Waterfall Ant XML Jira Unix hipchat Python Developer IBM Chicago IL May 2010 to June 2012 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML PHP CSS standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS and HTML Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Performed Scalable Computing and data analytics of big data Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Python Scripts to create Excel and CSV files for documenting the Statistical Reports Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Environment Python Django HTML CSS JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git Education Master of Science in Science and Engineering University of Delaware Skills PHP Javascript MYSQL Git CSS",
    "unique_id": "248eee7b-7274-4fda-813a-a6e697c2661f"
}