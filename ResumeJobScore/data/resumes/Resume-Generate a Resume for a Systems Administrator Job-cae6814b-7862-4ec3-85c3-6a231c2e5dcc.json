{
    "clean_data": "Sr Full Stack Python Developer Sr Full Stack span lPythonspan span lDeveloperspan Sr Full Stack Python Developer Autodesk San Rafael CA 7 years of experience in Software Development Life Cycle SDLC including requirements analysis design specification code development code integration testing and deployment using Object Oriented Analysis and Design OOAD with PythonDjango Excellent in frontend UI design implementations by writing HTML5HTML CSS3CSS Bootstrap JavaScript jQuery jQuery UI jQuery Mobile to make better Single Page Application SPA working on NodeJS Server along with this worked on reactJS as well Experience in working on Server less Architecture using AWS Cloud Platform and worked on API Gateways AWS lambda AWS kinesis Firehouse AWS SQS AWS cloud Watch AWS SNS and S3 buckets EC2 Instances AWS EMR AWS AMIs etc Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experience in the design and implementation of Continuous IntegrationCI Continuous DeploymentCD Continuous Delivery and DevOps Operations for Agile projects working with technologies and platforms including AWS UNIXLinux SubversionSVN Jenkins VMware Ansible Chef Puppet Vagrant Docker Tomcat Kubernetes Work Experience Sr Full Stack Python Developer Autodesk San Rafael CA July 2017 to Present Responsibilities Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Python and Django creating graphics XML processing data exchange and business logic implementation Full Stack Python Developer Kelloggs Minneapolis MN January 2016 to June 2017 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Implemented RESTful WebServices For sending and receiving the data between multiple systems Involved Microservice testing functional testing using Postman regression testing using Automated test scripts Python Developer Duke Energy Charlotte NC November 2013 to December 2015 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets and Virtual Private Clouds VPC Involved in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes with the cloud foundry Python Developer Amdocs Chesterfield MO September 2011 to October 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Created most important Business Rules which are useful for the scope of project and needs of customers Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Created database using MySQL wrote several queries to extractstore data Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Education Bachelors Skills DJANGO 5 years PYTHON 7 years XML 5 years MYSQL 5 years WEB SERVICES 5 years Additional Information Technical Skills Operating Systems Windows MAC OS X Linux Red hat CentOS Ubuntu Languages Python Java C SQL PLSQL NoSQL Frameworks Django Flask AngularJS React JS web2py Open stack EmberJs Tkinter Pyramid Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB Couch DB DynamoDB MS SQL PostgreSQL Cassandra Sybase ASE Redis RDS Redshift Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse PyScripter PyStudio PyDev WingIDE and Spyder Jupyter Automation tools Jenkins Chef puppet ansible Methodologies tools Agile Scrum Waterfall Model UML Version Control Systems GIT SVN Bitbucket CVS JAWS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Cloud Front AWS Beanstalk EC2 S3 Redis Redshift RDS Lambda EMR Elasticsearch AWS CLI Python Libraries Pandas Numpy Unit Test SciPy MatPlotLib PyCharts WxPython Tkinter",
    "entities": [
        "CSS HTML JavaScript",
        "BOOTSTRAP UI",
        "Python",
        "Pandas",
        "API Integration Used Python",
        "HTML CSS",
        "Watch AWS SNS",
        "Mongo",
        "CRUD",
        "PythonDjango Excellent",
        "Developed",
        "Scripts Data",
        "Bash",
        "Asset Department",
        "Nodejs",
        "Kubernetes Deployed",
        "Firehouse AWS SQS AWS",
        "Created Python",
        "Python Developer Duke Energy",
        "Performed",
        "scan data acquisition",
        "Elastic Container",
        "UNIX",
        "Djangos",
        "Akka HTTP",
        "the Inquiry Tool",
        "AWS",
        "Created",
        "scan data",
        "Model and Views",
        "jQuery Wrote Python",
        "UI",
        "Restful",
        "NodeJS Server",
        "Python Developer Amdocs",
        "REST JSON",
        "API Gateways AWS",
        "Kafka System",
        "Present Responsibilities Involved",
        "IBM",
        "Server less Architecture",
        "Involved Microservice",
        "Amazon Web Services AWS",
        "Panda",
        "AMAZON EMR",
        "SQL",
        "Flask",
        "XML",
        "SOAP",
        "UNIXLinux SubversionSVN Jenkins VMware Ansible Chef Puppet",
        "lPythonspan",
        "Virtual Private Clouds VPC Involved",
        "Docker",
        "Additional Information Technical Skills Operating Systems Windows MAC",
        "API Integration Responsible for Configuring Kafka Consumer",
        "Software Development Life Cycle",
        "Object Oriented Analysis and Design",
        "Automated",
        "Single Page Application",
        "Instances AWS EMR AWS",
        "Amazon",
        "Nodejs with Express",
        "Bash Developed",
        "Implemented RESTful WebServices For"
    ],
    "experience": "Experience in working on Server less Architecture using AWS Cloud Platform and worked on API Gateways AWS lambda AWS kinesis Firehouse AWS SQS AWS cloud Watch AWS SNS and S3 buckets EC2 Instances AWS EMR AWS AMIs etc Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experience in the design and implementation of Continuous IntegrationCI Continuous DeploymentCD Continuous Delivery and DevOps Operations for Agile projects working with technologies and platforms including AWS UNIXLinux SubversionSVN Jenkins VMware Ansible Chef Puppet Vagrant Docker Tomcat Kubernetes Work Experience Sr Full Stack Python Developer Autodesk San Rafael CA July 2017 to Present Responsibilities Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Python and Django creating graphics XML processing data exchange and business logic implementation Full Stack Python Developer Kelloggs Minneapolis MN January 2016 to June 2017 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Implemented RESTful WebServices For sending and receiving the data between multiple systems Involved Microservice testing functional testing using Postman regression testing using Automated test scripts Python Developer Duke Energy Charlotte NC November 2013 to December 2015 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets and Virtual Private Clouds VPC Involved in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes with the cloud foundry Python Developer Amdocs Chesterfield MO September 2011 to October 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Created most important Business Rules which are useful for the scope of project and needs of customers Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Created database using MySQL wrote several queries to extractstore data Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Education Bachelors Skills DJANGO 5 years PYTHON 7 years XML 5 years MYSQL 5 years WEB SERVICES 5 years Additional Information Technical Skills Operating Systems Windows MAC OS X Linux Red hat CentOS Ubuntu Languages Python Java C SQL PLSQL NoSQL Frameworks Django Flask AngularJS React JS web2py Open stack EmberJs Tkinter Pyramid Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB Couch DB DynamoDB MS SQL PostgreSQL Cassandra Sybase ASE Redis RDS Redshift Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse PyScripter PyStudio PyDev WingIDE and Spyder Jupyter Automation tools Jenkins Chef puppet ansible Methodologies tools Agile Scrum Waterfall Model UML Version Control Systems GIT SVN Bitbucket CVS JAWS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Cloud Front AWS Beanstalk EC2 S3 Redis Redshift RDS Lambda EMR Elasticsearch AWS CLI Python Libraries Pandas Numpy Unit Test SciPy MatPlotLib PyCharts WxPython Tkinter",
    "extracted_keywords": [
        "Sr",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Sr",
        "Full",
        "Stack",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Autodesk",
        "San",
        "Rafael",
        "CA",
        "years",
        "experience",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "specification",
        "code",
        "development",
        "code",
        "integration",
        "testing",
        "deployment",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "PythonDjango",
        "Excellent",
        "frontend",
        "UI",
        "design",
        "implementations",
        "HTML5HTML",
        "CSS3CSS",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "jQuery",
        "UI",
        "jQuery",
        "Mobile",
        "Single",
        "Page",
        "Application",
        "SPA",
        "NodeJS",
        "Server",
        "reactJS",
        "Experience",
        "Server",
        "Architecture",
        "AWS",
        "Cloud",
        "Platform",
        "API",
        "Gateways",
        "AWS",
        "lambda",
        "AWS",
        "kinesis",
        "Firehouse",
        "AWS",
        "SQS",
        "AWS",
        "cloud",
        "Watch",
        "AWS",
        "SNS",
        "S3",
        "EC2",
        "Instances",
        "EMR",
        "AWS",
        "AMIs",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "Experience",
        "design",
        "implementation",
        "IntegrationCI",
        "Continuous",
        "DeploymentCD",
        "Continuous",
        "Delivery",
        "DevOps",
        "Operations",
        "projects",
        "technologies",
        "platforms",
        "AWS",
        "UNIXLinux",
        "SubversionSVN",
        "Jenkins",
        "VMware",
        "Ansible",
        "Chef",
        "Puppet",
        "Vagrant",
        "Docker",
        "Tomcat",
        "Kubernetes",
        "Work",
        "Experience",
        "Sr",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Autodesk",
        "San",
        "Rafael",
        "CA",
        "July",
        "Present",
        "Responsibilities",
        "database",
        "Model",
        "Views",
        "Python",
        "solution",
        "Linux",
        "environment",
        "migration",
        "plan",
        "timeline",
        "migration",
        "boot",
        "time",
        "imagegeneration",
        "data",
        "acquisition",
        "server",
        "startup",
        "scripts",
        "speed",
        "memory",
        "efficiency",
        "imagegeneration",
        "data",
        "acquisition",
        "component",
        "Rest",
        "APIs",
        "development",
        "Flask",
        "Swagger",
        "application",
        "communication",
        "server",
        "client",
        "Akka",
        "HTTP",
        "frontend",
        "presentation",
        "logic",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "AngularJS",
        "Nodejs",
        "technologies",
        "frontend",
        "user",
        "input",
        "validations",
        "web",
        "service",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "chef",
        "SQL",
        "Naming",
        "Conventions",
        "Enforcement",
        "Python",
        "Stored",
        "Procedures",
        "server",
        "job",
        "conventions",
        "SQL",
        "SQL",
        "environment",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "test",
        "automation",
        "framework",
        "scratch",
        "Cucumber",
        "Page",
        "Object",
        "Model",
        "POM",
        "language",
        "Developed",
        "User",
        "Stories",
        "python",
        "Behavior",
        "Driven",
        "Development",
        "User",
        "Acceptance",
        "Testing",
        "UNIX",
        "Splunk",
        "administrators",
        "Splunk",
        "UNIX",
        "windows",
        "environment",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Responsible",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "user",
        "interface",
        "BOOTSTRAP",
        "UI",
        "Angular",
        "JavaScript",
        "complexities",
        "application",
        "Wrote",
        "Lambda",
        "functions",
        "python",
        "AWSs",
        "Lambda",
        "Kinesis",
        "Elastic",
        "Search",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "AMAZON",
        "EMR",
        "clusters",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Kelloggs",
        "Minneapolis",
        "MN",
        "January",
        "June",
        "Responsibilities",
        "Business",
        "feature",
        "Nodejs",
        "Express",
        "backend",
        "APIs",
        "Deployed",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "information",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "application",
        "deployment",
        "cloud",
        "Docker",
        "technology",
        "Elastic",
        "Container",
        "service",
        "scheduler",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "namespace",
        "versions",
        "WebServices",
        "data",
        "systems",
        "Microservice",
        "testing",
        "testing",
        "Postman",
        "regression",
        "testing",
        "test",
        "scripts",
        "Python",
        "Developer",
        "Duke",
        "Energy",
        "Charlotte",
        "NC",
        "November",
        "December",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "ETL",
        "mappings",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "views",
        "Creation",
        "Python",
        "scripts",
        "data",
        "access",
        "analysis",
        "Scripts",
        "Data",
        "XLS",
        "FIXML",
        "process",
        "system",
        "monitoring",
        "operations",
        "maintenance",
        "support",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "instances",
        "S3",
        "buckets",
        "Clouds",
        "VPC",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "Deployed",
        "Microservices",
        "cloud",
        "foundry",
        "domains",
        "routes",
        "cloud",
        "foundry",
        "Python",
        "Developer",
        "Amdocs",
        "Chesterfield",
        "MO",
        "September",
        "October",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MYSQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Business",
        "Rules",
        "scope",
        "project",
        "needs",
        "customers",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "end",
        "applications",
        "programs",
        "Performed",
        "research",
        "platforms",
        "Education",
        "Bachelors",
        "Skills",
        "DJANGO",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "MYSQL",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Operating",
        "Systems",
        "Windows",
        "MAC",
        "OS",
        "X",
        "Linux",
        "Red",
        "hat",
        "CentOS",
        "Ubuntu",
        "Languages",
        "Python",
        "Java",
        "C",
        "SQL",
        "PLSQL",
        "NoSQL",
        "Frameworks",
        "Django",
        "Flask",
        "React",
        "JS",
        "web2py",
        "stack",
        "Tkinter",
        "Pyramid",
        "Scripting",
        "JavaScript",
        "Shell",
        "Scripting",
        "Markup",
        "HTML",
        "XML",
        "Json",
        "MySQL",
        "MongoDB",
        "Couch",
        "DB",
        "DynamoDB",
        "MS",
        "SQL",
        "PostgreSQL",
        "Cassandra",
        "Sybase",
        "ASE",
        "Redis",
        "RDS",
        "Redshift",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "sphere",
        "IDEs",
        "Sublime",
        "text",
        "PyCharm",
        "Eclipse",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "WingIDE",
        "Spyder",
        "Jupyter",
        "Automation",
        "Jenkins",
        "Chef",
        "puppet",
        "Methodologies",
        "tools",
        "Agile",
        "Scrum",
        "Waterfall",
        "Model",
        "UML",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "SVN",
        "Bitbucket",
        "CVS",
        "Cloud",
        "Computing",
        "Platforms",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Foundry",
        "Cloud",
        "Front",
        "AWS",
        "Beanstalk",
        "EC2",
        "S3",
        "Redis",
        "Redshift",
        "RDS",
        "Lambda",
        "EMR",
        "Elasticsearch",
        "AWS",
        "CLI",
        "Python",
        "Pandas",
        "Numpy",
        "Unit",
        "Test",
        "SciPy",
        "PyCharts",
        "WxPython",
        "Tkinter"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:38:02.258726",
    "resume_data": "Sr Full Stack Python Developer Sr Full Stack span lPythonspan span lDeveloperspan Sr Full Stack Python Developer Autodesk San Rafael CA 7 years of experience in Software Development Life Cycle SDLC including requirements analysis design specification code development code integration testing and deployment using Object Oriented Analysis and Design OOAD with PythonDjango Excellent in frontend UI design implementations by writing HTML5HTML CSS3CSS Bootstrap JavaScript jQuery jQuery UI jQuery Mobile to make better Single Page Application SPA working on NodeJS Server along with this worked on reactJS as well Experience in working on Server less Architecture using AWS Cloud Platform and worked on API Gateways AWS lambda AWS kinesis Firehouse AWS SQS AWS cloud Watch AWS SNS and S3 buckets EC2 Instances AWS EMR AWS AMIs etc Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experience in the design and implementation of Continuous IntegrationCI Continuous DeploymentCD Continuous Delivery and DevOps Operations for Agile projects working with technologies and platforms including AWS UNIXLinux SubversionSVN Jenkins VMware Ansible Chef Puppet Vagrant Docker Tomcat Kubernetes Work Experience Sr Full Stack Python Developer Autodesk San Rafael CA July 2017 to Present Responsibilities Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Python and Django creating graphics XML processing data exchange and business logic implementation Full Stack Python Developer Kelloggs Minneapolis MN January 2016 to June 2017 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Implemented RESTful WebServices For sending and receiving the data between multiple systems Involved Microservice testing functional testing using Postman regression testing using Automated test scripts Python Developer Duke Energy Charlotte NC November 2013 to December 2015 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets and Virtual Private Clouds VPC Involved in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes with the cloud foundry Python Developer Amdocs Chesterfield MO September 2011 to October 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Created most important Business Rules which are useful for the scope of project and needs of customers Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Created database using MySQL wrote several queries to extractstore data Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Education Bachelors Skills DJANGO 5 years PYTHON 7 years XML 5 years MYSQL 5 years WEB SERVICES 5 years Additional Information Technical Skills Operating Systems Windows MAC OS X Linux Red hat CentOS Ubuntu Languages Python Java C SQL PLSQL NoSQL Frameworks Django Flask AngularJS React JS web2py Open stack EmberJs Tkinter Pyramid Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB Couch DB DynamoDB MS SQL PostgreSQL Cassandra Sybase ASE Redis RDS Redshift Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse PyScripter PyStudio PyDev WingIDE and Spyder Jupyter Automation tools Jenkins Chef puppet ansible Methodologies tools Agile Scrum Waterfall Model UML Version Control Systems GIT SVN Bitbucket CVS JAWS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Cloud Front AWS Beanstalk EC2 S3 Redis Redshift RDS Lambda EMR Elasticsearch AWS CLI Python Libraries Pandas Numpy Unit Test SciPy MatPlotLib PyCharts WxPython Tkinter",
    "unique_id": "cae6814b-7862-4ec3-85c3-6a231c2e5dcc"
}