{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer LexisNexis Risk Solutions JavaJ2EE Programmer with 5years of IT experience in Java Application Development Distributed Application Development and Object Oriented Programming developing testing and implementation Expertise in JEE TechnologiesSpring Servlets JSP JDBC Hibernate Used Multithreading to improve the performancescalability of the applications Experience in J2EE Design Patterns such as MVC Business Delegate Service Locator Singleton Transfer Object Singleton Session Faade Data Access Object Expertise in UML XML SAX DOM JAXB and JavaScript Strong Experience in SOA implementations SOAP JAXWS REST JAXRS Familiar with all aspects of technology projects including Business Requirements Design Specification Design Patterns and Deployment Experience in developing deploying enterprise applications on IBM WebSphere BEA WebLogic Oracle Application Server JBoss and Tomcat Extensive experience working on databases Sybase Oracle DB2 SQL Server MySQL Excellent written and verbal communication skills Excellent Client interaction skills and proven experience in working independently as well as in a team Good at Documentation on User requirements and System Specifications Familiar with container based technologies like Docker Used container orchestration tools like Docker Swarm Kubernetes Work Experience Full Stack Java Developer LexisNexis Risk Solutions Alpharetta GA August 2017 to Present ClaimsReport Portal CLRP is the interface by which customers will order incident reports from LexisNexis Overall purpose of the application is to consolidate all the police reports which also allow access to high volume claims related reports ordered by claims adjusters CLRP deliver secured access to the reports to end users quickly easily and reliably Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Developed JUnit test cases for Test Driven Development approach UI layer written in JavaScript and Typescript using the Single Page Application architecture React Component framework utilized so that onscreen component written once and be reused Functional components such as handlers Connectors and Routers each allow a clean separation of concerns in the application source The Middle Tier MT layer is written using spring web Application architecture Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Used Hibernate as persistence DAO layer to interact with database Used Mockito ha the mocking Framework Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Containerized the application using Dockers Implemented Kubernetes as the best ecosystem to deploy and manage containers Used Jacoco to check the unit test coverage Environment Java 18 Spring 42 Spring IOC Design Patterns UML Mockito Hibernate 5 Tomcat Eclipse MySQL Maven XML XSD React JS MobX Typescript Java Script Log4j Web Services JIRA TOAD SOAP UI UNIX Docker Kubernetes JavaJ2EE Developer JPMorgan Chase Columbus OH July 2016 to November 2016 Image Document Access Layer IDAL application that provides comprehensive document search and retrieval capabilities without preference to the clients architecture or development environment It can deliver documents in a variety of output formants including PDF TIFF and PNG IDAL enables to build applications that deliver secured documents and images to end users quickly easily and reliably Responsibilities Used Agile methodology for the application development Worked with creation of reports in PDF and excelcsv formats for admin users Wrote and maintained Technical Documents and Release Documents Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented batch jobs using Spring batch to load the data from files to database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Developed UI to monitor the process Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Used PMD Check style to measure the quality of the code Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Eclipse Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script JSP Log4j Web Services Apache Axis JIRA TOAD SOAP UI UNIX JavaJ2EE Developer SPRINT Overland Park KS February 2016 to November 2016 The Device Services Infrastructure DSI application is an application developed which interface with Sprint backoffice systems The DSI application will manage communication tofrom the customers device for Push notifications to applications on devices Reporting logging service for applications on devices Back office data access for applications on devices Authentication Authorization and Identity services for applications on devices Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Worked with Android and IOS developers Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views and Stored Procedures for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Designed customized global exception handling which will take care of the SOAP fault codes and HTTP error codes Designed Mule flows for polling and crone jobs to preload the data automatically based the configuration time Used Log4J for debugging and error logging purposes Used Jacoco to check the unit test coverage Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Mule Soft 3 Git Eclipse Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script JSP AngularJS Log4j Web Services REST CXF JIRA TOAD SOAP UI UNIX Java Developer Guardian Insurance Company November 2012 to August 2014 A Health Insurance Portability and Accountability Act HIPAA disclosure is the legally authorized sharing of individual physical or health information by Health Care facilities HIPAA disclosure application provides the ability to upload new disclosure in bulk It facilitates provision to view pending denied approved disclosures and individual client reports based on the criteria and download a CSV file Responsibilities Collaborated with multiple teams to implement the requirements and deploy releases Used AgileScrum methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Developed RESTful web services API using Apache Jersey for client applications Implemented webtier using Spring MVC Worked with creation of reports in PDF and excelcsv formats for admin users Developed System architecture based on different design patterns like MVC SOA DAO Singleton Factory etc Used AJAX for Asynchronous data communication between UI and server side Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Ibatis as persistence DAO layer to interact with database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Used Log4J for debugging and error logging purposes Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Web sphere 85 Git RAD 80 Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script CSS3 JSP Log4j JUnit40 Web Services REST Apache Jersey 22 JIRA TOAD SOAP UI UNIX Education Master of Science University of Missouri Kansas City Kansas City MO December 2015 Bachelor of Technology in Technology JNTU April 2014 Skills JAVA 4 years JAXB 4 years SOAP 4 years UNIX 4 years WEB SERVICES 4 years Additional Information TECHNICAL SKILLS Languages Tools Java 161718 J2EE SQL Subversion SVN Git Mule Soft Java Technologies MultiThreading Servlets 23 JSP 12 Spring Spring MVC Hibernate JDBC JAXB Web Services WSDL SOAP REST Web Technologies HTML HTML5 DHTML CSS CSS3 Bootstrap XML XSLT DTD XML Schema XSD JSON React JavaScript Databases Oracle 11g10g9i8i Sybase DB2 101 MS Access Application Servers IBM WebSphere 4x5x6081 WebLogic 6x7x8x9x JBoss AS 4x51 Tomcat 5x6070 Apache Web Server Frameworks Spring Spring MVC Spring boot Spring AOP Spring Security Hibernate Mobx Operating Systems UNIX AIX Red Hat Linux Windows IDE RAD 606170 Eclipse WebLogic Workshop Container Technologies Docker Docker Swarm Kubernetes",
    "entities": [
        "Database SchemaXSDWSDL Design",
        "Additional Information TECHNICAL SKILLS Languages",
        "SQL Server",
        "Responsibilities Collaborated",
        "the Single Page Application",
        "PDF TIFF",
        "Maven XML XSD",
        "CSV",
        "Science University of Missouri Kansas City",
        "API",
        "PNG",
        "Tomcat Extensive",
        "Jacoco",
        "WebLogic Workshop Container",
        "PDF",
        "Health Care",
        "lJavaspan",
        "Android",
        "Core Java Collections API Multithreading Used Ibatis",
        "MVC Business Delegate Service",
        "Technical Documents",
        "UI",
        "UML XML",
        "LexisNexis Overall",
        "MVC Spring",
        "Developed JUnit",
        "Business Requirements Design Specification Design Patterns",
        "IBM",
        "SOA",
        "JEE TechnologiesSpring Servlets",
        "Developed System",
        "UML Mockito Hibernate",
        "Core Java Collections API Multithreading Used Hibernate",
        "JSP",
        "Implemented JAXB Framework",
        "Ant Maven XML",
        "TransportLayer Security Responsible",
        "Java Developer Guardian Insurance Company",
        "CLRP",
        "XML",
        "Bachelor of Technology",
        "Connectors",
        "Dockers Implemented Kubernetes",
        "Functional",
        "JPMorgan",
        "WebLogic",
        "JUnit40 Web Services",
        "Java Application Development Distributed Application Development and Object Oriented Programming",
        "Kansas City",
        "Release Documents Developed System",
        "IOS",
        "Views",
        "UNIX JavaJ2EE Developer SPRINT",
        "IBM WebSphere BEA WebLogic Oracle Application",
        "Sprint",
        "Involved in Unit Integration",
        "MVC Spring IOC Design Patterns UML Hibernate",
        "MVC",
        "Authentication Authorization and Identity",
        "Typescript",
        "Health Insurance Portability",
        "Wrote",
        "Created Test"
    ],
    "experience": "Experience in J2EE Design Patterns such as MVC Business Delegate Service Locator Singleton Transfer Object Singleton Session Faade Data Access Object Expertise in UML XML SAX DOM JAXB and JavaScript Strong Experience in SOA implementations SOAP JAXWS REST JAXRS Familiar with all aspects of technology projects including Business Requirements Design Specification Design Patterns and Deployment Experience in developing deploying enterprise applications on IBM WebSphere BEA WebLogic Oracle Application Server JBoss and Tomcat Extensive experience working on databases Sybase Oracle DB2 SQL Server MySQL Excellent written and verbal communication skills Excellent Client interaction skills and proven experience in working independently as well as in a team Good at Documentation on User requirements and System Specifications Familiar with container based technologies like Docker Used container orchestration tools like Docker Swarm Kubernetes Work Experience Full Stack Java Developer LexisNexis Risk Solutions Alpharetta GA August 2017 to Present ClaimsReport Portal CLRP is the interface by which customers will order incident reports from LexisNexis Overall purpose of the application is to consolidate all the police reports which also allow access to high volume claims related reports ordered by claims adjusters CLRP deliver secured access to the reports to end users quickly easily and reliably Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Developed JUnit test cases for Test Driven Development approach UI layer written in JavaScript and Typescript using the Single Page Application architecture React Component framework utilized so that onscreen component written once and be reused Functional components such as handlers Connectors and Routers each allow a clean separation of concerns in the application source The Middle Tier MT layer is written using spring web Application architecture Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Used Hibernate as persistence DAO layer to interact with database Used Mockito ha the mocking Framework Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Containerized the application using Dockers Implemented Kubernetes as the best ecosystem to deploy and manage containers Used Jacoco to check the unit test coverage Environment Java 18 Spring 42 Spring IOC Design Patterns UML Mockito Hibernate 5 Tomcat Eclipse MySQL Maven XML XSD React JS MobX Typescript Java Script Log4j Web Services JIRA TOAD SOAP UI UNIX Docker Kubernetes JavaJ2EE Developer JPMorgan Chase Columbus OH July 2016 to November 2016 Image Document Access Layer IDAL application that provides comprehensive document search and retrieval capabilities without preference to the clients architecture or development environment It can deliver documents in a variety of output formants including PDF TIFF and PNG IDAL enables to build applications that deliver secured documents and images to end users quickly easily and reliably Responsibilities Used Agile methodology for the application development Worked with creation of reports in PDF and excelcsv formats for admin users Wrote and maintained Technical Documents and Release Documents Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented batch jobs using Spring batch to load the data from files to database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Developed UI to monitor the process Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Used PMD Check style to measure the quality of the code Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Eclipse Oracle 11 g Ant Maven XML XSD HTMLDHTML Java Script JSP Log4j Web Services Apache Axis JIRA TOAD SOAP UI UNIX JavaJ2EE Developer SPRINT Overland Park KS February 2016 to November 2016 The Device Services Infrastructure DSI application is an application developed which interface with Sprint backoffice systems The DSI application will manage communication tofrom the customers device for Push notifications to applications on devices Reporting logging service for applications on devices Back office data access for applications on devices Authentication Authorization and Identity services for applications on devices Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Worked with Android and IOS developers Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views and Stored Procedures for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Designed customized global exception handling which will take care of the SOAP fault codes and HTTP error codes Designed Mule flows for polling and crone jobs to preload the data automatically based the configuration time Used Log4J for debugging and error logging purposes Used Jacoco to check the unit test coverage Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Mule Soft 3 Git Eclipse Oracle 11 g Ant Maven XML XSD HTMLDHTML Java Script JSP AngularJS Log4j Web Services REST CXF JIRA TOAD SOAP UI UNIX Java Developer Guardian Insurance Company November 2012 to August 2014 A Health Insurance Portability and Accountability Act HIPAA disclosure is the legally authorized sharing of individual physical or health information by Health Care facilities HIPAA disclosure application provides the ability to upload new disclosure in bulk It facilitates provision to view pending denied approved disclosures and individual client reports based on the criteria and download a CSV file Responsibilities Collaborated with multiple teams to implement the requirements and deploy releases Used AgileScrum methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Developed RESTful web services API using Apache Jersey for client applications Implemented webtier using Spring MVC Worked with creation of reports in PDF and excelcsv formats for admin users Developed System architecture based on different design patterns like MVC SOA DAO Singleton Factory etc Used AJAX for Asynchronous data communication between UI and server side Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Ibatis as persistence DAO layer to interact with database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Used Log4J for debugging and error logging purposes Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Web sphere 85 Git RAD 80 Oracle 11 g Ant Maven XML XSD HTMLDHTML Java Script CSS3 JSP Log4j JUnit40 Web Services REST Apache Jersey 22 JIRA TOAD SOAP UI UNIX Education Master of Science University of Missouri Kansas City Kansas City MO December 2015 Bachelor of Technology in Technology JNTU April 2014 Skills JAVA 4 years JAXB 4 years SOAP 4 years UNIX 4 years WEB SERVICES 4 years Additional Information TECHNICAL SKILLS Languages Tools Java 161718 J2EE SQL Subversion SVN Git Mule Soft Java Technologies MultiThreading Servlets 23 JSP 12 Spring Spring MVC Hibernate JDBC JAXB Web Services WSDL SOAP REST Web Technologies HTML HTML5 DHTML CSS CSS3 Bootstrap XML XSLT DTD XML Schema XSD JSON React JavaScript Databases Oracle 11g10g9i8i Sybase DB2 101 MS Access Application Servers IBM WebSphere 4x5x6081 WebLogic 6x7x8x9x JBoss AS 4x51 Tomcat 5x6070 Apache Web Server Frameworks Spring Spring MVC Spring boot Spring AOP Spring Security Hibernate Mobx Operating Systems UNIX AIX Red Hat Linux Windows IDE RAD 606170 Eclipse WebLogic Workshop Container Technologies Docker Docker Swarm Kubernetes",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "LexisNexis",
        "Risk",
        "Solutions",
        "JavaJ2EE",
        "Programmer",
        "5years",
        "IT",
        "experience",
        "Java",
        "Application",
        "Development",
        "Distributed",
        "Application",
        "Development",
        "Object",
        "Oriented",
        "Programming",
        "testing",
        "implementation",
        "Expertise",
        "JEE",
        "TechnologiesSpring",
        "Servlets",
        "JSP",
        "JDBC",
        "Hibernate",
        "Multithreading",
        "performancescalability",
        "applications",
        "Experience",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Singleton",
        "Transfer",
        "Object",
        "Singleton",
        "Session",
        "Faade",
        "Data",
        "Access",
        "Object",
        "Expertise",
        "UML",
        "XML",
        "SAX",
        "DOM",
        "JAXB",
        "JavaScript",
        "Strong",
        "Experience",
        "SOA",
        "implementations",
        "JAXWS",
        "REST",
        "JAXRS",
        "aspects",
        "technology",
        "projects",
        "Business",
        "Requirements",
        "Design",
        "Specification",
        "Design",
        "Patterns",
        "Deployment",
        "Experience",
        "enterprise",
        "applications",
        "IBM",
        "WebSphere",
        "BEA",
        "WebLogic",
        "Oracle",
        "Application",
        "Server",
        "JBoss",
        "Tomcat",
        "experience",
        "databases",
        "Sybase",
        "Oracle",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "Excellent",
        "communication",
        "skills",
        "Excellent",
        "Client",
        "interaction",
        "skills",
        "experience",
        "team",
        "Documentation",
        "User",
        "requirements",
        "System",
        "Specifications",
        "container",
        "technologies",
        "Docker",
        "container",
        "orchestration",
        "tools",
        "Docker",
        "Swarm",
        "Kubernetes",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "LexisNexis",
        "Risk",
        "Solutions",
        "Alpharetta",
        "GA",
        "August",
        "Present",
        "ClaimsReport",
        "Portal",
        "CLRP",
        "interface",
        "customers",
        "incident",
        "reports",
        "LexisNexis",
        "purpose",
        "application",
        "police",
        "reports",
        "access",
        "volume",
        "claims",
        "reports",
        "claims",
        "adjusters",
        "CLRP",
        "access",
        "reports",
        "users",
        "Responsibilities",
        "projectsapplications",
        "methodology",
        "application",
        "development",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "Test",
        "Driven",
        "Development",
        "approach",
        "UI",
        "layer",
        "JavaScript",
        "Typescript",
        "Single",
        "Page",
        "Application",
        "architecture",
        "React",
        "Component",
        "framework",
        "component",
        "components",
        "handlers",
        "Connectors",
        "Routers",
        "separation",
        "concerns",
        "application",
        "source",
        "Middle",
        "Tier",
        "MT",
        "layer",
        "spring",
        "web",
        "Application",
        "architecture",
        "Developed",
        "System",
        "architecture",
        "design",
        "patterns",
        "SOA",
        "DAO",
        "Singleton",
        "Factory",
        "service",
        "components",
        "Web",
        "services",
        "Spring",
        "Dependency",
        "Injection",
        "Design",
        "Patterns",
        "Hibernate",
        "persistence",
        "DAO",
        "layer",
        "database",
        "Used",
        "Mockito",
        "Framework",
        "Database",
        "SchemaXSDWSDL",
        "Design",
        "components",
        "JAXB",
        "Framework",
        "XML",
        "files",
        "Java",
        "Objects",
        "vice",
        "Core",
        "Spring",
        "Dependency",
        "Injection",
        "component",
        "beans",
        "application",
        "Dockers",
        "Kubernetes",
        "ecosystem",
        "containers",
        "Jacoco",
        "unit",
        "test",
        "coverage",
        "Environment",
        "Java",
        "Spring",
        "Spring",
        "IOC",
        "Design",
        "Patterns",
        "UML",
        "Mockito",
        "Hibernate",
        "Tomcat",
        "Eclipse",
        "MySQL",
        "Maven",
        "XML",
        "XSD",
        "React",
        "JS",
        "MobX",
        "Typescript",
        "Java",
        "Script",
        "Log4j",
        "Web",
        "Services",
        "JIRA",
        "TOAD",
        "SOAP",
        "UI",
        "UNIX",
        "Docker",
        "Kubernetes",
        "JavaJ2EE",
        "Developer",
        "JPMorgan",
        "Chase",
        "Columbus",
        "OH",
        "July",
        "November",
        "Image",
        "Document",
        "Access",
        "Layer",
        "IDAL",
        "application",
        "document",
        "search",
        "retrieval",
        "capabilities",
        "preference",
        "clients",
        "architecture",
        "development",
        "environment",
        "documents",
        "variety",
        "output",
        "formants",
        "PDF",
        "TIFF",
        "PNG",
        "IDAL",
        "applications",
        "documents",
        "images",
        "users",
        "Responsibilities",
        "methodology",
        "application",
        "development",
        "creation",
        "reports",
        "PDF",
        "formats",
        "admin",
        "users",
        "Technical",
        "Documents",
        "Release",
        "Documents",
        "Developed",
        "System",
        "architecture",
        "design",
        "patterns",
        "SOA",
        "DAO",
        "Singleton",
        "Factory",
        "service",
        "components",
        "Web",
        "services",
        "Spring",
        "Dependency",
        "Injection",
        "Design",
        "Patterns",
        "Responsible",
        "performance",
        "improvement",
        "batch",
        "processes",
        "Core",
        "Java",
        "Collections",
        "API",
        "Multithreading",
        "Hibernate",
        "persistence",
        "DAO",
        "layer",
        "database",
        "Developed",
        "Complex",
        "SQL",
        "Views",
        "DAO",
        "Layer",
        "Database",
        "SchemaXSDWSDL",
        "Design",
        "components",
        "batch",
        "jobs",
        "Spring",
        "batch",
        "data",
        "files",
        "JAXB",
        "Framework",
        "XML",
        "files",
        "Java",
        "Objects",
        "vice",
        "Core",
        "Spring",
        "Dependency",
        "Injection",
        "component",
        "beans",
        "UI",
        "process",
        "Unit",
        "Integration",
        "testing",
        "bug",
        "Design",
        "Reviews",
        "Code",
        "Walk",
        "Client",
        "Interaction",
        "Prod",
        "Support",
        "PMD",
        "Check",
        "style",
        "quality",
        "code",
        "Environment",
        "Java",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Design",
        "Patterns",
        "UML",
        "Hibernate",
        "Tomcat",
        "Eclipse",
        "Oracle",
        "g",
        "Ant",
        "Maven",
        "XML",
        "XSD",
        "HTMLDHTML",
        "Java",
        "Script",
        "JSP",
        "Log4j",
        "Web",
        "Services",
        "Apache",
        "Axis",
        "JIRA",
        "TOAD",
        "SOAP",
        "UI",
        "UNIX",
        "JavaJ2EE",
        "Developer",
        "SPRINT",
        "Overland",
        "Park",
        "KS",
        "February",
        "November",
        "Device",
        "Services",
        "Infrastructure",
        "DSI",
        "application",
        "application",
        "interface",
        "Sprint",
        "backoffice",
        "systems",
        "DSI",
        "application",
        "communication",
        "customers",
        "device",
        "Push",
        "notifications",
        "applications",
        "devices",
        "service",
        "applications",
        "devices",
        "Back",
        "office",
        "data",
        "access",
        "applications",
        "devices",
        "Authentication",
        "Authorization",
        "Identity",
        "services",
        "applications",
        "devices",
        "Responsibilities",
        "projectsapplications",
        "methodology",
        "application",
        "development",
        "Created",
        "Test",
        "plan",
        "documents",
        "applications",
        "scripts",
        "enhancements",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "Test",
        "Driven",
        "Development",
        "approach",
        "Android",
        "IOS",
        "developers",
        "Developed",
        "System",
        "architecture",
        "design",
        "patterns",
        "SOA",
        "DAO",
        "Singleton",
        "Factory",
        "service",
        "components",
        "Web",
        "services",
        "Spring",
        "Dependency",
        "Injection",
        "Design",
        "Patterns",
        "Messagelayer",
        "TransportLayer",
        "Security",
        "Responsible",
        "performance",
        "improvement",
        "batch",
        "processes",
        "Core",
        "Java",
        "Collections",
        "API",
        "Multithreading",
        "Hibernate",
        "persistence",
        "DAO",
        "layer",
        "database",
        "Developed",
        "Complex",
        "SQL",
        "Views",
        "Stored",
        "Procedures",
        "DAO",
        "Layer",
        "Database",
        "SchemaXSDWSDL",
        "Design",
        "components",
        "JAXB",
        "Framework",
        "XML",
        "files",
        "Java",
        "Objects",
        "vice",
        "Core",
        "Spring",
        "Dependency",
        "Injection",
        "component",
        "beans",
        "exception",
        "handling",
        "care",
        "SOAP",
        "fault",
        "codes",
        "HTTP",
        "error",
        "codes",
        "Mule",
        "polling",
        "crone",
        "jobs",
        "data",
        "configuration",
        "time",
        "Log4J",
        "debugging",
        "error",
        "purposes",
        "Jacoco",
        "unit",
        "test",
        "coverage",
        "Environment",
        "Java",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Design",
        "Patterns",
        "UML",
        "Hibernate",
        "Tomcat",
        "Mule",
        "Soft",
        "Git",
        "Eclipse",
        "Oracle",
        "g",
        "Ant",
        "Maven",
        "XML",
        "XSD",
        "HTMLDHTML",
        "Java",
        "Script",
        "JSP",
        "AngularJS",
        "Log4j",
        "Web",
        "Services",
        "REST",
        "CXF",
        "JIRA",
        "TOAD",
        "SOAP",
        "UI",
        "UNIX",
        "Java",
        "Developer",
        "Guardian",
        "Insurance",
        "Company",
        "November",
        "August",
        "Health",
        "Insurance",
        "Portability",
        "Accountability",
        "Act",
        "HIPAA",
        "disclosure",
        "sharing",
        "health",
        "information",
        "Health",
        "Care",
        "facilities",
        "HIPAA",
        "disclosure",
        "application",
        "ability",
        "disclosure",
        "bulk",
        "provision",
        "disclosures",
        "client",
        "reports",
        "criteria",
        "CSV",
        "file",
        "Responsibilities",
        "teams",
        "requirements",
        "releases",
        "AgileScrum",
        "methodology",
        "application",
        "development",
        "Created",
        "Test",
        "plan",
        "documents",
        "applications",
        "scripts",
        "enhancements",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "Test",
        "Driven",
        "Development",
        "approach",
        "web",
        "services",
        "API",
        "Apache",
        "Jersey",
        "client",
        "applications",
        "webtier",
        "Spring",
        "MVC",
        "creation",
        "reports",
        "PDF",
        "formats",
        "admin",
        "users",
        "Developed",
        "System",
        "architecture",
        "design",
        "patterns",
        "MVC",
        "SOA",
        "DAO",
        "Singleton",
        "Factory",
        "AJAX",
        "data",
        "communication",
        "UI",
        "server",
        "side",
        "service",
        "components",
        "Web",
        "services",
        "Spring",
        "Dependency",
        "Injection",
        "Design",
        "Patterns",
        "Messagelayer",
        "TransportLayer",
        "Security",
        "Responsible",
        "performance",
        "improvement",
        "batch",
        "processes",
        "Core",
        "Java",
        "Collections",
        "API",
        "Multithreading",
        "Ibatis",
        "persistence",
        "DAO",
        "layer",
        "database",
        "JAXB",
        "Framework",
        "XML",
        "files",
        "Java",
        "Objects",
        "vice",
        "Core",
        "Spring",
        "Dependency",
        "Injection",
        "component",
        "beans",
        "Log4J",
        "debugging",
        "error",
        "purposes",
        "Unit",
        "Integration",
        "testing",
        "bug",
        "Design",
        "Reviews",
        "Code",
        "Walk",
        "Client",
        "Interaction",
        "Prod",
        "Support",
        "Environment",
        "Java",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Design",
        "Patterns",
        "UML",
        "Hibernate",
        "Web",
        "sphere",
        "Git",
        "RAD",
        "Oracle",
        "g",
        "Ant",
        "Maven",
        "XML",
        "XSD",
        "HTMLDHTML",
        "Java",
        "Script",
        "CSS3",
        "JSP",
        "Log4j",
        "JUnit40",
        "Web",
        "Services",
        "REST",
        "Apache",
        "Jersey",
        "JIRA",
        "TOAD",
        "SOAP",
        "UI",
        "UNIX",
        "Education",
        "Master",
        "Science",
        "University",
        "Missouri",
        "Kansas",
        "City",
        "Kansas",
        "City",
        "MO",
        "December",
        "Bachelor",
        "Technology",
        "Technology",
        "JNTU",
        "April",
        "Skills",
        "years",
        "JAXB",
        "years",
        "SOAP",
        "years",
        "UNIX",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "Tools",
        "Java",
        "J2EE",
        "SQL",
        "Subversion",
        "SVN",
        "Git",
        "Mule",
        "Soft",
        "Java",
        "Technologies",
        "MultiThreading",
        "Servlets",
        "JSP",
        "Spring",
        "Spring",
        "MVC",
        "Hibernate",
        "JDBC",
        "JAXB",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "REST",
        "Web",
        "Technologies",
        "HTML",
        "HTML5",
        "DHTML",
        "CSS",
        "CSS3",
        "Bootstrap",
        "XML",
        "XSLT",
        "DTD",
        "XML",
        "Schema",
        "XSD",
        "JSON",
        "React",
        "JavaScript",
        "Oracle",
        "11g10g9i8i",
        "Sybase",
        "DB2",
        "MS",
        "Access",
        "Application",
        "Servers",
        "IBM",
        "WebSphere",
        "4x5x6081",
        "WebLogic",
        "6x7x8x9x",
        "JBoss",
        "4x51",
        "Tomcat",
        "5x6070",
        "Apache",
        "Web",
        "Server",
        "Frameworks",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "boot",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Hibernate",
        "Mobx",
        "Operating",
        "Systems",
        "UNIX",
        "AIX",
        "Red",
        "Hat",
        "Linux",
        "Windows",
        "IDE",
        "RAD",
        "Eclipse",
        "WebLogic",
        "Workshop",
        "Container",
        "Technologies",
        "Docker",
        "Docker",
        "Swarm",
        "Kubernetes"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:59:24.267471",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer LexisNexis Risk Solutions JavaJ2EE Programmer with 5years of IT experience in Java Application Development Distributed Application Development and Object Oriented Programming developing testing and implementation Expertise in JEE TechnologiesSpring Servlets JSP JDBC Hibernate Used Multithreading to improve the performancescalability of the applications Experience in J2EE Design Patterns such as MVC Business Delegate Service Locator Singleton Transfer Object Singleton Session Faade Data Access Object Expertise in UML XML SAX DOM JAXB and JavaScript Strong Experience in SOA implementations SOAP JAXWS REST JAXRS Familiar with all aspects of technology projects including Business Requirements Design Specification Design Patterns and Deployment Experience in developing deploying enterprise applications on IBM WebSphere BEA WebLogic Oracle Application Server JBoss and Tomcat Extensive experience working on databases Sybase Oracle DB2 SQL Server MySQL Excellent written and verbal communication skills Excellent Client interaction skills and proven experience in working independently as well as in a team Good at Documentation on User requirements and System Specifications Familiar with container based technologies like Docker Used container orchestration tools like Docker Swarm Kubernetes Work Experience Full Stack Java Developer LexisNexis Risk Solutions Alpharetta GA August 2017 to Present ClaimsReport Portal CLRP is the interface by which customers will order incident reports from LexisNexis Overall purpose of the application is to consolidate all the police reports which also allow access to high volume claims related reports ordered by claims adjusters CLRP deliver secured access to the reports to end users quickly easily and reliably Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Developed JUnit test cases for Test Driven Development approach UI layer written in JavaScript and Typescript using the Single Page Application architecture React Component framework utilized so that onscreen component written once and be reused Functional components such as handlers Connectors and Routers each allow a clean separation of concerns in the application source The Middle Tier MT layer is written using spring web Application architecture Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Used Hibernate as persistence DAO layer to interact with database Used Mockito ha the mocking Framework Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Containerized the application using Dockers Implemented Kubernetes as the best ecosystem to deploy and manage containers Used Jacoco to check the unit test coverage Environment Java 18 Spring 42 Spring IOC Design Patterns UML Mockito Hibernate 5 Tomcat Eclipse MySQL Maven XML XSD React JS MobX Typescript Java Script Log4j Web Services JIRA TOAD SOAP UI UNIX Docker Kubernetes JavaJ2EE Developer JPMorgan Chase Columbus OH July 2016 to November 2016 Image Document Access Layer IDAL application that provides comprehensive document search and retrieval capabilities without preference to the clients architecture or development environment It can deliver documents in a variety of output formants including PDF TIFF and PNG IDAL enables to build applications that deliver secured documents and images to end users quickly easily and reliably Responsibilities Used Agile methodology for the application development Worked with creation of reports in PDF and excelcsv formats for admin users Wrote and maintained Technical Documents and Release Documents Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented batch jobs using Spring batch to load the data from files to database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Developed UI to monitor the process Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Used PMD Check style to measure the quality of the code Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Eclipse Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script JSP Log4j Web Services Apache Axis JIRA TOAD SOAP UI UNIX JavaJ2EE Developer SPRINT Overland Park KS February 2016 to November 2016 The Device Services Infrastructure DSI application is an application developed which interface with Sprint backoffice systems The DSI application will manage communication tofrom the customers device for Push notifications to applications on devices Reporting logging service for applications on devices Back office data access for applications on devices Authentication Authorization and Identity services for applications on devices Responsibilities Worked in multiple projectsapplications Used Agile methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Worked with Android and IOS developers Developed System architecture based on different design patterns like SOA DAO Singleton Factory etc Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Hibernate as persistence DAO layer to interact with database Developed Complex SQL queries Views and Stored Procedures for DAO Layer Involved in Database SchemaXSDWSDL Design for the various components Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Designed customized global exception handling which will take care of the SOAP fault codes and HTTP error codes Designed Mule flows for polling and crone jobs to preload the data automatically based the configuration time Used Log4J for debugging and error logging purposes Used Jacoco to check the unit test coverage Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Tomcat Mule Soft 3 Git Eclipse Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script JSP AngularJS Log4j Web Services REST CXF JIRA TOAD SOAP UI UNIX Java Developer Guardian Insurance Company November 2012 to August 2014 A Health Insurance Portability and Accountability Act HIPAA disclosure is the legally authorized sharing of individual physical or health information by Health Care facilities HIPAA disclosure application provides the ability to upload new disclosure in bulk It facilitates provision to view pending denied approved disclosures and individual client reports based on the criteria and download a CSV file Responsibilities Collaborated with multiple teams to implement the requirements and deploy releases Used AgileScrum methodology for the application development Created Test plan documents for applications for executing the scripts for major enhancements Developed JUnit test cases for Test Driven Development approach Developed RESTful web services API using Apache Jersey for client applications Implemented webtier using Spring MVC Worked with creation of reports in PDF and excelcsv formats for admin users Developed System architecture based on different design patterns like MVC SOA DAO Singleton Factory etc Used AJAX for Asynchronous data communication between UI and server side Developed independent reuseable service components using Web services Spring Dependency Injection and Design Patterns Implemented Messagelayer and TransportLayer Security Responsible for the performance improvement of batch processes using Core Java Collections API Multithreading Used Ibatis as persistence DAO layer to interact with database Implemented JAXB Framework to convert XML files into Java Objects and vice versa marshalling and unmarshalling Used Core Spring for Dependency Injection of various component beans Used Log4J for debugging and error logging purposes Involved in Unit Integration testing bug fixing Design Reviews Code Walk through Client Interaction and Prod Support Environment Java 17 Spring 32 Spring MVC Spring IOC Design Patterns UML Hibernate 34 Web sphere 85 Git RAD 80 Oracle 11g Ant Maven XML XSD HTMLDHTML Java Script CSS3 JSP Log4j JUnit40 Web Services REST Apache Jersey 22 JIRA TOAD SOAP UI UNIX Education Master of Science University of Missouri Kansas City Kansas City MO December 2015 Bachelor of Technology in Technology JNTU April 2014 Skills JAVA 4 years JAXB 4 years SOAP 4 years UNIX 4 years WEB SERVICES 4 years Additional Information TECHNICAL SKILLS Languages Tools Java 161718 J2EE SQL Subversion SVN Git Mule Soft Java Technologies MultiThreading Servlets 23 JSP 12 Spring Spring MVC Hibernate JDBC JAXB Web Services WSDL SOAP REST Web Technologies HTML HTML5 DHTML CSS CSS3 Bootstrap XML XSLT DTD XML Schema XSD JSON React JavaScript Databases Oracle 11g10g9i8i Sybase DB2 101 MS Access Application Servers IBM WebSphere 4x5x6081 WebLogic 6x7x8x9x JBoss AS 4x51 Tomcat 5x6070 Apache Web Server Frameworks Spring Spring MVC Spring boot Spring AOP Spring Security Hibernate Mobx Operating Systems UNIX AIX Red Hat Linux Windows IDE RAD 606170 Eclipse WebLogic Workshop Container Technologies Docker Docker Swarm Kubernetes",
    "unique_id": "f3f2236e-34b6-4a75-a559-35122b3ab4f9"
}