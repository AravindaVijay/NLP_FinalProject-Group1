{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Cephalon Frazer PA Over 12 years of strong experience in the full life cycle SDLC of the software development process including requirement gathering analysis design development writing technicalsystem specifications interface development and implementation of ClientServer application development Good experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs Experience in python Django Zope Pyramid Framework Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on Selenium testing framework Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery MVC3 RESTful RUBY AJAX Experience in analyzing and handling large datasets using Oracle Relational database 9g 10g 11g Have good knowledge on NoSql databases like Cassandra Mongodb Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Have good idea about development tools like Bugzilla Jira Confluence and Axosoft Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience in working with different operating systems Windows 98NT2000XPVista78 UNIX Expert in maintaining technical documentation for projects Good analytical and problem solving skills and ability to work on own besides being a valuable and contributing team player Excellent Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in a team environment Authorized to work in the US for any employer Work Experience Python Developer Cephalon Frazer PA October 2016 to Present Responsibilities Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Built various graphs for business decision making using Python matplotlib library Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on developing internal testing tools which were written in Python Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Developed server side application and server side validations using Django framework Performed validations for input fields making use of mainly Active Records Implemented MVC architecture in developing the web application with the help of Django framework Associated with working cloud computing platforms like Open stack Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Analysis and Design of application Implemented business logic using PythonDjango Responsible for setting up Python REST API framework using Django Implement code in python to retrieve and manipulate data Environment Python 3x Django 14 MySQL Linux HTML XHTML CSS AJAX JavaScript Perl Apache Web Server Git Linux Python Full Stack Developer Devon Bank Chicago IL September 2014 to October 2016 Responsibilities Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on selenium testing framework JIRA was used to build an environment for development Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and JQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Environment Python 27 Django Java Script SQL Server HTML DHTML CSS Linux Sub Version Wing AJAX Python Developer BNSF Railway Chevy Chase MD August 2011 to September 2014 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Implemented MVC architecture in developing the web application with the help of Django framework Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript Perl and HTML5 Designed and developed data management system using MySQL Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Worked on developing internal testing tools which were written in Python Worked on Libraries like Pandas for data manipulation and analysis Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Developed most of the application part in Linux environment and very much familiar with all its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python Django Ansible HTML XML JavaScript AngularJs JQuery MS SQL Server Amazon s3 Jenkins Mongo DB Hadoop Beautiful soup Perl Pandas Matlab Eclipse Kafka Git GitHub JIRA Python Developer Nassau Bay Equifax Atlanta GA July 2009 to August 2011 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and matPlotLib Implemented SQL Alchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Skilled in collections and used for manipulating and looping through different user defined objects Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Django configuration to manage URLs and application parameters Created entire application using Python Django MySQL and Linux Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on python based test frameworks and test driven development with automation tools Strong experience working with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mircoservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Experience with migration to Amazon web Services AWS Environment Python Django CSS HTML JavaScript JQuery AJAX MYSQL Linux GITva JQuery MySQL Linux AWS Pandas Cassandra Hadoop Eclipse Perl Matlab Shell Scripting Python Developer Optum Health Windsor CT June 2007 to July 2009 Responsibilities Involved in various phases of the project like analysis design development and testing Attend walkthru meetings with the clients to understand the requirements Built farm data and load into the Postgres database using SQL Alchemy Used Jquery Ajax calls to build dynamic websites Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Develop dynamic webpages using HTML CSS JavaScript and AJAX Good knowledge os Python pickles Worked on Bug fixes Installed numerous Python modules Built dbcontext runcontext and other python objects thats reused by application Created numerous reports using reportlab and xlrtxlwt python packages Extensively used Python requests module to call webservices Environment Python 27 Django XML HTML HP Quality Center and ALM 110 Bugzilla excel QTP Python Developer Hudson Insurance Alpharetta GA May 2004 to June 2007 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created Business Logic using Python 27 Used Django framework for application development Created database using MySQL wrote several queries and Django APIs to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 27 Django 17 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Education Bachelors Skills HTML 10 years JAVASCRIPT 10 years jQuery 10 years PYTHON 10 years LINUX 10 years Flask Django C AWS Java Additional Information TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C Python R Perl Ruby Scripting languages CSS AJAX Javascript JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Servers Apache Tomcat IBM Web sphere open stock RESTful web services Databases Oracle My SQL query languages PLSQL IDEs Tools Eclipse Toad Sublime text Spyder Revision Controlling Systems CVS Github Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT Plex",
    "entities": [
        "CSS HTML JavaScript",
        "Design Analysis",
        "Continuous Deployment Application Server",
        "JQuery Created Business Logic",
        "GUI",
        "JQuery MVC3 RESTful RUBY AJAX Experience",
        "Spark Streaming Implemented",
        "Responsibilities Business logic implementation data",
        "COMSOL Multiphysics",
        "IBM",
        "PythonDjango Responsible",
        "Microsoft Excel Super",
        "TKinter",
        "PyJamas",
        "XML",
        "DHTML",
        "Software Development Life Cycle SDLC",
        "Present Responsibilities",
        "Apache Spark",
        "Amazon",
        "GitHub Jenkins Nexus",
        "GitHub Projects",
        "Data ImportExport",
        "CSS AJAX",
        "API Performed",
        "Stored Procedures",
        "Developed",
        "Amazon AWS S3",
        "Oracle Relational",
        "MATLAB",
        "Django",
        "Implemented MVC",
        "UML",
        "Git",
        "Attend",
        "Worked on",
        "HTML5",
        "Cleaned",
        "Linux",
        "Data Extraction Transformation",
        "Collaborated",
        "Python Developer Optum Health Windsor CT June",
        "Shell Scripting",
        "RDS",
        "Amazon web Services AWS Environment Python Django CSS",
        "HTML CSS JavaScript JQuery",
        "MVC",
        "GIT",
        "HTML CSS",
        "Build JSON",
        "ALM",
        "US",
        "HTML CSS JavaScript",
        "NoSql",
        "Created",
        "AWS",
        "Jenkins Provisioned",
        "Coded",
        "Java Script JSP CSS",
        "Postgres",
        "Python Worked on Libraries",
        "GitHub",
        "MD",
        "lPythonspan",
        "CICD",
        "Python Django PHP C XML",
        "Pandas",
        "Alpharetta",
        "Maven",
        "Performed",
        "Created UI",
        "Djangos",
        "Javascript",
        "matPlotLib Implemented SQL Alchemy",
        "JavaScript",
        "JQuery Ruby",
        "Python Design",
        "Python Bootstrap CSS",
        "UI",
        "Selenium",
        "Microsoft",
        "SQL Worked",
        "Worked on Selenium",
        "SVN",
        "SQL Queries Stored",
        "Python Developer Hudson Insurance",
        "AJAX Good",
        "Developed UI",
        "Jenkins Mongo DB Hadoop",
        "Application",
        "Integration",
        "JQuery",
        "Django Zope"
    ],
    "experience": "Experience in python Django Zope Pyramid Framework Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on Selenium testing framework Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery MVC3 RESTful RUBY AJAX Experience in analyzing and handling large datasets using Oracle Relational database 9 g 10 g 11 g Have good knowledge on NoSql databases like Cassandra Mongodb Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Have good idea about development tools like Bugzilla Jira Confluence and Axosoft Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience in working with different operating systems Windows 98NT2000XPVista78 UNIX Expert in maintaining technical documentation for projects Good analytical and problem solving skills and ability to work on own besides being a valuable and contributing team player Excellent Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in a team environment Authorized to work in the US for any employer Work Experience Python Developer Cephalon Frazer PA October 2016 to Present Responsibilities Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Built various graphs for business decision making using Python matplotlib library Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on developing internal testing tools which were written in Python Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Developed server side application and server side validations using Django framework Performed validations for input fields making use of mainly Active Records Implemented MVC architecture in developing the web application with the help of Django framework Associated with working cloud computing platforms like Open stack Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Analysis and Design of application Implemented business logic using PythonDjango Responsible for setting up Python REST API framework using Django Implement code in python to retrieve and manipulate data Environment Python 3x Django 14 MySQL Linux HTML XHTML CSS AJAX JavaScript Perl Apache Web Server Git Linux Python Full Stack Developer Devon Bank Chicago IL September 2014 to October 2016 Responsibilities Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on selenium testing framework JIRA was used to build an environment for development Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and JQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Environment Python 27 Django Java Script SQL Server HTML DHTML CSS Linux Sub Version Wing AJAX Python Developer BNSF Railway Chevy Chase MD August 2011 to September 2014 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Implemented MVC architecture in developing the web application with the help of Django framework Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript Perl and HTML5 Designed and developed data management system using MySQL Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Worked on developing internal testing tools which were written in Python Worked on Libraries like Pandas for data manipulation and analysis Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Developed most of the application part in Linux environment and very much familiar with all its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python Django Ansible HTML XML JavaScript AngularJs JQuery MS SQL Server Amazon s3 Jenkins Mongo DB Hadoop Beautiful soup Perl Pandas Matlab Eclipse Kafka Git GitHub JIRA Python Developer Nassau Bay Equifax Atlanta GA July 2009 to August 2011 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and matPlotLib Implemented SQL Alchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Skilled in collections and used for manipulating and looping through different user defined objects Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Django configuration to manage URLs and application parameters Created entire application using Python Django MySQL and Linux Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on python based test frameworks and test driven development with automation tools Strong experience working with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mircoservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Experience with migration to Amazon web Services AWS Environment Python Django CSS HTML JavaScript JQuery AJAX MYSQL Linux GITva JQuery MySQL Linux AWS Pandas Cassandra Hadoop Eclipse Perl Matlab Shell Scripting Python Developer Optum Health Windsor CT June 2007 to July 2009 Responsibilities Involved in various phases of the project like analysis design development and testing Attend walkthru meetings with the clients to understand the requirements Built farm data and load into the Postgres database using SQL Alchemy Used Jquery Ajax calls to build dynamic websites Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Develop dynamic webpages using HTML CSS JavaScript and AJAX Good knowledge os Python pickles Worked on Bug fixes Installed numerous Python modules Built dbcontext runcontext and other python objects that s reused by application Created numerous reports using reportlab and xlrtxlwt python packages Extensively used Python requests module to call webservices Environment Python 27 Django XML HTML HP Quality Center and ALM 110 Bugzilla excel QTP Python Developer Hudson Insurance Alpharetta GA May 2004 to June 2007 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created Business Logic using Python 27 Used Django framework for application development Created database using MySQL wrote several queries and Django APIs to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 27 Django 17 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Education Bachelors Skills HTML 10 years JAVASCRIPT 10 years jQuery 10 years PYTHON 10 years LINUX 10 years Flask Django C AWS Java Additional Information TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C Python R Perl Ruby Scripting languages CSS AJAX Javascript JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Servers Apache Tomcat IBM Web sphere open stock RESTful web services Databases Oracle My SQL query languages PLSQL IDEs Tools Eclipse Toad Sublime text Spyder Revision Controlling Systems CVS Github Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT Plex",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Cephalon",
        "Frazer",
        "PA",
        "years",
        "experience",
        "life",
        "cycle",
        "SDLC",
        "software",
        "development",
        "process",
        "requirement",
        "analysis",
        "design",
        "development",
        "technicalsystem",
        "specifications",
        "development",
        "implementation",
        "ClientServer",
        "application",
        "development",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "Experience",
        "python",
        "Django",
        "Zope",
        "Pyramid",
        "Framework",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Djangos",
        "controller",
        "template",
        "language",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "JSON",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "Selenium",
        "testing",
        "framework",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "MVC3",
        "RESTful",
        "RUBY",
        "AJAX",
        "Experience",
        "datasets",
        "Oracle",
        "Relational",
        "database",
        "g",
        "g",
        "g",
        "knowledge",
        "NoSql",
        "Cassandra",
        "Mongodb",
        "knowledge",
        "version",
        "controls",
        "systems",
        "SVN",
        "GIT",
        "Knowledge",
        "Agile",
        "Methodologies",
        "Scrum",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "idea",
        "development",
        "tools",
        "Bugzilla",
        "Jira",
        "Confluence",
        "Axosoft",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "requirement",
        "Use",
        "case",
        "development",
        "Business",
        "Process",
        "Business",
        "Process",
        "Modeling",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "Expert",
        "documentation",
        "projects",
        "analytical",
        "problem",
        "skills",
        "ability",
        "team",
        "player",
        "Excellent",
        "Interpersonal",
        "communication",
        "skills",
        "time",
        "management",
        "organization",
        "ability",
        "tasks",
        "team",
        "environment",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Cephalon",
        "Frazer",
        "PA",
        "October",
        "Present",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Python",
        "Framework",
        "Django",
        "software",
        "unit",
        "end",
        "application",
        "Python",
        "Design",
        "development",
        "user",
        "interfaces",
        "client",
        "displays",
        "Java",
        "Script",
        "JSP",
        "CSS",
        "issues",
        "Python",
        "code",
        "code",
        "enhancements",
        "code",
        "python",
        "libraries",
        "PyJamas",
        "Jython",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "testing",
        "tools",
        "Python",
        "frontend",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "framework",
        "UI",
        "AJAX",
        "behaviour",
        "server",
        "side",
        "application",
        "server",
        "side",
        "validations",
        "Django",
        "framework",
        "Performed",
        "validations",
        "input",
        "fields",
        "use",
        "Active",
        "Records",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Associated",
        "cloud",
        "platforms",
        "stack",
        "graphs",
        "business",
        "decision",
        "Python",
        "Matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Analysis",
        "Design",
        "application",
        "business",
        "logic",
        "PythonDjango",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "Implement",
        "code",
        "python",
        "manipulate",
        "data",
        "Environment",
        "Python",
        "3x",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Perl",
        "Apache",
        "Web",
        "Server",
        "Git",
        "Linux",
        "Python",
        "Stack",
        "Developer",
        "Devon",
        "Bank",
        "Chicago",
        "IL",
        "September",
        "October",
        "Responsibilities",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "JSON",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "selenium",
        "testing",
        "framework",
        "JIRA",
        "environment",
        "development",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "Django",
        "framework",
        "application",
        "development",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Ruby",
        "rails",
        "reduction",
        "cost",
        "optimization",
        "supplier",
        "selection",
        "CRM",
        "Applications",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "data",
        "management",
        "system",
        "MySQL",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "project",
        "technologies",
        "JQuery",
        "java",
        "script",
        "manipulations",
        "bootstrap",
        "frontend",
        "html",
        "web",
        "application",
        "software",
        "tools",
        "clients",
        "customers",
        "test",
        "programs",
        "engineering",
        "processes",
        "database",
        "end",
        "applications",
        "programs",
        "Performed",
        "research",
        "platforms",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "problems",
        "progress",
        "project",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Script",
        "SQL",
        "Server",
        "HTML",
        "DHTML",
        "CSS",
        "Linux",
        "Sub",
        "Version",
        "Wing",
        "AJAX",
        "Python",
        "Developer",
        "BNSF",
        "Railway",
        "Chevy",
        "Chase",
        "MD",
        "August",
        "September",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "UI",
        "JavaScript",
        "Perl",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "testing",
        "tools",
        "Python",
        "Libraries",
        "Pandas",
        "data",
        "manipulation",
        "analysis",
        "COMSOL",
        "Multiphysics",
        "model",
        "MATLAB",
        "user",
        "interface",
        "case",
        "studies",
        "plots",
        "data",
        "processing",
        "application",
        "part",
        "Linux",
        "environment",
        "commands",
        "TKinter",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "web",
        "application",
        "software",
        "tools",
        "clients",
        "customers",
        "test",
        "programs",
        "engineering",
        "processes",
        "Environment",
        "Linux",
        "Python",
        "Django",
        "Ansible",
        "HTML",
        "XML",
        "JavaScript",
        "AngularJs",
        "JQuery",
        "MS",
        "SQL",
        "Server",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "Hadoop",
        "Beautiful",
        "soup",
        "Perl",
        "Pandas",
        "Matlab",
        "Eclipse",
        "Kafka",
        "Git",
        "GitHub",
        "JIRA",
        "Python",
        "Developer",
        "Nassau",
        "Bay",
        "Equifax",
        "Atlanta",
        "GA",
        "July",
        "August",
        "Responsibilities",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Python",
        "wxPython",
        "numPY",
        "Pandas",
        "Twisted",
        "matPlotLib",
        "SQL",
        "Alchemy",
        "library",
        "access",
        "SQL",
        "Worked",
        "Element",
        "Tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "collections",
        "user",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Pandas",
        "library",
        "Analysis",
        "Pandas",
        "library",
        "reshaping",
        "pivoting",
        "data",
        "sets",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "Installed",
        "AWS",
        "server",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "database",
        "objects",
        "Django",
        "Database",
        "APIs",
        "python",
        "test",
        "frameworks",
        "test",
        "development",
        "automation",
        "tools",
        "experience",
        "time",
        "streaming",
        "application",
        "batch",
        "style",
        "scale",
        "computing",
        "applications",
        "tools",
        "Spark",
        "Streaming",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "web",
        "application",
        "configurations",
        "servers",
        "Ansible",
        "Deployed",
        "mircoservices2",
        "AWS",
        "environments",
        "Ansible",
        "Playbooks",
        "load",
        "balancer",
        "group",
        "configuration",
        "mircoservice",
        "Ansible",
        "Used",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Experience",
        "playbooks",
        "applications",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Provisioned",
        "servers",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "role",
        "Zabbixagent",
        "CICD",
        "pipeline",
        "Ansible",
        "infrastructures",
        "version",
        "control",
        "Ansible",
        "document",
        "application",
        "dependencies",
        "version",
        "control",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "core",
        "repository",
        "SUBVERSION",
        "GIT",
        "Managed",
        "GitHub",
        "Projects",
        "SVN",
        "GitHub",
        "history",
        "Cloud",
        "Trail",
        "TESSA",
        "Cloud",
        "Passage",
        "Check",
        "Marx",
        "Qualys",
        "Scan",
        "tools",
        "AWS",
        "security",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "Performed",
        "web",
        "testing",
        "automation",
        "selenium",
        "API",
        "Performed",
        "parameterization",
        "test",
        "scripts",
        "Selenium",
        "application",
        "sets",
        "data",
        "Contributed",
        "Automation",
        "Framework",
        "Java",
        "Selenium",
        "Web",
        "Driver",
        "Testing",
        "automation",
        "test",
        "cases",
        "automation",
        "script",
        "bugs",
        "Experience",
        "migration",
        "Amazon",
        "web",
        "Services",
        "AWS",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "AJAX",
        "MYSQL",
        "Linux",
        "GITva",
        "JQuery",
        "MySQL",
        "Linux",
        "Pandas",
        "Cassandra",
        "Hadoop",
        "Eclipse",
        "Perl",
        "Matlab",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Optum",
        "Health",
        "Windsor",
        "CT",
        "June",
        "July",
        "Responsibilities",
        "phases",
        "project",
        "analysis",
        "design",
        "development",
        "testing",
        "Attend",
        "meetings",
        "clients",
        "requirements",
        "farm",
        "data",
        "load",
        "Postgres",
        "database",
        "SQL",
        "Alchemy",
        "Jquery",
        "Ajax",
        "websites",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "carpathia",
        "cloud",
        "web",
        "deployment",
        "Django",
        "class",
        "templates",
        "page",
        "closures",
        "Javascript",
        "framework",
        "Build",
        "JSON",
        "framework",
        "JavaScript",
        "flow",
        "page",
        "performance",
        "issues",
        "Develop",
        "webpages",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "knowledge",
        "Python",
        "pickles",
        "Bug",
        "fixes",
        "Python",
        "modules",
        "runcontext",
        "python",
        "application",
        "reports",
        "reportlab",
        "xlrtxlwt",
        "python",
        "Python",
        "requests",
        "module",
        "webservices",
        "Environment",
        "Python",
        "Django",
        "XML",
        "HTML",
        "HP",
        "Quality",
        "Center",
        "ALM",
        "Bugzilla",
        "QTP",
        "Python",
        "Developer",
        "Hudson",
        "Insurance",
        "Alpharetta",
        "GA",
        "May",
        "June",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Used",
        "Django",
        "framework",
        "application",
        "development",
        "database",
        "MySQL",
        "queries",
        "Django",
        "APIs",
        "data",
        "database",
        "images",
        "Python",
        "Imaging",
        "Library",
        "custom",
        "images",
        "book",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "vendors",
        "queries",
        "Git",
        "version",
        "control",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Education",
        "Bachelors",
        "Skills",
        "HTML",
        "years",
        "JAVASCRIPT",
        "years",
        "jQuery",
        "years",
        "PYTHON",
        "years",
        "LINUX",
        "years",
        "Flask",
        "Django",
        "C",
        "AWS",
        "Java",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Operating",
        "systems",
        "Windows",
        "Linux",
        "Ubuntu",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "R",
        "Perl",
        "Ruby",
        "Scripting",
        "CSS",
        "AJAX",
        "Javascript",
        "JQuery",
        "PHP",
        "Shell",
        "Scripting",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "NodeXL",
        "MVC3",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "sphere",
        "stock",
        "web",
        "services",
        "Databases",
        "Oracle",
        "SQL",
        "query",
        "IDEs",
        "Tools",
        "Eclipse",
        "Toad",
        "Sublime",
        "text",
        "Spyder",
        "Revision",
        "Controlling",
        "Systems",
        "CVS",
        "Github",
        "Methodologies",
        "tools",
        "Object",
        "Programming",
        "UML",
        "Agile",
        "Scrum",
        "MS",
        "office",
        "tools",
        "Microsoft",
        "Excel",
        "Super",
        "user",
        "Microsoft",
        "word",
        "Microsoft",
        "PowerPoint",
        "PPT",
        "Plex"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:45:44.852219",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Cephalon Frazer PA Over 12 years of strong experience in the full life cycle SDLC of the software development process including requirement gathering analysis design development writing technicalsystem specifications interface development and implementation of ClientServer application development Good experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs Experience in python Django Zope Pyramid Framework Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on Selenium testing framework Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery MVC3 RESTful RUBY AJAX Experience in analyzing and handling large datasets using Oracle Relational database 9g 10g 11g Have good knowledge on NoSql databases like Cassandra Mongodb Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Have good idea about development tools like Bugzilla Jira Confluence and Axosoft Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience in working with different operating systems Windows 98NT2000XPVista78 UNIX Expert in maintaining technical documentation for projects Good analytical and problem solving skills and ability to work on own besides being a valuable and contributing team player Excellent Interpersonal and communication skills efficient time management and organization skills ability to handle multiple tasks and work well in a team environment Authorized to work in the US for any employer Work Experience Python Developer Cephalon Frazer PA October 2016 to Present Responsibilities Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Built various graphs for business decision making using Python matplotlib library Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on developing internal testing tools which were written in Python Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Developed server side application and server side validations using Django framework Performed validations for input fields making use of mainly Active Records Implemented MVC architecture in developing the web application with the help of Django framework Associated with working cloud computing platforms like Open stack Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Analysis and Design of application Implemented business logic using PythonDjango Responsible for setting up Python REST API framework using Django Implement code in python to retrieve and manipulate data Environment Python 3x Django 14 MySQL Linux HTML XHTML CSS AJAX JavaScript Perl Apache Web Server Git Linux Python Full Stack Developer Devon Bank Chicago IL September 2014 to October 2016 Responsibilities Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Worked on selenium testing framework JIRA was used to build an environment for development Different testing methodologies like unit testing Integration testing web application testing selenium testing were performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and JQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Designed and developed data management system using MySQL Creating unit testregression test framework for workingnew code This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Environment Python 27 Django Java Script SQL Server HTML DHTML CSS Linux Sub Version Wing AJAX Python Developer BNSF Railway Chevy Chase MD August 2011 to September 2014 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Implemented MVC architecture in developing the web application with the help of Django framework Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript Perl and HTML5 Designed and developed data management system using MySQL Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Worked on developing internal testing tools which were written in Python Worked on Libraries like Pandas for data manipulation and analysis Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Developed most of the application part in Linux environment and very much familiar with all its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python Django Ansible HTML XML JavaScript AngularJs JQuery MS SQL Server Amazon s3 Jenkins Mongo DB Hadoop Beautiful soup Perl Pandas Matlab Eclipse Kafka Git GitHub JIRA Python Developer Nassau Bay Equifax Atlanta GA July 2009 to August 2011 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and matPlotLib Implemented SQL Alchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Skilled in collections and used for manipulating and looping through different user defined objects Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Django configuration to manage URLs and application parameters Created entire application using Python Django MySQL and Linux Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on python based test frameworks and test driven development with automation tools Strong experience working with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mircoservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Experience with migration to Amazon web Services AWS Environment Python Django CSS HTML JavaScript JQuery AJAX MYSQL Linux GITva JQuery MySQL Linux AWS Pandas Cassandra Hadoop Eclipse Perl Matlab Shell Scripting Python Developer Optum Health Windsor CT June 2007 to July 2009 Responsibilities Involved in various phases of the project like analysis design development and testing Attend walkthru meetings with the clients to understand the requirements Built farm data and load into the Postgres database using SQL Alchemy Used Jquery Ajax calls to build dynamic websites Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Develop dynamic webpages using HTML CSS JavaScript and AJAX Good knowledge os Python pickles Worked on Bug fixes Installed numerous Python modules Built dbcontext runcontext and other python objects thats reused by application Created numerous reports using reportlab and xlrtxlwt python packages Extensively used Python requests module to call webservices Environment Python 27 Django XML HTML HP Quality Center and ALM 110 Bugzilla excel QTP Python Developer Hudson Insurance Alpharetta GA May 2004 to June 2007 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created Business Logic using Python 27 Used Django framework for application development Created database using MySQL wrote several queries and Django APIs to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Git for the version control Environment Python 27 Django 17 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Education Bachelors Skills HTML 10 years JAVASCRIPT 10 years jQuery 10 years PYTHON 10 years LINUX 10 years Flask Django C AWS Java Additional Information TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C Python R Perl Ruby Scripting languages CSS AJAX Javascript JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Servers Apache Tomcat IBM Web sphere open stock RESTful web services Databases Oracle My SQL query languages PLSQL IDEs Tools Eclipse Toad Sublime text Spyder Revision Controlling Systems CVS Github Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT Plex",
    "unique_id": "07f56b0b-bdd2-43d0-993c-6b6791c42f0d"
}