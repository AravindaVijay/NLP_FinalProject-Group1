{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Dignity health Phoenix AZ Over 5 years of strong software experience in design development and deployment of webbased and ClientServer business applications using OOP JavaJ2EE technologies Expert in Various Agile methodologies like SCRUM Test Driven Development TTD Incremental and Iteration methodology Agile Development Testing using Software Development Life Cycle Expertise in developing SOA Service Oriented Architecture REST and J2EE based on SOAP WSDL UDDI JAXWS JAXB JAXRPC using tools like Apache Axis Extensive experience in designing professional UI web applications using frontend technologies like AngularJS Nodejs Angular 24 HTML5 CSS3 JavaScript jQuery AJAX JSON and Bootstrap Experience in Service Oriented Architecture SOA Web Services Integrations BPM BPEL and ESB using WebSphere Process Server ESB Web Sphere Integration Developer Data Power and WSRR Transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI Multithreading etc Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Dashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Proficient in applying design patterns like MVC Singleton Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Proficient in frameworks like Struts Spring JSF AJAX frameworks and ORM frameworks like Hibernate Experience with Front end frame works with its components such as AngularJS jQuery NodeJS BackboneJS ReactJS Used NodeJs and JQuery for Dom manipulation Excellent understanding knowledge of Hadoop architecture and various components such as HDFS Job Tracker Task Tracker Name Node Data Node and MapReduce programming paradigm Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in database modeling design and development of PLSQLQueries Stored Procedures Triggers Cursors Functions and Packages in relational databases Oracle 11g SQL Server 20052008 DB2 and MySQL Experienced with HibernateJPA Entities for mapping HQL HSQL Named Queries Criteria Projections Developed applications using latest technologies like Spring 3x4x Hibernate324x REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG jBPM tools Good experience in Cloudera Hortonworks Apache Hadoop distributions Worked in Building application platforms in the Cloud by Amazon Web Services Experience in using ORM tools like Hibernate iBATIS Mybatis for XML mappings and Java Objects Experience in software configuration management using CVS SVN GitHub and IBM ClearCase Experience with CICDAnt Maven Gradle Jenkins Hudson CVS Git GitHub Experience in working with web servers like Tomcat 8 IBM WebSphere80 Jetty JBoss 710 and WebLogic 100 Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Hands on experience with build tools like Ant Maven Gradle and Logging tools like Log4J and Splunk Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit Runner JMeter Expertise in several testing environments like JUnit Selenium CURL Jenkins SoapUI and System Testing Responsible for support and maintenance implemented Spring Batch for huge number of transactions Experience in creating Docker images Containers pushpull and integrating with Spring Boot Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Authorized to work in the US for any employer Work Experience Java Full Stack Developer Dignity health Phoenix AZ July 2018 to Present Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Developed user interface using HTML5 Angular 4 jQuery and performed clientside validations using Java Script AJAX JSTL and CSS for making the Web Pages dynamic Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed a Single Page Application which can switch to different components using Angular 4services to get data Used Ajax for sending and retrieving data from server by giving URL to get JSON data for models and to populate models from the server Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a SPA Used AngularJS to create Controllers to handle events triggered by clients and send request to server Involved in the development of project backend layer using by most of core java features such as Collection frameworks Interfaces Multithreading and Exceptions Implemented Router Module of Angular 5 to make the whole project a Single Page Application and add routers Involved in writing Thread Safe blocks for multithread access to make valid transactions Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Integrated application with Spring Security for formbased authentication and authorization by using spring security Implemented Reactive Form of Angular 5 to deal with form validation issues Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Led the requirements analysis and software delivery of Enrollment Module for Statebased Health Insurance Exchanges HIX Created and Consumed Web Services using Restful SOAP web services Extracted files from RDBMS through Sqoop placed in HDFS and processed for downstream applications like Tableau etc Developed scripts to perform business transformations on the data using Hive and Impala for downstream applications Designed Data Synchronization layer for managing real time data transmission between different legacy systems including Integrated Eligibility System and HIX Implemented Partitioning Dynamic Partitions Buckets in HIVE Working extensively on Hive SQL Scala Spark and Shell Experience in working with Spring Quartz framework and developed various quartz jobs Worked on Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka Zookeeper to establish communication between the Microservices in the application environment Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Boot to provide clientside load balancing in calls to another Microservices for making application in to smaller chunks and the Spring Hystrix as circuit breaker and for the failsafe Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Deep Experience in Enrollment Eligibility medicated rules Human and Health Services HIX ACA and IES systems Implemented Swagger for the Rest API I have good experience in Docker to deploy applications quickly setup CICD pipeline and I have used Docker consoles for managing the application life cycle and monitored on Git Experience with building Docker Images and running them on Docker container Configured and Maintained AWS ECS Repository for Deploying Docker Image by Creating a task definition scheduling tasks and configuring clusters in the AWS ECS Console Experience In setting up of AWS RDS and Dynamo DB instances Developed code with Java SDK to connect with AWS Services Worked with S3 for storing and retrieving data stored in the S3 buckets AWS SQS for bulk email processing Data backup and archiving on AWS using S3 and Glacier and Dynamo DB to store the data for metrics and backend reports Used AWS SDK for connection to AmazonS3 buckets as it is used as the object storage service to store and retrieve the media files related to the application Responsible for design and development of Spark Applications using Scala to interact with hive and MySQL databases Implemented Continuous Integration of automation framework using tool Jenkins Used Log4j for logging and debugging and used JUnit extensively for testing Database development required in creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Used Mockito Framework for JUnit Implemented Continuous Integration of automation framework using tools like Jenkins Integration of automation batch run job with Jenkins Worked with Jenkins Continuous IntegrationCI tool Deployed the application on Tomcat 80 application server Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS 40 HTML5 CSS JMS AWS S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB Tomcat Application Server 80 Eclipse SOAP Restful Maven log4j JUnit XML Splunk SVN Java Full Stack Developer Cigna Health care Denver CO May 2017 to June 2018 Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed business components using core java8 concepts and classes like Inheritance Polymorphism Collections Serialization and Multithreading etc Documentation functional specifications using Use case diagrams Object diagrams Class diagrams and Sequence diagrams using UML Implemented and developed UI components using Angular JS features like dependency Injection Models data binding and controllers Developed test cases for Angular JS using karma and grunt UI design and development using JSF richfaces and myfaces Extensively used Java server Faces JSF Navigation rules and JSF tags for enhanced user Interface Developed Interactive web pages using AngularJS ReactJs HTML CSS and JavaScript Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and React Redux library Responsible for the technical direction and implementation of the Spring Batch framework according to new design with spring security Responsible to support the operations monitoring reporting according to the requirement of higher management team by making Splunk Dashboards Implemented the MVC architecture using Backbonejs Nodejs and Angularjs Reactjs Integrated application with Spring Security for form based authentication and authorization by used spring security jsp tags to provide UI level spring security Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Used Node JS for heavy DOM manipulation Implementing security Single SignOn application to share user management authentication and authorization among multiple applications Imported and Exported Data from Different Relational Data Sources like DB2 SQL Server Teradata to HDFS using Sqoop Ingesting the data from legacy and upstream systems to HDFS using apache Sqoop Flume Hive queries Handled importing of data from various data sources performed transformations using spark loaded data into Hive Used storage format like AVRO to access multiple columnar data quickly in complex queries Used SparkSQL to read the parquet data and create the tables in hive using the Scala API Imported data from our relational data stores to Hadoop using Sqoop Implemented Dynamic batch feature for batch processing with Spring batch Worked extensively on batch job schedulers for Pausing and Resuming job features according to the business need Experience in working with Spring Quartz framework and developed various quartz jobs Implemented Dynamic job scheduling according to the business need daily weekly monthly etc same using Quartz scheduler Integrated with the PolymerCLI tool for obtaining featured Progressive Web Application Developer Spring Quartz jobs to run the backend jobs and generated reports Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Worked on the following AWS services like EC2 S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB etc Implemented the application using design patterns such as Session Faade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Administered and deployed applications into WebSphere Application Server Used SAX and DOM parser to parse the XML documents and XSLT for transformations Worked with core java technologies like MultiThreading and synchronization Handled Java MultiThreading part in backend component one thread will be running for each user which serves that user Implementation of Thread pool and locks for concurrency management Involved in creating test cases using JUnit strictly following Test Driven Development TDD methodology Used JUnit Mocktio and Power Mocks framework for unit testing of application and implemented Test Driven Development TDD methodology Worked on SOAP Web Services using SOAP for transmission of large blocks of XML data over HTTP Used Maven Nexus and Jenkins to automate the build and deploy process Involved in testing the JMS integration between queues and topics using GEMS Used Mockito Framework for Junit Used JUnit for unit testing of the application and log4j for logging Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS HTML 40 CSS JMS JAXP SAX DOM AWS WebSphere Application Server EclipseRAD 80 Oracle 11g SOAP RUP Maven log4j Polymer JUnit XML MongoDB Web Services ILogJRules 50 Splunk GIT Java Developer UI Developer BMO Harris Bank Chicago IL May 2016 to April 2017 Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Design Patterns like Singleton Factory MVC Intercepting Filter Front Controller Business Delegate Service Locator Session Facade and DAO Developed using new features of Java 15 like Annotations Generics enhanced for loop and Enums Involved in writing Thread Safe blocks for multithread access to make valid transactions Used Spring Inheritance to develop beans from already developed parent beans Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used DAO pattern to fetch data from database using Hibernate to carry out various database Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Created session EJBs that retrieved information from the Oracle database using Hibernate Defined Action Forms Model Components using Struts MVC framework providing very clean division between controllers flexibility with the use of interfaces and providing thin web layer over business layer Developed various generic JavaScript functions used for validations Developed screens using JSP JavaScript AJAX and Ext JS Used JIRA for defect tracking and project management Used AJAX extensively to implement front end user interface features in the application Implemented SOA to develop Web services using Apache Axis A set of Web Services was created using CXF to handle SOAP requests with HL7 payload and addressing Developed Web Services clients to consume those Web Services as well other enterprise wide Web Services Exposed the Web Services to the client applications by sharing the WSDLs Configured Selenium WebDriver TestNG Maven tool and created selenium automation scripts in java using Test NG prior to agile release Created logical and physical data models putting to practice concepts of normalization and RDBMS Database development required creation of new tables PLSQLstored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Followed Agile SCRUM methodology and used Test Driven Development TDD Used Rational Application Developer RAD which is based on Eclipse to develop and debug application code Used Ant scripts to build and deploy the applications in JBoss application Server Used Log4j utility to generate runtime logs CVS was used for project management and version management Deployed the application on WebSphere 70 application server Developed Functional Requirement Document based on users requirement Environment J2EE Spring framework Spring MVC iBatis 22 JSP 20 JSF Servlets 23 JDBC AJAX Web services SOAP XML Java Beans XStream Apache POI Ext JS jQuery JavaScript Oracle 10g IBM RAD WebSphere 70Data Grid Agile Methodology TDD Selenium Design Patterns CVS Apache Maven JUnit HTML XSLT HTMLDHTML Jr Java Developer Matrix Network Solutions Hyderabad Telangana November 2014 to April 2016 Responsibilities Involved in gathering and analyzing system requirements Played key role in the highlevel design for the implementation of this application Developed the Training and Appraisal modules using Java JSP Servlets and JavaScript Developed UI using java swings Created tables Views Types triggers complex join queries stored procedures and functions and modification to exciting database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Involved in Code reviews for other modules developed by peers Designing and establishing the process and mapping the functional requirement to the workflow process Accessed stored procedures and functions using JDBC Callable statements Deployed the applications on IBM Web Sphere Application Server 60 Executed and coordinated the installation for the project Worked on webbased reporting system with HTML JavaScript and JSP Environment Java Jdk 13 J2EE JSP Servlets EJB JDBC Apache Tomcat oracle HTML DHTML IBM Web Sphere 60 SQL and JUnit Education Masters Skills Awt Bea Bea weblogic Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxrpc Jaxws Jboss Jfc Jms Jndi jquery Jsp Jstl React Javascript Angular Nodejs Node",
    "entities": [
        "Enrollment Eligibility",
        "JUnit Framework",
        "AJAX",
        "Test Driven Development TDD",
        "ORM",
        "Implemented Continuous Integration",
        "Followed Agile SCRUM",
        "WebSphere Application",
        "WSRR Transaction",
        "Building",
        "Interface Developed Interactive",
        "the Spring Hystrix",
        "Backbonejs Nodejs",
        "JMS",
        "Agile Methodology Developed",
        "Hive SQL Scala Spark",
        "HTTP",
        "JTA",
        "Inheritance Polymorphism Collections Serialization",
        "Used Hibernate Transaction Management Hibernate Batch Transactions",
        "IES",
        "IBM",
        "CVS",
        "Developed Functional Requirement Document",
        "Tomcat Application",
        "Hadoop",
        "XML",
        "Utilized AWS Lambda",
        "JavaScript Develop",
        "Java Hibernate Spring Jax Jaxb",
        "Telangana",
        "Criteria Administered",
        "a Single Page Application",
        "WebLogic",
        "SOA Service Oriented Architecture REST",
        "JUnit",
        "Phoenix AZ",
        "MVC Singleton Session Facade Service",
        "JSF Servlets",
        "Shell",
        "AWS ECS Console",
        "Spring Boot",
        "Used AWS SDK",
        "Responsive Webpage",
        "HIVE Working",
        "Used Mockito Framework for JUnit Implemented Continuous Integration",
        "WebSphere",
        "Views Types",
        "JUnit Education Masters Skills",
        "NodeJs",
        "Hibernate Integrated",
        "Spring boot micro services",
        "JUnit Selenium CURL Jenkins SoapUI",
        "Developed",
        "SparkSQL",
        "DAO",
        "Middleware",
        "AWS S3",
        "Node Data",
        "Session Faade Business Delegate Bean Factory",
        "Mockito",
        "Oracle 11",
        "Hibernate Experience",
        "Spring MVC",
        "Expression Query",
        "HTML JavaScript",
        "MultiThreading",
        "Git",
        "Maintained AWS ECS Repository for Deploying Docker Image",
        "Spring MVC IOC",
        "Sequence",
        "Bootstrap Experience",
        "SOA",
        "HTML5 Angular 4 jQuery",
        "Spring Security",
        "Developed Web Services",
        "AWS Services Worked",
        "JSP",
        "Micro",
        "Worked",
        "Denver",
        "JBoss",
        "Docker",
        "Dynamo DB",
        "DOM",
        "RDS",
        "Implemented Microservices",
        "Hibernate Query Language HQL HSQL Named Queries Criteria Projections Hands",
        "Enrollment Module",
        "Restful SOAP",
        "Angular JS",
        "Tomcat 8",
        "MVC",
        "Progressive Web Application Developer Spring Quartz",
        "the Scala API Imported",
        "Dependency Injection IOC Annotations",
        "US",
        "Sqoop",
        "Maven Nexus",
        "WebSphere Process Server",
        "Boot Spring Microservices",
        "Created",
        "AWS",
        "Singleton",
        "JSF",
        "Injection Models",
        "Polymer JUnit XML",
        "ClientServer",
        "OOP JavaJ2EE",
        "React JS",
        "Pausing",
        "SAX",
        "HDFS Job Tracker Task Tracker",
        "CXF",
        "RESTFUL",
        "SQL",
        "Amazon Web Services",
        "WebSphere Application Server Used",
        "IO",
        "Test Driven Development TDD Used Rational Application Developer RAD",
        "React Redux",
        "Annotations Generics",
        "Chicago",
        "java swings Created",
        "Hive",
        "Netflix Spring",
        "Quartz",
        "AMI Authorized",
        "Hibernate Defined Action Forms Model Components",
        "UML Implemented",
        "Test NG",
        "NPM Node Package",
        "SQS",
        "Human and Health Services HIX ACA",
        "PLSQLQueries Stored Procedures Triggers Cursors Functions",
        "the WSDLs Configured Selenium WebDriver",
        "Nodejs Angular",
        "Maven",
        "XSLT",
        "Impala",
        "UI",
        "Front",
        "BMO Harris Bank",
        "HQL Named Parameters Named Queries",
        "JSP Servlets",
        "Different Relational Data Sources",
        "jQuery NodeJS BackboneJS",
        "Present Responsibilities Worked",
        "CSS",
        "Hive Used",
        "Cloudera Hortonworks Apache Hadoop",
        "Integrated Eligibility System",
        "Test Driven Development TTD Incremental and Iteration methodology",
        "SPA",
        "REST",
        "Data",
        "Implemented Reactive Form of Angular 5",
        "the Service Oriented Architecture Used Design Patterns",
        "Jenkins Integration",
        "Enums Involved",
        "MapReduce",
        "Java JSP Servlets",
        "NoSQL",
        "Tableau",
        "java technologies",
        "Amazon Web Services AWS Extensive",
        "POI Ext",
        "Designed Data Synchronization",
        "ESB",
        "Microservice",
        "Node",
        "Java Script AJAX JSTL"
    ],
    "experience": "Experience in Service Oriented Architecture SOA Web Services Integrations BPM BPEL and ESB using WebSphere Process Server ESB Web Sphere Integration Developer Data Power and WSRR Transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI Multithreading etc Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Dashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Proficient in applying design patterns like MVC Singleton Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Proficient in frameworks like Struts Spring JSF AJAX frameworks and ORM frameworks like Hibernate Experience with Front end frame works with its components such as AngularJS jQuery NodeJS BackboneJS ReactJS Used NodeJs and JQuery for Dom manipulation Excellent understanding knowledge of Hadoop architecture and various components such as HDFS Job Tracker Task Tracker Name Node Data Node and MapReduce programming paradigm Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in database modeling design and development of PLSQLQueries Stored Procedures Triggers Cursors Functions and Packages in relational databases Oracle 11 g SQL Server 20052008 DB2 and MySQL Experienced with HibernateJPA Entities for mapping HQL HSQL Named Queries Criteria Projections Developed applications using latest technologies like Spring 3x4x Hibernate324x REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG jBPM tools Good experience in Cloudera Hortonworks Apache Hadoop distributions Worked in Building application platforms in the Cloud by Amazon Web Services Experience in using ORM tools like Hibernate iBATIS Mybatis for XML mappings and Java Objects Experience in software configuration management using CVS SVN GitHub and IBM ClearCase Experience with CICDAnt Maven Gradle Jenkins Hudson CVS Git GitHub Experience in working with web servers like Tomcat 8 IBM WebSphere80 Jetty JBoss 710 and WebLogic 100 Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Hands on experience with build tools like Ant Maven Gradle and Logging tools like Log4J and Splunk Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit Runner JMeter Expertise in several testing environments like JUnit Selenium CURL Jenkins SoapUI and System Testing Responsible for support and maintenance implemented Spring Batch for huge number of transactions Experience in creating Docker images Containers pushpull and integrating with Spring Boot Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Authorized to work in the US for any employer Work Experience Java Full Stack Developer Dignity health Phoenix AZ July 2018 to Present Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Developed user interface using HTML5 Angular 4 jQuery and performed clientside validations using Java Script AJAX JSTL and CSS for making the Web Pages dynamic Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed a Single Page Application which can switch to different components using Angular 4services to get data Used Ajax for sending and retrieving data from server by giving URL to get JSON data for models and to populate models from the server Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a SPA Used AngularJS to create Controllers to handle events triggered by clients and send request to server Involved in the development of project backend layer using by most of core java features such as Collection frameworks Interfaces Multithreading and Exceptions Implemented Router Module of Angular 5 to make the whole project a Single Page Application and add routers Involved in writing Thread Safe blocks for multithread access to make valid transactions Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Integrated application with Spring Security for formbased authentication and authorization by using spring security Implemented Reactive Form of Angular 5 to deal with form validation issues Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Led the requirements analysis and software delivery of Enrollment Module for Statebased Health Insurance Exchanges HIX Created and Consumed Web Services using Restful SOAP web services Extracted files from RDBMS through Sqoop placed in HDFS and processed for downstream applications like Tableau etc Developed scripts to perform business transformations on the data using Hive and Impala for downstream applications Designed Data Synchronization layer for managing real time data transmission between different legacy systems including Integrated Eligibility System and HIX Implemented Partitioning Dynamic Partitions Buckets in HIVE Working extensively on Hive SQL Scala Spark and Shell Experience in working with Spring Quartz framework and developed various quartz jobs Worked on Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka Zookeeper to establish communication between the Microservices in the application environment Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Boot to provide clientside load balancing in calls to another Microservices for making application in to smaller chunks and the Spring Hystrix as circuit breaker and for the failsafe Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Deep Experience in Enrollment Eligibility medicated rules Human and Health Services HIX ACA and IES systems Implemented Swagger for the Rest API I have good experience in Docker to deploy applications quickly setup CICD pipeline and I have used Docker consoles for managing the application life cycle and monitored on Git Experience with building Docker Images and running them on Docker container Configured and Maintained AWS ECS Repository for Deploying Docker Image by Creating a task definition scheduling tasks and configuring clusters in the AWS ECS Console Experience In setting up of AWS RDS and Dynamo DB instances Developed code with Java SDK to connect with AWS Services Worked with S3 for storing and retrieving data stored in the S3 buckets AWS SQS for bulk email processing Data backup and archiving on AWS using S3 and Glacier and Dynamo DB to store the data for metrics and backend reports Used AWS SDK for connection to AmazonS3 buckets as it is used as the object storage service to store and retrieve the media files related to the application Responsible for design and development of Spark Applications using Scala to interact with hive and MySQL databases Implemented Continuous Integration of automation framework using tool Jenkins Used Log4j for logging and debugging and used JUnit extensively for testing Database development required in creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Used Mockito Framework for JUnit Implemented Continuous Integration of automation framework using tools like Jenkins Integration of automation batch run job with Jenkins Worked with Jenkins Continuous IntegrationCI tool Deployed the application on Tomcat 80 application server Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS 40 HTML5 CSS JMS AWS S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB Tomcat Application Server 80 Eclipse SOAP Restful Maven log4j JUnit XML Splunk SVN Java Full Stack Developer Cigna Health care Denver CO May 2017 to June 2018 Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed business components using core java8 concepts and classes like Inheritance Polymorphism Collections Serialization and Multithreading etc Documentation functional specifications using Use case diagrams Object diagrams Class diagrams and Sequence diagrams using UML Implemented and developed UI components using Angular JS features like dependency Injection Models data binding and controllers Developed test cases for Angular JS using karma and grunt UI design and development using JSF richfaces and myfaces Extensively used Java server Faces JSF Navigation rules and JSF tags for enhanced user Interface Developed Interactive web pages using AngularJS ReactJs HTML CSS and JavaScript Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and React Redux library Responsible for the technical direction and implementation of the Spring Batch framework according to new design with spring security Responsible to support the operations monitoring reporting according to the requirement of higher management team by making Splunk Dashboards Implemented the MVC architecture using Backbonejs Nodejs and Angularjs Reactjs Integrated application with Spring Security for form based authentication and authorization by used spring security jsp tags to provide UI level spring security Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Used Node JS for heavy DOM manipulation Implementing security Single SignOn application to share user management authentication and authorization among multiple applications Imported and Exported Data from Different Relational Data Sources like DB2 SQL Server Teradata to HDFS using Sqoop Ingesting the data from legacy and upstream systems to HDFS using apache Sqoop Flume Hive queries Handled importing of data from various data sources performed transformations using spark loaded data into Hive Used storage format like AVRO to access multiple columnar data quickly in complex queries Used SparkSQL to read the parquet data and create the tables in hive using the Scala API Imported data from our relational data stores to Hadoop using Sqoop Implemented Dynamic batch feature for batch processing with Spring batch Worked extensively on batch job schedulers for Pausing and Resuming job features according to the business need Experience in working with Spring Quartz framework and developed various quartz jobs Implemented Dynamic job scheduling according to the business need daily weekly monthly etc same using Quartz scheduler Integrated with the PolymerCLI tool for obtaining featured Progressive Web Application Developer Spring Quartz jobs to run the backend jobs and generated reports Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Worked on the following AWS services like EC2 S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB etc Implemented the application using design patterns such as Session Faade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Administered and deployed applications into WebSphere Application Server Used SAX and DOM parser to parse the XML documents and XSLT for transformations Worked with core java technologies like MultiThreading and synchronization Handled Java MultiThreading part in backend component one thread will be running for each user which serves that user Implementation of Thread pool and locks for concurrency management Involved in creating test cases using JUnit strictly following Test Driven Development TDD methodology Used JUnit Mocktio and Power Mocks framework for unit testing of application and implemented Test Driven Development TDD methodology Worked on SOAP Web Services using SOAP for transmission of large blocks of XML data over HTTP Used Maven Nexus and Jenkins to automate the build and deploy process Involved in testing the JMS integration between queues and topics using GEMS Used Mockito Framework for Junit Used JUnit for unit testing of the application and log4j for logging Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS HTML 40 CSS JMS JAXP SAX DOM AWS WebSphere Application Server EclipseRAD 80 Oracle 11 g SOAP RUP Maven log4j Polymer JUnit XML MongoDB Web Services ILogJRules 50 Splunk GIT Java Developer UI Developer BMO Harris Bank Chicago IL May 2016 to April 2017 Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Design Patterns like Singleton Factory MVC Intercepting Filter Front Controller Business Delegate Service Locator Session Facade and DAO Developed using new features of Java 15 like Annotations Generics enhanced for loop and Enums Involved in writing Thread Safe blocks for multithread access to make valid transactions Used Spring Inheritance to develop beans from already developed parent beans Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used DAO pattern to fetch data from database using Hibernate to carry out various database Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Created session EJBs that retrieved information from the Oracle database using Hibernate Defined Action Forms Model Components using Struts MVC framework providing very clean division between controllers flexibility with the use of interfaces and providing thin web layer over business layer Developed various generic JavaScript functions used for validations Developed screens using JSP JavaScript AJAX and Ext JS Used JIRA for defect tracking and project management Used AJAX extensively to implement front end user interface features in the application Implemented SOA to develop Web services using Apache Axis A set of Web Services was created using CXF to handle SOAP requests with HL7 payload and addressing Developed Web Services clients to consume those Web Services as well other enterprise wide Web Services Exposed the Web Services to the client applications by sharing the WSDLs Configured Selenium WebDriver TestNG Maven tool and created selenium automation scripts in java using Test NG prior to agile release Created logical and physical data models putting to practice concepts of normalization and RDBMS Database development required creation of new tables PLSQLstored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Followed Agile SCRUM methodology and used Test Driven Development TDD Used Rational Application Developer RAD which is based on Eclipse to develop and debug application code Used Ant scripts to build and deploy the applications in JBoss application Server Used Log4j utility to generate runtime logs CVS was used for project management and version management Deployed the application on WebSphere 70 application server Developed Functional Requirement Document based on users requirement Environment J2EE Spring framework Spring MVC iBatis 22 JSP 20 JSF Servlets 23 JDBC AJAX Web services SOAP XML Java Beans XStream Apache POI Ext JS jQuery JavaScript Oracle 10 g IBM RAD WebSphere 70Data Grid Agile Methodology TDD Selenium Design Patterns CVS Apache Maven JUnit HTML XSLT HTMLDHTML Jr Java Developer Matrix Network Solutions Hyderabad Telangana November 2014 to April 2016 Responsibilities Involved in gathering and analyzing system requirements Played key role in the highlevel design for the implementation of this application Developed the Training and Appraisal modules using Java JSP Servlets and JavaScript Developed UI using java swings Created tables Views Types triggers complex join queries stored procedures and functions and modification to exciting database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Involved in Code reviews for other modules developed by peers Designing and establishing the process and mapping the functional requirement to the workflow process Accessed stored procedures and functions using JDBC Callable statements Deployed the applications on IBM Web Sphere Application Server 60 Executed and coordinated the installation for the project Worked on webbased reporting system with HTML JavaScript and JSP Environment Java Jdk 13 J2EE JSP Servlets EJB JDBC Apache Tomcat oracle HTML DHTML IBM Web Sphere 60 SQL and JUnit Education Masters Skills Awt Bea Bea weblogic Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxrpc Jaxws Jboss Jfc Jms Jndi jquery Jsp Jstl React Javascript Angular Nodejs Node",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Dignity",
        "health",
        "Phoenix",
        "AZ",
        "years",
        "software",
        "experience",
        "design",
        "development",
        "deployment",
        "ClientServer",
        "business",
        "applications",
        "OOP",
        "JavaJ2EE",
        "technologies",
        "Expert",
        "methodologies",
        "SCRUM",
        "Test",
        "Driven",
        "Development",
        "TTD",
        "Incremental",
        "Iteration",
        "methodology",
        "Agile",
        "Development",
        "Testing",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Expertise",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "REST",
        "J2EE",
        "SOAP",
        "WSDL",
        "UDDI",
        "JAXWS",
        "JAXB",
        "JAXRPC",
        "tools",
        "Apache",
        "Axis",
        "experience",
        "UI",
        "web",
        "applications",
        "frontend",
        "technologies",
        "AngularJS",
        "Nodejs",
        "Angular",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "JSON",
        "Bootstrap",
        "Experience",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Web",
        "Services",
        "Integrations",
        "BPM",
        "BPEL",
        "ESB",
        "WebSphere",
        "Process",
        "Server",
        "ESB",
        "Web",
        "Sphere",
        "Integration",
        "Developer",
        "Data",
        "Power",
        "WSRR",
        "Transaction",
        "implementation",
        "CMP",
        "BMP",
        "MessageDriven",
        "JMS",
        "Struts",
        "Spring",
        "Swing",
        "Hibernate",
        "Java",
        "Beans",
        "JDBC",
        "XML",
        "Web",
        "Services",
        "JNDI",
        "Multithreading",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Dashboard",
        "Spring",
        "Boot",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "Netflix",
        "Spring",
        "Zuul",
        "Proxy",
        "Proficient",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Proficient",
        "frameworks",
        "Struts",
        "Spring",
        "JSF",
        "frameworks",
        "ORM",
        "frameworks",
        "Hibernate",
        "Experience",
        "Front",
        "end",
        "frame",
        "components",
        "AngularJS",
        "jQuery",
        "NodeJS",
        "BackboneJS",
        "ReactJS",
        "JQuery",
        "Dom",
        "manipulation",
        "Excellent",
        "understanding",
        "knowledge",
        "Hadoop",
        "architecture",
        "components",
        "HDFS",
        "Job",
        "Tracker",
        "Task",
        "Tracker",
        "Name",
        "Node",
        "Data",
        "Node",
        "MapReduce",
        "programming",
        "paradigm",
        "Expertise",
        "XML",
        "technologies",
        "XSL",
        "XSLT",
        "XML",
        "schemas",
        "XPath",
        "XForms",
        "XSLFO",
        "parsers",
        "SAX",
        "DOM",
        "Strong",
        "experience",
        "MongoDB",
        "development",
        "reports",
        "schema",
        "design",
        "map",
        "functions",
        "migrations",
        "SQL",
        "databases",
        "databases",
        "MongoDB",
        "Cassandra",
        "CouchDB",
        "Experience",
        "database",
        "design",
        "development",
        "PLSQLQueries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "Packages",
        "databases",
        "Oracle",
        "g",
        "SQL",
        "Server",
        "DB2",
        "MySQL",
        "HibernateJPA",
        "Entities",
        "mapping",
        "HQL",
        "HSQL",
        "Queries",
        "Criteria",
        "Projections",
        "applications",
        "technologies",
        "Spring",
        "3x4x",
        "Hibernate324x",
        "REST",
        "Web",
        "services",
        "JAX",
        "WS",
        "JAX",
        "RS",
        "Rule",
        "Engines",
        "Drools41",
        "jBPM",
        "experience",
        "Cloudera",
        "Hortonworks",
        "Apache",
        "Hadoop",
        "distributions",
        "Building",
        "application",
        "platforms",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "Experience",
        "ORM",
        "tools",
        "Hibernate",
        "Mybatis",
        "XML",
        "mappings",
        "Java",
        "Experience",
        "software",
        "configuration",
        "management",
        "CVS",
        "SVN",
        "GitHub",
        "IBM",
        "ClearCase",
        "Experience",
        "CICDAnt",
        "Maven",
        "Gradle",
        "Jenkins",
        "Hudson",
        "CVS",
        "Git",
        "GitHub",
        "Experience",
        "web",
        "servers",
        "Tomcat",
        "IBM",
        "WebSphere80",
        "Jetty",
        "JBoss",
        "WebLogic",
        "Middleware",
        "persistence",
        "frameworks",
        "HibernateJPA",
        "Entities",
        "mapping",
        "Java",
        "classes",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "HSQL",
        "Queries",
        "Criteria",
        "Projections",
        "Hands",
        "experience",
        "build",
        "tools",
        "Ant",
        "Maven",
        "Gradle",
        "Logging",
        "tools",
        "Log4J",
        "Splunk",
        "Experience",
        "testing",
        "JUnit",
        "Framework",
        "Mockito",
        "Easy",
        "Mock",
        "Spring",
        "Junit",
        "Runner",
        "JMeter",
        "Expertise",
        "testing",
        "environments",
        "JUnit",
        "Selenium",
        "CURL",
        "Jenkins",
        "SoapUI",
        "System",
        "Testing",
        "Responsible",
        "support",
        "maintenance",
        "Spring",
        "Batch",
        "number",
        "transactions",
        "Experience",
        "Docker",
        "images",
        "Containers",
        "Spring",
        "Boot",
        "Expertise",
        "employment",
        "Spring",
        "Kafka",
        "Zookeeper",
        "JMS",
        "service",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "experience",
        "services",
        "EC2",
        "Elastic",
        "Beanstalk",
        "CloudWatch",
        "CloudFront",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "RDS",
        "ElastiCache",
        "SNS",
        "SQS",
        "AMI",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Dignity",
        "health",
        "Phoenix",
        "AZ",
        "July",
        "Present",
        "Responsibilities",
        "Agile",
        "Environment",
        "requirement",
        "analysis",
        "user",
        "interface",
        "HTML5",
        "Angular",
        "4",
        "jQuery",
        "validations",
        "Java",
        "Script",
        "AJAX",
        "JSTL",
        "CSS",
        "Web",
        "Pages",
        "Used",
        "Bootstrap",
        "media",
        "queries",
        "Responsive",
        "Webpage",
        "screensizes",
        "Single",
        "Page",
        "Application",
        "components",
        "Angular",
        "4services",
        "data",
        "Ajax",
        "data",
        "server",
        "URL",
        "data",
        "models",
        "models",
        "server",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "SPA",
        "Controllers",
        "events",
        "clients",
        "request",
        "development",
        "project",
        "backend",
        "layer",
        "core",
        "features",
        "Collection",
        "frameworks",
        "Multithreading",
        "Exceptions",
        "Router",
        "Module",
        "Angular",
        "project",
        "Single",
        "Page",
        "Application",
        "routers",
        "Thread",
        "Safe",
        "blocks",
        "multithread",
        "access",
        "transactions",
        "features",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "integration",
        "Hibernate",
        "Integrated",
        "application",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "spring",
        "security",
        "Reactive",
        "Form",
        "Angular",
        "form",
        "validation",
        "issues",
        "authentication",
        "authorization",
        "detail",
        "database",
        "DB",
        "authorization",
        "detail",
        "spring",
        "security",
        "annotation",
        "method",
        "method",
        "level",
        "spring",
        "security",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "functionality",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "boot",
        "Spring",
        "RESTFUL",
        "template",
        "requirements",
        "analysis",
        "software",
        "delivery",
        "Enrollment",
        "Module",
        "Statebased",
        "Health",
        "Insurance",
        "Exchanges",
        "HIX",
        "Consumed",
        "Web",
        "Services",
        "Restful",
        "SOAP",
        "web",
        "services",
        "files",
        "RDBMS",
        "Sqoop",
        "HDFS",
        "applications",
        "Tableau",
        "scripts",
        "business",
        "transformations",
        "data",
        "Hive",
        "Impala",
        "applications",
        "Data",
        "Synchronization",
        "layer",
        "time",
        "data",
        "transmission",
        "legacy",
        "systems",
        "Integrated",
        "Eligibility",
        "System",
        "HIX",
        "Dynamic",
        "Partitions",
        "Buckets",
        "HIVE",
        "Working",
        "Hive",
        "SQL",
        "Scala",
        "Spark",
        "Shell",
        "Experience",
        "Spring",
        "Quartz",
        "framework",
        "quartz",
        "jobs",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "Zookeeper",
        "communication",
        "Microservices",
        "application",
        "environment",
        "Microservices",
        "architecture",
        "Netflix",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "Boot",
        "load",
        "calls",
        "Microservices",
        "application",
        "chunks",
        "Spring",
        "Hystrix",
        "circuit",
        "breaker",
        "Deployed",
        "Docker",
        "Spring",
        "boot",
        "micro",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Deep",
        "Experience",
        "Enrollment",
        "Eligibility",
        "rules",
        "Human",
        "Health",
        "Services",
        "HIX",
        "ACA",
        "IES",
        "systems",
        "Swagger",
        "API",
        "experience",
        "Docker",
        "applications",
        "CICD",
        "pipeline",
        "Docker",
        "consoles",
        "application",
        "life",
        "cycle",
        "Git",
        "Experience",
        "Docker",
        "Images",
        "Docker",
        "container",
        "Configured",
        "AWS",
        "ECS",
        "Repository",
        "Deploying",
        "Docker",
        "Image",
        "task",
        "definition",
        "scheduling",
        "tasks",
        "clusters",
        "AWS",
        "ECS",
        "Console",
        "Experience",
        "AWS",
        "RDS",
        "Dynamo",
        "DB",
        "instances",
        "code",
        "Java",
        "SDK",
        "AWS",
        "Services",
        "S3",
        "data",
        "S3",
        "buckets",
        "AWS",
        "SQS",
        "email",
        "Data",
        "backup",
        "AWS",
        "S3",
        "Glacier",
        "Dynamo",
        "DB",
        "data",
        "metrics",
        "reports",
        "AWS",
        "SDK",
        "connection",
        "AmazonS3",
        "buckets",
        "object",
        "storage",
        "service",
        "media",
        "files",
        "application",
        "design",
        "development",
        "Spark",
        "Applications",
        "Scala",
        "hive",
        "MySQL",
        "Continuous",
        "Integration",
        "automation",
        "framework",
        "tool",
        "Jenkins",
        "Log4j",
        "JUnit",
        "Database",
        "development",
        "creation",
        "tables",
        "procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "SQL",
        "response",
        "time",
        "application",
        "Mockito",
        "Framework",
        "JUnit",
        "Continuous",
        "Integration",
        "automation",
        "framework",
        "tools",
        "Jenkins",
        "Integration",
        "automation",
        "batch",
        "run",
        "job",
        "Jenkins",
        "Worked",
        "Jenkins",
        "Continuous",
        "IntegrationCI",
        "tool",
        "application",
        "Tomcat",
        "application",
        "server",
        "Environment",
        "Java",
        "Spring",
        "Hibernate",
        "Spring",
        "batch",
        "Spring",
        "quartz",
        "Spring",
        "security",
        "Spring",
        "Jta",
        "Spring",
        "Boot",
        "JPA",
        "Java",
        "Scripts",
        "HTML5",
        "CSS",
        "JMS",
        "S3",
        "VPC",
        "EBS",
        "ELB",
        "Auto",
        "Scaling",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "IAM",
        "SNS",
        "SQS",
        "RDS",
        "DynamoDB",
        "Tomcat",
        "Application",
        "Server",
        "Eclipse",
        "SOAP",
        "Restful",
        "Maven",
        "log4j",
        "JUnit",
        "XML",
        "Splunk",
        "SVN",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Cigna",
        "Health",
        "care",
        "Denver",
        "CO",
        "May",
        "June",
        "Responsibilities",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Agile",
        "Methodology",
        "business",
        "components",
        "core",
        "java8",
        "concepts",
        "classes",
        "Inheritance",
        "Polymorphism",
        "Collections",
        "Serialization",
        "Multithreading",
        "Documentation",
        "specifications",
        "Use",
        "case",
        "diagrams",
        "Object",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "UML",
        "Implemented",
        "UI",
        "components",
        "JS",
        "features",
        "dependency",
        "Injection",
        "Models",
        "data",
        "test",
        "cases",
        "Angular",
        "JS",
        "karma",
        "UI",
        "design",
        "development",
        "JSF",
        "richfaces",
        "myfaces",
        "Java",
        "server",
        "Faces",
        "JSF",
        "Navigation",
        "rules",
        "JSF",
        "tags",
        "user",
        "Interface",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "ReactJs",
        "HTML",
        "CSS",
        "JavaScript",
        "Develop",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "React",
        "Redux",
        "library",
        "direction",
        "implementation",
        "Spring",
        "Batch",
        "framework",
        "design",
        "spring",
        "security",
        "operations",
        "requirement",
        "management",
        "team",
        "Splunk",
        "Dashboards",
        "MVC",
        "architecture",
        "Backbonejs",
        "Nodejs",
        "Angularjs",
        "Reactjs",
        "Integrated",
        "application",
        "Spring",
        "Security",
        "form",
        "authentication",
        "authorization",
        "spring",
        "security",
        "jsp",
        "tags",
        "UI",
        "level",
        "spring",
        "security",
        "authentication",
        "authorization",
        "detail",
        "database",
        "DB",
        "authorization",
        "detail",
        "spring",
        "security",
        "annotation",
        "method",
        "method",
        "level",
        "spring",
        "security",
        "Node",
        "JS",
        "DOM",
        "manipulation",
        "security",
        "SignOn",
        "application",
        "user",
        "management",
        "authentication",
        "authorization",
        "applications",
        "Exported",
        "Data",
        "Different",
        "Relational",
        "Data",
        "Sources",
        "DB2",
        "SQL",
        "Server",
        "Teradata",
        "HDFS",
        "Sqoop",
        "data",
        "legacy",
        "systems",
        "HDFS",
        "apache",
        "Sqoop",
        "Flume",
        "Hive",
        "importing",
        "data",
        "data",
        "sources",
        "transformations",
        "spark",
        "data",
        "Hive",
        "storage",
        "format",
        "AVRO",
        "data",
        "queries",
        "SparkSQL",
        "parquet",
        "data",
        "tables",
        "hive",
        "Scala",
        "API",
        "data",
        "data",
        "stores",
        "Hadoop",
        "Sqoop",
        "batch",
        "feature",
        "batch",
        "processing",
        "Spring",
        "batch",
        "batch",
        "job",
        "schedulers",
        "Pausing",
        "job",
        "features",
        "business",
        "Experience",
        "Spring",
        "Quartz",
        "framework",
        "quartz",
        "jobs",
        "job",
        "scheduling",
        "business",
        "Quartz",
        "scheduler",
        "PolymerCLI",
        "tool",
        "Progressive",
        "Web",
        "Application",
        "Developer",
        "Spring",
        "Quartz",
        "jobs",
        "jobs",
        "reports",
        "Java",
        "EE",
        "components",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "transactions",
        "Spring",
        "security",
        "modules",
        "functionality",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "boot",
        "Spring",
        "RESTFUL",
        "template",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "Lambda",
        "functions",
        "AWS",
        "services",
        "EC2",
        "S3",
        "VPC",
        "EBS",
        "ELB",
        "Auto",
        "Scaling",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "IAM",
        "SNS",
        "SQS",
        "RDS",
        "DynamoDB",
        "application",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Bean",
        "Factory",
        "Singleton",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Hibernate",
        "Template",
        "extent",
        "use",
        "HQL",
        "Parameters",
        "Queries",
        "interfaces",
        "Expression",
        "Query",
        "Criteria",
        "Administered",
        "applications",
        "WebSphere",
        "Application",
        "Server",
        "SAX",
        "DOM",
        "parser",
        "XML",
        "documents",
        "XSLT",
        "transformations",
        "core",
        "technologies",
        "MultiThreading",
        "synchronization",
        "Java",
        "MultiThreading",
        "part",
        "component",
        "thread",
        "user",
        "user",
        "Implementation",
        "Thread",
        "pool",
        "locks",
        "concurrency",
        "management",
        "test",
        "cases",
        "JUnit",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "JUnit",
        "Mocktio",
        "Power",
        "Mocks",
        "framework",
        "unit",
        "testing",
        "application",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "SOAP",
        "Web",
        "Services",
        "SOAP",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Maven",
        "Nexus",
        "Jenkins",
        "build",
        "process",
        "JMS",
        "integration",
        "queues",
        "topics",
        "GEMS",
        "Mockito",
        "Framework",
        "Junit",
        "JUnit",
        "unit",
        "testing",
        "application",
        "log4j",
        "Environment",
        "Java",
        "Spring",
        "Hibernate",
        "Spring",
        "batch",
        "Spring",
        "quartz",
        "Spring",
        "security",
        "Spring",
        "Jta",
        "Spring",
        "Boot",
        "JPA",
        "Java",
        "Scripts",
        "HTML",
        "CSS",
        "JMS",
        "JAXP",
        "SAX",
        "DOM",
        "AWS",
        "WebSphere",
        "Application",
        "Server",
        "EclipseRAD",
        "Oracle",
        "g",
        "SOAP",
        "RUP",
        "Maven",
        "log4j",
        "Polymer",
        "JUnit",
        "XML",
        "MongoDB",
        "Web",
        "Services",
        "Splunk",
        "GIT",
        "Java",
        "Developer",
        "UI",
        "Developer",
        "BMO",
        "Harris",
        "Bank",
        "Chicago",
        "IL",
        "May",
        "April",
        "Responsibilities",
        "J2EE",
        "application",
        "Service",
        "Oriented",
        "Architecture",
        "Design",
        "Patterns",
        "Singleton",
        "Factory",
        "MVC",
        "Filter",
        "Front",
        "Controller",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Session",
        "Facade",
        "DAO",
        "Developed",
        "features",
        "Java",
        "Annotations",
        "Generics",
        "loop",
        "Enums",
        "Thread",
        "Safe",
        "blocks",
        "multithread",
        "access",
        "transactions",
        "Spring",
        "Inheritance",
        "beans",
        "parent",
        "beans",
        "Spring",
        "Quartz",
        "functionality",
        "scheduling",
        "tasks",
        "reports",
        "customers",
        "mails",
        "policies",
        "DAO",
        "pattern",
        "data",
        "database",
        "Hibernate",
        "database",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "cache",
        "concepts",
        "session",
        "EJBs",
        "information",
        "Oracle",
        "database",
        "Hibernate",
        "Defined",
        "Action",
        "Forms",
        "Model",
        "Components",
        "Struts",
        "MVC",
        "framework",
        "division",
        "controllers",
        "flexibility",
        "use",
        "interfaces",
        "web",
        "layer",
        "business",
        "layer",
        "JavaScript",
        "functions",
        "validations",
        "screens",
        "JSP",
        "JavaScript",
        "AJAX",
        "Ext",
        "JS",
        "JIRA",
        "tracking",
        "project",
        "management",
        "AJAX",
        "end",
        "user",
        "interface",
        "features",
        "application",
        "SOA",
        "Web",
        "services",
        "Apache",
        "Axis",
        "set",
        "Web",
        "Services",
        "CXF",
        "requests",
        "HL7",
        "payload",
        "Developed",
        "Web",
        "Services",
        "clients",
        "Web",
        "Services",
        "enterprise",
        "Web",
        "Services",
        "Web",
        "Services",
        "client",
        "applications",
        "WSDLs",
        "Configured",
        "Selenium",
        "WebDriver",
        "TestNG",
        "Maven",
        "tool",
        "selenium",
        "automation",
        "scripts",
        "Test",
        "NG",
        "release",
        "data",
        "models",
        "practice",
        "concepts",
        "normalization",
        "RDBMS",
        "Database",
        "development",
        "creation",
        "tables",
        "procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "SQL",
        "response",
        "time",
        "application",
        "methodology",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Eclipse",
        "application",
        "code",
        "Ant",
        "scripts",
        "applications",
        "JBoss",
        "application",
        "Server",
        "Log4j",
        "utility",
        "runtime",
        "logs",
        "CVS",
        "project",
        "management",
        "version",
        "management",
        "application",
        "WebSphere",
        "application",
        "server",
        "Functional",
        "Requirement",
        "Document",
        "users",
        "requirement",
        "Environment",
        "J2EE",
        "Spring",
        "framework",
        "Spring",
        "MVC",
        "iBatis",
        "JSP",
        "JSF",
        "Servlets",
        "JDBC",
        "AJAX",
        "Web",
        "services",
        "XML",
        "Java",
        "Beans",
        "XStream",
        "Apache",
        "POI",
        "Ext",
        "JS",
        "jQuery",
        "JavaScript",
        "Oracle",
        "g",
        "IBM",
        "RAD",
        "WebSphere",
        "Grid",
        "Agile",
        "Methodology",
        "TDD",
        "Selenium",
        "Design",
        "Patterns",
        "CVS",
        "Apache",
        "Maven",
        "JUnit",
        "HTML",
        "XSLT",
        "HTMLDHTML",
        "Jr",
        "Java",
        "Developer",
        "Matrix",
        "Network",
        "Solutions",
        "Hyderabad",
        "Telangana",
        "November",
        "April",
        "Responsibilities",
        "system",
        "requirements",
        "role",
        "highlevel",
        "design",
        "implementation",
        "application",
        "Training",
        "Appraisal",
        "modules",
        "Java",
        "JSP",
        "Servlets",
        "JavaScript",
        "UI",
        "swings",
        "tables",
        "Views",
        "Types",
        "join",
        "queries",
        "procedures",
        "functions",
        "modification",
        "database",
        "structure",
        "addition",
        "features",
        "Designing",
        "Database",
        "Schema",
        "SQL",
        "queries",
        "Code",
        "reviews",
        "modules",
        "peers",
        "Designing",
        "process",
        "requirement",
        "workflow",
        "process",
        "procedures",
        "functions",
        "JDBC",
        "Callable",
        "statements",
        "applications",
        "IBM",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "installation",
        "project",
        "reporting",
        "system",
        "HTML",
        "JavaScript",
        "JSP",
        "Environment",
        "Java",
        "Jdk",
        "J2EE",
        "JSP",
        "Servlets",
        "EJB",
        "JDBC",
        "Apache",
        "Tomcat",
        "oracle",
        "HTML",
        "DHTML",
        "IBM",
        "Web",
        "Sphere",
        "SQL",
        "JUnit",
        "Education",
        "Masters",
        "Skills",
        "Awt",
        "Bea",
        "Bea",
        "Eclipse",
        "Ejb",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxb",
        "Jaxrpc",
        "Jaxws",
        "Jboss",
        "Jfc",
        "Jms",
        "Jndi",
        "jquery",
        "Jsp",
        "Jstl",
        "React",
        "Javascript",
        "Angular",
        "Nodejs",
        "Node"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:10:17.784091",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Dignity health Phoenix AZ Over 5 years of strong software experience in design development and deployment of webbased and ClientServer business applications using OOP JavaJ2EE technologies Expert in Various Agile methodologies like SCRUM Test Driven Development TTD Incremental and Iteration methodology Agile Development Testing using Software Development Life Cycle Expertise in developing SOA Service Oriented Architecture REST and J2EE based on SOAP WSDL UDDI JAXWS JAXB JAXRPC using tools like Apache Axis Extensive experience in designing professional UI web applications using frontend technologies like AngularJS Nodejs Angular 24 HTML5 CSS3 JavaScript jQuery AJAX JSON and Bootstrap Experience in Service Oriented Architecture SOA Web Services Integrations BPM BPEL and ESB using WebSphere Process Server ESB Web Sphere Integration Developer Data Power and WSRR Transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI Multithreading etc Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Dashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Proficient in applying design patterns like MVC Singleton Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Proficient in frameworks like Struts Spring JSF AJAX frameworks and ORM frameworks like Hibernate Experience with Front end frame works with its components such as AngularJS jQuery NodeJS BackboneJS ReactJS Used NodeJs and JQuery for Dom manipulation Excellent understanding knowledge of Hadoop architecture and various components such as HDFS Job Tracker Task Tracker Name Node Data Node and MapReduce programming paradigm Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in database modeling design and development of PLSQLQueries Stored Procedures Triggers Cursors Functions and Packages in relational databases Oracle 11g SQL Server 20052008 DB2 and MySQL Experienced with HibernateJPA Entities for mapping HQL HSQL Named Queries Criteria Projections Developed applications using latest technologies like Spring 3x4x Hibernate324x REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG jBPM tools Good experience in Cloudera Hortonworks Apache Hadoop distributions Worked in Building application platforms in the Cloud by Amazon Web Services Experience in using ORM tools like Hibernate iBATIS Mybatis for XML mappings and Java Objects Experience in software configuration management using CVS SVN GitHub and IBM ClearCase Experience with CICDAnt Maven Gradle Jenkins Hudson CVS Git GitHub Experience in working with web servers like Tomcat 8 IBM WebSphere80 Jetty JBoss 710 and WebLogic 100 Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Hands on experience with build tools like Ant Maven Gradle and Logging tools like Log4J and Splunk Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit Runner JMeter Expertise in several testing environments like JUnit Selenium CURL Jenkins SoapUI and System Testing Responsible for support and maintenance implemented Spring Batch for huge number of transactions Experience in creating Docker images Containers pushpull and integrating with Spring Boot Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Authorized to work in the US for any employer Work Experience Java Full Stack Developer Dignity health Phoenix AZ July 2018 to Present Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Developed user interface using HTML5 Angular 4 jQuery and performed clientside validations using Java Script AJAX JSTL and CSS for making the Web Pages dynamic Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed a Single Page Application which can switch to different components using Angular 4services to get data Used Ajax for sending and retrieving data from server by giving URL to get JSON data for models and to populate models from the server Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a SPA Used AngularJS to create Controllers to handle events triggered by clients and send request to server Involved in the development of project backend layer using by most of core java features such as Collection frameworks Interfaces Multithreading and Exceptions Implemented Router Module of Angular 5 to make the whole project a Single Page Application and add routers Involved in writing Thread Safe blocks for multithread access to make valid transactions Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Integrated application with Spring Security for formbased authentication and authorization by using spring security Implemented Reactive Form of Angular 5 to deal with form validation issues Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Led the requirements analysis and software delivery of Enrollment Module for Statebased Health Insurance Exchanges HIX Created and Consumed Web Services using Restful SOAP web services Extracted files from RDBMS through Sqoop placed in HDFS and processed for downstream applications like Tableau etc Developed scripts to perform business transformations on the data using Hive and Impala for downstream applications Designed Data Synchronization layer for managing real time data transmission between different legacy systems including Integrated Eligibility System and HIX Implemented Partitioning Dynamic Partitions Buckets in HIVE Working extensively on Hive SQL Scala Spark and Shell Experience in working with Spring Quartz framework and developed various quartz jobs Worked on Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka Zookeeper to establish communication between the Microservices in the application environment Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Boot to provide clientside load balancing in calls to another Microservices for making application in to smaller chunks and the Spring Hystrix as circuit breaker and for the failsafe Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Deep Experience in Enrollment Eligibility medicated rules Human and Health Services HIX ACA and IES systems Implemented Swagger for the Rest API I have good experience in Docker to deploy applications quickly setup CICD pipeline and I have used Docker consoles for managing the application life cycle and monitored on Git Experience with building Docker Images and running them on Docker container Configured and Maintained AWS ECS Repository for Deploying Docker Image by Creating a task definition scheduling tasks and configuring clusters in the AWS ECS Console Experience In setting up of AWS RDS and Dynamo DB instances Developed code with Java SDK to connect with AWS Services Worked with S3 for storing and retrieving data stored in the S3 buckets AWS SQS for bulk email processing Data backup and archiving on AWS using S3 and Glacier and Dynamo DB to store the data for metrics and backend reports Used AWS SDK for connection to AmazonS3 buckets as it is used as the object storage service to store and retrieve the media files related to the application Responsible for design and development of Spark Applications using Scala to interact with hive and MySQL databases Implemented Continuous Integration of automation framework using tool Jenkins Used Log4j for logging and debugging and used JUnit extensively for testing Database development required in creation of new tables PLSQL stored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Used Mockito Framework for JUnit Implemented Continuous Integration of automation framework using tools like Jenkins Integration of automation batch run job with Jenkins Worked with Jenkins Continuous IntegrationCI tool Deployed the application on Tomcat 80 application server Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS 40 HTML5 CSS JMS AWS S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB Tomcat Application Server 80 Eclipse SOAP Restful Maven log4j JUnit XML Splunk SVN Java Full Stack Developer Cigna Health care Denver CO May 2017 to June 2018 Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed business components using core java8 concepts and classes like Inheritance Polymorphism Collections Serialization and Multithreading etc Documentation functional specifications using Use case diagrams Object diagrams Class diagrams and Sequence diagrams using UML Implemented and developed UI components using Angular JS features like dependency Injection Models data binding and controllers Developed test cases for Angular JS using karma and grunt UI design and development using JSF richfaces and myfaces Extensively used Java server Faces JSF Navigation rules and JSF tags for enhanced user Interface Developed Interactive web pages using AngularJS ReactJs HTML CSS and JavaScript Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and React Redux library Responsible for the technical direction and implementation of the Spring Batch framework according to new design with spring security Responsible to support the operations monitoring reporting according to the requirement of higher management team by making Splunk Dashboards Implemented the MVC architecture using Backbonejs Nodejs and Angularjs Reactjs Integrated application with Spring Security for form based authentication and authorization by used spring security jsp tags to provide UI level spring security Stored authentication and authorization detail in database used these DB authorization detail with spring security annotation on method for apply method level spring security Used Node JS for heavy DOM manipulation Implementing security Single SignOn application to share user management authentication and authorization among multiple applications Imported and Exported Data from Different Relational Data Sources like DB2 SQL Server Teradata to HDFS using Sqoop Ingesting the data from legacy and upstream systems to HDFS using apache Sqoop Flume Hive queries Handled importing of data from various data sources performed transformations using spark loaded data into Hive Used storage format like AVRO to access multiple columnar data quickly in complex queries Used SparkSQL to read the parquet data and create the tables in hive using the Scala API Imported data from our relational data stores to Hadoop using Sqoop Implemented Dynamic batch feature for batch processing with Spring batch Worked extensively on batch job schedulers for Pausing and Resuming job features according to the business need Experience in working with Spring Quartz framework and developed various quartz jobs Implemented Dynamic job scheduling according to the business need daily weekly monthly etc same using Quartz scheduler Integrated with the PolymerCLI tool for obtaining featured Progressive Web Application Developer Spring Quartz jobs to run the backend jobs and generated reports Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules This functionality is implemented by developing RESTFUL web services using Spring boot Spring RESTFUL template Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Worked on the following AWS services like EC2 S3 VPC EBS ELB Auto Scaling Cloud Watch Cloud Trail IAM SNS SQS RDS DynamoDB etc Implemented the application using design patterns such as Session Faade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Administered and deployed applications into WebSphere Application Server Used SAX and DOM parser to parse the XML documents and XSLT for transformations Worked with core java technologies like MultiThreading and synchronization Handled Java MultiThreading part in backend component one thread will be running for each user which serves that user Implementation of Thread pool and locks for concurrency management Involved in creating test cases using JUnit strictly following Test Driven Development TDD methodology Used JUnit Mocktio and Power Mocks framework for unit testing of application and implemented Test Driven Development TDD methodology Worked on SOAP Web Services using SOAP for transmission of large blocks of XML data over HTTP Used Maven Nexus and Jenkins to automate the build and deploy process Involved in testing the JMS integration between queues and topics using GEMS Used Mockito Framework for Junit Used JUnit for unit testing of the application and log4j for logging Environment Java 8 Spring 35 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring Boot JPA Java Scripts AngularJS HTML 40 CSS JMS JAXP SAX DOM AWS WebSphere Application Server EclipseRAD 80 Oracle 11g SOAP RUP Maven log4j Polymer JUnit XML MongoDB Web Services ILogJRules 50 Splunk GIT Java Developer UI Developer BMO Harris Bank Chicago IL May 2016 to April 2017 Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Design Patterns like Singleton Factory MVC Intercepting Filter Front Controller Business Delegate Service Locator Session Facade and DAO Developed using new features of Java 15 like Annotations Generics enhanced for loop and Enums Involved in writing Thread Safe blocks for multithread access to make valid transactions Used Spring Inheritance to develop beans from already developed parent beans Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used DAO pattern to fetch data from database using Hibernate to carry out various database Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Created session EJBs that retrieved information from the Oracle database using Hibernate Defined Action Forms Model Components using Struts MVC framework providing very clean division between controllers flexibility with the use of interfaces and providing thin web layer over business layer Developed various generic JavaScript functions used for validations Developed screens using JSP JavaScript AJAX and Ext JS Used JIRA for defect tracking and project management Used AJAX extensively to implement front end user interface features in the application Implemented SOA to develop Web services using Apache Axis A set of Web Services was created using CXF to handle SOAP requests with HL7 payload and addressing Developed Web Services clients to consume those Web Services as well other enterprise wide Web Services Exposed the Web Services to the client applications by sharing the WSDLs Configured Selenium WebDriver TestNG Maven tool and created selenium automation scripts in java using Test NG prior to agile release Created logical and physical data models putting to practice concepts of normalization and RDBMS Database development required creation of new tables PLSQLstored procedures functions views indexes and constraints triggers and required SQL tuning to reduce the response time in the application Followed Agile SCRUM methodology and used Test Driven Development TDD Used Rational Application Developer RAD which is based on Eclipse to develop and debug application code Used Ant scripts to build and deploy the applications in JBoss application Server Used Log4j utility to generate runtime logs CVS was used for project management and version management Deployed the application on WebSphere 70 application server Developed Functional Requirement Document based on users requirement Environment J2EE Spring framework Spring MVC iBatis 22 JSP 20 JSF Servlets 23 JDBC AJAX Web services SOAP XML Java Beans XStream Apache POI Ext JS jQuery JavaScript Oracle 10g IBM RAD WebSphere 70Data Grid Agile Methodology TDD Selenium Design Patterns CVS Apache Maven JUnit HTML XSLT HTMLDHTML Jr Java Developer Matrix Network Solutions Hyderabad Telangana November 2014 to April 2016 Responsibilities Involved in gathering and analyzing system requirements Played key role in the highlevel design for the implementation of this application Developed the Training and Appraisal modules using Java JSP Servlets and JavaScript Developed UI using java swings Created tables Views Types triggers complex join queries stored procedures and functions and modification to exciting database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Involved in Code reviews for other modules developed by peers Designing and establishing the process and mapping the functional requirement to the workflow process Accessed stored procedures and functions using JDBC Callable statements Deployed the applications on IBM Web Sphere Application Server 60 Executed and coordinated the installation for the project Worked on webbased reporting system with HTML JavaScript and JSP Environment Java Jdk 13 J2EE JSP Servlets EJB JDBC Apache Tomcat oracle HTML DHTML IBM Web Sphere 60 SQL and JUnit Education Masters Skills Awt Bea Bea weblogic Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxrpc Jaxws Jboss Jfc Jms Jndi jquery Jsp Jstl React Javascript Angular Nodejs Node",
    "unique_id": "d6a24d76-7b9c-4ef6-8cc7-5c02771ea6fa"
}