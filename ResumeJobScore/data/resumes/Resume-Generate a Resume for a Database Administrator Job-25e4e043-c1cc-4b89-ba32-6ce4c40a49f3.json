{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Wipro Limited Nashville TN Having 8 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Software development and design using Python 27331 and 34 Django 1918XML CSSHTML JavaScript JQuery and Angular Js Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Pythonbased environment along with data analytics data wrangling and Excel data extracts Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Write maintain and improve automation scripts in Python Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Expertise with cloud platforms like Amazon AWS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Written Programs in Spark using Scala and Python for Data quality check Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Imported the data from different sources like AWSS3 Local file system into Spark RDD and worked on cloud Amazon Web Services EMR S3 EC2 Lambda Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Expertise in using Application Deployments Environment configuration using Chef Hands on experience on AutomationBuild such as Docker Chef Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Experience with automation web development and engineering environment tools such as JIRA Jenkins Git BitBucket Chef Selenium QTP Maven Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in working with AWS Amazon Web Services cloud platform and its features which includes EC2 IAM EBS CloudWatch AWS Config and AWS S3 Experience working on scalable environment in AgileSCRUM methodologies Preparing Test Cases using TDD test driven development and BDD behavior driven development Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Handson experience in writing and reviewing requirements architecture documents test plans design and maintaining documents quality analysis and helping with the software release process Authorized to work in the US for any employer Work Experience Python Developer Wipro Limited Nashville TN September 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Experience with continuous integration and automation using Jenkins Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Maintained Git repositories for DevOps environment Version control and build automationintegrating git into Jenkins Designed and developed data management system using MySQL Developed dynamic frontend and backend applications using Python Flask Frameworks Creating unit testregression test framework for workingnew code Building most of UI Design in Angular 45 Used Python Library Beautiful Soup for webScrapping Designed SPA Single page applications in Flux architecture using Reactjs Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Experience with popular Reactjs workflows such as Flux or Redux Responsible for debugging the project monitored on JIRA Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Implemented clientside Interface using React JS Used Amazon Web Services AWS for improved efficiency of storage and fast access Build React components and standalone functions to be added to any future pages Designed and implemented a scalable data pipeline in C and Python for each step of the machine learning process Developed Model View Controller MVC architecturebased Web Applications in Ruby on Rails Backbonejs and Code Igniter Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Involved in writing optimization techniques for more accuracy of Macros in CC C routines and Oracle SQL PLSQL Responsible for debugging and troubleshooting the web application Resolved ongoing problems and accurately documented progress of a project Environment Python 3427 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence MySQL redux JavaScript jQuery HadoopBigdata Python Developer Koch Industries Atlanta GA June 2015 to September 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in various phases of the project like analysis design development and testing Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Involved in Developing a Restful APIS service using Python Flask framework Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Pythonbased APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Developed Business Logic using python on Django Web Framework Worked in an agile development environment Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Environment Python27 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON ReduxPHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Hudson Insurance Alpharetta GA March 2013 to June 2015 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Programming in Python as well as Perl Created most important Business Rules which are useful for the scope of project and needs of customers Improved performance by using more modularized approach and using more in built methods Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of pyyaml libraries Wrote unit test cases for testing tools Created database using MySQL wrote several queries to extractstore data Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Environment Python 20 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Perl Cassandra Python Developer Optum Health Windsor CT December 2010 to March 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Java implementation on given project Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed dynamic interaction page on net MS visual basic2014 using SQL developer tools Effectively communicated with the external vendors to resolve queries Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "Python Developed Business Logic",
        "GUI",
        "Macros",
        "UNIX",
        "HTTP",
        "Chef Hands",
        "IAM EBS CloudWatch AWS Config",
        "JSON",
        "OpenStack",
        "Oracle SQL PLSQL Responsible",
        "Amazon Web Services AWS",
        "Build React",
        "Software Configuration Management",
        "Model View Control MVC",
        "CC C",
        "XML",
        "SOAP",
        "Python 3627 Django 1718",
        "jQuery Created",
        "Atlanta",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "DevOps",
        "Implemented Terraform",
        "Used Selenium Libraries",
        "Amazon",
        "Application Deployments Environment",
        "Responsible for Design",
        "WebSphere",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Stored Procedures",
        "Developed",
        "CSS Bootstrap",
        "AWS S3",
        "Automation Test",
        "Analysis Design Development and Testing Developed",
        "SQL PLSQL",
        "Kubernets",
        "Bash Python",
        "Technologies",
        "Jenkins Designed",
        "DjangoREST",
        "Develop",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "Flask",
        "Collaborated",
        "Redux Implemented",
        "Version",
        "Automate",
        "AWS EC2 Involved",
        "AJAX JavaScript",
        "AWSS3 Local",
        "Interface",
        "PythonDjango",
        "Spark",
        "GIT Proficient",
        "Integration Testing",
        "GIT",
        "jQuery Experienced",
        "HTML CSS",
        "API",
        "US",
        "QA",
        "Present Responsibilities Designed",
        "BDD",
        "UI Design",
        "AWS",
        "Spark Core Spark",
        "Oracle",
        "AWS SNS Wrote",
        "Coded",
        "JIRA Jenkins Git BitBucket Chef Selenium",
        "Worked with View Sets",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "AutomationBuild",
        "SQL",
        "Amazon Web Services",
        "lPythonspan",
        "Nginx",
        "Pandas PyQt PyQuery",
        "CSV Parsing",
        "API Write",
        "Amazon AWS Proficient",
        "Docker Chef Involved",
        "SSH",
        "SQL Alchemy",
        "CI",
        "MVW",
        "GIT SVN",
        "Amazon AWS",
        "Work Experience Python Developer Wipro Limited Nashville",
        "google analytics",
        "MySQL Responsible for Debugging",
        "Apache Cassandra Created Terraform",
        "SQLite",
        "CRUD",
        "Flux",
        "Alpharetta",
        "Utilized Subversion",
        "Performed",
        "the Inquiry Tool",
        "Djangos",
        "Written Programs",
        "JavaScript",
        "RedisCache",
        "UI",
        "Front",
        "Selenium",
        "CSS",
        "Perl Created",
        "Data",
        "REST",
        "JavaScript Entire Front",
        "Python Using Amazon EC2 command",
        "TDD",
        "Asset Department",
        "Configs",
        "Node",
        "Implemented RESTful WebServices"
    ],
    "experience": "Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Software development and design using Python 27331 and 34 Django 1918XML CSSHTML JavaScript JQuery and Angular Js Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Pythonbased environment along with data analytics data wrangling and Excel data extracts Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Write maintain and improve automation scripts in Python Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Expertise with cloud platforms like Amazon AWS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Written Programs in Spark using Scala and Python for Data quality check Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Imported the data from different sources like AWSS3 Local file system into Spark RDD and worked on cloud Amazon Web Services EMR S3 EC2 Lambda Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Expertise in using Application Deployments Environment configuration using Chef Hands on experience on AutomationBuild such as Docker Chef Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Experience with automation web development and engineering environment tools such as JIRA Jenkins Git BitBucket Chef Selenium QTP Maven Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in working with AWS Amazon Web Services cloud platform and its features which includes EC2 IAM EBS CloudWatch AWS Config and AWS S3 Experience working on scalable environment in AgileSCRUM methodologies Preparing Test Cases using TDD test driven development and BDD behavior driven development Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Handson experience in writing and reviewing requirements architecture documents test plans design and maintaining documents quality analysis and helping with the software release process Authorized to work in the US for any employer Work Experience Python Developer Wipro Limited Nashville TN September 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Experience with continuous integration and automation using Jenkins Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Maintained Git repositories for DevOps environment Version control and build automationintegrating git into Jenkins Designed and developed data management system using MySQL Developed dynamic frontend and backend applications using Python Flask Frameworks Creating unit testregression test framework for workingnew code Building most of UI Design in Angular 45 Used Python Library Beautiful Soup for webScrapping Designed SPA Single page applications in Flux architecture using Reactjs Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Experience with popular Reactjs workflows such as Flux or Redux Responsible for debugging the project monitored on JIRA Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Implemented clientside Interface using React JS Used Amazon Web Services AWS for improved efficiency of storage and fast access Build React components and standalone functions to be added to any future pages Designed and implemented a scalable data pipeline in C and Python for each step of the machine learning process Developed Model View Controller MVC architecturebased Web Applications in Ruby on Rails Backbonejs and Code Igniter Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Involved in writing optimization techniques for more accuracy of Macros in CC C routines and Oracle SQL PLSQL Responsible for debugging and troubleshooting the web application Resolved ongoing problems and accurately documented progress of a project Environment Python 3427 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence MySQL redux JavaScript jQuery HadoopBigdata Python Developer Koch Industries Atlanta GA June 2015 to September 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in various phases of the project like analysis design development and testing Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Involved in Developing a Restful APIS service using Python Flask framework Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Pythonbased APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Developed Business Logic using python on Django Web Framework Worked in an agile development environment Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Environment Python27 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON ReduxPHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Hudson Insurance Alpharetta GA March 2013 to June 2015 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Programming in Python as well as Perl Created most important Business Rules which are useful for the scope of project and needs of customers Improved performance by using more modularized approach and using more in built methods Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of pyyaml libraries Wrote unit test cases for testing tools Created database using MySQL wrote several queries to extractstore data Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Environment Python 20 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Perl Cassandra Python Developer Optum Health Windsor CT December 2010 to March 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Java implementation on given project Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed dynamic interaction page on net MS visual basic2014 using SQL developer tools Effectively communicated with the external vendors to resolve queries Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Wipro",
        "Limited",
        "Nashville",
        "TN",
        "Years",
        "Experience",
        "webapplication",
        "developer",
        "software",
        "development",
        "design",
        "python",
        "Django",
        "Java",
        "Webapp2",
        "Angularjs",
        "HTMLCSS",
        "JavaScript",
        "jQuery",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "Software",
        "development",
        "design",
        "Python",
        "Django",
        "1918XML",
        "CSSHTML",
        "JavaScript",
        "JQuery",
        "Angular",
        "Js",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "python",
        "Django",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTML",
        "CSS",
        "jQuery",
        "data",
        "visualization",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Hands",
        "experience",
        "Spark",
        "Core",
        "Spark",
        "SQL",
        "Data",
        "FramesData",
        "API",
        "Write",
        "automation",
        "scripts",
        "Python",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Ansible",
        "Ansible",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Expertise",
        "cloud",
        "platforms",
        "Amazon",
        "AWS",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Strong",
        "Experience",
        "python",
        "automation",
        "Rest",
        "API",
        "UI",
        "automation",
        "Selenium",
        "web",
        "driver",
        "Python",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Written",
        "Programs",
        "Spark",
        "Scala",
        "Python",
        "Data",
        "quality",
        "check",
        "Working",
        "experience",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Python",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "Fortigate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "PythonDjango",
        "MVC",
        "framework",
        "application",
        "Experience",
        "Kubernets",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "data",
        "sources",
        "AWSS3",
        "file",
        "system",
        "Spark",
        "RDD",
        "cloud",
        "Amazon",
        "Web",
        "Services",
        "EMR",
        "S3",
        "EC2",
        "Lambda",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "Expertise",
        "Application",
        "Deployments",
        "Environment",
        "configuration",
        "Chef",
        "Hands",
        "experience",
        "AutomationBuild",
        "Docker",
        "Chef",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "Experience",
        "automation",
        "web",
        "development",
        "engineering",
        "environment",
        "tools",
        "JIRA",
        "Jenkins",
        "Git",
        "BitBucket",
        "Chef",
        "Selenium",
        "QTP",
        "Maven",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MYSQL",
        "Oracle",
        "SQL",
        "Cassandra",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Experience",
        "List",
        "Comprehensions",
        "Python",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Experience",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "cloud",
        "platform",
        "features",
        "EC2",
        "IAM",
        "EBS",
        "CloudWatch",
        "AWS",
        "Config",
        "AWS",
        "S3",
        "Experience",
        "environment",
        "AgileSCRUM",
        "methodologies",
        "Test",
        "Cases",
        "TDD",
        "test",
        "development",
        "BDD",
        "behavior",
        "development",
        "Knowledge",
        "DevOps",
        "Environment",
        "automation",
        "engineer",
        "technologies",
        "applications",
        "GIT",
        "SVN",
        "Puppet",
        "Chef",
        "Docker",
        "AWS",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "JIRA",
        "JENKIN",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "plans",
        "documents",
        "quality",
        "analysis",
        "software",
        "release",
        "process",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Wipro",
        "Limited",
        "Nashville",
        "TN",
        "September",
        "Present",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "Build",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "ReactJS",
        "Redux",
        "Worked",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Git",
        "repositories",
        "DevOps",
        "environment",
        "Version",
        "control",
        "git",
        "Jenkins",
        "Designed",
        "data",
        "management",
        "system",
        "MySQL",
        "frontend",
        "applications",
        "Python",
        "Flask",
        "Frameworks",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "UI",
        "Design",
        "Angular",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "SPA",
        "page",
        "applications",
        "Flux",
        "architecture",
        "Reactjs",
        "AWS",
        "lambda",
        "servers",
        "code",
        "S3",
        "SNS",
        "Experience",
        "Reactjs",
        "workflows",
        "Flux",
        "Redux",
        "Responsible",
        "project",
        "JIRA",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "Build",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "ReactJS",
        "Redux",
        "Interface",
        "React",
        "JS",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "Build",
        "React",
        "components",
        "functions",
        "pages",
        "data",
        "pipeline",
        "C",
        "Python",
        "step",
        "machine",
        "learning",
        "process",
        "Developed",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Web",
        "Applications",
        "Ruby",
        "Rails",
        "Backbonejs",
        "Code",
        "Igniter",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "CSV",
        "data",
        "approach",
        "AWS",
        "EC2",
        "optimization",
        "techniques",
        "accuracy",
        "Macros",
        "CC",
        "C",
        "routines",
        "Oracle",
        "SQL",
        "PLSQL",
        "web",
        "application",
        "problems",
        "progress",
        "project",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "MySQL",
        "redux",
        "JavaScript",
        "jQuery",
        "HadoopBigdata",
        "Python",
        "Developer",
        "Koch",
        "Industries",
        "Atlanta",
        "GA",
        "June",
        "September",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "phases",
        "project",
        "analysis",
        "design",
        "development",
        "testing",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "Wrote",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "WebServices",
        "data",
        "systems",
        "Jenkins",
        "configuring",
        "integrationCI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "tasks",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "DynamoDB",
        "notification",
        "AWS",
        "SNS",
        "Wrote",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Developed",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "product",
        "situations",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Python",
        "IDE",
        "Pycharm",
        "code",
        "unit",
        "test",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Responsible",
        "Design",
        "maintenance",
        "databases",
        "Python",
        "Developed",
        "APIs",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "IDEA",
        "Development",
        "systems",
        "Python",
        "Developed",
        "Business",
        "Logic",
        "python",
        "Django",
        "Web",
        "Framework",
        "development",
        "environment",
        "Deployed",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "carpathia",
        "cloud",
        "web",
        "deployment",
        "Django",
        "class",
        "templates",
        "page",
        "closures",
        "Javascript",
        "framework",
        "Environment",
        "Python27",
        "Django",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wireshark",
        "Flash",
        "DOM",
        "JSON",
        "ReduxPHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Hudson",
        "Insurance",
        "Alpharetta",
        "GA",
        "March",
        "June",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MYSQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "framework",
        "application",
        "development",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Programming",
        "Python",
        "Perl",
        "Business",
        "Rules",
        "scope",
        "project",
        "needs",
        "customers",
        "performance",
        "approach",
        "methods",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "API",
        "module",
        "help",
        "pyyaml",
        "libraries",
        "Wrote",
        "unit",
        "test",
        "cases",
        "testing",
        "tools",
        "database",
        "MySQL",
        "queries",
        "data",
        "test",
        "programs",
        "engineering",
        "processes",
        "database",
        "end",
        "applications",
        "programs",
        "Performed",
        "research",
        "platforms",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Environment",
        "Python",
        "Django",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Perl",
        "Cassandra",
        "Python",
        "Developer",
        "Optum",
        "Health",
        "Windsor",
        "CT",
        "December",
        "March",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "user",
        "interface",
        "project",
        "HTML",
        "CSS",
        "JavaScript",
        "Entire",
        "Front",
        "end",
        "end",
        "modules",
        "project",
        "Python",
        "Django",
        "Framework",
        "data",
        "management",
        "systems",
        "MySQL",
        "databases",
        "Python",
        "Scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "modules",
        "data",
        "formats",
        "validations",
        "manipulations",
        "JavaScript",
        "jQuery",
        "indexes",
        "views",
        "constraints",
        "procedures",
        "cursors",
        "user",
        "functions",
        "subroutines",
        "MySQL",
        "Debugging",
        "application",
        "Subversion",
        "control",
        "tool",
        "team",
        "work",
        "Selenium",
        "Libraries",
        "test",
        "automation",
        "process",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "Java",
        "implementation",
        "project",
        "Developed",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Php",
        "language",
        "lamp",
        "server",
        "page",
        "interaction",
        "page",
        "MS",
        "basic2014",
        "SQL",
        "developer",
        "tools",
        "vendors",
        "queries",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "jQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Quality",
        "Centre",
        "Ansible",
        "PLSQL",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:46:46.896979",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Wipro Limited Nashville TN Having 8 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Software development and design using Python 27331 and 34 Django 1918XML CSSHTML JavaScript JQuery and Angular Js Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Pythonbased environment along with data analytics data wrangling and Excel data extracts Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Write maintain and improve automation scripts in Python Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Expertise with cloud platforms like Amazon AWS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Written Programs in Spark using Scala and Python for Data quality check Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Imported the data from different sources like AWSS3 Local file system into Spark RDD and worked on cloud Amazon Web Services EMR S3 EC2 Lambda Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Expertise in using Application Deployments Environment configuration using Chef Hands on experience on AutomationBuild such as Docker Chef Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Experience with automation web development and engineering environment tools such as JIRA Jenkins Git BitBucket Chef Selenium QTP Maven Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in working with AWS Amazon Web Services cloud platform and its features which includes EC2 IAM EBS CloudWatch AWS Config and AWS S3 Experience working on scalable environment in AgileSCRUM methodologies Preparing Test Cases using TDD test driven development and BDD behavior driven development Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Handson experience in writing and reviewing requirements architecture documents test plans design and maintaining documents quality analysis and helping with the software release process Authorized to work in the US for any employer Work Experience Python Developer Wipro Limited Nashville TN September 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Experience with continuous integration and automation using Jenkins Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Maintained Git repositories for DevOps environment Version control and build automationintegrating git into Jenkins Designed and developed data management system using MySQL Developed dynamic frontend and backend applications using Python Flask Frameworks Creating unit testregression test framework for workingnew code Building most of UI Design in Angular 45 Used Python Library Beautiful Soup for webScrapping Designed SPA Single page applications in Flux architecture using Reactjs Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Experience with popular Reactjs workflows such as Flux or Redux Responsible for debugging the project monitored on JIRA Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Build Web pages that are more userinteractive using AJAX JavaScript and ReactJS Redux Implemented clientside Interface using React JS Used Amazon Web Services AWS for improved efficiency of storage and fast access Build React components and standalone functions to be added to any future pages Designed and implemented a scalable data pipeline in C and Python for each step of the machine learning process Developed Model View Controller MVC architecturebased Web Applications in Ruby on Rails Backbonejs and Code Igniter Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Involved in writing optimization techniques for more accuracy of Macros in CC C routines and Oracle SQL PLSQL Responsible for debugging and troubleshooting the web application Resolved ongoing problems and accurately documented progress of a project Environment Python 3427 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence MySQL redux JavaScript jQuery HadoopBigdata Python Developer Koch Industries Atlanta GA June 2015 to September 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in various phases of the project like analysis design development and testing Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Involved in Developing a Restful APIS service using Python Flask framework Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Used Python IDE Pycharm for developing the code and performing unit test Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Pythonbased APIs by using Flask SQLAlchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Developed Business Logic using python on Django Web Framework Worked in an agile development environment Deployed Django web application in Apache webserver and carpathia cloud web deployment Written numerous Django views class based and templates for page rendering Extensively used closures in Javascript framework Environment Python27 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON ReduxPHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Hudson Insurance Alpharetta GA March 2013 to June 2015 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Programming in Python as well as Perl Created most important Business Rules which are useful for the scope of project and needs of customers Improved performance by using more modularized approach and using more in built methods Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of pyyaml libraries Wrote unit test cases for testing tools Created database using MySQL wrote several queries to extractstore data Coded test programs and evaluated existing engineering processes Designed and configured database and back end applications and programs Performed research to explore and identify new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Environment Python 20 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Perl Cassandra Python Developer Optum Health Windsor CT December 2010 to March 2013 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Java implementation on given project Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed dynamic interaction page on net MS visual basic2014 using SQL developer tools Effectively communicated with the external vendors to resolve queries Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors",
    "unique_id": "25e4e043-c1cc-4b89-ba32-6ce4c40a49f3"
}