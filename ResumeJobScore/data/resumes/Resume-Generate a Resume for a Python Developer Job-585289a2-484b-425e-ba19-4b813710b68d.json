{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Ashburn VA 5 years of experience with Core Java and J2EE and have been involved with developing RESTFUL APIs and implementing J2EE Design Patterns on applications Strong with Core Java such as MultithreadingCollectionsOOPSMethodsAbstract ClassesInterfacesThreadsExceptionsand Exception Handling techniques Strong with Java Memory ManagementGarbage CollectionStack and Heap Memory Space Strong with Collection framework features like ArrayListListMapSetLinkedLists to implement in coding Strong with Spring MVCSpring JDBCSpring ORMOXMSpring Context AOP and Spring MVC Experienced with Bean  ContainersEvent HandlingAnnotation BasedXML Based configuration Strong work experience with SingletonBuilderFactoryPrototypeTemplateAdaptor Design Patterns Experienced with Dependency Injection frameworks like Setters Injection and Constructor Injection Solid Understanding of algorithms like IterationRecursionLinear Search Depth First SearchBreadth First Search Knowledge of timespace complexities and computing efficiency of algorithms Experienced with hibernate frameworks like ORMJPA and worked with Hibernate persistent objects like SessionFactorySessionTransactionand Query and used JTA and JDO APIs for fetching objects Recently worked for about 1 year on Spring BootMicroservices and Java 8 Strong working experience with AWS Lambda integration with REST APIs Worked on Message Handling mechanisms using Kafka Listeners Producers Consumers etc recently Good with ThreadExecutors Concurrency and fixing the issues related to ThreadExecutor Exceptions and tasks rejections Good Hands on in MongoDB and Kafka Learned to work on IntelliJ including Git Terminal VCS Experienced using AWS cloud technologies for about one year such as EC2IAMCloudWatchDynamoDBS3 Work Experience Java Developer Verizon Communications Inc Irving TX January 2018 to September 2019 Project Activate Switch VerizonWireless Responsibilities Developed VisionFusion and Point of Sales applications on Spring Boot by creating REST APIs and consuming it Used Spring REST Templates and designed them to call CRUD Operations on REST Web Services to consume REST APIs in JSON AND XML Format Defined Beans scopes annotationsand used autowiring wherever required Worked on Kafka Listeners Producers Consumers Kafka Message Handlers while consume message from Topic and then performing message aggregation ingestion and decomposition of several messagesrequest and sending them as one message response back to user Generated Rules on Admin Avertack Flow landing page to create cases for consolidators Worked on setting up configurations and cadi properties for OCEDirect and programmed for OCEProcessor to take messages from Message Router and send them to Avertack generating rules Used Mitigation location R1 R2 FraudAlert filters to generate responses while identifying fraudApproved and fraudRejection cases Created Application Field Types from Json Payloads in the documents for OCEProcessor Created Neustar Application RestFul Web Service to call 3rd party library and be able to call several instances of Avertack servers within Avertack NeustarThird Party gateway Created MitigationFilters while generating responses back to Avertack from Neustar Performed Release Demos and particpated in scrum calls everyday Proficient with Git pushingcommitingrebasingmergingpulling and resolved several merge conflictsJettyDocBase issues other issues on consolePerformed Jenkins deployment on Dev QA Stage and Prod Enviroments in daytoday activities Used PollingChannelServiceActivatorsMessageConsumerR1Channels KafkaTopics as parameters and methods to channelize Kafka Message Handling mechanisms listening to topics and sending the same to applications Solid Understanding and hands on experience with J2EE Design Patterns like SingletonBuilderFactoryMVCPrototypeAdaptorTemplate Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Extensively worked with Core Java concepts and Spring modules in the project Strong handson coding on ListsArrayListsLinkedListsArraysThreadsMethods of Collections Used NOSQL database Amazon dynamo DB to store data of reporting Application Invoked garbage collection to reduce the memory space in heap used by Vision object which had no Object Reference Created Spring profiles for different spring environments to load configurations Maintained the user credentials using AWS IAM and created custom IAM policies to various groups defined within the organization Used Config Server to externalize the configurations for app to run on different environments Created different properties files for testing purposes and loaded them from Spring Boot YAML Implemented Oauth 20 and TLS Certificates in POSTMAN for calling CRUD operations for response Builddeveloped and consumed restful web services using spring framework 396 Used Hibernate framework like Spring Data JPA and exposed Spring Data JPA dependency for it Solid hands on experience with using Hibernate frameworks like JPAJDOJTAORM Used Hibernate Configuration SessionFactorySession and Transaction persistent objects on the database Implemented conversionsstringcollectionsexceptions handling featuresthreads Worked on Log4J framework and implemented logger methods in the project Wrote Model Diagnostic Context to solve logging problems Strongly implemented Java concurrency features like settingkilling daemon threadscreated thread instances runnable callable interfacesexecutorexecutor service and used some of the implementations of executor service such as ScheduledThreadPoolExecutor Strongly experienced with ThreadsLife Cycle Used Git to trackmaven the source code changes Implemented Spring 5x Reactive programming in the project Worked on filterMapReduceStreamCollectorstoList functions in Java 8 Wrote Lambda functions for eg casting response class of same package in ActivateSwitchServiceIntegration Java Described Setter Injections and Constructor Injections on XML files for service classes to fetch property valuesnamesIDs etc Used Apache Kakfa for consuming message streams and Datastores as MongoDB and PostGreSQl Build the architecture as a whole using Docker container and deployed the services in Kubernetes cluster Designed Maintained and deployed application on Kubernetes Some hands on experience creating buckets in S3 Good understanding of setting alarms logs and enabling and monitoring EC2 instances in AWS cloudwatch Good understanding of creating log streams in AWS cloudwatch and creating IAM in AWS Management Console Good understanding of integrating REST APIs with AWS lambda Connected to Data Sources and performed operations using Spring Data framework features like Spring Data JPA Used Git version technology and JIRA to track problems Injected Spring Cloud Config to centralize all the externalized configurations for the small microservices and spring bean managed components Wrote Junit test cases with the team Implemented tokensannotationsOauth design patternsconfigurations and certificates for authorization and authentication in applications for setting up Microservice Imported Netflix libraries such as Eureka Hystrix Thymeleaf with Zuul Server to solve distributed complex processing system problems like implementations of patterns for service discovery load balancing fault tolerance Set up jobs in Jenkins in a step by step approach followed by managing plugins and build types such as Maven Triggered build jobs for modules like External Int_G ValidatorFilterGeoDatamanaged plugins and checked the health status of jobs created Wrote interfaces methods controllers and end points for DeviceChange Buy SimActivate UpgradeActivate Landing Pagesubservice names as LandonLower Funnel Checkout and Log In Reviewed the XML logical data model and developed XML schema XSD to validate the model and used JaxB for Xml Java Mapping and XmlXslt conversion Configured the POM files as per the changes in the environments Worked with offshore team and communicated technical concepts and frameworks to ensure right objectives Machine Learning EngineerEntry Level Verizon Communications Inc Irving TX September 2018 to July 2019 Responsibilities Use machine learning and statistical modeling techniques to develop and evaluate algorithms to improve performance quality data management and accuracy Extracting the data from the dataset into R Console and exploring the dataset Used imputation for finding the missing values Implemented two algorithms to the dataset trained the models using two different algorithms such as Linear Regression and other using Deep Neural Network which is a part of Artificial Neural Network Algorithm Comparing their results to evaluate their performances using different performance measures such as Correlation matrix plotting the graphs using scatterplot matrices and confusion matrices While training the models I have also partitioned the data sets using Random Sampling method which is the convenient way to split the dataset into training and test sets Utilized CrossValidation performance measures where creating the folds and then trained the models using 10folds methods Implementation of caret packages plyr packages and H2o classification algorithms which is also a customization method to encasing two different algorithms and using them to display the performance results and predicting the same on the new datasets where our test sets have been mainly used as a new data h Some metrics were used like number of samples to be tested RMSE MAE Fstatistics Kappa Statistics Rsquared and Residuals to display the performance comparisions and also improve them through diverse algorithms applied to the dataset Analyzed and embedded ensemble methods like Gradient Boosting Machine which is a part of Boosting method and random forests two of them which train the models appropriately fitted them and predicted the data Composed a new data through the stacked ensemble method GBMRF which improves accuracy and clearly summarize the results Jr Java Developer Microland Limited Bengaluru Karnataka June 2013 to December 2016 Responsibilities Utilized concepts like Inheritance method overloading overriding exceptions wrapper classes getterssetters in beans classes XML descriptors and spring framework libraries Involved in the architecture team for design and implementation of system Involved in designing the project with spring and Hibernate Framework Used RESTful web services for implementing the Business Logic Experience in managing and reviewing Hadoop log files Installed and configured Hadoop Mapreduce HDFS Developed multiple MapReduce jobs in java for data cleaning and preprocessing Experienced in performance tuning of Spark Applications for setting right Batch Interval time correct level of Parallelism and memory tuning Involved in managing and reviewing Hadoop log files and assisted them in developing Scripts and Batch Job to schedule various Hadoop Program Connected the application to the MySQL database to retrieve data from various tables and provide the relevant data Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Used SOAP AND WSDL Services to implement HTML JSON and XML Data Involved in creating the Rest API services Involved with the team to integrate SpringHibernate architecture using Spring Boot and JPA Build RESTFUL web services using Spring Boot Utilized Spring annotations wrote spring beans classes imported spring libraries and maven dependencies for developing applications using Spring Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Business logic is implemented using Spring Core and Hibernate Developed and modified database objects as per the requirements Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Interaction with customers and identified System Requirements and developed Software Requirement Specifications Involved in Development by applying expertise in J2EE Core JAVA concepts OOPS Concepts Collections Multithreading Working in a team of 10 members and involved in architecture requirements gathering analysis detailed design preparing class diagram flow diagram etc Education Master of Science in Computer Science University of Illinois Springfield IL December 2017 Skills API CODING DESIGN PATTERNS OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING Additional Information Technical Skills Object Oriented Programming RESTFUL APIs and API Development Spring JDBCORMOXMAOPMVCContextCore Spring BootMicroservices ApplicationContext and BeanFactory Interfaces Dependency Injection frameworks SingletonBuilderFactoryPrototypeAdaptor Template Design Patterns Hibernate frameworksORMJPA Hibernate APIsJDOJTAJDBCIBatis SQL Java CollectionsMultithreadingConcurrency AnnotationsBeansScopesIOC Container Strong Core Java Skills Strong Coding Skills Kafka and MongoDB AWS EC2CloudWatchLambda Java 8StreamCollectorsLambda JVM and Memory Management Log4j framework Pivotal Cloud Foundry",
    "entities": [
        "S3 Good",
        "Created Application Field Types",
        "Utilized CrossValidation",
        "JPAJDOJTAORM Used Hibernate Configuration SessionFactorySession and Transaction",
        "Used PollingChannelServiceActivatorsMessageConsumerR1Channels KafkaTopics",
        "Gradient Boosting Machine",
        "ThreadExecutor Exceptions",
        "BeanFactory Interfaces Dependency Injection",
        "JTA",
        "TLS Certificates",
        "RestFul Web Service",
        "Memory Management Log4j",
        "JSON",
        "Created MitigationFilters",
        "Avertack NeustarThird Party",
        "Hadoop",
        "XML",
        "Project Activate Switch VerizonWireless Responsibilities Developed VisionFusion",
        "NOSQL",
        "Neustar",
        "no Object Reference Created Spring",
        "Maintained",
        "Message Router",
        "API Development Spring",
        "RMSE MAE",
        "Amazon",
        "OCEProcessor Created Neustar Application",
        "Kafka Listeners Producers",
        "Spring MVC Experienced",
        "Jenkins",
        "Bean  ContainersEvent HandlingAnnotation BasedXML",
        "Eureka Hystrix Thymeleaf",
        "System Requirements",
        "LandonLower Funnel Checkout",
        "Git",
        "Science in Computer Science University of Illinois Springfield IL",
        "OCEDirect",
        "Spring 5x Reactive",
        "Hadoop Mapreduce HDFS Developed",
        "CRUD Operations",
        "AWS IAM",
        "Verizon Communications Inc",
        "J2EE Design Patterns",
        "Java 8 Wrote",
        "Vision",
        "ORMJPA",
        "Docker",
        "Kafka Listeners Producers Consumers",
        "POM",
        "Git Terminal VCS Experienced",
        "Spring Data JPA",
        "Spring Data",
        "IterationRecursionLinear Search Depth",
        "Wrote Model Diagnostic Context",
        "Deep Neural Network",
        "AWS",
        "Software Development Life Cycle SDLC Used SOAP AND WSDL Services",
        "AWS Management Console Good",
        "Spring MVCSpring JDBCSpring ORMOXMSpring Context AOP",
        "Artificial Neural Network Algorithm Comparing",
        "External Int_G",
        "Responsibilities Utilized",
        "java",
        "RESTFUL",
        "Machine Learning EngineerEntry Level",
        "Maven Triggered",
        "Hadoop Program Connected",
        "Kubernetes",
        "Software Requirement Specifications Involved",
        "Linear Regression",
        "XML Data Involved",
        "the Business Logic Experience",
        "Json Payloads",
        "CRUD",
        "Point of Sales",
        "lJavaspan",
        "JDO",
        "Spring BootMicroservices",
        "XSD",
        "Skills API CODING DESIGN PATTERNS OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING Additional Information Technical Skills Object Oriented Programming RESTFUL",
        "SpringHibernate",
        "J2EE Core",
        "Random Sampling",
        "DeviceChange Buy SimActivate UpgradeActivate Landing Pagesubservice",
        "REST",
        "MapReduce",
        "Microservice Imported Netflix",
        "Connected",
        "Spring Core and"
    ],
    "experience": "Experience Java Developer Verizon Communications Inc Irving TX January 2018 to September 2019 Project Activate Switch VerizonWireless Responsibilities Developed VisionFusion and Point of Sales applications on Spring Boot by creating REST APIs and consuming it Used Spring REST Templates and designed them to call CRUD Operations on REST Web Services to consume REST APIs in JSON AND XML Format Defined Beans scopes annotationsand used autowiring wherever required Worked on Kafka Listeners Producers Consumers Kafka Message Handlers while consume message from Topic and then performing message aggregation ingestion and decomposition of several messagesrequest and sending them as one message response back to user Generated Rules on Admin Avertack Flow landing page to create cases for consolidators Worked on setting up configurations and cadi properties for OCEDirect and programmed for OCEProcessor to take messages from Message Router and send them to Avertack generating rules Used Mitigation location R1 R2 FraudAlert filters to generate responses while identifying fraudApproved and fraudRejection cases Created Application Field Types from Json Payloads in the documents for OCEProcessor Created Neustar Application RestFul Web Service to call 3rd party library and be able to call several instances of Avertack servers within Avertack NeustarThird Party gateway Created MitigationFilters while generating responses back to Avertack from Neustar Performed Release Demos and particpated in scrum calls everyday Proficient with Git pushingcommitingrebasingmergingpulling and resolved several merge conflictsJettyDocBase issues other issues on consolePerformed Jenkins deployment on Dev QA Stage and Prod Enviroments in daytoday activities Used PollingChannelServiceActivatorsMessageConsumerR1Channels KafkaTopics as parameters and methods to channelize Kafka Message Handling mechanisms listening to topics and sending the same to applications Solid Understanding and hands on experience with J2EE Design Patterns like SingletonBuilderFactoryMVCPrototypeAdaptorTemplate Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Extensively worked with Core Java concepts and Spring modules in the project Strong handson coding on ListsArrayListsLinkedListsArraysThreadsMethods of Collections Used NOSQL database Amazon dynamo DB to store data of reporting Application Invoked garbage collection to reduce the memory space in heap used by Vision object which had no Object Reference Created Spring profiles for different spring environments to load configurations Maintained the user credentials using AWS IAM and created custom IAM policies to various groups defined within the organization Used Config Server to externalize the configurations for app to run on different environments Created different properties files for testing purposes and loaded them from Spring Boot YAML Implemented Oauth 20 and TLS Certificates in POSTMAN for calling CRUD operations for response Builddeveloped and consumed restful web services using spring framework 396 Used Hibernate framework like Spring Data JPA and exposed Spring Data JPA dependency for it Solid hands on experience with using Hibernate frameworks like JPAJDOJTAORM Used Hibernate Configuration SessionFactorySession and Transaction persistent objects on the database Implemented conversionsstringcollectionsexceptions handling featuresthreads Worked on Log4J framework and implemented logger methods in the project Wrote Model Diagnostic Context to solve logging problems Strongly implemented Java concurrency features like settingkilling daemon threadscreated thread instances runnable callable interfacesexecutorexecutor service and used some of the implementations of executor service such as ScheduledThreadPoolExecutor Strongly experienced with ThreadsLife Cycle Used Git to trackmaven the source code changes Implemented Spring 5x Reactive programming in the project Worked on filterMapReduceStreamCollectorstoList functions in Java 8 Wrote Lambda functions for eg casting response class of same package in ActivateSwitchServiceIntegration Java Described Setter Injections and Constructor Injections on XML files for service classes to fetch property valuesnamesIDs etc Used Apache Kakfa for consuming message streams and Datastores as MongoDB and PostGreSQl Build the architecture as a whole using Docker container and deployed the services in Kubernetes cluster Designed Maintained and deployed application on Kubernetes Some hands on experience creating buckets in S3 Good understanding of setting alarms logs and enabling and monitoring EC2 instances in AWS cloudwatch Good understanding of creating log streams in AWS cloudwatch and creating IAM in AWS Management Console Good understanding of integrating REST APIs with AWS lambda Connected to Data Sources and performed operations using Spring Data framework features like Spring Data JPA Used Git version technology and JIRA to track problems Injected Spring Cloud Config to centralize all the externalized configurations for the small microservices and spring bean managed components Wrote Junit test cases with the team Implemented tokensannotationsOauth design patternsconfigurations and certificates for authorization and authentication in applications for setting up Microservice Imported Netflix libraries such as Eureka Hystrix Thymeleaf with Zuul Server to solve distributed complex processing system problems like implementations of patterns for service discovery load balancing fault tolerance Set up jobs in Jenkins in a step by step approach followed by managing plugins and build types such as Maven Triggered build jobs for modules like External Int_G ValidatorFilterGeoDatamanaged plugins and checked the health status of jobs created Wrote interfaces methods controllers and end points for DeviceChange Buy SimActivate UpgradeActivate Landing Pagesubservice names as LandonLower Funnel Checkout and Log In Reviewed the XML logical data model and developed XML schema XSD to validate the model and used JaxB for Xml Java Mapping and XmlXslt conversion Configured the POM files as per the changes in the environments Worked with offshore team and communicated technical concepts and frameworks to ensure right objectives Machine Learning EngineerEntry Level Verizon Communications Inc Irving TX September 2018 to July 2019 Responsibilities Use machine learning and statistical modeling techniques to develop and evaluate algorithms to improve performance quality data management and accuracy Extracting the data from the dataset into R Console and exploring the dataset Used imputation for finding the missing values Implemented two algorithms to the dataset trained the models using two different algorithms such as Linear Regression and other using Deep Neural Network which is a part of Artificial Neural Network Algorithm Comparing their results to evaluate their performances using different performance measures such as Correlation matrix plotting the graphs using scatterplot matrices and confusion matrices While training the models I have also partitioned the data sets using Random Sampling method which is the convenient way to split the dataset into training and test sets Utilized CrossValidation performance measures where creating the folds and then trained the models using 10folds methods Implementation of caret packages plyr packages and H2o classification algorithms which is also a customization method to encasing two different algorithms and using them to display the performance results and predicting the same on the new datasets where our test sets have been mainly used as a new data h Some metrics were used like number of samples to be tested RMSE MAE Fstatistics Kappa Statistics Rsquared and Residuals to display the performance comparisions and also improve them through diverse algorithms applied to the dataset Analyzed and embedded ensemble methods like Gradient Boosting Machine which is a part of Boosting method and random forests two of them which train the models appropriately fitted them and predicted the data Composed a new data through the stacked ensemble method GBMRF which improves accuracy and clearly summarize the results Jr Java Developer Microland Limited Bengaluru Karnataka June 2013 to December 2016 Responsibilities Utilized concepts like Inheritance method overloading overriding exceptions wrapper classes getterssetters in beans classes XML descriptors and spring framework libraries Involved in the architecture team for design and implementation of system Involved in designing the project with spring and Hibernate Framework Used RESTful web services for implementing the Business Logic Experience in managing and reviewing Hadoop log files Installed and configured Hadoop Mapreduce HDFS Developed multiple MapReduce jobs in java for data cleaning and preprocessing Experienced in performance tuning of Spark Applications for setting right Batch Interval time correct level of Parallelism and memory tuning Involved in managing and reviewing Hadoop log files and assisted them in developing Scripts and Batch Job to schedule various Hadoop Program Connected the application to the MySQL database to retrieve data from various tables and provide the relevant data Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Used SOAP AND WSDL Services to implement HTML JSON and XML Data Involved in creating the Rest API services Involved with the team to integrate SpringHibernate architecture using Spring Boot and JPA Build RESTFUL web services using Spring Boot Utilized Spring annotations wrote spring beans classes imported spring libraries and maven dependencies for developing applications using Spring Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Business logic is implemented using Spring Core and Hibernate Developed and modified database objects as per the requirements Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Interaction with customers and identified System Requirements and developed Software Requirement Specifications Involved in Development by applying expertise in J2EE Core JAVA concepts OOPS Concepts Collections Multithreading Working in a team of 10 members and involved in architecture requirements gathering analysis detailed design preparing class diagram flow diagram etc Education Master of Science in Computer Science University of Illinois Springfield IL December 2017 Skills API CODING DESIGN PATTERNS OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING Additional Information Technical Skills Object Oriented Programming RESTFUL APIs and API Development Spring JDBCORMOXMAOPMVCContextCore Spring BootMicroservices ApplicationContext and BeanFactory Interfaces Dependency Injection frameworks SingletonBuilderFactoryPrototypeAdaptor Template Design Patterns Hibernate frameworksORMJPA Hibernate APIsJDOJTAJDBCIBatis SQL Java CollectionsMultithreadingConcurrency AnnotationsBeansScopesIOC Container Strong Core Java Skills Strong Coding Skills Kafka and MongoDB AWS EC2CloudWatchLambda Java 8StreamCollectorsLambda JVM and Memory Management Log4j framework Pivotal Cloud Foundry",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Ashburn",
        "VA",
        "years",
        "experience",
        "Core",
        "Java",
        "J2EE",
        "RESTFUL",
        "APIs",
        "J2EE",
        "Design",
        "Patterns",
        "applications",
        "Core",
        "Java",
        "Exception",
        "Handling",
        "techniques",
        "Java",
        "Memory",
        "ManagementGarbage",
        "CollectionStack",
        "Heap",
        "Memory",
        "Space",
        "Strong",
        "Collection",
        "framework",
        "features",
        "ArrayListListMapSetLinkedLists",
        "Strong",
        "Spring",
        "MVCSpring",
        "JDBCSpring",
        "Context",
        "AOP",
        "Spring",
        "MVC",
        "Bean",
        "ContainersEvent",
        "HandlingAnnotation",
        "BasedXML",
        "Based",
        "configuration",
        "Strong",
        "work",
        "experience",
        "SingletonBuilderFactoryPrototypeTemplateAdaptor",
        "Design",
        "Patterns",
        "Dependency",
        "Injection",
        "frameworks",
        "Setters",
        "Injection",
        "Constructor",
        "Injection",
        "Solid",
        "Understanding",
        "algorithms",
        "IterationRecursionLinear",
        "Search",
        "Depth",
        "First",
        "SearchBreadth",
        "First",
        "Search",
        "Knowledge",
        "timespace",
        "complexities",
        "efficiency",
        "algorithms",
        "hibernate",
        "frameworks",
        "ORMJPA",
        "Hibernate",
        "objects",
        "Query",
        "JTA",
        "JDO",
        "APIs",
        "objects",
        "year",
        "Spring",
        "BootMicroservices",
        "Java",
        "working",
        "experience",
        "AWS",
        "Lambda",
        "integration",
        "REST",
        "APIs",
        "Message",
        "Handling",
        "mechanisms",
        "Kafka",
        "Listeners",
        "Producers",
        "Consumers",
        "ThreadExecutors",
        "Concurrency",
        "issues",
        "ThreadExecutor",
        "Exceptions",
        "tasks",
        "rejections",
        "Good",
        "Hands",
        "Kafka",
        "IntelliJ",
        "Git",
        "Terminal",
        "VCS",
        "AWS",
        "cloud",
        "technologies",
        "year",
        "EC2IAMCloudWatchDynamoDBS3",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Verizon",
        "Communications",
        "Inc",
        "Irving",
        "TX",
        "January",
        "September",
        "Project",
        "Activate",
        "Switch",
        "VerizonWireless",
        "Responsibilities",
        "VisionFusion",
        "Point",
        "Sales",
        "applications",
        "Spring",
        "Boot",
        "REST",
        "APIs",
        "Spring",
        "REST",
        "Templates",
        "CRUD",
        "Operations",
        "REST",
        "Web",
        "Services",
        "REST",
        "APIs",
        "JSON",
        "XML",
        "Format",
        "Defined",
        "Beans",
        "annotationsand",
        "autowiring",
        "Worked",
        "Kafka",
        "Listeners",
        "Producers",
        "Consumers",
        "Kafka",
        "Message",
        "Handlers",
        "message",
        "Topic",
        "message",
        "aggregation",
        "ingestion",
        "decomposition",
        "messagesrequest",
        "message",
        "response",
        "user",
        "Generated",
        "Rules",
        "Admin",
        "Avertack",
        "Flow",
        "landing",
        "page",
        "cases",
        "consolidators",
        "configurations",
        "cadi",
        "properties",
        "OCEDirect",
        "OCEProcessor",
        "messages",
        "Message",
        "Router",
        "generating",
        "rules",
        "Mitigation",
        "location",
        "R1",
        "R2",
        "FraudAlert",
        "filters",
        "responses",
        "fraudRejection",
        "cases",
        "Application",
        "Field",
        "Types",
        "Json",
        "Payloads",
        "documents",
        "OCEProcessor",
        "Created",
        "Neustar",
        "Application",
        "RestFul",
        "Web",
        "Service",
        "party",
        "library",
        "instances",
        "Avertack",
        "servers",
        "Avertack",
        "NeustarThird",
        "Party",
        "gateway",
        "MitigationFilters",
        "responses",
        "Avertack",
        "Neustar",
        "Performed",
        "Release",
        "Demos",
        "scrum",
        "calls",
        "Proficient",
        "Git",
        "pushingcommitingrebasingmergingpulling",
        "merge",
        "conflictsJettyDocBase",
        "issues",
        "Jenkins",
        "deployment",
        "Dev",
        "QA",
        "Stage",
        "Prod",
        "Enviroments",
        "daytoday",
        "activities",
        "PollingChannelServiceActivatorsMessageConsumerR1Channels",
        "KafkaTopics",
        "parameters",
        "methods",
        "Kafka",
        "Message",
        "Handling",
        "mechanisms",
        "topics",
        "applications",
        "Understanding",
        "hands",
        "experience",
        "J2EE",
        "Design",
        "Patterns",
        "framework",
        "web",
        "services",
        "Amazon",
        "EC2",
        "instances",
        "Core",
        "Java",
        "concepts",
        "Spring",
        "modules",
        "project",
        "Strong",
        "handson",
        "ListsArrayListsLinkedListsArraysThreadsMethods",
        "Collections",
        "NOSQL",
        "database",
        "Amazon",
        "dynamo",
        "DB",
        "data",
        "Application",
        "garbage",
        "collection",
        "memory",
        "space",
        "heap",
        "Vision",
        "object",
        "Object",
        "Reference",
        "Created",
        "Spring",
        "profiles",
        "spring",
        "environments",
        "configurations",
        "user",
        "credentials",
        "AWS",
        "IAM",
        "custom",
        "IAM",
        "policies",
        "groups",
        "organization",
        "Config",
        "Server",
        "configurations",
        "app",
        "environments",
        "properties",
        "testing",
        "purposes",
        "Spring",
        "Boot",
        "YAML",
        "Oauth",
        "TLS",
        "Certificates",
        "POSTMAN",
        "CRUD",
        "operations",
        "response",
        "Builddeveloped",
        "web",
        "services",
        "spring",
        "framework",
        "Hibernate",
        "framework",
        "Spring",
        "Data",
        "JPA",
        "Spring",
        "Data",
        "JPA",
        "dependency",
        "hands",
        "experience",
        "Hibernate",
        "frameworks",
        "JPAJDOJTAORM",
        "Hibernate",
        "Configuration",
        "SessionFactorySession",
        "Transaction",
        "objects",
        "database",
        "conversionsstringcollectionsexceptions",
        "featuresthreads",
        "framework",
        "methods",
        "project",
        "Wrote",
        "Model",
        "Diagnostic",
        "Context",
        "problems",
        "Java",
        "concurrency",
        "features",
        "daemon",
        "thread",
        "instances",
        "interfacesexecutorexecutor",
        "service",
        "implementations",
        "executor",
        "service",
        "ScheduledThreadPoolExecutor",
        "ThreadsLife",
        "Cycle",
        "Git",
        "source",
        "code",
        "changes",
        "Spring",
        "5x",
        "Reactive",
        "programming",
        "project",
        "functions",
        "Java",
        "Wrote",
        "Lambda",
        "functions",
        "eg",
        "response",
        "class",
        "package",
        "ActivateSwitchServiceIntegration",
        "Java",
        "Described",
        "Setter",
        "Injections",
        "Constructor",
        "Injections",
        "XML",
        "files",
        "service",
        "classes",
        "property",
        "Apache",
        "Kakfa",
        "message",
        "streams",
        "Datastores",
        "MongoDB",
        "architecture",
        "Docker",
        "container",
        "services",
        "Kubernetes",
        "cluster",
        "application",
        "Kubernetes",
        "hands",
        "experience",
        "buckets",
        "S3",
        "understanding",
        "alarms",
        "logs",
        "EC2",
        "instances",
        "AWS",
        "understanding",
        "log",
        "streams",
        "AWS",
        "cloudwatch",
        "IAM",
        "AWS",
        "Management",
        "Console",
        "understanding",
        "REST",
        "APIs",
        "AWS",
        "lambda",
        "Data",
        "Sources",
        "operations",
        "Spring",
        "Data",
        "framework",
        "features",
        "Spring",
        "Data",
        "JPA",
        "Git",
        "version",
        "technology",
        "JIRA",
        "problems",
        "Spring",
        "Cloud",
        "Config",
        "configurations",
        "microservices",
        "spring",
        "bean",
        "components",
        "Wrote",
        "Junit",
        "test",
        "cases",
        "team",
        "design",
        "patternsconfigurations",
        "certificates",
        "authorization",
        "authentication",
        "applications",
        "Microservice",
        "Imported",
        "Netflix",
        "Eureka",
        "Hystrix",
        "Thymeleaf",
        "Zuul",
        "Server",
        "processing",
        "system",
        "problems",
        "implementations",
        "patterns",
        "service",
        "discovery",
        "load",
        "fault",
        "tolerance",
        "Set",
        "jobs",
        "Jenkins",
        "step",
        "step",
        "approach",
        "plugins",
        "types",
        "Maven",
        "jobs",
        "modules",
        "External",
        "Int_G",
        "plugins",
        "health",
        "status",
        "jobs",
        "Wrote",
        "interfaces",
        "methods",
        "controllers",
        "end",
        "points",
        "DeviceChange",
        "Buy",
        "SimActivate",
        "UpgradeActivate",
        "Landing",
        "Pagesubservice",
        "names",
        "LandonLower",
        "Funnel",
        "Checkout",
        "Log",
        "XML",
        "data",
        "model",
        "XML",
        "schema",
        "XSD",
        "model",
        "JaxB",
        "Xml",
        "Java",
        "Mapping",
        "XmlXslt",
        "conversion",
        "POM",
        "files",
        "changes",
        "environments",
        "team",
        "concepts",
        "frameworks",
        "objectives",
        "Machine",
        "Learning",
        "EngineerEntry",
        "Level",
        "Verizon",
        "Communications",
        "Inc",
        "Irving",
        "TX",
        "September",
        "July",
        "Responsibilities",
        "Use",
        "machine",
        "learning",
        "modeling",
        "techniques",
        "algorithms",
        "performance",
        "quality",
        "data",
        "management",
        "accuracy",
        "data",
        "dataset",
        "R",
        "Console",
        "imputation",
        "values",
        "algorithms",
        "dataset",
        "models",
        "algorithms",
        "Linear",
        "Regression",
        "Deep",
        "Neural",
        "Network",
        "part",
        "Artificial",
        "Neural",
        "Network",
        "Algorithm",
        "results",
        "performances",
        "performance",
        "measures",
        "Correlation",
        "matrix",
        "graphs",
        "scatterplot",
        "matrices",
        "confusion",
        "matrices",
        "models",
        "data",
        "sets",
        "Random",
        "Sampling",
        "method",
        "way",
        "dataset",
        "training",
        "test",
        "sets",
        "CrossValidation",
        "performance",
        "measures",
        "folds",
        "models",
        "methods",
        "Implementation",
        "caret",
        "packages",
        "plyr",
        "packages",
        "H2o",
        "classification",
        "algorithms",
        "customization",
        "method",
        "algorithms",
        "performance",
        "results",
        "datasets",
        "test",
        "sets",
        "data",
        "h",
        "metrics",
        "number",
        "samples",
        "RMSE",
        "MAE",
        "Fstatistics",
        "Kappa",
        "Statistics",
        "Rsquared",
        "Residuals",
        "performance",
        "comparisions",
        "algorithms",
        "dataset",
        "Analyzed",
        "methods",
        "Gradient",
        "Boosting",
        "Machine",
        "part",
        "method",
        "forests",
        "models",
        "data",
        "data",
        "method",
        "GBMRF",
        "accuracy",
        "results",
        "Jr",
        "Java",
        "Developer",
        "Microland",
        "Limited",
        "Bengaluru",
        "Karnataka",
        "June",
        "December",
        "Responsibilities",
        "concepts",
        "Inheritance",
        "method",
        "exceptions",
        "wrapper",
        "classes",
        "getterssetters",
        "beans",
        "classes",
        "XML",
        "descriptors",
        "spring",
        "framework",
        "libraries",
        "architecture",
        "team",
        "design",
        "implementation",
        "system",
        "project",
        "spring",
        "Hibernate",
        "Framework",
        "web",
        "services",
        "Business",
        "Logic",
        "Experience",
        "Hadoop",
        "log",
        "files",
        "Hadoop",
        "Mapreduce",
        "HDFS",
        "MapReduce",
        "jobs",
        "java",
        "data",
        "performance",
        "tuning",
        "Spark",
        "Applications",
        "Batch",
        "Interval",
        "time",
        "level",
        "Parallelism",
        "memory",
        "tuning",
        "Hadoop",
        "log",
        "files",
        "Scripts",
        "Batch",
        "Job",
        "Hadoop",
        "Program",
        "application",
        "MySQL",
        "database",
        "data",
        "tables",
        "data",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "SOAP",
        "WSDL",
        "Services",
        "HTML",
        "JSON",
        "XML",
        "Data",
        "API",
        "services",
        "team",
        "SpringHibernate",
        "architecture",
        "Spring",
        "Boot",
        "JPA",
        "Build",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Spring",
        "annotations",
        "spring",
        "beans",
        "classes",
        "spring",
        "libraries",
        "dependencies",
        "applications",
        "Spring",
        "JDBC",
        "information",
        "model",
        "tier",
        "Eclipse",
        "IDE",
        "applications",
        "Business",
        "logic",
        "Spring",
        "Core",
        "Hibernate",
        "Developed",
        "database",
        "requirements",
        "Unit",
        "integration",
        "bug",
        "acceptance",
        "testing",
        "test",
        "cases",
        "Code",
        "Interaction",
        "customers",
        "System",
        "Requirements",
        "Software",
        "Requirement",
        "Specifications",
        "Development",
        "expertise",
        "J2EE",
        "Core",
        "Concepts",
        "Collections",
        "Multithreading",
        "Working",
        "team",
        "members",
        "architecture",
        "requirements",
        "analysis",
        "design",
        "class",
        "diagram",
        "flow",
        "diagram",
        "Education",
        "Master",
        "Science",
        "Computer",
        "Science",
        "University",
        "Illinois",
        "Springfield",
        "IL",
        "December",
        "Skills",
        "API",
        "CODING",
        "PATTERNS",
        "OBJECT",
        "OBJECT",
        "PROGRAMMING",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Object",
        "Programming",
        "RESTFUL",
        "APIs",
        "API",
        "Development",
        "Spring",
        "JDBCORMOXMAOPMVCContextCore",
        "Spring",
        "BootMicroservices",
        "ApplicationContext",
        "BeanFactory",
        "Interfaces",
        "Dependency",
        "Injection",
        "frameworks",
        "SingletonBuilderFactoryPrototypeAdaptor",
        "Template",
        "Design",
        "Patterns",
        "Hibernate",
        "frameworksORMJPA",
        "Hibernate",
        "APIsJDOJTAJDBCIBatis",
        "SQL",
        "Java",
        "CollectionsMultithreadingConcurrency",
        "AnnotationsBeansScopesIOC",
        "Container",
        "Strong",
        "Core",
        "Java",
        "Skills",
        "Strong",
        "Coding",
        "Skills",
        "Kafka",
        "AWS",
        "EC2CloudWatchLambda",
        "Java",
        "8StreamCollectorsLambda",
        "JVM",
        "Memory",
        "Management",
        "Log4j",
        "framework",
        "Cloud",
        "Foundry"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:07:27.314035",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Ashburn VA 5 years of experience with Core Java and J2EE and have been involved with developing RESTFUL APIs and implementing J2EE Design Patterns on applications Strong with Core Java such as MultithreadingCollectionsOOPSMethodsAbstract ClassesInterfacesThreadsExceptionsand Exception Handling techniques Strong with Java Memory ManagementGarbage CollectionStack and Heap Memory Space Strong with Collection framework features like ArrayListListMapSetLinkedLists to implement in coding Strong with Spring MVCSpring JDBCSpring ORMOXMSpring Context AOP and Spring MVC Experienced with Bean LifecycleScopesDefinationsIOC ContainersEvent HandlingAnnotation BasedXML Based configuration Strong work experience with SingletonBuilderFactoryPrototypeTemplateAdaptor Design Patterns Experienced with Dependency Injection frameworks like Setters Injection and Constructor Injection Solid Understanding of algorithms like IterationRecursionLinear Search Depth First SearchBreadth First Search Knowledge of timespace complexities and computing efficiency of algorithms Experienced with hibernate frameworks like ORMJPA and worked with Hibernate persistent objects like SessionFactorySessionTransactionand Query and used JTA and JDO APIs for fetching objects Recently worked for about 1 year on Spring BootMicroservices and Java 8 Strong working experience with AWS Lambda integration with REST APIs Worked on Message Handling mechanisms using Kafka Listeners Producers Consumers etc recently Good with ThreadExecutors Concurrency and fixing the issues related to ThreadExecutor Exceptions and tasks rejections Good Hands on in MongoDB and Kafka Learned to work on IntelliJ including Git Terminal VCS Experienced using AWS cloud technologies for about one year such as EC2IAMCloudWatchDynamoDBS3 Work Experience Java Developer Verizon Communications Inc Irving TX January 2018 to September 2019 Project Activate Switch VerizonWireless Responsibilities Developed VisionFusion and Point of Sales applications on Spring Boot by creating REST APIs and consuming it Used Spring REST Templates and designed them to call CRUD Operations on REST Web Services to consume REST APIs in JSON AND XML Format Defined Beans scopes annotationsand used autowiring wherever required Worked on Kafka Listeners Producers Consumers Kafka Message Handlers while consume message from Topic and then performing message aggregation ingestion and decomposition of several messagesrequest and sending them as one message response back to user Generated Rules on Admin Avertack Flow landing page to create cases for consolidators Worked on setting up configurations and cadi properties for OCEDirect and programmed for OCEProcessor to take messages from Message Router and send them to Avertack generating rules Used Mitigation location R1 R2 FraudAlert filters to generate responses while identifying fraudApproved and fraudRejection cases Created Application Field Types from Json Payloads in the documents for OCEProcessor Created Neustar Application RestFul Web Service to call 3rd party library and be able to call several instances of Avertack servers within Avertack NeustarThird Party gateway Created MitigationFilters while generating responses back to Avertack from Neustar Performed Release Demos and particpated in scrum calls everyday Proficient with Git pushingcommitingrebasingmergingpulling and resolved several merge conflictsJettyDocBase issues other issues on consolePerformed Jenkins deployment on Dev QA Stage and Prod Enviroments in daytoday activities Used PollingChannelServiceActivatorsMessageConsumerR1Channels KafkaTopics as parameters and methods to channelize Kafka Message Handling mechanisms listening to topics and sending the same to applications Solid Understanding and hands on experience with J2EE Design Patterns like SingletonBuilderFactoryMVCPrototypeAdaptorTemplate Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Extensively worked with Core Java concepts and Spring modules in the project Strong handson coding on ListsArrayListsLinkedListsArraysThreadsMethods of Collections Used NOSQL database Amazon dynamo DB to store data of reporting Application Invoked garbage collection to reduce the memory space in heap used by Vision object which had no Object Reference Created Spring profiles for different spring environments to load configurations Maintained the user credentials using AWS IAM and created custom IAM policies to various groups defined within the organization Used Config Server to externalize the configurations for app to run on different environments Created different properties files for testing purposes and loaded them from Spring Boot YAML Implemented Oauth 20 and TLS Certificates in POSTMAN for calling CRUD operations for response Builddeveloped and consumed restful web services using spring framework 396 Used Hibernate framework like Spring Data JPA and exposed Spring Data JPA dependency for it Solid hands on experience with using Hibernate frameworks like JPAJDOJTAORM Used Hibernate Configuration SessionFactorySession and Transaction persistent objects on the database Implemented conversionsstringcollectionsexceptions handling featuresthreads Worked on Log4J framework and implemented logger methods in the project Wrote Model Diagnostic Context to solve logging problems Strongly implemented Java concurrency features like settingkilling daemon threadscreated thread instances runnable callable interfacesexecutorexecutor service and used some of the implementations of executor service such as ScheduledThreadPoolExecutor Strongly experienced with ThreadsLife Cycle Used Git to trackmaven the source code changes Implemented Spring 5x Reactive programming in the project Worked on filterMapReduceStreamCollectorstoList functions in Java 8 Wrote Lambda functions for eg casting response class of same package in ActivateSwitchServiceIntegration Java Described Setter Injections and Constructor Injections on XML files for service classes to fetch property valuesnamesIDs etc Used Apache Kakfa for consuming message streams and Datastores as MongoDB and PostGreSQl Build the architecture as a whole using Docker container and deployed the services in Kubernetes cluster Designed Maintained and deployed application on Kubernetes Some hands on experience creating buckets in S3 Good understanding of setting alarms logs and enabling and monitoring EC2 instances in AWS cloudwatch Good understanding of creating log streams in AWS cloudwatch and creating IAM in AWS Management Console Good understanding of integrating REST APIs with AWS lambda Connected to Data Sources and performed operations using Spring Data framework features like Spring Data JPA Used Git version technology and JIRA to track problems Injected Spring Cloud Config to centralize all the externalized configurations for the small microservices and spring bean managed components Wrote Junit test cases with the team Implemented tokensannotationsOauth design patternsconfigurations and certificates for authorization and authentication in applications for setting up Microservice Imported Netflix libraries such as Eureka Hystrix Thymeleaf with Zuul Server to solve distributed complex processing system problems like implementations of patterns for service discovery load balancing fault tolerance Set up jobs in Jenkins in a step by step approach followed by managing plugins and build types such as Maven Triggered build jobs for modules like External Int_G ValidatorFilterGeoDatamanaged plugins and checked the health status of jobs created Wrote interfaces methods controllers and end points for DeviceChange Buy SimActivate UpgradeActivate Landing Pagesubservice names as LandonLower Funnel Checkout and Log In Reviewed the XML logical data model and developed XML schema XSD to validate the model and used JaxB for Xml Java Mapping and XmlXslt conversion Configured the POM files as per the changes in the environments Worked with offshore team and communicated technical concepts and frameworks to ensure right objectives Machine Learning EngineerEntry Level Verizon Communications Inc Irving TX September 2018 to July 2019 Responsibilities Use machine learning and statistical modeling techniques to develop and evaluate algorithms to improve performance quality data management and accuracy Extracting the data from the dataset into R Console and exploring the dataset Used imputation for finding the missing values Implemented two algorithms to the dataset trained the models using two different algorithms such as Linear Regression and other using Deep Neural Network which is a part of Artificial Neural Network Algorithm Comparing their results to evaluate their performances using different performance measures such as Correlation matrix plotting the graphs using scatterplot matrices and confusion matrices While training the models I have also partitioned the data sets using Random Sampling method which is the convenient way to split the dataset into training and test sets Utilized CrossValidation performance measures where creating the folds and then trained the models using 10folds methods Implementation of caret packages plyr packages and H2o classification algorithms which is also a customization method to encasing two different algorithms and using them to display the performance results and predicting the same on the new datasets where our test sets have been mainly used as a new data h Some metrics were used like number of samples to be tested RMSE MAE Fstatistics Kappa Statistics Rsquared and Residuals to display the performance comparisions and also improve them through diverse algorithms applied to the dataset Analyzed and embedded ensemble methods like Gradient Boosting Machine which is a part of Boosting method and random forests two of them which train the models appropriately fitted them and predicted the data Composed a new data through the stacked ensemble method GBMRF which improves accuracy and clearly summarize the results Jr Java Developer Microland Limited Bengaluru Karnataka June 2013 to December 2016 Responsibilities Utilized concepts like Inheritance method overloading overriding exceptions wrapper classes getterssetters in beans classes XML descriptors and spring framework libraries Involved in the architecture team for design and implementation of system Involved in designing the project with spring and Hibernate Framework Used RESTful web services for implementing the Business Logic Experience in managing and reviewing Hadoop log files Installed and configured Hadoop Mapreduce HDFS Developed multiple MapReduce jobs in java for data cleaning and preprocessing Experienced in performance tuning of Spark Applications for setting right Batch Interval time correct level of Parallelism and memory tuning Involved in managing and reviewing Hadoop log files and assisted them in developing Scripts and Batch Job to schedule various Hadoop Program Connected the application to the MySQL database to retrieve data from various tables and provide the relevant data Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Used SOAP AND WSDL Services to implement HTML JSON and XML Data Involved in creating the Rest API services Involved with the team to integrate SpringHibernate architecture using Spring Boot and JPA Build RESTFUL web services using Spring Boot Utilized Spring annotations wrote spring beans classes imported spring libraries and maven dependencies for developing applications using Spring Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Business logic is implemented using Spring Core and Hibernate Developed and modified database objects as per the requirements Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Interaction with customers and identified System Requirements and developed Software Requirement Specifications Involved in Development by applying expertise in J2EE Core JAVA concepts OOPS Concepts Collections Multithreading Working in a team of 10 members and involved in architecture requirements gathering analysis detailed design preparing class diagram flow diagram etc Education Master of Science in Computer Science University of Illinois Springfield IL December 2017 Skills API CODING DESIGN PATTERNS OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING Additional Information Technical Skills Object Oriented Programming RESTFUL APIs and API Development Spring JDBCORMOXMAOPMVCContextCore Spring BootMicroservices ApplicationContext and BeanFactory Interfaces Dependency Injection frameworks SingletonBuilderFactoryPrototypeAdaptor Template Design Patterns Hibernate frameworksORMJPA Hibernate APIsJDOJTAJDBCIBatis SQL Java CollectionsMultithreadingConcurrency AnnotationsBeansScopesIOC Container Strong Core Java Skills Strong Coding Skills Kafka and MongoDB AWS EC2CloudWatchLambda Java 8StreamCollectorsLambda JVM and Memory Management Log4j framework Pivotal Cloud Foundry",
    "unique_id": "585289a2-484b-425e-ba19-4b813710b68d"
}