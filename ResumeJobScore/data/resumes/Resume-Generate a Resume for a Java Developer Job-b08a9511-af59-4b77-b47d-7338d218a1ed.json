{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer General Motors Warren MI Around 7 years of progressive experience in requirements review design development quality analysis and deployment of software products using PERL Unix Shell C Python Oracle PLSQL and MySQL on UNIX environment Extensive experience in designing developing and enhancing applications using PERL Shell and Python scripting Worked on all stages of Build Release Management including analysis design development testing and implementation Automated project requests by writing Perl and Unix Shell scripts Develop batch processes for financial reporting applications and modules using Perl and Korn shell scripts on AIX interacting with Oracle database Hands on experience in SQL and PLSQL and writing stored procedures Skilled in ObjectOriented Design and Programming using Python and C Building out the nextgeneration publicfacing web site with an advanced Djangobased web framework Good working knowledge on Oracle 9i and 11g and 12c databases Hands on experience with UNIX commands Experienced in developing UNIX shell scripts and bash scripting Good Knowledge on Python Scripting Used data structures like tuples lists sets dictionaries objectoriented classbased inheritance features Web development using Python Django Good knowledge on installation and compilation of different CPAN PERL modules for PERLupgrades Wrote and executed various MYSQL database queries from python using Python MySQLcx_ORACLE connector and MySQL dB and ORACLE packages Extensive experience in debugging and troubleshooting complicated production issues using tools like GDB and implemented corrective solutions Experience in developing and implementing Web Forms using Perl CGI HTML CSS and Bootstrap Experience in Agile development techniques and TestDriven Developments Keen on learning and adaptable to any platform Experience with configuration management tools like Chef Puppet Ansible Crytograph Git REST API Strong understanding and experience in AWS EC2 network management and datacenter operations Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Experience on developing Chef Cookbook for the automation of software installation and configuration of customer infrastructures Experience in maintaining and executing build scripts to automate development and production builds Worked with Chef to aid with deployment process and migrating in house systems to Amazon Cloud Services Excellent analytical and problemsolving skills and ability to work on own besides being a valuable and contributing team player Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive Mongo DB Experience in handling errorsexceptions and debugging issues in large scale applications Highly motivated dedicated quick learner and have proven ability to work individually and as a team Excellent written and oral communication skills with resultsoriented attitude Work Experience Sr Python Developer General Motors Warren MI October 2017 to Present Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Used SQL and PLSQL stored procedures functions to implement business logics in Oracle Wrote python raw SQL queries to Django database agnostic for MySQL and Oracle database Designed and developed GUI frontend applications using Oracle Forms for user interaction with the database Created Django classbased REST APIs for the application and serialized data Wrote JavaScript form validations for all the web pages in the application Implemented several Socket TCPIP UDP Twisted ZeroMq XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Wrote multiple Shell and Perl scripts for the automation of the unit testing Created Test script in PerlUnix from automation and Ran the Test and validated results Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Using ANT Puppet Chef Scripts with Ivy to build the application and deploy Extracted data from XML files using PERLXML modules Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Using Chef and AWS allowed me to reduce costs for the department and eliminate unwarranted resources Automated provisioning of cloud infrastructure with Chef Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON designed and developed the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Built python frameworks using NumPy and Pandas for data analysis Worked in Agile and scrum environment which includes daily standup and sprint planning Created unit test and automation framework using nose test and selenium Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 CCAWSEC2 Robot framework ZeroMQ twisted ZeroMQ XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu PyCharm PyLint PEP8 Django 16 Python Developer Western Digital San Jose CA February 2016 to September 2017 Responsibilities Gathering requirements and translating the Business details into Technical design Participated in all the stages of software development lifecycle SDLC like design testing development and implementation Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Developed the tools using Python Django and used MongoDB for databases Parsers written in Python for extracting useful data from the design data base Used Parse kit Enigmaio framework for writing Parsers for ETL extraction Wrote multiple Perl programs to generate configuration files from Oracle Database Wrote Perl scripts to extract data from Oracle DB using Perl DBI module for Data analysis and report generation Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Bootstrap jQuery Optimized the performance of complex SQL queries in Oracle reports as well as queries from the queries Extensively worked with spark Data frames for ingesting data from flat files into RDDs to transform unstructured data and structured data Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Experience in creating Docker containers leveraging existing Linux Containers and AMIs in addition to creating Docker containers from scratch Setup Docker on Linux and configured Jenkins to run under Docker host Developed various APIs for Django applications using Djangotasty pie Used JIRA to build an environment for development Developed Wrapper in Python for instantiating multithreaded application Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Frontend web development using HTMLCSS JQuery Bootstrap as well as backend development using Golang and SQL Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Experienced in building a Command line tool to interact with RESTful API using in Golang Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment PythonAWS EC2 EBS S3 VPC PyCharm Selenium IDE JQueryPostgresql MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL GIT Cassandra Python Developer Wells Fargo Home Mortgage Minneapolis MN October 2013 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS and JavaScript JQuery Built application logic using Python used the Django Framework to develop the application Used Django APIs for database access Description Bluetooth enabled camcorder Embedded in a headset to enable handsfree audio and video recording with optical zoom capability Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Coded and debugged the stored Procedures Packages and Views in Oracle Databases using SQL and PLSQL which were called by useroriented application modules Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Used Python based GUI components for the frontend functionality such as selection criteria Developed monitoring and notification tools using Python Participated in requirement gathering and worked closely with the architect in designing and modeling Executed FIX testing for Functional EndtoEnd and Regression testing for various system applications Analyzed Business Requirement Document BRD Functional Specifications Document FSD and FIX client requirements to overall understand the project aim and discussed with BA emerged questions Generated various compliance and user reports in Python including FINRA OATS reports user PL reports customized reports for users user permissions and security information reports Used Python MySQL connectors to pull data from dbs Created Data tables to display customer information and add delete update customer records using Python MySQL and XHTML Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in HQL and Native SQL and criteria API Added the navigations and paginations and filtering columns and adding and removing the desired columns for view utilizing Python based GUI components Implemented marshalling and UN marshalling XML to HTML and HTML to XML Created PyUnit test scripts and used for unit testing Actively participated in System Testing production support and maintenancepatch deployments Worked on RUP development environment and used Rational ClearCase for versioning Used JQuery for selecting particular DOM elements when parsing HTML Developed SQL Queries Stored Procedures and Triggers Using Oracle 9i SQL PLSQL Developed test cases using Python unit test pylint and nose Environment Python HTML JavaScript Ajax PyQT PyUnit PLSQL and Oracle SQL Developer Systems Engineer Insert V IT May 2011 to July 2013 Responsibilities Developed Unix Shell scripts for cleansing and validating data files using utilities like AWK sed grep and other Unix commands Developed UNIX shell scripts implementing PLSQL queries for data migration batch processing Read and interpreted UNIX logs Worked in development testing and production support using Oracle Forms reports 10g Oracle database 11g Develop automation solutions leveraging Shell and Perl to increase operational efficiency Execute performance tuning activities develop monitoring processes and improved process performance UNIXLinux environment Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Developed scripts and modified ProC program for automation of Claims processing to handle additional 1million recipients Developed and implemented the new flow of Component trades which includes loading the feed file in PerlUnix shell applying the business rules through stored procedures and generating the report in Perl for the end users Created automation script using Perl to take the user input for batch processing of data through data module Wrote various PERL subroutines for automation of synch batch data Support over Perl Scripts for Web based application Created process to manage upgrades and patches Support over HTML CSS Support application teams and assisting with complex issues Maintains and troubleshoots software on UNIX systems and applies temporary and permanent fixes to systems as needed Closely worked with the business users to solve different production issues doing rootcause analysis and breakfixes Created high level design document for the application Environment Perl CGI XML C PLSQL Oracle 9i DBI SQLPlus SQL UNIX Education Bachelors Skills Apache 4 years API 4 years CSS 7 years databases 4 years Django 5 years frontend 5 years FRONT END DESIGN 5 years Git 3 years HTML 7 years JavaScript 5 years Jira 3 years jQuery 4 years Linux 7 years MySQL 5 years Oracle 7 years PHP 2 years Python 5 years SQL 7 years Unix 5 years XML 5 years Additional Information Technical Skills Languages Python Shell Bash C C PHP Operating Systems UNIXLINUX Mac OS Windows Databases ORACLE MySQL SQLite PostGRE MS SQL SERVER NoSQL databases MongoDB 26 24 Version Controls GIT SVN Clear Case Protocols FTP IPC TCPIP UDP ZeroMQ Frameworks Django Contents Management system CMS Django based CMSMezzanine Flask Bootstrap CherryPy web2py Tornado Pyramid Robot Software Tools Other Utilities PyCharm Eclipse IBM Rational ClearCas GIT JIRA VOS Multi Process Debugger and Forms Management System JIRA Compilers Debugging tools GNU GCC Unix GNU Debugger Valgrind IDEs Eclipse SQLPlus SQL Developer Toad FrontEnd Components HTML CSS and Bootstrap Profilers Debuggers GNU debugger MPLAB ICD 3 MultiICE GNUGDB LauterbachsTrace32 Web Server APACHE SERVER Apache HTTP IIS 60 Web Technology ReactJs AngularJs HTML JavaScript ES6 jQuery ajax CSS Bootstrap XML Delivery Tools Saltstack REST API Chef PuppetGit Cryptograph",
    "entities": [
        "Robot",
        "GUI",
        "Chef Implemented",
        "MN",
        "Amazon Web Services AWS Using ANT Puppet Chef Scripts",
        "Component",
        "AIX",
        "UNIX",
        "Sublime Text",
        "Agile Software Methodology",
        "Using Chef and AWS",
        "LAMP Linux",
        "IBM",
        "Amazon Web Services AWS",
        "TestDriven Development TDD",
        "ObjectOriented Design and Programming",
        "Chef Puppet Ansible Crytograph Git REST API Strong",
        "XML",
        "Shell",
        "UNIXLinux",
        "Python",
        "Ran the Test",
        "Amazon AWS S3",
        "Developed",
        "Frameworks Django Contents Management",
        "Jenkins",
        "CSS Bootstrap",
        "Build Release Management",
        "GDB",
        "ORACLE",
        "UN",
        "Bootstrap Profilers Debuggers",
        "Bootstrap Experience",
        "Oracle 9i",
        "PythonPHP",
        "Develop",
        "Linux",
        "Created Data",
        "ClearCas",
        "Amazon Cloud",
        "Minneapolis",
        "Forms Management System",
        "Built",
        "Version",
        "DOM",
        "RDS",
        "Python Developer Western Digital",
        "Additional Information Technical Skills Languages Python Shell Bash C C PHP Operating Systems",
        "MVC",
        "AWK",
        "Agile",
        "CPAN",
        "HTML CSS",
        "API",
        "Present Responsibilities Develop",
        "Created Django",
        "Directory Services LDAP",
        "Created",
        "Native SQL",
        "AWS",
        "Perl",
        "WAMP Windows Apache",
        "Oracle Wrote",
        "Oracle",
        "Oracle Database Wrote",
        "Coded",
        "Coding",
        "Oracle DB",
        "HTML",
        "SQL",
        "Command",
        "FINRA OATS",
        "Oracle Forms",
        "TCP",
        "lPythonspan",
        "Analyzed Business Requirement Document BRD Functional Specifications Document FSD",
        "Oracle SQLite PostgreSQL MySQL DB2",
        "PL",
        "Regression",
        "Pandas",
        "PythonPHP Architecture Worked",
        "SQLite",
        "ETL",
        "PERLupgrades Wrote",
        "Work Experience Sr Python Developer General Motors",
        "Performed",
        "Djangos",
        "BA",
        "UI",
        "Oracle SQL Developer Systems",
        "Amazon Cloud Services",
        "Executed FIX",
        "API Added",
        "HTML Developed SQL Queries Stored Procedures",
        "FRONT END",
        "REST",
        "CMSMezzanine Flask Bootstrap CherryPy",
        "UNIXLINUX Mac OS Windows Databases ORACLE MySQL",
        "Requirement Analysis Design Development Database Design Deployment Testing Debugging",
        "PHP",
        "Software Development Life Cycle",
        "Apache Spark Hadoop",
        "UNIX Linux",
        "Wells Fargo Home",
        "Oracle Databases",
        "DBI",
        "XML Created PyUnit",
        "Created Test"
    ],
    "experience": "Experience in developing and implementing Web Forms using Perl CGI HTML CSS and Bootstrap Experience in Agile development techniques and TestDriven Developments Keen on learning and adaptable to any platform Experience with configuration management tools like Chef Puppet Ansible Crytograph Git REST API Strong understanding and experience in AWS EC2 network management and datacenter operations Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Experience on developing Chef Cookbook for the automation of software installation and configuration of customer infrastructures Experience in maintaining and executing build scripts to automate development and production builds Worked with Chef to aid with deployment process and migrating in house systems to Amazon Cloud Services Excellent analytical and problemsolving skills and ability to work on own besides being a valuable and contributing team player Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive Mongo DB Experience in handling errorsexceptions and debugging issues in large scale applications Highly motivated dedicated quick learner and have proven ability to work individually and as a team Excellent written and oral communication skills with resultsoriented attitude Work Experience Sr Python Developer General Motors Warren MI October 2017 to Present Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Used SQL and PLSQL stored procedures functions to implement business logics in Oracle Wrote python raw SQL queries to Django database agnostic for MySQL and Oracle database Designed and developed GUI frontend applications using Oracle Forms for user interaction with the database Created Django classbased REST APIs for the application and serialized data Wrote JavaScript form validations for all the web pages in the application Implemented several Socket TCPIP UDP Twisted ZeroMq XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Wrote multiple Shell and Perl scripts for the automation of the unit testing Created Test script in PerlUnix from automation and Ran the Test and validated results Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Using ANT Puppet Chef Scripts with Ivy to build the application and deploy Extracted data from XML files using PERLXML modules Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Using Chef and AWS allowed me to reduce costs for the department and eliminate unwarranted resources Automated provisioning of cloud infrastructure with Chef Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that can not be scraped normally Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON designed and developed the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Built python frameworks using NumPy and Pandas for data analysis Worked in Agile and scrum environment which includes daily standup and sprint planning Created unit test and automation framework using nose test and selenium Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 CCAWSEC2 Robot framework ZeroMQ twisted ZeroMQ XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu PyCharm PyLint PEP8 Django 16 Python Developer Western Digital San Jose CA February 2016 to September 2017 Responsibilities Gathering requirements and translating the Business details into Technical design Participated in all the stages of software development lifecycle SDLC like design testing development and implementation Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Developed the tools using Python Django and used MongoDB for databases Parsers written in Python for extracting useful data from the design data base Used Parse kit Enigmaio framework for writing Parsers for ETL extraction Wrote multiple Perl programs to generate configuration files from Oracle Database Wrote Perl scripts to extract data from Oracle DB using Perl DBI module for Data analysis and report generation Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Bootstrap jQuery Optimized the performance of complex SQL queries in Oracle reports as well as queries from the queries Extensively worked with spark Data frames for ingesting data from flat files into RDDs to transform unstructured data and structured data Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Experience in creating Docker containers leveraging existing Linux Containers and AMIs in addition to creating Docker containers from scratch Setup Docker on Linux and configured Jenkins to run under Docker host Developed various APIs for Django applications using Djangotasty pie Used JIRA to build an environment for development Developed Wrapper in Python for instantiating multithreaded application Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Frontend web development using HTMLCSS JQuery Bootstrap as well as backend development using Golang and SQL Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Experienced in building a Command line tool to interact with RESTful API using in Golang Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment PythonAWS EC2 EBS S3 VPC PyCharm Selenium IDE JQueryPostgresql MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL GIT Cassandra Python Developer Wells Fargo Home Mortgage Minneapolis MN October 2013 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS and JavaScript JQuery Built application logic using Python used the Django Framework to develop the application Used Django APIs for database access Description Bluetooth enabled camcorder Embedded in a headset to enable handsfree audio and video recording with optical zoom capability Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Coded and debugged the stored Procedures Packages and Views in Oracle Databases using SQL and PLSQL which were called by useroriented application modules Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Used Python based GUI components for the frontend functionality such as selection criteria Developed monitoring and notification tools using Python Participated in requirement gathering and worked closely with the architect in designing and modeling Executed FIX testing for Functional EndtoEnd and Regression testing for various system applications Analyzed Business Requirement Document BRD Functional Specifications Document FSD and FIX client requirements to overall understand the project aim and discussed with BA emerged questions Generated various compliance and user reports in Python including FINRA OATS reports user PL reports customized reports for users user permissions and security information reports Used Python MySQL connectors to pull data from dbs Created Data tables to display customer information and add delete update customer records using Python MySQL and XHTML Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in HQL and Native SQL and criteria API Added the navigations and paginations and filtering columns and adding and removing the desired columns for view utilizing Python based GUI components Implemented marshalling and UN marshalling XML to HTML and HTML to XML Created PyUnit test scripts and used for unit testing Actively participated in System Testing production support and maintenancepatch deployments Worked on RUP development environment and used Rational ClearCase for versioning Used JQuery for selecting particular DOM elements when parsing HTML Developed SQL Queries Stored Procedures and Triggers Using Oracle 9i SQL PLSQL Developed test cases using Python unit test pylint and nose Environment Python HTML JavaScript Ajax PyQT PyUnit PLSQL and Oracle SQL Developer Systems Engineer Insert V IT May 2011 to July 2013 Responsibilities Developed Unix Shell scripts for cleansing and validating data files using utilities like AWK sed grep and other Unix commands Developed UNIX shell scripts implementing PLSQL queries for data migration batch processing Read and interpreted UNIX logs Worked in development testing and production support using Oracle Forms reports 10 g Oracle database 11 g Develop automation solutions leveraging Shell and Perl to increase operational efficiency Execute performance tuning activities develop monitoring processes and improved process performance UNIXLinux environment Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Developed scripts and modified ProC program for automation of Claims processing to handle additional 1million recipients Developed and implemented the new flow of Component trades which includes loading the feed file in PerlUnix shell applying the business rules through stored procedures and generating the report in Perl for the end users Created automation script using Perl to take the user input for batch processing of data through data module Wrote various PERL subroutines for automation of synch batch data Support over Perl Scripts for Web based application Created process to manage upgrades and patches Support over HTML CSS Support application teams and assisting with complex issues Maintains and troubleshoots software on UNIX systems and applies temporary and permanent fixes to systems as needed Closely worked with the business users to solve different production issues doing rootcause analysis and breakfixes Created high level design document for the application Environment Perl CGI XML C PLSQL Oracle 9i DBI SQLPlus SQL UNIX Education Bachelors Skills Apache 4 years API 4 years CSS 7 years databases 4 years Django 5 years frontend 5 years FRONT END DESIGN 5 years Git 3 years HTML 7 years JavaScript 5 years Jira 3 years jQuery 4 years Linux 7 years MySQL 5 years Oracle 7 years PHP 2 years Python 5 years SQL 7 years Unix 5 years XML 5 years Additional Information Technical Skills Languages Python Shell Bash C C PHP Operating Systems UNIXLINUX Mac OS Windows Databases ORACLE MySQL SQLite PostGRE MS SQL SERVER NoSQL databases MongoDB 26 24 Version Controls GIT SVN Clear Case Protocols FTP IPC TCPIP UDP ZeroMQ Frameworks Django Contents Management system CMS Django based CMSMezzanine Flask Bootstrap CherryPy web2py Tornado Pyramid Robot Software Tools Other Utilities PyCharm Eclipse IBM Rational ClearCas GIT JIRA VOS Multi Process Debugger and Forms Management System JIRA Compilers Debugging tools GNU GCC Unix GNU Debugger Valgrind IDEs Eclipse SQLPlus SQL Developer Toad FrontEnd Components HTML CSS and Bootstrap Profilers Debuggers GNU debugger MPLAB ICD 3 MultiICE GNUGDB LauterbachsTrace32 Web Server APACHE SERVER Apache HTTP IIS 60 Web Technology ReactJs AngularJs HTML JavaScript ES6 jQuery ajax CSS Bootstrap XML Delivery Tools Saltstack REST API Chef PuppetGit Cryptograph",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "General",
        "Motors",
        "Warren",
        "MI",
        "years",
        "experience",
        "requirements",
        "design",
        "development",
        "quality",
        "analysis",
        "deployment",
        "software",
        "products",
        "PERL",
        "Unix",
        "Shell",
        "C",
        "Python",
        "Oracle",
        "PLSQL",
        "MySQL",
        "UNIX",
        "environment",
        "experience",
        "applications",
        "PERL",
        "Shell",
        "Python",
        "scripting",
        "stages",
        "Build",
        "Release",
        "Management",
        "analysis",
        "design",
        "development",
        "testing",
        "implementation",
        "project",
        "requests",
        "Perl",
        "Unix",
        "Shell",
        "Develop",
        "batch",
        "processes",
        "reporting",
        "applications",
        "modules",
        "Perl",
        "Korn",
        "shell",
        "scripts",
        "AIX",
        "Oracle",
        "database",
        "Hands",
        "experience",
        "SQL",
        "PLSQL",
        "procedures",
        "ObjectOriented",
        "Design",
        "Programming",
        "Python",
        "C",
        "nextgeneration",
        "web",
        "site",
        "Djangobased",
        "web",
        "framework",
        "knowledge",
        "Oracle",
        "9i",
        "g",
        "12c",
        "Hands",
        "experience",
        "UNIX",
        "commands",
        "UNIX",
        "shell",
        "scripts",
        "bash",
        "Good",
        "Knowledge",
        "Python",
        "Scripting",
        "data",
        "structures",
        "tuples",
        "lists",
        "dictionaries",
        "inheritance",
        "Web",
        "development",
        "Python",
        "Django",
        "knowledge",
        "installation",
        "compilation",
        "CPAN",
        "PERL",
        "modules",
        "PERLupgrades",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "Python",
        "MySQLcx_ORACLE",
        "connector",
        "MySQL",
        "ORACLE",
        "packages",
        "experience",
        "production",
        "issues",
        "tools",
        "GDB",
        "solutions",
        "Experience",
        "Web",
        "Forms",
        "Perl",
        "CGI",
        "HTML",
        "CSS",
        "Bootstrap",
        "Experience",
        "Agile",
        "development",
        "techniques",
        "TestDriven",
        "Developments",
        "Keen",
        "platform",
        "Experience",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "Ansible",
        "Crytograph",
        "Git",
        "REST",
        "API",
        "understanding",
        "experience",
        "AWS",
        "EC2",
        "network",
        "management",
        "datacenter",
        "operations",
        "Conduct",
        "systems",
        "design",
        "feasibility",
        "studies",
        "cloud",
        "solutions",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "Chef",
        "Cookbook",
        "automation",
        "software",
        "installation",
        "configuration",
        "customer",
        "infrastructures",
        "Experience",
        "build",
        "scripts",
        "development",
        "production",
        "Chef",
        "deployment",
        "process",
        "migrating",
        "house",
        "systems",
        "Amazon",
        "Cloud",
        "Services",
        "Excellent",
        "skills",
        "ability",
        "team",
        "player",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "aspects",
        "projects",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Database",
        "Design",
        "Deployment",
        "Testing",
        "Debugging",
        "Application",
        "Maintenance",
        "WAMP",
        "Windows",
        "Apache",
        "MySQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "applications",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Sublime",
        "Text",
        "PyCharm",
        "Experience",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "databases",
        "MongoDB",
        "Cassandra",
        "Written",
        "scripts",
        "tasks",
        "Jenkins",
        "UNIX",
        "shell",
        "scripting",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Strong",
        "Experience",
        "data",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "HDFS",
        "Hive",
        "Mongo",
        "DB",
        "Experience",
        "errorsexceptions",
        "issues",
        "scale",
        "applications",
        "learner",
        "ability",
        "team",
        "Excellent",
        "communication",
        "skills",
        "attitude",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "General",
        "Motors",
        "Warren",
        "MI",
        "October",
        "Present",
        "Responsibilities",
        "tests",
        "Python",
        "Robot",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UI",
        "ReactJs",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "SQL",
        "procedures",
        "functions",
        "business",
        "logics",
        "Oracle",
        "Wrote",
        "python",
        "SQL",
        "Django",
        "database",
        "MySQL",
        "Oracle",
        "database",
        "GUI",
        "frontend",
        "applications",
        "Oracle",
        "Forms",
        "user",
        "interaction",
        "database",
        "Created",
        "Django",
        "REST",
        "APIs",
        "application",
        "data",
        "Wrote",
        "JavaScript",
        "form",
        "validations",
        "web",
        "pages",
        "application",
        "Socket",
        "UDP",
        "ZeroMq",
        "XMLRPC",
        "programs",
        "data",
        "data",
        "centers",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Shell",
        "Perl",
        "scripts",
        "automation",
        "unit",
        "Created",
        "Test",
        "script",
        "PerlUnix",
        "automation",
        "Test",
        "results",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Groups",
        "Users",
        "login",
        "authentication",
        "Conduct",
        "systems",
        "design",
        "feasibility",
        "studies",
        "cloud",
        "solutions",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "ANT",
        "Puppet",
        "Chef",
        "Scripts",
        "Ivy",
        "application",
        "data",
        "XML",
        "files",
        "PERLXML",
        "modules",
        "Python",
        "libraries",
        "soup",
        "modules",
        "web",
        "Chef",
        "AWS",
        "costs",
        "department",
        "resources",
        "provisioning",
        "cloud",
        "infrastructure",
        "Chef",
        "automation",
        "script",
        "Crontab",
        "python",
        "web",
        "crawler",
        "cURL",
        "web",
        "contents",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "python",
        "frameworks",
        "NumPy",
        "Pandas",
        "data",
        "analysis",
        "Agile",
        "scrum",
        "environment",
        "standup",
        "sprint",
        "planning",
        "unit",
        "test",
        "automation",
        "framework",
        "nose",
        "test",
        "selenium",
        "day",
        "day",
        "issues",
        "applications",
        "performance",
        "Environment",
        "Python",
        "CCAWSEC2",
        "Robot",
        "framework",
        "ZeroMQ",
        "ZeroMQ",
        "XMLRPC",
        "IPC",
        "TCP",
        "UPD",
        "Linux",
        "Git",
        "Stash",
        "Jira",
        "Confluence",
        "Ubuntu",
        "PyCharm",
        "PyLint",
        "PEP8",
        "Django",
        "Python",
        "Developer",
        "Western",
        "Digital",
        "San",
        "Jose",
        "CA",
        "February",
        "September",
        "Responsibilities",
        "Gathering",
        "requirements",
        "Business",
        "details",
        "design",
        "stages",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "design",
        "testing",
        "development",
        "implementation",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "tools",
        "Python",
        "Django",
        "MongoDB",
        "databases",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Used",
        "Parse",
        "kit",
        "Enigmaio",
        "framework",
        "Parsers",
        "ETL",
        "extraction",
        "Wrote",
        "Perl",
        "programs",
        "configuration",
        "files",
        "Oracle",
        "Database",
        "Wrote",
        "Perl",
        "scripts",
        "data",
        "Oracle",
        "DB",
        "Perl",
        "DBI",
        "module",
        "Data",
        "analysis",
        "report",
        "generation",
        "user",
        "interface",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "performance",
        "SQL",
        "queries",
        "Oracle",
        "queries",
        "queries",
        "spark",
        "Data",
        "frames",
        "data",
        "files",
        "RDDs",
        "data",
        "data",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "design",
        "way",
        "login",
        "AWS",
        "users",
        "Directory",
        "Services",
        "LDAP",
        "OpenVPN",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Experience",
        "Docker",
        "containers",
        "Linux",
        "Containers",
        "AMIs",
        "addition",
        "Docker",
        "containers",
        "scratch",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "APIs",
        "Django",
        "applications",
        "Djangotasty",
        "pie",
        "JIRA",
        "environment",
        "development",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "bugs",
        "production",
        "support",
        "applications",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Frontend",
        "web",
        "development",
        "HTMLCSS",
        "JQuery",
        "Bootstrap",
        "development",
        "Golang",
        "SQL",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Administration",
        "RHEL",
        "machine",
        "Apache",
        "configuration",
        "files",
        "Command",
        "line",
        "tool",
        "API",
        "Golang",
        "Familiar",
        "UNIX",
        "Linux",
        "internals",
        "cryptography",
        "security",
        "reports",
        "package",
        "NumPy",
        "Matplotlib",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Environment",
        "EC2",
        "EBS",
        "S3",
        "VPC",
        "PyCharm",
        "Selenium",
        "IDE",
        "JQueryPostgresql",
        "MySQL",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "Web",
        "Services",
        "Pandas",
        "JSON",
        "Angularjs",
        "Bootstrap",
        "Jinja",
        "Flask",
        "MongoDB",
        "SQL",
        "GIT",
        "Cassandra",
        "Python",
        "Developer",
        "Wells",
        "Fargo",
        "Home",
        "Mortgage",
        "Minneapolis",
        "MN",
        "October",
        "January",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JQuery",
        "application",
        "logic",
        "Python",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "Description",
        "Bluetooth",
        "camcorder",
        "headset",
        "audio",
        "video",
        "recording",
        "zoom",
        "capability",
        "Developed",
        "Perl",
        "Shell",
        "scripts",
        "upload",
        "data",
        "feed",
        "database",
        "reports",
        "Perl",
        "end",
        "users",
        "Procedures",
        "Packages",
        "Views",
        "Oracle",
        "Databases",
        "SQL",
        "PLSQL",
        "application",
        "modules",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Participated",
        "requirement",
        "gathering",
        "architect",
        "FIX",
        "testing",
        "Functional",
        "EndtoEnd",
        "Regression",
        "testing",
        "system",
        "applications",
        "Business",
        "Requirement",
        "Document",
        "BRD",
        "Functional",
        "Specifications",
        "Document",
        "FSD",
        "FIX",
        "client",
        "requirements",
        "project",
        "BA",
        "questions",
        "compliance",
        "user",
        "reports",
        "Python",
        "FINRA",
        "OATS",
        "user",
        "PL",
        "reports",
        "users",
        "user",
        "permissions",
        "security",
        "information",
        "Python",
        "MySQL",
        "connectors",
        "data",
        "Data",
        "tables",
        "customer",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "MySQL",
        "XHTML",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "queries",
        "HQL",
        "Native",
        "SQL",
        "criteria",
        "API",
        "navigations",
        "paginations",
        "columns",
        "columns",
        "view",
        "Python",
        "GUI",
        "components",
        "marshalling",
        "UN",
        "marshalling",
        "XML",
        "HTML",
        "HTML",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "testing",
        "System",
        "Testing",
        "production",
        "support",
        "maintenancepatch",
        "deployments",
        "RUP",
        "development",
        "environment",
        "Rational",
        "ClearCase",
        "JQuery",
        "DOM",
        "elements",
        "HTML",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "9i",
        "SQL",
        "PLSQL",
        "test",
        "cases",
        "Python",
        "unit",
        "test",
        "pylint",
        "nose",
        "Environment",
        "Python",
        "HTML",
        "JavaScript",
        "Ajax",
        "PyQT",
        "PyUnit",
        "PLSQL",
        "Oracle",
        "SQL",
        "Developer",
        "Systems",
        "Engineer",
        "Insert",
        "V",
        "IT",
        "May",
        "July",
        "Responsibilities",
        "Unix",
        "Shell",
        "scripts",
        "cleansing",
        "data",
        "files",
        "utilities",
        "AWK",
        "grep",
        "Unix",
        "UNIX",
        "shell",
        "scripts",
        "PLSQL",
        "queries",
        "data",
        "migration",
        "batch",
        "processing",
        "Read",
        "UNIX",
        "logs",
        "development",
        "testing",
        "production",
        "support",
        "Oracle",
        "Forms",
        "g",
        "Oracle",
        "database",
        "Develop",
        "automation",
        "solutions",
        "Shell",
        "Perl",
        "efficiency",
        "Execute",
        "performance",
        "activities",
        "monitoring",
        "processes",
        "process",
        "performance",
        "UNIXLinux",
        "environment",
        "Developed",
        "Perl",
        "Shell",
        "scripts",
        "upload",
        "data",
        "feed",
        "database",
        "reports",
        "Perl",
        "end",
        "users",
        "scripts",
        "ProC",
        "program",
        "automation",
        "Claims",
        "processing",
        "recipients",
        "flow",
        "Component",
        "trades",
        "feed",
        "file",
        "PerlUnix",
        "shell",
        "business",
        "rules",
        "procedures",
        "report",
        "Perl",
        "end",
        "users",
        "automation",
        "script",
        "Perl",
        "user",
        "input",
        "batch",
        "processing",
        "data",
        "data",
        "module",
        "PERL",
        "subroutines",
        "automation",
        "synch",
        "batch",
        "data",
        "Support",
        "Perl",
        "Scripts",
        "Web",
        "application",
        "process",
        "upgrades",
        "Support",
        "HTML",
        "CSS",
        "Support",
        "application",
        "teams",
        "issues",
        "Maintains",
        "software",
        "UNIX",
        "systems",
        "fixes",
        "systems",
        "business",
        "users",
        "production",
        "issues",
        "rootcause",
        "analysis",
        "breakfixes",
        "level",
        "design",
        "document",
        "application",
        "Environment",
        "Perl",
        "CGI",
        "XML",
        "C",
        "PLSQL",
        "Oracle",
        "9i",
        "DBI",
        "SQLPlus",
        "SQL",
        "UNIX",
        "Education",
        "Bachelors",
        "Skills",
        "Apache",
        "years",
        "API",
        "years",
        "CSS",
        "years",
        "years",
        "Django",
        "years",
        "years",
        "FRONT",
        "END",
        "years",
        "Git",
        "years",
        "HTML",
        "years",
        "JavaScript",
        "years",
        "Jira",
        "years",
        "jQuery",
        "years",
        "Linux",
        "years",
        "MySQL",
        "years",
        "Oracle",
        "years",
        "PHP",
        "years",
        "Python",
        "years",
        "SQL",
        "years",
        "Unix",
        "years",
        "XML",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "Shell",
        "Bash",
        "C",
        "C",
        "PHP",
        "Operating",
        "Systems",
        "UNIXLINUX",
        "Mac",
        "OS",
        "Windows",
        "Databases",
        "ORACLE",
        "MySQL",
        "SQLite",
        "PostGRE",
        "MS",
        "SQL",
        "SERVER",
        "NoSQL",
        "MongoDB",
        "Version",
        "Controls",
        "GIT",
        "SVN",
        "Clear",
        "Case",
        "Protocols",
        "FTP",
        "IPC",
        "UDP",
        "ZeroMQ",
        "Frameworks",
        "Django",
        "Contents",
        "Management",
        "system",
        "CMS",
        "Django",
        "CMSMezzanine",
        "Flask",
        "Bootstrap",
        "CherryPy",
        "Tornado",
        "Pyramid",
        "Robot",
        "Software",
        "Tools",
        "Utilities",
        "PyCharm",
        "Eclipse",
        "IBM",
        "Rational",
        "ClearCas",
        "GIT",
        "JIRA",
        "VOS",
        "Multi",
        "Process",
        "Debugger",
        "Forms",
        "Management",
        "System",
        "JIRA",
        "Compilers",
        "Debugging",
        "tools",
        "GNU",
        "GCC",
        "Unix",
        "GNU",
        "Debugger",
        "Valgrind",
        "IDEs",
        "Eclipse",
        "SQLPlus",
        "SQL",
        "Developer",
        "Toad",
        "FrontEnd",
        "Components",
        "HTML",
        "CSS",
        "Bootstrap",
        "Profilers",
        "Debuggers",
        "GNU",
        "debugger",
        "MPLAB",
        "ICD",
        "MultiICE",
        "GNUGDB",
        "LauterbachsTrace32",
        "Web",
        "Server",
        "APACHE",
        "SERVER",
        "Apache",
        "HTTP",
        "IIS",
        "Web",
        "Technology",
        "ReactJs",
        "AngularJs",
        "HTML",
        "JavaScript",
        "ES6",
        "jQuery",
        "CSS",
        "Bootstrap",
        "XML",
        "Delivery",
        "Tools",
        "Saltstack",
        "REST",
        "API",
        "Chef",
        "PuppetGit",
        "Cryptograph"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:05:26.708977",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer General Motors Warren MI Around 7 years of progressive experience in requirements review design development quality analysis and deployment of software products using PERL Unix Shell C Python Oracle PLSQL and MySQL on UNIX environment Extensive experience in designing developing and enhancing applications using PERL Shell and Python scripting Worked on all stages of Build Release Management including analysis design development testing and implementation Automated project requests by writing Perl and Unix Shell scripts Develop batch processes for financial reporting applications and modules using Perl and Korn shell scripts on AIX interacting with Oracle database Hands on experience in SQL and PLSQL and writing stored procedures Skilled in ObjectOriented Design and Programming using Python and C Building out the nextgeneration publicfacing web site with an advanced Djangobased web framework Good working knowledge on Oracle 9i and 11g and 12c databases Hands on experience with UNIX commands Experienced in developing UNIX shell scripts and bash scripting Good Knowledge on Python Scripting Used data structures like tuples lists sets dictionaries objectoriented classbased inheritance features Web development using Python Django Good knowledge on installation and compilation of different CPAN PERL modules for PERLupgrades Wrote and executed various MYSQL database queries from python using Python MySQLcx_ORACLE connector and MySQL dB and ORACLE packages Extensive experience in debugging and troubleshooting complicated production issues using tools like GDB and implemented corrective solutions Experience in developing and implementing Web Forms using Perl CGI HTML CSS and Bootstrap Experience in Agile development techniques and TestDriven Developments Keen on learning and adaptable to any platform Experience with configuration management tools like Chef Puppet Ansible Crytograph Git REST API Strong understanding and experience in AWS EC2 network management and datacenter operations Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Experience on developing Chef Cookbook for the automation of software installation and configuration of customer infrastructures Experience in maintaining and executing build scripts to automate development and production builds Worked with Chef to aid with deployment process and migrating in house systems to Amazon Cloud Services Excellent analytical and problemsolving skills and ability to work on own besides being a valuable and contributing team player Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive Mongo DB Experience in handling errorsexceptions and debugging issues in large scale applications Highly motivated dedicated quick learner and have proven ability to work individually and as a team Excellent written and oral communication skills with resultsoriented attitude Work Experience Sr Python Developer General Motors Warren MI October 2017 to Present Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Used SQL and PLSQL stored procedures functions to implement business logics in Oracle Wrote python raw SQL queries to Django database agnostic for MySQL and Oracle database Designed and developed GUI frontend applications using Oracle Forms for user interaction with the database Created Django classbased REST APIs for the application and serialized data Wrote JavaScript form validations for all the web pages in the application Implemented several Socket TCPIP UDP Twisted ZeroMq XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Wrote multiple Shell and Perl scripts for the automation of the unit testing Created Test script in PerlUnix from automation and Ran the Test and validated results Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Conduct systems design feasibility and cost studies and recommend costeffective cloud solutions such as Amazon Web Services AWS Using ANT Puppet Chef Scripts with Ivy to build the application and deploy Extracted data from XML files using PERLXML modules Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Using Chef and AWS allowed me to reduce costs for the department and eliminate unwarranted resources Automated provisioning of cloud infrastructure with Chef Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON designed and developed the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Built python frameworks using NumPy and Pandas for data analysis Worked in Agile and scrum environment which includes daily standup and sprint planning Created unit test and automation framework using nose test and selenium Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 CCAWSEC2 Robot framework ZeroMQ twisted ZeroMQ XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu PyCharm PyLint PEP8 Django 16 Python Developer Western Digital San Jose CA February 2016 to September 2017 Responsibilities Gathering requirements and translating the Business details into Technical design Participated in all the stages of software development lifecycle SDLC like design testing development and implementation Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Developed the tools using Python Django and used MongoDB for databases Parsers written in Python for extracting useful data from the design data base Used Parse kit Enigmaio framework for writing Parsers for ETL extraction Wrote multiple Perl programs to generate configuration files from Oracle Database Wrote Perl scripts to extract data from Oracle DB using Perl DBI module for Data analysis and report generation Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Bootstrap jQuery Optimized the performance of complex SQL queries in Oracle reports as well as queries from the queries Extensively worked with spark Data frames for ingesting data from flat files into RDDs to transform unstructured data and structured data Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Implemented secured way of Centralized login for AWS users using 389 Directory Services LDAP and OpenVPN Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Experience in creating Docker containers leveraging existing Linux Containers and AMIs in addition to creating Docker containers from scratch Setup Docker on Linux and configured Jenkins to run under Docker host Developed various APIs for Django applications using Djangotasty pie Used JIRA to build an environment for development Developed Wrapper in Python for instantiating multithreaded application Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Frontend web development using HTMLCSS JQuery Bootstrap as well as backend development using Golang and SQL Used Python based GUI components for the frontend functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Experienced in building a Command line tool to interact with RESTful API using in Golang Familiar with UNIX Linux internals basic cryptography security Generated graphical reports using python package NumPy and Matplotlib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment PythonAWS EC2 EBS S3 VPC PyCharm Selenium IDE JQueryPostgresql MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL GIT Cassandra Python Developer Wells Fargo Home Mortgage Minneapolis MN October 2013 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS and JavaScript JQuery Built application logic using Python used the Django Framework to develop the application Used Django APIs for database access Description Bluetooth enabled camcorder Embedded in a headset to enable handsfree audio and video recording with optical zoom capability Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Coded and debugged the stored Procedures Packages and Views in Oracle Databases using SQL and PLSQL which were called by useroriented application modules Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Used Python based GUI components for the frontend functionality such as selection criteria Developed monitoring and notification tools using Python Participated in requirement gathering and worked closely with the architect in designing and modeling Executed FIX testing for Functional EndtoEnd and Regression testing for various system applications Analyzed Business Requirement Document BRD Functional Specifications Document FSD and FIX client requirements to overall understand the project aim and discussed with BA emerged questions Generated various compliance and user reports in Python including FINRA OATS reports user PL reports customized reports for users user permissions and security information reports Used Python MySQL connectors to pull data from dbs Created Data tables to display customer information and add delete update customer records using Python MySQL and XHTML Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in HQL and Native SQL and criteria API Added the navigations and paginations and filtering columns and adding and removing the desired columns for view utilizing Python based GUI components Implemented marshalling and UN marshalling XML to HTML and HTML to XML Created PyUnit test scripts and used for unit testing Actively participated in System Testing production support and maintenancepatch deployments Worked on RUP development environment and used Rational ClearCase for versioning Used JQuery for selecting particular DOM elements when parsing HTML Developed SQL Queries Stored Procedures and Triggers Using Oracle 9i SQL PLSQL Developed test cases using Python unit test pylint and nose Environment Python HTML JavaScript Ajax PyQT PyUnit PLSQL and Oracle SQL Developer Systems Engineer Insert V IT May 2011 to July 2013 Responsibilities Developed Unix Shell scripts for cleansing and validating data files using utilities like AWK sed grep and other Unix commands Developed UNIX shell scripts implementing PLSQL queries for data migration batch processing Read and interpreted UNIX logs Worked in development testing and production support using Oracle Forms reports 10g Oracle database 11g Develop automation solutions leveraging Shell and Perl to increase operational efficiency Execute performance tuning activities develop monitoring processes and improved process performance UNIXLinux environment Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users Developed scripts and modified ProC program for automation of Claims processing to handle additional 1million recipients Developed and implemented the new flow of Component trades which includes loading the feed file in PerlUnix shell applying the business rules through stored procedures and generating the report in Perl for the end users Created automation script using Perl to take the user input for batch processing of data through data module Wrote various PERL subroutines for automation of synch batch data Support over Perl Scripts for Web based application Created process to manage upgrades and patches Support over HTML CSS Support application teams and assisting with complex issues Maintains and troubleshoots software on UNIX systems and applies temporary and permanent fixes to systems as needed Closely worked with the business users to solve different production issues doing rootcause analysis and breakfixes Created high level design document for the application Environment Perl CGI XML C PLSQL Oracle 9i DBI SQLPlus SQL UNIX Education Bachelors Skills Apache 4 years API 4 years CSS 7 years databases 4 years Django 5 years frontend 5 years FRONT END DESIGN 5 years Git 3 years HTML 7 years JavaScript 5 years Jira 3 years jQuery 4 years Linux 7 years MySQL 5 years Oracle 7 years PHP 2 years Python 5 years SQL 7 years Unix 5 years XML 5 years Additional Information Technical Skills Languages Python Shell Bash C C PHP Operating Systems UNIXLINUX Mac OS Windows Databases ORACLE MySQL SQLite PostGRE MS SQL SERVER NoSQL databases MongoDB 26 24 Version Controls GIT SVN Clear Case Protocols FTP IPC TCPIP UDP ZeroMQ Frameworks Django Contents Management system CMS Django based CMSMezzanine Flask Bootstrap CherryPy web2py Tornado Pyramid Robot Software Tools Other Utilities PyCharm Eclipse IBM Rational ClearCas GIT JIRA VOS Multi Process Debugger and Forms Management System JIRA Compilers Debugging tools GNU GCC Unix GNU Debugger Valgrind IDEs Eclipse SQLPlus SQL Developer Toad FrontEnd Components HTML CSS and Bootstrap Profilers Debuggers GNU debugger MPLAB ICD 3 MultiICE GNUGDB LauterbachsTrace32 Web Server APACHE SERVER Apache HTTP IIS 60 Web Technology ReactJs AngularJs HTML JavaScript ES6 jQuery ajax CSS Bootstrap XML Delivery Tools Saltstack REST API Chef PuppetGit Cryptograph",
    "unique_id": "b08a9511-af59-4b77-b47d-7338d218a1ed"
}