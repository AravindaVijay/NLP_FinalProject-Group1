{
    "clean_data": "AWS DEVELOPER AWS span lDEVELOPERspan AWS DEVELOPER UNILEVER Los Angeles CA Over 5 years of professional experience as software professional industry comprising of delivery management design development deployment and cloud implementation with thorough knowledge in AWS Amazon Web Services Hybrid Cloud VMware virtualization Windows and related technologies Focused mainly on focus on Automating Building Deploying and Releasing of code using Amazon Web Services AWS in a DevOps through Continuous Integration CI Continuous DeploymentDelivery CD as an iterative process and Automation of Infrastructure as Code Experience in all Phases of Software Development Life Cycle SDLC Agile methodology and CICD pipeline Used SAM Serverless application model to deploy serverless applications into AWSenvironment Strong CloudFormation skills to automate the build Worked on YAML scripts to prepare the CloudFormation template Experience in automating application deployment in the cloud using Docker technology using Elastic Container Service and Code Build Experience in working with core AWS services like EC2 S3 Elastic Beanstalk Elastic Load balance EBS ECS ELB Autoscaling RDS CloudFront CloudWatch CloudTrail Lambda API Gateway S3 SQS SNS Route 53 IAM CloudFormation VPC ECS DynamoDB API Gateway Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Knowledge of other core AWS services like Elastic ache Kinesis SQS SNS SWF CLI etc Experience in project deployment using Google CloudJenkins Elastic Search and using web Services like Amazon Web Services AWS Expertise in DevOps Release Engineering Configuration Management Cloud Infrastructure Automation It includes Amazon Webservices AWS Ant Apache Maven Jenkins SVN GitHub Tomcat JBoss and Linux etc and work on source controller tools like GIT GITHUB Experienced in Branching Merging Tagging and maintaining the version across the environments using SCM tools like GIT on Linux platforms Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Developed a fully functional prototype application using JavaScript jQuery and Backbonejs and Bootstrap connecting to a REST service hosted on AWS using API Gateway and used DynamoDB Experienced in creating UserGroup Accounts Federated users and access management to UserGroup Accounts using AWS IAM service Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts Analytical skills with ability to capture minute details and an effective team player my strength lies in ability to interact with developers coordinate and manage the tasks assigned backed by strong technical knowledge Work Experience AWS DEVELOPER UNILEVER Los Angeles CA May 2018 to Present Assist in designing automating implementing and sustainment of Amazon machine images AMI across the AWS Cloud environment Worked on AWS API Gateway Rest APIs and NoSQL datastores like HBase Cassandra Created and modified Cloud Formation templates to createupgrade EC2 instances to support specific needs Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Involved deeply in writing YAML scripts in CloudFormation for AWS Automation Built a highly scalable AWS architecture using EC2RDSELBASG via cloud formation Used CloudFormation Helper scripts to automatically install configure and start applications on Amazon EC2 instances Used SAM Serverless Application Model to deploy serverless applications into AWS environment Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Knowledge of creating highly scalable and reliable AWS environment Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Created Buckets in AWS and stored files Enabled Versioning and security for the files stored Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Configured S3 buckets with various life cycle policies to archive the infrequently accessed data to storage classes based on requirement Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Used AWS created and queried data using DynamoDB and created a Web interface allowing users to dynamically Knowledge of security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Worked on ECS Elastic container service to deploy docker images in AWS environment Worked on keeping up and looking at log archives using monitoring tools like Splunk CloudWatch Configured the Cloud Trial on the AWS console and created the Cloud watch events to receive SNS Notifications when someone terminates the EC2 instance Developed multiple chef cookbooks from scratch Developed API for using AWS Lambda to manage the servers and run the code in the Postgres DB Worked on standard python packages like boto and boto3 for AWS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Production support and have knowledge of deployment using AWS Heroku and Jenkins Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed Ubuntu Linux and Windows virtual servers on AWSEC2 using Puppet Implemented Chef Cookbooks for OS component configuration to keep AWS servers template minimal Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts PYTHONAWS DEVELOPER JANRURY Los Gatos CA 2017 to March 2018 AWS Cloud management and Chef automation Worked on Infrastructure Development and Operations involved in designing and deploying utilizing almost all the AWS stack like EC2 EBS S3 VPC LDAP VPN RDS SES ELB Autoscaling CloudFront CloudFormation Elastic beanstalk CloudWatch SNS Route 53 LDAP VPN Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer VPC Auto scaling groups Implementing a Continuous Delivery framework using Jenkins Jfrog Maven Nexus in Linux Environment Using Jenkins AWS Code Deploy plugin to deploy into AWS Allotted permissions policies and roles to users and groups using AWS Identity and Access Management IAM Worked on AWS EC2 EBS ELB scaling groups Trusted Advisor S3 Cloud Watch CloudFront IAM Security Groups AutoScaling Used Amazon S3 to backup database instances periodically to save snapshots of data Writing AWS Terraform templates for any automation requirements in AWS services Created database objects in AWS Redshift Followed AWS best practices to convert data types from oracle to redshift Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Supported application deployment in IAAS Cloud platforms like Rackspace AWS and Google Compute engine and was responsible for resource planning of various virtual compute engines Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Migrated applications to the AWS cloud Environment Proficient in working on with REST and SOAP Web Services handling XML and JSON data Developed a modular API for minibot and interchangeable modules for Raspberry Pi Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used JSON based and RESTful API for information extraction Developed supporting data analysis projects using Elastic Map Reduce on the Amazon Web Services AWS cloud Developed project to interface with extensive database via cloudbased API utilizing GitHub AWSRDS servers and continuous integration with Codeship Developed remote integration with third party platforms by using RESTful web services Automated Regression analysis for determining fund returns based on index returns PythonExcel Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Analyzed current legacy infrastructure established business case and build consensus for virtualized IaaS PaaS near term strategy with SaaS mobile cloud services end state Used Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Worked in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Developed data modeling for analytics by building queries using MapReduce pymongomongo  and implementing for visualization using Elastic search Kibana and Logstash on Apache server FINRA WASHINGTON SOFTWARE DEVELOPER FEBRURY 2014 to December 2015 Create the AWS Code pipeline AWS Code Commit AWS Code Build and AWS Code Deploy services to build and deployment process Understanding of secure cloud configuration Cloud Trail AWS Configuration cloudsecurity Technologies VPC Security Groups etc and cloudpermission systems IAM Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Deployed JSON template to create a stack in Cloud Formation which include services like Amazon EC2 Amazon S3 Amazon RDS Amazon Elastic Load Balancing Amazon VPC SQS and other services of the AWS infrastructure Used Identify and Access Management IAM to assign roles and to create and manage AWS users and groups and user permissions to AWS resources Working with best DevOps practices using AWS Elastic Beanstalk and Docker with Kubernetes Wrote Chef Recipes for various applications and deployed them in AWS using Terraform Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Automated the cloud deployments using chef python and AWS Cloud Formation Templates Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Have implemented chef provisioning for creation of on demand instances and instance infrastructure using the chefclient and bootstrapping using plugins against AWS EC2 Dynamically add and remove servers from AWS production environment Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Develop applications that use MongoDB database and PyMongo Identifying distribution and packaging mechanism for the python package of the solution Working on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Created alarms and trigger points in Cloud Watch based on thresholds and monitored logs via metric filters Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in CloudFormation JSON templates Manage AWS EC2 instances utilizing Auto Scaling Elastic Load Balancing and Glacier for our QA and UAT environments as well as infrastructure servers for GIT and Chef Used Amazon IAM to grant fine access of AWS resources to users Also managed roles and permissions of users to AWS account through IAM Used CloudFront to deliver content from AWS edge locations to users allowing for further reduction of load on frontend servers Wrote python scripts for deployments on AWS and Continuous Integration provisioning Management of SaaS product development activities using a variety of services such as Amazon Web Services AWS SOFTWARE DEVELOPER ACCENTURE IN April 2011 to November 2013 Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created RESTful APIs calls with server parse output report of excel files Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL  package Designed RESTful XML web service for handling AJAX request Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Education Masters",
    "entities": [
        "Splunk CloudWatch Configured",
        "Linux Environment Using Jenkins AWS Code Deploy",
        "API Gateway",
        "Created Lambda",
        "AJAX",
        "AWS Elastic Beanstalk",
        "Java PHP Nodejs Python Ruby",
        "NAT",
        "Automated Regression",
        "Agile Software Methodology",
        "AWS Redshift Followed AWS",
        "Auto Scaling Elastic Load Balancing",
        "AMI",
        "Working",
        "Backbonejs",
        "Google CloudJenkins Elastic Search",
        "Chef Used Amazon IAM",
        "PyMongo Identifying",
        "Los Angeles",
        "Amazon Web Services AWS",
        "Puppet Implemented Chef Cookbooks",
        "Heroku",
        "AWSenvironment Strong CloudFormation",
        "TestDriven Development TDD",
        "Hadoop",
        "ECS Involved",
        "Rackspace AWS",
        "XML",
        "SOAP",
        "HBase Cassandra Created",
        "UNIX Responsible",
        "DevOps",
        "Created S3",
        "Amazon",
        "YAML",
        "Kinesis SQS",
        "GitHub Jenkins Nexus",
        "Automation of Infrastructure as Code Experience",
        "UAT",
        "ECS Elastic",
        "Python",
        "DevOps Release Engineering Configuration Management Cloud Infrastructure Automation",
        "Amazon AWS S3",
        "Developed",
        "AWS Elastic Beanstalk Jenkins Ansible Docker",
        "Code Build",
        "AWS S3",
        "Amazon Web Services AWS Expertise",
        "Windows",
        "Linux",
        "API RESTful Web Service",
        "Created Data",
        "AWS Installed",
        "PySpark PyQT",
        "Docker",
        "Identify and Access Management IAM",
        "RDS",
        "Views",
        "Kubernetes Created",
        "CLI",
        "HerokuJenkins",
        "Flask SQL Alchemy",
        "Writing AWS Terraform",
        "SNS Notifications",
        "FINRA WASHINGTON SOFTWARE",
        "GIT",
        "Python on Django",
        "API",
        "CloudFormation Helper",
        "QA",
        "AWS Identity and Access Management IAM Worked",
        "Created",
        "IAM Used CloudFront",
        "AWS",
        "Google Compute",
        "JIRA Agile Education Masters",
        "Amazon Webservices AWS Ant Apache",
        "GIT GITHUB Experienced",
        "AWS Allotted",
        "Elastic Container Service",
        "SQL",
        "Kubernetes Good",
        "Created Buckets",
        "Amazon Web Services",
        "GitHub",
        "SaaS",
        "the Appspec File",
        "Amazon Web Services AWS EC2",
        "SSH",
        "Jenkins Created",
        "Terraform Wrote Ansible Playbooks",
        "Model View Control",
        "Used SAM Serverless Application Model",
        "log archives",
        "CICD",
        "Continuous Integration provisioning Management",
        "Managed Container",
        "Pandas",
        "SQLite",
        "SAM Serverless",
        "Kubernetes Wrote Chef Recipes",
        "Cloud Watch",
        "ELB Autoscaling RDS CloudFront CloudWatch CloudTrail",
        "AWS Create",
        "CloudFormation for AWS Automation Built",
        "UI",
        "Continuous Integration",
        "Python Automated",
        "SVN",
        "CloudFront IAM",
        "AWSEC2",
        "PythonExcel Involved",
        "Tomcat",
        "REST",
        "MapReduce",
        "CloudWatch SNS Route",
        "Amazon Web Services AWS SOFTWARE",
        "NoSQL",
        "Application",
        "IIS Created",
        "CloudFormation"
    ],
    "experience": "Experience in all Phases of Software Development Life Cycle SDLC Agile methodology and CICD pipeline Used SAM Serverless application model to deploy serverless applications into AWSenvironment Strong CloudFormation skills to automate the build Worked on YAML scripts to prepare the CloudFormation template Experience in automating application deployment in the cloud using Docker technology using Elastic Container Service and Code Build Experience in working with core AWS services like EC2 S3 Elastic Beanstalk Elastic Load balance EBS ECS ELB Autoscaling RDS CloudFront CloudWatch CloudTrail Lambda API Gateway S3 SQS SNS Route 53 IAM CloudFormation VPC ECS DynamoDB API Gateway Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Knowledge of other core AWS services like Elastic ache Kinesis SQS SNS SWF CLI etc Experience in project deployment using Google CloudJenkins Elastic Search and using web Services like Amazon Web Services AWS Expertise in DevOps Release Engineering Configuration Management Cloud Infrastructure Automation It includes Amazon Webservices AWS Ant Apache Maven Jenkins SVN GitHub Tomcat JBoss and Linux etc and work on source controller tools like GIT GITHUB Experienced in Branching Merging Tagging and maintaining the version across the environments using SCM tools like GIT on Linux platforms Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Developed a fully functional prototype application using JavaScript jQuery and Backbonejs and Bootstrap connecting to a REST service hosted on AWS using API Gateway and used DynamoDB Experienced in creating UserGroup Accounts Federated users and access management to UserGroup Accounts using AWS IAM service Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts Analytical skills with ability to capture minute details and an effective team player my strength lies in ability to interact with developers coordinate and manage the tasks assigned backed by strong technical knowledge Work Experience AWS DEVELOPER UNILEVER Los Angeles CA May 2018 to Present Assist in designing automating implementing and sustainment of Amazon machine images AMI across the AWS Cloud environment Worked on AWS API Gateway Rest APIs and NoSQL datastores like HBase Cassandra Created and modified Cloud Formation templates to createupgrade EC2 instances to support specific needs Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Involved deeply in writing YAML scripts in CloudFormation for AWS Automation Built a highly scalable AWS architecture using EC2RDSELBASG via cloud formation Used CloudFormation Helper scripts to automatically install configure and start applications on Amazon EC2 instances Used SAM Serverless Application Model to deploy serverless applications into AWS environment Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Knowledge of creating highly scalable and reliable AWS environment Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Created Buckets in AWS and stored files Enabled Versioning and security for the files stored Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Configured S3 buckets with various life cycle policies to archive the infrequently accessed data to storage classes based on requirement Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Used AWS created and queried data using DynamoDB and created a Web interface allowing users to dynamically Knowledge of security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Worked on ECS Elastic container service to deploy docker images in AWS environment Worked on keeping up and looking at log archives using monitoring tools like Splunk CloudWatch Configured the Cloud Trial on the AWS console and created the Cloud watch events to receive SNS Notifications when someone terminates the EC2 instance Developed multiple chef cookbooks from scratch Developed API for using AWS Lambda to manage the servers and run the code in the Postgres DB Worked on standard python packages like boto and boto3 for AWS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Production support and have knowledge of deployment using AWS Heroku and Jenkins Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed Ubuntu Linux and Windows virtual servers on AWSEC2 using Puppet Implemented Chef Cookbooks for OS component configuration to keep AWS servers template minimal Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts PYTHONAWS DEVELOPER JANRURY Los Gatos CA 2017 to March 2018 AWS Cloud management and Chef automation Worked on Infrastructure Development and Operations involved in designing and deploying utilizing almost all the AWS stack like EC2 EBS S3 VPC LDAP VPN RDS SES ELB Autoscaling CloudFront CloudFormation Elastic beanstalk CloudWatch SNS Route 53 LDAP VPN Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer VPC Auto scaling groups Implementing a Continuous Delivery framework using Jenkins Jfrog Maven Nexus in Linux Environment Using Jenkins AWS Code Deploy plugin to deploy into AWS Allotted permissions policies and roles to users and groups using AWS Identity and Access Management IAM Worked on AWS EC2 EBS ELB scaling groups Trusted Advisor S3 Cloud Watch CloudFront IAM Security Groups AutoScaling Used Amazon S3 to backup database instances periodically to save snapshots of data Writing AWS Terraform templates for any automation requirements in AWS services Created database objects in AWS Redshift Followed AWS best practices to convert data types from oracle to redshift Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Supported application deployment in IAAS Cloud platforms like Rackspace AWS and Google Compute engine and was responsible for resource planning of various virtual compute engines Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Migrated applications to the AWS cloud Environment Proficient in working on with REST and SOAP Web Services handling XML and JSON data Developed a modular API for minibot and interchangeable modules for Raspberry Pi Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used JSON based and RESTful API for information extraction Developed supporting data analysis projects using Elastic Map Reduce on the Amazon Web Services AWS cloud Developed project to interface with extensive database via cloudbased API utilizing GitHub AWSRDS servers and continuous integration with Codeship Developed remote integration with third party platforms by using RESTful web services Automated Regression analysis for determining fund returns based on index returns PythonExcel Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Analyzed current legacy infrastructure established business case and build consensus for virtualized IaaS PaaS near term strategy with SaaS mobile cloud services end state Used Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Worked in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Developed data modeling for analytics by building queries using MapReduce pymongomongo   and implementing for visualization using Elastic search Kibana and Logstash on Apache server FINRA WASHINGTON SOFTWARE DEVELOPER FEBRURY 2014 to December 2015 Create the AWS Code pipeline AWS Code Commit AWS Code Build and AWS Code Deploy services to build and deployment process Understanding of secure cloud configuration Cloud Trail AWS Configuration cloudsecurity Technologies VPC Security Groups etc and cloudpermission systems IAM Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Deployed JSON template to create a stack in Cloud Formation which include services like Amazon EC2 Amazon S3 Amazon RDS Amazon Elastic Load Balancing Amazon VPC SQS and other services of the AWS infrastructure Used Identify and Access Management IAM to assign roles and to create and manage AWS users and groups and user permissions to AWS resources Working with best DevOps practices using AWS Elastic Beanstalk and Docker with Kubernetes Wrote Chef Recipes for various applications and deployed them in AWS using Terraform Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Automated the cloud deployments using chef python and AWS Cloud Formation Templates Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Have implemented chef provisioning for creation of on demand instances and instance infrastructure using the chefclient and bootstrapping using plugins against AWS EC2 Dynamically add and remove servers from AWS production environment Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Develop applications that use MongoDB database and PyMongo Identifying distribution and packaging mechanism for the python package of the solution Working on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Created alarms and trigger points in Cloud Watch based on thresholds and monitored logs via metric filters Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in CloudFormation JSON templates Manage AWS EC2 instances utilizing Auto Scaling Elastic Load Balancing and Glacier for our QA and UAT environments as well as infrastructure servers for GIT and Chef Used Amazon IAM to grant fine access of AWS resources to users Also managed roles and permissions of users to AWS account through IAM Used CloudFront to deliver content from AWS edge locations to users allowing for further reduction of load on frontend servers Wrote python scripts for deployments on AWS and Continuous Integration provisioning Management of SaaS product development activities using a variety of services such as Amazon Web Services AWS SOFTWARE DEVELOPER ACCENTURE IN April 2011 to November 2013 Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created RESTful APIs calls with server parse output report of excel files Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL   package Designed RESTful XML web service for handling AJAX request Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Education Masters",
    "extracted_keywords": [
        "AWS",
        "DEVELOPER",
        "AWS",
        "span",
        "lDEVELOPERspan",
        "AWS",
        "DEVELOPER",
        "UNILEVER",
        "Los",
        "Angeles",
        "CA",
        "years",
        "experience",
        "software",
        "industry",
        "comprising",
        "delivery",
        "management",
        "design",
        "development",
        "deployment",
        "implementation",
        "knowledge",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Hybrid",
        "Cloud",
        "VMware",
        "virtualization",
        "Windows",
        "technologies",
        "focus",
        "Automating",
        "Building",
        "Deploying",
        "Releasing",
        "code",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "DevOps",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "DeploymentDelivery",
        "CD",
        "process",
        "Automation",
        "Infrastructure",
        "Code",
        "Experience",
        "Phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "CICD",
        "pipeline",
        "SAM",
        "Serverless",
        "application",
        "model",
        "serverless",
        "applications",
        "AWSenvironment",
        "Strong",
        "CloudFormation",
        "build",
        "YAML",
        "scripts",
        "CloudFormation",
        "template",
        "Experience",
        "application",
        "deployment",
        "cloud",
        "Docker",
        "technology",
        "Elastic",
        "Container",
        "Service",
        "Code",
        "Build",
        "Experience",
        "core",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Elastic",
        "Beanstalk",
        "Elastic",
        "Load",
        "balance",
        "EBS",
        "ECS",
        "ELB",
        "Autoscaling",
        "RDS",
        "CloudFront",
        "CloudWatch",
        "CloudTrail",
        "Lambda",
        "API",
        "Gateway",
        "S3",
        "SQS",
        "SNS",
        "Route",
        "IAM",
        "CloudFormation",
        "VPC",
        "ECS",
        "DynamoDB",
        "API",
        "Gateway",
        "Experience",
        "life",
        "cycle",
        "policies",
        "data",
        "AWS",
        "S3",
        "AWS",
        "Glacier",
        "AWS",
        "EC2",
        "S3",
        "CLI",
        "tools",
        "features",
        "Code",
        "Deploy",
        "hooks",
        "Appspec",
        "File",
        "deployment",
        "lifecycle",
        "applications",
        "EC2",
        "Lambda",
        "ECS",
        "Knowledge",
        "core",
        "AWS",
        "services",
        "ache",
        "Kinesis",
        "SQS",
        "SNS",
        "SWF",
        "CLI",
        "Experience",
        "project",
        "deployment",
        "Google",
        "CloudJenkins",
        "Elastic",
        "Search",
        "web",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Expertise",
        "DevOps",
        "Release",
        "Engineering",
        "Configuration",
        "Management",
        "Cloud",
        "Infrastructure",
        "Automation",
        "Amazon",
        "Webservices",
        "AWS",
        "Ant",
        "Apache",
        "Maven",
        "Jenkins",
        "SVN",
        "GitHub",
        "Tomcat",
        "JBoss",
        "Linux",
        "source",
        "controller",
        "tools",
        "GIT",
        "GITHUB",
        "Merging",
        "Tagging",
        "version",
        "environments",
        "SCM",
        "tools",
        "GIT",
        "Linux",
        "platforms",
        "AWS",
        "Cloud",
        "Formation",
        "custom",
        "VPC",
        "subnets",
        "NAT",
        "deployment",
        "Web",
        "applications",
        "database",
        "templates",
        "prototype",
        "application",
        "JavaScript",
        "jQuery",
        "Backbonejs",
        "Bootstrap",
        "REST",
        "service",
        "AWS",
        "API",
        "Gateway",
        "DynamoDB",
        "UserGroup",
        "Accounts",
        "Federated",
        "users",
        "access",
        "management",
        "UserGroup",
        "Accounts",
        "AWS",
        "IAM",
        "service",
        "Experience",
        "tools",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Jenkins",
        "Ansible",
        "Docker",
        "Kubernetes",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "aspects",
        "AWS",
        "infrastructure",
        "compute",
        "storage",
        "network",
        "permissions",
        "configuration",
        "management",
        "tools",
        "Cloud",
        "Formation",
        "shell",
        "scripts",
        "Analytical",
        "skills",
        "ability",
        "minute",
        "details",
        "team",
        "player",
        "strength",
        "ability",
        "developers",
        "tasks",
        "knowledge",
        "Work",
        "Experience",
        "AWS",
        "DEVELOPER",
        "UNILEVER",
        "Los",
        "Angeles",
        "CA",
        "May",
        "Present",
        "Assist",
        "sustainment",
        "Amazon",
        "machine",
        "AMI",
        "AWS",
        "Cloud",
        "environment",
        "AWS",
        "API",
        "Gateway",
        "Rest",
        "APIs",
        "NoSQL",
        "datastores",
        "HBase",
        "Cassandra",
        "Created",
        "Cloud",
        "Formation",
        "EC2",
        "instances",
        "needs",
        "features",
        "Code",
        "Deploy",
        "hooks",
        "Appspec",
        "File",
        "deployment",
        "lifecycle",
        "applications",
        "EC2",
        "Lambda",
        "ECS",
        "YAML",
        "scripts",
        "CloudFormation",
        "AWS",
        "Automation",
        "AWS",
        "architecture",
        "EC2RDSELBASG",
        "cloud",
        "formation",
        "CloudFormation",
        "Helper",
        "scripts",
        "configure",
        "applications",
        "Amazon",
        "EC2",
        "instances",
        "SAM",
        "Serverless",
        "Application",
        "Model",
        "serverless",
        "applications",
        "AWS",
        "environment",
        "Managed",
        "Container",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "Knowledge",
        "AWS",
        "environment",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "VPC",
        "EBS",
        "AMI",
        "SNS",
        "RDS",
        "EBS",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "Cloud",
        "Formation",
        "AWS",
        "Config",
        "Auto",
        "CloudFront",
        "IAM",
        "DynamoDB",
        "Created",
        "Buckets",
        "AWS",
        "files",
        "Versioning",
        "security",
        "files",
        "Created",
        "load",
        "balancers",
        "auto",
        "scaling",
        "groups",
        "traffic",
        "cost",
        "fault",
        "environment",
        "S3",
        "buckets",
        "AWS",
        "environment",
        "files",
        "content",
        "web",
        "application",
        "SQL",
        "queries",
        "batch",
        "processing",
        "Wrote",
        "validation",
        "scripts",
        "SQL",
        "data",
        "loading",
        "Configured",
        "S3",
        "buckets",
        "life",
        "cycle",
        "policies",
        "data",
        "storage",
        "classes",
        "requirement",
        "RabbitMQMongoDB",
        "pipeline",
        "email",
        "bounce",
        "records",
        "AWS",
        "data",
        "DynamoDB",
        "Web",
        "interface",
        "users",
        "Knowledge",
        "security",
        "groups",
        "network",
        "ACLs",
        "internet",
        "gateways",
        "route",
        "tables",
        "zone",
        "organization",
        "AWS",
        "cloud",
        "Created",
        "load",
        "balancers",
        "auto",
        "scaling",
        "groups",
        "traffic",
        "cost",
        "fault",
        "environment",
        "ECS",
        "container",
        "service",
        "docker",
        "images",
        "AWS",
        "environment",
        "log",
        "archives",
        "monitoring",
        "tools",
        "Splunk",
        "CloudWatch",
        "Cloud",
        "Trial",
        "AWS",
        "console",
        "Cloud",
        "events",
        "SNS",
        "Notifications",
        "EC2",
        "instance",
        "chef",
        "cookbooks",
        "scratch",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "Postgres",
        "DB",
        "Worked",
        "python",
        "packages",
        "boto",
        "AWS",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Production",
        "support",
        "knowledge",
        "deployment",
        "AWS",
        "Heroku",
        "Jenkins",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "Ubuntu",
        "Linux",
        "Windows",
        "servers",
        "AWSEC2",
        "Puppet",
        "Implemented",
        "Chef",
        "Cookbooks",
        "OS",
        "component",
        "configuration",
        "AWS",
        "servers",
        "template",
        "minimal",
        "Managed",
        "aspects",
        "AWS",
        "infrastructure",
        "compute",
        "storage",
        "network",
        "permissions",
        "configuration",
        "management",
        "tools",
        "Cloud",
        "Formation",
        "shell",
        "scripts",
        "DEVELOPER",
        "JANRURY",
        "Los",
        "Gatos",
        "CA",
        "March",
        "AWS",
        "Cloud",
        "management",
        "Chef",
        "automation",
        "Infrastructure",
        "Development",
        "Operations",
        "AWS",
        "stack",
        "EC2",
        "EBS",
        "S3",
        "VPC",
        "LDAP",
        "VPN",
        "RDS",
        "SES",
        "ELB",
        "Autoscaling",
        "CloudFront",
        "CloudFormation",
        "beanstalk",
        "CloudWatch",
        "SNS",
        "Route",
        "LDAP",
        "VPN",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "VPC",
        "Auto",
        "scaling",
        "groups",
        "Continuous",
        "Delivery",
        "framework",
        "Jenkins",
        "Jfrog",
        "Maven",
        "Nexus",
        "Linux",
        "Environment",
        "Jenkins",
        "AWS",
        "Code",
        "Deploy",
        "plugin",
        "AWS",
        "permissions",
        "policies",
        "roles",
        "users",
        "groups",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "AWS",
        "EC2",
        "EBS",
        "ELB",
        "scaling",
        "groups",
        "Advisor",
        "S3",
        "Cloud",
        "Watch",
        "CloudFront",
        "IAM",
        "Security",
        "Groups",
        "AutoScaling",
        "Amazon",
        "S3",
        "database",
        "instances",
        "snapshots",
        "data",
        "AWS",
        "Terraform",
        "templates",
        "automation",
        "requirements",
        "AWS",
        "services",
        "database",
        "AWS",
        "Redshift",
        "AWS",
        "practices",
        "data",
        "types",
        "oracle",
        "Developed",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "database",
        "package",
        "functions",
        "roles",
        "AWS",
        "Lambda",
        "scripts",
        "AWS",
        "Lambda",
        "java",
        "event",
        "processing",
        "Lambda",
        "jobs",
        "Roles",
        "AWS",
        "CLI",
        "Configuration",
        "Management",
        "Microservices",
        "Kubernetes",
        "Docker",
        "Ansible",
        "application",
        "deployment",
        "IAAS",
        "Cloud",
        "platforms",
        "Rackspace",
        "AWS",
        "Google",
        "Compute",
        "engine",
        "resource",
        "planning",
        "compute",
        "engines",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "applications",
        "AWS",
        "cloud",
        "Environment",
        "Proficient",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "API",
        "minibot",
        "modules",
        "Raspberry",
        "Pi",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "JSON",
        "API",
        "information",
        "extraction",
        "data",
        "analysis",
        "projects",
        "Elastic",
        "Map",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "project",
        "database",
        "API",
        "GitHub",
        "AWSRDS",
        "servers",
        "integration",
        "Codeship",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Automated",
        "Regression",
        "analysis",
        "fund",
        "returns",
        "index",
        "returns",
        "PythonExcel",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "legacy",
        "infrastructure",
        "business",
        "case",
        "consensus",
        "IaaS",
        "PaaS",
        "term",
        "strategy",
        "SaaS",
        "cloud",
        "services",
        "state",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "data",
        "analytics",
        "queries",
        "MapReduce",
        "pymongomongo",
        "visualization",
        "search",
        "Kibana",
        "Logstash",
        "Apache",
        "server",
        "FINRA",
        "WASHINGTON",
        "SOFTWARE",
        "DEVELOPER",
        "FEBRURY",
        "December",
        "AWS",
        "Code",
        "pipeline",
        "AWS",
        "Code",
        "Commit",
        "AWS",
        "Code",
        "Build",
        "AWS",
        "Code",
        "Deploy",
        "services",
        "deployment",
        "process",
        "Understanding",
        "cloud",
        "configuration",
        "Cloud",
        "Trail",
        "AWS",
        "Configuration",
        "cloudsecurity",
        "Technologies",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systems",
        "IAM",
        "Linux",
        "environment",
        "migration",
        "plan",
        "timeline",
        "migration",
        "JSON",
        "template",
        "stack",
        "Cloud",
        "Formation",
        "services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "VPC",
        "SQS",
        "services",
        "AWS",
        "infrastructure",
        "Identify",
        "Access",
        "Management",
        "IAM",
        "roles",
        "AWS",
        "users",
        "groups",
        "user",
        "permissions",
        "AWS",
        "resources",
        "DevOps",
        "practices",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Docker",
        "Kubernetes",
        "Wrote",
        "Chef",
        "Recipes",
        "applications",
        "AWS",
        "Terraform",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Automated",
        "cloud",
        "deployments",
        "chef",
        "python",
        "AWS",
        "Cloud",
        "Formation",
        "Templates",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "chef",
        "provisioning",
        "creation",
        "demand",
        "instances",
        "instance",
        "infrastructure",
        "chefclient",
        "plugins",
        "AWS",
        "EC2",
        "Dynamically",
        "servers",
        "AWS",
        "production",
        "environment",
        "Hadoop",
        "stack",
        "data",
        "tools",
        "Pig",
        "Hive",
        "HBase",
        "database",
        "DynamoDB",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "Develop",
        "applications",
        "database",
        "PyMongo",
        "distribution",
        "packaging",
        "mechanism",
        "package",
        "solution",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Performed",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "IIS",
        "alarms",
        "trigger",
        "points",
        "Cloud",
        "Watch",
        "thresholds",
        "logs",
        "filters",
        "AWS",
        "Cloud",
        "Formation",
        "custom",
        "VPC",
        "subnets",
        "NAT",
        "deployment",
        "Web",
        "applications",
        "database",
        "templates",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Group",
        "Auto",
        "Scaling",
        "RDS",
        "CloudFormation",
        "JSON",
        "templates",
        "Manage",
        "AWS",
        "EC2",
        "instances",
        "Auto",
        "Scaling",
        "Elastic",
        "Load",
        "Balancing",
        "Glacier",
        "QA",
        "environments",
        "infrastructure",
        "servers",
        "GIT",
        "Chef",
        "Amazon",
        "IAM",
        "access",
        "AWS",
        "resources",
        "users",
        "roles",
        "permissions",
        "users",
        "AWS",
        "IAM",
        "CloudFront",
        "content",
        "AWS",
        "edge",
        "locations",
        "users",
        "reduction",
        "load",
        "frontend",
        "servers",
        "Wrote",
        "python",
        "scripts",
        "deployments",
        "AWS",
        "Continuous",
        "Integration",
        "Management",
        "SaaS",
        "product",
        "development",
        "activities",
        "variety",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "SOFTWARE",
        "DEVELOPER",
        "ACCENTURE",
        "April",
        "November",
        "web",
        "applications",
        "Python",
        "Django",
        "customizations",
        "Data",
        "tables",
        "PySpark",
        "PyQT",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "libraries",
        "Python",
        "NumPy",
        "matplotlib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Managed",
        "Container",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "Jenkins",
        "testing",
        "integration",
        "deployment",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "GIT",
        "version",
        "control",
        "project",
        "AWS",
        "SQL",
        "Tables",
        "procedures",
        "views",
        "triggers",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "testing",
        "web",
        "application",
        "databases",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "XML",
        "web",
        "service",
        "AJAX",
        "request",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "Jenkins",
        "testing",
        "integration",
        "deployment",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "Education",
        "Masters"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:59:18.099219",
    "resume_data": "AWS DEVELOPER AWS span lDEVELOPERspan AWS DEVELOPER UNILEVER Los Angeles CA Over 5 years of professional experience as software professional industry comprising of delivery management design development deployment and cloud implementation with thorough knowledge in AWS Amazon Web Services Hybrid Cloud VMware virtualization Windows and related technologies Focused mainly on focus on Automating Building Deploying and Releasing of code using Amazon Web Services AWS in a DevOps through Continuous Integration CI Continuous DeploymentDelivery CD as an iterative process and Automation of Infrastructure as Code Experience in all Phases of Software Development Life Cycle SDLC Agile methodology and CICD pipeline Used SAM Serverless application model to deploy serverless applications into AWSenvironment Strong CloudFormation skills to automate the build Worked on YAML scripts to prepare the CloudFormation template Experience in automating application deployment in the cloud using Docker technology using Elastic Container Service and Code Build Experience in working with core AWS services like EC2 S3 Elastic Beanstalk Elastic Load balance EBS ECS ELB Autoscaling RDS CloudFront CloudWatch CloudTrail Lambda API Gateway S3 SQS SNS Route 53 IAM CloudFormation VPC ECS DynamoDB API Gateway Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Knowledge of other core AWS services like Elastic ache Kinesis SQS SNS SWF CLI etc Experience in project deployment using Google CloudJenkins Elastic Search and using web Services like Amazon Web Services AWS Expertise in DevOps Release Engineering Configuration Management Cloud Infrastructure Automation It includes Amazon Webservices AWS Ant Apache Maven Jenkins SVN GitHub Tomcat JBoss and Linux etc and work on source controller tools like GIT GITHUB Experienced in Branching Merging Tagging and maintaining the version across the environments using SCM tools like GIT on Linux platforms Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Developed a fully functional prototype application using JavaScript jQuery and Backbonejs and Bootstrap connecting to a REST service hosted on AWS using API Gateway and used DynamoDB Experienced in creating UserGroup Accounts Federated users and access management to UserGroup Accounts using AWS IAM service Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts Analytical skills with ability to capture minute details and an effective team player my strength lies in ability to interact with developers coordinate and manage the tasks assigned backed by strong technical knowledge Work Experience AWS DEVELOPER UNILEVER Los Angeles CA May 2018 to Present Assist in designing automating implementing and sustainment of Amazon machine images AMI across the AWS Cloud environment Worked on AWS API Gateway Rest APIs and NoSQL datastores like HBase Cassandra Created and modified Cloud Formation templates to createupgrade EC2 instances to support specific needs Used advanced features of Code Deploy to create hooks in the Appspec File during the deployment lifecycle to deploy applications to EC2 Lambda and ECS Involved deeply in writing YAML scripts in CloudFormation for AWS Automation Built a highly scalable AWS architecture using EC2RDSELBASG via cloud formation Used CloudFormation Helper scripts to automatically install configure and start applications on Amazon EC2 instances Used SAM Serverless Application Model to deploy serverless applications into AWS environment Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Knowledge of creating highly scalable and reliable AWS environment Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Created Buckets in AWS and stored files Enabled Versioning and security for the files stored Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Configured S3 buckets with various life cycle policies to archive the infrequently accessed data to storage classes based on requirement Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Used AWS created and queried data using DynamoDB and created a Web interface allowing users to dynamically Knowledge of security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Created and configured elastic load balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Worked on ECS Elastic container service to deploy docker images in AWS environment Worked on keeping up and looking at log archives using monitoring tools like Splunk CloudWatch Configured the Cloud Trial on the AWS console and created the Cloud watch events to receive SNS Notifications when someone terminates the EC2 instance Developed multiple chef cookbooks from scratch Developed API for using AWS Lambda to manage the servers and run the code in the Postgres DB Worked on standard python packages like boto and boto3 for AWS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Production support and have knowledge of deployment using AWS Heroku and Jenkins Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed Ubuntu Linux and Windows virtual servers on AWSEC2 using Puppet Implemented Chef Cookbooks for OS component configuration to keep AWS servers template minimal Managed and automated all aspects of our AWS infrastructure compute storage network permissions cost using configuration management tools like Ansible Cloud Formation and shell scripts PYTHONAWS DEVELOPER JANRURY Los Gatos CA 2017 to March 2018 AWS Cloud management and Chef automation Worked on Infrastructure Development and Operations involved in designing and deploying utilizing almost all the AWS stack like EC2 EBS S3 VPC LDAP VPN RDS SES ELB Autoscaling CloudFront CloudFormation Elastic beanstalk CloudWatch SNS Route 53 LDAP VPN Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer VPC Auto scaling groups Implementing a Continuous Delivery framework using Jenkins Jfrog Maven Nexus in Linux Environment Using Jenkins AWS Code Deploy plugin to deploy into AWS Allotted permissions policies and roles to users and groups using AWS Identity and Access Management IAM Worked on AWS EC2 EBS ELB scaling groups Trusted Advisor S3 Cloud Watch CloudFront IAM Security Groups AutoScaling Used Amazon S3 to backup database instances periodically to save snapshots of data Writing AWS Terraform templates for any automation requirements in AWS services Created database objects in AWS Redshift Followed AWS best practices to convert data types from oracle to redshift Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Supported application deployment in IAAS Cloud platforms like Rackspace AWS and Google Compute engine and was responsible for resource planning of various virtual compute engines Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Migrated applications to the AWS cloud Environment Proficient in working on with REST and SOAP Web Services handling XML and JSON data Developed a modular API for minibot and interchangeable modules for Raspberry Pi Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used JSON based and RESTful API for information extraction Developed supporting data analysis projects using Elastic Map Reduce on the Amazon Web Services AWS cloud Developed project to interface with extensive database via cloudbased API utilizing GitHub AWSRDS servers and continuous integration with Codeship Developed remote integration with third party platforms by using RESTful web services Automated Regression analysis for determining fund returns based on index returns PythonExcel Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Analyzed current legacy infrastructure established business case and build consensus for virtualized IaaS PaaS near term strategy with SaaS mobile cloud services end state Used Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Worked in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Developed data modeling for analytics by building queries using MapReduce pymongomongo dB and implementing for visualization using Elastic search Kibana and Logstash on Apache server FINRA WASHINGTON SOFTWARE DEVELOPER FEBRURY 2014 to December 2015 Create the AWS Code pipeline AWS Code Commit AWS Code Build and AWS Code Deploy services to build and deployment process Understanding of secure cloud configuration Cloud Trail AWS Configuration cloudsecurity Technologies VPC Security Groups etc and cloudpermission systems IAM Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Deployed JSON template to create a stack in Cloud Formation which include services like Amazon EC2 Amazon S3 Amazon RDS Amazon Elastic Load Balancing Amazon VPC SQS and other services of the AWS infrastructure Used Identify and Access Management IAM to assign roles and to create and manage AWS users and groups and user permissions to AWS resources Working with best DevOps practices using AWS Elastic Beanstalk and Docker with Kubernetes Wrote Chef Recipes for various applications and deployed them in AWS using Terraform Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Automated the cloud deployments using chef python and AWS Cloud Formation Templates Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Have implemented chef provisioning for creation of on demand instances and instance infrastructure using the chefclient and bootstrapping using plugins against AWS EC2 Dynamically add and remove servers from AWS production environment Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Develop applications that use MongoDB database and PyMongo Identifying distribution and packaging mechanism for the python package of the solution Working on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Created alarms and trigger points in Cloud Watch based on thresholds and monitored logs via metric filters Designed AWS Cloud Formation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group Auto Scaling and RDS in CloudFormation JSON templates Manage AWS EC2 instances utilizing Auto Scaling Elastic Load Balancing and Glacier for our QA and UAT environments as well as infrastructure servers for GIT and Chef Used Amazon IAM to grant fine access of AWS resources to users Also managed roles and permissions of users to AWS account through IAM Used CloudFront to deliver content from AWS edge locations to users allowing for further reduction of load on frontend servers Wrote python scripts for deployments on AWS and Continuous Integration provisioning Management of SaaS product development activities using a variety of services such as Amazon Web Services AWS SOFTWARE DEVELOPER ACCENTURE IN April 2011 to November 2013 Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created RESTful APIs calls with server parse output report of excel files Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Designed RESTful XML web service for handling AJAX request Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Education Masters",
    "unique_id": "e6d06c4f-c4a4-46df-b6e2-160265041bae"
}