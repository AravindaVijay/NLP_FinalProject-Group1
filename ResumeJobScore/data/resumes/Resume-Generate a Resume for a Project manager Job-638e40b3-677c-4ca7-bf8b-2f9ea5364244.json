{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Charter Communication Maryland Heights MO Over 8 years of IT experience in Analysis Design Development and implementation of software applications using JavaJ2EE technologies Experienced in developing front end applications using HTML HTML5 XML XHTML DHTML CSS CSS3 Bootstrap SAAS JavaScript DOM jQuery Ajax JSON and JSP Experience on working with CSS Backgrounds CSS Layouts CSS Positioning CSS Animations CSS Text CSS Borders CSS Padding CSS Table Pseudo Classes and Pseudo Elements Strong experience in XML related technologies including XSD DTD XSLT XPATH DOM SAX JAXP JAXB XMLRPC and XML Beans Strong Experience in JavaScript MVC design pattern such as Angular JS Backbone JS and Ember JS Knockoutjs Designed and Developed MVVM design pattern Various Angular 2040 Components ngModules Services observablepromises Directive and Pipes Proficient with Typescript ES6 new features block scope type restrictions decorators arrow functions classes interfaces modules import and exports Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Expertise in building serverside java script framework using Node Express JS HapiJS Good Experience in using of Java Script build tools and task runners like Web pack for React and Angular 2040 Grunt Gulp for Angular 10 Browserify for packaging Node JS modules for browsers Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular Mocha and Chai for react Strong expertise in Object oriented concepts such as collections Generics file operations multithreading concurrent collection framework and core java concept Experience in java8 features like Parallel Streams Lambdas functional interfaces and filters Extensive experience in developing scalable reliable and efficient javaj2ee enterprise applications using Spring Struts Servlets and JSF Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring DAO Spring Batch Spring Web Flow Spring Security Spring AOP and Spring Boot Expertise in developing Microservices using spring boot and node is to build more physically separated modular applications which will improve scalability availability and agility of application Good experience in creating sites that have Single Sign On using CAS and Spring Security Developed Stub projects for WSDL and WADL using Apache CXF and implemented SOAP services using Axis2 and Apache CXF Extensive Knowledge of XML based standards and implementation of SOAP and REST web services using JAXRS JAXWS and Jersey Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL databases like Mongo DB and Cassandra Experience in writing complex SQL Queries Stored Procedures Triggers Cursors and Functions Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Solid Experience with Java based ORM frameworks such as Hibernate JPA Spring Data and IBATIS and worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experienced in developing webapplications using various design patterns including session facade MVC Data Access Object Singleton and Factory Pattern Good Experience on JMS MQs like Apache Kafka Rabbit MQ IBM MQ and Active MQ for communicate between sender and listener Hands on experience with build tools like ANT Maven Graddle Expertise in testing with JUnit using tools like JMeter Mockito Easy Mock Worked on Web Services testing using Selenium IDE and Selenium RC Server Selenium GridWeb Driver Testing Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience using json web tokensjwt to securely communicate between two json objects In depth and extensive knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view and measure application events using Elastic search Knowledge on implementing Spring Cloud Netflix OSS Stack and Hystix Circuit Breaker Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource nusage and implemented security functionality OAuth 20 Spring security SSL and site minderSSO Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Good knowledge in using Amazon Web Services Amazon EC2 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS and AWS Identity Knowledge on kubernates to deploy on container applications Experience in Build and deployment automation through tools like Jenkins Bamboo for CDCI Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Work Experience Full Stack Developer Charter Communication Maryland Heights MO January 2017 to Present Description John Deere is an American corporation that manufactures agricultural construction and forestry machinery diesel engines drive trains used in heavy equipment and lawn care equipment My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Involved in designing and developing the web application by using HTML5 CSS3 SAAS and Reactjs Worked with Reactjs Virtual DOM and React views rendering using components Constructed a responsive and crossbrowser compatible clientside UI using Reactjs Used ReactRouter to handle page routing and turn the application into Single Page Application Implemented concept of Presentational Components and Container Components Built forms with reactform library and checked validity with reactvalidation library and used Babel plugin tool for conversion of ECMA versions to support all type of browsers Integrated Redux data store allowing React components to have access to data resulting in highly maintainable code Used Node Package Manager NPM to manage packages and libraries Responsible for React UI architecture Building components library including Tree SlideView and Table Grid Used Angular 4 Reactive forms to implement complex forms and performed the validations using Form Builder Created Single Page Application with the help of Angular4 Router Module and used template routing for bread crumb Developed the Angular components using Typescript and ES6 Helpful operators Injected Angular4 builtin http service to custom services to communicate with backend with RESTful APIs and Used Pipes to format and sort data displayed in the templates Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed RESTful service interface using Spring Boot to the underlying Agent Services API and Implemented RESTful web services Created and managed microservices using Spring Boot Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Developed Rest services by implementing JAX RS using jersey framework Extensively worked on Spring REST for creating REST APIs services with Spring Boot to modularize code and used Spring Data to access data from MYSQL Used spring Boot properties like actuators and health checkers to enhance micro service implementations Used spring transaction manager to support declarative transaction management Using Swagger Framework implementing the Restful API and Swagger gives the rich UI to test API Developed REST API services using NodeJS ExpressJS BodyParse and other node modules to serve the web application with JSON data Developed NodeJS Readable and Writable streams to process the data from the external source of the application Designed and developed queries using SQL and named queries criterion APIs and create oneto one and oneto many relationships using Hibernate and created hibernate mapping files Installed configured and administration of NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL data base Cassandra Used a highly durable messaging system called Apache Kafka for asynchronous exchange of vital information between multiple business applications Performs UNIT testing with Junit and for JavaScript framework using Mocha and chai Used java script build tools to bundle the application through web pack Installed the application on AWS EC2 instances and configured the storage on S3 buckets Created AWS Lambda functions for AWS config rules using Nodejs and Heavily Used Lambda function on text object methods Context object properties using Nodejs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Virtualized the servers on AWS using the Docker created the Docker files and version control built various containers using Docker engine and Docker Machine environments to deploy the microservices oriented environments for scalable applications Creating managing and performing containerbased deployments using Docker images containing Middleware and applications together Design and Built Generic Playbooks to remotely configure the microservices on kubernates and Used Kubernetes as the monitoring tool for health check of the servers Extensively used GIT for version controlling and regularly pushed the code to GitHub Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Angular 40 git Spring Boot Spring IOC Node JS Express JS NPM Grunt Babel ckan dkan Web pack Docker AWS Docker Apache Kafka RESTful JAXRS Swagger GIT Jenkins MySQL NoSQL Cassandra DB Mocha Chai Sr software developer Nas Insurance Atlanta GA July 2015 to December 2016 Description Nas Insurance is a uniquely innovative insurance solution to address emerging risks and fill gaps in standard coverage which is in Atlanta Georgia I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering analysis design documentation development test cases implementing and production support of the application Involved in designing and developing the application using Angular 2 Bootstrap HTML5 and CSS3 Implemented Routing Imperative Routing and guards with the help of Angular20 route module Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked with React JS to build Bootstrap components for responsive UI Objects and linked with API data to view render the virtual DOM dynamically Implemented Redux Store and React State for serverside rendering and refactoring Reducer logic using functional decomposition and Reducer Composition Elegantly used ReactRouter techniques Axios service to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Used NodeJS for processing the incoming data in each level and generate a document and save it to MongoDB Worked with NPM commands and using Packagejson for managing dependencies and devdependencies of Nodejs applications Created and consumed RESTful API using Hapijs to provide centralized logic and reusable data retrieval build on top of Nodejs Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node js Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Used popular Nodejs frameworks like Express and Restify to create a Restful Mock API Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Designed and developed RESTFUL web services using Spring Boot and Jersey framework Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Extensively Implemented Spring boot dependency Injection DI and aspectoriented programming AOP features Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for websites logins using Spring Social Module Implemented Single Sign On and policybased authentication using Site Minder security framework Performs UNIT testing with Jasmine and Karma Used Log4j to print logging debugging warning and info on server console Debugged the MAVEN scripts for building entire web application Implemented Cucumber for behavioral testing of application Used build tools to bundle the application through Grunt and Gulp Responsible for building Next generation architecture platform development built on top of Netflix OSS Spring Cloud and Pivotal Cloud Foundry PCF This framework is responsible to provide a security gateway authentication authorization of apis session management in a distributed system multi factor authentication content management service discovery log aggregation config repository Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Installed Pivotal Cloud Foundry PCF on EC2 to manage the containers created by Pivotal Cloud Foundry PCF Implemented micro services in Pivotal Cloud Foundry PCF and move development application from Docker containers deploy into production Cloud Foundry environment Implemented Spring Cloud Netflix ZUUL for building microservices to communicate with each other Environment HTML5 XML CSS3 LESS JSON JavaScript Angular JS Bootstrap Maven Spring Boot Hibernate MySQL Eclipse RESTful AJAX JSON Node JS Express JS AWS Restful API JAXRS Gulp NPM Apache Kafka GitHub NoSQL MongoDB Jasmine karma Selenium Pivotal cloud Docker Spring cloud Sr Java Developer Arvest Bank Bentonville AR April 2014 to June 2015 Description Arvest Bank is an American multinational banking and financial services holding company which is headquartered in Lowell AR Arvest Bank is the largest bank in deposit home mortgage servicing and debit cards My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Developed customer facing software for managing advertisements to grow the business using Backbonejs JavaScriptjQuery HTML CSS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries Enhanced user experience by designing new web features using MVC Framework like Backbonejs Used BackboneStickIt to relieve the burden of modelview synchronization in Backbone JS Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Exposed Stateless session beans as RESTful web services using JAXRS Used JAXRS REST for producing web services and involved in writing clients to consume the web services with Apache CXF framework Developed Application to access JSON from Rest API web service from client side using JavaScript and Backbone JS Worked on persistence layer using Hibernate with Oracle 10g Database Build PLSQL functions stored procedures views and configured Oracle Database 10g with JDBC data source with connection pooling enabled RabbitMQ is used for asynchronous messaging decoupling applications by separating sending and receiving data over the applications For testing we used JUNIT and for JavaScript unit testing Mocha and chai are the tools we used Used Maven for building the application and used GIT for version control Worked with Jenkins Continuous Integration and Continuous Deployment CICD Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Environment HTML CSS JSON JavaScript jQuery Backbone JS Ember JS Node JS Bootstrap Maven iBATIS Oracle Spring MVC Spring Batch Spring AOP Eclipse RESTful AJAX Restful API Gulp NPM bower RabbitMQ GitHub NoSQL Mongo DB Junit Mockito Mocha chai Selenium Sr JavaJ2EE Developer Humana Health Care Louisville KY September 2013 to March 2014 Description Humana Inc is a forprofit American health insurance company based in Louisville Kentucky It markets and administers health insurance for about 11 million customers I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Developed front end for the entire website using HTML CSS and JavaScript Converted raw images and layouts from a graphic designer into CSSHTML themes Implemented clientside validations in registration forms login and logout forms using Java Script Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and autocomplete form validations Used jQuery for interaction between JavaScript and HTML Responsible for clientside validations and serve side validations in JSP Involved in Enhancement of existing application utilizing JSP Developed automated scripts in shell to ensure daily batch completion and Post batch activities before releasing the report to the clients All the validations are done by JSF components inbuilt validations and through JavaScript Created views using components of Prime Faces in XHTML files and configured JSF framework Used Prime Faces to analyze the missing features and quickly fix the bugs Worked in all the modules of the application which involved frontend presentation logic developed using Tiles with Spring MVC JSP JSTL and java script Business objects developed using POJOs and data access layer using Hibernate framework Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security Involved in integrating WebSphere Portal Server with WebSphere Process Server involving SOAP Web Services WSSecurity using JaxWS Involved in development of SOAP web services using Apache Axis 2 to extract data from databases and allowed communication between applications through SOAP Over HTTP using Apache Axis 2 Implemented persistence layer between the database and service layers with IBATIS ORM Performed unit testing using JUNIT framework and tested Business Services Experience in working with open source tools Selenium Selenium IDE Selenium RC Selenium Web Driver and preparation of automation test framework Used Jenkins for continuous deployment and integration of the build and release process Used Drools rules engine for defining business rules and Validations Used ANT for automated build and deployment on IBM WebSphere Used SVN version control to track and maintain the different version of the project Environment HTML DHTML CSS Bootstrap JSON JavaScript jQuery JSP JSTL Maven JPA ORACLE SQL PLSQL JSF Spring Batch Spring AOP Linux IBM WebSphere SOAP JAXWS Prime Faces RabbitMQ Junit Jenkins Selenium SVN Jr Application Developer John Deere Moline IL August 2011 to August 2013 Description Sales Automation is software to automate the business tasks of sales including order processing contact management information sharing inventory monitoring and control order tracking customer management sales forecast analysis and employee performance evaluation Responsibilities Part of planning sessions with team members to analyze requirements Outlined proposed and coded the proposed solutions Worked on developing Use Cases Class Diagrams Sequence diagrams and Data Models Developed the web application using JSF framework with user interfaces using JSP HTML and CSS Also used JSF validation framework for frontend validations used DOJo toolkit to construct Ajax requests and build dynamic webpages using JSP DHTML and java scripts Implemented Multithreading for handling multiple requests and for high performance Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Configuring Action Mappings in Strutsconfigxml Extensively involved in the development of Web Services interface to workflow system to facilitate setting up of customer s modem Clientserver validations were handled using Struts Validator Frameworks validate plugin Developed the bean the business method interfaces and the DAO for the workflow Web Services framework Developed applications which access the database with JDBC to execute queries prepared statements and procedures Developed programs to manipulate the data and perform CRUD operations on request to the database Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database and Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Used JUNIT for unit level testing Used Log4J for logging the user events Environment Java J2EE AJAX Struts SOAP plsql multithreading jsf HTML XML JSP JDBC ANT XML Tomcat JUNIT DB2 Eclipse GIT Log4J WebLogic Dojo Java Developer SKF Bearings Bengaluru Karnataka May 2010 to July 2011 Description OPEN SESAME is a web based collaborative ebusiness platform connecting to all constituents of sales and distribution chain management systems with a modular architecture OPEN SESAME automates large businesses comprising of finished goods Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in developing the business components and responsible for developing the user interfaces using JSPs Primarily focused on the spring components such as action Servlets actions Model and View Objects View Resolver Created several JSP pages as common library that included in the other pages as standard modules like Portlets Developed JSP with Struts custom tags and implemented JavaScript validation of data Used JavaScript for the web page validation and Struts Validator for serverside validation Used EJB 30 Session beans using JBOSS Seam Context Management Application Conversation Session scopes and implemented Business processes such as user authentication Transfer of Service using Session EJBs Wrote the high performance multithreaded Java code using singleton mediator visitor facade observer template factory and publish and subscribe design pattern Used various Core Java concepts such as Exception Handling Collection APIs to implement various features and enhancements Coded JDBC calls in the Servlets to access the SQL Server database tables Used SQL and PLSQL queries to perform database operations on Web Sphere Created stored procedures and database scripts to populate database tables Experience deploying code on Web Sphere server Extensively used XML to code configuration files Used ANT to build run and create JARs and WAR files among other uses Developed test cases by using TestNG for unit testing for each module developed in test driven development Used Log4j to provide central logging facility and worked on SVN as version control system on dayto day basis to maintain the code history Followed Waterfall methodology for development process Environment J2EE JSP Servlets EJB JDBC DB2 PLSQL WebSphere IBM MQ SOAP UML HTML CSS JavaScript CVS and Linuxs Log4j Education Bachelor of Technology in Electronics communication Engineering Gitam University Skills TESTING 8 years AJAX 6 years JAX 6 years WEB SERVICES 6 years JAVA 6 years Javascript PHP Node React Angular NET AWS Python C Angularjs Additional Information TECHNICAL SKILLS LANGUAGE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB WEB TECHNOLOGIES HTMLDHTML XHTML CSS XML XSD WSDL DTD DOMSAX J2EE DESIGN PATTERN FRAMEWORKS STRUTS SPRING HIBERNATE iBATIS JSF IDES ECLIPSE NET BEANS BEA WEB LOGIC WORKSHOP IBM RAD WEB SERVICES JAXWS SOAP WSDL APACHE AXIS IBM MQ WEBSERVICE TOOLS TCP MONITOR SOAP UI HTTP MONITOR SECURE CRT APPLICATION SERVERS BEA WEBLOGIC IBM WAS JBOSS APACHE TOMCAT DATABASES MYSQL ORACLE SQL SERVER NOSQL mongo Cassandra SCRIPTING LANGUAGE JAVASCRIPT AJAX Shell Script TOOLS BUILD ANT MAVEN MAVEN2 LOGGINGLOG4J VERSION CONTROL CVS SVN CLEAR CASE SURROUND TESTING JIIRA JUNIT JMETER JQUERY CLEAR QUEST MONITORING SPLUNK GOMEZ TRAFFIC ROUTING Big F5 OPERATING SYSTEMS WINDOWS 2000 WINDOWS XP WINDOWS VISTA WINDOWS 7 UNIX LINUX AIX",
    "entities": [
        "Prime Faces",
        "Micro Services",
        "Oracle SQL Server",
        "Portlets Developed JSP",
        "Spring MVC JSP JSTL",
        "Docker Engine Hub Machine Compose",
        "JS Express",
        "Nodejs",
        "Relational",
        "Strutsconfigxml",
        "Jersey Excellent",
        "JBOSS Seam Context Management Application Conversation Session",
        "AIX",
        "Sphere Created",
        "JS Bootstrap",
        "Georgia",
        "Followed Waterfall",
        "Drools Rule Engines",
        "Jersey",
        "JMeter Mockito Easy Mock Worked",
        "IBM",
        "Node Package",
        "Ajax",
        "Hibernate JPA Spring Data",
        "node",
        "Louisville",
        "Created Typescript",
        "XML",
        "ORACLE SQL",
        "Atlanta",
        "Componentbased",
        "OAuth",
        "Nodejs Worked",
        "JAXWS",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "NodeJS",
        "Directive and Pipes Proficient",
        "MQ IBM",
        "Installed Pivotal Cloud Foundry PCF",
        "JSP Involved",
        "MVC Data Access Object Singleton",
        "JavaJ2EE",
        "Spring Boot",
        "ReactRouter",
        "Transfer of Service",
        "Model and View Objects View Resolver Created",
        "Development of Action Forms Action Servlets Action",
        "SQL Server",
        "Stack and Hystix Circuit",
        "Implemented Cross",
        "Developed",
        "ECMA",
        "Middleware",
        "CSS3 Implemented Routing Imperative Routing",
        "Responsibilities Involved",
        "Spring",
        "XMLRPC",
        "Pivotal Functional Service",
        "CAS",
        "Amazon Simple DB",
        "AWS Identity Knowledge",
        "Selenium IDE and",
        "WebSphere IBM",
        "Selenium Selenium IDE Selenium RC Selenium Web Driver",
        "JSP",
        "Ember",
        "Continuous Deployment CICD Virtualized",
        "Hibernate with Oracle",
        "Nas Insurance",
        "Worked",
        "Node Express",
        "IOC",
        "Docker",
        "DOM",
        "SESAME",
        "SSL",
        "Used Prime Faces",
        "Views",
        "Description Arvest Bank",
        "Oracle Database",
        "MVC",
        "Jenkins Continuous Integration",
        "Redux",
        "Use Cases Class Diagrams Sequence",
        "Maryland",
        "GIT",
        "JQUERY JSON AJAX",
        "EJB",
        "BRMS Business Rules Management System",
        "HTML CSS",
        "API",
        "WebSphere Process Server",
        "Spring Data",
        "JUnit Involved",
        "Kentucky",
        "Exception Handling Collection",
        "Splunk Development Configuration and Administration",
        "Drools",
        "Created",
        "BEA WEBLOGIC",
        "AOP",
        "AWS",
        "Perl",
        "JSF",
        "modem Clientserver",
        "Spring MVC Framework IOC Inversion",
        "Netflix Zuul Api Gateway",
        "Oracle Spring",
        "Spring Security Involved",
        "React JS",
        "Hystrix Circuit Breaker",
        "MVC Framework",
        "ANT Maven Graddle Expertise",
        "Netflix",
        "Equipment Financing",
        "SOAP Web Services WSSecurity",
        "UI Objects",
        "Reducer Composition Elegantly",
        "RESTFUL",
        "SQL",
        "Form Builder Created Single Page Application",
        "Used Kubernetes",
        "DOM SAX JAXP",
        "Amazon Web Services",
        "Bootstrap",
        "Axis2",
        "MAVEN",
        "Pivotal Cloud Foundry PCF Implemented",
        "NPM",
        "Deploying and Configuring Application Web Servers",
        "Injection DI",
        "JavaScript Unit",
        "MO",
        "Business Services",
        "Analysis Design Development",
        "JaxWS Involved",
        "Typescript",
        "JUNIT",
        "JDBC",
        "Selenium RC Server Selenium",
        "XHTML",
        "SQS",
        "Business Customers",
        "Flux",
        "JAXRS JAXWS",
        "Oracle WebLogic IBM",
        "Pivotal Application Service Pivotal Container Service",
        "Babel",
        "Responsible for React UI",
        "CRUD",
        "WEB SERVICES JAXWS SOAP WSDL APACHE AXIS",
        "Build",
        "Maven",
        "JavaScript Created",
        "WebSphere Portal Server",
        "Site Minder",
        "HTML Responsible",
        "Hapijs",
        "Data Models Developed",
        "JavaScript",
        "ANT",
        "TestNG",
        "GitHub Environment HTML5",
        "UI",
        "XSD",
        "Docker Machine",
        "Cursor",
        "Angular20",
        "SVN",
        "Backbonejs JavaScriptjQuery HTML CSS",
        "Continuous Deployment CICD Implemented Drools Business Logic Integration Platform",
        "CSS Backgrounds",
        "Created AWS Lambda",
        "Pivotal Cloud Foundry PCF",
        "Description Humana Inc",
        "CSS",
        "WORKSHOP IBM RAD",
        "Mongoose Connector",
        "IBATIS",
        "API Developed REST API",
        "jQuery",
        "Tree SlideView and Table Grid Used Angular 4 Reactive",
        "Presentational Components",
        "REST",
        "Spring Social Module Implemented Single Sign On",
        "the Spring Modules",
        "Ribbon Hystrix",
        "Used Express",
        "GitHub NoSQL Mongo DB",
        "NoSQL",
        "Bootstrap Maven",
        "Selenium Sr JavaJ2EE Developer Humana Health",
        "HTML XML JSP JDBC ANT XML Tomcat JUNIT DB2",
        "Nodejs Developed",
        "Packagejson",
        "Lowell AR Arvest Bank",
        "Single Page Application",
        "Developed NodeJS Readable and Writable",
        "Responsibilities Performed",
        "Node"
    ],
    "experience": "Experience on working with CSS Backgrounds CSS Layouts CSS Positioning CSS Animations CSS Text CSS Borders CSS Padding CSS Table Pseudo Classes and Pseudo Elements Strong experience in XML related technologies including XSD DTD XSLT XPATH DOM SAX JAXP JAXB XMLRPC and XML Beans Strong Experience in JavaScript MVC design pattern such as Angular JS Backbone JS and Ember JS Knockoutjs Designed and Developed MVVM design pattern Various Angular 2040 Components ngModules Services observablepromises Directive and Pipes Proficient with Typescript ES6 new features block scope type restrictions decorators arrow functions classes interfaces modules import and exports Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Expertise in building serverside java script framework using Node Express JS HapiJS Good Experience in using of Java Script build tools and task runners like Web pack for React and Angular 2040 Grunt Gulp for Angular 10 Browserify for packaging Node JS modules for browsers Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular Mocha and Chai for react Strong expertise in Object oriented concepts such as collections Generics file operations multithreading concurrent collection framework and core java concept Experience in java8 features like Parallel Streams Lambdas functional interfaces and filters Extensive experience in developing scalable reliable and efficient javaj2ee enterprise applications using Spring Struts Servlets and JSF Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring DAO Spring Batch Spring Web Flow Spring Security Spring AOP and Spring Boot Expertise in developing Microservices using spring boot and node is to build more physically separated modular applications which will improve scalability availability and agility of application Good experience in creating sites that have Single Sign On using CAS and Spring Security Developed Stub projects for WSDL and WADL using Apache CXF and implemented SOAP services using Axis2 and Apache CXF Extensive Knowledge of XML based standards and implementation of SOAP and REST web services using JAXRS JAXWS and Jersey Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL databases like Mongo DB and Cassandra Experience in writing complex SQL Queries Stored Procedures Triggers Cursors and Functions Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Solid Experience with Java based ORM frameworks such as Hibernate JPA Spring Data and IBATIS and worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experienced in developing webapplications using various design patterns including session facade MVC Data Access Object Singleton and Factory Pattern Good Experience on JMS MQs like Apache Kafka Rabbit MQ IBM MQ and Active MQ for communicate between sender and listener Hands on experience with build tools like ANT Maven Graddle Expertise in testing with JUnit using tools like JMeter Mockito Easy Mock Worked on Web Services testing using Selenium IDE and Selenium RC Server Selenium GridWeb Driver Testing Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience using json web tokensjwt to securely communicate between two json objects In depth and extensive knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view and measure application events using Elastic search Knowledge on implementing Spring Cloud Netflix OSS Stack and Hystix Circuit Breaker Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource nusage and implemented security functionality OAuth 20 Spring security SSL and site minderSSO Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Good knowledge in using Amazon Web Services Amazon EC2 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS and AWS Identity Knowledge on kubernates to deploy on container applications Experience in Build and deployment automation through tools like Jenkins Bamboo for CDCI Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Work Experience Full Stack Developer Charter Communication Maryland Heights MO January 2017 to Present Description John Deere is an American corporation that manufactures agricultural construction and forestry machinery diesel engines drive trains used in heavy equipment and lawn care equipment My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Involved in designing and developing the web application by using HTML5 CSS3 SAAS and Reactjs Worked with Reactjs Virtual DOM and React views rendering using components Constructed a responsive and crossbrowser compatible clientside UI using Reactjs Used ReactRouter to handle page routing and turn the application into Single Page Application Implemented concept of Presentational Components and Container Components Built forms with reactform library and checked validity with reactvalidation library and used Babel plugin tool for conversion of ECMA versions to support all type of browsers Integrated Redux data store allowing React components to have access to data resulting in highly maintainable code Used Node Package Manager NPM to manage packages and libraries Responsible for React UI architecture Building components library including Tree SlideView and Table Grid Used Angular 4 Reactive forms to implement complex forms and performed the validations using Form Builder Created Single Page Application with the help of Angular4 Router Module and used template routing for bread crumb Developed the Angular components using Typescript and ES6 Helpful operators Injected Angular4 builtin http service to custom services to communicate with backend with RESTful APIs and Used Pipes to format and sort data displayed in the templates Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed RESTful service interface using Spring Boot to the underlying Agent Services API and Implemented RESTful web services Created and managed microservices using Spring Boot Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Developed Rest services by implementing JAX RS using jersey framework Extensively worked on Spring REST for creating REST APIs services with Spring Boot to modularize code and used Spring Data to access data from MYSQL Used spring Boot properties like actuators and health checkers to enhance micro service implementations Used spring transaction manager to support declarative transaction management Using Swagger Framework implementing the Restful API and Swagger gives the rich UI to test API Developed REST API services using NodeJS ExpressJS BodyParse and other node modules to serve the web application with JSON data Developed NodeJS Readable and Writable streams to process the data from the external source of the application Designed and developed queries using SQL and named queries criterion APIs and create oneto one and oneto many relationships using Hibernate and created hibernate mapping files Installed configured and administration of NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL data base Cassandra Used a highly durable messaging system called Apache Kafka for asynchronous exchange of vital information between multiple business applications Performs UNIT testing with Junit and for JavaScript framework using Mocha and chai Used java script build tools to bundle the application through web pack Installed the application on AWS EC2 instances and configured the storage on S3 buckets Created AWS Lambda functions for AWS config rules using Nodejs and Heavily Used Lambda function on text object methods Context object properties using Nodejs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Virtualized the servers on AWS using the Docker created the Docker files and version control built various containers using Docker engine and Docker Machine environments to deploy the microservices oriented environments for scalable applications Creating managing and performing containerbased deployments using Docker images containing Middleware and applications together Design and Built Generic Playbooks to remotely configure the microservices on kubernates and Used Kubernetes as the monitoring tool for health check of the servers Extensively used GIT for version controlling and regularly pushed the code to GitHub Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Angular 40 git Spring Boot Spring IOC Node JS Express JS NPM Grunt Babel ckan dkan Web pack Docker AWS Docker Apache Kafka RESTful JAXRS Swagger GIT Jenkins MySQL NoSQL Cassandra DB Mocha Chai Sr software developer Nas Insurance Atlanta GA July 2015 to December 2016 Description Nas Insurance is a uniquely innovative insurance solution to address emerging risks and fill gaps in standard coverage which is in Atlanta Georgia I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering analysis design documentation development test cases implementing and production support of the application Involved in designing and developing the application using Angular 2 Bootstrap HTML5 and CSS3 Implemented Routing Imperative Routing and guards with the help of Angular20 route module Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked with React JS to build Bootstrap components for responsive UI Objects and linked with API data to view render the virtual DOM dynamically Implemented Redux Store and React State for serverside rendering and refactoring Reducer logic using functional decomposition and Reducer Composition Elegantly used ReactRouter techniques Axios service to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Used NodeJS for processing the incoming data in each level and generate a document and save it to MongoDB Worked with NPM commands and using Packagejson for managing dependencies and devdependencies of Nodejs applications Created and consumed RESTful API using Hapijs to provide centralized logic and reusable data retrieval build on top of Nodejs Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node js Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Used popular Nodejs frameworks like Express and Restify to create a Restful Mock API Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Designed and developed RESTFUL web services using Spring Boot and Jersey framework Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Extensively Implemented Spring boot dependency Injection DI and aspectoriented programming AOP features Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for websites logins using Spring Social Module Implemented Single Sign On and policybased authentication using Site Minder security framework Performs UNIT testing with Jasmine and Karma Used Log4j to print logging debugging warning and info on server console Debugged the MAVEN scripts for building entire web application Implemented Cucumber for behavioral testing of application Used build tools to bundle the application through Grunt and Gulp Responsible for building Next generation architecture platform development built on top of Netflix OSS Spring Cloud and Pivotal Cloud Foundry PCF This framework is responsible to provide a security gateway authentication authorization of apis session management in a distributed system multi factor authentication content management service discovery log aggregation config repository Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Installed Pivotal Cloud Foundry PCF on EC2 to manage the containers created by Pivotal Cloud Foundry PCF Implemented micro services in Pivotal Cloud Foundry PCF and move development application from Docker containers deploy into production Cloud Foundry environment Implemented Spring Cloud Netflix ZUUL for building microservices to communicate with each other Environment HTML5 XML CSS3 LESS JSON JavaScript Angular JS Bootstrap Maven Spring Boot Hibernate MySQL Eclipse RESTful AJAX JSON Node JS Express JS AWS Restful API JAXRS Gulp NPM Apache Kafka GitHub NoSQL MongoDB Jasmine karma Selenium Pivotal cloud Docker Spring cloud Sr Java Developer Arvest Bank Bentonville AR April 2014 to June 2015 Description Arvest Bank is an American multinational banking and financial services holding company which is headquartered in Lowell AR Arvest Bank is the largest bank in deposit home mortgage servicing and debit cards My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Developed customer facing software for managing advertisements to grow the business using Backbonejs JavaScriptjQuery HTML CSS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries Enhanced user experience by designing new web features using MVC Framework like Backbonejs Used BackboneStickIt to relieve the burden of modelview synchronization in Backbone JS Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Exposed Stateless session beans as RESTful web services using JAXRS Used JAXRS REST for producing web services and involved in writing clients to consume the web services with Apache CXF framework Developed Application to access JSON from Rest API web service from client side using JavaScript and Backbone JS Worked on persistence layer using Hibernate with Oracle 10 g Database Build PLSQL functions stored procedures views and configured Oracle Database 10 g with JDBC data source with connection pooling enabled RabbitMQ is used for asynchronous messaging decoupling applications by separating sending and receiving data over the applications For testing we used JUNIT and for JavaScript unit testing Mocha and chai are the tools we used Used Maven for building the application and used GIT for version control Worked with Jenkins Continuous Integration and Continuous Deployment CICD Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Environment HTML CSS JSON JavaScript jQuery Backbone JS Ember JS Node JS Bootstrap Maven iBATIS Oracle Spring MVC Spring Batch Spring AOP Eclipse RESTful AJAX Restful API Gulp NPM bower RabbitMQ GitHub NoSQL Mongo DB Junit Mockito Mocha chai Selenium Sr JavaJ2EE Developer Humana Health Care Louisville KY September 2013 to March 2014 Description Humana Inc is a forprofit American health insurance company based in Louisville Kentucky It markets and administers health insurance for about 11 million customers I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Developed front end for the entire website using HTML CSS and JavaScript Converted raw images and layouts from a graphic designer into CSSHTML themes Implemented clientside validations in registration forms login and logout forms using Java Script Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and autocomplete form validations Used jQuery for interaction between JavaScript and HTML Responsible for clientside validations and serve side validations in JSP Involved in Enhancement of existing application utilizing JSP Developed automated scripts in shell to ensure daily batch completion and Post batch activities before releasing the report to the clients All the validations are done by JSF components inbuilt validations and through JavaScript Created views using components of Prime Faces in XHTML files and configured JSF framework Used Prime Faces to analyze the missing features and quickly fix the bugs Worked in all the modules of the application which involved frontend presentation logic developed using Tiles with Spring MVC JSP JSTL and java script Business objects developed using POJOs and data access layer using Hibernate framework Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security Involved in integrating WebSphere Portal Server with WebSphere Process Server involving SOAP Web Services WSSecurity using JaxWS Involved in development of SOAP web services using Apache Axis 2 to extract data from databases and allowed communication between applications through SOAP Over HTTP using Apache Axis 2 Implemented persistence layer between the database and service layers with IBATIS ORM Performed unit testing using JUNIT framework and tested Business Services Experience in working with open source tools Selenium Selenium IDE Selenium RC Selenium Web Driver and preparation of automation test framework Used Jenkins for continuous deployment and integration of the build and release process Used Drools rules engine for defining business rules and Validations Used ANT for automated build and deployment on IBM WebSphere Used SVN version control to track and maintain the different version of the project Environment HTML DHTML CSS Bootstrap JSON JavaScript jQuery JSP JSTL Maven JPA ORACLE SQL PLSQL JSF Spring Batch Spring AOP Linux IBM WebSphere SOAP JAXWS Prime Faces RabbitMQ Junit Jenkins Selenium SVN Jr Application Developer John Deere Moline IL August 2011 to August 2013 Description Sales Automation is software to automate the business tasks of sales including order processing contact management information sharing inventory monitoring and control order tracking customer management sales forecast analysis and employee performance evaluation Responsibilities Part of planning sessions with team members to analyze requirements Outlined proposed and coded the proposed solutions Worked on developing Use Cases Class Diagrams Sequence diagrams and Data Models Developed the web application using JSF framework with user interfaces using JSP HTML and CSS Also used JSF validation framework for frontend validations used DOJo toolkit to construct Ajax requests and build dynamic webpages using JSP DHTML and java scripts Implemented Multithreading for handling multiple requests and for high performance Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Configuring Action Mappings in Strutsconfigxml Extensively involved in the development of Web Services interface to workflow system to facilitate setting up of customer s modem Clientserver validations were handled using Struts Validator Frameworks validate plugin Developed the bean the business method interfaces and the DAO for the workflow Web Services framework Developed applications which access the database with JDBC to execute queries prepared statements and procedures Developed programs to manipulate the data and perform CRUD operations on request to the database Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database and Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Used JUNIT for unit level testing Used Log4J for logging the user events Environment Java J2EE AJAX Struts SOAP plsql multithreading jsf HTML XML JSP JDBC ANT XML Tomcat JUNIT DB2 Eclipse GIT Log4J WebLogic Dojo Java Developer SKF Bearings Bengaluru Karnataka May 2010 to July 2011 Description OPEN SESAME is a web based collaborative ebusiness platform connecting to all constituents of sales and distribution chain management systems with a modular architecture OPEN SESAME automates large businesses comprising of finished goods Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in developing the business components and responsible for developing the user interfaces using JSPs Primarily focused on the spring components such as action Servlets actions Model and View Objects View Resolver Created several JSP pages as common library that included in the other pages as standard modules like Portlets Developed JSP with Struts custom tags and implemented JavaScript validation of data Used JavaScript for the web page validation and Struts Validator for serverside validation Used EJB 30 Session beans using JBOSS Seam Context Management Application Conversation Session scopes and implemented Business processes such as user authentication Transfer of Service using Session EJBs Wrote the high performance multithreaded Java code using singleton mediator visitor facade observer template factory and publish and subscribe design pattern Used various Core Java concepts such as Exception Handling Collection APIs to implement various features and enhancements Coded JDBC calls in the Servlets to access the SQL Server database tables Used SQL and PLSQL queries to perform database operations on Web Sphere Created stored procedures and database scripts to populate database tables Experience deploying code on Web Sphere server Extensively used XML to code configuration files Used ANT to build run and create JARs and WAR files among other uses Developed test cases by using TestNG for unit testing for each module developed in test driven development Used Log4j to provide central logging facility and worked on SVN as version control system on dayto day basis to maintain the code history Followed Waterfall methodology for development process Environment J2EE JSP Servlets EJB JDBC DB2 PLSQL WebSphere IBM MQ SOAP UML HTML CSS JavaScript CVS and Linuxs Log4j Education Bachelor of Technology in Electronics communication Engineering Gitam University Skills TESTING 8 years AJAX 6 years JAX 6 years WEB SERVICES 6 years JAVA 6 years Javascript PHP Node React Angular NET AWS Python C Angularjs Additional Information TECHNICAL SKILLS LANGUAGE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB WEB TECHNOLOGIES HTMLDHTML XHTML CSS XML XSD WSDL DTD DOMSAX J2EE DESIGN PATTERN FRAMEWORKS STRUTS SPRING HIBERNATE iBATIS JSF IDES ECLIPSE NET BEANS BEA WEB LOGIC WORKSHOP IBM RAD WEB SERVICES JAXWS SOAP WSDL APACHE AXIS IBM MQ WEBSERVICE TOOLS TCP MONITOR SOAP UI HTTP MONITOR SECURE CRT APPLICATION SERVERS BEA WEBLOGIC IBM WAS JBOSS APACHE TOMCAT DATABASES MYSQL ORACLE SQL SERVER NOSQL mongo Cassandra SCRIPTING LANGUAGE JAVASCRIPT AJAX Shell Script TOOLS BUILD ANT MAVEN MAVEN2 LOGGINGLOG4J VERSION CONTROL CVS SVN CLEAR CASE SURROUND TESTING JIIRA JUNIT JMETER JQUERY CLEAR QUEST MONITORING SPLUNK GOMEZ TRAFFIC ROUTING Big F5 OPERATING SYSTEMS WINDOWS 2000 WINDOWS XP WINDOWS VISTA WINDOWS 7 UNIX LINUX AIX",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "Charter",
        "Communication",
        "Maryland",
        "Heights",
        "MO",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "implementation",
        "software",
        "applications",
        "JavaJ2EE",
        "technologies",
        "end",
        "applications",
        "HTML",
        "HTML5",
        "XML",
        "XHTML",
        "DHTML",
        "CSS",
        "CSS3",
        "Bootstrap",
        "SAAS",
        "JavaScript",
        "DOM",
        "jQuery",
        "Ajax",
        "JSON",
        "JSP",
        "Experience",
        "CSS",
        "Backgrounds",
        "CSS",
        "Layouts",
        "CSS",
        "CSS",
        "Animations",
        "CSS",
        "Text",
        "CSS",
        "Borders",
        "CSS",
        "Padding",
        "CSS",
        "Table",
        "Pseudo",
        "Classes",
        "Pseudo",
        "Elements",
        "experience",
        "XML",
        "technologies",
        "XSD",
        "DTD",
        "XSLT",
        "XPATH",
        "DOM",
        "SAX",
        "JAXP",
        "JAXB",
        "XMLRPC",
        "XML",
        "Beans",
        "Strong",
        "Experience",
        "JavaScript",
        "MVC",
        "design",
        "pattern",
        "JS",
        "Backbone",
        "JS",
        "Ember",
        "JS",
        "Knockoutjs",
        "Developed",
        "MVVM",
        "design",
        "pattern",
        "Various",
        "Angular",
        "Components",
        "ngModules",
        "Services",
        "Directive",
        "Pipes",
        "Proficient",
        "Typescript",
        "ES6",
        "features",
        "scope",
        "type",
        "restrictions",
        "decorators",
        "arrow",
        "functions",
        "classes",
        "modules",
        "import",
        "exports",
        "applications",
        "React",
        "JS",
        "view",
        "React",
        "JS",
        "Redux",
        "Flux",
        "MVC",
        "design",
        "flow",
        "application",
        "Expertise",
        "serverside",
        "java",
        "script",
        "framework",
        "Node",
        "Express",
        "JS",
        "HapiJS",
        "Good",
        "Experience",
        "Java",
        "Script",
        "tools",
        "task",
        "runners",
        "Web",
        "pack",
        "React",
        "Angular",
        "Grunt",
        "Gulp",
        "Angular",
        "Browserify",
        "Node",
        "JS",
        "modules",
        "browsers",
        "knowledge",
        "JavaScript",
        "Unit",
        "testing",
        "Jasmin",
        "Karma",
        "Protractor",
        "Angular",
        "Mocha",
        "Chai",
        "react",
        "expertise",
        "Object",
        "concepts",
        "collections",
        "Generics",
        "file",
        "operations",
        "collection",
        "framework",
        "core",
        "concept",
        "Experience",
        "java8",
        "features",
        "Parallel",
        "Streams",
        "Lambdas",
        "interfaces",
        "experience",
        "enterprise",
        "applications",
        "Spring",
        "Struts",
        "Servlets",
        "JSF",
        "knowledge",
        "IOC",
        "Dependency",
        "Injection",
        "features",
        "aspects",
        "Spring",
        "Framework",
        "knowledge",
        "Spring",
        "Modules",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "Batch",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "Spring",
        "Boot",
        "Expertise",
        "Microservices",
        "spring",
        "boot",
        "node",
        "applications",
        "scalability",
        "availability",
        "agility",
        "application",
        "experience",
        "sites",
        "Single",
        "Sign",
        "CAS",
        "Spring",
        "Security",
        "Developed",
        "Stub",
        "projects",
        "WSDL",
        "Apache",
        "CXF",
        "SOAP",
        "services",
        "Apache",
        "CXF",
        "Knowledge",
        "XML",
        "standards",
        "implementation",
        "SOAP",
        "REST",
        "web",
        "services",
        "JAXRS",
        "JAXWS",
        "Jersey",
        "Excellent",
        "experience",
        "Relational",
        "databases",
        "MySQL",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "SQL",
        "Mongo",
        "DB",
        "Cassandra",
        "Experience",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "experience",
        "Deploying",
        "Configuring",
        "Application",
        "Web",
        "Servers",
        "Oracle",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Glassfish",
        "Apache",
        "Tomcat",
        "Solid",
        "Experience",
        "Java",
        "ORM",
        "frameworks",
        "Hibernate",
        "JPA",
        "Spring",
        "Data",
        "IBATIS",
        "NoSQL",
        "ORM",
        "frameworks",
        "Mongoose",
        "Connector",
        "Cassandra",
        "Node",
        "Driver",
        "webapplications",
        "design",
        "patterns",
        "session",
        "facade",
        "MVC",
        "Data",
        "Access",
        "Object",
        "Singleton",
        "Factory",
        "Pattern",
        "Good",
        "Experience",
        "JMS",
        "MQs",
        "Apache",
        "Kafka",
        "Rabbit",
        "MQ",
        "IBM",
        "MQ",
        "MQ",
        "communicate",
        "sender",
        "listener",
        "Hands",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Graddle",
        "Expertise",
        "testing",
        "JUnit",
        "tools",
        "JMeter",
        "Mockito",
        "Easy",
        "Mock",
        "Web",
        "Services",
        "testing",
        "Selenium",
        "IDE",
        "Selenium",
        "RC",
        "Server",
        "Selenium",
        "GridWeb",
        "Driver",
        "knowledge",
        "Drools",
        "Rule",
        "Engines",
        "BRMS",
        "Business",
        "Rules",
        "Management",
        "System",
        "Experience",
        "json",
        "web",
        "tokensjwt",
        "json",
        "objects",
        "depth",
        "knowledge",
        "Splunk",
        "architecture",
        "components",
        "Expert",
        "Splunk",
        "Development",
        "Configuration",
        "Administration",
        "Kibana",
        "application",
        "events",
        "search",
        "Knowledge",
        "Spring",
        "Cloud",
        "Netflix",
        "OSS",
        "Stack",
        "Hystix",
        "Circuit",
        "Breaker",
        "spring",
        "cloud",
        "config",
        "Ribbon",
        "Hystrix",
        "Zuul",
        "APIGateway",
        "spring",
        "cloud",
        "Netflix",
        "Eureka",
        "service",
        "load",
        "factors",
        "traffic",
        "resource",
        "nusage",
        "security",
        "functionality",
        "OAuth",
        "Spring",
        "security",
        "SSL",
        "site",
        "Hands",
        "experience",
        "implementation",
        "PCF",
        "Cloud",
        "Foundry",
        "Paas",
        "Platform",
        "Service",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "applications",
        "knowledge",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "Knowledge",
        "kubernates",
        "container",
        "applications",
        "Experience",
        "Build",
        "deployment",
        "automation",
        "tools",
        "Jenkins",
        "Bamboo",
        "CDCI",
        "Knowledge",
        "Docker",
        "components",
        "Docker",
        "Engine",
        "Hub",
        "Machine",
        "Compose",
        "Docker",
        "Registry",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Charter",
        "Communication",
        "Maryland",
        "Heights",
        "MO",
        "January",
        "Present",
        "Description",
        "John",
        "Deere",
        "corporation",
        "construction",
        "forestry",
        "machinery",
        "diesel",
        "engines",
        "trains",
        "equipment",
        "lawn",
        "care",
        "equipment",
        "Role",
        "portal",
        "Equipment",
        "Financing",
        "Self",
        "servicing",
        "tool",
        "customers",
        "Responsibilities",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "SAAS",
        "Reactjs",
        "Reactjs",
        "DOM",
        "React",
        "views",
        "components",
        "crossbrowser",
        "UI",
        "Reactjs",
        "ReactRouter",
        "page",
        "application",
        "Single",
        "Page",
        "Application",
        "concept",
        "Presentational",
        "Components",
        "Container",
        "Components",
        "forms",
        "reactform",
        "library",
        "validity",
        "reactvalidation",
        "library",
        "Babel",
        "tool",
        "conversion",
        "ECMA",
        "versions",
        "type",
        "browsers",
        "Integrated",
        "Redux",
        "data",
        "store",
        "React",
        "components",
        "access",
        "data",
        "code",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "packages",
        "libraries",
        "React",
        "UI",
        "architecture",
        "Building",
        "components",
        "library",
        "Tree",
        "SlideView",
        "Table",
        "Grid",
        "Angular",
        "Reactive",
        "forms",
        "forms",
        "validations",
        "Form",
        "Builder",
        "Created",
        "Single",
        "Page",
        "Application",
        "help",
        "Angular4",
        "Router",
        "Module",
        "template",
        "bread",
        "crumb",
        "Angular",
        "components",
        "Typescript",
        "ES6",
        "operators",
        "Angular4",
        "builtin",
        "http",
        "service",
        "custom",
        "services",
        "backend",
        "APIs",
        "Pipes",
        "data",
        "templates",
        "fundamentals",
        "Java",
        "streams",
        "filters",
        "expressions",
        "service",
        "interface",
        "Spring",
        "Boot",
        "Agent",
        "Services",
        "API",
        "web",
        "services",
        "microservices",
        "Spring",
        "Boot",
        "Microservices",
        "strategy",
        "application",
        "business",
        "Rest",
        "services",
        "JAX",
        "RS",
        "jersey",
        "framework",
        "Spring",
        "REST",
        "REST",
        "APIs",
        "services",
        "Spring",
        "Boot",
        "code",
        "Spring",
        "Data",
        "data",
        "MYSQL",
        "spring",
        "Boot",
        "properties",
        "actuators",
        "health",
        "checkers",
        "micro",
        "service",
        "implementations",
        "spring",
        "transaction",
        "manager",
        "transaction",
        "management",
        "Swagger",
        "Framework",
        "API",
        "Swagger",
        "UI",
        "API",
        "Developed",
        "REST",
        "API",
        "services",
        "NodeJS",
        "ExpressJS",
        "BodyParse",
        "node",
        "modules",
        "web",
        "application",
        "data",
        "NodeJS",
        "Writable",
        "streams",
        "data",
        "source",
        "application",
        "queries",
        "SQL",
        "queries",
        "criterion",
        "APIs",
        "oneto",
        "relationships",
        "Hibernate",
        "hibernate",
        "mapping",
        "files",
        "Installed",
        "administration",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "architecture",
        "stack",
        "data",
        "access",
        "NoSQL",
        "data",
        "base",
        "Cassandra",
        "messaging",
        "system",
        "Apache",
        "Kafka",
        "exchange",
        "information",
        "business",
        "applications",
        "UNIT",
        "testing",
        "Junit",
        "JavaScript",
        "framework",
        "Mocha",
        "chai",
        "java",
        "script",
        "build",
        "tools",
        "application",
        "web",
        "pack",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "AWS",
        "Lambda",
        "functions",
        "AWS",
        "config",
        "rules",
        "Nodejs",
        "Lambda",
        "function",
        "text",
        "object",
        "methods",
        "Context",
        "object",
        "properties",
        "Nodejs",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "CICD",
        "servers",
        "AWS",
        "Docker",
        "Docker",
        "files",
        "version",
        "control",
        "containers",
        "Docker",
        "engine",
        "Docker",
        "Machine",
        "microservices",
        "environments",
        "applications",
        "deployments",
        "Docker",
        "images",
        "Middleware",
        "applications",
        "Design",
        "Generic",
        "Playbooks",
        "microservices",
        "kubernates",
        "Kubernetes",
        "monitoring",
        "tool",
        "health",
        "check",
        "servers",
        "GIT",
        "version",
        "code",
        "GitHub",
        "Environment",
        "HTML5",
        "CSS3",
        "JSON",
        "AJAX",
        "Bootstrap",
        "React",
        "JS",
        "Angular",
        "git",
        "Spring",
        "Boot",
        "Spring",
        "IOC",
        "Node",
        "JS",
        "Express",
        "JS",
        "NPM",
        "Grunt",
        "Babel",
        "ckan",
        "dkan",
        "Web",
        "pack",
        "Docker",
        "AWS",
        "Docker",
        "Apache",
        "Kafka",
        "RESTful",
        "JAXRS",
        "Swagger",
        "GIT",
        "Jenkins",
        "MySQL",
        "NoSQL",
        "Cassandra",
        "DB",
        "Mocha",
        "Chai",
        "Sr",
        "software",
        "developer",
        "Nas",
        "Insurance",
        "Atlanta",
        "GA",
        "July",
        "December",
        "Description",
        "Nas",
        "Insurance",
        "insurance",
        "solution",
        "risks",
        "gaps",
        "coverage",
        "Atlanta",
        "Georgia",
        "pages",
        "customers",
        "quotes",
        "cover",
        "variances",
        "login",
        "field",
        "validations",
        "customers",
        "members",
        "account",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirement",
        "analysis",
        "design",
        "documentation",
        "development",
        "test",
        "cases",
        "production",
        "support",
        "application",
        "application",
        "Angular",
        "Bootstrap",
        "HTML5",
        "CSS3",
        "Routing",
        "Imperative",
        "Routing",
        "guards",
        "help",
        "Angular20",
        "route",
        "module",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "architecture",
        "Angular",
        "knowledge",
        "services",
        "Angular",
        "property",
        "service",
        "dependency",
        "injection",
        "components",
        "JavaScript",
        "codes",
        "web",
        "forms",
        "process",
        "web",
        "application",
        "page",
        "navigation",
        "Angular",
        "React",
        "JS",
        "Bootstrap",
        "components",
        "UI",
        "Objects",
        "API",
        "data",
        "DOM",
        "Redux",
        "Store",
        "React",
        "State",
        "serverside",
        "refactoring",
        "Reducer",
        "logic",
        "decomposition",
        "Reducer",
        "Composition",
        "ReactRouter",
        "techniques",
        "Axios",
        "service",
        "data",
        "server",
        "background",
        "display",
        "page",
        "way",
        "NodeJS",
        "data",
        "level",
        "document",
        "MongoDB",
        "NPM",
        "commands",
        "Packagejson",
        "dependencies",
        "devdependencies",
        "Nodejs",
        "applications",
        "API",
        "Hapijs",
        "logic",
        "data",
        "retrieval",
        "build",
        "top",
        "Nodejs",
        "applications",
        "Bootstrapjs",
        "Requirejs",
        "Nodejs",
        "application",
        "desktop",
        "resolutions",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "Node",
        "js",
        "Used",
        "Express",
        "JS",
        "web",
        "framework",
        "Nodejs",
        "sever",
        "routes",
        "Nodejs",
        "frameworks",
        "Express",
        "Restful",
        "API",
        "Developed",
        "Mean",
        "Stack",
        "scratch",
        "Mongo",
        "DB",
        "server",
        "Mongoose",
        "Connector",
        "setup",
        "Express",
        "JS",
        "server",
        "development",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Jersey",
        "framework",
        "JWT",
        "JSON",
        "Web",
        "Tokens",
        "tokens",
        "claims",
        "application",
        "authentication",
        "services",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "Spring",
        "boot",
        "dependency",
        "Injection",
        "DI",
        "programming",
        "AOP",
        "features",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "Spring",
        "Security",
        "OAuth",
        "mechanism",
        "authentication",
        "websites",
        "Spring",
        "Social",
        "Module",
        "Sign",
        "authentication",
        "Site",
        "Minder",
        "security",
        "framework",
        "UNIT",
        "testing",
        "Jasmine",
        "Karma",
        "Log4j",
        "debugging",
        "warning",
        "info",
        "server",
        "console",
        "MAVEN",
        "scripts",
        "web",
        "application",
        "Cucumber",
        "testing",
        "application",
        "build",
        "tools",
        "application",
        "Grunt",
        "Gulp",
        "Responsible",
        "generation",
        "architecture",
        "platform",
        "development",
        "top",
        "Netflix",
        "OSS",
        "Spring",
        "Cloud",
        "Cloud",
        "Foundry",
        "PCF",
        "framework",
        "security",
        "gateway",
        "authentication",
        "authorization",
        "session",
        "management",
        "system",
        "multi",
        "factor",
        "authentication",
        "content",
        "management",
        "service",
        "discovery",
        "log",
        "aggregation",
        "config",
        "repository",
        "Spring",
        "CloudNetflix",
        "OSS",
        "Stack",
        "Ribbon",
        "load",
        "Netflix",
        "Zuul",
        "Api",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "Cloud",
        "Foundry",
        "PCF",
        "EC2",
        "containers",
        "Cloud",
        "Foundry",
        "PCF",
        "Implemented",
        "micro",
        "services",
        "Cloud",
        "Foundry",
        "PCF",
        "development",
        "application",
        "Docker",
        "containers",
        "production",
        "Cloud",
        "Foundry",
        "environment",
        "Spring",
        "Cloud",
        "Netflix",
        "ZUUL",
        "microservices",
        "Environment",
        "HTML5",
        "XML",
        "CSS3",
        "JSON",
        "JavaScript",
        "Angular",
        "JS",
        "Bootstrap",
        "Maven",
        "Spring",
        "Boot",
        "Hibernate",
        "MySQL",
        "Eclipse",
        "RESTful",
        "AJAX",
        "JSON",
        "Node",
        "JS",
        "Express",
        "JS",
        "AWS",
        "API",
        "JAXRS",
        "Gulp",
        "NPM",
        "Apache",
        "Kafka",
        "GitHub",
        "NoSQL",
        "Jasmine",
        "karma",
        "Selenium",
        "cloud",
        "Docker",
        "Spring",
        "cloud",
        "Sr",
        "Java",
        "Developer",
        "Arvest",
        "Bank",
        "Bentonville",
        "AR",
        "April",
        "June",
        "Description",
        "Arvest",
        "Bank",
        "banking",
        "services",
        "company",
        "Lowell",
        "AR",
        "Arvest",
        "Bank",
        "bank",
        "deposit",
        "home",
        "mortgage",
        "servicing",
        "debit",
        "cards",
        "Role",
        "portal",
        "Equipment",
        "Financing",
        "Self",
        "servicing",
        "tool",
        "customers",
        "customer",
        "software",
        "advertisements",
        "business",
        "Backbonejs",
        "JavaScriptjQuery",
        "HTML",
        "CSS",
        "web",
        "design",
        "Bootstrap",
        "CSS3",
        "Media",
        "user",
        "experience",
        "web",
        "features",
        "MVC",
        "Framework",
        "Backbonejs",
        "BackboneStickIt",
        "burden",
        "modelview",
        "synchronization",
        "Backbone",
        "JS",
        "jQuery",
        "frontend",
        "components",
        "JavaScript",
        "functions",
        "dynamism",
        "web",
        "pages",
        "client",
        "side",
        "JQUERY",
        "JSON",
        "AJAX",
        "DOM",
        "scripting",
        "web",
        "applications",
        "message",
        "posting",
        "auto",
        "form",
        "validations",
        "Spring",
        "MVC",
        "Framework",
        "IOC",
        "Inversion",
        "Control",
        "design",
        "pattern",
        "relationships",
        "application",
        "components",
        "view",
        "components",
        "Dispatcher",
        "Servlet",
        "View",
        "Resolver",
        "requests",
        "Spring",
        "MVC",
        "flow",
        "Cross",
        "concerns",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "modularity",
        "cross",
        "concerns",
        "transaction",
        "management",
        "logging",
        "Spring",
        "AOP",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "jobs",
        "data",
        "servers",
        "Developed",
        "Spring",
        "Batch",
        "processes",
        "reporting",
        "applications",
        "modules",
        "Perl",
        "Korn",
        "shell",
        "scripts",
        "Oracle",
        "database",
        "partitions",
        "subpartitions",
        "Quartz",
        "scheduler",
        "batch",
        "programming",
        "Spring",
        "Batch",
        "Stateless",
        "session",
        "beans",
        "web",
        "services",
        "JAXRS",
        "JAXRS",
        "REST",
        "web",
        "services",
        "clients",
        "web",
        "services",
        "Apache",
        "CXF",
        "framework",
        "Developed",
        "Application",
        "JSON",
        "Rest",
        "API",
        "web",
        "service",
        "client",
        "side",
        "JavaScript",
        "Backbone",
        "JS",
        "persistence",
        "layer",
        "Hibernate",
        "Oracle",
        "g",
        "Database",
        "Build",
        "PLSQL",
        "functions",
        "procedures",
        "views",
        "Oracle",
        "Database",
        "g",
        "JDBC",
        "data",
        "source",
        "connection",
        "pooling",
        "RabbitMQ",
        "messaging",
        "decoupling",
        "applications",
        "data",
        "applications",
        "testing",
        "JUNIT",
        "JavaScript",
        "unit",
        "Mocha",
        "chai",
        "tools",
        "Used",
        "Maven",
        "application",
        "GIT",
        "version",
        "control",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "CICD",
        "Drools",
        "Business",
        "Logic",
        "Integration",
        "Platform",
        "platform",
        "Rules",
        "Workflow",
        "Event",
        "Processing",
        "Environment",
        "HTML",
        "CSS",
        "JSON",
        "JavaScript",
        "jQuery",
        "Backbone",
        "JS",
        "Ember",
        "JS",
        "Node",
        "JS",
        "Bootstrap",
        "Maven",
        "Oracle",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "AOP",
        "Eclipse",
        "RESTful",
        "AJAX",
        "Restful",
        "API",
        "Gulp",
        "NPM",
        "bower",
        "GitHub",
        "NoSQL",
        "Mongo",
        "DB",
        "Junit",
        "Mockito",
        "Mocha",
        "chai",
        "Selenium",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Humana",
        "Health",
        "Care",
        "Louisville",
        "KY",
        "September",
        "March",
        "Description",
        "Humana",
        "Inc",
        "health",
        "insurance",
        "company",
        "Louisville",
        "Kentucky",
        "health",
        "insurance",
        "customers",
        "pages",
        "customers",
        "quotes",
        "cover",
        "variances",
        "login",
        "field",
        "validations",
        "customers",
        "members",
        "account",
        "Responsibilities",
        "end",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "images",
        "layouts",
        "designer",
        "CSSHTML",
        "themes",
        "validations",
        "registration",
        "forms",
        "login",
        "forms",
        "Java",
        "Script",
        "JQUERY",
        "JSON",
        "AJAX",
        "DOM",
        "scripting",
        "web",
        "applications",
        "message",
        "form",
        "validations",
        "jQuery",
        "interaction",
        "JavaScript",
        "HTML",
        "Responsible",
        "validations",
        "side",
        "validations",
        "JSP",
        "Enhancement",
        "application",
        "JSP",
        "Developed",
        "scripts",
        "shell",
        "batch",
        "completion",
        "Post",
        "batch",
        "activities",
        "report",
        "clients",
        "validations",
        "JSF",
        "components",
        "validations",
        "JavaScript",
        "Created",
        "views",
        "components",
        "Prime",
        "Faces",
        "files",
        "JSF",
        "framework",
        "Prime",
        "Faces",
        "features",
        "bugs",
        "modules",
        "application",
        "frontend",
        "presentation",
        "logic",
        "Tiles",
        "Spring",
        "MVC",
        "JSP",
        "JSTL",
        "java",
        "script",
        "Business",
        "objects",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "Spring",
        "Quartz",
        "functionality",
        "scheduling",
        "tasks",
        "reports",
        "customers",
        "mails",
        "policies",
        "Spring",
        "Security",
        "framework",
        "setup",
        "authentication",
        "authorization",
        "application",
        "sign",
        "Protection",
        "session",
        "fixation",
        "cross",
        "site",
        "request",
        "forgery",
        "application",
        "Spring",
        "Security",
        "WebSphere",
        "Portal",
        "Server",
        "WebSphere",
        "Process",
        "Server",
        "SOAP",
        "Web",
        "Services",
        "WSSecurity",
        "JaxWS",
        "development",
        "SOAP",
        "web",
        "services",
        "Apache",
        "Axis",
        "data",
        "databases",
        "communication",
        "applications",
        "SOAP",
        "HTTP",
        "Apache",
        "Axis",
        "persistence",
        "layer",
        "database",
        "service",
        "layers",
        "IBATIS",
        "ORM",
        "Performed",
        "unit",
        "testing",
        "JUNIT",
        "framework",
        "Business",
        "Services",
        "Experience",
        "source",
        "tools",
        "Selenium",
        "Selenium",
        "IDE",
        "Selenium",
        "RC",
        "Selenium",
        "Web",
        "Driver",
        "preparation",
        "automation",
        "test",
        "framework",
        "Jenkins",
        "deployment",
        "integration",
        "build",
        "release",
        "process",
        "Drools",
        "rules",
        "engine",
        "business",
        "rules",
        "Validations",
        "ANT",
        "build",
        "deployment",
        "IBM",
        "WebSphere",
        "SVN",
        "version",
        "control",
        "version",
        "project",
        "Environment",
        "HTML",
        "DHTML",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "jQuery",
        "JSP",
        "JSTL",
        "Maven",
        "JPA",
        "ORACLE",
        "SQL",
        "PLSQL",
        "JSF",
        "Spring",
        "Batch",
        "Spring",
        "AOP",
        "Linux",
        "IBM",
        "WebSphere",
        "JAXWS",
        "Prime",
        "Faces",
        "Junit",
        "Jenkins",
        "Selenium",
        "SVN",
        "Jr",
        "Application",
        "Developer",
        "John",
        "Deere",
        "Moline",
        "IL",
        "August",
        "August",
        "Description",
        "Sales",
        "Automation",
        "software",
        "business",
        "tasks",
        "sales",
        "order",
        "contact",
        "management",
        "information",
        "inventory",
        "monitoring",
        "control",
        "order",
        "customer",
        "management",
        "sales",
        "forecast",
        "analysis",
        "employee",
        "performance",
        "evaluation",
        "Responsibilities",
        "Part",
        "sessions",
        "team",
        "members",
        "requirements",
        "solutions",
        "Use",
        "Cases",
        "Class",
        "Diagrams",
        "Sequence",
        "diagrams",
        "Data",
        "Models",
        "web",
        "application",
        "JSF",
        "framework",
        "user",
        "interfaces",
        "JSP",
        "HTML",
        "CSS",
        "JSF",
        "validation",
        "framework",
        "frontend",
        "validations",
        "DOJo",
        "toolkit",
        "requests",
        "webpages",
        "JSP",
        "DHTML",
        "scripts",
        "Multithreading",
        "requests",
        "performance",
        "Development",
        "Action",
        "Forms",
        "Action",
        "Servlets",
        "Action",
        "Action",
        "Forms",
        "Struts",
        "framework",
        "Configuring",
        "Action",
        "Mappings",
        "Strutsconfigxml",
        "development",
        "Web",
        "Services",
        "interface",
        "system",
        "customer",
        "modem",
        "Clientserver",
        "validations",
        "Struts",
        "Validator",
        "Frameworks",
        "plugin",
        "bean",
        "business",
        "method",
        "interfaces",
        "DAO",
        "workflow",
        "Web",
        "Services",
        "framework",
        "applications",
        "database",
        "JDBC",
        "queries",
        "statements",
        "procedures",
        "programs",
        "data",
        "CRUD",
        "operations",
        "request",
        "database",
        "Developed",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "data",
        "applications",
        "WSDL",
        "generation",
        "service",
        "serverside",
        "Internet",
        "services",
        "JUnit",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "SQL",
        "database",
        "end",
        "interfaces",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "PLSQL",
        "programs",
        "Cursor",
        "management",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "JUNIT",
        "unit",
        "level",
        "testing",
        "Log4J",
        "user",
        "events",
        "Environment",
        "Java",
        "J2EE",
        "AJAX",
        "Struts",
        "SOAP",
        "plsql",
        "jsf",
        "HTML",
        "XML",
        "JSP",
        "JDBC",
        "ANT",
        "XML",
        "Tomcat",
        "JUNIT",
        "DB2",
        "Eclipse",
        "GIT",
        "Log4J",
        "WebLogic",
        "Dojo",
        "Java",
        "Developer",
        "SKF",
        "Bearings",
        "Bengaluru",
        "Karnataka",
        "May",
        "July",
        "Description",
        "SESAME",
        "web",
        "ebusiness",
        "platform",
        "constituents",
        "sales",
        "distribution",
        "chain",
        "management",
        "systems",
        "architecture",
        "OPEN",
        "SESAME",
        "businesses",
        "goods",
        "Responsibilities",
        "analysis",
        "client",
        "requirements",
        "design",
        "documents",
        "business",
        "components",
        "user",
        "interfaces",
        "JSPs",
        "spring",
        "components",
        "action",
        "Servlets",
        "actions",
        "Model",
        "View",
        "View",
        "Resolver",
        "JSP",
        "pages",
        "library",
        "pages",
        "modules",
        "Portlets",
        "JSP",
        "Struts",
        "custom",
        "tags",
        "JavaScript",
        "validation",
        "data",
        "JavaScript",
        "web",
        "page",
        "validation",
        "Struts",
        "Validator",
        "serverside",
        "validation",
        "EJB",
        "Session",
        "beans",
        "JBOSS",
        "Seam",
        "Context",
        "Management",
        "Application",
        "Conversation",
        "Session",
        "scopes",
        "Business",
        "processes",
        "user",
        "authentication",
        "Transfer",
        "Service",
        "Session",
        "EJBs",
        "performance",
        "Java",
        "code",
        "singleton",
        "mediator",
        "visitor",
        "facade",
        "observer",
        "template",
        "factory",
        "design",
        "pattern",
        "Core",
        "Java",
        "concepts",
        "Exception",
        "Handling",
        "Collection",
        "APIs",
        "features",
        "enhancements",
        "JDBC",
        "Servlets",
        "SQL",
        "Server",
        "database",
        "SQL",
        "PLSQL",
        "database",
        "operations",
        "Web",
        "Sphere",
        "procedures",
        "database",
        "scripts",
        "database",
        "tables",
        "Experience",
        "code",
        "Web",
        "Sphere",
        "server",
        "XML",
        "configuration",
        "files",
        "ANT",
        "run",
        "JARs",
        "WAR",
        "files",
        "uses",
        "test",
        "cases",
        "TestNG",
        "unit",
        "testing",
        "module",
        "test",
        "development",
        "Log4j",
        "facility",
        "SVN",
        "version",
        "control",
        "system",
        "day",
        "basis",
        "code",
        "history",
        "Waterfall",
        "methodology",
        "development",
        "process",
        "Environment",
        "J2EE",
        "JSP",
        "Servlets",
        "EJB",
        "JDBC",
        "DB2",
        "PLSQL",
        "WebSphere",
        "IBM",
        "MQ",
        "SOAP",
        "UML",
        "HTML",
        "CSS",
        "JavaScript",
        "CVS",
        "Linuxs",
        "Log4j",
        "Education",
        "Bachelor",
        "Technology",
        "Electronics",
        "communication",
        "Engineering",
        "Gitam",
        "University",
        "Skills",
        "TESTING",
        "years",
        "AJAX",
        "years",
        "JAX",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "years",
        "Javascript",
        "PHP",
        "Node",
        "React",
        "Angular",
        "NET",
        "AWS",
        "Python",
        "C",
        "Angularjs",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "LANGUAGE",
        "J2EE",
        "SERVLETS",
        "JSP",
        "JDBC",
        "JSF",
        "JNDI",
        "EJB",
        "WEB",
        "TECHNOLOGIES",
        "HTMLDHTML",
        "XHTML",
        "CSS",
        "XML",
        "XSD",
        "WSDL",
        "DTD",
        "DOMSAX",
        "J2EE",
        "DESIGN",
        "PATTERN",
        "FRAMEWORKS",
        "STRUTS",
        "SPRING",
        "HIBERNATE",
        "JSF",
        "IDES",
        "ECLIPSE",
        "NET",
        "BEANS",
        "BEA",
        "WEB",
        "LOGIC",
        "IBM",
        "RAD",
        "WEB",
        "SERVICES",
        "JAXWS",
        "SOAP",
        "WSDL",
        "APACHE",
        "IBM",
        "MQ",
        "WEBSERVICE",
        "TCP",
        "MONITOR",
        "SOAP",
        "UI",
        "HTTP",
        "MONITOR",
        "SECURE",
        "CRT",
        "APPLICATION",
        "BEA",
        "WEBLOGIC",
        "IBM",
        "JBOSS",
        "APACHE",
        "TOMCAT",
        "DATABASES",
        "MYSQL",
        "ORACLE",
        "SQL",
        "SERVER",
        "NOSQL",
        "Cassandra",
        "SCRIPTING",
        "LANGUAGE",
        "JAVASCRIPT",
        "AJAX",
        "Shell",
        "Script",
        "BUILD",
        "ANT",
        "MAVEN",
        "MAVEN2",
        "LOGGINGLOG4J",
        "VERSION",
        "CONTROL",
        "CVS",
        "SVN",
        "CLEAR",
        "CASE",
        "SURROUND",
        "TESTING",
        "JIIRA",
        "JUNIT",
        "JMETER",
        "JQUERY",
        "CLEAR",
        "QUEST",
        "MONITORING",
        "SPLUNK",
        "GOMEZ",
        "TRAFFIC",
        "F5",
        "OPERATING",
        "SYSTEMS",
        "WINDOWS",
        "WINDOWS",
        "XP",
        "WINDOWS",
        "VISTA",
        "WINDOWS",
        "UNIX",
        "LINUX",
        "AIX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:43:20.159062",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Charter Communication Maryland Heights MO Over 8 years of IT experience in Analysis Design Development and implementation of software applications using JavaJ2EE technologies Experienced in developing front end applications using HTML HTML5 XML XHTML DHTML CSS CSS3 Bootstrap SAAS JavaScript DOM jQuery Ajax JSON and JSP Experience on working with CSS Backgrounds CSS Layouts CSS Positioning CSS Animations CSS Text CSS Borders CSS Padding CSS Table Pseudo Classes and Pseudo Elements Strong experience in XML related technologies including XSD DTD XSLT XPATH DOM SAX JAXP JAXB XMLRPC and XML Beans Strong Experience in JavaScript MVC design pattern such as Angular JS Backbone JS and Ember JS Knockoutjs Designed and Developed MVVM design pattern Various Angular 2040 Components ngModules Services observablepromises Directive and Pipes Proficient with Typescript ES6 new features block scope type restrictions decorators arrow functions classes interfaces modules import and exports Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Expertise in building serverside java script framework using Node Express JS HapiJS Good Experience in using of Java Script build tools and task runners like Web pack for React and Angular 2040 Grunt Gulp for Angular 10 Browserify for packaging Node JS modules for browsers Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular Mocha and Chai for react Strong expertise in Object oriented concepts such as collections Generics file operations multithreading concurrent collection framework and core java concept Experience in java8 features like Parallel Streams Lambdas functional interfaces and filters Extensive experience in developing scalable reliable and efficient javaj2ee enterprise applications using Spring Struts Servlets and JSF Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring DAO Spring Batch Spring Web Flow Spring Security Spring AOP and Spring Boot Expertise in developing Microservices using spring boot and node is to build more physically separated modular applications which will improve scalability availability and agility of application Good experience in creating sites that have Single Sign On using CAS and Spring Security Developed Stub projects for WSDL and WADL using Apache CXF and implemented SOAP services using Axis2 and Apache CXF Extensive Knowledge of XML based standards and implementation of SOAP and REST web services using JAXRS JAXWS and Jersey Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL databases like Mongo DB and Cassandra Experience in writing complex SQL Queries Stored Procedures Triggers Cursors and Functions Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Solid Experience with Java based ORM frameworks such as Hibernate JPA Spring Data and IBATIS and worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experienced in developing webapplications using various design patterns including session facade MVC Data Access Object Singleton and Factory Pattern Good Experience on JMS MQs like Apache Kafka Rabbit MQ IBM MQ and Active MQ for communicate between sender and listener Hands on experience with build tools like ANT Maven Graddle Expertise in testing with JUnit using tools like JMeter Mockito Easy Mock Worked on Web Services testing using Selenium IDE and Selenium RC Server Selenium GridWeb Driver Testing Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience using json web tokensjwt to securely communicate between two json objects In depth and extensive knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view and measure application events using Elastic search Knowledge on implementing Spring Cloud Netflix OSS Stack and Hystix Circuit Breaker Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource nusage and implemented security functionality OAuth 20 Spring security SSL and site minderSSO Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Good knowledge in using Amazon Web Services Amazon EC2 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS and AWS Identity Knowledge on kubernates to deploy on container applications Experience in Build and deployment automation through tools like Jenkins Bamboo for CDCI Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Work Experience Full Stack Developer Charter Communication Maryland Heights MO January 2017 to Present Description John Deere is an American corporation that manufactures agricultural construction and forestry machinery diesel engines drive trains used in heavy equipment and lawn care equipment My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Involved in designing and developing the web application by using HTML5 CSS3 SAAS and Reactjs Worked with Reactjs Virtual DOM and React views rendering using components Constructed a responsive and crossbrowser compatible clientside UI using Reactjs Used ReactRouter to handle page routing and turn the application into Single Page Application Implemented concept of Presentational Components and Container Components Built forms with reactform library and checked validity with reactvalidation library and used Babel plugin tool for conversion of ECMA versions to support all type of browsers Integrated Redux data store allowing React components to have access to data resulting in highly maintainable code Used Node Package Manager NPM to manage packages and libraries Responsible for React UI architecture Building components library including Tree SlideView and Table Grid Used Angular 4 Reactive forms to implement complex forms and performed the validations using Form Builder Created Single Page Application with the help of Angular4 Router Module and used template routing for bread crumb Developed the Angular components using Typescript and ES6 Helpful operators Injected Angular4 builtin http service to custom services to communicate with backend with RESTful APIs and Used Pipes to format and sort data displayed in the templates Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed RESTful service interface using Spring Boot to the underlying Agent Services API and Implemented RESTful web services Created and managed microservices using Spring Boot Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Developed Rest services by implementing JAX RS using jersey framework Extensively worked on Spring REST for creating REST APIs services with Spring Boot to modularize code and used Spring Data to access data from MYSQL Used spring Boot properties like actuators and health checkers to enhance micro service implementations Used spring transaction manager to support declarative transaction management Using Swagger Framework implementing the Restful API and Swagger gives the rich UI to test API Developed REST API services using NodeJS ExpressJS BodyParse and other node modules to serve the web application with JSON data Developed NodeJS Readable and Writable streams to process the data from the external source of the application Designed and developed queries using SQL and named queries criterion APIs and create oneto one and oneto many relationships using Hibernate and created hibernate mapping files Installed configured and administration of NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL data base Cassandra Used a highly durable messaging system called Apache Kafka for asynchronous exchange of vital information between multiple business applications Performs UNIT testing with Junit and for JavaScript framework using Mocha and chai Used java script build tools to bundle the application through web pack Installed the application on AWS EC2 instances and configured the storage on S3 buckets Created AWS Lambda functions for AWS config rules using Nodejs and Heavily Used Lambda function on text object methods Context object properties using Nodejs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Virtualized the servers on AWS using the Docker created the Docker files and version control built various containers using Docker engine and Docker Machine environments to deploy the microservices oriented environments for scalable applications Creating managing and performing containerbased deployments using Docker images containing Middleware and applications together Design and Built Generic Playbooks to remotely configure the microservices on kubernates and Used Kubernetes as the monitoring tool for health check of the servers Extensively used GIT for version controlling and regularly pushed the code to GitHub Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Angular 40 git Spring Boot Spring IOC Node JS Express JS NPM Grunt Babel ckan dkan Web pack Docker AWS Docker Apache Kafka RESTful JAXRS Swagger GIT Jenkins MySQL NoSQL Cassandra DB Mocha Chai Sr software developer Nas Insurance Atlanta GA July 2015 to December 2016 Description Nas Insurance is a uniquely innovative insurance solution to address emerging risks and fill gaps in standard coverage which is in Atlanta Georgia I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Involved in various phases of Software Development Life Cycle SDLC as requirement gathering analysis design documentation development test cases implementing and production support of the application Involved in designing and developing the application using Angular 2 Bootstrap HTML5 and CSS3 Implemented Routing Imperative Routing and guards with the help of Angular20 route module Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked with React JS to build Bootstrap components for responsive UI Objects and linked with API data to view render the virtual DOM dynamically Implemented Redux Store and React State for serverside rendering and refactoring Reducer logic using functional decomposition and Reducer Composition Elegantly used ReactRouter techniques Axios service to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Used NodeJS for processing the incoming data in each level and generate a document and save it to MongoDB Worked with NPM commands and using Packagejson for managing dependencies and devdependencies of Nodejs applications Created and consumed RESTful API using Hapijs to provide centralized logic and reusable data retrieval build on top of Nodejs Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node js Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Used popular Nodejs frameworks like Express and Restify to create a Restful Mock API Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Designed and developed RESTFUL web services using Spring Boot and Jersey framework Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Extensively Implemented Spring boot dependency Injection DI and aspectoriented programming AOP features Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for websites logins using Spring Social Module Implemented Single Sign On and policybased authentication using Site Minder security framework Performs UNIT testing with Jasmine and Karma Used Log4j to print logging debugging warning and info on server console Debugged the MAVEN scripts for building entire web application Implemented Cucumber for behavioral testing of application Used build tools to bundle the application through Grunt and Gulp Responsible for building Next generation architecture platform development built on top of Netflix OSS Spring Cloud and Pivotal Cloud Foundry PCF This framework is responsible to provide a security gateway authentication authorization of apis session management in a distributed system multi factor authentication content management service discovery log aggregation config repository Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Installed Pivotal Cloud Foundry PCF on EC2 to manage the containers created by Pivotal Cloud Foundry PCF Implemented micro services in Pivotal Cloud Foundry PCF and move development application from Docker containers deploy into production Cloud Foundry environment Implemented Spring Cloud Netflix ZUUL for building microservices to communicate with each other Environment HTML5 XML CSS3 LESS JSON JavaScript Angular JS Bootstrap Maven Spring Boot Hibernate MySQL Eclipse RESTful AJAX JSON Node JS Express JS AWS Restful API JAXRS Gulp NPM Apache Kafka GitHub NoSQL MongoDB Jasmine karma Selenium Pivotal cloud Docker Spring cloud Sr Java Developer Arvest Bank Bentonville AR April 2014 to June 2015 Description Arvest Bank is an American multinational banking and financial services holding company which is headquartered in Lowell AR Arvest Bank is the largest bank in deposit home mortgage servicing and debit cards My Role is to build develop and test the portal for Equipment Financing which acts as Self servicing tool for the customers Responsibilities Developed customer facing software for managing advertisements to grow the business using Backbonejs JavaScriptjQuery HTML CSS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries Enhanced user experience by designing new web features using MVC Framework like Backbonejs Used BackboneStickIt to relieve the burden of modelview synchronization in Backbone JS Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Exposed Stateless session beans as RESTful web services using JAXRS Used JAXRS REST for producing web services and involved in writing clients to consume the web services with Apache CXF framework Developed Application to access JSON from Rest API web service from client side using JavaScript and Backbone JS Worked on persistence layer using Hibernate with Oracle 10g Database Build PLSQL functions stored procedures views and configured Oracle Database 10g with JDBC data source with connection pooling enabled RabbitMQ is used for asynchronous messaging decoupling applications by separating sending and receiving data over the applications For testing we used JUNIT and for JavaScript unit testing Mocha and chai are the tools we used Used Maven for building the application and used GIT for version control Worked with Jenkins Continuous Integration and Continuous Deployment CICD Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Environment HTML CSS JSON JavaScript jQuery Backbone JS Ember JS Node JS Bootstrap Maven iBATIS Oracle Spring MVC Spring Batch Spring AOP Eclipse RESTful AJAX Restful API Gulp NPM bower RabbitMQ GitHub NoSQL Mongo DB Junit Mockito Mocha chai Selenium Sr JavaJ2EE Developer Humana Health Care Louisville KY September 2013 to March 2014 Description Humana Inc is a forprofit American health insurance company based in Louisville Kentucky It markets and administers health insurance for about 11 million customers I was involved in developing pages that helps customers retrieve online quotes depending on cover variances Also worked on login field validations that help customers who are already members to retrieve their online account Responsibilities Developed front end for the entire website using HTML CSS and JavaScript Converted raw images and layouts from a graphic designer into CSSHTML themes Implemented clientside validations in registration forms login and logout forms using Java Script Extensively used JQUERY JSON AJAX and DOM scripting to create interactive web applications like message posting and autocomplete form validations Used jQuery for interaction between JavaScript and HTML Responsible for clientside validations and serve side validations in JSP Involved in Enhancement of existing application utilizing JSP Developed automated scripts in shell to ensure daily batch completion and Post batch activities before releasing the report to the clients All the validations are done by JSF components inbuilt validations and through JavaScript Created views using components of Prime Faces in XHTML files and configured JSF framework Used Prime Faces to analyze the missing features and quickly fix the bugs Worked in all the modules of the application which involved frontend presentation logic developed using Tiles with Spring MVC JSP JSTL and java script Business objects developed using POJOs and data access layer using Hibernate framework Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security Involved in integrating WebSphere Portal Server with WebSphere Process Server involving SOAP Web Services WSSecurity using JaxWS Involved in development of SOAP web services using Apache Axis 2 to extract data from databases and allowed communication between applications through SOAP Over HTTP using Apache Axis 2 Implemented persistence layer between the database and service layers with IBATIS ORM Performed unit testing using JUNIT framework and tested Business Services Experience in working with open source tools Selenium Selenium IDE Selenium RC Selenium Web Driver and preparation of automation test framework Used Jenkins for continuous deployment and integration of the build and release process Used Drools rules engine for defining business rules and Validations Used ANT for automated build and deployment on IBM WebSphere Used SVN version control to track and maintain the different version of the project Environment HTML DHTML CSS Bootstrap JSON JavaScript jQuery JSP JSTL Maven JPA ORACLE SQL PLSQL JSF Spring Batch Spring AOP Linux IBM WebSphere SOAP JAXWS Prime Faces RabbitMQ Junit Jenkins Selenium SVN Jr Application Developer John Deere Moline IL August 2011 to August 2013 Description Sales Automation is software to automate the business tasks of sales including order processing contact management information sharing inventory monitoring and control order tracking customer management sales forecast analysis and employee performance evaluation Responsibilities Part of planning sessions with team members to analyze requirements Outlined proposed and coded the proposed solutions Worked on developing Use Cases Class Diagrams Sequence diagrams and Data Models Developed the web application using JSF framework with user interfaces using JSP HTML and CSS Also used JSF validation framework for frontend validations used DOJo toolkit to construct Ajax requests and build dynamic webpages using JSP DHTML and java scripts Implemented Multithreading for handling multiple requests and for high performance Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Configuring Action Mappings in Strutsconfigxml Extensively involved in the development of Web Services interface to workflow system to facilitate setting up of customer s modem Clientserver validations were handled using Struts Validator Frameworks validate plugin Developed the bean the business method interfaces and the DAO for the workflow Web Services framework Developed applications which access the database with JDBC to execute queries prepared statements and procedures Developed programs to manipulate the data and perform CRUD operations on request to the database Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database and Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Used JUNIT for unit level testing Used Log4J for logging the user events Environment Java J2EE AJAX Struts SOAP plsql multithreading jsf HTML XML JSP JDBC ANT XML Tomcat JUNIT DB2 Eclipse GIT Log4J WebLogic Dojo Java Developer SKF Bearings Bengaluru Karnataka May 2010 to July 2011 Description OPEN SESAME is a web based collaborative ebusiness platform connecting to all constituents of sales and distribution chain management systems with a modular architecture OPEN SESAME automates large businesses comprising of finished goods Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in developing the business components and responsible for developing the user interfaces using JSPs Primarily focused on the spring components such as action Servlets actions Model and View Objects View Resolver Created several JSP pages as common library that included in the other pages as standard modules like Portlets Developed JSP with Struts custom tags and implemented JavaScript validation of data Used JavaScript for the web page validation and Struts Validator for serverside validation Used EJB 30 Session beans using JBOSS Seam Context Management Application Conversation Session scopes and implemented Business processes such as user authentication Transfer of Service using Session EJBs Wrote the high performance multithreaded Java code using singleton mediator visitor facade observer template factory and publish and subscribe design pattern Used various Core Java concepts such as Exception Handling Collection APIs to implement various features and enhancements Coded JDBC calls in the Servlets to access the SQL Server database tables Used SQL and PLSQL queries to perform database operations on Web Sphere Created stored procedures and database scripts to populate database tables Experience deploying code on Web Sphere server Extensively used XML to code configuration files Used ANT to build run and create JARs and WAR files among other uses Developed test cases by using TestNG for unit testing for each module developed in test driven development Used Log4j to provide central logging facility and worked on SVN as version control system on dayto day basis to maintain the code history Followed Waterfall methodology for development process Environment J2EE JSP Servlets EJB JDBC DB2 PLSQL WebSphere IBM MQ SOAP UML HTML CSS JavaScript CVS and Linuxs Log4j Education Bachelor of Technology in Electronics communication Engineering Gitam University Skills TESTING 8 years AJAX 6 years JAX 6 years WEB SERVICES 6 years JAVA 6 years Javascript PHP Node React Angular NET AWS Python C Angularjs Additional Information TECHNICAL SKILLS LANGUAGE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB WEB TECHNOLOGIES HTMLDHTML XHTML CSS XML XSD WSDL DTD DOMSAX J2EE DESIGN PATTERN FRAMEWORKS STRUTS SPRING HIBERNATE iBATIS JSF IDES ECLIPSE NET BEANS BEA WEB LOGIC WORKSHOP IBM RAD WEB SERVICES JAXWS SOAP WSDL APACHE AXIS IBM MQ WEBSERVICE TOOLS TCP MONITOR SOAP UI HTTP MONITOR SECURE CRT APPLICATION SERVERS BEA WEBLOGIC IBM WAS JBOSS APACHE TOMCAT DATABASES MYSQL ORACLE SQL SERVER NOSQL mongo Cassandra SCRIPTING LANGUAGE JAVASCRIPT AJAX Shell Script TOOLS BUILD ANT MAVEN MAVEN2 LOGGINGLOG4J VERSION CONTROL CVS SVN CLEAR CASE SURROUND TESTING JIIRA JUNIT JMETER JQUERY CLEAR QUEST MONITORING SPLUNK GOMEZ TRAFFIC ROUTING Big F5 OPERATING SYSTEMS WINDOWS 2000 WINDOWS XP WINDOWS VISTA WINDOWS 7 UNIX LINUX AIX",
    "unique_id": "638e40b3-677c-4ca7-bf8b-2f9ea5364244"
}