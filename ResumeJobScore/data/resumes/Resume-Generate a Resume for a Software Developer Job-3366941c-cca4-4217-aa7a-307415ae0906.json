{
    "clean_data": "Web Developer span lWebspan span lDeveloperspan Web Developer Amalgamated Bank Stamford CT Full Stack Developer with 5 years of experience in Net Technology has extensive experience in both frontend and backend software engineering and implementation of software design patterns Breadth of experience covering the stack of frontend web user interfaces and web servers through to backend analysis and storage systems Strong knowledge with technologies including HTML5 CSS3 XML SOAP WSDL REST JSON and JavaScript Expertise in dynamic web page design via jQuery and AJAX which allow for updating the pages without reloading Experience in developing SPA using Angular 47 TypeScript Bootstrap Angular Material and Angular CLI Strong understanding of ObjectOriented Design in programming language like C in ASPNET Experience with webbased applications andor web servicesbased applications at massive scale like MVC5 REST API Web Forms Web Service WCF Experience in implementing Onion Architecture Ntier Architecture with Singleton and Factory Design Pattern Extensively worked with ADONET Entity Framework 6 and LINQ to enable objectrelational mapping consisting of access and modifications to data stored in relational database systems Experience with relational databases Microsoft SQL Server 2015 MySQL PostgreSQL in the areas of query optimization database design and scalability Strong Knowledge in Postman Jasmine Karma and Nunit to conduct testing Solid Knowledge of professional software engineering practices best practices for the full software development life cycle SDLC Proficient in using Git via GitHub to allow contributions from team members into projects as well as highlight progress and issues Effectively communicates with team members customers partners and management via Slack Azure DevOps JIRA and Agile Methodologies including assisting with or conducting technical walkthroughs reporting project status enabling facilitating Vendor solutions and providing accurate and concise documentation A person that thrives and succeeds in a hypergrowth environment where priorities shift fast Authorized to work in the US for any employer Work Experience Web Developer Amalgamated Bank New York NY November 2018 to Present Amalgamated Bank has been committed to serving local and global communities by being a market leader in Investment Banking Securities Investment Management and Wealth Management services This project is about using UIUX experience to design web pages and using languages and technologies of the NET framework to transport data I create designs from scratch configure existing systems and provide user support about data Roles and Responsibilities Used Angular 7 CSS 3 HTML 5 JavaScript and Angular Material for business end user facing front pages Implemented Responsive Design for making pages compatible and mobile friendly by using Bootstrap Library Created selfcontained reusable and testable modules and components Designed dynamic clientside codes to build web pages and simulate process for web application Employed Authentication and Authorization through JSON Web Token JWT Used page navigation and form validation via Angular material Used attribute directive to change the appearance or behavior of an element component or another directive Implemented Routing using Angular Router which enables navigation from one view to the next as users perform application tasks Employed RESTful Web API services that allows the project to retrieve and manipulate data from the backend Used Database First Approach in Entity Framework to build DAL for Web API which is for data exchange between clients and server Manipulated Web API integration Rest JSON XML Responsible for checking cross browser compatibility issues and have good knowledge in understanding Cross Origin Domain CORS issues Used MS SQL Server 2015 to create the tables and sample data for testing purpose Created Store Procedures Functions Triggers and Views using TSQL in Development environment for MS SQL Server 2015 Employed Postman to test RESTful Web API and Karma to unit test Angular Component Involved in work allocation review of Impact analysis Design and Coding in Azure DevOps Involved in writing Code merge Documentation through Git Worked in Agile environment and submitted daily status report to team leader Environment C Net Angular 70 Entity Framework 60 Web API MS SQL Server 2015 HTML 5 CSS 3 Angular Material Angular Router TypeScript JavaScript Bootstrap Rest JSON XML Postman Karma Agile Git Azure DevOps Software Developer The Graham Company Philadelphia PA June 2017 to October 2018 The Graham Company is an insurance brokerage and consulting firm committed to enhancing employee safety and business viability through an actionoriented approach to risk management The project was about using Net methodologies to design web page transform data to frontend and using the data to provide analysis and decision support Roles and Responsibilities Designed and developed web pages using with HTML5 CSS3 Ajax Bootstrap based on the W3C standards and Web 20 Designed interfaces with services for web applications via Asynchronous Programming Created Angular components like Components Services Directives and Angular Form to collect different user data and implemented Form Validations in Angular Used Lazy Loading to improve the performance when rendering the landing page of application Implemented Pipe in Angular to acquire the desirable format of data Used Dependency Injection mechanism for a simpler way of using service function and library in constructor Implemented Angular twoway binding to set up the initial value and get data from page in Angular Form Implemented NTier architecture using Web API Services C and LINQ and tested using Visual Studio NUnit Testing Framework and hosted on IIS 70 Created middle tier http services using ASPNET Web API Set up Exception Filters for error handler in Web API like HttpResponseException Enable crossorigin request in Web API to support cross domain request via Cross Origin Resource Sharing CORS Implemented Data Annotation to set validation rules for properties in model as filters Launched Karma test runner for testing in Angular CLI Actively involved in Development Sprints stand up meetings and customer reporting backlogs Used Azure DevOps for tasks tracking communication deployment and reporting Environment C Net HTML 5 CSS3 Bootstrap Ajax Angular 40 ASPNET Web API NTier architecture IIS 70 MS SQL Server 2015 NUnit Testing Angular CLI Karma Azure DevOps Software Web Developer ASPNet MVC Open Systems Healthcare Philadelphia PA January 2016 to May 2017 Open Systems Healthcare a passionate group of home care professionals who focus on finding the right home care services for customers needs Company provides inhome personal care skilled nursing and behavioral services to adults and seniors This project enables a separation of userinterface logic from application businesslogic and provides a natural interaction mechanism between participating solution entities by using MVC Roles and Responsibilities Effectively created easy to use reusable controls and integrated them into ASPNET web pages Provided an object model for connecting to HealthVault and invoking HealthVault Service APIs from an ASPNET MVC application Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Constructed maps nicely onto the MVC requestrouting mechanism thus offering advantages over the traditional pagebased web application request routing mechanisms Implemented Onion Architecture in MVC for the purpose of less coupling and separation of concerns which make model separated as Domain Entities Layer Repository Layer Service Layer and UI Layer Created Layout view and Partial view as shared views to simplify web page design Used TempData and ViewData to transform data between controller and view Created MVC Filters like authorization filters action filters and exception filters which are used to execute custom logic before or after executing the action method Used Model Binding in MVC framework view using Request Object directly to convert request values to primitive type and complex type parameters Created Database First Entity Framework and used LINQ and Lambda expression to retrieve data from data source Creating and maintaining database objects like complex Stored Procedures Tables Functions and SQL Joins Involved in complete Software Development Life Cycle SDLC of the project from requirements gathering analyzing designing and developing the application using Agile Methodologies Used Git to manipulate version control Extensively involved in monitoring and knowledge sharing of team to ensure the delivery of highquality products and communicate task tracking in JIRA Environment C Entity Framework 6 MVC 5 MS SQL Server 2015 Onion Architecture LINQ SDLC Visual Studio 2013 Agile Git JIRA Web Developer Web FormWCFADONet Vizo Financial Corporate Credit Union Middletown PA July 2014 to December 2015 Dollar Bank is a large full service regional bank serving both individuals and business customers This project mainly focused on developing software for the banks Contact Center Technology Group One area of focus is a Windows Desktop Application CATCH which is used by nearly every Customer Support Representative in the company and its administrative website Roles and Responsibilities Created event driven Web Forms using ASPNET and implemented form validation using validation controls and JavaScript both on server and client side Created Responsive Design for frontend via Bootstrap Developed master pages and handled events between master and content pages Created SOAP services using ASPNET WCF for exposing these to mobile device Set up Address Binding Contract ABC for configuring an endpoint in WCF Used 3tier architecture to separate concerns to DAL BLL and UI layers Used ADONET and data objects such as Data Adapter Data Reader Dataset Data table and XML Text Reader Writer for consistent access to SQL data sources Demonstrated create read update and delete CRUD functionalities for data retrieve on web site Developed unit and integration tests Created documentation and release guides Leading Dev team planning and estimation meetings as needed in Slack Crosstrainingknowledgesharing between team members in Azure DevOps Meeting with users and testers for Troubleshooting Sessions Environment C ASPNet Web Form JavaScript MS SQL Server 2013 Git HTML 4 CSS 3 WCF SOAP 3tier Architecture ADONET Slack Azure DevOps Education Master of Science Carnegie Mellon University Pittsburgh PA Skills Ado Database Adonet Microsoft sql server Sql server Mysql Oracle Sql net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Python Additional Information Technical Skills Web HTML5 CSS3 JavaScript Typescript jQuery Angular 47 Angular UI Bootstrap Angular Material Programming Microsoft C TSQL Python LINQ NET Web Forms MVC 5 Web Service WCF Web API ADONet Entity Framework 6 Visual Studio 20152019 Visual Studio Code 20142018 Database SQL Microsoft SQL Server Management Studio 2015 TSQL Oracle MySQL Teradata SAS Others Git XML JSON AJAX RESTFUL SDLC Agile Scrum VS Code ERDiagram SOAP UI Postman Jasmine Karma Nunit Slack Azure DevOps JIRA",
    "entities": [
        "Implemented Responsive Design",
        "AJAX",
        "The Graham Company Philadelphia",
        "Web API Services C",
        "MVC Roles",
        "New York",
        "Implemented Onion Architecture",
        "Domain Entities Layer Repository Layer Service Layer",
        "DAL for Web API",
        "Responsibilities",
        "HealthVault Service",
        "The Graham Company",
        "Angular Component Involved",
        "HealthVault",
        "Mysql Oracle Sql",
        "Software Development Life Cycle SDLC",
        "Responsibilities Created",
        "lWebspan",
        "Nunit",
        "Net Technology",
        "Bootstrap Library Created",
        "Cross Origin Resource Sharing CORS Implemented Data Annotation",
        "Developed",
        "Data Adapter Data Reader Dataset Data",
        "Created Responsive Design",
        "Vizo Financial Corporate Credit Union",
        "Git",
        "Exception Filters",
        "Azure DevOps Meeting",
        "Bootstrap Developed",
        "TSQL in Development",
        "Investment Banking Securities Investment Management and Wealth Management",
        "Created Database First Entity Framework",
        "Roles",
        "ADONET",
        "MS",
        "Views",
        "MVC",
        "NET",
        "DAL BLL",
        "LINQ",
        "US",
        "Request Object",
        "Contact Center Technology Group",
        "Singleton",
        "Web Developer Amalgamated Bank Stamford CT Full Stack Developer",
        "Present Amalgamated Bank",
        "Angular CLI Actively",
        "Cross Origin Domain",
        "Sql",
        "Development Sprints",
        "SQL",
        "UIUX",
        "GitHub",
        "Troubleshooting Sessions Environment C",
        "Api C Git Javascript Bootstrap Typescript Json Vs",
        "Postman",
        "a Windows Desktop Application",
        "Launched Karma",
        "SQL Server Management Studio",
        "Visual Studio",
        "CRUD",
        "Slack Azure DevOps JIRA",
        "Entity Framework",
        "JavaScript",
        "Created SOAP",
        "UI",
        "Stored Procedures Tables Functions",
        "Visual Studio NUnit Testing Framework",
        "Used Database First Approach",
        "Microsoft",
        "Created MVC Filters",
        "CSS",
        "jQuery",
        "Created Store Procedures Functions Triggers",
        "Components Services Directives and Angular Form",
        "SPA",
        "ObjectOriented Design",
        "ASPNET",
        "Slack Crosstrainingknowledgesharing",
        "Vendor",
        "Asynchronous Programming Created Angular",
        "Science Carnegie Mellon University",
        "Angular Form Implemented NTier"
    ],
    "experience": "Experience in developing SPA using Angular 47 TypeScript Bootstrap Angular Material and Angular CLI Strong understanding of ObjectOriented Design in programming language like C in ASPNET Experience with webbased applications andor web servicesbased applications at massive scale like MVC5 REST API Web Forms Web Service WCF Experience in implementing Onion Architecture Ntier Architecture with Singleton and Factory Design Pattern Extensively worked with ADONET Entity Framework 6 and LINQ to enable objectrelational mapping consisting of access and modifications to data stored in relational database systems Experience with relational databases Microsoft SQL Server 2015 MySQL PostgreSQL in the areas of query optimization database design and scalability Strong Knowledge in Postman Jasmine Karma and Nunit to conduct testing Solid Knowledge of professional software engineering practices best practices for the full software development life cycle SDLC Proficient in using Git via GitHub to allow contributions from team members into projects as well as highlight progress and issues Effectively communicates with team members customers partners and management via Slack Azure DevOps JIRA and Agile Methodologies including assisting with or conducting technical walkthroughs reporting project status enabling facilitating Vendor solutions and providing accurate and concise documentation A person that thrives and succeeds in a hypergrowth environment where priorities shift fast Authorized to work in the US for any employer Work Experience Web Developer Amalgamated Bank New York NY November 2018 to Present Amalgamated Bank has been committed to serving local and global communities by being a market leader in Investment Banking Securities Investment Management and Wealth Management services This project is about using UIUX experience to design web pages and using languages and technologies of the NET framework to transport data I create designs from scratch configure existing systems and provide user support about data Roles and Responsibilities Used Angular 7 CSS 3 HTML 5 JavaScript and Angular Material for business end user facing front pages Implemented Responsive Design for making pages compatible and mobile friendly by using Bootstrap Library Created selfcontained reusable and testable modules and components Designed dynamic clientside codes to build web pages and simulate process for web application Employed Authentication and Authorization through JSON Web Token JWT Used page navigation and form validation via Angular material Used attribute directive to change the appearance or behavior of an element component or another directive Implemented Routing using Angular Router which enables navigation from one view to the next as users perform application tasks Employed RESTful Web API services that allows the project to retrieve and manipulate data from the backend Used Database First Approach in Entity Framework to build DAL for Web API which is for data exchange between clients and server Manipulated Web API integration Rest JSON XML Responsible for checking cross browser compatibility issues and have good knowledge in understanding Cross Origin Domain CORS issues Used MS SQL Server 2015 to create the tables and sample data for testing purpose Created Store Procedures Functions Triggers and Views using TSQL in Development environment for MS SQL Server 2015 Employed Postman to test RESTful Web API and Karma to unit test Angular Component Involved in work allocation review of Impact analysis Design and Coding in Azure DevOps Involved in writing Code merge Documentation through Git Worked in Agile environment and submitted daily status report to team leader Environment C Net Angular 70 Entity Framework 60 Web API MS SQL Server 2015 HTML 5 CSS 3 Angular Material Angular Router TypeScript JavaScript Bootstrap Rest JSON XML Postman Karma Agile Git Azure DevOps Software Developer The Graham Company Philadelphia PA June 2017 to October 2018 The Graham Company is an insurance brokerage and consulting firm committed to enhancing employee safety and business viability through an actionoriented approach to risk management The project was about using Net methodologies to design web page transform data to frontend and using the data to provide analysis and decision support Roles and Responsibilities Designed and developed web pages using with HTML5 CSS3 Ajax Bootstrap based on the W3C standards and Web 20 Designed interfaces with services for web applications via Asynchronous Programming Created Angular components like Components Services Directives and Angular Form to collect different user data and implemented Form Validations in Angular Used Lazy Loading to improve the performance when rendering the landing page of application Implemented Pipe in Angular to acquire the desirable format of data Used Dependency Injection mechanism for a simpler way of using service function and library in constructor Implemented Angular twoway binding to set up the initial value and get data from page in Angular Form Implemented NTier architecture using Web API Services C and LINQ and tested using Visual Studio NUnit Testing Framework and hosted on IIS 70 Created middle tier http services using ASPNET Web API Set up Exception Filters for error handler in Web API like HttpResponseException Enable crossorigin request in Web API to support cross domain request via Cross Origin Resource Sharing CORS Implemented Data Annotation to set validation rules for properties in model as filters Launched Karma test runner for testing in Angular CLI Actively involved in Development Sprints stand up meetings and customer reporting backlogs Used Azure DevOps for tasks tracking communication deployment and reporting Environment C Net HTML 5 CSS3 Bootstrap Ajax Angular 40 ASPNET Web API NTier architecture IIS 70 MS SQL Server 2015 NUnit Testing Angular CLI Karma Azure DevOps Software Web Developer ASPNet MVC Open Systems Healthcare Philadelphia PA January 2016 to May 2017 Open Systems Healthcare a passionate group of home care professionals who focus on finding the right home care services for customers needs Company provides inhome personal care skilled nursing and behavioral services to adults and seniors This project enables a separation of userinterface logic from application businesslogic and provides a natural interaction mechanism between participating solution entities by using MVC Roles and Responsibilities Effectively created easy to use reusable controls and integrated them into ASPNET web pages Provided an object model for connecting to HealthVault and invoking HealthVault Service APIs from an ASPNET MVC application Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Constructed maps nicely onto the MVC requestrouting mechanism thus offering advantages over the traditional pagebased web application request routing mechanisms Implemented Onion Architecture in MVC for the purpose of less coupling and separation of concerns which make model separated as Domain Entities Layer Repository Layer Service Layer and UI Layer Created Layout view and Partial view as shared views to simplify web page design Used TempData and ViewData to transform data between controller and view Created MVC Filters like authorization filters action filters and exception filters which are used to execute custom logic before or after executing the action method Used Model Binding in MVC framework view using Request Object directly to convert request values to primitive type and complex type parameters Created Database First Entity Framework and used LINQ and Lambda expression to retrieve data from data source Creating and maintaining database objects like complex Stored Procedures Tables Functions and SQL Joins Involved in complete Software Development Life Cycle SDLC of the project from requirements gathering analyzing designing and developing the application using Agile Methodologies Used Git to manipulate version control Extensively involved in monitoring and knowledge sharing of team to ensure the delivery of highquality products and communicate task tracking in JIRA Environment C Entity Framework 6 MVC 5 MS SQL Server 2015 Onion Architecture LINQ SDLC Visual Studio 2013 Agile Git JIRA Web Developer Web FormWCFADONet Vizo Financial Corporate Credit Union Middletown PA July 2014 to December 2015 Dollar Bank is a large full service regional bank serving both individuals and business customers This project mainly focused on developing software for the banks Contact Center Technology Group One area of focus is a Windows Desktop Application CATCH which is used by nearly every Customer Support Representative in the company and its administrative website Roles and Responsibilities Created event driven Web Forms using ASPNET and implemented form validation using validation controls and JavaScript both on server and client side Created Responsive Design for frontend via Bootstrap Developed master pages and handled events between master and content pages Created SOAP services using ASPNET WCF for exposing these to mobile device Set up Address Binding Contract ABC for configuring an endpoint in WCF Used 3tier architecture to separate concerns to DAL BLL and UI layers Used ADONET and data objects such as Data Adapter Data Reader Dataset Data table and XML Text Reader Writer for consistent access to SQL data sources Demonstrated create read update and delete CRUD functionalities for data retrieve on web site Developed unit and integration tests Created documentation and release guides Leading Dev team planning and estimation meetings as needed in Slack Crosstrainingknowledgesharing between team members in Azure DevOps Meeting with users and testers for Troubleshooting Sessions Environment C ASPNet Web Form JavaScript MS SQL Server 2013 Git HTML 4 CSS 3 WCF SOAP 3tier Architecture ADONET Slack Azure DevOps Education Master of Science Carnegie Mellon University Pittsburgh PA Skills Ado Database Adonet Microsoft sql server Sql server Mysql Oracle Sql net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Python Additional Information Technical Skills Web HTML5 CSS3 JavaScript Typescript jQuery Angular 47 Angular UI Bootstrap Angular Material Programming Microsoft C TSQL Python LINQ NET Web Forms MVC 5 Web Service WCF Web API ADONet Entity Framework 6 Visual Studio 20152019 Visual Studio Code 20142018 Database SQL Microsoft SQL Server Management Studio 2015 TSQL Oracle MySQL Teradata SAS Others Git XML JSON AJAX RESTFUL SDLC Agile Scrum VS Code ERDiagram SOAP UI Postman Jasmine Karma Nunit Slack Azure DevOps JIRA",
    "extracted_keywords": [
        "Web",
        "Developer",
        "span",
        "lWebspan",
        "span",
        "lDeveloperspan",
        "Web",
        "Developer",
        "Amalgamated",
        "Bank",
        "Stamford",
        "CT",
        "Full",
        "Stack",
        "Developer",
        "years",
        "experience",
        "Net",
        "Technology",
        "experience",
        "frontend",
        "software",
        "engineering",
        "implementation",
        "software",
        "design",
        "patterns",
        "Breadth",
        "experience",
        "stack",
        "frontend",
        "web",
        "user",
        "interfaces",
        "web",
        "servers",
        "analysis",
        "storage",
        "systems",
        "knowledge",
        "technologies",
        "HTML5",
        "CSS3",
        "XML",
        "SOAP",
        "WSDL",
        "REST",
        "JSON",
        "JavaScript",
        "Expertise",
        "web",
        "page",
        "design",
        "jQuery",
        "AJAX",
        "pages",
        "Experience",
        "SPA",
        "Angular",
        "TypeScript",
        "Bootstrap",
        "Angular",
        "Material",
        "Angular",
        "CLI",
        "Strong",
        "understanding",
        "ObjectOriented",
        "Design",
        "programming",
        "language",
        "C",
        "ASPNET",
        "Experience",
        "applications",
        "web",
        "applications",
        "scale",
        "MVC5",
        "REST",
        "API",
        "Web",
        "Forms",
        "Web",
        "Service",
        "WCF",
        "Experience",
        "Onion",
        "Architecture",
        "Ntier",
        "Architecture",
        "Singleton",
        "Factory",
        "Design",
        "Pattern",
        "ADONET",
        "Entity",
        "Framework",
        "LINQ",
        "mapping",
        "access",
        "modifications",
        "data",
        "database",
        "systems",
        "Experience",
        "databases",
        "Microsoft",
        "SQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "areas",
        "query",
        "optimization",
        "database",
        "design",
        "scalability",
        "Strong",
        "Knowledge",
        "Postman",
        "Jasmine",
        "Karma",
        "Nunit",
        "Solid",
        "Knowledge",
        "software",
        "engineering",
        "practices",
        "practices",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Proficient",
        "Git",
        "GitHub",
        "contributions",
        "team",
        "members",
        "projects",
        "highlight",
        "progress",
        "issues",
        "communicates",
        "team",
        "members",
        "customers",
        "partners",
        "management",
        "Slack",
        "Azure",
        "DevOps",
        "JIRA",
        "Agile",
        "Methodologies",
        "walkthroughs",
        "project",
        "status",
        "Vendor",
        "solutions",
        "documentation",
        "person",
        "hypergrowth",
        "environment",
        "priorities",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Web",
        "Developer",
        "Amalgamated",
        "Bank",
        "New",
        "York",
        "NY",
        "November",
        "Present",
        "Amalgamated",
        "Bank",
        "communities",
        "market",
        "leader",
        "Investment",
        "Banking",
        "Securities",
        "Investment",
        "Management",
        "Wealth",
        "Management",
        "services",
        "project",
        "UIUX",
        "experience",
        "web",
        "pages",
        "languages",
        "technologies",
        "NET",
        "framework",
        "transport",
        "data",
        "designs",
        "scratch",
        "configure",
        "systems",
        "user",
        "support",
        "data",
        "Roles",
        "Responsibilities",
        "Angular",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "Material",
        "business",
        "end",
        "user",
        "pages",
        "Responsive",
        "Design",
        "pages",
        "Bootstrap",
        "Library",
        "Created",
        "modules",
        "components",
        "clientside",
        "codes",
        "web",
        "pages",
        "simulate",
        "process",
        "web",
        "application",
        "Employed",
        "Authentication",
        "Authorization",
        "JSON",
        "Web",
        "Token",
        "JWT",
        "page",
        "navigation",
        "validation",
        "material",
        "attribute",
        "directive",
        "appearance",
        "behavior",
        "element",
        "component",
        "directive",
        "Routing",
        "Angular",
        "Router",
        "navigation",
        "view",
        "users",
        "application",
        "tasks",
        "Web",
        "API",
        "services",
        "project",
        "manipulate",
        "data",
        "Database",
        "First",
        "Approach",
        "Entity",
        "Framework",
        "DAL",
        "Web",
        "API",
        "data",
        "exchange",
        "clients",
        "server",
        "Manipulated",
        "Web",
        "API",
        "integration",
        "Rest",
        "JSON",
        "XML",
        "cross",
        "browser",
        "compatibility",
        "issues",
        "knowledge",
        "Cross",
        "Origin",
        "Domain",
        "CORS",
        "issues",
        "MS",
        "SQL",
        "Server",
        "tables",
        "sample",
        "data",
        "testing",
        "purpose",
        "Created",
        "Store",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "TSQL",
        "Development",
        "environment",
        "MS",
        "SQL",
        "Server",
        "Employed",
        "Postman",
        "Web",
        "API",
        "Karma",
        "unit",
        "test",
        "Angular",
        "Component",
        "work",
        "allocation",
        "review",
        "Impact",
        "analysis",
        "Design",
        "Coding",
        "Azure",
        "DevOps",
        "Code",
        "Documentation",
        "Git",
        "Worked",
        "environment",
        "status",
        "report",
        "team",
        "leader",
        "Environment",
        "C",
        "Net",
        "Angular",
        "Entity",
        "Framework",
        "Web",
        "API",
        "MS",
        "SQL",
        "Server",
        "HTML",
        "CSS",
        "Angular",
        "Material",
        "Angular",
        "Router",
        "TypeScript",
        "JavaScript",
        "Bootstrap",
        "Rest",
        "JSON",
        "XML",
        "Postman",
        "Karma",
        "Agile",
        "Git",
        "Azure",
        "DevOps",
        "Software",
        "Developer",
        "Graham",
        "Company",
        "Philadelphia",
        "PA",
        "June",
        "October",
        "Graham",
        "Company",
        "insurance",
        "brokerage",
        "firm",
        "employee",
        "safety",
        "business",
        "viability",
        "approach",
        "risk",
        "management",
        "project",
        "methodologies",
        "design",
        "web",
        "page",
        "data",
        "data",
        "analysis",
        "decision",
        "support",
        "Roles",
        "Responsibilities",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "Ajax",
        "Bootstrap",
        "W3C",
        "standards",
        "Web",
        "interfaces",
        "services",
        "web",
        "applications",
        "Asynchronous",
        "Programming",
        "Angular",
        "components",
        "Components",
        "Services",
        "Directives",
        "Angular",
        "Form",
        "user",
        "data",
        "Form",
        "Validations",
        "Angular",
        "Used",
        "Lazy",
        "Loading",
        "performance",
        "landing",
        "page",
        "application",
        "Pipe",
        "Angular",
        "format",
        "data",
        "Dependency",
        "Injection",
        "mechanism",
        "way",
        "service",
        "function",
        "library",
        "constructor",
        "Angular",
        "twoway",
        "value",
        "data",
        "page",
        "Angular",
        "Form",
        "NTier",
        "architecture",
        "Web",
        "API",
        "Services",
        "C",
        "LINQ",
        "Visual",
        "Studio",
        "NUnit",
        "Testing",
        "Framework",
        "IIS",
        "tier",
        "http",
        "services",
        "ASPNET",
        "Web",
        "API",
        "Exception",
        "Filters",
        "error",
        "handler",
        "Web",
        "API",
        "HttpResponseException",
        "Enable",
        "crossorigin",
        "request",
        "Web",
        "API",
        "cross",
        "domain",
        "request",
        "Cross",
        "Origin",
        "Resource",
        "Sharing",
        "CORS",
        "Data",
        "Annotation",
        "validation",
        "rules",
        "properties",
        "model",
        "filters",
        "Karma",
        "test",
        "runner",
        "testing",
        "Angular",
        "CLI",
        "Development",
        "Sprints",
        "meetings",
        "customer",
        "backlogs",
        "Azure",
        "DevOps",
        "tasks",
        "communication",
        "deployment",
        "Environment",
        "C",
        "Net",
        "HTML",
        "CSS3",
        "Bootstrap",
        "Ajax",
        "Angular",
        "ASPNET",
        "Web",
        "API",
        "NTier",
        "architecture",
        "IIS",
        "MS",
        "SQL",
        "Server",
        "NUnit",
        "Testing",
        "Angular",
        "CLI",
        "Karma",
        "Azure",
        "DevOps",
        "Software",
        "Web",
        "Developer",
        "ASPNet",
        "MVC",
        "Open",
        "Systems",
        "Healthcare",
        "Philadelphia",
        "PA",
        "January",
        "May",
        "Open",
        "Systems",
        "Healthcare",
        "group",
        "home",
        "care",
        "professionals",
        "home",
        "care",
        "services",
        "customers",
        "Company",
        "care",
        "nursing",
        "services",
        "adults",
        "seniors",
        "project",
        "separation",
        "logic",
        "application",
        "interaction",
        "mechanism",
        "solution",
        "entities",
        "MVC",
        "Roles",
        "Responsibilities",
        "controls",
        "ASPNET",
        "web",
        "pages",
        "object",
        "model",
        "HealthVault",
        "HealthVault",
        "Service",
        "APIs",
        "ASPNET",
        "MVC",
        "application",
        "classes",
        "classes",
        "business",
        "logic",
        "C",
        "NET",
        "maps",
        "MVC",
        "requestrouting",
        "mechanism",
        "advantages",
        "web",
        "application",
        "request",
        "mechanisms",
        "Onion",
        "Architecture",
        "MVC",
        "purpose",
        "coupling",
        "separation",
        "concerns",
        "model",
        "Domain",
        "Entities",
        "Layer",
        "Repository",
        "Layer",
        "Service",
        "Layer",
        "UI",
        "Layer",
        "Created",
        "Layout",
        "view",
        "view",
        "views",
        "web",
        "page",
        "design",
        "TempData",
        "ViewData",
        "data",
        "controller",
        "Created",
        "MVC",
        "Filters",
        "authorization",
        "filters",
        "action",
        "filters",
        "exception",
        "filters",
        "custom",
        "logic",
        "action",
        "method",
        "Model",
        "Binding",
        "MVC",
        "framework",
        "view",
        "Request",
        "Object",
        "request",
        "values",
        "type",
        "type",
        "parameters",
        "Database",
        "First",
        "Entity",
        "Framework",
        "Lambda",
        "expression",
        "data",
        "data",
        "source",
        "database",
        "objects",
        "Stored",
        "Procedures",
        "Tables",
        "Functions",
        "SQL",
        "Joins",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "project",
        "requirements",
        "application",
        "Agile",
        "Methodologies",
        "Git",
        "version",
        "control",
        "monitoring",
        "knowledge",
        "sharing",
        "team",
        "delivery",
        "highquality",
        "products",
        "task",
        "JIRA",
        "Environment",
        "C",
        "Entity",
        "Framework",
        "MVC",
        "MS",
        "SQL",
        "Server",
        "Onion",
        "Architecture",
        "SDLC",
        "Visual",
        "Studio",
        "Agile",
        "Git",
        "JIRA",
        "Web",
        "Developer",
        "Web",
        "FormWCFADONet",
        "Vizo",
        "Financial",
        "Corporate",
        "Credit",
        "Union",
        "Middletown",
        "PA",
        "July",
        "December",
        "Dollar",
        "Bank",
        "service",
        "bank",
        "individuals",
        "business",
        "customers",
        "project",
        "software",
        "banks",
        "Contact",
        "Center",
        "Technology",
        "Group",
        "area",
        "focus",
        "Windows",
        "Desktop",
        "Application",
        "CATCH",
        "Customer",
        "Support",
        "Representative",
        "company",
        "website",
        "Roles",
        "Responsibilities",
        "event",
        "Web",
        "Forms",
        "ASPNET",
        "form",
        "validation",
        "validation",
        "controls",
        "JavaScript",
        "server",
        "client",
        "side",
        "Responsive",
        "Design",
        "frontend",
        "Bootstrap",
        "master",
        "pages",
        "events",
        "master",
        "content",
        "pages",
        "SOAP",
        "services",
        "ASPNET",
        "WCF",
        "device",
        "Address",
        "Binding",
        "Contract",
        "ABC",
        "endpoint",
        "WCF",
        "architecture",
        "concerns",
        "DAL",
        "BLL",
        "UI",
        "layers",
        "ADONET",
        "data",
        "objects",
        "Data",
        "Adapter",
        "Data",
        "Reader",
        "Dataset",
        "Data",
        "table",
        "XML",
        "Text",
        "Reader",
        "Writer",
        "access",
        "SQL",
        "data",
        "sources",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "data",
        "retrieve",
        "web",
        "site",
        "unit",
        "integration",
        "tests",
        "documentation",
        "release",
        "guides",
        "Dev",
        "team",
        "planning",
        "estimation",
        "meetings",
        "Slack",
        "Crosstrainingknowledgesharing",
        "team",
        "members",
        "Azure",
        "DevOps",
        "Meeting",
        "users",
        "testers",
        "Troubleshooting",
        "Sessions",
        "Environment",
        "C",
        "ASPNet",
        "Web",
        "Form",
        "JavaScript",
        "MS",
        "SQL",
        "Server",
        "Git",
        "HTML",
        "CSS",
        "WCF",
        "SOAP",
        "3tier",
        "Architecture",
        "ADONET",
        "Slack",
        "Azure",
        "DevOps",
        "Education",
        "Master",
        "Science",
        "Carnegie",
        "Mellon",
        "University",
        "Pittsburgh",
        "PA",
        "Skills",
        "Ado",
        "Database",
        "Adonet",
        "Microsoft",
        "server",
        "Sql",
        "server",
        "Mysql",
        "Oracle",
        "Sql",
        "Visual",
        "studio",
        "Api",
        "C",
        "Git",
        "Javascript",
        "Bootstrap",
        "Typescript",
        "Json",
        "Vs",
        "code",
        "Wcf",
        "Python",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Web",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Typescript",
        "jQuery",
        "Angular",
        "Angular",
        "UI",
        "Bootstrap",
        "Angular",
        "Material",
        "Programming",
        "Microsoft",
        "C",
        "TSQL",
        "Python",
        "NET",
        "Web",
        "Forms",
        "MVC",
        "Web",
        "Service",
        "WCF",
        "Web",
        "API",
        "ADONet",
        "Entity",
        "Framework",
        "Visual",
        "Studio",
        "Visual",
        "Studio",
        "Code",
        "Database",
        "SQL",
        "Microsoft",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "TSQL",
        "Oracle",
        "MySQL",
        "Teradata",
        "SAS",
        "Others",
        "Git",
        "XML",
        "JSON",
        "AJAX",
        "RESTFUL",
        "SDLC",
        "Agile",
        "Scrum",
        "VS",
        "Code",
        "ERDiagram",
        "SOAP",
        "UI",
        "Postman",
        "Jasmine",
        "Karma",
        "Nunit",
        "Slack",
        "Azure",
        "DevOps",
        "JIRA"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:05:04.141528",
    "resume_data": "Web Developer span lWebspan span lDeveloperspan Web Developer Amalgamated Bank Stamford CT Full Stack Developer with 5 years of experience in Net Technology has extensive experience in both frontend and backend software engineering and implementation of software design patterns Breadth of experience covering the stack of frontend web user interfaces and web servers through to backend analysis and storage systems Strong knowledge with technologies including HTML5 CSS3 XML SOAP WSDL REST JSON and JavaScript Expertise in dynamic web page design via jQuery and AJAX which allow for updating the pages without reloading Experience in developing SPA using Angular 47 TypeScript Bootstrap Angular Material and Angular CLI Strong understanding of ObjectOriented Design in programming language like C in ASPNET Experience with webbased applications andor web servicesbased applications at massive scale like MVC5 REST API Web Forms Web Service WCF Experience in implementing Onion Architecture Ntier Architecture with Singleton and Factory Design Pattern Extensively worked with ADONET Entity Framework 6 and LINQ to enable objectrelational mapping consisting of access and modifications to data stored in relational database systems Experience with relational databases Microsoft SQL Server 2015 MySQL PostgreSQL in the areas of query optimization database design and scalability Strong Knowledge in Postman Jasmine Karma and Nunit to conduct testing Solid Knowledge of professional software engineering practices best practices for the full software development life cycle SDLC Proficient in using Git via GitHub to allow contributions from team members into projects as well as highlight progress and issues Effectively communicates with team members customers partners and management via Slack Azure DevOps JIRA and Agile Methodologies including assisting with or conducting technical walkthroughs reporting project status enabling facilitating Vendor solutions and providing accurate and concise documentation A person that thrives and succeeds in a hypergrowth environment where priorities shift fast Authorized to work in the US for any employer Work Experience Web Developer Amalgamated Bank New York NY November 2018 to Present Amalgamated Bank has been committed to serving local and global communities by being a market leader in Investment Banking Securities Investment Management and Wealth Management services This project is about using UIUX experience to design web pages and using languages and technologies of the NET framework to transport data I create designs from scratch configure existing systems and provide user support about data Roles and Responsibilities Used Angular 7 CSS 3 HTML 5 JavaScript and Angular Material for business end user facing front pages Implemented Responsive Design for making pages compatible and mobile friendly by using Bootstrap Library Created selfcontained reusable and testable modules and components Designed dynamic clientside codes to build web pages and simulate process for web application Employed Authentication and Authorization through JSON Web Token JWT Used page navigation and form validation via Angular material Used attribute directive to change the appearance or behavior of an element component or another directive Implemented Routing using Angular Router which enables navigation from one view to the next as users perform application tasks Employed RESTful Web API services that allows the project to retrieve and manipulate data from the backend Used Database First Approach in Entity Framework to build DAL for Web API which is for data exchange between clients and server Manipulated Web API integration Rest JSON XML Responsible for checking cross browser compatibility issues and have good knowledge in understanding Cross Origin Domain CORS issues Used MS SQL Server 2015 to create the tables and sample data for testing purpose Created Store Procedures Functions Triggers and Views using TSQL in Development environment for MS SQL Server 2015 Employed Postman to test RESTful Web API and Karma to unit test Angular Component Involved in work allocation review of Impact analysis Design and Coding in Azure DevOps Involved in writing Code merge Documentation through Git Worked in Agile environment and submitted daily status report to team leader Environment C Net Angular 70 Entity Framework 60 Web API MS SQL Server 2015 HTML 5 CSS 3 Angular Material Angular Router TypeScript JavaScript Bootstrap Rest JSON XML Postman Karma Agile Git Azure DevOps Software Developer The Graham Company Philadelphia PA June 2017 to October 2018 The Graham Company is an insurance brokerage and consulting firm committed to enhancing employee safety and business viability through an actionoriented approach to risk management The project was about using Net methodologies to design web page transform data to frontend and using the data to provide analysis and decision support Roles and Responsibilities Designed and developed web pages using with HTML5 CSS3 Ajax Bootstrap based on the W3C standards and Web 20 Designed interfaces with services for web applications via Asynchronous Programming Created Angular components like Components Services Directives and Angular Form to collect different user data and implemented Form Validations in Angular Used Lazy Loading to improve the performance when rendering the landing page of application Implemented Pipe in Angular to acquire the desirable format of data Used Dependency Injection mechanism for a simpler way of using service function and library in constructor Implemented Angular twoway binding to set up the initial value and get data from page in Angular Form Implemented NTier architecture using Web API Services C and LINQ and tested using Visual Studio NUnit Testing Framework and hosted on IIS 70 Created middle tier http services using ASPNET Web API Set up Exception Filters for error handler in Web API like HttpResponseException Enable crossorigin request in Web API to support cross domain request via Cross Origin Resource Sharing CORS Implemented Data Annotation to set validation rules for properties in model as filters Launched Karma test runner for testing in Angular CLI Actively involved in Development Sprints stand up meetings and customer reporting backlogs Used Azure DevOps for tasks tracking communication deployment and reporting Environment C Net HTML 5 CSS3 Bootstrap Ajax Angular 40 ASPNET Web API NTier architecture IIS 70 MS SQL Server 2015 NUnit Testing Angular CLI Karma Azure DevOps Software Web Developer ASPNet MVC Open Systems Healthcare Philadelphia PA January 2016 to May 2017 Open Systems Healthcare a passionate group of home care professionals who focus on finding the right home care services for customers needs Company provides inhome personal care skilled nursing and behavioral services to adults and seniors This project enables a separation of userinterface logic from application businesslogic and provides a natural interaction mechanism between participating solution entities by using MVC Roles and Responsibilities Effectively created easy to use reusable controls and integrated them into ASPNET web pages Provided an object model for connecting to HealthVault and invoking HealthVault Service APIs from an ASPNET MVC application Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Constructed maps nicely onto the MVC requestrouting mechanism thus offering advantages over the traditional pagebased web application request routing mechanisms Implemented Onion Architecture in MVC for the purpose of less coupling and separation of concerns which make model separated as Domain Entities Layer Repository Layer Service Layer and UI Layer Created Layout view and Partial view as shared views to simplify web page design Used TempData and ViewData to transform data between controller and view Created MVC Filters like authorization filters action filters and exception filters which are used to execute custom logic before or after executing the action method Used Model Binding in MVC framework view using Request Object directly to convert request values to primitive type and complex type parameters Created Database First Entity Framework and used LINQ and Lambda expression to retrieve data from data source Creating and maintaining database objects like complex Stored Procedures Tables Functions and SQL Joins Involved in complete Software Development Life Cycle SDLC of the project from requirements gathering analyzing designing and developing the application using Agile Methodologies Used Git to manipulate version control Extensively involved in monitoring and knowledge sharing of team to ensure the delivery of highquality products and communicate task tracking in JIRA Environment C Entity Framework 6 MVC 5 MS SQL Server 2015 Onion Architecture LINQ SDLC Visual Studio 2013 Agile Git JIRA Web Developer Web FormWCFADONet Vizo Financial Corporate Credit Union Middletown PA July 2014 to December 2015 Dollar Bank is a large full service regional bank serving both individuals and business customers This project mainly focused on developing software for the banks Contact Center Technology Group One area of focus is a Windows Desktop Application CATCH which is used by nearly every Customer Support Representative in the company and its administrative website Roles and Responsibilities Created event driven Web Forms using ASPNET and implemented form validation using validation controls and JavaScript both on server and client side Created Responsive Design for frontend via Bootstrap Developed master pages and handled events between master and content pages Created SOAP services using ASPNET WCF for exposing these to mobile device Set up Address Binding Contract ABC for configuring an endpoint in WCF Used 3tier architecture to separate concerns to DAL BLL and UI layers Used ADONET and data objects such as Data Adapter Data Reader Dataset Data table and XML Text Reader Writer for consistent access to SQL data sources Demonstrated create read update and delete CRUD functionalities for data retrieve on web site Developed unit and integration tests Created documentation and release guides Leading Dev team planning and estimation meetings as needed in Slack Crosstrainingknowledgesharing between team members in Azure DevOps Meeting with users and testers for Troubleshooting Sessions Environment C ASPNet Web Form JavaScript MS SQL Server 2013 Git HTML 4 CSS 3 WCF SOAP 3tier Architecture ADONET Slack Azure DevOps Education Master of Science Carnegie Mellon University Pittsburgh PA Skills Ado Database Adonet Microsoft sql server Sql server Mysql Oracle Sql net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Python Additional Information Technical Skills Web HTML5 CSS3 JavaScript Typescript jQuery Angular 47 Angular UI Bootstrap Angular Material Programming Microsoft C TSQL Python LINQ NET Web Forms MVC 5 Web Service WCF Web API ADONet Entity Framework 6 Visual Studio 20152019 Visual Studio Code 20142018 Database SQL Microsoft SQL Server Management Studio 2015 TSQL Oracle MySQL Teradata SAS Others Git XML JSON AJAX RESTFUL SDLC Agile Scrum VS Code ERDiagram SOAP UI Postman Jasmine Karma Nunit Slack Azure DevOps JIRA",
    "unique_id": "3366941c-cca4-4217-aa7a-307415ae0906"
}