{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer ATT Plano TX Almost 6 years of experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Experienced in objectoriented programming OOP concepts using Python and PHP Expert in STL containers Design Patterns Socket programming Multithreading Actively involved in each phase of software Development life cycle SDLC experience in Agile Software Methodology Experience in AWS Cloud platform and its features which includes EC2 IAM EBS Cloudwatch AWS Config and AWS S3 Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle PySide SciPy PyTables Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and jQuery Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience in using various version control systems like Git GitHub SVN CVS Indepth experience in LAMP Linux Apache MySQL Python Architecture Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experienced with integration of MongoDB and Casandra databases Experience in Python open stack APIs Experience with UML diagrams Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask and Pyramid Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Working on ServerSide validations using REGEX sent response by using Json By following the OWASP Strategies Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Defined the problem statement and explored the possibilities of using deep learning algorithms for solution identification in Higgs Boson simulated dataset Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Hands on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for queryin Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Implemented SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Good Knowledge in creating processing data pipelines using Kafka and Spark Streaming Assisted in pricing of securities including bonds and mortgages in programming domain such as C MATLAB and R programming Used SonarQube for code coverage and code quality Experience with Apache Spark ecosystem using SparkSQL Data Frames RDDs and knowledge on Spark MLib Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts TECHNICAL SKILSS Programming Languages Python35 27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery NumPy matPlotlib PySide SciPy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Cloud Technologies AWS Rackspace Cloud Amazon S3 Bug Tracking Tools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Authorized to work in the US for any employer Work Experience Python developer ATT Plano TX September 2017 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Spark Spark API SparkSQl Spark Streaming Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer IBM Irving TX January 2017 to August 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using SonarQube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Wells Fargo Alpharetta GA September 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Extracted log from Git using Python and performed data cleaning using regex to generate the Changelogs for comparing different software versions Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules Numpy matPlotLib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Genpact Bengaluru Karnataka November 2014 to July 2016 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Tri Geo Technologies January 2013 to October 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Education Masters in Science in Computer and Information Sciences Southern Arkansas University Magnolia AR December 2017 Bachelors in Engineering in Electronics Communication Engg Andhra University April 2013 Skills Linux 4 years Mac Less than 1 year Unix 1 year",
    "entities": [
        "Engineering in Electronics Communication Engg Andhra University",
        "Test Driven Development TDD",
        "MatPlotlib",
        "MavenHudson Deploy",
        "Git GitHub SVN CVS Indepth",
        "UNIX",
        "Agile Software Methodology",
        "Researched",
        "SQL Profiler and Analytics",
        "SonarQube Responsible",
        "Science in Computer and Information Sciences Southern Arkansas University",
        "JSON",
        "Created Terraform",
        "LAMP Linux",
        "GIT Repository Setup",
        "IBM",
        "Data Frames Worked",
        "PHP Python",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "DHTML",
        "Present Responsibilities Interacted with Business",
        "PyUnit",
        "Bootstrap Implemented RESTful WebServices",
        "JUnit",
        "Shell",
        "Implemented Terraform",
        "Formulated",
        "Apache Spark",
        "TX",
        "Amazon",
        "ServerSide",
        "Maven Repository and Deployment",
        "STL",
        "WebSphere",
        "Python",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "SparkSQL",
        "Developed",
        "Skills",
        "Jenkins",
        "VLAN Trunk",
        "Model View Control MVC Architecture",
        "CSS Bootstrap",
        "AWS S3",
        "IAM EBS Cloudwatch AWS Config",
        "DB Created",
        "Python and Flask Postgres Database Wrote",
        "Puppet",
        "UML",
        "SKILSS Programming Languages Python35",
        "Git",
        "Created Git",
        "ANSIBLE",
        "Terraform Developed Merge",
        "DjangoREST",
        "Develop",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "the RPM Package",
        "REST API",
        "Installed and Administered Jenkins CI",
        "Flask",
        "Collaborated",
        "SonarQube",
        "Automate",
        "Created Unit",
        "Nexus",
        "QT Regex",
        "CLI",
        "MVC",
        "Integration Testing",
        "GIT",
        "Working on",
        "linear",
        "US",
        "Terraform",
        "QA",
        "IAM",
        "GitHub Involved",
        "Spark Streaming Assisted",
        "SparkSQL Data Frames",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Oracle MySQL PostgreSQL",
        "Built Jenkins",
        "AWS",
        "the Application Experience",
        "Oracle",
        "SNS Implemented",
        "REGEX",
        "ELB",
        "UNIX Developed",
        "SAX",
        "Performed Unit",
        "Created an AWS Lambda",
        "Created Maven",
        "SQL",
        "OLTP",
        "GitHub",
        "Spark RDD",
        "Mentored",
        "lPythonspan",
        "Multithreading Actively",
        "Nginx",
        "WebApplication Developer",
        "Ant",
        "SSH",
        "CI",
        "DOM API",
        "Routing Create",
        "CRUD",
        "GIT Experienced",
        "Maven",
        "Data Frames",
        "SQL Server Expertise",
        "SQL Sub Queries Stored Procedures Triggers Cursors",
        "NumPy SQL Alchemy",
        "Performed",
        "Build",
        "Spark SQL",
        "Djangos",
        "Spark MLib",
        "UI",
        "Created Business Logic",
        "SVN",
        "View Sets",
        "CSS",
        "ATT",
        "Transformation and Actions",
        "Tomcat",
        "REST",
        "AWS Experienced",
        "Jenkins Integration",
        "NetBeans",
        "Software Development Life Cycle",
        "Routers Involved",
        "Maven Builds",
        "Integration",
        "MFA"
    ],
    "experience": "Experience in AWS Cloud platform and its features which includes EC2 IAM EBS Cloudwatch AWS Config and AWS S3 Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle PySide SciPy PyTables Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and jQuery Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience in using various version control systems like Git GitHub SVN CVS Indepth experience in LAMP Linux Apache MySQL Python Architecture Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experienced with integration of MongoDB and Casandra databases Experience in Python open stack APIs Experience with UML diagrams Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask and Pyramid Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Working on ServerSide validations using REGEX sent response by using Json By following the OWASP Strategies Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Defined the problem statement and explored the possibilities of using deep learning algorithms for solution identification in Higgs Boson simulated dataset Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Hands on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for queryin Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Implemented SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Good Knowledge in creating processing data pipelines using Kafka and Spark Streaming Assisted in pricing of securities including bonds and mortgages in programming domain such as C MATLAB and R programming Used SonarQube for code coverage and code quality Experience with Apache Spark ecosystem using SparkSQL Data Frames RDDs and knowledge on Spark MLib Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts TECHNICAL SKILSS Programming Languages Python35 27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery NumPy matPlotlib PySide SciPy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Cloud Technologies AWS Rackspace Cloud Amazon S3 Bug Tracking Tools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Authorized to work in the US for any employer Work Experience Python developer ATT Plano TX September 2017 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Spark Spark API SparkSQl Spark Streaming Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer IBM Irving TX January 2017 to August 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using SonarQube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Wells Fargo Alpharetta GA September 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Extracted log from Git using Python and performed data cleaning using regex to generate the Changelogs for comparing different software versions Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules Numpy matPlotLib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Genpact Bengaluru Karnataka November 2014 to July 2016 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Tri Geo Technologies January 2013 to October 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Education Masters in Science in Computer and Information Sciences Southern Arkansas University Magnolia AR December 2017 Bachelors in Engineering in Electronics Communication Engg Andhra University April 2013 Skills Linux 4 years Mac Less than 1 year Unix 1 year",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "ATT",
        "Plano",
        "TX",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "Cloud",
        "Engineer",
        "programming",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "PHP",
        "Expert",
        "STL",
        "containers",
        "Design",
        "Patterns",
        "Socket",
        "programming",
        "Multithreading",
        "phase",
        "software",
        "Development",
        "life",
        "cycle",
        "SDLC",
        "experience",
        "Agile",
        "Software",
        "Methodology",
        "Experience",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "IAM",
        "EBS",
        "Cloudwatch",
        "AWS",
        "Config",
        "S3",
        "Experience",
        "python",
        "packages",
        "NumPy",
        "SQL",
        "Alchemy",
        "matPlotlib",
        "soup",
        "pickle",
        "PySide",
        "SciPy",
        "PyTables",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "Experience",
        "Python",
        "stack",
        "APIs",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "SVN",
        "CVS",
        "Indepth",
        "experience",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "Architecture",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "integration",
        "MongoDB",
        "Casandra",
        "Experience",
        "Python",
        "stack",
        "APIs",
        "Experience",
        "UML",
        "diagrams",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "Pycharm",
        "Eclipse",
        "NetBeans",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Pyramid",
        "Handson",
        "experience",
        "Unix",
        "Linux",
        "Kernels",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "GitHub",
        "GitLab",
        "Experience",
        "SASSTAT",
        "regression",
        "ServerSide",
        "REGEX",
        "response",
        "Json",
        "OWASP",
        "Strategies",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "problem",
        "statement",
        "possibilities",
        "learning",
        "algorithms",
        "solution",
        "identification",
        "Higgs",
        "Boson",
        "Experience",
        "CI",
        "tools",
        "Hudson",
        "Build",
        "Forge",
        "Jenkins",
        "builds",
        "Hands",
        "Apache",
        "Spark",
        "jobs",
        "Scala",
        "test",
        "environment",
        "data",
        "processing",
        "Spark",
        "SQL",
        "queryin",
        "knowledge",
        "experience",
        "Jenkins",
        "CI",
        "pipelines",
        "experience",
        "deployment",
        "pipelines",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Experience",
        "project",
        "workflowspipelines",
        "Jenkins",
        "CI",
        "tool",
        "deployment",
        "IBM",
        "uDeploy",
        "Integrated",
        "uDeploy",
        "nexus",
        "Jenkins",
        "CD",
        "Hands",
        "experience",
        "installation",
        "configuration",
        "Apache",
        "Tomcat",
        "server",
        "SonarQube",
        "code",
        "quality",
        "check",
        "Nexus",
        "repository",
        "Jenkins",
        "Continuous",
        "Integration",
        "Good",
        "Knowledge",
        "processing",
        "data",
        "pipelines",
        "Kafka",
        "Spark",
        "Streaming",
        "Assisted",
        "pricing",
        "securities",
        "bonds",
        "mortgages",
        "programming",
        "domain",
        "C",
        "MATLAB",
        "R",
        "programming",
        "SonarQube",
        "code",
        "coverage",
        "code",
        "quality",
        "Experience",
        "Apache",
        "Spark",
        "ecosystem",
        "SparkSQL",
        "Data",
        "Frames",
        "RDDs",
        "knowledge",
        "Spark",
        "MLib",
        "Experience",
        "SQL",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "experience",
        "frameworks",
        "Flask",
        "WebApp2",
        "Experience",
        "List",
        "Comprehensions",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "SKILSS",
        "Programming",
        "Languages",
        "Python35",
        "C",
        "C",
        "UML",
        "design",
        "Java",
        "SQL",
        "PLSQL",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "NumPy",
        "matPlotlib",
        "PySide",
        "SciPy",
        "wxPython",
        "PyTables",
        "Frameworks",
        "Django",
        "web2py",
        "pyramid",
        "Flask",
        "Databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "MongoDB",
        "Cloud",
        "Technologies",
        "AWS",
        "Rackspace",
        "Cloud",
        "Amazon",
        "S3",
        "Bug",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "Rational",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SNMP",
        "SMTP",
        "REST",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "developer",
        "ATT",
        "Plano",
        "TX",
        "September",
        "Present",
        "Responsibilities",
        "Business",
        "team",
        "requirements",
        "experience",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managed",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "Worked",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "AWS",
        "Lambda",
        "architecture",
        "AWS",
        "S3",
        "Buckets",
        "thumbnail",
        "create",
        "event",
        "user",
        "picture",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Experience",
        "Python",
        "packages",
        "modules",
        "Requests",
        "Scrapy",
        "BeautifulSoup",
        "Multithreading",
        "Pandas",
        "NumPy",
        "SciPy",
        "MatPlotlib",
        "wxPython",
        "QT",
        "Regex",
        "expressions",
        "SQL",
        "Alchemy",
        "SQL",
        "database",
        "connectiors",
        "JDBCODBC",
        "PyVirtual",
        "Environment",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systemsIAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "data",
        "Spark",
        "RDD",
        "memory",
        "data",
        "Computation",
        "Output",
        "response",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Maven",
        "POMs",
        "build",
        "process",
        "projects",
        "party",
        "tools",
        "SonarQube",
        "Responsible",
        "SonarQube",
        "code",
        "quality",
        "check",
        "Nexus",
        "repository",
        "generating",
        "reports",
        "projects",
        "Jenkins",
        "Helped",
        "process",
        "SonarQube",
        "Presentations",
        "business",
        "value",
        "measurement",
        "scripts",
        "data",
        "access",
        "manipulation",
        "reporting",
        "functions",
        "R",
        "programming",
        "languages",
        "procedures",
        "integration",
        "R",
        "programming",
        "plans",
        "data",
        "sources",
        "delivery",
        "systems",
        "queries",
        "SparkSQL",
        "Scala",
        "Hands",
        "experience",
        "Apache",
        "Spark",
        "RDDs",
        "Data",
        "Frames",
        "operations",
        "Transformation",
        "Actions",
        "RDDs",
        "Data",
        "Frames",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Dynamo",
        "DB",
        "Python",
        "Django",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spark",
        "Spark",
        "API",
        "SparkSQl",
        "Spark",
        "Streaming",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Python",
        "Developer",
        "IBM",
        "Irving",
        "TX",
        "January",
        "August",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "web",
        "applications",
        "Flask",
        "frame",
        "works",
        "MVC",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "usage",
        "SQL",
        "Profiler",
        "Analytics",
        "query",
        "optimization",
        "maintenance",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Jenkins",
        "Continuous",
        "Integration",
        "builds",
        "deployments",
        "Build",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Installed",
        "Administered",
        "Jenkins",
        "CI",
        "Maven",
        "Builds",
        "Jenkins",
        "configuring",
        "integrationCI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "scale",
        "data",
        "analytics",
        "machine",
        "learning",
        "models",
        "code",
        "coverage",
        "SonarQube",
        "scanner",
        "runner",
        "unit",
        "test",
        "plugins",
        "bugs",
        "style",
        "JUnit",
        "MavenHudson",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Integration",
        "data",
        "storage",
        "solutions",
        "Django",
        "ORM",
        "system",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "team",
        "QA",
        "DB",
        "standards",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Environment",
        "Python",
        "Django",
        "Java",
        "SQL",
        "Java",
        "Script",
        "Linux",
        "Shell",
        "Scripting",
        "Mongo",
        "DB",
        "HTML",
        "Angular",
        "JS",
        "Eclipse",
        "jQuery",
        "JSON",
        "XML",
        "CSS",
        "MySQL",
        "Bootstrap",
        "Amazon",
        "s3",
        "Python",
        "Developer",
        "Wells",
        "Fargo",
        "Alpharetta",
        "GA",
        "September",
        "December",
        "Responsibilities",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Angularjs",
        "client",
        "web",
        "application",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Python",
        "stock",
        "APIs",
        "log",
        "Git",
        "Python",
        "data",
        "regex",
        "Changelogs",
        "software",
        "versions",
        "databases",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "Pythons",
        "modules",
        "Numpy",
        "matPlotLib",
        "data",
        "creation",
        "histograms",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "Git",
        "repository",
        "project",
        "GitHub",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "Application",
        "Experience",
        "containers",
        "Docker",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "AJAX",
        "Tomcat",
        "Apache",
        "HTTP",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "OOD",
        "Shell",
        "Scripting",
        "GIT",
        "Hub",
        "MYSQL",
        "Cassandra",
        "JIRA",
        "Python",
        "Developer",
        "Genpact",
        "Bengaluru",
        "Karnataka",
        "November",
        "July",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "largescale",
        "hightraffic",
        "Python",
        "web",
        "applications",
        "features",
        "core",
        "functionality",
        "platforms",
        "services",
        "support",
        "host",
        "production",
        "QA",
        "development",
        "OLTP",
        "hundreds",
        "store",
        "Installation",
        "migrating",
        "patching",
        "DB2",
        "Oracle",
        "SQL",
        "Server",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "MySQL",
        "Python",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "channels",
        "Django",
        "Used",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "expressions",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "skills",
        "user",
        "web",
        "applications",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Bugzilla",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Tri",
        "Geo",
        "Technologies",
        "January",
        "October",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "SQL",
        "queries",
        "PLSQL",
        "functions",
        "Command",
        "Line",
        "Interface",
        "CLI",
        "tool",
        "hat",
        "Linux",
        "Pythons",
        "XML",
        "parser",
        "SAX",
        "DOM",
        "API",
        "amounts",
        "data",
        "DB",
        "Linux",
        "Services",
        "REST",
        "web",
        "services",
        "Shell",
        "script",
        "Build",
        "RPM",
        "Package",
        "Product",
        "upgrade",
        "features",
        "Design",
        "test",
        "cases",
        "REST",
        "API",
        "REST",
        "API",
        "test",
        "framework",
        "development",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Design",
        "test",
        "cases",
        "CLI",
        "automation",
        "Python",
        "Unit",
        "testing",
        "unit",
        "test",
        "cases",
        "PyUnit",
        "framework",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test",
        "network",
        "subnet",
        "VLANs",
        "Routers",
        "automation",
        "creations",
        "VLAN",
        "Trunk",
        "port",
        "Routing",
        "Create",
        "branch",
        "code",
        "changes",
        "Master",
        "branch",
        "SVN",
        "version",
        "control",
        "commands",
        "Linux",
        "Environment",
        "Python",
        "Java",
        "PLSQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Education",
        "Masters",
        "Science",
        "Computer",
        "Information",
        "Sciences",
        "Southern",
        "Arkansas",
        "University",
        "Magnolia",
        "AR",
        "December",
        "Bachelors",
        "Engineering",
        "Electronics",
        "Communication",
        "Engg",
        "Andhra",
        "University",
        "April",
        "Skills",
        "Linux",
        "years",
        "Mac",
        "year",
        "Unix",
        "year"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:49:54.656479",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer ATT Plano TX Almost 6 years of experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Experienced in objectoriented programming OOP concepts using Python and PHP Expert in STL containers Design Patterns Socket programming Multithreading Actively involved in each phase of software Development life cycle SDLC experience in Agile Software Methodology Experience in AWS Cloud platform and its features which includes EC2 IAM EBS Cloudwatch AWS Config and AWS S3 Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle PySide SciPy PyTables Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and jQuery Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience in using various version control systems like Git GitHub SVN CVS Indepth experience in LAMP Linux Apache MySQL Python Architecture Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experienced with integration of MongoDB and Casandra databases Experience in Python open stack APIs Experience with UML diagrams Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask and Pyramid Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Working on ServerSide validations using REGEX sent response by using Json By following the OWASP Strategies Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Defined the problem statement and explored the possibilities of using deep learning algorithms for solution identification in Higgs Boson simulated dataset Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Hands on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for queryin Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Implemented SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Good Knowledge in creating processing data pipelines using Kafka and Spark Streaming Assisted in pricing of securities including bonds and mortgages in programming domain such as C MATLAB and R programming Used SonarQube for code coverage and code quality Experience with Apache Spark ecosystem using SparkSQL Data Frames RDDs and knowledge on Spark MLib Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts TECHNICAL SKILSS Programming Languages Python35 27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery NumPy matPlotlib PySide SciPy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Cloud Technologies AWS Rackspace Cloud Amazon S3 Bug Tracking Tools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Authorized to work in the US for any employer Work Experience Python developer ATT Plano TX September 2017 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Spark Spark API SparkSQl Spark Streaming Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer IBM Irving TX January 2017 to August 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using SonarQube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Wells Fargo Alpharetta GA September 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Extracted log from Git using Python and performed data cleaning using regex to generate the Changelogs for comparing different software versions Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules Numpy matPlotLib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript OOD Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Genpact Bengaluru Karnataka November 2014 to July 2016 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Tri Geo Technologies January 2013 to October 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Education Masters in Science in Computer and Information Sciences Southern Arkansas University Magnolia AR December 2017 Bachelors in Engineering in Electronics Communication Engg Andhra University April 2013 Skills Linux 4 years Mac Less than 1 year Unix 1 year",
    "unique_id": "bedad88c-e381-4f54-abee-d41f48ffb345"
}