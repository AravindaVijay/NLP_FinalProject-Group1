{
    "clean_data": "Angular 24FrontEnd Developer Angular 24FrontEnd span lDeveloperspan Angular 24FrontEnd Developer Cisive Little Rock AR Over 8 years of Web Development experience in designing developing testing and deploying web applications Extensive experience in developing various applications using Visual Studio NET technologies like C ASPNET ADONET XML Web Services WCF WPF MVC Proficient at building a single page application website using AngularJS Good experience and strong fundamental of architecture design including Data structure ntier architecture design patterns Singleton Factory Builder Iterator architectural patterns MVC MVP MVVM Extensive knowledge and working experience of web development technologies such as JavaScript jQuery UI AngularJS Angular24 HTML5 CSS3 SASS and Bootstrap Excellent experience with develop design deploy web service WCF web API in cross domain environment and other NET technologies including Entity Framework 654 ADONET and LINQ Acquired knowledge over the years by working on all aspects of web development from frontend to backend including business logic layer midtier data access layer and database Excellent knowledge in implementing AJAX method to communicate with a server Experience with Data Accessing and manipulating using ADONET and Entity Framework Highly proficient with debuggertesting tools NUnit Fiddler Batarang and Jasmine Experience with project management tool sourceversion control such as Team Foundation Server JIRA GIT and Mecurial Extensive knowledge in designing and creating database and tables in SQL Server Hands on experience in working with Stored Procedures Indexes Triggers Temp Tables and Views using SQL Server 2012 Proven track record working with different software development cycle processes Waterfall AgileScrum and Extreme Programming Experience with multiple web servers including IIS and Apache Valuable team player with excellent communication skills trouble shooting skills with ability to learn and adapt to new technologies quickly Authorized to work in the US for any employer Work Experience Angular 24FrontEnd Developer Cisive Holtsville NY February 2017 to Present Description Cisive provides comprehensive global background investigations on potential and current employees vendors clients and business partners Project was to develop a web based application to efficiently speed up the background investigation process Administrator and normal user could use the application to register or update new clients information simply by dropping in the original document to the web application which the document could be in TXTCSV or Excel sheet format The application would perform the custom validation on the file which can catch any error before sending the file to the database User can also track the status of any further investigation and reviewing done on the document and download the error file if certain information from the file need to be updated Responsibilities Developed single page applications using Angular 2 Typescript HTML5 CSS3 and Bootstrap Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Followed the NTier architecture for the application development with DAL BLL and UI Involved in requirement gathering designing development UI reviews and maintenance Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Created reusable templates using Angular directives and worked with NPM package manager tools Node JS Good knowledge on using Angular APIs like angularhttp For making HTTP requests angularcommon Common core things including form validation angularrouterRouting for our entire app Implemented HTTP requests using Rxjs Observable library to handle multiple values over time Designed the page using Bootstrap and some custom CSS Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked on unit testing for the Angular application using karma Called the Restful web service calls for POST PUT DELETE and GET methods Developed CSS3 to style page layouts navigation and pageloading spinner Extensively worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI for DOMCSS Manipulation Collaborated with the frontend design team and backend team and started converting the static files with the dynamic content with the data is retrieved from the database by the API calls Used Mecurial for managing source code by resolving merge conflicts that occur during collaboration of various stakeholders of the application Environment Angular2 Angular 4 SQL server 2012 IIS 7 HTML CSS3 Mecurial Web API JSON Web API Karma NetAngularJS Web API Developer Saint Peters Healthcare System New Brunswick NJ April 2016 to January 2017 Description Saint Peters Healthcare System was formed in 2007 and reflects the expansive scope of health and wellness services it offers to the community Project was to develop a web based application to clinically integrate existing system and build cost effective system to improve quality and patient outcome Administrator user could use the application to register new clients or personal customers manage basic information policy detail and claim history Authentication and authorization is provided based on user roles Responsibilities Helped team lead to create data flow diagrams and class diagram using MS Visio Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Followed single page application design and integrated all the pages using ngroute and routeProvider Used custom authentication variable in ngroute to provide authentication and authorization for the application for every change in event of routeChangeSuccess Implemented nggrid to show the data in the table Helped implement the DAL layer of Web API using Entity Framework 5 Designed the page using Bootstrap and some custom CSS Implemented the promises using q to handle the auto update by notifying the variable Created custom directives for reusable components used across the application Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created many controllers for each page with dependencies such as q location window routeParams and all services to be used on the controller Implemented validation method for form input in web page using combination of normal HTML validator use novalidate to bypass the normal HTML checking and handle them using ngshow nghide ngdisable and specific AngularJS validator directive ngRequired Used Team Foundation Server TFS for source code management Performed unit testing with Jasmine for frontend and Nunit for backend Environment AngularJS 14 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Batarang Jasmine SSIS NetWCF Developer NJM Insurance Group Trenton NJ January 2014 to March 2016 Description NJM is one of the largest auto insurance companies in New Jersey with a rich history of outstanding customer service as well as premium rates that are among the most competitive in the state This project was to develop an application that allows employees and supervisors to log report and update work time and activities Responsibilities Involved in requirement gathering design development testing and implementation of the web application and used Agile development life cycle with daily scrum meetings Built the web application using ASPNET MVC5 Worked on designing the database using SQL server 2012 with SQL server management studio and create stored procedures for specific View Model Helped implement ntier architecture using Entity Framework 6 as Data access layer and View Model for Business access layer with LINQ to select specific data Implemented repository and unit of work patterns by using dependency injection inject the repository on MVC controller level to facilitate Unit Testing and Test Driven Development Utilized the form base authentication with roleactivity base authorization for the web application security Used client and server side validations for better performance and maintain clear code structure Implemented validation using Data Annotation to set the validation ruleinformation and implemented client side validation by adding EnableClientValidation with the use of jQuery jQueryvalidate and unobtrusive Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Enhanced pages with jQuery AJAX methods which provided responsive user interfaces to display the data on the pate and to make asynchronous HTTP calls to the server side For FrontEnd HTML page used Razor View 323 as a view engine and HTML5 For FrontEnd script used jQuery 310 and jQuery UI 1120 Used WCF as a service to provide the data from database purposely for security Tested the functionality of the web application using Nunit to perform Unit testing Used JIRA as management tool and GIT as a version control Environment ASPNetNet Framework 451 C ASPNet MVC 5 WCF Entity Framework 6 LINQ SQL server 2014 HTML CSS3 Bootstrap JavaScript jQuery 11 jQuery UI 1103 IIS 8 Net Web APIAngularJS Developer Marlin Business Services Corp Mount Laurel NJ January 2013 to December 2013 Description Marlin Business Services Corp provides commercial equipment financing and working capital loans to small businesses nationwide It is centered around providing excellent service and delivering on commitments made to equipment dealers manufacturers resellers distributors brokers and their customers This project was to develop an internal management system providing recruiting functionalities including openclose positions key word search group email calendar and dashboard Responsibilities Worked in a ScrumAgile environment for design and development stages of the project Designed and developed the AngularJS web application using AngularJS 10 Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Gained experience in REST architectural style worked on CRUD actions Get Post Put and Delete Designed the page using Bootstrap and custom CSS style sheet Implemented Two Way Databinding in AngularJS in order to handle the automatic synchronization of data between the model and view components Created AngularJS directives factories and services for developing single page web applications Configured Angular Route Module which provides routeProvider to help create SPA Implemented DAL layer of Web API using Entity Framework 5 Implemented the promises using q to handle the auto update by notifying the variable Debugged and tracked using Fiddler for Web API service and Batarang for AngularJS Used Jasmine to unit test the AngularJS project in an isolated and automated manner Environment AngularJS 10 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Fiddler Batarang Jasmine Net Developer Insurance Agencies Northfield NJ November 2011 to December 2012 Description Insurance Agencies Inc is a premier independent insurance agency It is a general independent agency with a broad range of Commercial Personal Life and Health products The system developed in this project helped simplify the operation process of new insurance policy applications and approvals as well as claims verification and adjustment All the policies and claims relevant materials were uploaded through the system which was then reviewed by the assigned underwriters and managers for decision making Responsibilities Followed Agile methodology with daily scrum meeting Built the web application using ASPNet MVC 4 Worked with Product Owner to design dataflow diagram in Visio Worked with team lead to config routeconfig and webconfig Implemented MVC application using C ASPNet MVC with Razor View Engine JavaScript jQuery AJAX CSS and Bootstrap Implemented HTTP handler with action filter to perform actions such as error handling and pass views and JSON objects Designed and executed ntier architecture using ADONet as Data access layer and View model for Business access layer with LINQ to select specific data Used Temp Data and View Data to maintain data between multiple requests Implemented various validation method for the pages including JavaScript validation View Model data annotation All the scripts and style sheets were loaded using bundling for better performance Used WCF as a service to provide the data from database purposely for security Consumed the service using jQueryAjax in the crossdomain environment Environment ASPNetNet Framework 40 C ASPNet MVC 3 ADONet LINQ SQL server 2008 Razor View 1 HTML CSS3 WCF JavaScript jQuery 11 IIS 7 Net Developer Bogle Agency Insurance Lyndhurst NJ October 2009 to October 2011 Description Bogle Agency Insurance is an Independent Insurance Agency which provides several options to select the best possible coverage and pricing for prospective clients This Project was to develop an application for the PR department to create and schedule events for the firm The main purpose of this project was for the department to arrange meetings between potential clients and prospects The application consists of various modules such add edit and delete event modules With the right credentials employees can schedule and manage provide details of the set events to the attendees Responsibilities Responsible for designing and implementation of code and database Built the web application using ASPNet Web Forms Designed the database using SQL server 2008 with SQL server management studio Designed and executed ntier architecture using ADONet as Data access layer and BAL for business logic Used multiple state managements such as Cache Cookies View State Hidden Field Query string session to providekeep information associated with the page Implemented multiple controllers such as Repeater GridView to show the data Implemented technologiestechniques such as Ajax toolkit AJAX autocomplete extender on some elements of the web page search box etc For Frontend script used jQuery and JavaScript Utilized data provided from Web service and used bridge added web service to the project solution to deal with the cross domain Environment ASPNet Web Forms C Web Service ADONet SQL server 2008 JavaScript jQuery Ajax toolkit HTML CSS3 Education Bachelor of Science in Computer Science in Computer Science Rutgers University of New Brunswick Skills DATABASE 8 years SQL SERVER 8 years SQL 8 years NET 7 years JAVASCRIPT 7 years Additional Information TECHNICAL SKILL ProgrammingScript LanguagesPlatform C C JAVA JavaScript NodeJS Typescript FrontEnd LanguagesScripts JavaScript jQuery jQuery UI Bootstrap AngularJS AJAX Angular24 NET Technologies ASPNET MVC 543 ASPNET Web Forms Entity Framework Web Services WCF Web API LINQ NET framework 15 IDE Visual Studio 10 DatabaseService tools SQL Server 10 SSIS SSRS MySQL Version Control Tools Team Foundation Server GIT JIRA Mecurial Microsoft Programs WordsExcelPowerPointAccessVisio DebuggerTesting NUnit Jasmine Others XML JSON",
    "entities": [
        "Rxjs Observable",
        "AJAX",
        "jQuery AJAX",
        "Commercial Personal Life and Health",
        "LINQ SQL",
        "HTTP",
        "ScrumAgile",
        "ASPNET MVC5 Worked",
        "Description Bogle Agency Insurance",
        "Marlin Business Services Corp Mount",
        "NJM Insurance Group Trenton NJ",
        "Repeater GridView",
        "Project",
        "Created Typescript",
        "Present Description Cisive",
        "Componentbased",
        "Bootstrap Implemented",
        "BAL",
        "Control Tools Team Foundation",
        "NET Technologies",
        "Nunit",
        "Additional Information TECHNICAL SKILL ProgrammingScript LanguagesPlatform C C",
        "SQL Server",
        "Data Accessing",
        "Mecurial Extensive",
        "Used Team Foundation Server TFS",
        "GET PUT POST",
        "Lyndhurst NJ",
        "CSS Good",
        "Responsibilities Involved",
        "New Jersey",
        "Laurel NJ",
        "Restful",
        "Angular 2 Created",
        "Razor View Engine",
        "Independent Insurance Agency",
        "Stored Procedures Indexes Triggers Temp Tables",
        "Description Insurance Agencies Inc",
        "POST PUT DELETE",
        "FrontEnd",
        "ADONET",
        "Cache Cookies View State",
        "Views",
        "Team Foundation",
        "jQuery UI",
        "MVC",
        "GIT",
        "Extreme Programming",
        "NET",
        "DAL BLL",
        "API",
        "LINQ",
        "US",
        "Responsibilities Helped",
        "SQL Server Hands",
        "Created",
        "MVP",
        "Description Marlin Business Services Corp",
        "Responsibilities Responsible",
        "CSS Implemented",
        "View Data",
        "SQL",
        "Bootstrap",
        "Bootstrap Excellent",
        "NPM",
        "Description Saint Peters Healthcare System",
        "DELETE",
        "CSHTML",
        "Description NJM",
        "CRUD",
        "Performed",
        "JavaScript",
        "UI",
        "Microsoft",
        "jQuery jQueryvalidate",
        "MS Visio Created",
        "CSS",
        "Visual Studio NET",
        "JavaScript Utilized",
        "jQuery",
        "ASPNET",
        "Data",
        "REST",
        "UI Involved",
        "IDE Visual Studio",
        "Waterfall AgileScrum",
        "DatabaseService",
        "Data Annotation"
    ],
    "experience": "Experience with Data Accessing and manipulating using ADONET and Entity Framework Highly proficient with debuggertesting tools NUnit Fiddler Batarang and Jasmine Experience with project management tool sourceversion control such as Team Foundation Server JIRA GIT and Mecurial Extensive knowledge in designing and creating database and tables in SQL Server Hands on experience in working with Stored Procedures Indexes Triggers Temp Tables and Views using SQL Server 2012 Proven track record working with different software development cycle processes Waterfall AgileScrum and Extreme Programming Experience with multiple web servers including IIS and Apache Valuable team player with excellent communication skills trouble shooting skills with ability to learn and adapt to new technologies quickly Authorized to work in the US for any employer Work Experience Angular 24FrontEnd Developer Cisive Holtsville NY February 2017 to Present Description Cisive provides comprehensive global background investigations on potential and current employees vendors clients and business partners Project was to develop a web based application to efficiently speed up the background investigation process Administrator and normal user could use the application to register or update new clients information simply by dropping in the original document to the web application which the document could be in TXTCSV or Excel sheet format The application would perform the custom validation on the file which can catch any error before sending the file to the database User can also track the status of any further investigation and reviewing done on the document and download the error file if certain information from the file need to be updated Responsibilities Developed single page applications using Angular 2 Typescript HTML5 CSS3 and Bootstrap Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Followed the NTier architecture for the application development with DAL BLL and UI Involved in requirement gathering designing development UI reviews and maintenance Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Created reusable templates using Angular directives and worked with NPM package manager tools Node JS Good knowledge on using Angular APIs like angularhttp For making HTTP requests angularcommon Common core things including form validation angularrouterRouting for our entire app Implemented HTTP requests using Rxjs Observable library to handle multiple values over time Designed the page using Bootstrap and some custom CSS Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked on unit testing for the Angular application using karma Called the Restful web service calls for POST PUT DELETE and GET methods Developed CSS3 to style page layouts navigation and pageloading spinner Extensively worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI for DOMCSS Manipulation Collaborated with the frontend design team and backend team and started converting the static files with the dynamic content with the data is retrieved from the database by the API calls Used Mecurial for managing source code by resolving merge conflicts that occur during collaboration of various stakeholders of the application Environment Angular2 Angular 4 SQL server 2012 IIS 7 HTML CSS3 Mecurial Web API JSON Web API Karma NetAngularJS Web API Developer Saint Peters Healthcare System New Brunswick NJ April 2016 to January 2017 Description Saint Peters Healthcare System was formed in 2007 and reflects the expansive scope of health and wellness services it offers to the community Project was to develop a web based application to clinically integrate existing system and build cost effective system to improve quality and patient outcome Administrator user could use the application to register new clients or personal customers manage basic information policy detail and claim history Authentication and authorization is provided based on user roles Responsibilities Helped team lead to create data flow diagrams and class diagram using MS Visio Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Followed single page application design and integrated all the pages using ngroute and routeProvider Used custom authentication variable in ngroute to provide authentication and authorization for the application for every change in event of routeChangeSuccess Implemented nggrid to show the data in the table Helped implement the DAL layer of Web API using Entity Framework 5 Designed the page using Bootstrap and some custom CSS Implemented the promises using q to handle the auto update by notifying the variable Created custom directives for reusable components used across the application Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created many controllers for each page with dependencies such as q location window routeParams and all services to be used on the controller Implemented validation method for form input in web page using combination of normal HTML validator use novalidate to bypass the normal HTML checking and handle them using ngshow nghide ngdisable and specific AngularJS validator directive ngRequired Used Team Foundation Server TFS for source code management Performed unit testing with Jasmine for frontend and Nunit for backend Environment AngularJS 14 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Batarang Jasmine SSIS NetWCF Developer NJM Insurance Group Trenton NJ January 2014 to March 2016 Description NJM is one of the largest auto insurance companies in New Jersey with a rich history of outstanding customer service as well as premium rates that are among the most competitive in the state This project was to develop an application that allows employees and supervisors to log report and update work time and activities Responsibilities Involved in requirement gathering design development testing and implementation of the web application and used Agile development life cycle with daily scrum meetings Built the web application using ASPNET MVC5 Worked on designing the database using SQL server 2012 with SQL server management studio and create stored procedures for specific View Model Helped implement ntier architecture using Entity Framework 6 as Data access layer and View Model for Business access layer with LINQ to select specific data Implemented repository and unit of work patterns by using dependency injection inject the repository on MVC controller level to facilitate Unit Testing and Test Driven Development Utilized the form base authentication with roleactivity base authorization for the web application security Used client and server side validations for better performance and maintain clear code structure Implemented validation using Data Annotation to set the validation ruleinformation and implemented client side validation by adding EnableClientValidation with the use of jQuery jQueryvalidate and unobtrusive Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Enhanced pages with jQuery AJAX methods which provided responsive user interfaces to display the data on the pate and to make asynchronous HTTP calls to the server side For FrontEnd HTML page used Razor View 323 as a view engine and HTML5 For FrontEnd script used jQuery 310 and jQuery UI 1120 Used WCF as a service to provide the data from database purposely for security Tested the functionality of the web application using Nunit to perform Unit testing Used JIRA as management tool and GIT as a version control Environment ASPNetNet Framework 451 C ASPNet MVC 5 WCF Entity Framework 6 LINQ SQL server 2014 HTML CSS3 Bootstrap JavaScript jQuery 11 jQuery UI 1103 IIS 8 Net Web APIAngularJS Developer Marlin Business Services Corp Mount Laurel NJ January 2013 to December 2013 Description Marlin Business Services Corp provides commercial equipment financing and working capital loans to small businesses nationwide It is centered around providing excellent service and delivering on commitments made to equipment dealers manufacturers resellers distributors brokers and their customers This project was to develop an internal management system providing recruiting functionalities including openclose positions key word search group email calendar and dashboard Responsibilities Worked in a ScrumAgile environment for design and development stages of the project Designed and developed the AngularJS web application using AngularJS 10 Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Gained experience in REST architectural style worked on CRUD actions Get Post Put and Delete Designed the page using Bootstrap and custom CSS style sheet Implemented Two Way Databinding in AngularJS in order to handle the automatic synchronization of data between the model and view components Created AngularJS directives factories and services for developing single page web applications Configured Angular Route Module which provides routeProvider to help create SPA Implemented DAL layer of Web API using Entity Framework 5 Implemented the promises using q to handle the auto update by notifying the variable Debugged and tracked using Fiddler for Web API service and Batarang for AngularJS Used Jasmine to unit test the AngularJS project in an isolated and automated manner Environment AngularJS 10 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Fiddler Batarang Jasmine Net Developer Insurance Agencies Northfield NJ November 2011 to December 2012 Description Insurance Agencies Inc is a premier independent insurance agency It is a general independent agency with a broad range of Commercial Personal Life and Health products The system developed in this project helped simplify the operation process of new insurance policy applications and approvals as well as claims verification and adjustment All the policies and claims relevant materials were uploaded through the system which was then reviewed by the assigned underwriters and managers for decision making Responsibilities Followed Agile methodology with daily scrum meeting Built the web application using ASPNet MVC 4 Worked with Product Owner to design dataflow diagram in Visio Worked with team lead to config routeconfig and webconfig Implemented MVC application using C ASPNet MVC with Razor View Engine JavaScript jQuery AJAX CSS and Bootstrap Implemented HTTP handler with action filter to perform actions such as error handling and pass views and JSON objects Designed and executed ntier architecture using ADONet as Data access layer and View model for Business access layer with LINQ to select specific data Used Temp Data and View Data to maintain data between multiple requests Implemented various validation method for the pages including JavaScript validation View Model data annotation All the scripts and style sheets were loaded using bundling for better performance Used WCF as a service to provide the data from database purposely for security Consumed the service using jQueryAjax in the crossdomain environment Environment ASPNetNet Framework 40 C ASPNet MVC 3 ADONet LINQ SQL server 2008 Razor View 1 HTML CSS3 WCF JavaScript jQuery 11 IIS 7 Net Developer Bogle Agency Insurance Lyndhurst NJ October 2009 to October 2011 Description Bogle Agency Insurance is an Independent Insurance Agency which provides several options to select the best possible coverage and pricing for prospective clients This Project was to develop an application for the PR department to create and schedule events for the firm The main purpose of this project was for the department to arrange meetings between potential clients and prospects The application consists of various modules such add edit and delete event modules With the right credentials employees can schedule and manage provide details of the set events to the attendees Responsibilities Responsible for designing and implementation of code and database Built the web application using ASPNet Web Forms Designed the database using SQL server 2008 with SQL server management studio Designed and executed ntier architecture using ADONet as Data access layer and BAL for business logic Used multiple state managements such as Cache Cookies View State Hidden Field Query string session to providekeep information associated with the page Implemented multiple controllers such as Repeater GridView to show the data Implemented technologiestechniques such as Ajax toolkit AJAX autocomplete extender on some elements of the web page search box etc For Frontend script used jQuery and JavaScript Utilized data provided from Web service and used bridge added web service to the project solution to deal with the cross domain Environment ASPNet Web Forms C Web Service ADONet SQL server 2008 JavaScript jQuery Ajax toolkit HTML CSS3 Education Bachelor of Science in Computer Science in Computer Science Rutgers University of New Brunswick Skills DATABASE 8 years SQL SERVER 8 years SQL 8 years NET 7 years JAVASCRIPT 7 years Additional Information TECHNICAL SKILL ProgrammingScript LanguagesPlatform C C JAVA JavaScript NodeJS Typescript FrontEnd LanguagesScripts JavaScript jQuery jQuery UI Bootstrap AngularJS AJAX Angular24 NET Technologies ASPNET MVC 543 ASPNET Web Forms Entity Framework Web Services WCF Web API LINQ NET framework 15 IDE Visual Studio 10 DatabaseService tools SQL Server 10 SSIS SSRS MySQL Version Control Tools Team Foundation Server GIT JIRA Mecurial Microsoft Programs WordsExcelPowerPointAccessVisio DebuggerTesting NUnit Jasmine Others XML JSON",
    "extracted_keywords": [
        "Developer",
        "Angular",
        "span",
        "lDeveloperspan",
        "Angular",
        "Developer",
        "Cisive",
        "Little",
        "Rock",
        "AR",
        "years",
        "Web",
        "Development",
        "experience",
        "testing",
        "web",
        "applications",
        "experience",
        "applications",
        "Visual",
        "Studio",
        "NET",
        "technologies",
        "C",
        "ASPNET",
        "ADONET",
        "XML",
        "Web",
        "Services",
        "WCF",
        "WPF",
        "MVC",
        "Proficient",
        "page",
        "application",
        "website",
        "experience",
        "architecture",
        "design",
        "Data",
        "structure",
        "ntier",
        "architecture",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "Builder",
        "Iterator",
        "patterns",
        "MVC",
        "MVP",
        "MVVM",
        "knowledge",
        "working",
        "experience",
        "web",
        "development",
        "technologies",
        "JavaScript",
        "jQuery",
        "UI",
        "Angular24",
        "HTML5",
        "CSS3",
        "SASS",
        "Bootstrap",
        "Excellent",
        "experience",
        "design",
        "deploy",
        "web",
        "service",
        "WCF",
        "web",
        "API",
        "cross",
        "domain",
        "environment",
        "NET",
        "technologies",
        "Entity",
        "Framework",
        "ADONET",
        "knowledge",
        "years",
        "aspects",
        "web",
        "development",
        "frontend",
        "business",
        "logic",
        "layer",
        "data",
        "access",
        "layer",
        "database",
        "knowledge",
        "AJAX",
        "method",
        "server",
        "Experience",
        "Data",
        "Accessing",
        "ADONET",
        "Entity",
        "Framework",
        "debuggertesting",
        "tools",
        "NUnit",
        "Fiddler",
        "Batarang",
        "Jasmine",
        "Experience",
        "project",
        "management",
        "tool",
        "sourceversion",
        "control",
        "Team",
        "Foundation",
        "Server",
        "JIRA",
        "GIT",
        "Mecurial",
        "knowledge",
        "database",
        "tables",
        "SQL",
        "Server",
        "Hands",
        "experience",
        "Stored",
        "Procedures",
        "Indexes",
        "Triggers",
        "Temp",
        "Tables",
        "Views",
        "SQL",
        "Server",
        "Proven",
        "track",
        "record",
        "software",
        "development",
        "cycle",
        "Waterfall",
        "AgileScrum",
        "Extreme",
        "Programming",
        "Experience",
        "web",
        "servers",
        "IIS",
        "Apache",
        "Valuable",
        "team",
        "player",
        "communication",
        "skills",
        "trouble",
        "skills",
        "ability",
        "technologies",
        "US",
        "employer",
        "Work",
        "Experience",
        "Angular",
        "Developer",
        "Cisive",
        "Holtsville",
        "NY",
        "February",
        "Present",
        "Description",
        "Cisive",
        "background",
        "investigations",
        "employees",
        "clients",
        "business",
        "partners",
        "Project",
        "web",
        "application",
        "background",
        "investigation",
        "process",
        "Administrator",
        "user",
        "application",
        "clients",
        "information",
        "document",
        "web",
        "application",
        "document",
        "TXTCSV",
        "Excel",
        "sheet",
        "format",
        "application",
        "custom",
        "validation",
        "file",
        "error",
        "file",
        "database",
        "User",
        "status",
        "investigation",
        "document",
        "error",
        "file",
        "information",
        "file",
        "Responsibilities",
        "page",
        "applications",
        "Angular",
        "Typescript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Agile",
        "Scrum",
        "development",
        "methodology",
        "delivery",
        "quality",
        "work",
        "iteration",
        "sprint",
        "planning",
        "retrospectives",
        "NTier",
        "architecture",
        "application",
        "development",
        "DAL",
        "BLL",
        "UI",
        "requirement",
        "gathering",
        "development",
        "UI",
        "reviews",
        "maintenance",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "architecture",
        "Angular",
        "templates",
        "directives",
        "NPM",
        "package",
        "manager",
        "Node",
        "JS",
        "knowledge",
        "APIs",
        "angularhttp",
        "HTTP",
        "requests",
        "core",
        "things",
        "form",
        "validation",
        "app",
        "HTTP",
        "requests",
        "Rxjs",
        "Observable",
        "library",
        "values",
        "time",
        "page",
        "Bootstrap",
        "custom",
        "CSS",
        "knowledge",
        "services",
        "Angular",
        "property",
        "service",
        "dependency",
        "injection",
        "components",
        "JavaScript",
        "codes",
        "web",
        "forms",
        "process",
        "web",
        "application",
        "page",
        "navigation",
        "Angular",
        "unit",
        "testing",
        "application",
        "karma",
        "Restful",
        "web",
        "service",
        "POST",
        "PUT",
        "DELETE",
        "GET",
        "methods",
        "CSS3",
        "style",
        "page",
        "navigation",
        "spinner",
        "calls",
        "WEB",
        "APIs",
        "data",
        "end",
        "response",
        "UI",
        "DOMCSS",
        "Manipulation",
        "frontend",
        "design",
        "team",
        "team",
        "files",
        "content",
        "data",
        "database",
        "API",
        "Mecurial",
        "source",
        "code",
        "merge",
        "conflicts",
        "collaboration",
        "stakeholders",
        "application",
        "Environment",
        "Angular2",
        "Angular",
        "SQL",
        "server",
        "IIS",
        "HTML",
        "CSS3",
        "Mecurial",
        "Web",
        "API",
        "JSON",
        "Web",
        "API",
        "Karma",
        "NetAngularJS",
        "Web",
        "API",
        "Developer",
        "Saint",
        "Peters",
        "Healthcare",
        "System",
        "New",
        "Brunswick",
        "NJ",
        "April",
        "January",
        "Description",
        "Saint",
        "Peters",
        "Healthcare",
        "System",
        "scope",
        "health",
        "wellness",
        "services",
        "community",
        "Project",
        "web",
        "application",
        "system",
        "cost",
        "system",
        "quality",
        "outcome",
        "Administrator",
        "user",
        "application",
        "clients",
        "customers",
        "information",
        "policy",
        "detail",
        "history",
        "Authentication",
        "authorization",
        "user",
        "roles",
        "Responsibilities",
        "team",
        "data",
        "flow",
        "diagrams",
        "class",
        "diagram",
        "MS",
        "Visio",
        "Created",
        "procedure",
        "trigger",
        "database",
        "data",
        "tables",
        "Web",
        "API",
        "services",
        "Agile",
        "Scrum",
        "development",
        "methodology",
        "delivery",
        "quality",
        "work",
        "iteration",
        "sprint",
        "planning",
        "frontend",
        "SPA",
        "CSHTML",
        "AngularJS",
        "bootstrap",
        "ASPNET",
        "MVC",
        "Web",
        "API",
        "page",
        "application",
        "design",
        "pages",
        "ngroute",
        "routeProvider",
        "custom",
        "authentication",
        "variable",
        "ngroute",
        "authentication",
        "authorization",
        "application",
        "change",
        "event",
        "routeChangeSuccess",
        "data",
        "table",
        "DAL",
        "layer",
        "Web",
        "API",
        "Entity",
        "Framework",
        "page",
        "Bootstrap",
        "custom",
        "CSS",
        "promises",
        "q",
        "auto",
        "update",
        "custom",
        "directives",
        "components",
        "application",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "controllers",
        "page",
        "dependencies",
        "location",
        "window",
        "routeParams",
        "services",
        "controller",
        "validation",
        "method",
        "form",
        "input",
        "web",
        "page",
        "combination",
        "HTML",
        "validator",
        "HTML",
        "ngshow",
        "validator",
        "directive",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "source",
        "code",
        "management",
        "Performed",
        "unit",
        "Jasmine",
        "frontend",
        "Nunit",
        "Environment",
        "AngularJS",
        "SQL",
        "server",
        "IIS",
        "HTML",
        "CSS3",
        "TFS",
        "Web",
        "API",
        "XML",
        "JSON",
        "Web",
        "API",
        "Batarang",
        "Jasmine",
        "SSIS",
        "NetWCF",
        "Developer",
        "NJM",
        "Insurance",
        "Group",
        "Trenton",
        "NJ",
        "January",
        "March",
        "Description",
        "NJM",
        "auto",
        "insurance",
        "companies",
        "New",
        "Jersey",
        "history",
        "customer",
        "service",
        "premium",
        "rates",
        "state",
        "project",
        "application",
        "employees",
        "supervisors",
        "report",
        "work",
        "time",
        "activities",
        "Responsibilities",
        "requirement",
        "gathering",
        "design",
        "development",
        "testing",
        "implementation",
        "web",
        "application",
        "development",
        "life",
        "cycle",
        "scrum",
        "meetings",
        "web",
        "application",
        "ASPNET",
        "MVC5",
        "Worked",
        "database",
        "SQL",
        "server",
        "SQL",
        "server",
        "management",
        "studio",
        "procedures",
        "View",
        "Model",
        "Helped",
        "ntier",
        "architecture",
        "Entity",
        "Framework",
        "Data",
        "access",
        "layer",
        "View",
        "Model",
        "Business",
        "access",
        "layer",
        "LINQ",
        "data",
        "repository",
        "unit",
        "work",
        "patterns",
        "dependency",
        "injection",
        "repository",
        "MVC",
        "controller",
        "level",
        "Unit",
        "Testing",
        "Test",
        "Driven",
        "Development",
        "form",
        "base",
        "authentication",
        "roleactivity",
        "base",
        "authorization",
        "web",
        "application",
        "security",
        "client",
        "server",
        "side",
        "validations",
        "performance",
        "code",
        "structure",
        "validation",
        "Data",
        "Annotation",
        "validation",
        "ruleinformation",
        "client",
        "side",
        "validation",
        "EnableClientValidation",
        "use",
        "jQuery",
        "jQueryvalidate",
        "Bootstrap",
        "responsiveness",
        "webpage",
        "design",
        "custom",
        "CSS3",
        "style",
        "sheet",
        "elements",
        "pages",
        "jQuery",
        "AJAX",
        "methods",
        "user",
        "interfaces",
        "data",
        "pate",
        "HTTP",
        "server",
        "side",
        "FrontEnd",
        "HTML",
        "page",
        "Razor",
        "View",
        "view",
        "engine",
        "HTML5",
        "FrontEnd",
        "script",
        "jQuery",
        "jQuery",
        "UI",
        "WCF",
        "service",
        "data",
        "database",
        "security",
        "functionality",
        "web",
        "application",
        "Nunit",
        "Unit",
        "testing",
        "JIRA",
        "management",
        "tool",
        "GIT",
        "version",
        "control",
        "Environment",
        "ASPNetNet",
        "Framework",
        "C",
        "ASPNet",
        "MVC",
        "WCF",
        "Entity",
        "Framework",
        "SQL",
        "server",
        "HTML",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "jQuery",
        "UI",
        "IIS",
        "Net",
        "Web",
        "APIAngularJS",
        "Developer",
        "Marlin",
        "Business",
        "Services",
        "Corp",
        "Mount",
        "Laurel",
        "NJ",
        "January",
        "December",
        "Description",
        "Marlin",
        "Business",
        "Services",
        "Corp",
        "equipment",
        "financing",
        "capital",
        "loans",
        "businesses",
        "service",
        "commitments",
        "dealers",
        "manufacturers",
        "distributors",
        "brokers",
        "customers",
        "project",
        "management",
        "system",
        "recruiting",
        "functionalities",
        "positions",
        "word",
        "search",
        "group",
        "email",
        "calendar",
        "dashboard",
        "Responsibilities",
        "ScrumAgile",
        "environment",
        "design",
        "development",
        "stages",
        "project",
        "web",
        "application",
        "AngularJS",
        "procedure",
        "trigger",
        "database",
        "data",
        "tables",
        "Web",
        "API",
        "services",
        "experience",
        "REST",
        "style",
        "CRUD",
        "actions",
        "Get",
        "Post",
        "Delete",
        "page",
        "Bootstrap",
        "custom",
        "CSS",
        "style",
        "sheet",
        "Way",
        "Databinding",
        "order",
        "synchronization",
        "data",
        "model",
        "components",
        "directives",
        "factories",
        "services",
        "page",
        "web",
        "applications",
        "Configured",
        "Angular",
        "Route",
        "Module",
        "routeProvider",
        "SPA",
        "DAL",
        "layer",
        "Web",
        "API",
        "Entity",
        "Framework",
        "promises",
        "q",
        "auto",
        "update",
        "variable",
        "Fiddler",
        "Web",
        "API",
        "service",
        "Batarang",
        "Jasmine",
        "unit",
        "project",
        "manner",
        "Environment",
        "AngularJS",
        "SQL",
        "server",
        "IIS",
        "HTML",
        "CSS3",
        "TFS",
        "Web",
        "API",
        "XML",
        "JSON",
        "Web",
        "API",
        "Fiddler",
        "Batarang",
        "Jasmine",
        "Net",
        "Developer",
        "Insurance",
        "Agencies",
        "Northfield",
        "NJ",
        "November",
        "December",
        "Description",
        "Insurance",
        "Agencies",
        "Inc",
        "insurance",
        "agency",
        "agency",
        "range",
        "Commercial",
        "Personal",
        "Life",
        "Health",
        "products",
        "system",
        "project",
        "operation",
        "process",
        "insurance",
        "policy",
        "applications",
        "approvals",
        "claims",
        "verification",
        "adjustment",
        "policies",
        "claims",
        "materials",
        "system",
        "underwriters",
        "managers",
        "decision",
        "Responsibilities",
        "methodology",
        "scrum",
        "meeting",
        "web",
        "application",
        "ASPNet",
        "MVC",
        "Product",
        "Owner",
        "diagram",
        "Visio",
        "team",
        "config",
        "routeconfig",
        "webconfig",
        "MVC",
        "application",
        "C",
        "ASPNet",
        "MVC",
        "Razor",
        "View",
        "Engine",
        "JavaScript",
        "jQuery",
        "AJAX",
        "CSS",
        "Bootstrap",
        "HTTP",
        "handler",
        "action",
        "filter",
        "actions",
        "error",
        "handling",
        "views",
        "JSON",
        "objects",
        "ntier",
        "architecture",
        "ADONet",
        "Data",
        "access",
        "layer",
        "View",
        "model",
        "Business",
        "access",
        "layer",
        "LINQ",
        "data",
        "Temp",
        "Data",
        "View",
        "Data",
        "data",
        "requests",
        "validation",
        "method",
        "pages",
        "JavaScript",
        "validation",
        "View",
        "Model",
        "data",
        "annotation",
        "scripts",
        "style",
        "sheets",
        "performance",
        "WCF",
        "service",
        "data",
        "database",
        "security",
        "service",
        "jQueryAjax",
        "crossdomain",
        "environment",
        "Environment",
        "ASPNetNet",
        "Framework",
        "C",
        "ASPNet",
        "MVC",
        "SQL",
        "server",
        "Razor",
        "View",
        "HTML",
        "CSS3",
        "WCF",
        "JavaScript",
        "jQuery",
        "IIS",
        "Net",
        "Developer",
        "Bogle",
        "Agency",
        "Insurance",
        "Lyndhurst",
        "NJ",
        "October",
        "October",
        "Description",
        "Bogle",
        "Agency",
        "Insurance",
        "Independent",
        "Insurance",
        "Agency",
        "options",
        "coverage",
        "pricing",
        "clients",
        "Project",
        "application",
        "PR",
        "department",
        "schedule",
        "events",
        "firm",
        "purpose",
        "project",
        "department",
        "meetings",
        "clients",
        "application",
        "modules",
        "edit",
        "event",
        "credentials",
        "employees",
        "details",
        "events",
        "attendees",
        "Responsibilities",
        "designing",
        "implementation",
        "code",
        "database",
        "web",
        "application",
        "ASPNet",
        "Web",
        "Forms",
        "database",
        "SQL",
        "server",
        "SQL",
        "server",
        "management",
        "studio",
        "ntier",
        "architecture",
        "ADONet",
        "Data",
        "access",
        "layer",
        "BAL",
        "business",
        "logic",
        "state",
        "managements",
        "Cache",
        "Cookies",
        "View",
        "State",
        "Hidden",
        "Field",
        "Query",
        "string",
        "session",
        "information",
        "page",
        "controllers",
        "Repeater",
        "GridView",
        "data",
        "technologiestechniques",
        "toolkit",
        "extender",
        "elements",
        "web",
        "page",
        "search",
        "box",
        "Frontend",
        "script",
        "jQuery",
        "JavaScript",
        "data",
        "Web",
        "service",
        "bridge",
        "web",
        "service",
        "project",
        "solution",
        "cross",
        "domain",
        "Environment",
        "ASPNet",
        "Web",
        "Forms",
        "C",
        "Web",
        "Service",
        "ADONet",
        "SQL",
        "server",
        "JavaScript",
        "jQuery",
        "toolkit",
        "HTML",
        "CSS3",
        "Education",
        "Bachelor",
        "Science",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "Rutgers",
        "University",
        "New",
        "Brunswick",
        "Skills",
        "DATABASE",
        "years",
        "SQL",
        "SERVER",
        "years",
        "SQL",
        "years",
        "NET",
        "years",
        "JAVASCRIPT",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILL",
        "ProgrammingScript",
        "LanguagesPlatform",
        "C",
        "C",
        "JavaScript",
        "NodeJS",
        "Typescript",
        "FrontEnd",
        "LanguagesScripts",
        "JavaScript",
        "jQuery",
        "jQuery",
        "UI",
        "Bootstrap",
        "AngularJS",
        "AJAX",
        "Angular24",
        "NET",
        "Technologies",
        "ASPNET",
        "MVC",
        "ASPNET",
        "Web",
        "Forms",
        "Entity",
        "Framework",
        "Web",
        "Services",
        "WCF",
        "Web",
        "API",
        "NET",
        "framework",
        "IDE",
        "Visual",
        "Studio",
        "DatabaseService",
        "tools",
        "SQL",
        "Server",
        "SSIS",
        "SSRS",
        "MySQL",
        "Version",
        "Control",
        "Tools",
        "Team",
        "Foundation",
        "Server",
        "GIT",
        "JIRA",
        "Mecurial",
        "Microsoft",
        "Programs",
        "WordsExcelPowerPointAccessVisio",
        "DebuggerTesting",
        "NUnit",
        "Jasmine",
        "Others",
        "JSON"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:41:22.691520",
    "resume_data": "Angular 24FrontEnd Developer Angular 24FrontEnd span lDeveloperspan Angular 24FrontEnd Developer Cisive Little Rock AR Over 8 years of Web Development experience in designing developing testing and deploying web applications Extensive experience in developing various applications using Visual Studio NET technologies like C ASPNET ADONET XML Web Services WCF WPF MVC Proficient at building a single page application website using AngularJS Good experience and strong fundamental of architecture design including Data structure ntier architecture design patterns Singleton Factory Builder Iterator architectural patterns MVC MVP MVVM Extensive knowledge and working experience of web development technologies such as JavaScript jQuery UI AngularJS Angular24 HTML5 CSS3 SASS and Bootstrap Excellent experience with develop design deploy web service WCF web API in cross domain environment and other NET technologies including Entity Framework 654 ADONET and LINQ Acquired knowledge over the years by working on all aspects of web development from frontend to backend including business logic layer midtier data access layer and database Excellent knowledge in implementing AJAX method to communicate with a server Experience with Data Accessing and manipulating using ADONET and Entity Framework Highly proficient with debuggertesting tools NUnit Fiddler Batarang and Jasmine Experience with project management tool sourceversion control such as Team Foundation Server JIRA GIT and Mecurial Extensive knowledge in designing and creating database and tables in SQL Server Hands on experience in working with Stored Procedures Indexes Triggers Temp Tables and Views using SQL Server 2012 Proven track record working with different software development cycle processes Waterfall AgileScrum and Extreme Programming Experience with multiple web servers including IIS and Apache Valuable team player with excellent communication skills trouble shooting skills with ability to learn and adapt to new technologies quickly Authorized to work in the US for any employer Work Experience Angular 24FrontEnd Developer Cisive Holtsville NY February 2017 to Present Description Cisive provides comprehensive global background investigations on potential and current employees vendors clients and business partners Project was to develop a web based application to efficiently speed up the background investigation process Administrator and normal user could use the application to register or update new clients information simply by dropping in the original document to the web application which the document could be in TXTCSV or Excel sheet format The application would perform the custom validation on the file which can catch any error before sending the file to the database User can also track the status of any further investigation and reviewing done on the document and download the error file if certain information from the file need to be updated Responsibilities Developed single page applications using Angular 2 Typescript HTML5 CSS3 and Bootstrap Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Followed the NTier architecture for the application development with DAL BLL and UI Involved in requirement gathering designing development UI reviews and maintenance Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular 2 Created reusable templates using Angular directives and worked with NPM package manager tools Node JS Good knowledge on using Angular APIs like angularhttp For making HTTP requests angularcommon Common core things including form validation angularrouterRouting for our entire app Implemented HTTP requests using Rxjs Observable library to handle multiple values over time Designed the page using Bootstrap and some custom CSS Good knowledge on creating services with Angular 2 injectable property as to make the service available for dependency injection when creating components Designed dynamic clientside JavaScript codes to build web forms and simulate process for a web application page navigation using Angular 2 Worked on unit testing for the Angular application using karma Called the Restful web service calls for POST PUT DELETE and GET methods Developed CSS3 to style page layouts navigation and pageloading spinner Extensively worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI for DOMCSS Manipulation Collaborated with the frontend design team and backend team and started converting the static files with the dynamic content with the data is retrieved from the database by the API calls Used Mecurial for managing source code by resolving merge conflicts that occur during collaboration of various stakeholders of the application Environment Angular2 Angular 4 SQL server 2012 IIS 7 HTML CSS3 Mecurial Web API JSON Web API Karma NetAngularJS Web API Developer Saint Peters Healthcare System New Brunswick NJ April 2016 to January 2017 Description Saint Peters Healthcare System was formed in 2007 and reflects the expansive scope of health and wellness services it offers to the community Project was to develop a web based application to clinically integrate existing system and build cost effective system to improve quality and patient outcome Administrator user could use the application to register new clients or personal customers manage basic information policy detail and claim history Authentication and authorization is provided based on user roles Responsibilities Helped team lead to create data flow diagrams and class diagram using MS Visio Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Worked in an Agile Scrum development methodology to ensure delivery of high quality work with monthly iteration also involved in sprint planning and retrospectives Built frontend SPA using CSHTML AngularJS and bootstrap and backend using ASPNET MVC and Web API Followed single page application design and integrated all the pages using ngroute and routeProvider Used custom authentication variable in ngroute to provide authentication and authorization for the application for every change in event of routeChangeSuccess Implemented nggrid to show the data in the table Helped implement the DAL layer of Web API using Entity Framework 5 Designed the page using Bootstrap and some custom CSS Implemented the promises using q to handle the auto update by notifying the variable Created custom directives for reusable components used across the application Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created many controllers for each page with dependencies such as q location window routeParams and all services to be used on the controller Implemented validation method for form input in web page using combination of normal HTML validator use novalidate to bypass the normal HTML checking and handle them using ngshow nghide ngdisable and specific AngularJS validator directive ngRequired Used Team Foundation Server TFS for source code management Performed unit testing with Jasmine for frontend and Nunit for backend Environment AngularJS 14 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Batarang Jasmine SSIS NetWCF Developer NJM Insurance Group Trenton NJ January 2014 to March 2016 Description NJM is one of the largest auto insurance companies in New Jersey with a rich history of outstanding customer service as well as premium rates that are among the most competitive in the state This project was to develop an application that allows employees and supervisors to log report and update work time and activities Responsibilities Involved in requirement gathering design development testing and implementation of the web application and used Agile development life cycle with daily scrum meetings Built the web application using ASPNET MVC5 Worked on designing the database using SQL server 2012 with SQL server management studio and create stored procedures for specific View Model Helped implement ntier architecture using Entity Framework 6 as Data access layer and View Model for Business access layer with LINQ to select specific data Implemented repository and unit of work patterns by using dependency injection inject the repository on MVC controller level to facilitate Unit Testing and Test Driven Development Utilized the form base authentication with roleactivity base authorization for the web application security Used client and server side validations for better performance and maintain clear code structure Implemented validation using Data Annotation to set the validation ruleinformation and implemented client side validation by adding EnableClientValidation with the use of jQuery jQueryvalidate and unobtrusive Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Enhanced pages with jQuery AJAX methods which provided responsive user interfaces to display the data on the pate and to make asynchronous HTTP calls to the server side For FrontEnd HTML page used Razor View 323 as a view engine and HTML5 For FrontEnd script used jQuery 310 and jQuery UI 1120 Used WCF as a service to provide the data from database purposely for security Tested the functionality of the web application using Nunit to perform Unit testing Used JIRA as management tool and GIT as a version control Environment ASPNetNet Framework 451 C ASPNet MVC 5 WCF Entity Framework 6 LINQ SQL server 2014 HTML CSS3 Bootstrap JavaScript jQuery 11 jQuery UI 1103 IIS 8 Net Web APIAngularJS Developer Marlin Business Services Corp Mount Laurel NJ January 2013 to December 2013 Description Marlin Business Services Corp provides commercial equipment financing and working capital loans to small businesses nationwide It is centered around providing excellent service and delivering on commitments made to equipment dealers manufacturers resellers distributors brokers and their customers This project was to develop an internal management system providing recruiting functionalities including openclose positions key word search group email calendar and dashboard Responsibilities Worked in a ScrumAgile environment for design and development stages of the project Designed and developed the AngularJS web application using AngularJS 10 Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Gained experience in REST architectural style worked on CRUD actions Get Post Put and Delete Designed the page using Bootstrap and custom CSS style sheet Implemented Two Way Databinding in AngularJS in order to handle the automatic synchronization of data between the model and view components Created AngularJS directives factories and services for developing single page web applications Configured Angular Route Module which provides routeProvider to help create SPA Implemented DAL layer of Web API using Entity Framework 5 Implemented the promises using q to handle the auto update by notifying the variable Debugged and tracked using Fiddler for Web API service and Batarang for AngularJS Used Jasmine to unit test the AngularJS project in an isolated and automated manner Environment AngularJS 10 SQL server 2012 IIS 7 HTML CSS3 TFS Web API XML JSON Web API Fiddler Batarang Jasmine Net Developer Insurance Agencies Northfield NJ November 2011 to December 2012 Description Insurance Agencies Inc is a premier independent insurance agency It is a general independent agency with a broad range of Commercial Personal Life and Health products The system developed in this project helped simplify the operation process of new insurance policy applications and approvals as well as claims verification and adjustment All the policies and claims relevant materials were uploaded through the system which was then reviewed by the assigned underwriters and managers for decision making Responsibilities Followed Agile methodology with daily scrum meeting Built the web application using ASPNet MVC 4 Worked with Product Owner to design dataflow diagram in Visio Worked with team lead to config routeconfig and webconfig Implemented MVC application using C ASPNet MVC with Razor View Engine JavaScript jQuery AJAX CSS and Bootstrap Implemented HTTP handler with action filter to perform actions such as error handling and pass views and JSON objects Designed and executed ntier architecture using ADONet as Data access layer and View model for Business access layer with LINQ to select specific data Used Temp Data and View Data to maintain data between multiple requests Implemented various validation method for the pages including JavaScript validation View Model data annotation All the scripts and style sheets were loaded using bundling for better performance Used WCF as a service to provide the data from database purposely for security Consumed the service using jQueryAjax in the crossdomain environment Environment ASPNetNet Framework 40 C ASPNet MVC 3 ADONet LINQ SQL server 2008 Razor View 1 HTML CSS3 WCF JavaScript jQuery 11 IIS 7 Net Developer Bogle Agency Insurance Lyndhurst NJ October 2009 to October 2011 Description Bogle Agency Insurance is an Independent Insurance Agency which provides several options to select the best possible coverage and pricing for prospective clients This Project was to develop an application for the PR department to create and schedule events for the firm The main purpose of this project was for the department to arrange meetings between potential clients and prospects The application consists of various modules such add edit and delete event modules With the right credentials employees can schedule and manage provide details of the set events to the attendees Responsibilities Responsible for designing and implementation of code and database Built the web application using ASPNet Web Forms Designed the database using SQL server 2008 with SQL server management studio Designed and executed ntier architecture using ADONet as Data access layer and BAL for business logic Used multiple state managements such as Cache Cookies View State Hidden Field Query string session to providekeep information associated with the page Implemented multiple controllers such as Repeater GridView to show the data Implemented technologiestechniques such as Ajax toolkit AJAX autocomplete extender on some elements of the web page search box etc For Frontend script used jQuery and JavaScript Utilized data provided from Web service and used bridge added web service to the project solution to deal with the cross domain Environment ASPNet Web Forms C Web Service ADONet SQL server 2008 JavaScript jQuery Ajax toolkit HTML CSS3 Education Bachelor of Science in Computer Science in Computer Science Rutgers University of New Brunswick Skills DATABASE 8 years SQL SERVER 8 years SQL 8 years NET 7 years JAVASCRIPT 7 years Additional Information TECHNICAL SKILL ProgrammingScript LanguagesPlatform C C JAVA JavaScript NodeJS Typescript FrontEnd LanguagesScripts JavaScript jQuery jQuery UI Bootstrap AngularJS AJAX Angular24 NET Technologies ASPNET MVC 543 ASPNET Web Forms Entity Framework Web Services WCF Web API LINQ NET framework 15 IDE Visual Studio 201520122010 DatabaseService tools SQL Server 201420122010 SSIS SSRS MySQL Version Control Tools Team Foundation Server GIT JIRA Mecurial Microsoft Programs WordsExcelPowerPointAccessVisio DebuggerTesting NUnit Jasmine Others XML JSON",
    "unique_id": "37c79c20-b802-492d-9f16-9d681ec592e0"
}