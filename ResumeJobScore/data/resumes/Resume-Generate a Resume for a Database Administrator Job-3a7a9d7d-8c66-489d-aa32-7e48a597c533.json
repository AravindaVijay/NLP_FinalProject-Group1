{
    "clean_data": "Director of Technology Director of Technology Culpeper VA Authorized to work in the US for any employer Work Experience Director of Technology August 2017 to Present Acting SecDevOps lead Responsible for leading team towards secops practices Assisted in Reducing AWS Operating Costs by 50 while acquiring premium support Wrote a webcrawler that scans through our web application deployments and reports back any vulnerabilities that are found Coordinated with team in moving form 1 ec2 classic VPC to multiple segmented vpcs for various application stacks Coordinate with producers to get their assets deployed websites applications etc Wrote python utility script that returns audits of all vpc ec2 r53 rds ecs assets Setup AWS Elastic Container Service POC Moved several applications to containerized dockerkubernetes cluster Implement Incident Response Plan Core Ruleset Implementation for mod security WAF Gemnasium integration for dependency management notifiesalerts and is setup to prevent builds if 1 or more librariesmodules report back a critical CVE scans through previous builds and notifies on highly vulnerable builds Wrote terraform scripts that automated secops VPC creation and peering with other vpcs in multiple aws accounts Wrote auditing tool using flaskflaskapi to help audit various AWS services IAM S3 etc CPA Global November 2016 to Present Move existing legacy application to AWS Automate the Nagios inventory scripts based on a python script and jinja template hostscfg Responsible for day to day maintenance of the application and colo environment while clients are being moved to AWS Coordinate and give direction to other staff memberscontractors Wrote several ansible playbooks that are responsible for automating deployments maintenance setting up new clients Filling massive documentation backlog Managing various collocated infrastructure such as F5 load balancers Checkpoint VPNACL Vsphere deployment NetApp appliance etc Performing deployments to AWS as well as colocated environment in a synchronized methodical manner utilizing puppet and cloudformation and ansible in collocated stack Rewrite Nagios monitoring into lambda functions that we leverage using cloudwatch Rearchitect Admin and Gateway instance infrstraucture into a single nat instance with vpc direct connect from our vpn end point to the various vpc endpoints Rewrite several perl scripts into python Lead a team of 3 other members towards our AWS move finishline and automate tasks in colo environment in preparation of remaining client migrations to AWS Interface with various offsiteremote resources DevOPS Engineer FinchComputing May 2016 to Present Move existing atlassian stack to AWS Automate builds utilizing python build scripts for both windows and linux builds Maintain Cmake scripts as per Development needs Maintain Ansible deployment scripts Automate Bamboo build agents so that Agents are provisioned for a build plan and then terminated after builds are complete tests succeeded Unit Regression and Functional Tests Automate infrastructure provisioning and scaling Participate in multiple team scrums as a DevOps resource Black Team C core application Orange Team Java Python and Blue Team NodeJS Modular Builds JiraBamboo CIIntegration Deploy maintain and integrate Artifactory for Bamboo artifact management DevOPS Engineer Aquilent October 2014 to May 2016 Developed and deployed application that processes http post data to log files via Python Tornado framework Write salt formulas for automated configuration management saltstack SSO integration of all internal applications using CROWD Developed and deployed file management application that uses LDAP authentication utilizing Python Django Responsible for routine high profile government website deployments Implemented saltstacksaltcloud AWS GovCloud integration Configuration management setup utilizing Bamboo Custom Framework Akamai Integration Github Enterprise repository DevOPS Engineer VectorWorks June 2015 to February 2016 Move existing plone 24 deployment from on premise deployment to amazon webservices Use Ansible to perform the following in AWS Prepare Ec2 instances with proper user permissions and build tools Build deprecated python 24 Install specific python libraries setuptools simplejson etc Use perforce to deploy code Execute plone buildout with necessary dependencies Provision deploy separate zeo servers zope object store Setup supervisord to start zeo server Setup supervisord to start plone application on app instances Provision haproxyvarnish cluster Add instances behind haproxy using jinja template that uses ansible dynamic provisioning to add instances based on tags that are added using the ansible ec2 module during provisioning Reload haproxy service Consult with developers and release team on best practices Setup logging cluster using logstash and rsyslog Write AWS boto script that helps us keep track of our resources AWS VPC Planning and Deployment AWS VPC Routing and ACL configuration Main corporate website build and deployment process moved over to Jenkins build test and deploy jobs Completed Jenkins build test and deployment integration for entire backofficeorder center deployment All underlying Backend infrastructure is managed dynamically via Ansible Utilized AWS S3 to backup and rotate data as well as logs DevOPS Engineer June 2014 to October 2014 Architect and implement new deployment strategies Write Opsworks Chef recipes Utilize pythonboto for various Amazon Web Services functions Rewrite SFDC resource usage perl script in python Integrated Opsworks and CircleCI lifecycle Experience with CircleCi build scripts Various Configuration Management Migrations Migrate from rightscale to salt stack For legacy application Rewrite opsworks recipes to fit new chef deployment Deploy new chef server and operate infrastructure Multitennant application deployments Python Developer Software Engineer Team City Saint Petersburg FL January 2014 to January 2014 Devise and implement new deployment procedure Utilizing Ansible for configuration management Team City for Continuous Integration Write new unit tests for Cameopaas application Deploy new modular testing environment for SQA QA team Environment consists of a VM running on each SQA members workstation Each VM is managed by Ansible for configuration management Required changes to application code to get rid of table sequencing so that storyticket testing can be done on the fly Implemented ticketstory switching application so that testing can be switched and resumed on demand this mainly controls GIT branch switching and database switching Implemented web GUI so no Shell access is needed to switch between tickets for testing Deployments Deployed application using team city Rewrote deployment process to make use of ansible utlizied devpi and wheels for python application deployment Dev Ops Engineer NPR Washington DC December 2012 to December 2013 Implementation of fully automated enterprise cloud utilizing OpenStack KVM Ceph and 10GBE Deployment and implementation of Chef for infrastructure as code initiative Automated scaling of virtual machines and applications across entire Openstack cloud deployment Openstack Cinder Testing and Evaluation Openstack Swift Testing and Evaluation Migration from previous Proxmox ve environment into new Openstack kvm environment Architected and deployed PMP public media platform infrastructureoperations implementation Made use of cloud formation Autoscaling Auto load balancing Auto failover New code release implementation handled via Jenkins Custom reporting based on stats from Nodejs application and AWS Multitude of various day to day operations scripts Chef to Saltstack migration Implemented Django Dashboard application for Gui administration Familiarity with Agile software development principles and various source repository MSS Sr Systems EngineerAdministrator Symantec Herndon VA December 2011 to December 2012 Full migration from all Netcool components IMPACT ISM etc into Zenoss Implemented a multi tenant Zenoss implementation to support WMI monitoring SNMP monitoring Syslog monitoring Reported via Python tales expressions Devised and implemented multiple log retention setups via a modular Python application Implemented custom monitoring measures for various teams ie time based thresholds regex matching etc Created synthetic alarmsalerts based on database table values Developed a custom alert and oncall paging delivery system written in python Developed and implemented a multithreaded log importer application that imports logs from various application generated flat text files into SQL Server as well as deleting old logs as per requirement python Developed and implemented a flat text file to syslog transmission application Python Assisted with Datacenter migration and site to site DR of 1000 servers with minimal to no downtime PCI Compliance implementation worked with auditors to insure compliance of various Linux systems Reconfiguring existing systems when possible and migrating old systems to new configurations when needed UNIX SystemsCloud EngineerAdministrator AOLAdvertisingcom Baltimore MD May 2011 to December 2011 Wrote Python transforms and scripts for supporting new deviceapplication monitors reports and event triggers Creating custom Zenpacks for the monitoring of various applications Responsible for deploying configuring and deploying monitoring systems RHEL Zenoss in 3 geographical locations Deployed monitoring solutions for various cutting edge open source applications such as MongoDB Vertica Hadoop UNIX Systems Engineer Hivelocity Ventures Tampa FL April 2006 to May 2011 Planning deploying configuring and developing server infrastructure Developed internal company sso single sign on software via PHPMySQL with LDAP integration on CentOS 5 Linux Assisting with the successful planning and execution of moving 3000 serversmigrating outdated Linux servers to new hardware to new facility Maintaining company website Successful deployment of 4 different cloud computing distributed computing infrastructure VMware Vsphere 3terra Applogic CentOS5 Linux using XEN and local storage Cloudcom CentOS5 Linux based solution using hardware layer3 and a homebrew CentOS5 san serving an iSCSI target for storage Onapp CentOS5 Linux based solution using Nexenta SAN storage with a 8 drive raid 100 array 32GB SSD for cache with fully functional client web portals That interface with virtual machines hypervisor servers SAN software as well as foundry switches written in AJAX Developed and implemented DB MySQLLinux migration script required to import 3000 servers and more than 1200 devices into new commercial software Responsible for providing softwareweb gui interfaces for the control of several hardware devices remote reboots CRAC as well as PDU management Implementation of ZenOSS management Experience implementing various open source monitoring software ie Syslog Cacti Zabbix Icinga Groundwork Extensive experience troubleshooting and implementing SNMP enabled equipment CRAC AC units APC remote reboot switches as well as various server monitoring applicationsutilities Responsible for providing tools required by technical support staff monitoring utilities alarmalerting software front ends for vital equipment monitoring CRACTemperaturePowerGeneratorNetwork status Ensuring that monitoring services stay online and are available 24 hours a day 7 days a week Integrating data for availability reports revenue impact as well as various other metrics Integrating various open source monitoring applications such as NAGIOS CACTI ZENOSS all running on CentOS RHEL Linux platforms etc Geek Squad CadetSpecial Agent Best Buy Saint Petersburg FL March 2005 to May 2007 Deploying small business networks Installing and configuring Windows 2003 Server and applicable products DiagnosingRepairing Windows based PCs Troubleshooting and repairing several consumer devices such as iPods within a hour Troubleshooting and repairing Windows Server 2003 servers Training customers on the use of their new or preexisting hardwaresoftware Technologies Chef Puppet Linux Python Ruby AWS EC2 Network Education Computer Science St Petersburg College St Petersburg Skills linux 10 years MySQL 5 years PHP 5 years python 7 years UNIX 5 years Additional Information Operating Systems Windows NT 40 Windows 2000 Windows XP Windows Server 2003 Windows Server 2008 Redhat Linux v30 and up Ubuntu Linux 606 and up Debian Linux 30 woody and up Gentoo Linux HPUX Solaris FreeBSD Programming CCPHPMySQLJavascriptJava Python and Networking Anything LinuxUnix related Various computer and automotive related research Modifying Engine Control Units Integrating Windows and UNIXLinux based systems making systems interoperate with networking authentication and in networked environments via network shares or UNIX NFS Defusing volatile customer situations and improving company relationships with customers",
    "entities": [
        "AWS Interface",
        "AWS Multitude",
        "GUI",
        "SQA",
        "Nodejs",
        "UNIX",
        "Participate",
        "Engineer",
        "SAN",
        "Nagios",
        "Checkpoint VPNACL",
        "Technologies Chef Puppet Linux Python Ruby AWS EC2 Network Education Computer",
        "DevOps",
        "Shell",
        "RHEL Zenoss",
        "Netcool",
        "GB",
        "Baltimore",
        "AWS GovCloud",
        "Engineer VectorWorks",
        "UNIXLinux",
        "SQL Server",
        "Python Django Responsible",
        "Setup AWS Elastic Container Service POC Moved",
        "Devised",
        "AJAX Developed",
        "AWS Automate",
        "Python Developer Software Engineer Team City Saint Petersburg",
        "Developed",
        "Orange Team Java Python",
        "DR",
        "Filling",
        "Blue Team NodeJS Modular",
        "Various Configuration Management Migrations Migrate",
        "CircleCi",
        "Unit Regression and Functional",
        "Troubleshooting",
        "Nexenta SAN",
        "Linux",
        "AWS Prepare",
        "Each VM",
        "Washington DC",
        "AWS VPC Planning and Deployment AWS VPC Routing",
        "Modifying Engine Control Units Integrating Windows",
        "GIT",
        "US",
        "Artifactory for Bamboo",
        "MSS Sr Systems",
        "AWS",
        "APC",
        "XEN",
        "WMI",
        "Engineer Aquilent",
        "Execute",
        "Amazon Web Services",
        "Onapp",
        "Proxmox",
        "NetApp",
        "AWS Coordinate",
        "Python Tornado framework Write",
        "Implementation of ZenOSS",
        "Rewrite Nagios",
        "ACL",
        "Autoscaling Auto",
        "Vertica Hadoop UNIX Systems Engineer Hivelocity",
        "Ansible Utilized AWS S3",
        "Backend",
        "Geek Squad",
        "Build",
        "Windows 2003 Server",
        "Additional Information Operating Systems Windows NT",
        "Syslog Cacti Zabbix Icinga Groundwork Extensive",
        "Black Team C",
        "Cameopaas",
        "Zenoss Implemented",
        "CRAC AC",
        "Jenkins Custom",
        "Team City",
        "PDU",
        "DiagnosingRepairing Windows"
    ],
    "experience": "Experience Director of Technology August 2017 to Present Acting SecDevOps lead Responsible for leading team towards secops practices Assisted in Reducing AWS Operating Costs by 50 while acquiring premium support Wrote a webcrawler that scans through our web application deployments and reports back any vulnerabilities that are found Coordinated with team in moving form 1 ec2 classic VPC to multiple segmented vpcs for various application stacks Coordinate with producers to get their assets deployed websites applications etc Wrote python utility script that returns audits of all vpc ec2 r53 rds ecs assets Setup AWS Elastic Container Service POC Moved several applications to containerized dockerkubernetes cluster Implement Incident Response Plan Core Ruleset Implementation for mod security WAF Gemnasium integration for dependency management notifiesalerts and is setup to prevent builds if 1 or more librariesmodules report back a critical CVE scans through previous builds and notifies on highly vulnerable builds Wrote terraform scripts that automated secops VPC creation and peering with other vpcs in multiple aws accounts Wrote auditing tool using flaskflaskapi to help audit various AWS services IAM S3 etc CPA Global November 2016 to Present Move existing legacy application to AWS Automate the Nagios inventory scripts based on a python script and jinja template hostscfg Responsible for day to day maintenance of the application and colo environment while clients are being moved to AWS Coordinate and give direction to other staff memberscontractors Wrote several ansible playbooks that are responsible for automating deployments maintenance setting up new clients Filling massive documentation backlog Managing various collocated infrastructure such as F5 load balancers Checkpoint VPNACL Vsphere deployment NetApp appliance etc Performing deployments to AWS as well as colocated environment in a synchronized methodical manner utilizing puppet and cloudformation and ansible in collocated stack Rewrite Nagios monitoring into lambda functions that we leverage using cloudwatch Rearchitect Admin and Gateway instance infrstraucture into a single nat instance with vpc direct connect from our vpn end point to the various vpc endpoints Rewrite several perl scripts into python Lead a team of 3 other members towards our AWS move finishline and automate tasks in colo environment in preparation of remaining client migrations to AWS Interface with various offsiteremote resources DevOPS Engineer FinchComputing May 2016 to Present Move existing atlassian stack to AWS Automate builds utilizing python build scripts for both windows and linux builds Maintain Cmake scripts as per Development needs Maintain Ansible deployment scripts Automate Bamboo build agents so that Agents are provisioned for a build plan and then terminated after builds are complete tests succeeded Unit Regression and Functional Tests Automate infrastructure provisioning and scaling Participate in multiple team scrums as a DevOps resource Black Team C core application Orange Team Java Python and Blue Team NodeJS Modular Builds JiraBamboo CIIntegration Deploy maintain and integrate Artifactory for Bamboo artifact management DevOPS Engineer Aquilent October 2014 to May 2016 Developed and deployed application that processes http post data to log files via Python Tornado framework Write salt formulas for automated configuration management saltstack SSO integration of all internal applications using CROWD Developed and deployed file management application that uses LDAP authentication utilizing Python Django Responsible for routine high profile government website deployments Implemented saltstacksaltcloud AWS GovCloud integration Configuration management setup utilizing Bamboo Custom Framework Akamai Integration Github Enterprise repository DevOPS Engineer VectorWorks June 2015 to February 2016 Move existing plone 24 deployment from on premise deployment to amazon webservices Use Ansible to perform the following in AWS Prepare Ec2 instances with proper user permissions and build tools Build deprecated python 24 Install specific python libraries setuptools simplejson etc Use perforce to deploy code Execute plone buildout with necessary dependencies Provision deploy separate zeo servers zope object store Setup supervisord to start zeo server Setup supervisord to start plone application on app instances Provision haproxyvarnish cluster Add instances behind haproxy using jinja template that uses ansible dynamic provisioning to add instances based on tags that are added using the ansible ec2 module during provisioning Reload haproxy service Consult with developers and release team on best practices Setup logging cluster using logstash and rsyslog Write AWS boto script that helps us keep track of our resources AWS VPC Planning and Deployment AWS VPC Routing and ACL configuration Main corporate website build and deployment process moved over to Jenkins build test and deploy jobs Completed Jenkins build test and deployment integration for entire backofficeorder center deployment All underlying Backend infrastructure is managed dynamically via Ansible Utilized AWS S3 to backup and rotate data as well as logs DevOPS Engineer June 2014 to October 2014 Architect and implement new deployment strategies Write Opsworks Chef recipes Utilize pythonboto for various Amazon Web Services functions Rewrite SFDC resource usage perl script in python Integrated Opsworks and CircleCI lifecycle Experience with CircleCi build scripts Various Configuration Management Migrations Migrate from rightscale to salt stack For legacy application Rewrite opsworks recipes to fit new chef deployment Deploy new chef server and operate infrastructure Multitennant application deployments Python Developer Software Engineer Team City Saint Petersburg FL January 2014 to January 2014 Devise and implement new deployment procedure Utilizing Ansible for configuration management Team City for Continuous Integration Write new unit tests for Cameopaas application Deploy new modular testing environment for SQA QA team Environment consists of a VM running on each SQA members workstation Each VM is managed by Ansible for configuration management Required changes to application code to get rid of table sequencing so that storyticket testing can be done on the fly Implemented ticketstory switching application so that testing can be switched and resumed on demand this mainly controls GIT branch switching and database switching Implemented web GUI so no Shell access is needed to switch between tickets for testing Deployments Deployed application using team city Rewrote deployment process to make use of ansible utlizied devpi and wheels for python application deployment Dev Ops Engineer NPR Washington DC December 2012 to December 2013 Implementation of fully automated enterprise cloud utilizing OpenStack KVM Ceph and 10GBE Deployment and implementation of Chef for infrastructure as code initiative Automated scaling of virtual machines and applications across entire Openstack cloud deployment Openstack Cinder Testing and Evaluation Openstack Swift Testing and Evaluation Migration from previous Proxmox ve environment into new Openstack kvm environment Architected and deployed PMP public media platform infrastructureoperations implementation Made use of cloud formation Autoscaling Auto load balancing Auto failover New code release implementation handled via Jenkins Custom reporting based on stats from Nodejs application and AWS Multitude of various day to day operations scripts Chef to Saltstack migration Implemented Django Dashboard application for Gui administration Familiarity with Agile software development principles and various source repository MSS Sr Systems EngineerAdministrator Symantec Herndon VA December 2011 to December 2012 Full migration from all Netcool components IMPACT ISM etc into Zenoss Implemented a multi tenant Zenoss implementation to support WMI monitoring SNMP monitoring Syslog monitoring Reported via Python tales expressions Devised and implemented multiple log retention setups via a modular Python application Implemented custom monitoring measures for various teams ie time based thresholds regex matching etc Created synthetic alarmsalerts based on database table values Developed a custom alert and oncall paging delivery system written in python Developed and implemented a multithreaded log importer application that imports logs from various application generated flat text files into SQL Server as well as deleting old logs as per requirement python Developed and implemented a flat text file to syslog transmission application Python Assisted with Datacenter migration and site to site DR of 1000 servers with minimal to no downtime PCI Compliance implementation worked with auditors to insure compliance of various Linux systems Reconfiguring existing systems when possible and migrating old systems to new configurations when needed UNIX SystemsCloud EngineerAdministrator AOLAdvertisingcom Baltimore MD May 2011 to December 2011 Wrote Python transforms and scripts for supporting new deviceapplication monitors reports and event triggers Creating custom Zenpacks for the monitoring of various applications Responsible for deploying configuring and deploying monitoring systems RHEL Zenoss in 3 geographical locations Deployed monitoring solutions for various cutting edge open source applications such as MongoDB Vertica Hadoop UNIX Systems Engineer Hivelocity Ventures Tampa FL April 2006 to May 2011 Planning deploying configuring and developing server infrastructure Developed internal company sso single sign on software via PHPMySQL with LDAP integration on CentOS 5 Linux Assisting with the successful planning and execution of moving 3000 serversmigrating outdated Linux servers to new hardware to new facility Maintaining company website Successful deployment of 4 different cloud computing distributed computing infrastructure VMware Vsphere 3terra Applogic CentOS5 Linux using XEN and local storage Cloudcom CentOS5 Linux based solution using hardware layer3 and a homebrew CentOS5 san serving an iSCSI target for storage Onapp CentOS5 Linux based solution using Nexenta SAN storage with a 8 drive raid 100 array 32 GB SSD for cache with fully functional client web portals That interface with virtual machines hypervisor servers SAN software as well as foundry switches written in AJAX Developed and implemented DB MySQLLinux migration script required to import 3000 servers and more than 1200 devices into new commercial software Responsible for providing softwareweb gui interfaces for the control of several hardware devices remote reboots CRAC as well as PDU management Implementation of ZenOSS management Experience implementing various open source monitoring software ie Syslog Cacti Zabbix Icinga Groundwork Extensive experience troubleshooting and implementing SNMP enabled equipment CRAC AC units APC remote reboot switches as well as various server monitoring applicationsutilities Responsible for providing tools required by technical support staff monitoring utilities alarmalerting software front ends for vital equipment monitoring CRACTemperaturePowerGeneratorNetwork status Ensuring that monitoring services stay online and are available 24 hours a day 7 days a week Integrating data for availability reports revenue impact as well as various other metrics Integrating various open source monitoring applications such as NAGIOS CACTI ZENOSS all running on CentOS RHEL Linux platforms etc Geek Squad CadetSpecial Agent Best Buy Saint Petersburg FL March 2005 to May 2007 Deploying small business networks Installing and configuring Windows 2003 Server and applicable products DiagnosingRepairing Windows based PCs Troubleshooting and repairing several consumer devices such as iPods within a hour Troubleshooting and repairing Windows Server 2003 servers Training customers on the use of their new or preexisting hardwaresoftware Technologies Chef Puppet Linux Python Ruby AWS EC2 Network Education Computer Science St Petersburg College St Petersburg Skills linux 10 years MySQL 5 years PHP 5 years python 7 years UNIX 5 years Additional Information Operating Systems Windows NT 40 Windows 2000 Windows XP Windows Server 2003 Windows Server 2008 Redhat Linux v30 and up Ubuntu Linux 606 and up Debian Linux 30 woody and up Gentoo Linux HPUX Solaris FreeBSD Programming CCPHPMySQLJavascriptJava Python and Networking Anything LinuxUnix related Various computer and automotive related research Modifying Engine Control Units Integrating Windows and UNIXLinux based systems making systems interoperate with networking authentication and in networked environments via network shares or UNIX NFS Defusing volatile customer situations and improving company relationships with customers",
    "extracted_keywords": [
        "Director",
        "Technology",
        "Director",
        "Technology",
        "Culpeper",
        "VA",
        "US",
        "employer",
        "Work",
        "Experience",
        "Director",
        "Technology",
        "August",
        "Present",
        "Acting",
        "SecDevOps",
        "lead",
        "team",
        "secops",
        "practices",
        "AWS",
        "Costs",
        "premium",
        "support",
        "webcrawler",
        "web",
        "application",
        "deployments",
        "vulnerabilities",
        "team",
        "form",
        "ec2",
        "VPC",
        "vpcs",
        "application",
        "stacks",
        "producers",
        "assets",
        "websites",
        "applications",
        "python",
        "utility",
        "script",
        "audits",
        "vpc",
        "ec2",
        "r53",
        "assets",
        "Setup",
        "AWS",
        "Elastic",
        "Container",
        "Service",
        "POC",
        "applications",
        "dockerkubernetes",
        "cluster",
        "Implement",
        "Incident",
        "Response",
        "Plan",
        "Core",
        "Ruleset",
        "Implementation",
        "mod",
        "security",
        "WAF",
        "Gemnasium",
        "integration",
        "dependency",
        "management",
        "notifiesalerts",
        "setup",
        "builds",
        "librariesmodules",
        "CVE",
        "scans",
        "builds",
        "notifies",
        "builds",
        "Wrote",
        "terraform",
        "scripts",
        "creation",
        "vpcs",
        "aws",
        "Wrote",
        "auditing",
        "tool",
        "flaskflaskapi",
        "AWS",
        "services",
        "IAM",
        "S3",
        "CPA",
        "Global",
        "November",
        "Present",
        "Move",
        "legacy",
        "application",
        "AWS",
        "Nagios",
        "inventory",
        "scripts",
        "python",
        "script",
        "jinja",
        "template",
        "hostscfg",
        "day",
        "day",
        "maintenance",
        "application",
        "environment",
        "clients",
        "AWS",
        "Coordinate",
        "direction",
        "staff",
        "memberscontractors",
        "playbooks",
        "deployments",
        "maintenance",
        "clients",
        "documentation",
        "backlog",
        "infrastructure",
        "F5",
        "load",
        "balancers",
        "Checkpoint",
        "VPNACL",
        "appliance",
        "deployments",
        "AWS",
        "environment",
        "manner",
        "puppet",
        "cloudformation",
        "stack",
        "Rewrite",
        "Nagios",
        "functions",
        "cloudwatch",
        "Rearchitect",
        "Admin",
        "Gateway",
        "instance",
        "infrstraucture",
        "nat",
        "instance",
        "vpc",
        "connect",
        "vpn",
        "end",
        "point",
        "vpc",
        "Rewrite",
        "perl",
        "scripts",
        "python",
        "Lead",
        "team",
        "members",
        "AWS",
        "finishline",
        "tasks",
        "environment",
        "preparation",
        "client",
        "migrations",
        "AWS",
        "Interface",
        "resources",
        "DevOPS",
        "Engineer",
        "FinchComputing",
        "May",
        "Present",
        "Move",
        "stack",
        "AWS",
        "Automate",
        "builds",
        "python",
        "scripts",
        "windows",
        "linux",
        "Maintain",
        "Cmake",
        "scripts",
        "Development",
        "deployment",
        "scripts",
        "Automate",
        "Bamboo",
        "agents",
        "Agents",
        "build",
        "plan",
        "builds",
        "tests",
        "Unit",
        "Regression",
        "Functional",
        "Tests",
        "Automate",
        "infrastructure",
        "provisioning",
        "Participate",
        "team",
        "scrums",
        "DevOps",
        "resource",
        "Black",
        "Team",
        "C",
        "core",
        "application",
        "Orange",
        "Team",
        "Java",
        "Python",
        "Blue",
        "Team",
        "NodeJS",
        "Modular",
        "Builds",
        "JiraBamboo",
        "CIIntegration",
        "Deploy",
        "Artifactory",
        "Bamboo",
        "artifact",
        "management",
        "DevOPS",
        "Engineer",
        "Aquilent",
        "October",
        "May",
        "Developed",
        "application",
        "http",
        "post",
        "data",
        "files",
        "Python",
        "Tornado",
        "framework",
        "salt",
        "formulas",
        "configuration",
        "management",
        "saltstack",
        "SSO",
        "integration",
        "applications",
        "CROWD",
        "Developed",
        "file",
        "management",
        "application",
        "LDAP",
        "authentication",
        "Python",
        "Django",
        "profile",
        "government",
        "website",
        "deployments",
        "saltstacksaltcloud",
        "AWS",
        "GovCloud",
        "integration",
        "Configuration",
        "management",
        "setup",
        "Bamboo",
        "Custom",
        "Framework",
        "Akamai",
        "Integration",
        "Github",
        "Enterprise",
        "repository",
        "DevOPS",
        "Engineer",
        "VectorWorks",
        "June",
        "February",
        "Move",
        "plone",
        "deployment",
        "premise",
        "deployment",
        "amazon",
        "webservices",
        "Ansible",
        "following",
        "AWS",
        "Ec2",
        "instances",
        "user",
        "permissions",
        "tools",
        "Build",
        "python",
        "setuptools",
        "simplejson",
        "perforce",
        "code",
        "Execute",
        "plone",
        "dependencies",
        "Provision",
        "zeo",
        "servers",
        "zope",
        "object",
        "store",
        "Setup",
        "supervisord",
        "zeo",
        "server",
        "Setup",
        "supervisord",
        "plone",
        "application",
        "app",
        "instances",
        "Provision",
        "haproxyvarnish",
        "cluster",
        "Add",
        "instances",
        "haproxy",
        "jinja",
        "template",
        "provisioning",
        "instances",
        "tags",
        "ec2",
        "module",
        "Reload",
        "haproxy",
        "service",
        "Consult",
        "developers",
        "release",
        "team",
        "practices",
        "Setup",
        "cluster",
        "logstash",
        "rsyslog",
        "Write",
        "AWS",
        "boto",
        "script",
        "track",
        "resources",
        "VPC",
        "Planning",
        "Deployment",
        "AWS",
        "VPC",
        "Routing",
        "ACL",
        "configuration",
        "website",
        "build",
        "deployment",
        "process",
        "Jenkins",
        "test",
        "jobs",
        "Jenkins",
        "test",
        "deployment",
        "integration",
        "center",
        "deployment",
        "infrastructure",
        "Ansible",
        "AWS",
        "S3",
        "rotate",
        "data",
        "logs",
        "DevOPS",
        "Engineer",
        "June",
        "October",
        "Architect",
        "deployment",
        "strategies",
        "Write",
        "Opsworks",
        "Chef",
        "Utilize",
        "pythonboto",
        "Amazon",
        "Web",
        "Services",
        "functions",
        "Rewrite",
        "SFDC",
        "resource",
        "usage",
        "perl",
        "script",
        "python",
        "Integrated",
        "Opsworks",
        "CircleCI",
        "lifecycle",
        "Experience",
        "CircleCi",
        "build",
        "scripts",
        "Various",
        "Configuration",
        "Management",
        "Migrations",
        "Migrate",
        "rightscale",
        "stack",
        "legacy",
        "application",
        "Rewrite",
        "recipes",
        "chef",
        "deployment",
        "Deploy",
        "chef",
        "server",
        "infrastructure",
        "application",
        "deployments",
        "Python",
        "Developer",
        "Software",
        "Engineer",
        "Team",
        "City",
        "Saint",
        "Petersburg",
        "FL",
        "January",
        "January",
        "Devise",
        "procedure",
        "Ansible",
        "configuration",
        "management",
        "Team",
        "City",
        "Continuous",
        "Integration",
        "Write",
        "unit",
        "tests",
        "Cameopaas",
        "application",
        "testing",
        "environment",
        "SQA",
        "QA",
        "team",
        "Environment",
        "VM",
        "SQA",
        "members",
        "workstation",
        "VM",
        "Ansible",
        "configuration",
        "management",
        "changes",
        "application",
        "code",
        "table",
        "storyticket",
        "testing",
        "fly",
        "ticketstory",
        "switching",
        "application",
        "testing",
        "demand",
        "GIT",
        "branch",
        "switching",
        "database",
        "web",
        "GUI",
        "Shell",
        "access",
        "tickets",
        "Deployments",
        "application",
        "team",
        "city",
        "Rewrote",
        "deployment",
        "process",
        "use",
        "devpi",
        "wheels",
        "application",
        "deployment",
        "Dev",
        "Ops",
        "Engineer",
        "NPR",
        "Washington",
        "DC",
        "December",
        "December",
        "Implementation",
        "enterprise",
        "cloud",
        "OpenStack",
        "KVM",
        "Ceph",
        "10GBE",
        "Deployment",
        "implementation",
        "Chef",
        "infrastructure",
        "code",
        "initiative",
        "scaling",
        "machines",
        "applications",
        "Openstack",
        "cloud",
        "deployment",
        "Openstack",
        "Cinder",
        "Testing",
        "Evaluation",
        "Openstack",
        "Swift",
        "Testing",
        "Evaluation",
        "Migration",
        "Proxmox",
        "environment",
        "Openstack",
        "kvm",
        "environment",
        "PMP",
        "media",
        "platform",
        "infrastructureoperations",
        "implementation",
        "use",
        "cloud",
        "formation",
        "Autoscaling",
        "Auto",
        "load",
        "Auto",
        "failover",
        "New",
        "code",
        "release",
        "implementation",
        "Jenkins",
        "Custom",
        "reporting",
        "stats",
        "Nodejs",
        "application",
        "AWS",
        "Multitude",
        "day",
        "day",
        "operations",
        "Chef",
        "Saltstack",
        "migration",
        "Django",
        "Dashboard",
        "application",
        "Gui",
        "administration",
        "Familiarity",
        "software",
        "development",
        "principles",
        "source",
        "MSS",
        "Sr",
        "Systems",
        "EngineerAdministrator",
        "Herndon",
        "VA",
        "December",
        "December",
        "migration",
        "Netcool",
        "components",
        "IMPACT",
        "ISM",
        "Zenoss",
        "tenant",
        "Zenoss",
        "implementation",
        "WMI",
        "SNMP",
        "Syslog",
        "monitoring",
        "Python",
        "tales",
        "expressions",
        "log",
        "retention",
        "setups",
        "Python",
        "application",
        "custom",
        "monitoring",
        "measures",
        "teams",
        "time",
        "thresholds",
        "alarmsalerts",
        "database",
        "table",
        "values",
        "custom",
        "alert",
        "oncall",
        "delivery",
        "system",
        "python",
        "Developed",
        "log",
        "importer",
        "application",
        "imports",
        "logs",
        "application",
        "text",
        "files",
        "SQL",
        "Server",
        "logs",
        "requirement",
        "python",
        "Developed",
        "text",
        "file",
        "syslog",
        "transmission",
        "application",
        "Python",
        "Assisted",
        "Datacenter",
        "migration",
        "site",
        "site",
        "DR",
        "servers",
        "downtime",
        "PCI",
        "Compliance",
        "implementation",
        "auditors",
        "compliance",
        "Linux",
        "systems",
        "systems",
        "systems",
        "configurations",
        "UNIX",
        "SystemsCloud",
        "EngineerAdministrator",
        "AOLAdvertisingcom",
        "Baltimore",
        "MD",
        "May",
        "December",
        "Wrote",
        "Python",
        "scripts",
        "deviceapplication",
        "monitors",
        "reports",
        "event",
        "custom",
        "Zenpacks",
        "monitoring",
        "applications",
        "configuring",
        "monitoring",
        "systems",
        "RHEL",
        "Zenoss",
        "locations",
        "monitoring",
        "solutions",
        "edge",
        "source",
        "applications",
        "MongoDB",
        "Vertica",
        "Hadoop",
        "UNIX",
        "Systems",
        "Engineer",
        "Hivelocity",
        "Ventures",
        "Tampa",
        "FL",
        "April",
        "May",
        "Planning",
        "configuring",
        "server",
        "infrastructure",
        "company",
        "sign",
        "software",
        "PHPMySQL",
        "LDAP",
        "integration",
        "CentOS",
        "Linux",
        "planning",
        "execution",
        "Linux",
        "servers",
        "hardware",
        "facility",
        "company",
        "website",
        "deployment",
        "cloud",
        "computing",
        "infrastructure",
        "VMware",
        "Vsphere",
        "CentOS5",
        "Linux",
        "XEN",
        "storage",
        "Cloudcom",
        "CentOS5",
        "Linux",
        "solution",
        "hardware",
        "layer3",
        "homebrew",
        "san",
        "target",
        "storage",
        "Onapp",
        "CentOS5",
        "Linux",
        "solution",
        "Nexenta",
        "SAN",
        "storage",
        "drive",
        "raid",
        "array",
        "GB",
        "SSD",
        "cache",
        "client",
        "web",
        "interface",
        "machines",
        "hypervisor",
        "SAN",
        "software",
        "foundry",
        "switches",
        "AJAX",
        "Developed",
        "DB",
        "MySQLLinux",
        "migration",
        "script",
        "servers",
        "devices",
        "software",
        "softwareweb",
        "gui",
        "interfaces",
        "control",
        "hardware",
        "devices",
        "reboots",
        "PDU",
        "management",
        "Implementation",
        "ZenOSS",
        "management",
        "Experience",
        "source",
        "software",
        "Syslog",
        "Cacti",
        "Zabbix",
        "Icinga",
        "Groundwork",
        "experience",
        "SNMP",
        "equipment",
        "CRAC",
        "AC",
        "units",
        "APC",
        "switches",
        "server",
        "monitoring",
        "applicationsutilities",
        "tools",
        "support",
        "staff",
        "utilities",
        "software",
        "front",
        "equipment",
        "monitoring",
        "CRACTemperaturePowerGeneratorNetwork",
        "status",
        "monitoring",
        "services",
        "hours",
        "day",
        "days",
        "week",
        "data",
        "availability",
        "reports",
        "revenue",
        "impact",
        "metrics",
        "source",
        "monitoring",
        "applications",
        "NAGIOS",
        "CACTI",
        "ZENOSS",
        "CentOS",
        "RHEL",
        "Linux",
        "Geek",
        "Squad",
        "CadetSpecial",
        "Agent",
        "Best",
        "Buy",
        "Saint",
        "Petersburg",
        "FL",
        "March",
        "May",
        "business",
        "networks",
        "Windows",
        "Server",
        "products",
        "DiagnosingRepairing",
        "Windows",
        "PCs",
        "Troubleshooting",
        "consumer",
        "devices",
        "iPods",
        "hour",
        "Troubleshooting",
        "Windows",
        "Server",
        "servers",
        "customers",
        "use",
        "hardwaresoftware",
        "Technologies",
        "Chef",
        "Puppet",
        "Linux",
        "Python",
        "Ruby",
        "AWS",
        "EC2",
        "Network",
        "Education",
        "Computer",
        "Science",
        "St",
        "Petersburg",
        "College",
        "St",
        "Petersburg",
        "Skills",
        "linux",
        "years",
        "MySQL",
        "years",
        "PHP",
        "years",
        "years",
        "UNIX",
        "years",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Windows",
        "NT",
        "Windows",
        "Windows",
        "XP",
        "Windows",
        "Server",
        "Windows",
        "Server",
        "Redhat",
        "Linux",
        "v30",
        "Ubuntu",
        "Linux",
        "Debian",
        "Linux",
        "woody",
        "Gentoo",
        "Linux",
        "HPUX",
        "Solaris",
        "FreeBSD",
        "Programming",
        "CCPHPMySQLJavascriptJava",
        "Python",
        "Networking",
        "Anything",
        "LinuxUnix",
        "computer",
        "research",
        "Modifying",
        "Engine",
        "Control",
        "Units",
        "Integrating",
        "Windows",
        "UNIXLinux",
        "systems",
        "systems",
        "networking",
        "authentication",
        "environments",
        "network",
        "shares",
        "UNIX",
        "NFS",
        "customer",
        "situations",
        "company",
        "relationships",
        "customers"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:39:59.205278",
    "resume_data": "Director of Technology Director of Technology Culpeper VA Authorized to work in the US for any employer Work Experience Director of Technology August 2017 to Present Acting SecDevOps lead Responsible for leading team towards secops practices Assisted in Reducing AWS Operating Costs by 50 while acquiring premium support Wrote a webcrawler that scans through our web application deployments and reports back any vulnerabilities that are found Coordinated with team in moving form 1 ec2 classic VPC to multiple segmented vpcs for various application stacks Coordinate with producers to get their assets deployed websites applications etc Wrote python utility script that returns audits of all vpc ec2 r53 rds ecs assets Setup AWS Elastic Container Service POC Moved several applications to containerized dockerkubernetes cluster Implement Incident Response Plan Core Ruleset Implementation for mod security WAF Gemnasium integration for dependency management notifiesalerts and is setup to prevent builds if 1 or more librariesmodules report back a critical CVE scans through previous builds and notifies on highly vulnerable builds Wrote terraform scripts that automated secops VPC creation and peering with other vpcs in multiple aws accounts Wrote auditing tool using flaskflaskapi to help audit various AWS services IAM S3 etc CPA Global November 2016 to Present Move existing legacy application to AWS Automate the Nagios inventory scripts based on a python script and jinja template hostscfg Responsible for day to day maintenance of the application and colo environment while clients are being moved to AWS Coordinate and give direction to other staff memberscontractors Wrote several ansible playbooks that are responsible for automating deployments maintenance setting up new clients Filling massive documentation backlog Managing various collocated infrastructure such as F5 load balancers Checkpoint VPNACL Vsphere deployment NetApp appliance etc Performing deployments to AWS as well as colocated environment in a synchronized methodical manner utilizing puppet and cloudformation and ansible in collocated stack Rewrite Nagios monitoring into lambda functions that we leverage using cloudwatch Rearchitect Admin and Gateway instance infrstraucture into a single nat instance with vpc direct connect from our vpn end point to the various vpc endpoints Rewrite several perl scripts into python Lead a team of 3 other members towards our AWS move finishline and automate tasks in colo environment in preparation of remaining client migrations to AWS Interface with various offsiteremote resources DevOPS Engineer FinchComputing May 2016 to Present Move existing atlassian stack to AWS Automate builds utilizing python build scripts for both windows and linux builds Maintain Cmake scripts as per Development needs Maintain Ansible deployment scripts Automate Bamboo build agents so that Agents are provisioned for a build plan and then terminated after builds are complete tests succeeded Unit Regression and Functional Tests Automate infrastructure provisioning and scaling Participate in multiple team scrums as a DevOps resource Black Team C core application Orange Team Java Python and Blue Team NodeJS Modular Builds JiraBamboo CIIntegration Deploy maintain and integrate Artifactory for Bamboo artifact management DevOPS Engineer Aquilent October 2014 to May 2016 Developed and deployed application that processes http post data to log files via Python Tornado framework Write salt formulas for automated configuration management saltstack SSO integration of all internal applications using CROWD Developed and deployed file management application that uses LDAP authentication utilizing Python Django Responsible for routine high profile government website deployments Implemented saltstacksaltcloud AWS GovCloud integration Configuration management setup utilizing Bamboo Custom Framework Akamai Integration Github Enterprise repository DevOPS Engineer VectorWorks June 2015 to February 2016 Move existing plone 24 deployment from on premise deployment to amazon webservices Use Ansible to perform the following in AWS Prepare Ec2 instances with proper user permissions and build tools Build deprecated python 24 Install specific python libraries setuptools simplejson etc Use perforce to deploy code Execute plone buildout with necessary dependencies Provision deploy separate zeo servers zope object store Setup supervisord to start zeo server Setup supervisord to start plone application on app instances Provision haproxyvarnish cluster Add instances behind haproxy using jinja template that uses ansible dynamic provisioning to add instances based on tags that are added using the ansible ec2 module during provisioning Reload haproxy service Consult with developers and release team on best practices Setup logging cluster using logstash and rsyslog Write AWS boto script that helps us keep track of our resources AWS VPC Planning and Deployment AWS VPC Routing and ACL configuration Main corporate website build and deployment process moved over to Jenkins build test and deploy jobs Completed Jenkins build test and deployment integration for entire backofficeorder center deployment All underlying Backend infrastructure is managed dynamically via Ansible Utilized AWS S3 to backup and rotate data as well as logs DevOPS Engineer June 2014 to October 2014 Architect and implement new deployment strategies Write Opsworks Chef recipes Utilize pythonboto for various Amazon Web Services functions Rewrite SFDC resource usage perl script in python Integrated Opsworks and CircleCI lifecycle Experience with CircleCi build scripts Various Configuration Management Migrations Migrate from rightscale to salt stack For legacy application Rewrite opsworks recipes to fit new chef deployment Deploy new chef server and operate infrastructure Multitennant application deployments Python Developer Software Engineer Team City Saint Petersburg FL January 2014 to January 2014 Devise and implement new deployment procedure Utilizing Ansible for configuration management Team City for Continuous Integration Write new unit tests for Cameopaas application Deploy new modular testing environment for SQA QA team Environment consists of a VM running on each SQA members workstation Each VM is managed by Ansible for configuration management Required changes to application code to get rid of table sequencing so that storyticket testing can be done on the fly Implemented ticketstory switching application so that testing can be switched and resumed on demand this mainly controls GIT branch switching and database switching Implemented web GUI so no Shell access is needed to switch between tickets for testing Deployments Deployed application using team city Rewrote deployment process to make use of ansible utlizied devpi and wheels for python application deployment Dev Ops Engineer NPR Washington DC December 2012 to December 2013 Implementation of fully automated enterprise cloud utilizing OpenStack KVM Ceph and 10GBE Deployment and implementation of Chef for infrastructure as code initiative Automated scaling of virtual machines and applications across entire Openstack cloud deployment Openstack Cinder Testing and Evaluation Openstack Swift Testing and Evaluation Migration from previous Proxmox ve environment into new Openstack kvm environment Architected and deployed PMP public media platform infrastructureoperations implementation Made use of cloud formation Autoscaling Auto load balancing Auto failover New code release implementation handled via Jenkins Custom reporting based on stats from Nodejs application and AWS Multitude of various day to day operations scripts Chef to Saltstack migration Implemented Django Dashboard application for Gui administration Familiarity with Agile software development principles and various source repository MSS Sr Systems EngineerAdministrator Symantec Herndon VA December 2011 to December 2012 Full migration from all Netcool components IMPACT ISM etc into Zenoss Implemented a multi tenant Zenoss implementation to support WMI monitoring SNMP monitoring Syslog monitoring Reported via Python tales expressions Devised and implemented multiple log retention setups via a modular Python application Implemented custom monitoring measures for various teams ie time based thresholds regex matching etc Created synthetic alarmsalerts based on database table values Developed a custom alert and oncall paging delivery system written in python Developed and implemented a multithreaded log importer application that imports logs from various application generated flat text files into SQL Server as well as deleting old logs as per requirement python Developed and implemented a flat text file to syslog transmission application Python Assisted with Datacenter migration and site to site DR of 1000 servers with minimal to no downtime PCI Compliance implementation worked with auditors to insure compliance of various Linux systems Reconfiguring existing systems when possible and migrating old systems to new configurations when needed UNIX SystemsCloud EngineerAdministrator AOLAdvertisingcom Baltimore MD May 2011 to December 2011 Wrote Python transforms and scripts for supporting new deviceapplication monitors reports and event triggers Creating custom Zenpacks for the monitoring of various applications Responsible for deploying configuring and deploying monitoring systems RHEL Zenoss in 3 geographical locations Deployed monitoring solutions for various cutting edge open source applications such as MongoDB Vertica Hadoop UNIX Systems Engineer Hivelocity Ventures Tampa FL April 2006 to May 2011 Planning deploying configuring and developing server infrastructure Developed internal company sso single sign on software via PHPMySQL with LDAP integration on CentOS 5 Linux Assisting with the successful planning and execution of moving 3000 serversmigrating outdated Linux servers to new hardware to new facility Maintaining company website Successful deployment of 4 different cloud computing distributed computing infrastructure VMware Vsphere 3terra Applogic CentOS5 Linux using XEN and local storage Cloudcom CentOS5 Linux based solution using hardware layer3 and a homebrew CentOS5 san serving an iSCSI target for storage Onapp CentOS5 Linux based solution using Nexenta SAN storage with a 8 drive raid 100 array 32GB SSD for cache with fully functional client web portals That interface with virtual machines hypervisor servers SAN software as well as foundry switches written in AJAX Developed and implemented DB MySQLLinux migration script required to import 3000 servers and more than 1200 devices into new commercial software Responsible for providing softwareweb gui interfaces for the control of several hardware devices remote reboots CRAC as well as PDU management Implementation of ZenOSS management Experience implementing various open source monitoring software ie Syslog Cacti Zabbix Icinga Groundwork Extensive experience troubleshooting and implementing SNMP enabled equipment CRAC AC units APC remote reboot switches as well as various server monitoring applicationsutilities Responsible for providing tools required by technical support staff monitoring utilities alarmalerting software front ends for vital equipment monitoring CRACTemperaturePowerGeneratorNetwork status Ensuring that monitoring services stay online and are available 24 hours a day 7 days a week Integrating data for availability reports revenue impact as well as various other metrics Integrating various open source monitoring applications such as NAGIOS CACTI ZENOSS all running on CentOS RHEL Linux platforms etc Geek Squad CadetSpecial Agent Best Buy Saint Petersburg FL March 2005 to May 2007 Deploying small business networks Installing and configuring Windows 2003 Server and applicable products DiagnosingRepairing Windows based PCs Troubleshooting and repairing several consumer devices such as iPods within a hour Troubleshooting and repairing Windows Server 2003 servers Training customers on the use of their new or preexisting hardwaresoftware Technologies Chef Puppet Linux Python Ruby AWS EC2 Network Education Computer Science St Petersburg College St Petersburg Skills linux 10 years MySQL 5 years PHP 5 years python 7 years UNIX 5 years Additional Information Operating Systems Windows NT 40 Windows 2000 Windows XP Windows Server 2003 Windows Server 2008 Redhat Linux v30 and up Ubuntu Linux 606 and up Debian Linux 30 woody and up Gentoo Linux HPUX Solaris FreeBSD Programming CCPHPMySQLJavascriptJava Python and Networking Anything LinuxUnix related Various computer and automotive related research Modifying Engine Control Units Integrating Windows and UNIXLinux based systems making systems interoperate with networking authentication and in networked environments via network shares or UNIX NFS Defusing volatile customer situations and improving company relationships with customers",
    "unique_id": "3a7a9d7d-8c66-489d-aa32-7e48a597c533"
}