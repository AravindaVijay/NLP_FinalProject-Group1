{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Amazon Seattle WA Around 5 years of experience in software development includes Analysis Design and Development of Webbased applications with extensive experience in the design and development of multitier applications using Java J2EE Spring Hibernate ORM XML XSD Web Services REST SOAP WSDL HTML5 CSS3 JavaScript Ajax jQuery JUnit Worked on different Application Servers like Web Logic IBM WebSphere ESB Enterprise Service Bus and JBoss Proficient in Java 8J2EE technologies like JSP Struts Java Servlets AJAX JavaBeans JNDI JMS XML web service using IDEs like Eclipse NetBeans Experience in using  JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Good experience in implementing J2EE compliant applications using various Design patterns Struts framework Tiles spring MVC framework Hibernate and Messaging Middleware using JMS MQ series Extensive experience in the implementation of the version control software SVN CVS Git Experienced in generating logging by Log4j to identify the errors in the production test environment and experienced in Ant Maven and Gradle tools Experienced in developing fully functional responsive modules using Scala with Akka Arango DB Handson experience using Messaging Services like JMS MQ Series Proficient in RDBMS concepts and experience in working with Oracle DB2 and MY SQL PLSQL SQL Plus Database triggers Procedures Functions Closely worked with Release Management Team in doing builds and deploying code into various environments like DEVQASITUATProd Experience in different phases of Software Development Life Cycle SDLC like analysis design development and testing with SOA Amazon Web Service AWS and Microservices architectures Experience using core Java APIs to build multithreaded serverside components for largescale Web and standalone applications Strong Experience using RESTful Web services to save and retrieve geo locations using a remote server in Java 8 using Spring MVC MongoDB Working Experience in different modules of Spring Application Framework Spring MVC Spring Core Spring Tx Spring ORM Spring Boot Spring JDBC Spring JMS Spring WS Spring Cloud Selflearning knowledge of Amazon AWS Cloud Platform with focus on EC2 and S3 Lambda services Experience in building Springbased Java microservices to support enterprise web application Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Database Design Development and Query Optimization using Oracle DB2 Experience in writing complex Database Queries Stored Procedures Triggers and Cursors Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience of various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers Apache Tomcat Web Logic and Oracle Application Server Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Excellent communication and interpersonal skills and involved in client interactions for scoping effort estimates and status reporting Work Experience Java Developer Amazon Seattle WA November 2018 to Present Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Worked in designing developing and testing the web application by using the HTML5 CSS3 SASS LESS Bootstrap and ReactJS also developed crossbrowser compatible website using HTML45 CSS3 DOM JavaScript JSON jQuery AJAX and Bootstrap Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used AngularJS modules such as Controllers Services Filters and Directives to build wellstructured web pages and made Ajax call to communicate with Restful Web services Used AngularJS for creating custom directives for data manipulations and to display data in company standard format in UI Used Angular JS to implement data binding Module loading Script HTML XML Oracle ESB to IBM CICS Mainframe through IBM MQSeries XML Beans and JMS to test different parts of the application Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Implemented Microservices architecture using Spring Boot for making application smaller and independent Designed and developed the REST based Microservices using the Spring Boot Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Worked on AWS Amazon Web Services and its features like EC2 S3 RDS ELB EBS ESB CloudFront VPC Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Developed user interface by using the React JS FluxRedux for SPA development Used React JS to create custom components for data manipulations and to display data in company standard format Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React also used Json to fetch data from CA groups and load in customer application Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions also created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Used Axioms with React for making AJAX Calls also installed Ranger in all environments for Second Level of security in Kafka Broker Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Implemented web Services to bind the data and provide access to the data on the server and developed form validation with AngularJS valid and data validation Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer McKesson San Francisco CA September 2017 to October 2018 Worked on Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript jQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Develop UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Developed the microservices using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Spring Boot which is radically faster in building cloud Microservices and develop Spring based application with very less configuration also developed unit and integration tests for existing Microservices using Junit and Docker Worked on Java 8 Lambda Expressions Parallel streams Streams and Predicates also worked on various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs bootstrap and Google Web Toolkit Created AngularJS controllers directives models for different modules in the frontend also designed and implemented application using AngularJS framework to twoway data binding also worked in developing front end technologies such as JavaScript Angular jQuery HTML CSS JSON JSP and Struts Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API Spring Boot for microservices and Spring Batch for running batch jobs Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures also implemented REST web service in Scala using Akka for CBPMAN log tracking application Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Worked on developing Testing Debugging Integrating and Deploying Enterprise applications using Integrated Development Environments IDE IntelliJ IDEA Eclipse and Rational Application Developer RAD Extensively worked on JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developed web layer using Spring framework to manage the project in MVC pattern worked on developing Microservices with Spring Boot Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Involved in transpiling bundling and developing React components for the partner homepages using Reactjs Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Used the feature of ReactJS of running the server and rendering the virtual DOM returning to the browser as a regular page Used React flux to polish the data and for single directional flow and migrated the code to Reactjswith Redux Implemented the Drag and Drop functionality using ReactDraggable and utilized ReactJS Virtual Dom for updating DOM manipulations Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Processed data into HDFS by developing solutions analyzed the data using MapReduce Pig Hive and produce summary results from Hadoop to downstream systems Actively involved in the design of the application architecture in lines of their own Framework based on MVC2 Architecture with JSP Front End HTTP RequestResponse Integration as View Servlet as Controller and combination of EJBs and Java classes as Model Implemented Nodejs as serverside proxy for eventdriven nonblocking IO model which made my applications to run across distributed devices Implemented Node JS as a serverside proxy for an Implemented Oath 20 for providing authentication and authorization for web services eventdriven nonblocking IO model to make the application lightweight and efficient Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Developed RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on web services using SOAP UDDI WSDL REST and implementation using APACHE AXIS and APACHE CXF Java Developer Citi Bank Mumbai Maharashtra August 2012 to March 2015 Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap AJAX for building up a Monolithic application Used Redux for state management to store the whole state of the app in an immutable object tree Used React Redux connect which is responsible to map state to props and map dispatch to props Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Followed spring web flow architecture throughout the application Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used ReactJS to create Controllers to handle events triggered by clients and send request to server Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Developed highly responsive mobile user Interface using reactnative framework Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Used IAM for creating roles users and groups to provide additional security to AWS account and its resources Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Implemented Spring Security for providing authentication and authorization for web services Education Bachelors in CSE Northwestern Polytechnic University Fremont CA May 2015 to August 2017 Skills Angularjs J2Ee Java Javascript Spring Java J2Ee Hibernate JSP",
    "entities": [
        "UMLRational Rose",
        "Second Level",
        "Spring Application Framework Spring",
        "Spring Bootbased",
        "Rational Application Developer RAD",
        "JMS MQ series Extensive",
        "JMS MQ Series Proficient",
        "Session Facade Created",
        "Nodejs",
        "Used Axioms with React",
        "NAT",
        "Release Management Team",
        "ISOMORPHIC",
        "Data Access Object Utilized JavaScript",
        "UNIX",
        "Java 8 Lambda",
        "Drag",
        "Sublime Text",
        "Controllers Services Filters",
        "Reactjs Nodejs",
        "LinuxUnix",
        "HTTP",
        "JSP Front End HTTP RequestResponse Integration",
        "LINUX Experienced",
        "Java Server Pages",
        "Redux Pattern",
        "Apache Cassandra 311 Couchbase Kubernetes",
        "Node JS Angular",
        "MVC Spring",
        "Analysis Design and Development of Webbased",
        "IBM",
        "MapReduce Pig Hive",
        "AXIS",
        "SVN CVS Git Experienced",
        "node",
        "Hadoop",
        "XML",
        "JBoss Proficient",
        "Restful Web",
        "React",
        "Used React JS",
        "JAXWS",
        "Software Development Life Cycle SDLC",
        "BabelLoader",
        "Reactjs",
        "Created S3",
        "Amazon",
        "Selenium IDE Firebug Fire Path Selenium Builder Worked",
        "REST API Spring Boot",
        "Configuring AWS EC2",
        "JavaScript React JS",
        "Pyunit",
        "Test Automation",
        "Google Web Toolkit Created",
        "DAO",
        "Node JS Involved",
        "Skills",
        "Kerberos",
        "Messaging Services",
        "Spring Sleuth",
        "Oracle Application Server Familiarity",
        "UML",
        "AWS Security Groups",
        "Directives",
        "Ant Maven",
        "Sequence",
        "HTML CSS XHTML JavaScript jQuery Angular",
        "RD",
        "IFP",
        "Processed",
        "Linux",
        "JSP",
        "Built",
        "Worked",
        "Oracle DB2",
        "CBPMAN",
        "Shell Scripting",
        "Factory Singleton Service Locator",
        "DOM",
        "Implemented Microservices",
        "SSL",
        "Developed Spring RestfulMicroservices",
        "MVC",
        "Interface",
        "EJB",
        "Validate",
        "Node JS",
        "Working Experience",
        "Oracle DB2 Experience",
        "FluxRedux",
        "Googles V8",
        "JS",
        "XML Bean",
        "SIT",
        "API",
        "PDF",
        "Created",
        "AWS",
        "CA",
        "Scala",
        "Stream Implemented web Services",
        "MVC2 Architecture",
        "Akka",
        "Handlebar JS",
        "UAT Proficient",
        "JavaScript Micro",
        "Backbone JS",
        "Seattle",
        "IDEA",
        "JSX",
        "ReactDraggable",
        "Log4j",
        "Bootstrap",
        "Akka Arango DB Handson",
        "Kerberos Implemented Kafka Security Features",
        "Hive",
        "NETFLIX",
        "Zuul",
        "Rational Rose Created Servlets",
        "SQS",
        "Backend",
        "JBoss Application Server",
        "Database Queries Stored Procedures Triggers",
        "AJAX Calls",
        "lJavaspan",
        "Developed API services",
        "JavaScript",
        "Worked on JDK 8",
        "CSE Northwestern Polytechnic University",
        "UI",
        "JSP Servlets",
        "Created JSP JavaScript JQUERY",
        "Predicates",
        "Backbonejs React",
        "Model Implemented Nodejs",
        "CSS",
        "Java Message Service",
        "SOA Amazon Web Service AWS and Microservices architectures",
        "REST",
        "SPA",
        "Drop",
        "NoSQL",
        "Application",
        "Integrated Development Environments IDE",
        "Responsible for Writing Hibernate",
        "ESB",
        "Node",
        "Java J2EE Spring Hibernate ORM XML"
    ],
    "experience": "Experience in using   JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Good experience in implementing J2EE compliant applications using various Design patterns Struts framework Tiles spring MVC framework Hibernate and Messaging Middleware using JMS MQ series Extensive experience in the implementation of the version control software SVN CVS Git Experienced in generating logging by Log4j to identify the errors in the production test environment and experienced in Ant Maven and Gradle tools Experienced in developing fully functional responsive modules using Scala with Akka Arango DB Handson experience using Messaging Services like JMS MQ Series Proficient in RDBMS concepts and experience in working with Oracle DB2 and MY SQL PLSQL SQL Plus Database triggers Procedures Functions Closely worked with Release Management Team in doing builds and deploying code into various environments like DEVQASITUATProd Experience in different phases of Software Development Life Cycle SDLC like analysis design development and testing with SOA Amazon Web Service AWS and Microservices architectures Experience using core Java APIs to build multithreaded serverside components for largescale Web and standalone applications Strong Experience using RESTful Web services to save and retrieve geo locations using a remote server in Java 8 using Spring MVC MongoDB Working Experience in different modules of Spring Application Framework Spring MVC Spring Core Spring Tx Spring ORM Spring Boot Spring JDBC Spring JMS Spring WS Spring Cloud Selflearning knowledge of Amazon AWS Cloud Platform with focus on EC2 and S3 Lambda services Experience in building Springbased Java microservices to support enterprise web application Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Database Design Development and Query Optimization using Oracle DB2 Experience in writing complex Database Queries Stored Procedures Triggers and Cursors Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience of various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers Apache Tomcat Web Logic and Oracle Application Server Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Excellent communication and interpersonal skills and involved in client interactions for scoping effort estimates and status reporting Work Experience Java Developer Amazon Seattle WA November 2018 to Present Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Worked in designing developing and testing the web application by using the HTML5 CSS3 SASS LESS Bootstrap and ReactJS also developed crossbrowser compatible website using HTML45 CSS3 DOM JavaScript JSON jQuery AJAX and Bootstrap Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used AngularJS modules such as Controllers Services Filters and Directives to build wellstructured web pages and made Ajax call to communicate with Restful Web services Used AngularJS for creating custom directives for data manipulations and to display data in company standard format in UI Used Angular JS to implement data binding Module loading Script HTML XML Oracle ESB to IBM CICS Mainframe through IBM MQSeries XML Beans and JMS to test different parts of the application Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Implemented Microservices architecture using Spring Boot for making application smaller and independent Designed and developed the REST based Microservices using the Spring Boot Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Worked on AWS Amazon Web Services and its features like EC2 S3 RDS ELB EBS ESB CloudFront VPC Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Developed user interface by using the React JS FluxRedux for SPA development Used React JS to create custom components for data manipulations and to display data in company standard format Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React also used Json to fetch data from CA groups and load in customer application Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions also created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Used Axioms with React for making AJAX Calls also installed Ranger in all environments for Second Level of security in Kafka Broker Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Implemented web Services to bind the data and provide access to the data on the server and developed form validation with AngularJS valid and data validation Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer McKesson San Francisco CA September 2017 to October 2018 Worked on Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript jQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Develop UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Developed the microservices using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Spring Boot which is radically faster in building cloud Microservices and develop Spring based application with very less configuration also developed unit and integration tests for existing Microservices using Junit and Docker Worked on Java 8 Lambda Expressions Parallel streams Streams and Predicates also worked on various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs bootstrap and Google Web Toolkit Created AngularJS controllers directives models for different modules in the frontend also designed and implemented application using AngularJS framework to twoway data binding also worked in developing front end technologies such as JavaScript Angular jQuery HTML CSS JSON JSP and Struts Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API Spring Boot for microservices and Spring Batch for running batch jobs Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures also implemented REST web service in Scala using Akka for CBPMAN log tracking application Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Worked on developing Testing Debugging Integrating and Deploying Enterprise applications using Integrated Development Environments IDE IntelliJ IDEA Eclipse and Rational Application Developer RAD Extensively worked on JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developed web layer using Spring framework to manage the project in MVC pattern worked on developing Microservices with Spring Boot Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Involved in transpiling bundling and developing React components for the partner homepages using Reactjs Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Used the feature of ReactJS of running the server and rendering the virtual DOM returning to the browser as a regular page Used React flux to polish the data and for single directional flow and migrated the code to Reactjswith Redux Implemented the Drag and Drop functionality using ReactDraggable and utilized ReactJS Virtual Dom for updating DOM manipulations Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Processed data into HDFS by developing solutions analyzed the data using MapReduce Pig Hive and produce summary results from Hadoop to downstream systems Actively involved in the design of the application architecture in lines of their own Framework based on MVC2 Architecture with JSP Front End HTTP RequestResponse Integration as View Servlet as Controller and combination of EJBs and Java classes as Model Implemented Nodejs as serverside proxy for eventdriven nonblocking IO model which made my applications to run across distributed devices Implemented Node JS as a serverside proxy for an Implemented Oath 20 for providing authentication and authorization for web services eventdriven nonblocking IO model to make the application lightweight and efficient Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Developed RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on web services using SOAP UDDI WSDL REST and implementation using APACHE AXIS and APACHE CXF Java Developer Citi Bank Mumbai Maharashtra August 2012 to March 2015 Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap AJAX for building up a Monolithic application Used Redux for state management to store the whole state of the app in an immutable object tree Used React Redux connect which is responsible to map state to props and map dispatch to props Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Followed spring web flow architecture throughout the application Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used ReactJS to create Controllers to handle events triggered by clients and send request to server Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Developed highly responsive mobile user Interface using reactnative framework Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Used IAM for creating roles users and groups to provide additional security to AWS account and its resources Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Implemented Spring Security for providing authentication and authorization for web services Education Bachelors in CSE Northwestern Polytechnic University Fremont CA May 2015 to August 2017 Skills Angularjs J2Ee Java Javascript Spring Java J2Ee Hibernate JSP",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "years",
        "experience",
        "software",
        "development",
        "Analysis",
        "Design",
        "Development",
        "Webbased",
        "applications",
        "experience",
        "design",
        "development",
        "applications",
        "Java",
        "J2EE",
        "Spring",
        "Hibernate",
        "ORM",
        "XML",
        "XSD",
        "Web",
        "Services",
        "REST",
        "SOAP",
        "WSDL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Ajax",
        "jQuery",
        "JUnit",
        "Application",
        "Servers",
        "Web",
        "Logic",
        "IBM",
        "WebSphere",
        "ESB",
        "Enterprise",
        "Service",
        "Bus",
        "JBoss",
        "Proficient",
        "Java",
        "8J2EE",
        "technologies",
        "JSP",
        "Struts",
        "Java",
        "Servlets",
        "AJAX",
        "JavaBeans",
        "JNDI",
        "JMS",
        "XML",
        "web",
        "service",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "Experience",
        "JAXB",
        "JAXP",
        "parsing",
        "XML",
        "Bean",
        "parse",
        "data",
        "XML",
        "files",
        "experience",
        "J2EE",
        "applications",
        "Design",
        "patterns",
        "Struts",
        "framework",
        "Tiles",
        "spring",
        "MVC",
        "framework",
        "Hibernate",
        "Middleware",
        "JMS",
        "MQ",
        "series",
        "experience",
        "implementation",
        "version",
        "control",
        "software",
        "SVN",
        "CVS",
        "Git",
        "Log4j",
        "errors",
        "production",
        "test",
        "environment",
        "Ant",
        "Maven",
        "Gradle",
        "tools",
        "modules",
        "Scala",
        "Akka",
        "Arango",
        "DB",
        "Handson",
        "experience",
        "Messaging",
        "Services",
        "JMS",
        "MQ",
        "Series",
        "Proficient",
        "RDBMS",
        "concepts",
        "experience",
        "Oracle",
        "DB2",
        "MY",
        "SQL",
        "PLSQL",
        "SQL",
        "Plus",
        "Database",
        "Procedures",
        "Functions",
        "Release",
        "Management",
        "Team",
        "builds",
        "code",
        "environments",
        "DEVQASITUATProd",
        "Experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "analysis",
        "design",
        "development",
        "testing",
        "SOA",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "Microservices",
        "Experience",
        "core",
        "Java",
        "APIs",
        "serverside",
        "components",
        "largescale",
        "Web",
        "applications",
        "Strong",
        "Experience",
        "Web",
        "services",
        "geo",
        "locations",
        "server",
        "Java",
        "Spring",
        "MVC",
        "MongoDB",
        "Working",
        "Experience",
        "modules",
        "Spring",
        "Application",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "Core",
        "Spring",
        "Tx",
        "Spring",
        "ORM",
        "Spring",
        "Boot",
        "Spring",
        "JDBC",
        "Spring",
        "JMS",
        "Spring",
        "WS",
        "Spring",
        "Cloud",
        "knowledge",
        "Amazon",
        "Cloud",
        "Platform",
        "focus",
        "EC2",
        "S3",
        "Lambda",
        "services",
        "Experience",
        "Java",
        "microservices",
        "enterprise",
        "web",
        "application",
        "projects",
        "Grunt",
        "task",
        "runner",
        "Bower",
        "package",
        "manager",
        "JavaScript",
        "version",
        "libraries",
        "Nodejs",
        "environment",
        "Database",
        "Design",
        "Development",
        "Query",
        "Optimization",
        "Oracle",
        "DB2",
        "Experience",
        "Database",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Couchbase",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "LINUX",
        "Shell",
        "Scripting",
        "UNIX",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Familiarity",
        "development",
        "practices",
        "code",
        "reviews",
        "unit",
        "testing",
        "system",
        "integration",
        "testing",
        "SIT",
        "user",
        "acceptance",
        "testing",
        "UAT",
        "Proficient",
        "editors",
        "Eclipse",
        "Visual",
        "Studio",
        "Code",
        "PyCharm",
        "Py",
        "Scripter",
        "Notepad",
        "Sublime",
        "Text",
        "applications",
        "Expertise",
        "Unit",
        "testing",
        "Pyunit",
        "framework",
        "Test",
        "Automation",
        "Robot",
        "Framework",
        "Error",
        "Logging",
        "Sentry",
        "Excellent",
        "communication",
        "skills",
        "client",
        "interactions",
        "effort",
        "estimates",
        "status",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "November",
        "Present",
        "Frontend",
        "applications",
        "Mobile",
        "Application",
        "user",
        "UI",
        "web",
        "pages",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "Es6",
        "JavaScript",
        "React",
        "JS",
        "ReactNativeRedux",
        "Saga",
        "Redux",
        "Sagas",
        "actions",
        "reducers",
        "API",
        "calls",
        "redux",
        "saga",
        "middleware",
        "redux",
        "application",
        "state",
        "redux",
        "actions",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "SASS",
        "Bootstrap",
        "ReactJS",
        "crossbrowser",
        "website",
        "HTML45",
        "CSS3",
        "DOM",
        "JavaScript",
        "JSON",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "Written",
        "Ajax",
        "JSON",
        "JavaScript",
        "functions",
        "User",
        "selections",
        "radio",
        "button",
        "dropdown",
        "menu",
        "selections",
        "cookie",
        "modules",
        "Controllers",
        "Services",
        "Filters",
        "Directives",
        "web",
        "pages",
        "call",
        "Restful",
        "Web",
        "services",
        "custom",
        "directives",
        "data",
        "manipulations",
        "data",
        "company",
        "format",
        "UI",
        "Angular",
        "JS",
        "data",
        "Module",
        "loading",
        "Script",
        "HTML",
        "XML",
        "Oracle",
        "ESB",
        "IBM",
        "CICS",
        "Mainframe",
        "IBM",
        "MQSeries",
        "XML",
        "Beans",
        "JMS",
        "parts",
        "application",
        "CSS",
        "templates",
        "use",
        "pages",
        "website",
        "CSS",
        "background",
        "text",
        "border",
        "margin",
        "padding",
        "table",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "application",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "Kubernetes",
        "deployment",
        "scaling",
        "management",
        "Docker",
        "Containers",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "features",
        "EC2",
        "S3",
        "RDS",
        "ELB",
        "EBS",
        "ESB",
        "CloudFront",
        "VPC",
        "experience",
        "Keyword",
        "Driven",
        "Data",
        "Driven",
        "Hybrid",
        "framework",
        "Selenium",
        "Web",
        "Driver",
        "topics",
        "Kafka",
        "cluster",
        "environment",
        "Kafka",
        "cluster",
        "Kerberos",
        "Kafka",
        "Security",
        "Features",
        "SSL",
        "grainfines",
        "security",
        "Kerberos",
        "users",
        "groups",
        "security",
        "experience",
        "Firefox",
        "Addons",
        "Selenium",
        "IDE",
        "Firebug",
        "Fire",
        "Path",
        "Selenium",
        "Builder",
        "frameworks",
        "Reactjs",
        "highquality",
        "components",
        "Frontend",
        "solution",
        "user",
        "interface",
        "React",
        "JS",
        "FluxRedux",
        "SPA",
        "development",
        "React",
        "JS",
        "custom",
        "components",
        "data",
        "manipulations",
        "data",
        "company",
        "format",
        "Configured",
        "Express",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "Web",
        "Application",
        "Angular",
        "JS",
        "Bootstrap",
        "CSS",
        "Web",
        "Services",
        "design",
        "ISOMORPHIC",
        "website",
        "Tablets",
        "users",
        "React",
        "Json",
        "data",
        "CA",
        "groups",
        "load",
        "customer",
        "application",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "Node",
        "JS",
        "server",
        "Rest",
        "services",
        "database",
        "load",
        "cloud",
        "instances",
        "AWS",
        "cloud",
        "resources",
        "troubleshooting",
        "EC2",
        "instances",
        "S3",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "Elastic",
        "Search",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "AWS",
        "Route",
        "traffic",
        "regions",
        "AWS",
        "Security",
        "Groups",
        "Configuring",
        "AWS",
        "EC2",
        "instances",
        "Java",
        "API",
        "Amazon",
        "SQS",
        "emails",
        "Axioms",
        "React",
        "AJAX",
        "Calls",
        "Ranger",
        "environments",
        "Level",
        "security",
        "Kafka",
        "Broker",
        "containerization",
        "tools",
        "Docker",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "docker",
        "host",
        "JDK",
        "code",
        "interfaces",
        "default",
        "methods",
        "interfaces",
        "filters",
        "Stream",
        "web",
        "Services",
        "data",
        "access",
        "data",
        "server",
        "form",
        "validation",
        "data",
        "validation",
        "Oracle",
        "PLSQL",
        "database",
        "HQL",
        "query",
        "data",
        "database",
        "Annotations",
        "Hibernate",
        "mapping",
        "Apache",
        "Camel",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "email",
        "notifications",
        "employee",
        "notifications",
        "user",
        "interfaces",
        "JSP",
        "Servlets",
        "Spring",
        "framework",
        "DAO",
        "layer",
        "Hibernate",
        "system",
        "performance",
        "analysis",
        "design",
        "UML",
        "uses",
        "cases",
        "domain",
        "model",
        "Activity",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "generation",
        "engineering",
        "tool",
        "Rational",
        "Rose",
        "Created",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "Enterprise",
        "Java",
        "Bean",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "error",
        "handling",
        "framework",
        "business",
        "validation",
        "errors",
        "application",
        "error",
        "IFP",
        "error",
        "table",
        "J2EE",
        "design",
        "patterns",
        "project",
        "Factory",
        "Singleton",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "JavaScript",
        "data",
        "entry",
        "form",
        "form",
        "information",
        "stamp",
        "PDF",
        "form",
        "Java",
        "Developer",
        "McKesson",
        "San",
        "Francisco",
        "CA",
        "September",
        "October",
        "Design",
        "Development",
        "Implementation",
        "field",
        "Web",
        "Applications",
        "development",
        "HTML",
        "CSS",
        "XHTML",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Bootstrap",
        "AJAX",
        "XML",
        "JSON",
        "Restful",
        "web",
        "services",
        "web",
        "Developed",
        "Spring",
        "RestfulMicroservices",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "part",
        "Services",
        "Discovery",
        "Apache",
        "Axis",
        "Develop",
        "UI",
        "automation",
        "Node",
        "JS",
        "Angular",
        "Ext",
        "JS",
        "web",
        "applications",
        "Selenium",
        "Web",
        "Driver",
        "JavaScript",
        "Micro",
        "services",
        "Spring",
        "boot",
        "Spring",
        "cloud",
        "microservices",
        "Spring",
        "Sleuth",
        "Config",
        "Server",
        "NETFLIX",
        "OSS",
        "Eureka",
        "Hystrix",
        "Zuul",
        "microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "endpoints",
        "Spring",
        "Boot",
        "cloud",
        "Microservices",
        "Spring",
        "application",
        "configuration",
        "unit",
        "integration",
        "tests",
        "Microservices",
        "Junit",
        "Docker",
        "Java",
        "Lambda",
        "Expressions",
        "Parallel",
        "streams",
        "Streams",
        "Predicates",
        "JavaScript",
        "Web",
        "application",
        "libraries",
        "Backbonejs",
        "React",
        "JS",
        "Ember",
        "JS",
        "Requirejs",
        "Knockout",
        "Angularjs",
        "bootstrap",
        "Google",
        "Web",
        "Toolkit",
        "directives",
        "models",
        "modules",
        "frontend",
        "application",
        "framework",
        "twoway",
        "data",
        "end",
        "technologies",
        "JavaScript",
        "Angular",
        "jQuery",
        "HTML",
        "CSS",
        "JSON",
        "JSP",
        "Struts",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Spring",
        "Boot",
        "microservices",
        "Spring",
        "Batch",
        "batch",
        "jobs",
        "API",
        "services",
        "Reactjs",
        "Nodejs",
        "RabbitMQ",
        "architectures",
        "REST",
        "web",
        "service",
        "Scala",
        "Akka",
        "CBPMAN",
        "tracking",
        "application",
        "RabbitMQ",
        "Queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "Testing",
        "Debugging",
        "Integrating",
        "Deploying",
        "Enterprise",
        "applications",
        "Integrated",
        "Development",
        "Environments",
        "IDE",
        "IntelliJ",
        "IDEA",
        "Eclipse",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "JavaScript",
        "MVC",
        "Framework",
        "AngularJS",
        "internet",
        "web",
        "application",
        "page",
        "application",
        "LinuxUnix",
        "admin",
        "team",
        "configure",
        "initialize",
        "Cassandra",
        "cluster",
        "Developed",
        "web",
        "layer",
        "Spring",
        "framework",
        "project",
        "MVC",
        "pattern",
        "Microservices",
        "Spring",
        "Boot",
        "ECMA",
        "features",
        "features",
        "Googles",
        "V8",
        "Node",
        "JS",
        "transpiling",
        "React",
        "components",
        "partner",
        "homepages",
        "Reactjs",
        "ReactJS",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Application",
        "SPA",
        "feature",
        "ReactJS",
        "server",
        "DOM",
        "browser",
        "page",
        "React",
        "flux",
        "data",
        "flow",
        "code",
        "Reactjswith",
        "Redux",
        "Drag",
        "Drop",
        "functionality",
        "ReactDraggable",
        "ReactJS",
        "Virtual",
        "Dom",
        "DOM",
        "manipulations",
        "RabbitMQ",
        "Queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "data",
        "HDFS",
        "solutions",
        "data",
        "MapReduce",
        "Pig",
        "Hive",
        "summary",
        "results",
        "Hadoop",
        "systems",
        "design",
        "application",
        "architecture",
        "lines",
        "Framework",
        "MVC2",
        "Architecture",
        "JSP",
        "Front",
        "End",
        "HTTP",
        "RequestResponse",
        "Integration",
        "View",
        "Servlet",
        "Controller",
        "combination",
        "EJBs",
        "Java",
        "classes",
        "Model",
        "Nodejs",
        "serverside",
        "proxy",
        "IO",
        "model",
        "applications",
        "devices",
        "Node",
        "JS",
        "serverside",
        "proxy",
        "Oath",
        "authentication",
        "authorization",
        "web",
        "services",
        "IO",
        "model",
        "application",
        "installing",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "Node",
        "JS",
        "server",
        "Rest",
        "services",
        "database",
        "load",
        "cloud",
        "instances",
        "web",
        "services",
        "SOAP",
        "UDDI",
        "WSDL",
        "REST",
        "implementation",
        "APACHE",
        "AXIS",
        "APACHE",
        "CXF",
        "Java",
        "Developer",
        "Citi",
        "Bank",
        "Mumbai",
        "Maharashtra",
        "August",
        "March",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "AJAX",
        "application",
        "Redux",
        "state",
        "management",
        "state",
        "app",
        "object",
        "tree",
        "React",
        "Redux",
        "connect",
        "state",
        "props",
        "dispatch",
        "props",
        "components",
        "JSX",
        "Reactjs",
        "user",
        "interface",
        "view",
        "web",
        "packbuilt",
        "tool",
        "BabelLoader",
        "JSX",
        "ES6",
        "ES5",
        "spring",
        "web",
        "flow",
        "architecture",
        "application",
        "UI",
        "modules",
        "Backbone",
        "JS",
        "dependency",
        "JS",
        "combination",
        "Handlebar",
        "JS",
        "Cloudwatch",
        "AWS",
        "cloud",
        "resources",
        "applications",
        "AWS",
        "alarm",
        "notification",
        "service",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "AWS",
        "CloudFormation",
        "custom",
        "VPC",
        "subnets",
        "NAT",
        "deployment",
        "Web",
        "applications",
        "database",
        "templates",
        "multistore",
        "state",
        "logic",
        "source",
        "truth",
        "Actions",
        "Reducers",
        "components",
        "components",
        "applications",
        "Reactjs",
        "pages",
        "client",
        "server",
        "codebase",
        "ReactJS",
        "components",
        "Redux",
        "Pattern",
        "solution",
        "Application",
        "state",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "Used",
        "Reactjs",
        "development",
        "web",
        "application",
        "datamodel",
        "database",
        "services",
        "controller",
        "view",
        "scope",
        "Backbone",
        "JS",
        "set",
        "datastructuring",
        "models",
        "collections",
        "user",
        "interface",
        "views",
        "URLs",
        "primitives",
        "MVC",
        "work",
        "flow",
        "design",
        "JSP",
        "JavaScript",
        "JQUERY",
        "HTML",
        "collection",
        "classes",
        "Array",
        "List",
        "Hash",
        "Map",
        "Hash",
        "Table",
        "Hash",
        "Set",
        "user",
        "Interface",
        "framework",
        "JAXB",
        "JBoss",
        "Application",
        "Server",
        "Java",
        "Platform",
        "Enterprise",
        "Edition",
        "Java",
        "EE",
        "Spring",
        "MVC",
        "model",
        "integration",
        "frontend",
        "request",
        "action",
        "controller",
        "S3",
        "buckets",
        "AWS",
        "environment",
        "files",
        "content",
        "web",
        "application",
        "IAM",
        "roles",
        "users",
        "groups",
        "security",
        "AWS",
        "account",
        "resources",
        "Use",
        "case",
        "Sequence",
        "Class",
        "diagrams",
        "UMLRational",
        "Rose",
        "Spring",
        "MVC",
        "business",
        "logic",
        "components",
        "core",
        "framework",
        "classes",
        "web",
        "services",
        "JAXWS",
        "use",
        "applications",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "requirement",
        "analysis",
        "client",
        "interaction",
        "Hibernate",
        "mapping",
        "XML",
        "Files",
        "HQL",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "web",
        "services",
        "Education",
        "Bachelors",
        "CSE",
        "Northwestern",
        "Polytechnic",
        "University",
        "Fremont",
        "CA",
        "May",
        "August",
        "Skills",
        "Angularjs",
        "Java",
        "Javascript",
        "Spring",
        "Java",
        "Hibernate",
        "JSP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:09:53.805008",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Amazon Seattle WA Around 5 years of experience in software development includes Analysis Design and Development of Webbased applications with extensive experience in the design and development of multitier applications using Java J2EE Spring Hibernate ORM XML XSD Web Services REST SOAP WSDL HTML5 CSS3 JavaScript Ajax jQuery JUnit Worked on different Application Servers like Web Logic IBM WebSphere ESB Enterprise Service Bus and JBoss Proficient in Java 8J2EE technologies like JSP Struts Java Servlets AJAX JavaBeans JNDI JMS XML web service using IDEs like Eclipse NetBeans Experience in using DOM4J JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Good experience in implementing J2EE compliant applications using various Design patterns Struts framework Tiles spring MVC framework Hibernate and Messaging Middleware using JMS MQ series Extensive experience in the implementation of the version control software SVN CVS Git Experienced in generating logging by Log4j to identify the errors in the production test environment and experienced in Ant Maven and Gradle tools Experienced in developing fully functional responsive modules using Scala with Akka Arango DB Handson experience using Messaging Services like JMS MQ Series Proficient in RDBMS concepts and experience in working with Oracle DB2 and MY SQL PLSQL SQL Plus Database triggers Procedures Functions Closely worked with Release Management Team in doing builds and deploying code into various environments like DEVQASITUATProd Experience in different phases of Software Development Life Cycle SDLC like analysis design development and testing with SOA Amazon Web Service AWS and Microservices architectures Experience using core Java APIs to build multithreaded serverside components for largescale Web and standalone applications Strong Experience using RESTful Web services to save and retrieve geo locations using a remote server in Java 8 using Spring MVC MongoDB Working Experience in different modules of Spring Application Framework Spring MVC Spring Core Spring Tx Spring ORM Spring Boot Spring JDBC Spring JMS Spring WS Spring Cloud Selflearning knowledge of Amazon AWS Cloud Platform with focus on EC2 and S3 Lambda services Experience in building Springbased Java microservices to support enterprise web application Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Database Design Development and Query Optimization using Oracle DB2 Experience in writing complex Database Queries Stored Procedures Triggers and Cursors Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience of various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers Apache Tomcat Web Logic and Oracle Application Server Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Excellent communication and interpersonal skills and involved in client interactions for scoping effort estimates and status reporting Work Experience Java Developer Amazon Seattle WA November 2018 to Present Designed the Frontend applications And Mobile Application As well for user interactive UI web pages using web technologies like HTML5 CSS3 Es6 JavaScript React JS and ReactNativeRedux Saga Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Worked in designing developing and testing the web application by using the HTML5 CSS3 SASS LESS Bootstrap and ReactJS also developed crossbrowser compatible website using HTML45 CSS3 DOM JavaScript JSON jQuery AJAX and Bootstrap Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used AngularJS modules such as Controllers Services Filters and Directives to build wellstructured web pages and made Ajax call to communicate with Restful Web services Used AngularJS for creating custom directives for data manipulations and to display data in company standard format in UI Used Angular JS to implement data binding Module loading Script HTML XML Oracle ESB to IBM CICS Mainframe through IBM MQSeries XML Beans and JMS to test different parts of the application Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Implemented Microservices architecture using Spring Boot for making application smaller and independent Designed and developed the REST based Microservices using the Spring Boot Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Worked on AWS Amazon Web Services and its features like EC2 S3 RDS ELB EBS ESB CloudFront VPC Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Developed user interface by using the React JS FluxRedux for SPA development Used React JS to create custom components for data manipulations and to display data in company standard format Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React also used Json to fetch data from CA groups and load in customer application Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions also created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Used Axioms with React for making AJAX Calls also installed Ranger in all environments for Second Level of security in Kafka Broker Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Implemented web Services to bind the data and provide access to the data on the server and developed form validation with AngularJS valid and data validation Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer McKesson San Francisco CA September 2017 to October 2018 Worked on Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript jQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Develop UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Developed the microservices using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Spring Boot which is radically faster in building cloud Microservices and develop Spring based application with very less configuration also developed unit and integration tests for existing Microservices using Junit and Docker Worked on Java 8 Lambda Expressions Parallel streams Streams and Predicates also worked on various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs bootstrap and Google Web Toolkit Created AngularJS controllers directives models for different modules in the frontend also designed and implemented application using AngularJS framework to twoway data binding also worked in developing front end technologies such as JavaScript Angular jQuery HTML CSS JSON JSP and Struts Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API Spring Boot for microservices and Spring Batch for running batch jobs Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures also implemented REST web service in Scala using Akka for CBPMAN log tracking application Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Worked on developing Testing Debugging Integrating and Deploying Enterprise applications using Integrated Development Environments IDE IntelliJ IDEA Eclipse and Rational Application Developer RAD Extensively worked on JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developed web layer using Spring framework to manage the project in MVC pattern worked on developing Microservices with Spring Boot Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Involved in transpiling bundling and developing React components for the partner homepages using Reactjs Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Used the feature of ReactJS of running the server and rendering the virtual DOM returning to the browser as a regular page Used React flux to polish the data and for single directional flow and migrated the code to Reactjswith Redux Implemented the Drag and Drop functionality using ReactDraggable and utilized ReactJS Virtual Dom for updating DOM manipulations Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Processed data into HDFS by developing solutions analyzed the data using MapReduce Pig Hive and produce summary results from Hadoop to downstream systems Actively involved in the design of the application architecture in lines of their own Framework based on MVC2 Architecture with JSP Front End HTTP RequestResponse Integration as View Servlet as Controller and combination of EJBs and Java classes as Model Implemented Nodejs as serverside proxy for eventdriven nonblocking IO model which made my applications to run across distributed devices Implemented Node JS as a serverside proxy for an Implemented Oath 20 for providing authentication and authorization for web services eventdriven nonblocking IO model to make the application lightweight and efficient Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Developed RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Worked on web services using SOAP UDDI WSDL REST and implementation using APACHE AXIS and APACHE CXF Java Developer Citi Bank Mumbai Maharashtra August 2012 to March 2015 Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap AJAX for building up a Monolithic application Used Redux for state management to store the whole state of the app in an immutable object tree Used React Redux connect which is responsible to map state to props and map dispatch to props Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Followed spring web flow architecture throughout the application Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used ReactJS to create Controllers to handle events triggered by clients and send request to server Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Developed highly responsive mobile user Interface using reactnative framework Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Created S3 buckets in the AWS environment to store files sometimes which are required to serve static content for a web application Used IAM for creating roles users and groups to provide additional security to AWS account and its resources Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Implemented Spring Security for providing authentication and authorization for web services Education Bachelors in CSE Northwestern Polytechnic University Fremont CA May 2015 to August 2017 Skills Angularjs J2Ee Java Javascript Spring Java J2Ee Hibernate JSP",
    "unique_id": "e6767d83-b698-4be7-84c7-8cf60f20871b"
}