{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Frontier Communications Dallas TX Work Experience Python Developer Frontier Communications Norwalk CT February 2015 to Present Worked with team of developers on Python applications for RISK management Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Implemented RESTful Web Services for the data transportation between multiple systems Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Sound technical background and experience in virtualization software VMware vSphere HyperV and networking technology TCPIP VLAN VXLAN NAT VPN IPv4IPv6 LANWAN Layer 2 Layer 4 protocols Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Deployed the project into Heroku and also used Github version control system Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for client side validation Develop features to integrate with technologies such as AWS Azure OpenStack Puppet and Chef Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Stack ZendPHP Apache Web Server SVN Oracle JavaScript jQuery Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Maintained code changes on SVN version control frequently Created a Git repository and added the project to GitHub Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django XML PostgreSQL SQL Stored Procedures Developed PythonDjango application for Google Analytics aggregation and reporting Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used SVN for version control Manage deployment automation using Chef MCollective Custom Puppet modules Checking ssh access directory modes Send mail settings Puppet settings etc contents etc Create and deploy Puppet modules Worked on JavaScript MVC Framework like AngularJS Collaborated on an exploratory project for speech synthesis and recognition relying on neural networks using Linux machines and PERL scripting Deployed the project into Jenkins using SVN version control system Used the Nodejs Angularjs Backbonejs and Requirejs MVC frameworks in the development of web applications Generated Python Django Forms to record data of online users Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and also conducted code reviews Used Python and Django creating graphics XML processing data exchange and business logic implementation Achieved modular extensible codebases through Angularjs based MVC architecture Developed rich user interface using CSS HTML JavaScript and JQuery Using MYSQL a system of data management was designed and developed and queries were optimized in order to improve the performance Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment Used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django MySQL GIT Sublime Text PIP PEP8 Regex RedisPerl Bash Nodejs Angular JS HTML CSS JavaScript JQuery Hive Spark Linux LAMP Django REST Framework Agile JSON XML AJAX Python Developer ELI LILLY Indianapolis IN April 2012 to January 2015 Implemented the applications frontend pages using HTML CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed UI screens using HTML CSS AJAX JavaScript and jQuery Maintained the versions using GIT and sending the release notes for each release Automated data movements using python scripts Involved in splitting validating and processing of files Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Designed Cassandra schema for the APIs Automated to manage tens of thousands of VMs across multiple cloud platforms using puppet Carried out various mathematical operations for calculation purpose using Python libraries numpy and Scipy Developed Django Python Apache bash scripting Involved in creating Puppet modules using manifests Uploading desired classes for the nodes clients Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Implemented web applications in Flask and spring frameworks following MVC architecture Worked on JavaScript MVC Framework like Angularjs Automated JIRA processes using python and bash scripts Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB intelliJ IDEA Updated pages using HTML CSS in Angularjs framework Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo DB Fabric Git Tenjin Selenium Sphinx Nose Worked with JSON based REST Web services Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Applied Struts features like Tiles and Validation framework Designed frontend using JSP AJAX Information extraction was done by using RESTful API Used HTML CSS AJAX JSON designed and developed the user interface of the website To fetch data of definite options that are selected Python routines were written to log into websites Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Various staticmedia files along with database were hosted into Amazon cloud and support for Amazon AWS S3 and RDS was added Participated actively in unit testing integration testing and GUI Python twitter library was used for fetching important keywords of twitter feeds Was a part of troubleshooting debugging the web application Performance and consistency being the main factors of consideration the code was tuned Automated AWS S3 data upload download using python scripts Written shell scripting for automation Designed database schema design and defined relationships between tables Used MVC framework to build modular maintainable applications Used Atlassian JIRA for tracking and updating the project issues Environment Python 27 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer CIT Group New York NY September 2010 to March 2012 Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQL Alchemy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on resulting reports of the application and Tableau reports Deployed the project into Heroku using GIT version control system Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control",
    "entities": [
        "CSS HTML JavaScript",
        "GIT",
        "Python",
        "NLP File Prep SettlementPrepare",
        "HTML CSS AJAX JavaScript",
        "HTML CSS",
        "Amazon AWS S3",
        "Developed",
        "CRUD",
        "GUI",
        "Developer ELI LILLY",
        "vSphere",
        "Bash",
        "Jenkins",
        "JQuery Created",
        "MATLAB",
        "Dallas",
        "Automated AWS S3",
        "Performed",
        "Django XML",
        "Utilized",
        "Applied Struts",
        "JSP AJAX Information",
        "Present Worked",
        "Puppet",
        "JavaScript",
        "MultiThreading",
        "DataStax Enterprise Cassandra",
        "Tiles and Validation",
        "UI",
        "API Integration Designed",
        "Google Analytics",
        "GitHub Implemented",
        "JQuery Using MYSQL",
        "SVN",
        "CSS",
        "Amazon",
        "Heroku",
        "the Global Shipping Team Created",
        "Python Developer Frontier Communications Norwalk CT",
        "Flask",
        "Collaborated",
        "REST",
        "GitHub",
        "XML",
        "SOAP",
        "OpenStack Puppet",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "NLP",
        "lPythonspan",
        "Developed UI",
        "Github",
        "Bash Implemented",
        "ASPNET C AJAX",
        "Jenkins Ansible",
        "Tableau",
        "Amazon Web Services AWS EC2",
        "RDS",
        "Created a Git",
        "Implemented RESTful Web Services",
        "PHP LAMP Project Deployed",
        "Automated",
        "Worked on HTML5",
        "Chef MCollective Custom Puppet",
        "HerokuJenkins",
        "MVC",
        "PythonDjango",
        "DevTest",
        "jQuery Maintained",
        "Indianapolis"
    ],
    "experience": "Experience Python Developer Frontier Communications Norwalk CT February 2015 to Present Worked with team of developers on Python applications for RISK management Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Implemented RESTful Web Services for the data transportation between multiple systems Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Sound technical background and experience in virtualization software VMware vSphere HyperV and networking technology TCPIP VLAN VXLAN NAT VPN IPv4IPv6 LANWAN Layer 2 Layer 4 protocols Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Deployed the project into Heroku and also used Github version control system Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for client side validation Develop features to integrate with technologies such as AWS Azure OpenStack Puppet and Chef Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Stack ZendPHP Apache Web Server SVN Oracle JavaScript jQuery Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Maintained code changes on SVN version control frequently Created a Git repository and added the project to GitHub Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django XML PostgreSQL SQL Stored Procedures Developed PythonDjango application for Google Analytics aggregation and reporting Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used SVN for version control Manage deployment automation using Chef MCollective Custom Puppet modules Checking ssh access directory modes Send mail settings Puppet settings etc contents etc Create and deploy Puppet modules Worked on JavaScript MVC Framework like AngularJS Collaborated on an exploratory project for speech synthesis and recognition relying on neural networks using Linux machines and PERL scripting Deployed the project into Jenkins using SVN version control system Used the Nodejs Angularjs Backbonejs and Requirejs MVC frameworks in the development of web applications Generated Python Django Forms to record data of online users Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and also conducted code reviews Used Python and Django creating graphics XML processing data exchange and business logic implementation Achieved modular extensible codebases through Angularjs based MVC architecture Developed rich user interface using CSS HTML JavaScript and JQuery Using MYSQL a system of data management was designed and developed and queries were optimized in order to improve the performance Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment Used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django MySQL GIT Sublime Text PIP PEP8 Regex RedisPerl Bash Nodejs Angular JS HTML CSS JavaScript JQuery Hive Spark Linux LAMP Django REST Framework Agile JSON XML AJAX Python Developer ELI LILLY Indianapolis IN April 2012 to January 2015 Implemented the applications frontend pages using HTML CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed UI screens using HTML CSS AJAX JavaScript and jQuery Maintained the versions using GIT and sending the release notes for each release Automated data movements using python scripts Involved in splitting validating and processing of files Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Designed Cassandra schema for the APIs Automated to manage tens of thousands of VMs across multiple cloud platforms using puppet Carried out various mathematical operations for calculation purpose using Python libraries numpy and Scipy Developed Django Python Apache bash scripting Involved in creating Puppet modules using manifests Uploading desired classes for the nodes clients Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Implemented web applications in Flask and spring frameworks following MVC architecture Worked on JavaScript MVC Framework like Angularjs Automated JIRA processes using python and bash scripts Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB intelliJ IDEA Updated pages using HTML CSS in Angularjs framework Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo DB Fabric Git Tenjin Selenium Sphinx Nose Worked with JSON based REST Web services Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Applied Struts features like Tiles and Validation framework Designed frontend using JSP AJAX Information extraction was done by using RESTful API Used HTML CSS AJAX JSON designed and developed the user interface of the website To fetch data of definite options that are selected Python routines were written to log into websites Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Various staticmedia files along with database were hosted into Amazon cloud and support for Amazon AWS S3 and RDS was added Participated actively in unit testing integration testing and GUI Python twitter library was used for fetching important keywords of twitter feeds Was a part of troubleshooting debugging the web application Performance and consistency being the main factors of consideration the code was tuned Automated AWS S3 data upload download using python scripts Written shell scripting for automation Designed database schema design and defined relationships between tables Used MVC framework to build modular maintainable applications Used Atlassian JIRA for tracking and updating the project issues Environment Python 27 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer CIT Group New York NY September 2010 to March 2012 Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQL Alchemy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on resulting reports of the application and Tableau reports Deployed the project into Heroku using GIT version control system Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Frontier",
        "Communications",
        "Dallas",
        "TX",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Frontier",
        "Communications",
        "Norwalk",
        "CT",
        "February",
        "Present",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "RESTful",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peer",
        "background",
        "experience",
        "virtualization",
        "software",
        "VMware",
        "vSphere",
        "HyperV",
        "networking",
        "technology",
        "VXLAN",
        "NAT",
        "VPN",
        "IPv4IPv6",
        "LANWAN",
        "Layer",
        "Layer",
        "protocols",
        "Install",
        "Configure",
        "Linux",
        "Apache",
        "Oracle",
        "8I",
        "PHP",
        "LAMP",
        "Project",
        "project",
        "Heroku",
        "Github",
        "version",
        "control",
        "system",
        "UI",
        "user",
        "web",
        "pages",
        "classes",
        "functions",
        "ASPNET",
        "C",
        "AJAX",
        "JavaScript",
        "client",
        "side",
        "validation",
        "Develop",
        "features",
        "technologies",
        "AWS",
        "Azure",
        "OpenStack",
        "Puppet",
        "Chef",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Worked",
        "Stack",
        "ZendPHP",
        "Apache",
        "Web",
        "Server",
        "SVN",
        "Oracle",
        "JavaScript",
        "jQuery",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "process",
        "installation",
        "configuration",
        "DataStax",
        "Enterprise",
        "Cassandra",
        "chef",
        "code",
        "changes",
        "SVN",
        "version",
        "control",
        "Git",
        "repository",
        "project",
        "GitHub",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "transactions",
        "persistence",
        "layers",
        "data",
        "application",
        "functionalities",
        "Django",
        "XML",
        "PostgreSQL",
        "SQL",
        "Stored",
        "Procedures",
        "PythonDjango",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "SVN",
        "version",
        "control",
        "Manage",
        "deployment",
        "automation",
        "Chef",
        "MCollective",
        "Custom",
        "Puppet",
        "modules",
        "ssh",
        "access",
        "directory",
        "modes",
        "mail",
        "settings",
        "Puppet",
        "settings",
        "contents",
        "Puppet",
        "modules",
        "JavaScript",
        "MVC",
        "Framework",
        "AngularJS",
        "project",
        "speech",
        "synthesis",
        "recognition",
        "networks",
        "Linux",
        "machines",
        "PERL",
        "scripting",
        "project",
        "Jenkins",
        "SVN",
        "version",
        "control",
        "system",
        "Nodejs",
        "Angularjs",
        "Backbonejs",
        "Requirejs",
        "MVC",
        "frameworks",
        "development",
        "web",
        "applications",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "CRUD",
        "operations",
        "applications",
        "MVC",
        "architecture",
        "Django",
        "framework",
        "code",
        "reviews",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "codebases",
        "Angularjs",
        "MVC",
        "architecture",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "MYSQL",
        "system",
        "data",
        "management",
        "queries",
        "order",
        "performance",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "MySQL",
        "Native",
        "SQL",
        "development",
        "environment",
        "GitHub",
        "version",
        "control",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "GIT",
        "Sublime",
        "Text",
        "PIP",
        "PEP8",
        "Regex",
        "RedisPerl",
        "Bash",
        "Nodejs",
        "Angular",
        "JS",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Hive",
        "Spark",
        "Linux",
        "LAMP",
        "Django",
        "Framework",
        "Agile",
        "JSON",
        "XML",
        "AJAX",
        "Python",
        "Developer",
        "ELI",
        "LILLY",
        "Indianapolis",
        "April",
        "January",
        "applications",
        "pages",
        "HTML",
        "CSS",
        "JavaScript",
        "Python",
        "Perl",
        "CGI",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "UI",
        "screens",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "jQuery",
        "versions",
        "GIT",
        "release",
        "notes",
        "release",
        "data",
        "movements",
        "scripts",
        "splitting",
        "processing",
        "files",
        "Design",
        "environment",
        "MongoDB",
        "shards",
        "replica",
        "DevTest",
        "Production",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "Cassandra",
        "schema",
        "APIs",
        "tens",
        "thousands",
        "VMs",
        "cloud",
        "platforms",
        "puppet",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "Scipy",
        "Developed",
        "Django",
        "Python",
        "Apache",
        "bash",
        "scripting",
        "Puppet",
        "modules",
        "manifests",
        "Uploading",
        "classes",
        "nodes",
        "clients",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "web",
        "applications",
        "Flask",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "JavaScript",
        "MVC",
        "Framework",
        "Angularjs",
        "Automated",
        "JIRA",
        "processes",
        "python",
        "scripts",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "pages",
        "HTML",
        "CSS",
        "Angularjs",
        "framework",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "CherryPy",
        "Postgres",
        "Redis",
        "Bootstrap",
        "Jquery",
        "Mongo",
        "DB",
        "Fabric",
        "Git",
        "Tenjin",
        "Selenium",
        "Sphinx",
        "Nose",
        "JSON",
        "REST",
        "Web",
        "services",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "git",
        "Struts",
        "Tiles",
        "Validation",
        "framework",
        "frontend",
        "JSP",
        "AJAX",
        "Information",
        "extraction",
        "API",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "data",
        "options",
        "Python",
        "routines",
        "websites",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "files",
        "database",
        "Amazon",
        "cloud",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "unit",
        "testing",
        "integration",
        "testing",
        "GUI",
        "Python",
        "twitter",
        "library",
        "keywords",
        "twitter",
        "feeds",
        "part",
        "troubleshooting",
        "web",
        "application",
        "Performance",
        "consistency",
        "factors",
        "consideration",
        "code",
        "AWS",
        "S3",
        "data",
        "upload",
        "download",
        "scripts",
        "shell",
        "scripting",
        "automation",
        "database",
        "schema",
        "design",
        "relationships",
        "tables",
        "MVC",
        "framework",
        "applications",
        "JIRA",
        "project",
        "issues",
        "Environment",
        "Python",
        "Django",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Python",
        "Developer",
        "CIT",
        "Group",
        "New",
        "York",
        "NY",
        "September",
        "March",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQL",
        "Alchemy",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "Worked",
        "reports",
        "application",
        "Tableau",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "approaches",
        "NLP",
        "pipeline",
        "custom",
        "VB",
        "scripts",
        "applications",
        "NLP",
        "File",
        "Prep",
        "SettlementPrepare",
        "review",
        "Settlement",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "processing",
        "Django",
        "framework",
        "application",
        "development",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Setup",
        "cron",
        "jobs",
        "data",
        "database",
        "graphs",
        "bar",
        "charts",
        "charts",
        "wiki",
        "database",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "vendors",
        "queries",
        "Perforce",
        "version",
        "control"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:36:06.547423",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Frontier Communications Dallas TX Work Experience Python Developer Frontier Communications Norwalk CT February 2015 to Present Worked with team of developers on Python applications for RISK management Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Implemented RESTful Web Services for the data transportation between multiple systems Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Sound technical background and experience in virtualization software VMware vSphere HyperV and networking technology TCPIP VLAN VXLAN NAT VPN IPv4IPv6 LANWAN Layer 2 Layer 4 protocols Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Deployed the project into Heroku and also used Github version control system Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for client side validation Develop features to integrate with technologies such as AWS Azure OpenStack Puppet and Chef Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Stack ZendPHP Apache Web Server SVN Oracle JavaScript jQuery Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Maintained code changes on SVN version control frequently Created a Git repository and added the project to GitHub Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django XML PostgreSQL SQL Stored Procedures Developed PythonDjango application for Google Analytics aggregation and reporting Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used SVN for version control Manage deployment automation using Chef MCollective Custom Puppet modules Checking ssh access directory modes Send mail settings Puppet settings etc contents etc Create and deploy Puppet modules Worked on JavaScript MVC Framework like AngularJS Collaborated on an exploratory project for speech synthesis and recognition relying on neural networks using Linux machines and PERL scripting Deployed the project into Jenkins using SVN version control system Used the Nodejs Angularjs Backbonejs and Requirejs MVC frameworks in the development of web applications Generated Python Django Forms to record data of online users Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and also conducted code reviews Used Python and Django creating graphics XML processing data exchange and business logic implementation Achieved modular extensible codebases through Angularjs based MVC architecture Developed rich user interface using CSS HTML JavaScript and JQuery Using MYSQL a system of data management was designed and developed and queries were optimized in order to improve the performance Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment Used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django MySQL GIT Sublime Text PIP PEP8 Regex RedisPerl Bash Nodejs Angular JS HTML CSS JavaScript JQuery Hive Spark Linux LAMP Django REST Framework Agile JSON XML AJAX Python Developer ELI LILLY Indianapolis IN April 2012 to January 2015 Implemented the applications frontend pages using HTML CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed UI screens using HTML CSS AJAX JavaScript and jQuery Maintained the versions using GIT and sending the release notes for each release Automated data movements using python scripts Involved in splitting validating and processing of files Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Designed Cassandra schema for the APIs Automated to manage tens of thousands of VMs across multiple cloud platforms using puppet Carried out various mathematical operations for calculation purpose using Python libraries numpy and Scipy Developed Django Python Apache bash scripting Involved in creating Puppet modules using manifests Uploading desired classes for the nodes clients Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Implemented web applications in Flask and spring frameworks following MVC architecture Worked on JavaScript MVC Framework like Angularjs Automated JIRA processes using python and bash scripts Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB intelliJ IDEA Updated pages using HTML CSS in Angularjs framework Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo DB Fabric Git Tenjin Selenium Sphinx Nose Worked with JSON based REST Web services Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Applied Struts features like Tiles and Validation framework Designed frontend using JSP AJAX Information extraction was done by using RESTful API Used HTML CSS AJAX JSON designed and developed the user interface of the website To fetch data of definite options that are selected Python routines were written to log into websites Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Various staticmedia files along with database were hosted into Amazon cloud and support for Amazon AWS S3 and RDS was added Participated actively in unit testing integration testing and GUI Python twitter library was used for fetching important keywords of twitter feeds Was a part of troubleshooting debugging the web application Performance and consistency being the main factors of consideration the code was tuned Automated AWS S3 data upload download using python scripts Written shell scripting for automation Designed database schema design and defined relationships between tables Used MVC framework to build modular maintainable applications Used Atlassian JIRA for tracking and updating the project issues Environment Python 27 Django 14 Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer CIT Group New York NY September 2010 to March 2012 Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQL Alchemy Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on resulting reports of the application and Tableau reports Deployed the project into Heroku using GIT version control system Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control",
    "unique_id": "0ff75500-dd4f-4f0a-a684-17c4cf8a406d"
}