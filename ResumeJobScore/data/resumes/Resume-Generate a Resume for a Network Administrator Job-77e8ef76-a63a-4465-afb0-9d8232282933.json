{
    "clean_data": "Sr PYTHON DEVELOPER Sr span lPYTHONspan span lDEVELOPERspan Python developer Seattle WA Over 6 years of IT Experience in designing developing testing and implementing various standalone and clientserver architecturesbased enterprise application software on different domains Proficient coder in multiple languages and environments including Python Django Flask web2py bottle CherryPy sanic tornado Giotto pylon TurboGears MongoDB C C and SQL Experience in developing web based applications using Python 2x and 3x UIUX PHP C XML CSS3 HTML5 DHTML JavaScript Jdk17 jQuery AngularJS Experience in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Spark and rabbit MQ and Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Good experience using various Python libraries to speed up development libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity JSON librariesExperience in Machine Learning Algorithms Experienced in NoSQL technologies like MongoDB Redis and Cassandra and relational databases like SQLite PostgreSQL Dynamo DB MariaDB and MySQL databases Hands on Experience in Data mining and Data warehousing using ETL Tools Experienced with databases using ORMsDOMs for integrating with MySQL Experience in working with various Python IDEs using PyCharm Spyder PyStudio PyScripter and yDev Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Authorized to work in the US for any employer Work Experience Sr PYTHON DEVELOPER Nordstrom Apparel Seattle WA August 2018 to Present Responsible for gathering requirements system analysis design development testing and deployment by participating in complete SDLC process Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Followed Agile development methodology to develop the application and used the GO Programming language to refactor and redesign the legacy databases Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background Used Machine learning techniques like unsupervised Classification optimization and prediction and good knowledge of working with Rabbit MQ Designed developed coded worked in penetration testing and implemented a concurrent multiparallel event orientedprocessing AKKA Actor System and Actors to consume Scala SparkSQL Rules which aggregated data to produce Quality Performance Reports QPR on Fiscal projections against Apprentice and Intern Job data Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB Cloud from Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using Puppet Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Worked in Apache CGI CherryPy python and Bash programming on Red Hat virtual machines to maintain and automate Splunk server deployments and other inhouses IT operations Implemented database change controls as well as development staging production PostgreSQL databases Implemented machine learning schemes using Python libraries Sci kitlearn and SciPy Used R for prototype on a sample data exploration to identify the best algorithmic approach and then wrote Scala scripts using Spark Machine Learning module Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and written modules in Python to connect to PostgreSQL and doing CRUD operations with PostgreSQL Worked on Linux server and Created scripts for data modeling and data import and export and worked on Python ecosystem packages like Numpy pandas Matplotlib and Ipython Jupyter notebook Performed data cleaning analysismunging and visualization of large dataset like stocks data using Numpy Pandas and Matplotlib and Ipython Jupyter notebook Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQSand Jenkins CICD Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the Big Data approach on AWS EC2 Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Development of Python APIs to dump the array structures in the Processor at the failure point for debugging and good knowledge on Spark platform parameters like memory cores and executors Built articles updated landing pages and approved assets for publishing on a CMS platform Oracle WebCenter Sites and used Bitbucket and hosted the web site on Heroku and AWS Involved in the development of frontend of the application using Python 34 HTML5 CSS3 Bootstrap 30 AJAX JSON and jQuery Worked on different data formats such as JSON XML and performed Machine Learning algorithms in R Designed developed and deployed applications on to several cloudsbased solutions using configuration Management tools like Chef Puppet Ansible and Saltstack Worked in the DevOps team delivered new Agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ANT Maven Artifactory Chef custom scripting and JIRA for ticketing Automate scenarios using Selenium WebDriver Testing Tools used Selenium IDE Selenium WebDriver Creating YAML driven query engines in Python for SQL Sqoop HDFS and Teradata BTEQ TDT and Implemented Algorithms for Data Analysis from Cluster of Web Services Worked with lxml to dynamically generate SOAP requests based on the services Developed custom HashKey HMAC based algorithm in Python for Web Service authentication Worked on Python Scientific packages like NumPy and Pandas to handle data sets effectively Used Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of Python code using a web browser Developing applications using RESTFUL architecture using NodeJS and Python as backend languages TestDriven Development approach was used and hence worked intensively on developing test cases and Involved in Quality Control Activities such as defect tracking fixing using JIRA Involved in doing AGILE SCRUM practices and planning of sprint attending daily Agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and Worked with Machine Learning Libraries like Theano Scikitlearn Worked closely with Data Scientist and Data Visualization specialist to develop prototypes from various datasets using Machine Learning natural language processing and predictive analytics techniques Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S Cloud FronDeploy and monitor scalable infrastructure on Amazon Web Services AWS configuration management using Puppet Writing SOAP and Restful Web Services in house ESB for a web Claims application Spring MVC AngularJS ActiveMQ SOAP UI Mockito JSON Build forge PYTHON DEVELOPER Schneider National Green Bay WI August 2016 to May 2018 Implemented Full Life Cycle Development of new web applications and modification of existing applications to add new components and features emphasizing maintainability reliability scalability and performance Implemented financial models in Python as well as refactor and update existing model implementations to enhance stability increase performance and reduce memory usage Work in AgileScrum and TDD environment with distinct roles Present daily report of software planning issues diagnosis and potential solutions Reviewed and debugged Clients Jupyter Ipython notebooks also improving navigation experience over long pages and Used Python to build notepads to manipulate user data in Jupyter Developed Merge jobs in Python to extract and load data into MySQL database and worked on MySQL data lineage process to map source to target DB table and column mappings using OO Python Performed serverside application using Django framework and developed a chat application with it and integrated with the main application by clientserver architecture Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Implemented deep learning models and numerical Computation with the help of data flow graphs using Tensor Flow Machine Learning Used various IDEs like Eclipse JupyterIPython Notebooks IDLE and Notepad for Python developments and experienced with batch processing of data sources using Apache Spark and Elastic search Develop Machine Learning API in the backend using libraries such as Numpy SciPy Matplotlib Pandas Seaborn Sklearn OpenCV and NLTK Worked with core web front end technologies like HTML JavaScript Core and ObjectOriented JS ES6 CSS and Web Accessibility and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Planned and coordinated the administration of PostgreSQL databases to ensure accurate appropriate and effective use of data including database definition structure documentation longrange requirements and operational guidelines Created Natural Language Processing model in R using OpenNLP Stanford NLP ANN and developed R application showcasing machine learning for improving business forecasting Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like Unit Testing Regression Testing Integration Testing Manage continuous build and share progress with Confluence Bamboo and SVN Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Troubleshooting and resolving issues in JIRA and Confluence as users and provided documentation of customer JIRA terms standard practices and implementation and weekly status reports Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture and Setup database in AWS using RDS and configuring backups for S3 bucket Developed Hadoop integrations for data ingestion data mapping and data processing Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analyzed the imported data using Hadoop Components Developed API modularizing existing Python module with the help of Pyyaml libraries which is an YAML parser and emitter for Python Enhanced existing REST services using NodeJS ExpressJS and Mongoose modules Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS jQuery AJAX and implemented CSS3 for better appearance and feel Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Interactive in providing change requests trouble reports and requirements collection with the client Managed code versioning with GitHub Bitbucket and deployment to staging and production servers and also worked with WordPress modules theming distributions content management Implemented MVC architecture in developing the web application with the help of Django framework Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Leveraging queueing architectures with Rabbit MQ for scalability performance and building Working under UNIX environment in development of application using Python and familiar with all its commands and Developed remote integration with third party platforms by using RESTful Web Services Improved code reuse and performance by making effective use of various design patterns and refactoring code base and developed single page application by using AngularJS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing PYTHON DEVELOPER Comcast Philadelphia PA June 2014 to March 2016 Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes and Experience with continuous integration and automation using Jenkins Implemented multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries by using TDD Test driven development methodology Spearheaded adoption of Responsive web design principles and converted existing websites to responsive websites by using Bootstrap Managed developed and designed a dashboard control panel for customers and administrators using Django Oracle DB PostgreSQL and VMWare API calls Leveraged SaltStack event system for distributed application monitoring and reporting Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Designed frontend and backend of the application using Python NodeJS on Django Web Framework Written Cloud formation templates and deployed AWS resourcing and built application and database servers using AWS EC2 and create AMIs also using RDS for Oracle DB Implemented CICD using Jenkins for development process Installing configuring maintaining and administering WordPress blog sites Creating test environment to verify and confirm compatibility of latest version WordPress and Plugins Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Developed single page application by using AngularJS backed by MongoDB and NodeJS Created custom user defined functions in Python language for Pig Built application logic using Python and worked on BehavioralDriven Programming in Python Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented responsive vector maps and charts on web pages using the data from PostgreSQL Managed developed and designed a dashboard control panel for customers and administrators using Django MongoDB PostgreSQL and VMWare API calls Pull information from JIRA using REST API and Python to populate Excel files for management reports Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Develop and program Python scripts of automation procedure with provided API and JSON data PYTHON DEVELOPER City Group New York NY September 2013 to March 2014 Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angularjs Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery and used JavaScript and XML to update a portion of a webpage and Developed RESTful services using Django Developed consumerbased features and applications using Python and Django in test driven Development and successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project also worked on changes to openstack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history and experienced in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling CloudWatch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frameworks like CSS Bootstrap for development of Web application also worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system and followed Agile Methodologies to manage full lifecycle development of the project Learned to index and searchquery large number of documents inside Elastic search and worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON and XML from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services and creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Skills Sets Programming Languages Python 2x3x Go Language Scala C C Java SQL HTMLHTML5 CSSCSS3 Python Libraries Requests Scrapy wxPython Pillow SQL Alchemy Beautiful Soup Twisted NumPy SciPy matplotlib Pygame Pyglet PyQT PyGtk Scapy Pywin32 ntlk Nose SymPy Ipython Web Frameworks Django Flask Pyramid TurboGears Muffin CherryPy Tornadoweb2pypylon GUI Frameworks PyJamas Gnome Python GUI2py PyFltk PyForms PyGtk PySide TkInter Version Control Tools Concurrent Versions System CVS Subversion SVN Git Mercurial Saltstack Automation Tools doit Buildbot Chef Puppet Ansible Docker Testing Tools Unit Test Pytest Pythoscope PyMock Mocker Antiparser Web Unit Web Test PAMIE Selenium Splinter PyFIT PyUseCase Automa PyChecker IDE Netbeans Thonny Komodo PyCharm PyDev PyScripter Pyshield Spyder PyStudio Databases MySQL MongoDB Cassandra NoSQL PostgreSQL Bug Tracking Tools Bugzilla JIRA HP ALMQuality Center IBM Rational ClearQuest Operating Systems IBM OS2 Warp Windows 98NT2000XPVista78 UNIXLinux Sun Solaris Other Technical Skills Software Development Life Cycle SDLC Object Oriented Programming OOP Agile Waterfall Test Driven Development TDD Behavioral Driven Development BDD Pair Programming Scrum Elasticsearch Kanban Kafka Python Scripting OpenStack Amazon Web Services AWS YAML Bash scripting Jetty JSON Shell scripting Logstash Kibana LAMP and WAMP architecture AMQP RabbitMQ Celery Heroku Samba Confluence Bamboo Education Masters Skills Amazon web services Json Object oriented Object oriented programming Oop",
    "entities": [
        "Python for Web Service",
        "Hadoop Clusters",
        "Red Hat",
        "AJAX",
        "Pyyaml",
        "Apprentice",
        "GUI",
        "ORMsDOMs",
        "jQuery Worked",
        "New York",
        "Customer",
        "PySide TkInter Version",
        "UNIX",
        "webapp2",
        "HTTP",
        "Working",
        "Worked on Python Scientific",
        "OO Python Performed",
        "Amazon SQS",
        "OpenStack",
        "IBM",
        "Infrastructure Development and Operations",
        "CVS SVN",
        "Amazon Web Services AWS",
        "Heroku",
        "Panda",
        "SNS Created",
        "Developed Hadoop",
        "Control Tools Concurrent Versions System",
        "YAML Bash",
        "Hadoop",
        "SOAP",
        "XML",
        "CherryPy",
        "Scala SparkSQL",
        "Hadoop Distributed File System",
        "HTML JavaScript Core",
        "Bootstrap Managed",
        "JIRA",
        "DevOps",
        "Cassandra Configuration",
        "Apache Spark",
        "Amazon",
        "YAML",
        "Rabbit MQ Designed",
        "Python",
        "ELB S Cloud FronDeploy",
        "Developed",
        "Jenkins",
        "Intern Job",
        "Bash",
        "Notepad for Python",
        "CSS Bootstrap",
        "GET PUT POST",
        "BehavioralDriven Programming",
        "Django",
        "Utilized",
        "TDD Test",
        "Implemented MVC",
        "Puppet",
        "MultiThreading",
        "JIRA Involved",
        "Windows",
        "MQ",
        "AWS Cloud",
        "Work Experience Sr PYTHON",
        "Rspec Worked",
        "Saltstack Worked",
        "Created Natural Language Processing",
        "Windows 98NT2000XPVista78",
        "HTML5",
        "Develop",
        "AKKA Actor System",
        "Linux",
        "NodeJS Involved",
        "the Software Development Life Cycle",
        "Skills Sets Programming Languages",
        "ETL Tools Experienced",
        "Data Scientist",
        "Classification",
        "Built",
        "Automate",
        "VMWare API",
        "yDev Knowledge",
        "Agile Methodologies",
        "NodeJS Created",
        "RDS",
        "Cluster of Web Services Worked",
        "Django Python Involved",
        "Hadoop Components Developed API",
        "WordPress",
        "TestDriven Development",
        "MVC",
        "HerokuJenkins",
        "Worked with Machine Learning Libraries",
        "Spark",
        "Agile",
        "AWS Involved",
        "GIT",
        "Data Visualization",
        "Present Responsible",
        "Rabbit MQ",
        "Machine Learning Algorithms Experienced",
        "Restful Web Service",
        "API",
        "US",
        "Plugins Developed",
        "Sqoop",
        "GitGitHub",
        "Bugzilla Spark",
        "Selenium WebDriver Testing Tools",
        "Created",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "ALMQuality Center IBM Rational ClearQuest Operating",
        "AWS",
        "GitHub Bitbucket",
        "HashKey HMAC",
        "HTML",
        "Secured Web services",
        "Performed Unit",
        "Leveraged SaltStack",
        "Selenium IDE Selenium WebDriver Creating",
        "WAMP",
        "RESTFUL",
        "SQL",
        "AnsiblePuppet Implemented",
        "Chef Puppet Ansible",
        "Django Oracle DB PostgreSQL",
        "Python Django",
        "Jenkins Ansible",
        "CSV Parsing",
        "DELETE",
        "Mongoose modules Design",
        "Integration Testing GUI",
        "Hive",
        "Puppet Writing SOAP",
        "Amazon AWS",
        "Implemented Algorithms for Data Analysis",
        "AWS SNS SQS",
        "Pandas",
        "SQLite",
        "Buildbot Chef Puppet Ansible Docker",
        "Stanford",
        "Performed",
        "Oracle WebCenter Sites",
        "Djangos",
        "Developed Application",
        "JavaScript",
        "Django MongoDB PostgreSQL",
        "UI",
        "XSD",
        "Tensor Flow Machine Learning",
        "SVN",
        "CSS",
        "CMS",
        "Implemented Integration",
        "Oracle DB Implemented CICD",
        "Amazon Web Service",
        "jQuery",
        "Restful Web Services",
        "Unit Testing Regression Testing Integration Testing Manage",
        "Data",
        "Jenkins Implemented",
        "Spark Machine Learning",
        "TDD",
        "NoSQL",
        "Machine Learning",
        "JQuery",
        "Pig Scripts Development of Python",
        "ESB",
        "Puppet Designed",
        "SPRINT",
        "Developed GUI",
        "PYTHON DEVELOPER City Group",
        "Followed Agile",
        "JSON XML"
    ],
    "experience": "Experience in designing developing testing and implementing various standalone and clientserver architecturesbased enterprise application software on different domains Proficient coder in multiple languages and environments including Python Django Flask web2py bottle CherryPy sanic tornado Giotto pylon TurboGears MongoDB C C and SQL Experience in developing web based applications using Python 2x and 3x UIUX PHP C XML CSS3 HTML5 DHTML JavaScript Jdk17 jQuery AngularJS Experience in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Spark and rabbit MQ and Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Good experience using various Python libraries to speed up development libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity JSON librariesExperience in Machine Learning Algorithms Experienced in NoSQL technologies like MongoDB Redis and Cassandra and relational databases like SQLite PostgreSQL Dynamo DB MariaDB and MySQL databases Hands on Experience in Data mining and Data warehousing using ETL Tools Experienced with databases using ORMsDOMs for integrating with MySQL Experience in working with various Python IDEs using PyCharm Spyder PyStudio PyScripter and yDev Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Authorized to work in the US for any employer Work Experience Sr PYTHON DEVELOPER Nordstrom Apparel Seattle WA August 2018 to Present Responsible for gathering requirements system analysis design development testing and deployment by participating in complete SDLC process Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Followed Agile development methodology to develop the application and used the GO Programming language to refactor and redesign the legacy databases Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background Used Machine learning techniques like unsupervised Classification optimization and prediction and good knowledge of working with Rabbit MQ Designed developed coded worked in penetration testing and implemented a concurrent multiparallel event orientedprocessing AKKA Actor System and Actors to consume Scala SparkSQL Rules which aggregated data to produce Quality Performance Reports QPR on Fiscal projections against Apprentice and Intern Job data Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB Cloud from Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using Puppet Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Worked in Apache CGI CherryPy python and Bash programming on Red Hat virtual machines to maintain and automate Splunk server deployments and other inhouses IT operations Implemented database change controls as well as development staging production PostgreSQL databases Implemented machine learning schemes using Python libraries Sci kitlearn and SciPy Used R for prototype on a sample data exploration to identify the best algorithmic approach and then wrote Scala scripts using Spark Machine Learning module Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and written modules in Python to connect to PostgreSQL and doing CRUD operations with PostgreSQL Worked on Linux server and Created scripts for data modeling and data import and export and worked on Python ecosystem packages like Numpy pandas Matplotlib and Ipython Jupyter notebook Performed data cleaning analysismunging and visualization of large dataset like stocks data using Numpy Pandas and Matplotlib and Ipython Jupyter notebook Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQSand Jenkins CICD Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the Big Data approach on AWS EC2 Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Development of Python APIs to dump the array structures in the Processor at the failure point for debugging and good knowledge on Spark platform parameters like memory cores and executors Built articles updated landing pages and approved assets for publishing on a CMS platform Oracle WebCenter Sites and used Bitbucket and hosted the web site on Heroku and AWS Involved in the development of frontend of the application using Python 34 HTML5 CSS3 Bootstrap 30 AJAX JSON and jQuery Worked on different data formats such as JSON XML and performed Machine Learning algorithms in R Designed developed and deployed applications on to several cloudsbased solutions using configuration Management tools like Chef Puppet Ansible and Saltstack Worked in the DevOps team delivered new Agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ANT Maven Artifactory Chef custom scripting and JIRA for ticketing Automate scenarios using Selenium WebDriver Testing Tools used Selenium IDE Selenium WebDriver Creating YAML driven query engines in Python for SQL Sqoop HDFS and Teradata BTEQ TDT and Implemented Algorithms for Data Analysis from Cluster of Web Services Worked with lxml to dynamically generate SOAP requests based on the services Developed custom HashKey HMAC based algorithm in Python for Web Service authentication Worked on Python Scientific packages like NumPy and Pandas to handle data sets effectively Used Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of Python code using a web browser Developing applications using RESTFUL architecture using NodeJS and Python as backend languages TestDriven Development approach was used and hence worked intensively on developing test cases and Involved in Quality Control Activities such as defect tracking fixing using JIRA Involved in doing AGILE SCRUM practices and planning of sprint attending daily Agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and Worked with Machine Learning Libraries like Theano Scikitlearn Worked closely with Data Scientist and Data Visualization specialist to develop prototypes from various datasets using Machine Learning natural language processing and predictive analytics techniques Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S Cloud FronDeploy and monitor scalable infrastructure on Amazon Web Services AWS configuration management using Puppet Writing SOAP and Restful Web Services in house ESB for a web Claims application Spring MVC AngularJS ActiveMQ SOAP UI Mockito JSON Build forge PYTHON DEVELOPER Schneider National Green Bay WI August 2016 to May 2018 Implemented Full Life Cycle Development of new web applications and modification of existing applications to add new components and features emphasizing maintainability reliability scalability and performance Implemented financial models in Python as well as refactor and update existing model implementations to enhance stability increase performance and reduce memory usage Work in AgileScrum and TDD environment with distinct roles Present daily report of software planning issues diagnosis and potential solutions Reviewed and debugged Clients Jupyter Ipython notebooks also improving navigation experience over long pages and Used Python to build notepads to manipulate user data in Jupyter Developed Merge jobs in Python to extract and load data into MySQL database and worked on MySQL data lineage process to map source to target DB table and column mappings using OO Python Performed serverside application using Django framework and developed a chat application with it and integrated with the main application by clientserver architecture Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Implemented deep learning models and numerical Computation with the help of data flow graphs using Tensor Flow Machine Learning Used various IDEs like Eclipse JupyterIPython Notebooks IDLE and Notepad for Python developments and experienced with batch processing of data sources using Apache Spark and Elastic search Develop Machine Learning API in the backend using libraries such as Numpy SciPy Matplotlib Pandas Seaborn Sklearn OpenCV and NLTK Worked with core web front end technologies like HTML JavaScript Core and ObjectOriented JS ES6 CSS and Web Accessibility and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Planned and coordinated the administration of PostgreSQL databases to ensure accurate appropriate and effective use of data including database definition structure documentation longrange requirements and operational guidelines Created Natural Language Processing model in R using OpenNLP Stanford NLP ANN and developed R application showcasing machine learning for improving business forecasting Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like Unit Testing Regression Testing Integration Testing Manage continuous build and share progress with Confluence Bamboo and SVN Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Troubleshooting and resolving issues in JIRA and Confluence as users and provided documentation of customer JIRA terms standard practices and implementation and weekly status reports Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture and Setup database in AWS using RDS and configuring backups for S3 bucket Developed Hadoop integrations for data ingestion data mapping and data processing Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analyzed the imported data using Hadoop Components Developed API modularizing existing Python module with the help of Pyyaml libraries which is an YAML parser and emitter for Python Enhanced existing REST services using NodeJS ExpressJS and Mongoose modules Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS jQuery AJAX and implemented CSS3 for better appearance and feel Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Interactive in providing change requests trouble reports and requirements collection with the client Managed code versioning with GitHub Bitbucket and deployment to staging and production servers and also worked with WordPress modules theming distributions content management Implemented MVC architecture in developing the web application with the help of Django framework Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Leveraging queueing architectures with Rabbit MQ for scalability performance and building Working under UNIX environment in development of application using Python and familiar with all its commands and Developed remote integration with third party platforms by using RESTful Web Services Improved code reuse and performance by making effective use of various design patterns and refactoring code base and developed single page application by using AngularJS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing PYTHON DEVELOPER Comcast Philadelphia PA June 2014 to March 2016 Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes and Experience with continuous integration and automation using Jenkins Implemented multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries by using TDD Test driven development methodology Spearheaded adoption of Responsive web design principles and converted existing websites to responsive websites by using Bootstrap Managed developed and designed a dashboard control panel for customers and administrators using Django Oracle DB PostgreSQL and VMWare API calls Leveraged SaltStack event system for distributed application monitoring and reporting Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Designed frontend and backend of the application using Python NodeJS on Django Web Framework Written Cloud formation templates and deployed AWS resourcing and built application and database servers using AWS EC2 and create AMIs also using RDS for Oracle DB Implemented CICD using Jenkins for development process Installing configuring maintaining and administering WordPress blog sites Creating test environment to verify and confirm compatibility of latest version WordPress and Plugins Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Developed single page application by using AngularJS backed by MongoDB and NodeJS Created custom user defined functions in Python language for Pig Built application logic using Python and worked on BehavioralDriven Programming in Python Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented responsive vector maps and charts on web pages using the data from PostgreSQL Managed developed and designed a dashboard control panel for customers and administrators using Django MongoDB PostgreSQL and VMWare API calls Pull information from JIRA using REST API and Python to populate Excel files for management reports Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Develop and program Python scripts of automation procedure with provided API and JSON data PYTHON DEVELOPER City Group New York NY September 2013 to March 2014 Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angularjs Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery and used JavaScript and XML to update a portion of a webpage and Developed RESTful services using Django Developed consumerbased features and applications using Python and Django in test driven Development and successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project also worked on changes to openstack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history and experienced in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling CloudWatch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frameworks like CSS Bootstrap for development of Web application also worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system and followed Agile Methodologies to manage full lifecycle development of the project Learned to index and searchquery large number of documents inside Elastic search and worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON and XML from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services and creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Skills Sets Programming Languages Python 2x3x Go Language Scala C C Java SQL HTMLHTML5 CSSCSS3 Python Libraries Requests Scrapy wxPython Pillow SQL Alchemy Beautiful Soup Twisted NumPy SciPy matplotlib Pygame Pyglet PyQT PyGtk Scapy Pywin32 ntlk Nose SymPy Ipython Web Frameworks Django Flask Pyramid TurboGears Muffin CherryPy Tornadoweb2pypylon GUI Frameworks PyJamas Gnome Python GUI2py PyFltk PyForms PyGtk PySide TkInter Version Control Tools Concurrent Versions System CVS Subversion SVN Git Mercurial Saltstack Automation Tools doit Buildbot Chef Puppet Ansible Docker Testing Tools Unit Test Pytest Pythoscope PyMock Mocker Antiparser Web Unit Web Test PAMIE Selenium Splinter PyFIT PyUseCase Automa PyChecker IDE Netbeans Thonny Komodo PyCharm PyDev PyScripter Pyshield Spyder PyStudio Databases MySQL MongoDB Cassandra NoSQL PostgreSQL Bug Tracking Tools Bugzilla JIRA HP ALMQuality Center IBM Rational ClearQuest Operating Systems IBM OS2 Warp Windows 98NT2000XPVista78 UNIXLinux Sun Solaris Other Technical Skills Software Development Life Cycle SDLC Object Oriented Programming OOP Agile Waterfall Test Driven Development TDD Behavioral Driven Development BDD Pair Programming Scrum Elasticsearch Kanban Kafka Python Scripting OpenStack Amazon Web Services AWS YAML Bash scripting Jetty JSON Shell scripting Logstash Kibana LAMP and WAMP architecture AMQP RabbitMQ Celery Heroku Samba Confluence Bamboo Education Masters Skills Amazon web services Json Object oriented Object oriented programming Oop",
    "extracted_keywords": [
        "Sr",
        "PYTHON",
        "DEVELOPER",
        "Sr",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "Python",
        "developer",
        "Seattle",
        "WA",
        "years",
        "IT",
        "Experience",
        "testing",
        "standalone",
        "enterprise",
        "application",
        "software",
        "domains",
        "coder",
        "languages",
        "environments",
        "Python",
        "Django",
        "Flask",
        "web2py",
        "bottle",
        "CherryPy",
        "tornado",
        "Giotto",
        "TurboGears",
        "MongoDB",
        "C",
        "C",
        "SQL",
        "Experience",
        "web",
        "applications",
        "Python",
        "UIUX",
        "PHP",
        "C",
        "XML",
        "CSS3",
        "HTML5",
        "DHTML",
        "JavaScript",
        "Jdk17",
        "jQuery",
        "Experience",
        "version",
        "control",
        "systems",
        "CVS",
        "SVN",
        "GitGitHub",
        "tracking",
        "tools",
        "Jira",
        "Bugzilla",
        "Spark",
        "rabbit",
        "MQ",
        "Good",
        "Experience",
        "Infrastructure",
        "Development",
        "Operations",
        "Google",
        "App",
        "Engine",
        "AWS",
        "Cloud",
        "experience",
        "Python",
        "libraries",
        "development",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "JSON",
        "librariesExperience",
        "Machine",
        "Learning",
        "Algorithms",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Redis",
        "Cassandra",
        "databases",
        "PostgreSQL",
        "Dynamo",
        "DB",
        "MariaDB",
        "MySQL",
        "Hands",
        "Experience",
        "Data",
        "mining",
        "Data",
        "warehousing",
        "ETL",
        "Tools",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Experience",
        "Python",
        "IDEs",
        "PyCharm",
        "Spyder",
        "PyStudio",
        "PyScripter",
        "yDev",
        "Knowledge",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Methodologies",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "PYTHON",
        "DEVELOPER",
        "Nordstrom",
        "Apparel",
        "Seattle",
        "WA",
        "August",
        "Present",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "SDLC",
        "process",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "development",
        "methodology",
        "application",
        "GO",
        "Programming",
        "language",
        "refactor",
        "legacy",
        "MySQL",
        "queue",
        "AWS",
        "SNS",
        "SQS",
        "Golang",
        "SQL",
        "background",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "knowledge",
        "Rabbit",
        "MQ",
        "penetration",
        "testing",
        "event",
        "AKKA",
        "Actor",
        "System",
        "Actors",
        "Scala",
        "SparkSQL",
        "Rules",
        "data",
        "Quality",
        "Performance",
        "Reports",
        "QPR",
        "projections",
        "Apprentice",
        "Intern",
        "Job",
        "data",
        "application",
        "Amazon",
        "Web",
        "Service",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "Cloud",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "Puppet",
        "Designed",
        "machine",
        "solutions",
        "Python",
        "millions",
        "Twitter",
        "users",
        "data",
        "product",
        "Apache",
        "CGI",
        "CherryPy",
        "python",
        "Bash",
        "programming",
        "Red",
        "Hat",
        "machines",
        "Splunk",
        "server",
        "deployments",
        "inhouses",
        "IT",
        "operations",
        "database",
        "change",
        "development",
        "staging",
        "production",
        "PostgreSQL",
        "machine",
        "learning",
        "schemes",
        "Python",
        "libraries",
        "Sci",
        "kitlearn",
        "SciPy",
        "R",
        "prototype",
        "sample",
        "data",
        "exploration",
        "approach",
        "Scala",
        "scripts",
        "Spark",
        "Machine",
        "Learning",
        "module",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "groups",
        "modules",
        "Python",
        "PostgreSQL",
        "CRUD",
        "operations",
        "PostgreSQL",
        "Linux",
        "server",
        "scripts",
        "data",
        "modeling",
        "data",
        "import",
        "export",
        "Python",
        "ecosystem",
        "packages",
        "Numpy",
        "Matplotlib",
        "Ipython",
        "Jupyter",
        "notebook",
        "Performed",
        "data",
        "analysismunging",
        "visualization",
        "dataset",
        "stocks",
        "data",
        "Numpy",
        "Pandas",
        "Matplotlib",
        "Ipython",
        "Jupyter",
        "notebook",
        "AWS",
        "services",
        "S3",
        "EC2",
        "deployment",
        "services",
        "Lambda",
        "RDS",
        "DynamoDB",
        "Beanstalk",
        "SQSand",
        "Jenkins",
        "CICD",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "CSV",
        "Big",
        "Data",
        "approach",
        "AWS",
        "EC2",
        "Developed",
        "Python",
        "Mapper",
        "Reducer",
        "scripts",
        "Hadoop",
        "streaming",
        "documentation",
        "Hadoop",
        "Clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "debugging",
        "knowledge",
        "Spark",
        "platform",
        "parameters",
        "memory",
        "cores",
        "executors",
        "articles",
        "landing",
        "pages",
        "assets",
        "CMS",
        "platform",
        "Oracle",
        "WebCenter",
        "Sites",
        "Bitbucket",
        "web",
        "site",
        "Heroku",
        "AWS",
        "development",
        "frontend",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AJAX",
        "JSON",
        "jQuery",
        "data",
        "formats",
        "JSON",
        "XML",
        "Machine",
        "Learning",
        "R",
        "applications",
        "solutions",
        "configuration",
        "Management",
        "tools",
        "Chef",
        "Puppet",
        "Ansible",
        "Saltstack",
        "DevOps",
        "team",
        "environments",
        "buildreleaseconfiguration",
        "deployment",
        "automationmonitoring",
        "Jenkins",
        "ANT",
        "Maven",
        "Artifactory",
        "Chef",
        "custom",
        "scripting",
        "JIRA",
        "Automate",
        "scenarios",
        "Selenium",
        "WebDriver",
        "Testing",
        "Tools",
        "Selenium",
        "IDE",
        "Selenium",
        "WebDriver",
        "YAML",
        "query",
        "engines",
        "Python",
        "SQL",
        "Sqoop",
        "HDFS",
        "Teradata",
        "BTEQ",
        "TDT",
        "Algorithms",
        "Data",
        "Analysis",
        "Cluster",
        "Web",
        "Services",
        "lxml",
        "requests",
        "services",
        "custom",
        "HashKey",
        "HMAC",
        "algorithm",
        "Python",
        "Web",
        "Service",
        "authentication",
        "Python",
        "packages",
        "NumPy",
        "Pandas",
        "data",
        "sets",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Implemented",
        "Integration",
        "test",
        "cases",
        "analytic",
        "Apache",
        "Spark",
        "Scala",
        "APIs",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "applications",
        "RESTFUL",
        "architecture",
        "NodeJS",
        "Python",
        "languages",
        "TestDriven",
        "Development",
        "approach",
        "test",
        "cases",
        "Quality",
        "Control",
        "Activities",
        "tracking",
        "JIRA",
        "AGILE",
        "SCRUM",
        "practices",
        "planning",
        "sprint",
        "Agile",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Machine",
        "Learning",
        "Libraries",
        "Theano",
        "Scikitlearn",
        "Data",
        "Scientist",
        "Data",
        "Visualization",
        "specialist",
        "prototypes",
        "datasets",
        "Machine",
        "Learning",
        "language",
        "processing",
        "analytics",
        "techniques",
        "application",
        "Amazon",
        "Web",
        "Service",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "S",
        "Cloud",
        "FronDeploy",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "configuration",
        "management",
        "Puppet",
        "Writing",
        "SOAP",
        "Restful",
        "Web",
        "Services",
        "house",
        "ESB",
        "web",
        "Claims",
        "application",
        "Spring",
        "MVC",
        "SOAP",
        "UI",
        "Mockito",
        "JSON",
        "Build",
        "forge",
        "PYTHON",
        "DEVELOPER",
        "Schneider",
        "National",
        "Green",
        "Bay",
        "WI",
        "August",
        "May",
        "Full",
        "Life",
        "Cycle",
        "Development",
        "web",
        "applications",
        "modification",
        "applications",
        "components",
        "features",
        "maintainability",
        "reliability",
        "scalability",
        "performance",
        "models",
        "Python",
        "refactor",
        "model",
        "implementations",
        "stability",
        "increase",
        "performance",
        "memory",
        "usage",
        "Work",
        "AgileScrum",
        "TDD",
        "environment",
        "roles",
        "report",
        "software",
        "planning",
        "issues",
        "diagnosis",
        "solutions",
        "Clients",
        "Jupyter",
        "Ipython",
        "notebooks",
        "navigation",
        "experience",
        "pages",
        "Python",
        "notepads",
        "user",
        "data",
        "Jupyter",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "MySQL",
        "data",
        "lineage",
        "process",
        "source",
        "DB",
        "table",
        "column",
        "mappings",
        "OO",
        "Python",
        "Performed",
        "serverside",
        "application",
        "Django",
        "framework",
        "chat",
        "application",
        "application",
        "architecture",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "learning",
        "models",
        "numerical",
        "Computation",
        "help",
        "data",
        "flow",
        "graphs",
        "Tensor",
        "Flow",
        "Machine",
        "Learning",
        "IDEs",
        "Eclipse",
        "JupyterIPython",
        "Notebooks",
        "IDLE",
        "Notepad",
        "Python",
        "developments",
        "batch",
        "processing",
        "data",
        "sources",
        "Apache",
        "Spark",
        "search",
        "Develop",
        "Machine",
        "Learning",
        "API",
        "libraries",
        "Numpy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "Seaborn",
        "Sklearn",
        "OpenCV",
        "NLTK",
        "core",
        "web",
        "front",
        "end",
        "technologies",
        "HTML",
        "JavaScript",
        "Core",
        "ObjectOriented",
        "JS",
        "ES6",
        "CSS",
        "Web",
        "Accessibility",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "JVM",
        "Parameters",
        "Planned",
        "administration",
        "PostgreSQL",
        "use",
        "data",
        "database",
        "definition",
        "structure",
        "documentation",
        "longrange",
        "requirements",
        "guidelines",
        "Natural",
        "Language",
        "Processing",
        "model",
        "R",
        "OpenNLP",
        "Stanford",
        "NLP",
        "ANN",
        "R",
        "application",
        "machine",
        "business",
        "forecasting",
        "change",
        "requests",
        "user",
        "server",
        "configuration",
        "kernel",
        "software",
        "installation",
        "OS",
        "Linux",
        "VMs",
        "Puppet",
        "projects",
        "requirement",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Develop",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "hardware",
        "system",
        "design",
        "documents",
        "business",
        "objectives",
        "developer",
        "testing",
        "activities",
        "Unit",
        "Testing",
        "Regression",
        "Testing",
        "Integration",
        "Testing",
        "Manage",
        "build",
        "progress",
        "Confluence",
        "Bamboo",
        "SVN",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Troubleshooting",
        "issues",
        "JIRA",
        "Confluence",
        "users",
        "documentation",
        "customer",
        "JIRA",
        "practices",
        "implementation",
        "status",
        "reports",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Setup",
        "database",
        "AWS",
        "RDS",
        "backups",
        "S3",
        "bucket",
        "Developed",
        "Hadoop",
        "integrations",
        "data",
        "ingestion",
        "data",
        "mapping",
        "data",
        "processing",
        "Sqoop",
        "data",
        "RDBMS",
        "Hadoop",
        "Distributed",
        "File",
        "System",
        "HDFS",
        "data",
        "Hadoop",
        "Components",
        "API",
        "Python",
        "module",
        "help",
        "Pyyaml",
        "libraries",
        "YAML",
        "parser",
        "emitter",
        "Python",
        "REST",
        "services",
        "NodeJS",
        "ExpressJS",
        "Mongoose",
        "modules",
        "XSD",
        "XML",
        "assays",
        "software",
        "function",
        "product",
        "requirements",
        "data",
        "operation",
        "software",
        "hardware",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML5",
        "JavaScript",
        "jQuery",
        "AJAX",
        "CSS3",
        "appearance",
        "crossbrowser",
        "development",
        "HTML5",
        "CSS3",
        "websites",
        "Windows",
        "Safari",
        "IE",
        "IE",
        "IE",
        "Firefox",
        "Chrome",
        "AJAX",
        "portions",
        "web",
        "pages",
        "request",
        "server",
        "need",
        "web",
        "page",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "Managed",
        "code",
        "GitHub",
        "Bitbucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "WordPress",
        "modules",
        "distributions",
        "content",
        "management",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Working",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "commands",
        "integration",
        "party",
        "platforms",
        "Web",
        "Services",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "refactoring",
        "code",
        "base",
        "page",
        "application",
        "MongoDB",
        "NodeJS",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "PYTHON",
        "DEVELOPER",
        "Comcast",
        "Philadelphia",
        "PA",
        "June",
        "March",
        "presentation",
        "layer",
        "GUI",
        "framework",
        "HTML",
        "ClientSide",
        "validations",
        "JavaScript",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "application",
        "provisioning",
        "OpenStack",
        "cloud",
        "AnsiblePuppet",
        "AWS",
        "servers",
        "roles",
        "deployment",
        "web",
        "applications",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "Python",
        "TDD",
        "Test",
        "development",
        "methodology",
        "adoption",
        "Responsive",
        "web",
        "design",
        "principles",
        "websites",
        "websites",
        "Bootstrap",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Leveraged",
        "SaltStack",
        "event",
        "system",
        "application",
        "monitoring",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "frontend",
        "backend",
        "application",
        "Python",
        "NodeJS",
        "Django",
        "Web",
        "Framework",
        "Cloud",
        "formation",
        "templates",
        "AWS",
        "application",
        "database",
        "servers",
        "AWS",
        "EC2",
        "AMIs",
        "RDS",
        "Oracle",
        "DB",
        "CICD",
        "Jenkins",
        "development",
        "process",
        "WordPress",
        "blog",
        "sites",
        "test",
        "environment",
        "compatibility",
        "version",
        "WordPress",
        "Plugins",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "page",
        "application",
        "MongoDB",
        "NodeJS",
        "custom",
        "user",
        "functions",
        "Python",
        "language",
        "Pig",
        "application",
        "logic",
        "Python",
        "BehavioralDriven",
        "Programming",
        "Python",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "vector",
        "maps",
        "charts",
        "web",
        "pages",
        "data",
        "PostgreSQL",
        "dashboard",
        "control",
        "panel",
        "customers",
        "administrators",
        "Django",
        "MongoDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "information",
        "JIRA",
        "REST",
        "API",
        "Python",
        "Excel",
        "files",
        "management",
        "reports",
        "Design",
        "XSD",
        "XML",
        "assays",
        "software",
        "function",
        "product",
        "requirements",
        "data",
        "operation",
        "software",
        "hardware",
        "Develop",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "PYTHON",
        "DEVELOPER",
        "City",
        "Group",
        "New",
        "York",
        "NY",
        "September",
        "March",
        "programming",
        "Python",
        "Django",
        "Framework",
        "application",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Angularjs",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "JavaScript",
        "XML",
        "portion",
        "webpage",
        "services",
        "Django",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Django",
        "database",
        "SQLite3",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "changes",
        "AWS",
        "largescale",
        "data",
        "center",
        "deployment",
        "Amazon",
        "Cloud",
        "EC2",
        "Amazon",
        "SQS",
        "project",
        "history",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "CloudWatch",
        "SNS",
        "Created",
        "data",
        "charts",
        "Customer",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "end",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "procedure",
        "trigger",
        "database",
        "data",
        "tables",
        "Web",
        "API",
        "services",
        "code",
        "modelviewcontroller",
        "MVC",
        "pattern",
        "Python",
        "Django",
        "framework",
        "modules",
        "application",
        "Developed",
        "Application",
        "XML",
        "Restful",
        "Web",
        "Service",
        "consumer",
        "side",
        "JavaScript",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "invitation",
        "flow",
        "customers",
        "client",
        "portal",
        "applications",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "Skills",
        "Sets",
        "Programming",
        "Languages",
        "Python",
        "2x3x",
        "Language",
        "Scala",
        "C",
        "C",
        "Java",
        "SQL",
        "HTMLHTML5",
        "CSSCSS3",
        "Python",
        "Libraries",
        "Requests",
        "Scrapy",
        "wxPython",
        "Pillow",
        "SQL",
        "Alchemy",
        "Beautiful",
        "Soup",
        "Twisted",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pygame",
        "Pyglet",
        "PyQT",
        "PyGtk",
        "Scapy",
        "Pywin32",
        "ntlk",
        "Nose",
        "SymPy",
        "Ipython",
        "Web",
        "Frameworks",
        "Django",
        "Flask",
        "Pyramid",
        "TurboGears",
        "Muffin",
        "CherryPy",
        "Tornadoweb2pypylon",
        "GUI",
        "Frameworks",
        "PyJamas",
        "Gnome",
        "Python",
        "PyFltk",
        "PyForms",
        "PyGtk",
        "PySide",
        "TkInter",
        "Version",
        "Control",
        "Tools",
        "Concurrent",
        "Versions",
        "System",
        "CVS",
        "Subversion",
        "SVN",
        "Git",
        "Mercurial",
        "Saltstack",
        "Automation",
        "Tools",
        "Buildbot",
        "Chef",
        "Puppet",
        "Ansible",
        "Docker",
        "Testing",
        "Tools",
        "Unit",
        "Test",
        "Pytest",
        "Pythoscope",
        "PyMock",
        "Mocker",
        "Antiparser",
        "Web",
        "Unit",
        "Web",
        "Test",
        "PAMIE",
        "Selenium",
        "Splinter",
        "PyFIT",
        "Automa",
        "PyChecker",
        "IDE",
        "Netbeans",
        "Thonny",
        "Komodo",
        "PyCharm",
        "PyDev",
        "PyScripter",
        "Pyshield",
        "Spyder",
        "PyStudio",
        "MySQL",
        "MongoDB",
        "Cassandra",
        "NoSQL",
        "PostgreSQL",
        "Bug",
        "Tracking",
        "Tools",
        "Bugzilla",
        "JIRA",
        "HP",
        "ALMQuality",
        "Center",
        "IBM",
        "Rational",
        "ClearQuest",
        "Operating",
        "Systems",
        "IBM",
        "OS2",
        "Warp",
        "Windows",
        "UNIXLinux",
        "Sun",
        "Solaris",
        "Technical",
        "Skills",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Programming",
        "OOP",
        "Agile",
        "Waterfall",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Behavioral",
        "Driven",
        "Development",
        "BDD",
        "Pair",
        "Programming",
        "Scrum",
        "Elasticsearch",
        "Kanban",
        "Kafka",
        "Python",
        "Scripting",
        "OpenStack",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "YAML",
        "Bash",
        "Jetty",
        "JSON",
        "Shell",
        "Logstash",
        "Kibana",
        "LAMP",
        "WAMP",
        "architecture",
        "AMQP",
        "Celery",
        "Heroku",
        "Samba",
        "Confluence",
        "Bamboo",
        "Education",
        "Masters",
        "Skills",
        "Amazon",
        "web",
        "services",
        "Json",
        "Object",
        "Object",
        "programming",
        "Oop"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:23:56.864129",
    "resume_data": "Sr PYTHON DEVELOPER Sr span lPYTHONspan span lDEVELOPERspan Python developer Seattle WA Over 6 years of IT Experience in designing developing testing and implementing various standalone and clientserver architecturesbased enterprise application software on different domains Proficient coder in multiple languages and environments including Python Django Flask web2py bottle CherryPy sanic tornado Giotto pylon TurboGears MongoDB C C and SQL Experience in developing web based applications using Python 2x and 3x UIUX PHP C XML CSS3 HTML5 DHTML JavaScript Jdk17 jQuery AngularJS Experience in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Spark and rabbit MQ and Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Good experience using various Python libraries to speed up development libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity JSON librariesExperience in Machine Learning Algorithms Experienced in NoSQL technologies like MongoDB Redis and Cassandra and relational databases like SQLite PostgreSQL Dynamo DB MariaDB and MySQL databases Hands on Experience in Data mining and Data warehousing using ETL Tools Experienced with databases using ORMsDOMs for integrating with MySQL Experience in working with various Python IDEs using PyCharm Spyder PyStudio PyScripter and yDev Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Authorized to work in the US for any employer Work Experience Sr PYTHON DEVELOPER Nordstrom Apparel Seattle WA August 2018 to Present Responsible for gathering requirements system analysis design development testing and deployment by participating in complete SDLC process Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Followed Agile development methodology to develop the application and used the GO Programming language to refactor and redesign the legacy databases Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background Used Machine learning techniques like unsupervised Classification optimization and prediction and good knowledge of working with Rabbit MQ Designed developed coded worked in penetration testing and implemented a concurrent multiparallel event orientedprocessing AKKA Actor System and Actors to consume Scala SparkSQL Rules which aggregated data to produce Quality Performance Reports QPR on Fiscal projections against Apprentice and Intern Job data Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB Cloud from Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using Puppet Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Worked in Apache CGI CherryPy python and Bash programming on Red Hat virtual machines to maintain and automate Splunk server deployments and other inhouses IT operations Implemented database change controls as well as development staging production PostgreSQL databases Implemented machine learning schemes using Python libraries Sci kitlearn and SciPy Used R for prototype on a sample data exploration to identify the best algorithmic approach and then wrote Scala scripts using Spark Machine Learning module Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and written modules in Python to connect to PostgreSQL and doing CRUD operations with PostgreSQL Worked on Linux server and Created scripts for data modeling and data import and export and worked on Python ecosystem packages like Numpy pandas Matplotlib and Ipython Jupyter notebook Performed data cleaning analysismunging and visualization of large dataset like stocks data using Numpy Pandas and Matplotlib and Ipython Jupyter notebook Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQSand Jenkins CICD Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the Big Data approach on AWS EC2 Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Development of Python APIs to dump the array structures in the Processor at the failure point for debugging and good knowledge on Spark platform parameters like memory cores and executors Built articles updated landing pages and approved assets for publishing on a CMS platform Oracle WebCenter Sites and used Bitbucket and hosted the web site on Heroku and AWS Involved in the development of frontend of the application using Python 34 HTML5 CSS3 Bootstrap 30 AJAX JSON and jQuery Worked on different data formats such as JSON XML and performed Machine Learning algorithms in R Designed developed and deployed applications on to several cloudsbased solutions using configuration Management tools like Chef Puppet Ansible and Saltstack Worked in the DevOps team delivered new Agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ANT Maven Artifactory Chef custom scripting and JIRA for ticketing Automate scenarios using Selenium WebDriver Testing Tools used Selenium IDE Selenium WebDriver Creating YAML driven query engines in Python for SQL Sqoop HDFS and Teradata BTEQ TDT and Implemented Algorithms for Data Analysis from Cluster of Web Services Worked with lxml to dynamically generate SOAP requests based on the services Developed custom HashKey HMAC based algorithm in Python for Web Service authentication Worked on Python Scientific packages like NumPy and Pandas to handle data sets effectively Used Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of Python code using a web browser Developing applications using RESTFUL architecture using NodeJS and Python as backend languages TestDriven Development approach was used and hence worked intensively on developing test cases and Involved in Quality Control Activities such as defect tracking fixing using JIRA Involved in doing AGILE SCRUM practices and planning of sprint attending daily Agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and Worked with Machine Learning Libraries like Theano Scikitlearn Worked closely with Data Scientist and Data Visualization specialist to develop prototypes from various datasets using Machine Learning natural language processing and predictive analytics techniques Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S Cloud FronDeploy and monitor scalable infrastructure on Amazon Web Services AWS configuration management using Puppet Writing SOAP and Restful Web Services in house ESB for a web Claims application Spring MVC AngularJS ActiveMQ SOAP UI Mockito JSON Build forge PYTHON DEVELOPER Schneider National Green Bay WI August 2016 to May 2018 Implemented Full Life Cycle Development of new web applications and modification of existing applications to add new components and features emphasizing maintainability reliability scalability and performance Implemented financial models in Python as well as refactor and update existing model implementations to enhance stability increase performance and reduce memory usage Work in AgileScrum and TDD environment with distinct roles Present daily report of software planning issues diagnosis and potential solutions Reviewed and debugged Clients Jupyter Ipython notebooks also improving navigation experience over long pages and Used Python to build notepads to manipulate user data in Jupyter Developed Merge jobs in Python to extract and load data into MySQL database and worked on MySQL data lineage process to map source to target DB table and column mappings using OO Python Performed serverside application using Django framework and developed a chat application with it and integrated with the main application by clientserver architecture Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Implemented deep learning models and numerical Computation with the help of data flow graphs using Tensor Flow Machine Learning Used various IDEs like Eclipse JupyterIPython Notebooks IDLE and Notepad for Python developments and experienced with batch processing of data sources using Apache Spark and Elastic search Develop Machine Learning API in the backend using libraries such as Numpy SciPy Matplotlib Pandas Seaborn Sklearn OpenCV and NLTK Worked with core web front end technologies like HTML JavaScript Core and ObjectOriented JS ES6 CSS and Web Accessibility and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Planned and coordinated the administration of PostgreSQL databases to ensure accurate appropriate and effective use of data including database definition structure documentation longrange requirements and operational guidelines Created Natural Language Processing model in R using OpenNLP Stanford NLP ANN and developed R application showcasing machine learning for improving business forecasting Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like Unit Testing Regression Testing Integration Testing Manage continuous build and share progress with Confluence Bamboo and SVN Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Troubleshooting and resolving issues in JIRA and Confluence as users and provided documentation of customer JIRA terms standard practices and implementation and weekly status reports Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture and Setup database in AWS using RDS and configuring backups for S3 bucket Developed Hadoop integrations for data ingestion data mapping and data processing Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analyzed the imported data using Hadoop Components Developed API modularizing existing Python module with the help of Pyyaml libraries which is an YAML parser and emitter for Python Enhanced existing REST services using NodeJS ExpressJS and Mongoose modules Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS jQuery AJAX and implemented CSS3 for better appearance and feel Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Interactive in providing change requests trouble reports and requirements collection with the client Managed code versioning with GitHub Bitbucket and deployment to staging and production servers and also worked with WordPress modules theming distributions content management Implemented MVC architecture in developing the web application with the help of Django framework Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Leveraging queueing architectures with Rabbit MQ for scalability performance and building Working under UNIX environment in development of application using Python and familiar with all its commands and Developed remote integration with third party platforms by using RESTful Web Services Improved code reuse and performance by making effective use of various design patterns and refactoring code base and developed single page application by using AngularJS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing PYTHON DEVELOPER Comcast Philadelphia PA June 2014 to March 2016 Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes and Experience with continuous integration and automation using Jenkins Implemented multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries by using TDD Test driven development methodology Spearheaded adoption of Responsive web design principles and converted existing websites to responsive websites by using Bootstrap Managed developed and designed a dashboard control panel for customers and administrators using Django Oracle DB PostgreSQL and VMWare API calls Leveraged SaltStack event system for distributed application monitoring and reporting Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Designed frontend and backend of the application using Python NodeJS on Django Web Framework Written Cloud formation templates and deployed AWS resourcing and built application and database servers using AWS EC2 and create AMIs also using RDS for Oracle DB Implemented CICD using Jenkins for development process Installing configuring maintaining and administering WordPress blog sites Creating test environment to verify and confirm compatibility of latest version WordPress and Plugins Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Developed single page application by using AngularJS backed by MongoDB and NodeJS Created custom user defined functions in Python language for Pig Built application logic using Python and worked on BehavioralDriven Programming in Python Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented responsive vector maps and charts on web pages using the data from PostgreSQL Managed developed and designed a dashboard control panel for customers and administrators using Django MongoDB PostgreSQL and VMWare API calls Pull information from JIRA using REST API and Python to populate Excel files for management reports Design and develop XSD schemebased XML assays to validate software function based on product requirements which is used to transferring data and operation between software and hardware Develop and program Python scripts of automation procedure with provided API and JSON data PYTHON DEVELOPER City Group New York NY September 2013 to March 2014 Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angularjs Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery and used JavaScript and XML to update a portion of a webpage and Developed RESTful services using Django Developed consumerbased features and applications using Python and Django in test driven Development and successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project also worked on changes to openstack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history and experienced in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling CloudWatch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frameworks like CSS Bootstrap for development of Web application also worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system and followed Agile Methodologies to manage full lifecycle development of the project Learned to index and searchquery large number of documents inside Elastic search and worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON and XML from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services and creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Skills Sets Programming Languages Python 2x3x Go Language Scala C C Java SQL HTMLHTML5 CSSCSS3 Python Libraries Requests Scrapy wxPython Pillow SQL Alchemy Beautiful Soup Twisted NumPy SciPy matplotlib Pygame Pyglet PyQT PyGtk Scapy Pywin32 ntlk Nose SymPy Ipython Web Frameworks Django Flask Pyramid TurboGears Muffin CherryPy Tornadoweb2pypylon GUI Frameworks PyJamas Gnome Python GUI2py PyFltk PyForms PyGtk PySide TkInter Version Control Tools Concurrent Versions System CVS Subversion SVN Git Mercurial Saltstack Automation Tools doit Buildbot Chef Puppet Ansible Docker Testing Tools Unit Test Pytest Pythoscope PyMock Mocker Antiparser Web Unit Web Test PAMIE Selenium Splinter PyFIT PyUseCase Automa PyChecker IDE Netbeans Thonny Komodo PyCharm PyDev PyScripter Pyshield Spyder PyStudio Databases MySQL MongoDB Cassandra NoSQL PostgreSQL Bug Tracking Tools Bugzilla JIRA HP ALMQuality Center IBM Rational ClearQuest Operating Systems IBM OS2 Warp Windows 98NT2000XPVista78 UNIXLinux Sun Solaris Other Technical Skills Software Development Life Cycle SDLC Object Oriented Programming OOP Agile Waterfall Test Driven Development TDD Behavioral Driven Development BDD Pair Programming Scrum Elasticsearch Kanban Kafka Python Scripting OpenStack Amazon Web Services AWS YAML Bash scripting Jetty JSON Shell scripting Logstash Kibana LAMP and WAMP architecture AMQP RabbitMQ Celery Heroku Samba Confluence Bamboo Education Masters Skills Amazon web services Json Object oriented Object oriented programming Oop",
    "unique_id": "77e8ef76-a63a-4465-afb0-9d8232282933"
}