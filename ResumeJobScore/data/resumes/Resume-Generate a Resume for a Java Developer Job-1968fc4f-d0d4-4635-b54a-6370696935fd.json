{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer GE Healthcare Around 7 years of professional experience in IT Industry with strong hands on analysis design and development of enterprise applications using Python Django Flask JAVAJ2EE Technologies Equipped with the knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Strong experience of software development in Python libraries used Beautiful Soup Numpy Scipy Matplotlib pythontwitter Pandas data frame networkx urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder Pycharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies Proficient in developing Web Services SOAP RESTful in Python using XML JSON Driven to architect Big Data solutions on multiple platforms using data analytics Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in practicing the SDLC models agile methods with Scrum Extreme Programming Ticketing systems using JIRA and Test Driven Development TDD Developed JavaJ2ee applications using XML XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collections Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript JQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Good experience in developing web applications and implementing ModelViewControl MVC architecture using server side applications like Django Flask  and Pyramid Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Well versed with Version control systems such as Git SVN and CVS Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in project deployment using Google CloudJenkins ElasticSearch and using web Services like Amazon Web Services AWS Developed a scalable logging solution in golang that could track custom log outputs to various destinations file stdoutstderr syslog email remote Created a golang script to read data from csv file and publish formatted json data to remote rabbitmq cluster Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQLAlchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Created action filters parameters and calculated sets for preparing dashboards and worksheets in Tableau Installing resolving hardware firmware driver networking SAN data centre operating system PCI RAID and applications on a multitude of server and desktop platforms Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Used ANT scripts to build and deploy code to other environments from Development environment Performed code reviews and implemented best Pythonic programming practices Possess keen business acumen in analysing and understanding business requirements customervalue maximization and developing new business processes Worked on Waterfall to Agile Methodologies Good team player with excellent work history and willingness to go extra mile Exceptional analytical troubleshooting organizational communication prioritization and problem solving and leadership skills with ability to create and sustain high work tempo TECHNICAL CREDENTIALS Programming Languages Python C C Java shell scripting PLSQLGolang Work Experience Senior Python Developer GE Healthcare San Ramon CA January 2018 to Present Description As a leading global medical technology and life sciences company GE Health Care provide a broad portfolio of products solutions and services used in the diagnosis treatment and monitoring of patients and in the development and manufacture of biopharmaceuticals by providing medical technologies digital infrastructure data analytics and decision support tools that help healthcare professionals diagnose treat and monitor their patients Responsibilities Develop moderately complex software in Python and Java consistently following coding standards and in accordance with applicable software development methodology and release processes Work with Business Architects and Business Analysts to understand the business requirements Application developed with Python Flask using Agile methodology Good understanding of the threading limitations of Python and multiprocess architecture Developed entire front end and back end modules using Python on Flask WSGI Pyramid Web Framework Expertise in using OOPS concept all over the project to leverage the code to look well defined Generated statistical measurement and Image Filtering based on selected statistical measure digital image processing Used Fourier Transform Spectral Analysis Frequency Analysis for image manipulation Implement image processing using numpy matplotlib scipy imageio pil low and some other python libraries Create test cases to cover the development work using pytest framework to get the minimum coverage of overall 80 minimum by maintaining the code standards Utilize software engineering tools such as configuration management systems build processes and debuggers in the software development process Improved code reuse and performance by making effective use of various design patterns Collaborate and add value through participation in peer code reviews providing comments and suggestions Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Used Django Database APIs to access database objects Also involved in validating and processing of files Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacenters Elastic Search and AWS Cloud Developed internal auxiliary web apps using Python Flask  framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Participate in product andor application definition activities including feature analysis and system tradeoffs Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch Flask Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Capital One Richmond VA 2016 to December 2017 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Involved in exiting the data centres lifted and shifted to cloud building script for data movement from S3 to EC2 using SQS back and forth using python Developed Nebula datasets registration for keeping the raw data as a backup and worked with Amazon web services EC2 and EMR as a replacement for application servers and various business processes Utilized Cloud watch to monitor resources such as EC2 CPU memory Amazon to design high availability applications on AWS across availability zones Configured Elastic Load Balancers with EC2 Autoscaling groups in AWS Developed dynamic web pages monitoring notification managing Security Vulnerability for infrastructure and application tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Developed tools using Python Shell Scripting and XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Created new database objects like Functions Packages Triggers Indexes and Views using TSQL in Development and Production environment for SQL Server Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information and made connections for the existing databases using SQLAlchemy Used Django Database APIs to access database objects and Developed SQLite and Python script to convert OLAP cube data to relational data extract for business reporting Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Fetched twitter feeds for certain important keyword using Pythontwitter library Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout and used JavaScript to validate all the client side validations Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Created unit tests in golang and facilitated the integration of Jenkins CI environment with github in collaboration with the operations team Developed a concurrent inmemory caching solution using golang channels and a FIFO queue to buffer client request on demand Used Golang to add a feature to an opensource data analytics and monitoring platform called Grafana to support customized alerting contents Worked on migration of existing Java C applications in Python 27 Wrote a Python module to connect and view the status of an Apache Cassandra instance DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Used PyQuery for selecting particular DOM elements when parsing HTML Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per project requirement Implemented Test Driven Development TDD for developing undergoing system Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Used Element Tree XML API in Python to Parse XML documents and load the data in to the database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Jenkins to build and troubleshoot automated testing Developed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Generated Python Django forms to record data of online users and used PyTest for writing test cases and Depended on Ansible for deploying the developing system Version control using GitHub and involved in writing stored procedures using MySQL Environment Python 27 Django 18 PyCharm C JAVA Beautiful Soup Apache Cassandra HTML5 DOM CSS3 AJAX AWSJSON JQuery SQLite Ansible JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQLREST Linux GIT GitHub Senior Python Developer Ericson NJ April 2014 to July 2016 DescriptionThis organisation is to develop the next generation Packet Core load testing framework for the coming needs on 5G IoT VNS They aim to build TAAS test as a service infrastructure to enable different kinds of simulated networks to support different scenarios and responsible of developing and supporting this infrastructure and deliver test solution service to customers Responsibilities Worked with Business Architects and Business Analysts to understand the business requirements Application developed with Python Django and MySQL using JIRA Agile methodology Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Created Data Connections Published on Tableau Server for usage with Operational or Monitoring Dashboards Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Improved code reuse and performance by making effective use of various design patterns Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on development of SQL and stored procedures for normalization and denormalization in MySQL and used SQLAlchemy for connecting with MySQL Database Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Developed remote integration with third party platforms by using RESTful web services Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Used Django Database APIs to access database objects Also involved in validating and processing of files Used ANT as build tools on Java projects for the development of build artefacts on the source code Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacentres Elastic Search and AWS Cloud Used Wireshark live HTTP headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Developed internal auxiliary web apps using Python Flask  framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Worked on with several python libraries like MatPlotLib PyTest and Selenium Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Skilled in using collections in Python for manipulating and looping through different user defined objects Wrote Python code embedded with JSON and XML to produce HTTP GET request URLlib 2 for parsing HTML data from websites Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Implemented Integration test cases and done Unit testing using PyUnit framework Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch Flask Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Nielsen Tampa FL January 2013 to March 2014 DescriptionNielsen is the largest measurement company in the world with unique measurement technologies assets and data that make it one of the most interesting and challenging places for a data scientist to work Digital Product team provides an opportunity to contribute to methodological innovation in the exciting and fastchanging world of digital media measurement The Digital Product team within the Data Science Watch organization focuses on improving and enhancing Nielsens highly successful products out in the marketplace for digital advertising and content measurement Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Debugged Flash Object to create Functional Component using Wireshark Live HTTP Headers and Fiddle2 Debugging Proxy The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Played a key role in a development wide transition from Subversion to GIT which resulted in an increase in efficiency for the development community Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Written functional PHPunit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Created Restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Generated graphical reports using Python package Numpy and MatPlotLib Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Robot Framework along with integration with Jenkins for Test Automation Integrated the existing project onto Google Cloud which inturn reduced the workload Used REST and SOAP UI for testing web service for server side changes Environment Python27 Django 18 MySQL HTML CSS JavaScript Bootstrap JQuery AJAX Wireshark Fiddler 2 Flash XML Oracle DB PostgreSQL PyQtto MongoDB Robot Google Cloud PyCharm Curl JSON REST SOAP UI Linux Gerrit Jenkins GIT Python Developer Xbreach Technologies Andhra Pradesh IND January 2012 to November 2012 DescriptionSecurity Auditing Consulting Portal Development Server Administration Security Training are the main environments for deploying everything Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Carried out various mathematical operations for calculation purpose using Python libraries Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Develop consumer based features and applications using Python Django HTML  Behaviour Driven Development BDD and pair based programming Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Generated Python Django Forms Crispy forms to record data login and signup of online users Worked on front end frame works like CSS Bootstrap for development of Web applications Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Deployed the project into Google Cloud using GIT version control system Built various graphs for business decision making using Python Matplotlib library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla and done error logging using Sentry by Raven Library Performed Unit testing Integration Testing GUI and web application testing using Rspec Planning implementing and converting manual test cases to automation test cases Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Django 18 RabbitMQ Flask MySQL HTMLCSS AJAX JSON JQuery RSpec PHP JavaScript Pandas Bootstrap Google Cloud Beautiful Soup Bugzilla GIT Jenkins Java Developer Innovia Software Mumbai Maharashtra August 2011 to December 2011 IND DescriptionInnovia Software is a Mumbai based company specializing in design development and implementation of software systems Most of the customers are from manufacturing or engineering companies But they have also worked for some wellknown nonmanufacturing companies as well They have their own standard products and also design and develop custom made software systems They are committed to the delivery of value to our customer Responsibilities Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Worked on WebSphere as application deployment servers Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Environment Java 16 17 Java EE 6 JavaScript JQuery Struts Eclipse TOMCAT SQL Developer Oracle Database 11g JDBC Template WebSphere SOAP UI Maven REST Windows Education Bachelors Skills VISUAL STUDIO AMAZON WEB SERVICES DJANGO Git GOOGLE APP ENGINE MySQL Additional Information Operating Systems Windows 982000XP78 Mac OS UNIX and Linux Debian Ubuntu Web Technologies HTMLHTML5 CSSCSS3 XML DOM AJAX jQuery JSON and CSS Bootstrap Frameworks Django Flask Pyramid PyJamas Jython Angular JS Spring Hibernate Python Libraries ReportLabNumpyScipyMatplotlibHTTPLib2 Urllib2Beautiful Soup Pickle Pandas PyIMSL PyTables Cloud Services Amazon Web services Google app Engine Salesforce IDES Sublime Text 2 Vim Pycharm PyDev Netbeans Eclipse Database MySQL SQL Server NoSQLSqlite3 PostgresqlCassandra Redis and mongo DB Web Servers Apache HTTP webserver WebLogic WebSphere JBoss and Apache Tomcat Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL Deployment tools Heroku Amazon EC2 Jenkins and Fabric Protocols TCPIP HTTPHTTPS SOAP REST Version Control Systems CVS SVN Git and GitHub Agile Methodologies TTD SCRUM Other Tools Used SpyderIntelliJIDEABracketsANTBuild SQL Developer Visual Studio Putty",
    "entities": [
        "Python Flask",
        "SQL Server Managed",
        "Rspec Planning",
        "AJAX",
        "DAOS",
        "CVS Good",
        "Raven Library Performed Unit",
        "Jenkins for Test Automation Integrated",
        "AWS Developed",
        "Collaborate",
        "Utilized Cloud",
        "UNIX",
        "XML Oracle DB PostgreSQL PyQtto",
        "HTTP",
        "Interfacing",
        "Design Patterns",
        "Pythontwitter",
        "LAMP Linux",
        "SAN",
        "Google",
        "CSS Bootstrap Frameworks Django Flask",
        "Panda",
        "Responsibilities Worked with Business Architects and Business Analysts",
        "Responsibilities Implemented",
        "XML",
        "Packet Core",
        "SOAP",
        "DHTML",
        "TAAS",
        "PyUnit",
        "SQL Developer Worked on Eclipse",
        "JIRA",
        "Amazon Web Services AWS Developed",
        "Shell",
        "Used Robot Framework",
        "SQL Procedures",
        "Amazon",
        "Wrote Python",
        "HTML CSS JavaScript Ajax JSON",
        "Data ImportExport",
        "Python",
        "WebSphere",
        "Generated",
        "Developer Xbreach Technologies Andhra Pradesh",
        "Pyunit",
        "Test Automation",
        "Developed",
        "golang",
        "CSS Bootstrap",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "MAVEN Involved",
        "GE Health Care",
        "Possess",
        "Django",
        "Oracle Application Server",
        "JS Spring Hibernate Python Libraries ReportLabNumpyScipyMatplotlibHTTPLib2",
        "Python Unit",
        "Microsoft Excel Played",
        "Puppet",
        "Responsibilities Involved",
        "DDL",
        "PHPunit",
        "Tableau Server",
        "PythonPHP",
        "Google CloudJenkins ElasticSearch",
        "Created Data",
        "Python 27",
        "GitHub Agile Methodologies",
        "MySQL Database Created Chef Cookbooks",
        "Flask",
        "OOPS Multithreading Garbage Collections and Collections Experienced",
        "MVC Singleton",
        "Version",
        "SDLC",
        "Google Cloud",
        "EMR",
        "VMWare API",
        "CPU",
        "DOM",
        "Views",
        "PyQt",
        "PyQtto",
        "Oracle Database",
        "Security Vulnerability",
        "MVC",
        "Agile",
        "AWS Direct Connect",
        "Django Curl XML JSON",
        "GIT",
        "DescriptionSecurity Auditing Consulting Portal Development Server Administration Security Training",
        "GE Healthcare",
        "RSpec",
        "G IoT VNS",
        "SIT",
        "HTML CSS JavaScript",
        "Database",
        "PLSQLGolang Work Experience Senior Python Developer GE Healthcare",
        "Digital Product",
        "Functional Component",
        "UAT Expertise",
        "Created",
        "Oracle MySQL PostgreSQL",
        "CA",
        "WAMP Windows Apache",
        "Sentry",
        "Oracle",
        "Ansible Participate",
        "Bootstrap CSS HTML",
        "PyCharm",
        "HTML",
        "Bootstrap RESTful RUBY",
        "Written Struts",
        "SQL",
        "Used Fourier Transform Spectral Analysis Frequency Analysis",
        "TSQL Queries",
        "GitHub",
        "Django Oracle DB PostgreSQL",
        "DML",
        "Bootstrap",
        "lPythonspan",
        "Work with Business Architects and Business Analysts",
        "Python Django",
        "Administrators",
        "Created Data Connections Published",
        "Python Django Flask JAVAJ2EE Technologies Equipped",
        "Wireshark",
        "Big Data",
        "Integration Testing GUI",
        "XML XSLT",
        "Created Restful",
        "WebLogic WebSphere JBoss",
        "Created PHPMySQL",
        "Python Django PHP C XML",
        "Pandas",
        "Parse XML",
        "Mumbai",
        "AJAX Expertise",
        "SQS",
        "Bash Written",
        "PythonPHP Architecture Expertise",
        "golang channels",
        "OLAP",
        "the Inquiry Tool",
        "Djangos",
        "JavaScript",
        "ANT",
        "Django WSGI",
        "Data Layer and Search",
        "Maven REST Windows Education",
        "Django Database",
        "TSQL in Development and Production",
        "Pythonic",
        "Implemented Test Driven Development TDD",
        "Ansible Implemented Integration",
        "Created Chef Cookbooks",
        "Responsibilities Develop",
        "AWS Lambda",
        "REST",
        "the Data Science Watch",
        "MySQL Created",
        "TDD",
        "NoSQL",
        "Tableau",
        "Digital",
        "PHP",
        "Application",
        "REST Version Control Systems",
        "PyTest",
        "Mongo DB",
        "JQuery",
        "Asset Department"
    ],
    "experience": "Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in project deployment using Google CloudJenkins ElasticSearch and using web Services like Amazon Web Services AWS Developed a scalable logging solution in golang that could track custom log outputs to various destinations file stdoutstderr syslog email remote Created a golang script to read data from csv file and publish formatted json data to remote rabbitmq cluster Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQLAlchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Created action filters parameters and calculated sets for preparing dashboards and worksheets in Tableau Installing resolving hardware firmware driver networking SAN data centre operating system PCI RAID and applications on a multitude of server and desktop platforms Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Used ANT scripts to build and deploy code to other environments from Development environment Performed code reviews and implemented best Pythonic programming practices Possess keen business acumen in analysing and understanding business requirements customervalue maximization and developing new business processes Worked on Waterfall to Agile Methodologies Good team player with excellent work history and willingness to go extra mile Exceptional analytical troubleshooting organizational communication prioritization and problem solving and leadership skills with ability to create and sustain high work tempo TECHNICAL CREDENTIALS Programming Languages Python C C Java shell scripting PLSQLGolang Work Experience Senior Python Developer GE Healthcare San Ramon CA January 2018 to Present Description As a leading global medical technology and life sciences company GE Health Care provide a broad portfolio of products solutions and services used in the diagnosis treatment and monitoring of patients and in the development and manufacture of biopharmaceuticals by providing medical technologies digital infrastructure data analytics and decision support tools that help healthcare professionals diagnose treat and monitor their patients Responsibilities Develop moderately complex software in Python and Java consistently following coding standards and in accordance with applicable software development methodology and release processes Work with Business Architects and Business Analysts to understand the business requirements Application developed with Python Flask using Agile methodology Good understanding of the threading limitations of Python and multiprocess architecture Developed entire front end and back end modules using Python on Flask WSGI Pyramid Web Framework Expertise in using OOPS concept all over the project to leverage the code to look well defined Generated statistical measurement and Image Filtering based on selected statistical measure digital image processing Used Fourier Transform Spectral Analysis Frequency Analysis for image manipulation Implement image processing using numpy matplotlib scipy imageio pil low and some other python libraries Create test cases to cover the development work using pytest framework to get the minimum coverage of overall 80 minimum by maintaining the code standards Utilize software engineering tools such as configuration management systems build processes and debuggers in the software development process Improved code reuse and performance by making effective use of various design patterns Collaborate and add value through participation in peer code reviews providing comments and suggestions Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Used Django Database APIs to access database objects Also involved in validating and processing of files Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacenters Elastic Search and AWS Cloud Developed internal auxiliary web apps using Python Flask   framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Participate in product andor application definition activities including feature analysis and system tradeoffs Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch Flask Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Capital One Richmond VA 2016 to December 2017 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Involved in exiting the data centres lifted and shifted to cloud building script for data movement from S3 to EC2 using SQS back and forth using python Developed Nebula datasets registration for keeping the raw data as a backup and worked with Amazon web services EC2 and EMR as a replacement for application servers and various business processes Utilized Cloud watch to monitor resources such as EC2 CPU memory Amazon to design high availability applications on AWS across availability zones Configured Elastic Load Balancers with EC2 Autoscaling groups in AWS Developed dynamic web pages monitoring notification managing Security Vulnerability for infrastructure and application tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Developed tools using Python Shell Scripting and XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Created new database objects like Functions Packages Triggers Indexes and Views using TSQL in Development and Production environment for SQL Server Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information and made connections for the existing databases using SQLAlchemy Used Django Database APIs to access database objects and Developed SQLite and Python script to convert OLAP cube data to relational data extract for business reporting Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Fetched twitter feeds for certain important keyword using Pythontwitter library Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout and used JavaScript to validate all the client side validations Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Created unit tests in golang and facilitated the integration of Jenkins CI environment with github in collaboration with the operations team Developed a concurrent inmemory caching solution using golang channels and a FIFO queue to buffer client request on demand Used Golang to add a feature to an opensource data analytics and monitoring platform called Grafana to support customized alerting contents Worked on migration of existing Java C applications in Python 27 Wrote a Python module to connect and view the status of an Apache Cassandra instance DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Used PyQuery for selecting particular DOM elements when parsing HTML Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per project requirement Implemented Test Driven Development TDD for developing undergoing system Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Used Element Tree XML API in Python to Parse XML documents and load the data in to the database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Jenkins to build and troubleshoot automated testing Developed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Generated Python Django forms to record data of online users and used PyTest for writing test cases and Depended on Ansible for deploying the developing system Version control using GitHub and involved in writing stored procedures using MySQL Environment Python 27 Django 18 PyCharm C JAVA Beautiful Soup Apache Cassandra HTML5 DOM CSS3 AJAX AWSJSON JQuery SQLite Ansible JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQLREST Linux GIT GitHub Senior Python Developer Ericson NJ April 2014 to July 2016 DescriptionThis organisation is to develop the next generation Packet Core load testing framework for the coming needs on 5 G IoT VNS They aim to build TAAS test as a service infrastructure to enable different kinds of simulated networks to support different scenarios and responsible of developing and supporting this infrastructure and deliver test solution service to customers Responsibilities Worked with Business Architects and Business Analysts to understand the business requirements Application developed with Python Django and MySQL using JIRA Agile methodology Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Created Data Connections Published on Tableau Server for usage with Operational or Monitoring Dashboards Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Improved code reuse and performance by making effective use of various design patterns Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on development of SQL and stored procedures for normalization and denormalization in MySQL and used SQLAlchemy for connecting with MySQL Database Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Developed remote integration with third party platforms by using RESTful web services Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Used Django Database APIs to access database objects Also involved in validating and processing of files Used ANT as build tools on Java projects for the development of build artefacts on the source code Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacentres Elastic Search and AWS Cloud Used Wireshark live HTTP headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Developed internal auxiliary web apps using Python Flask   framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Worked on with several python libraries like MatPlotLib PyTest and Selenium Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Skilled in using collections in Python for manipulating and looping through different user defined objects Wrote Python code embedded with JSON and XML to produce HTTP GET request URLlib 2 for parsing HTML data from websites Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Implemented Integration test cases and done Unit testing using PyUnit framework Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch Flask Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Nielsen Tampa FL January 2013 to March 2014 DescriptionNielsen is the largest measurement company in the world with unique measurement technologies assets and data that make it one of the most interesting and challenging places for a data scientist to work Digital Product team provides an opportunity to contribute to methodological innovation in the exciting and fastchanging world of digital media measurement The Digital Product team within the Data Science Watch organization focuses on improving and enhancing Nielsens highly successful products out in the marketplace for digital advertising and content measurement Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Debugged Flash Object to create Functional Component using Wireshark Live HTTP Headers and Fiddle2 Debugging Proxy The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Played a key role in a development wide transition from Subversion to GIT which resulted in an increase in efficiency for the development community Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Written functional PHPunit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Created Restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Generated graphical reports using Python package Numpy and MatPlotLib Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Robot Framework along with integration with Jenkins for Test Automation Integrated the existing project onto Google Cloud which inturn reduced the workload Used REST and SOAP UI for testing web service for server side changes Environment Python27 Django 18 MySQL HTML CSS JavaScript Bootstrap JQuery AJAX Wireshark Fiddler 2 Flash XML Oracle DB PostgreSQL PyQtto MongoDB Robot Google Cloud PyCharm Curl JSON REST SOAP UI Linux Gerrit Jenkins GIT Python Developer Xbreach Technologies Andhra Pradesh IND January 2012 to November 2012 DescriptionSecurity Auditing Consulting Portal Development Server Administration Security Training are the main environments for deploying everything Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Carried out various mathematical operations for calculation purpose using Python libraries Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Develop consumer based features and applications using Python Django HTML   Behaviour Driven Development BDD and pair based programming Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Generated Python Django Forms Crispy forms to record data login and signup of online users Worked on front end frame works like CSS Bootstrap for development of Web applications Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Deployed the project into Google Cloud using GIT version control system Built various graphs for business decision making using Python Matplotlib library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla and done error logging using Sentry by Raven Library Performed Unit testing Integration Testing GUI and web application testing using Rspec Planning implementing and converting manual test cases to automation test cases Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Django 18 RabbitMQ Flask MySQL HTMLCSS AJAX JSON JQuery RSpec PHP JavaScript Pandas Bootstrap Google Cloud Beautiful Soup Bugzilla GIT Jenkins Java Developer Innovia Software Mumbai Maharashtra August 2011 to December 2011 IND DescriptionInnovia Software is a Mumbai based company specializing in design development and implementation of software systems Most of the customers are from manufacturing or engineering companies But they have also worked for some wellknown nonmanufacturing companies as well They have their own standard products and also design and develop custom made software systems They are committed to the delivery of value to our customer Responsibilities Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Worked on WebSphere as application deployment servers Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Environment Java 16 17 Java EE 6 JavaScript JQuery Struts Eclipse TOMCAT SQL Developer Oracle Database 11 g JDBC Template WebSphere SOAP UI Maven REST Windows Education Bachelors Skills VISUAL STUDIO AMAZON WEB SERVICES DJANGO Git GOOGLE APP ENGINE MySQL Additional Information Operating Systems Windows 982000XP78 Mac OS UNIX and Linux Debian Ubuntu Web Technologies HTMLHTML5 CSSCSS3 XML DOM AJAX jQuery JSON and CSS Bootstrap Frameworks Django Flask Pyramid PyJamas Jython Angular JS Spring Hibernate Python Libraries ReportLabNumpyScipyMatplotlibHTTPLib2 Urllib2Beautiful Soup Pickle Pandas PyIMSL PyTables Cloud Services Amazon Web services Google app Engine Salesforce IDES Sublime Text 2 Vim Pycharm PyDev Netbeans Eclipse Database MySQL SQL Server NoSQLSqlite3 PostgresqlCassandra Redis and mongo DB Web Servers Apache HTTP webserver WebLogic WebSphere JBoss and Apache Tomcat Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL Deployment tools Heroku Amazon EC2 Jenkins and Fabric Protocols TCPIP HTTPHTTPS SOAP REST Version Control Systems CVS SVN Git and GitHub Agile Methodologies TTD SCRUM Other Tools Used SpyderIntelliJIDEABracketsANTBuild SQL Developer Visual Studio Putty",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "GE",
        "Healthcare",
        "years",
        "experience",
        "IT",
        "Industry",
        "hands",
        "analysis",
        "design",
        "development",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "Flask",
        "JAVAJ2EE",
        "Technologies",
        "knowledge",
        "softwares",
        "demonstrations",
        "understanding",
        "skill",
        "software",
        "systems",
        "analysis",
        "testing",
        "database",
        "development",
        "modules",
        "solutions",
        "customers",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "networkx",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "Sublime",
        "text",
        "Spyder",
        "Pycharm",
        "Eclipse",
        "Emacs",
        "experience",
        "Python",
        "applications",
        "technologies",
        "Proficient",
        "Web",
        "Services",
        "SOAP",
        "Python",
        "XML",
        "JSON",
        "Data",
        "solutions",
        "platforms",
        "data",
        "analytics",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Expertise",
        "SDLC",
        "models",
        "methods",
        "Scrum",
        "Extreme",
        "Programming",
        "Ticketing",
        "systems",
        "JIRA",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "applications",
        "XML",
        "XSLT",
        "Basic",
        "ASPnet",
        "applications",
        "Core",
        "Java",
        "concepts",
        "Multithreading",
        "Garbage",
        "Collections",
        "Collections",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "MVC3",
        "Bootstrap",
        "RUBY",
        "AJAX",
        "Expertise",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "knowledge",
        "NoSQL",
        "database",
        "MongoDB",
        "experience",
        "web",
        "applications",
        "ModelViewControl",
        "MVC",
        "architecture",
        "server",
        "side",
        "applications",
        "Django",
        "Flask",
        "Pyramid",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "Red",
        "Hat",
        "Linux",
        "Well",
        "Version",
        "control",
        "systems",
        "Git",
        "SVN",
        "CVS",
        "knowledge",
        "strategy",
        "implementation",
        "AWS",
        "technologies",
        "EC2",
        "S3",
        "EBS",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "Django",
        "WSGI",
        "Experience",
        "project",
        "deployment",
        "Google",
        "CloudJenkins",
        "ElasticSearch",
        "web",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "logging",
        "solution",
        "golang",
        "custom",
        "outputs",
        "destinations",
        "file",
        "stdoutstderr",
        "syslog",
        "email",
        "golang",
        "script",
        "data",
        "file",
        "json",
        "data",
        "rabbitmq",
        "cluster",
        "Experience",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "programs",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "strings",
        "SQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Cursor",
        "Packages",
        "DDL",
        "DML",
        "operations",
        "MySQL",
        "PostgreSQL",
        "database",
        "Modified",
        "Stored",
        "Procedures",
        "TSQL",
        "Queries",
        "query",
        "execution",
        "process",
        "knowledge",
        "REST",
        "API",
        "development",
        "idea",
        "tools",
        "Bugzilla",
        "JIRA",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Experience",
        "SQLAlchemy",
        "databases",
        "Mongo",
        "DB",
        "Cassandra",
        "Oracle",
        "MySQL",
        "action",
        "parameters",
        "sets",
        "dashboards",
        "worksheets",
        "Tableau",
        "Installing",
        "hardware",
        "firmware",
        "driver",
        "SAN",
        "data",
        "centre",
        "operating",
        "system",
        "PCI",
        "RAID",
        "applications",
        "multitude",
        "server",
        "desktop",
        "platforms",
        "deployment",
        "tools",
        "Google",
        "Cloud",
        "Jenkins",
        "Ansible",
        "Pylint",
        "cpp",
        "Check",
        "Coverity",
        "Familiarity",
        "development",
        "practices",
        "code",
        "reviews",
        "unit",
        "testing",
        "system",
        "integration",
        "testing",
        "SIT",
        "user",
        "acceptance",
        "testing",
        "UAT",
        "Expertise",
        "Unit",
        "testing",
        "Pyunit",
        "framework",
        "Test",
        "Automation",
        "Robot",
        "Framework",
        "Error",
        "Logging",
        "Sentry",
        "ANT",
        "scripts",
        "code",
        "environments",
        "Development",
        "environment",
        "Performed",
        "code",
        "reviews",
        "programming",
        "practices",
        "business",
        "acumen",
        "business",
        "requirements",
        "customervalue",
        "maximization",
        "business",
        "processes",
        "Waterfall",
        "Agile",
        "Methodologies",
        "team",
        "player",
        "work",
        "history",
        "willingness",
        "mile",
        "troubleshooting",
        "communication",
        "prioritization",
        "problem",
        "leadership",
        "skills",
        "ability",
        "work",
        "tempo",
        "TECHNICAL",
        "CREDENTIALS",
        "Programming",
        "Languages",
        "Python",
        "C",
        "C",
        "Java",
        "shell",
        "PLSQLGolang",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "GE",
        "Healthcare",
        "San",
        "Ramon",
        "CA",
        "January",
        "Present",
        "Description",
        "technology",
        "life",
        "sciences",
        "company",
        "GE",
        "Health",
        "Care",
        "portfolio",
        "products",
        "solutions",
        "services",
        "diagnosis",
        "treatment",
        "monitoring",
        "patients",
        "development",
        "manufacture",
        "biopharmaceuticals",
        "technologies",
        "infrastructure",
        "data",
        "analytics",
        "decision",
        "support",
        "tools",
        "healthcare",
        "professionals",
        "treat",
        "patients",
        "Responsibilities",
        "software",
        "Python",
        "Java",
        "standards",
        "accordance",
        "software",
        "development",
        "methodology",
        "release",
        "processes",
        "Business",
        "Architects",
        "Business",
        "Analysts",
        "business",
        "requirements",
        "Application",
        "Python",
        "Flask",
        "methodology",
        "understanding",
        "threading",
        "limitations",
        "Python",
        "multiprocess",
        "architecture",
        "end",
        "end",
        "modules",
        "Python",
        "Flask",
        "WSGI",
        "Pyramid",
        "Web",
        "Framework",
        "Expertise",
        "concept",
        "project",
        "code",
        "measurement",
        "Image",
        "Filtering",
        "measure",
        "image",
        "processing",
        "Fourier",
        "Transform",
        "Spectral",
        "Analysis",
        "Frequency",
        "Analysis",
        "image",
        "manipulation",
        "Implement",
        "image",
        "processing",
        "numpy",
        "matplotlib",
        "scipy",
        "imageio",
        "pil",
        "low",
        "python",
        "libraries",
        "test",
        "cases",
        "development",
        "work",
        "framework",
        "coverage",
        "minimum",
        "code",
        "standards",
        "Utilize",
        "software",
        "engineering",
        "tools",
        "configuration",
        "management",
        "systems",
        "processes",
        "debuggers",
        "software",
        "development",
        "process",
        "Improved",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "value",
        "participation",
        "peer",
        "code",
        "reviews",
        "comments",
        "suggestions",
        "Created",
        "Chef",
        "Cookbooks",
        "software",
        "plugins",
        "deployments",
        "production",
        "Jenkins",
        "server",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "networking",
        "teams",
        "AWS",
        "Direct",
        "Connect",
        "connection",
        "datacenters",
        "Elastic",
        "Search",
        "AWS",
        "Cloud",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Wrote",
        "Lambda",
        "functions",
        "python",
        "AWS",
        "Lambda",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "EMR",
        "clusters",
        "reports",
        "Development",
        "Manager",
        "design",
        "phase",
        "development",
        "phase",
        "Test",
        "TDD",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Automation",
        "Robot",
        "Framework",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Deployment",
        "main",
        "Participate",
        "product",
        "application",
        "definition",
        "activities",
        "feature",
        "analysis",
        "system",
        "tradeoffs",
        "packages",
        "Mock",
        "Patch",
        "soup",
        "b4",
        "unit",
        "JIRA",
        "issue",
        "tracking",
        "bug",
        "tracking",
        "sprint",
        "pyChecker",
        "tool",
        "bugs",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "PyCharm",
        "WSGIGit",
        "ElasticSearch",
        "Flask",
        "Linux",
        "JSON",
        "JQuery",
        "HTML",
        "XMLCSS",
        "REST",
        "JIRA",
        "Bootstrap",
        "AJAX",
        "ANT",
        "Soup",
        "Agile",
        "GitHub",
        "PyUnit",
        "SQLAlchemy",
        "Ansible",
        "Tableau",
        "SQL",
        "Developer",
        "Robot",
        "Jenkins",
        "Chef",
        "Selenium",
        "Senior",
        "Python",
        "Developer",
        "Capital",
        "Richmond",
        "VA",
        "December",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "data",
        "centres",
        "building",
        "script",
        "data",
        "movement",
        "S3",
        "EC2",
        "SQS",
        "python",
        "Developed",
        "Nebula",
        "datasets",
        "registration",
        "data",
        "backup",
        "Amazon",
        "web",
        "services",
        "EC2",
        "EMR",
        "replacement",
        "application",
        "servers",
        "business",
        "processes",
        "Cloud",
        "resources",
        "EC2",
        "CPU",
        "memory",
        "Amazon",
        "availability",
        "applications",
        "AWS",
        "availability",
        "zones",
        "Configured",
        "Elastic",
        "Load",
        "Balancers",
        "EC2",
        "Autoscaling",
        "groups",
        "AWS",
        "web",
        "pages",
        "notification",
        "Security",
        "Vulnerability",
        "infrastructure",
        "application",
        "tools",
        "Python",
        "Django",
        "Pyramid",
        "Frameworks",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "tools",
        "Python",
        "Shell",
        "Scripting",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "database",
        "Functions",
        "Packages",
        "Triggers",
        "Indexes",
        "Views",
        "TSQL",
        "Development",
        "Production",
        "environment",
        "SQL",
        "Server",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "connections",
        "databases",
        "SQLAlchemy",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "SQLite",
        "Python",
        "script",
        "OLAP",
        "cube",
        "data",
        "data",
        "extract",
        "business",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "Fetched",
        "twitter",
        "keyword",
        "Pythontwitter",
        "library",
        "Bootstrap",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "JavaScript",
        "client",
        "side",
        "validations",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "unit",
        "tests",
        "golang",
        "integration",
        "Jenkins",
        "CI",
        "environment",
        "github",
        "collaboration",
        "operations",
        "team",
        "inmemory",
        "solution",
        "golang",
        "channels",
        "queue",
        "client",
        "request",
        "demand",
        "Golang",
        "feature",
        "data",
        "analytics",
        "platform",
        "Grafana",
        "contents",
        "migration",
        "Java",
        "C",
        "applications",
        "Python",
        "Python",
        "module",
        "status",
        "Apache",
        "Cassandra",
        "instance",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "file",
        "formats",
        "XML",
        "JSON",
        "Oracle",
        "database",
        "Python",
        "XML",
        "modules",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "change",
        "requests",
        "user",
        "server",
        "configuration",
        "kernel",
        "software",
        "installation",
        "OS",
        "Linux",
        "VMs",
        "Puppet",
        "project",
        "requirement",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "system",
        "user",
        "interface",
        "solutions",
        "Django",
        "Pyramid",
        "web",
        "framework",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Element",
        "Tree",
        "XML",
        "API",
        "Python",
        "Parse",
        "XML",
        "documents",
        "data",
        "database",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "Jenkins",
        "testing",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "Ansible",
        "system",
        "Version",
        "control",
        "GitHub",
        "procedures",
        "MySQL",
        "Environment",
        "Python",
        "Django",
        "PyCharm",
        "C",
        "Beautiful",
        "Soup",
        "Apache",
        "Cassandra",
        "HTML5",
        "DOM",
        "CSS3",
        "AJAX",
        "AWSJSON",
        "JQuery",
        "SQLite",
        "Ansible",
        "JavaScript",
        "MySQL",
        "FTPlib",
        "Mongo",
        "DB",
        "PostgreSQL",
        "Puppet",
        "Jenkins",
        "Panda",
        "XML",
        "SQLAlchemy",
        "TSQLREST",
        "Linux",
        "GIT",
        "GitHub",
        "Senior",
        "Python",
        "Developer",
        "Ericson",
        "NJ",
        "April",
        "July",
        "DescriptionThis",
        "organisation",
        "generation",
        "Packet",
        "Core",
        "load",
        "testing",
        "framework",
        "needs",
        "G",
        "IoT",
        "VNS",
        "test",
        "service",
        "infrastructure",
        "kinds",
        "networks",
        "scenarios",
        "infrastructure",
        "test",
        "solution",
        "service",
        "customers",
        "Responsibilities",
        "Business",
        "Architects",
        "Business",
        "Analysts",
        "business",
        "requirements",
        "Application",
        "Python",
        "Django",
        "MySQL",
        "JIRA",
        "Agile",
        "methodology",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Created",
        "Data",
        "Connections",
        "Tableau",
        "Server",
        "usage",
        "Monitoring",
        "Dashboards",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "WSGI",
        "Pyramid",
        "Web",
        "Framework",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "denormalization",
        "MySQL",
        "SQLAlchemy",
        "MySQL",
        "Database",
        "Created",
        "Chef",
        "Cookbooks",
        "software",
        "plugins",
        "deployments",
        "production",
        "Jenkins",
        "server",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "user",
        "interfaces",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "JQuery",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "ANT",
        "build",
        "tools",
        "Java",
        "projects",
        "development",
        "build",
        "artefacts",
        "source",
        "code",
        "networking",
        "teams",
        "AWS",
        "Direct",
        "Connect",
        "connection",
        "datacentres",
        "Elastic",
        "Search",
        "AWS",
        "Cloud",
        "Wireshark",
        "HTTP",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "python",
        "libraries",
        "MatPlotLib",
        "PyTest",
        "Selenium",
        "Wrote",
        "Lambda",
        "functions",
        "python",
        "AWS",
        "Lambda",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "EMR",
        "clusters",
        "file",
        "formats",
        "XML",
        "JSON",
        "Oracle",
        "database",
        "Python",
        "XML",
        "JSON",
        "modules",
        "collections",
        "Python",
        "user",
        "objects",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "URLlib",
        "HTML",
        "data",
        "websites",
        "reports",
        "Development",
        "Manager",
        "design",
        "phase",
        "development",
        "phase",
        "Test",
        "TDD",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Automation",
        "Robot",
        "Framework",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Deployment",
        "main",
        "Ansible",
        "Implemented",
        "Integration",
        "test",
        "cases",
        "Unit",
        "testing",
        "PyUnit",
        "framework",
        "packages",
        "Mock",
        "Patch",
        "soup",
        "b4",
        "unit",
        "JIRA",
        "issue",
        "tracking",
        "bug",
        "tracking",
        "sprint",
        "pyChecker",
        "tool",
        "bugs",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "PyCharm",
        "WSGIGit",
        "ElasticSearch",
        "Flask",
        "Linux",
        "JSON",
        "JQuery",
        "HTML",
        "XMLCSS",
        "REST",
        "JIRA",
        "Bootstrap",
        "AJAX",
        "ANT",
        "Soup",
        "Agile",
        "GitHub",
        "PyUnit",
        "SQLAlchemy",
        "Ansible",
        "Tableau",
        "SQL",
        "Developer",
        "Robot",
        "Jenkins",
        "Chef",
        "Selenium",
        "Senior",
        "Python",
        "Developer",
        "Nielsen",
        "Tampa",
        "FL",
        "January",
        "March",
        "DescriptionNielsen",
        "measurement",
        "company",
        "world",
        "measurement",
        "technologies",
        "assets",
        "data",
        "places",
        "data",
        "scientist",
        "Digital",
        "Product",
        "team",
        "opportunity",
        "innovation",
        "world",
        "media",
        "measurement",
        "Digital",
        "Product",
        "team",
        "Data",
        "Science",
        "Watch",
        "organization",
        "Nielsens",
        "products",
        "marketplace",
        "advertising",
        "content",
        "measurement",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Designed",
        "MYSQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "Flash",
        "Object",
        "Functional",
        "Component",
        "Wireshark",
        "Live",
        "HTTP",
        "Headers",
        "Fiddle2",
        "Proxy",
        "PHP",
        "page",
        "data",
        "AJAX",
        "data",
        "page",
        "data",
        "csv",
        "Microsoft",
        "Excel",
        "role",
        "development",
        "transition",
        "Subversion",
        "GIT",
        "increase",
        "efficiency",
        "development",
        "community",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Developed",
        "integration",
        "system",
        "GIT",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Written",
        "PHPunit",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "reports",
        "Python",
        "package",
        "Numpy",
        "MatPlotLib",
        "Data",
        "tables",
        "PyQtto",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Robot",
        "Framework",
        "integration",
        "Jenkins",
        "Test",
        "Automation",
        "project",
        "Google",
        "Cloud",
        "inturn",
        "workload",
        "REST",
        "UI",
        "testing",
        "web",
        "service",
        "server",
        "side",
        "changes",
        "Environment",
        "Python27",
        "Django",
        "MySQL",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "AJAX",
        "Wireshark",
        "Fiddler",
        "Flash",
        "XML",
        "Oracle",
        "DB",
        "PostgreSQL",
        "PyQtto",
        "MongoDB",
        "Robot",
        "Google",
        "Cloud",
        "PyCharm",
        "Curl",
        "REST",
        "SOAP",
        "UI",
        "Linux",
        "Gerrit",
        "Jenkins",
        "GIT",
        "Python",
        "Developer",
        "Xbreach",
        "Technologies",
        "Andhra",
        "Pradesh",
        "IND",
        "January",
        "November",
        "DescriptionSecurity",
        "Auditing",
        "Consulting",
        "Portal",
        "Development",
        "Server",
        "Administration",
        "Security",
        "Training",
        "environments",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "Python",
        "Django",
        "Forms",
        "Crispy",
        "forms",
        "data",
        "login",
        "users",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "framework",
        "response",
        "user",
        "request",
        "JavaScript",
        "validation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "user",
        "experience",
        "project",
        "Google",
        "Cloud",
        "GIT",
        "version",
        "control",
        "system",
        "graphs",
        "business",
        "decision",
        "Python",
        "Matplotlib",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "error",
        "Sentry",
        "Raven",
        "Library",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "Environment",
        "Python",
        "Django",
        "RabbitMQ",
        "Flask",
        "MySQL",
        "HTMLCSS",
        "AJAX",
        "JSON",
        "JQuery",
        "RSpec",
        "PHP",
        "JavaScript",
        "Pandas",
        "Bootstrap",
        "Google",
        "Cloud",
        "Beautiful",
        "Soup",
        "Bugzilla",
        "GIT",
        "Jenkins",
        "Java",
        "Developer",
        "Innovia",
        "Software",
        "Mumbai",
        "Maharashtra",
        "August",
        "December",
        "IND",
        "DescriptionInnovia",
        "Software",
        "Mumbai",
        "company",
        "design",
        "development",
        "implementation",
        "software",
        "systems",
        "customers",
        "manufacturing",
        "engineering",
        "companies",
        "wellknown",
        "nonmanufacturing",
        "companies",
        "products",
        "custom",
        "software",
        "systems",
        "delivery",
        "value",
        "customer",
        "Responsibilities",
        "development",
        "Java",
        "concepts",
        "Collections",
        "Exception",
        "Handling",
        "MultiThreading",
        "MVC",
        "pattern",
        "frameworks",
        "WebSphere",
        "application",
        "deployment",
        "servers",
        "methods",
        "development",
        "delivery",
        "solution",
        "life",
        "cycle",
        "project",
        "SDLC",
        "Database",
        "triggers",
        "procedures",
        "screens",
        "JQuery",
        "HTML",
        "ad",
        "display",
        "data",
        "client",
        "side",
        "Written",
        "Struts",
        "services",
        "DAOS",
        "service",
        "layer",
        "SQL",
        "data",
        "retrieval",
        "operations",
        "JDBC",
        "Demonstrated",
        "Experience",
        "testdriven",
        "development",
        "JavaScript",
        "frame",
        "work",
        "augment",
        "browser",
        "applications",
        "MVC",
        "capability",
        "frontend",
        "application",
        "development",
        "functionalities",
        "services",
        "use",
        "cases",
        "development",
        "controller",
        "classes",
        "part",
        "MVC",
        "framework",
        "data",
        "service",
        "module",
        "databases",
        "JDBC",
        "REST",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "Worked",
        "Database",
        "Schemas",
        "HTML",
        "XML",
        "services",
        "Oracle",
        "Database",
        "information",
        "SQL",
        "Developer",
        "Eclipse",
        "IDEs",
        "build",
        "debugging",
        "Apache",
        "Tomcat",
        "Build",
        "Script",
        "MAVEN",
        "unit",
        "testing",
        "test",
        "cases",
        "Environment",
        "Java",
        "Java",
        "EE",
        "JavaScript",
        "JQuery",
        "Struts",
        "Eclipse",
        "TOMCAT",
        "SQL",
        "Developer",
        "Oracle",
        "Database",
        "g",
        "JDBC",
        "Template",
        "WebSphere",
        "SOAP",
        "UI",
        "Maven",
        "REST",
        "Windows",
        "Education",
        "Bachelors",
        "Skills",
        "VISUAL",
        "STUDIO",
        "AMAZON",
        "WEB",
        "SERVICES",
        "DJANGO",
        "Git",
        "GOOGLE",
        "APP",
        "ENGINE",
        "MySQL",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Windows",
        "982000XP78",
        "Mac",
        "OS",
        "UNIX",
        "Linux",
        "Debian",
        "Ubuntu",
        "Web",
        "Technologies",
        "HTMLHTML5",
        "CSSCSS3",
        "XML",
        "DOM",
        "AJAX",
        "jQuery",
        "JSON",
        "CSS",
        "Bootstrap",
        "Frameworks",
        "Django",
        "Flask",
        "Pyramid",
        "PyJamas",
        "Jython",
        "JS",
        "Spring",
        "Hibernate",
        "Python",
        "ReportLabNumpyScipyMatplotlibHTTPLib2",
        "Urllib2Beautiful",
        "Soup",
        "Pickle",
        "Pandas",
        "PyIMSL",
        "PyTables",
        "Cloud",
        "Services",
        "Amazon",
        "Web",
        "services",
        "Google",
        "app",
        "Engine",
        "Salesforce",
        "IDES",
        "Sublime",
        "Text",
        "Vim",
        "Pycharm",
        "PyDev",
        "Netbeans",
        "Eclipse",
        "Database",
        "MySQL",
        "SQL",
        "Server",
        "NoSQLSqlite3",
        "PostgresqlCassandra",
        "Redis",
        "mongo",
        "DB",
        "Web",
        "Servers",
        "Apache",
        "HTTP",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "Apache",
        "Tomcat",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "NodeXL",
        "Deployment",
        "tools",
        "Heroku",
        "Amazon",
        "EC2",
        "Jenkins",
        "Fabric",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "REST",
        "Version",
        "Control",
        "Systems",
        "CVS",
        "SVN",
        "Git",
        "GitHub",
        "Agile",
        "Methodologies",
        "TTD",
        "Tools",
        "SpyderIntelliJIDEABracketsANTBuild",
        "SQL",
        "Developer",
        "Visual",
        "Studio",
        "Putty"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:08:06.327909",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer GE Healthcare Around 7 years of professional experience in IT Industry with strong hands on analysis design and development of enterprise applications using Python Django Flask JAVAJ2EE Technologies Equipped with the knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Strong experience of software development in Python libraries used Beautiful Soup Numpy Scipy Matplotlib pythontwitter Pandas data frame networkx urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder Pycharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies Proficient in developing Web Services SOAP RESTful in Python using XML JSON Driven to architect Big Data solutions on multiple platforms using data analytics Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in practicing the SDLC models agile methods with Scrum Extreme Programming Ticketing systems using JIRA and Test Driven Development TDD Developed JavaJ2ee applications using XML XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collections Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript JQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Good experience in developing web applications and implementing ModelViewControl MVC architecture using server side applications like Django Flask Web2Py and Pyramid Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Well versed with Version control systems such as Git SVN and CVS Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in project deployment using Google CloudJenkins ElasticSearch and using web Services like Amazon Web Services AWS Developed a scalable logging solution in golang that could track custom log outputs to various destinations file stdoutstderr syslog email remote Created a golang script to read data from csv file and publish formatted json data to remote rabbitmq cluster Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQLAlchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Created action filters parameters and calculated sets for preparing dashboards and worksheets in Tableau Installing resolving hardware firmware driver networking SAN data centre operating system PCI RAID and applications on a multitude of server and desktop platforms Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Used ANT scripts to build and deploy code to other environments from Development environment Performed code reviews and implemented best Pythonic programming practices Possess keen business acumen in analysing and understanding business requirements customervalue maximization and developing new business processes Worked on Waterfall to Agile Methodologies Good team player with excellent work history and willingness to go extra mile Exceptional analytical troubleshooting organizational communication prioritization and problem solving and leadership skills with ability to create and sustain high work tempo TECHNICAL CREDENTIALS Programming Languages Python C C Java shell scripting PLSQLGolang Work Experience Senior Python Developer GE Healthcare San Ramon CA January 2018 to Present Description As a leading global medical technology and life sciences company GE Health Care provide a broad portfolio of products solutions and services used in the diagnosis treatment and monitoring of patients and in the development and manufacture of biopharmaceuticals by providing medical technologies digital infrastructure data analytics and decision support tools that help healthcare professionals diagnose treat and monitor their patients Responsibilities Develop moderately complex software in Python and Java consistently following coding standards and in accordance with applicable software development methodology and release processes Work with Business Architects and Business Analysts to understand the business requirements Application developed with Python Flask using Agile methodology Good understanding of the threading limitations of Python and multiprocess architecture Developed entire front end and back end modules using Python on Flask WSGI Pyramid Web Framework Expertise in using OOPS concept all over the project to leverage the code to look well defined Generated statistical measurement and Image Filtering based on selected statistical measure digital image processing Used Fourier Transform Spectral Analysis Frequency Analysis for image manipulation Implement image processing using numpy matplotlib scipy imageio pil low and some other python libraries Create test cases to cover the development work using pytest framework to get the minimum coverage of overall 80 minimum by maintaining the code standards Utilize software engineering tools such as configuration management systems build processes and debuggers in the software development process Improved code reuse and performance by making effective use of various design patterns Collaborate and add value through participation in peer code reviews providing comments and suggestions Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Used Django Database APIs to access database objects Also involved in validating and processing of files Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacenters Elastic Search and AWS Cloud Developed internal auxiliary web apps using Python Flask Web2Py framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Participate in product andor application definition activities including feature analysis and system tradeoffs Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch FlaskWeb2Py Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Capital One Richmond VA 2016 to December 2017 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Involved in exiting the data centres lifted and shifted to cloud building script for data movement from S3 to EC2 using SQS back and forth using python Developed Nebula datasets registration for keeping the raw data as a backup and worked with Amazon web services EC2 and EMR as a replacement for application servers and various business processes Utilized Cloud watch to monitor resources such as EC2 CPU memory Amazon to design high availability applications on AWS across availability zones Configured Elastic Load Balancers with EC2 Autoscaling groups in AWS Developed dynamic web pages monitoring notification managing Security Vulnerability for infrastructure and application tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Developed tools using Python Shell Scripting and XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Created new database objects like Functions Packages Triggers Indexes and Views using TSQL in Development and Production environment for SQL Server Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information and made connections for the existing databases using SQLAlchemy Used Django Database APIs to access database objects and Developed SQLite and Python script to convert OLAP cube data to relational data extract for business reporting Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery and worked on backend of the application mainly using Active Records Fetched twitter feeds for certain important keyword using Pythontwitter library Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout and used JavaScript to validate all the client side validations Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Created unit tests in golang and facilitated the integration of Jenkins CI environment with github in collaboration with the operations team Developed a concurrent inmemory caching solution using golang channels and a FIFO queue to buffer client request on demand Used Golang to add a feature to an opensource data analytics and monitoring platform called Grafana to support customized alerting contents Worked on migration of existing Java C applications in Python 27 Wrote a Python module to connect and view the status of an Apache Cassandra instance DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Used PyQuery for selecting particular DOM elements when parsing HTML Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per project requirement Implemented Test Driven Development TDD for developing undergoing system Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Used Element Tree XML API in Python to Parse XML documents and load the data in to the database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Jenkins to build and troubleshoot automated testing Developed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Generated Python Django forms to record data of online users and used PyTest for writing test cases and Depended on Ansible for deploying the developing system Version control using GitHub and involved in writing stored procedures using MySQL Environment Python 27 Django 18 PyCharm C JAVA Beautiful Soup Apache Cassandra HTML5 DOM CSS3 AJAX AWSJSON JQuery SQLite Ansible JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQLREST Linux GIT GitHub Senior Python Developer Ericson NJ April 2014 to July 2016 DescriptionThis organisation is to develop the next generation Packet Core load testing framework for the coming needs on 5G IoT VNS They aim to build TAAS test as a service infrastructure to enable different kinds of simulated networks to support different scenarios and responsible of developing and supporting this infrastructure and deliver test solution service to customers Responsibilities Worked with Business Architects and Business Analysts to understand the business requirements Application developed with Python Django and MySQL using JIRA Agile methodology Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Created Data Connections Published on Tableau Server for usage with Operational or Monitoring Dashboards Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Improved code reuse and performance by making effective use of various design patterns Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on development of SQL and stored procedures for normalization and denormalization in MySQL and used SQLAlchemy for connecting with MySQL Database Created Chef Cookbooks to deploy new software and plugins as well as manage deployments to the production Jenkins server Developed remote integration with third party platforms by using RESTful web services Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Used Django Database APIs to access database objects Also involved in validating and processing of files Used ANT as build tools on Java projects for the development of build artefacts on the source code Worked with networking teams in configuring AWS Direct Connect to establish dedicated connection to datacentres Elastic Search and AWS Cloud Used Wireshark live HTTP headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Developed internal auxiliary web apps using Python Flask Web2Py framework along with Bootstrap CSS HTML framework Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Worked on with several python libraries like MatPlotLib PyTest and Selenium Wrote Lambda functions in python for AWS Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Parsed various file formats including XML and JSON and loaded into Oracle database with Python XML and JSON modules Skilled in using collections in Python for manipulating and looping through different user defined objects Wrote Python code embedded with JSON and XML to produce HTTP GET request URLlib 2 for parsing HTML data from websites Providing daily reports to the Development Manager and participate in both the design phase and the development phase Used Test driven TDD approach for developing the application and Implemented the unit tests using Python Unit test framework and for Automation used Robot Framework Followed AGILE development methodology to develop the application and During Deployment main worked through Ansible Implemented Integration test cases and done Unit testing using PyUnit framework Used advanced packages like Mock Patch and Beautiful soup b4 to perform unit testing Used JIRA for issue tracking and bug tracking for each individual sprint and used pyChecker tool to fix bugs Environment Python 34 Django 18 MySQL PyCharm WSGIGit ElasticSearch FlaskWeb2Py Linux Windows JSON JQuery HTML XMLCSS REST JIRA Bootstrap AJAX AWS ANT JavaScriptBeautiful Soup Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef Selenium Senior Python Developer Nielsen Tampa FL January 2013 to March 2014 DescriptionNielsen is the largest measurement company in the world with unique measurement technologies assets and data that make it one of the most interesting and challenging places for a data scientist to work Digital Product team provides an opportunity to contribute to methodological innovation in the exciting and fastchanging world of digital media measurement The Digital Product team within the Data Science Watch organization focuses on improving and enhancing Nielsens highly successful products out in the marketplace for digital advertising and content measurement Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Debugged Flash Object to create Functional Component using Wireshark Live HTTP Headers and Fiddle2 Debugging Proxy The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Played a key role in a development wide transition from Subversion to GIT which resulted in an increase in efficiency for the development community Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Written functional PHPunit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Created Restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Generated graphical reports using Python package Numpy and MatPlotLib Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Robot Framework along with integration with Jenkins for Test Automation Integrated the existing project onto Google Cloud which inturn reduced the workload Used REST and SOAP UI for testing web service for server side changes Environment Python27 Django 18 MySQL HTML CSS JavaScript Bootstrap JQuery AJAX Wireshark Fiddler 2 Flash XML Oracle DB PostgreSQL PyQtto MongoDB Robot Google Cloud PyCharm Curl JSON REST SOAP UI Linux Gerrit Jenkins GIT Python Developer Xbreach Technologies Andhra Pradesh IND January 2012 to November 2012 DescriptionSecurity Auditing Consulting Portal Development Server Administration Security Training are the main environments for deploying everything Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Carried out various mathematical operations for calculation purpose using Python libraries Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Develop consumer based features and applications using Python Django HTML Web2Py Behaviour Driven Development BDD and pair based programming Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Generated Python Django Forms Crispy forms to record data login and signup of online users Worked on front end frame works like CSS Bootstrap for development of Web applications Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Deployed the project into Google Cloud using GIT version control system Built various graphs for business decision making using Python Matplotlib library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla and done error logging using Sentry by Raven Library Performed Unit testing Integration Testing GUI and web application testing using Rspec Planning implementing and converting manual test cases to automation test cases Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Django 18 RabbitMQ FlaskWeb2Py MySQL HTMLCSS AJAX JSON JQuery RSpec PHP JavaScript Pandas Bootstrap Google Cloud Beautiful Soup Bugzilla GIT Jenkins Java Developer Innovia Software Mumbai Maharashtra August 2011 to December 2011 IND DescriptionInnovia Software is a Mumbai based company specializing in design development and implementation of software systems Most of the customers are from manufacturing or engineering companies But they have also worked for some wellknown nonmanufacturing companies as well They have their own standard products and also design and develop custom made software systems They are committed to the delivery of value to our customer Responsibilities Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Worked on WebSphere as application deployment servers Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Environment Java 16 17 Java EE 6 JavaScript JQuery Struts Eclipse TOMCAT SQL Developer Oracle Database 11g JDBC Template WebSphere SOAP UI Maven REST Windows Education Bachelors Skills VISUAL STUDIO AMAZON WEB SERVICES DJANGO Git GOOGLE APP ENGINE MySQL Additional Information Operating Systems Windows 982000XP78 Mac OS UNIX and Linux Debian Ubuntu Web Technologies HTMLHTML5 CSSCSS3 XML DOM AJAX jQuery JSON and CSS Bootstrap Frameworks Django Flask Pyramid PyJamas Jython Angular JS Spring Hibernate Python Libraries ReportLabNumpyScipyMatplotlibHTTPLib2 Urllib2Beautiful Soup Pickle Pandas PyIMSL PyTables Cloud Services Amazon Web services Google app Engine Salesforce IDES Sublime Text 2 Vim Pycharm PyDev Netbeans Eclipse Database MySQL SQL Server NoSQLSqlite3 PostgresqlCassandra Redis and mongo DB Web Servers Apache HTTP webserver WebLogic WebSphere JBoss and Apache Tomcat Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL Deployment tools Heroku Amazon EC2 Jenkins and Fabric Protocols TCPIP HTTPHTTPS SOAP REST Version Control Systems CVS SVN Git and GitHub Agile Methodologies TTD SCRUM Other Tools Used SpyderIntelliJIDEABracketsANTBuild SQL Developer Visual Studio Putty",
    "unique_id": "1968fc4f-d0d4-4635-b54a-6370696935fd"
}