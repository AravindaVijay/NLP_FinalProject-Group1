{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Cerner Corporation Kansas City MO MO Around 4 years of experience in the IT industry with diversified exposure in Software Process Engineering designing building and testing a Web Application using JavaJ2EE technology Expertise in developing Web based distributed and Frontend applications in a threetier architecture using Java J2EE HTML CSS JavaScript Ajax JSP jQuery and Angular JS Expertise in serverside development with JDBC JNDI Servlets spring frameworks like MVC architecture spring boot etc Proficient in working on various Spring modules Spring Core Spring IOC Spring MVC Spring DAO Spring Boot and AOP Batch cloud security along with Hibernate and JPA as the backend ORM tool for implementation of persistence layer and mapping of POJOs Strong experience on Hibernate and in using Hibernate Connection Pooling HQL Collections Hibernate Caching etc Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts Good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Built and managed policies for S3 buckets used S3 bucket and glacier for storage and backup on AWS Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in database related work primarily creating complex stored procedures Views Triggers Functions using PLSQL Experience with messaging frameworks like ActiveMQ RabbitMQ Kafka Experience in Integration of Amazon Web Services AWS with other applications infrastructure Strong database skills in Oracle 12c DB2 My SQL and MS SQL Server MySQL MongoDB Experienced in working in AGILE based development environment and participating in Scrum sessions Strong experience with Junit and Mockito in performing unit tests of the applications Performed test driven development for JavaScript with Angular Js with mocha and chai test cases Excellent communication and Strong team player and effective individual with an ability to adapt to new technologies quickly Work Experience Full Stack Java Developer Cerner Corporation Kansas City MO October 2017 to Present Kansas City MO Responsibilities Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Integrated Nodejs with Hapijs and communicated with Mongo  for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Extensively used ES6 to create components in REACT Enhanced the customer search experience by developing searchable components with Splunk Performed CRUD operations like Create Update Insert and Delete data in Mongo Worked on Mongo  database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Java Developer Mc Donalds Corporation Chicago IL January 2016 to September 2017 Responsibilities Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Java Developer Frost Bank San Antonio TX September 2014 to November 2015 Responsibilities Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Education Masters Skills WEB SERVICES 4 years API 3 years HTML5 3 years JAVA 2 years MODEL VIEW CONTROLLER 2 years Java 3 years Javascript 3 years Html 3 years Multithreading 3 years Jsp 3 years Servlet 3 years Applet 3 years Java Beans 3 years Tag Libraries 3 years Groovy 3 years ApacheTomcat 4 years Web Logic 3 years Web Services 3 years Jira 3 years JUnit 3 years Windows 4 years Unix 3 years Linux 3 years Restful 3 years Additional Information Technical Summary Programming Languages Java J2EE HTML5 PLSQL Java Technologies Collections Multithreading AWT Exception Handling J2EE Technologies JSP Servlets Applet JDBC Java Beans Tag Libraries Groovy Web Servers ApacheTomcat 5x6x n JBuilder Application Servers Web Logic Tomcat JBoss WebSphere Markup Scripting Lang Java Script HTML 5 Framework Spring 322 Struts 2312 Spring MVC Spring Core JMS GUI and Proto type Tools AWT JSP CSS IDETools Eclipse RAD Net Beans Visual Studio ANT JIRA XML Technologies XML XSL DTDSchema DOMSAX API JAXB Databases and Tools Oracle MYSQL SQL Server MS Access ORM Tool Hibernate 30 Cassandra Web Service Technologies Web Services JAXWS JAXRS Apache CXF SOAP RESTful Testing Bug Fix Tools JUNIT Clear Quest Operating Systems Windows UNIX Linux Design MethodologyTools UML Object Oriented Analysis and Design J2EE Design Patterns Deployment Build Tool Apache Ant 19 Apache Maven 221 SourceVersion Control Dimensions ClearCase SVN GIT VSS Documentation Tool Microsoft Word 2007 Microsoft Visio Open Office Cloud Technologies AWS EC2 S3 Automation testing Cucumber Selenium",
    "entities": [
        "Micro Services",
        "User Interactive UI",
        "Angular",
        "Nodejs",
        "Oracle Worked",
        "Java Technologies Collections",
        "Struts MVC Architecture",
        "HTTP",
        "User Interfaces",
        "Software Process Engineering",
        "Integration of Amazon Web Services AWS",
        "Present Kansas City",
        "Amazon Web Services AWS",
        "Node Package",
        "TestDriven Development TDD",
        "the Business Requirement Specification",
        "Ajax",
        "Design Development Testing and Implementation of the project",
        "Create Update Insert",
        "XML",
        "Spring Core",
        "React JS Components Forms",
        "Integrated Nodejs",
        "Nodejs Worked",
        "JAXWS",
        "Java Developer Frost Bank",
        "RESTFUL SOAP Implemented XML",
        "Kansas City",
        "MVC Singleton Session Facade Factory Abstract Factory Service",
        "Amazon ECS Designed",
        "JavaJ2EE",
        "Amazon",
        "ServerSide",
        "TX",
        "Spring Boot",
        "Spring Boot framework Deployed",
        "SQL Server",
        "Mongo",
        "Developed",
        "MVP Singleton",
        "JPA",
        "Mockito",
        "Views Triggers Functions",
        "Semantic HTML REST API",
        "Hibernate Used Spring Boot",
        "AGILE",
        "San Antonio",
        "SPRING Controllers",
        "Linux",
        "JSP",
        "Collections and Garbage Collection Built",
        "HibernateJDBC",
        "ObjectOriented",
        "JAXP SAX DOM",
        "Database Design Creation",
        "Docker",
        "GITHUB",
        "J2EE Technologies JSP Servlets",
        "MVC",
        "Nodejs Hapijs",
        "Lambda Web Services",
        "HTML CSS",
        "API",
        "Developed Microservices",
        "AWS",
        "Oracle",
        "JSF",
        "IBM WebSphere Hands",
        "RESTFUL",
        "SQL",
        "DML",
        "the Java Objects Designed",
        "the User Interfaces",
        "MO",
        "CI",
        "Schemas",
        "My SQL SQL Server",
        "CRUD",
        "JavaScript Created",
        "Maven",
        "Performed",
        "lJavaspan",
        "Hapijs",
        "Proto",
        "Includes",
        "JSON Created",
        "SourceVersion Control Dimensions",
        "Selenium",
        "Microsoft",
        "Delete",
        "the DAO Layer",
        "Microsoft Visio Open Office Cloud Technologies AWS",
        "SVN",
        "Expertise",
        "JDBC JNDI Servlets",
        "HTML5 CSS3",
        "REST",
        "Implemented Angular",
        "WebLogic Application Server",
        "Responsive Web Design RWD",
        "Additional Information Technical Summary Programming Languages",
        "CICD Education Masters Skills WEB SERVICES"
    ],
    "experience": "Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts Good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Built and managed policies for S3 buckets used S3 bucket and glacier for storage and backup on AWS Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in database related work primarily creating complex stored procedures Views Triggers Functions using PLSQL Experience with messaging frameworks like ActiveMQ RabbitMQ Kafka Experience in Integration of Amazon Web Services AWS with other applications infrastructure Strong database skills in Oracle 12c DB2 My SQL and MS SQL Server MySQL MongoDB Experienced in working in AGILE based development environment and participating in Scrum sessions Strong experience with Junit and Mockito in performing unit tests of the applications Performed test driven development for JavaScript with Angular Js with mocha and chai test cases Excellent communication and Strong team player and effective individual with an ability to adapt to new technologies quickly Work Experience Full Stack Java Developer Cerner Corporation Kansas City MO October 2017 to Present Kansas City MO Responsibilities Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Integrated Nodejs with Hapijs and communicated with Mongo   for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Extensively used ES6 to create components in REACT Enhanced the customer search experience by developing searchable components with Splunk Performed CRUD operations like Create Update Insert and Delete data in Mongo Worked on Mongo   database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Java Developer Mc Donalds Corporation Chicago IL January 2016 to September 2017 Responsibilities Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Java Developer Frost Bank San Antonio TX September 2014 to November 2015 Responsibilities Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Education Masters Skills WEB SERVICES 4 years API 3 years HTML5 3 years JAVA 2 years MODEL VIEW CONTROLLER 2 years Java 3 years Javascript 3 years Html 3 years Multithreading 3 years Jsp 3 years Servlet 3 years Applet 3 years Java Beans 3 years Tag Libraries 3 years Groovy 3 years ApacheTomcat 4 years Web Logic 3 years Web Services 3 years Jira 3 years JUnit 3 years Windows 4 years Unix 3 years Linux 3 years Restful 3 years Additional Information Technical Summary Programming Languages Java J2EE HTML5 PLSQL Java Technologies Collections Multithreading AWT Exception Handling J2EE Technologies JSP Servlets Applet JDBC Java Beans Tag Libraries Groovy Web Servers ApacheTomcat 5x6x n JBuilder Application Servers Web Logic Tomcat JBoss WebSphere Markup Scripting Lang Java Script HTML 5 Framework Spring 322 Struts 2312 Spring MVC Spring Core JMS GUI and Proto type Tools AWT JSP CSS IDETools Eclipse RAD Net Beans Visual Studio ANT JIRA XML Technologies XML XSL DTDSchema DOMSAX API JAXB Databases and Tools Oracle MYSQL SQL Server MS Access ORM Tool Hibernate 30 Cassandra Web Service Technologies Web Services JAXWS JAXRS Apache CXF SOAP RESTful Testing Bug Fix Tools JUNIT Clear Quest Operating Systems Windows UNIX Linux Design MethodologyTools UML Object Oriented Analysis and Design J2EE Design Patterns Deployment Build Tool Apache Ant 19 Apache Maven 221 SourceVersion Control Dimensions ClearCase SVN GIT VSS Documentation Tool Microsoft Word 2007 Microsoft Visio Open Office Cloud Technologies AWS EC2 S3 Automation testing Cucumber Selenium",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Cerner",
        "Corporation",
        "Kansas",
        "City",
        "MO",
        "MO",
        "years",
        "experience",
        "IT",
        "industry",
        "exposure",
        "Software",
        "Process",
        "Engineering",
        "designing",
        "building",
        "Web",
        "Application",
        "JavaJ2EE",
        "technology",
        "Expertise",
        "Web",
        "Frontend",
        "applications",
        "architecture",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "JavaScript",
        "JSP",
        "jQuery",
        "Angular",
        "JS",
        "Expertise",
        "serverside",
        "development",
        "JDBC",
        "JNDI",
        "Servlets",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "spring",
        "boot",
        "Spring",
        "modules",
        "Spring",
        "Core",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "Boot",
        "AOP",
        "Batch",
        "cloud",
        "security",
        "Hibernate",
        "JPA",
        "ORM",
        "tool",
        "implementation",
        "persistence",
        "layer",
        "mapping",
        "POJOs",
        "experience",
        "Hibernate",
        "Hibernate",
        "Connection",
        "Pooling",
        "HQL",
        "Collections",
        "Hibernate",
        "Caching",
        "Experience",
        "User",
        "Interactive",
        "UI",
        "Web",
        "Pages",
        "User",
        "Interfaces",
        "help",
        "HTML",
        "CSS3",
        "Expertise",
        "SQL",
        "databases",
        "SQL",
        "SQL",
        "Server",
        "Oracle",
        "Worked",
        "IDEs",
        "Microsoft",
        "studio",
        "Sublime",
        "text",
        "IntelliJ",
        "Web",
        "Storm",
        "Eclipse",
        "Proficient",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Session",
        "Facade",
        "Factory",
        "Abstract",
        "Factory",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Experience",
        "web",
        "applications",
        "MVC",
        "MVVM",
        "MVP",
        "Singleton",
        "Expertise",
        "source",
        "code",
        "control",
        "systems",
        "GIT",
        "JIRA",
        "Jenkins",
        "Solid",
        "experience",
        "Responsive",
        "Web",
        "Design",
        "RWD",
        "involvement",
        "web",
        "application",
        "development",
        "knowledge",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "platform",
        "knowledge",
        "Core",
        "Java",
        "Multithreading",
        "Algorithms",
        "ObjectOriented",
        "concepts",
        "experience",
        "web",
        "services",
        "RESTFUL",
        "SOAP",
        "XML",
        "technologies",
        "XSL",
        "XSTL",
        "XPATH",
        "parsers",
        "JAXP",
        "SAX",
        "DOM",
        "JAXB",
        "Experience",
        "spring",
        "framework",
        "MVC",
        "Struts",
        "MVC",
        "Architecture",
        "action",
        "mappings",
        "resource",
        "bundles",
        "knowledge",
        "applications",
        "web",
        "servers",
        "Apache",
        "Tomcat",
        "Glassfish",
        "IBM",
        "WebSphere",
        "Hands",
        "experiences",
        "Core",
        "Java",
        "Multithreading",
        "Concurrency",
        "File",
        "Handling",
        "IO",
        "Generics",
        "Data",
        "Structures",
        "Collections",
        "Garbage",
        "Collection",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "storage",
        "backup",
        "AWS",
        "Experience",
        "Database",
        "Design",
        "Creation",
        "management",
        "Schemas",
        "Procedures",
        "functions",
        "DDL",
        "DML",
        "SQL",
        "Experience",
        "database",
        "work",
        "procedures",
        "Views",
        "Triggers",
        "Functions",
        "PLSQL",
        "Experience",
        "frameworks",
        "ActiveMQ",
        "Kafka",
        "Experience",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "infrastructure",
        "database",
        "skills",
        "Oracle",
        "12c",
        "DB2",
        "SQL",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "MongoDB",
        "AGILE",
        "development",
        "environment",
        "Scrum",
        "sessions",
        "experience",
        "Junit",
        "Mockito",
        "unit",
        "tests",
        "applications",
        "test",
        "development",
        "JavaScript",
        "Angular",
        "Js",
        "mocha",
        "chai",
        "test",
        "cases",
        "communication",
        "team",
        "player",
        "individual",
        "ability",
        "technologies",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Cerner",
        "Corporation",
        "Kansas",
        "City",
        "MO",
        "October",
        "Present",
        "Kansas",
        "City",
        "MO",
        "Responsibilities",
        "business",
        "requirements",
        "project",
        "Business",
        "Requirement",
        "Specification",
        "document",
        "Data",
        "Governance",
        "Data",
        "quality",
        "Data",
        "architect",
        "models",
        "processes",
        "Microservice",
        "architecture",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "framework",
        "Deployed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Nodejs",
        "POC",
        "Bower",
        "development",
        "automation",
        "tasks",
        "Hapijs",
        "web",
        "framework",
        "Nodejs",
        "server",
        "Integrated",
        "Nodejs",
        "Hapijs",
        "Mongo",
        "CRUD",
        "operations",
        "data",
        "repository",
        "use",
        "Nodejs",
        "Hapijs",
        "MongoDB",
        "MERN",
        "Stack",
        "API",
        "screens",
        "end",
        "Reactjs",
        "components",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "Flux",
        "library",
        "web",
        "pages",
        "user",
        "interface",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "components",
        "modules",
        "custom",
        "libraries",
        "dashboard",
        "calls",
        "Business",
        "customers",
        "Flags",
        "Realtime",
        "graphs",
        "reporting",
        "Nodejs",
        "React",
        "JS",
        "Components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "code",
        "forms",
        "validations",
        "REACT",
        "Flux",
        "Architecture",
        "ES6",
        "components",
        "REACT",
        "customer",
        "search",
        "experience",
        "components",
        "Splunk",
        "Performed",
        "CRUD",
        "operations",
        "Create",
        "Update",
        "Insert",
        "Delete",
        "data",
        "Mongo",
        "Mongo",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "Configured",
        "mongoconnector",
        "pipeline",
        "MongoDB",
        "cluster",
        "synchronize",
        "sources",
        "Elastic",
        "Search",
        "MongoDB",
        "cluster",
        "Docker",
        "Engine",
        "Docker",
        "Machine",
        "environment",
        "micro",
        "environments",
        "application",
        "Docker",
        "image",
        "services",
        "Docker",
        "file",
        "delivery",
        "pipeline",
        "containers",
        "AWS",
        "Code",
        "Amazon",
        "ECS",
        "multitude",
        "application",
        "AWS",
        "stack",
        "EC2",
        "MongoDB",
        "Docker",
        "Kubernetes",
        "Orchestration",
        "container",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Front",
        "S3",
        "Lambda",
        "Web",
        "Services",
        "server",
        "side",
        "code",
        "app",
        "developers",
        "API",
        "development",
        "server",
        "OAuth2",
        "server",
        "client",
        "applications",
        "Java",
        "Developer",
        "Mc",
        "Corporation",
        "Chicago",
        "IL",
        "January",
        "September",
        "Responsibilities",
        "software",
        "lifecycle",
        "stages",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "project",
        "DAO",
        "Layer",
        "HibernateJDBC",
        "template",
        "Spring",
        "Boot",
        "UI",
        "layer",
        "Semantic",
        "HTML",
        "REST",
        "API",
        "architecture",
        "end",
        "website",
        "HTML5",
        "CSS3",
        "JAVASCRIPT",
        "user",
        "screens",
        "validations",
        "HTML",
        "jQuery",
        "JSF",
        "user",
        "requirements",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "microservices",
        "Spring",
        "Boot",
        "applications",
        "organization",
        "data",
        "JSON",
        "RFP",
        "microservice",
        "API",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "application",
        "Angular",
        "services",
        "web",
        "application",
        "APIs",
        "Authored",
        "REST",
        "Web",
        "API",
        "wrappers",
        "Web",
        "Services",
        "User",
        "Interfaces",
        "HTML",
        "CSS",
        "JSP",
        "Spring",
        "Core",
        "annotations",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "Rest",
        "APIs",
        "Spring",
        "Boot",
        "microservices",
        "services",
        "web",
        "application",
        "APIs",
        "SPRING",
        "Controllers",
        "JS",
        "control",
        "Java",
        "services",
        "GITHUB",
        "configuration",
        "management",
        "tool",
        "code",
        "repository",
        "Wrote",
        "Client",
        "Side",
        "ServerSide",
        "Java",
        "Script",
        "validations",
        "business",
        "database",
        "Hibernate",
        "Used",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Docker",
        "containers",
        "microservices",
        "Web",
        "services",
        "SOAP",
        "REST",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Deployed",
        "applications",
        "integration",
        "environments",
        "Jenkins",
        "code",
        "CI",
        "environments",
        "development",
        "testing",
        "Java",
        "Developer",
        "Frost",
        "Bank",
        "San",
        "Antonio",
        "TX",
        "September",
        "November",
        "Responsibilities",
        "SOAP",
        "web",
        "services",
        "Apache",
        "Axis",
        "JAXWS",
        "support",
        "SoapUI",
        "web",
        "services",
        "Microservices",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Spring",
        "Boot",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "framework",
        "Spring",
        "bean",
        "date",
        "layer",
        "applications",
        "Spring",
        "Hibernate",
        "ORM",
        "business",
        "logic",
        "services",
        "HQL",
        "Hibernate",
        "Criteria",
        "entity",
        "classes",
        "tables",
        "database",
        "JPA",
        "mapping",
        "files",
        "Oracle",
        "database",
        "hibernate",
        "mapping",
        "SQL",
        "Databases",
        "Java",
        "Objects",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Microservices",
        "services",
        "risk",
        "assessment",
        "applications",
        "WebLogic",
        "Application",
        "Server",
        "deployments",
        "code",
        "reviews",
        "walkthroughs",
        "Wrote",
        "unit",
        "test",
        "scripts",
        "framework",
        "testing",
        "functionalities",
        "TestDriven",
        "Development",
        "TDD",
        "methodology",
        "scripts",
        "web",
        "application",
        "testing",
        "Selenium",
        "Web",
        "driver",
        "JIRA",
        "bugs",
        "Maven",
        "script",
        "building",
        "application",
        "Jenkins",
        "Continuous",
        "Integration",
        "Builds",
        "deployments",
        "CICD",
        "Education",
        "Masters",
        "Skills",
        "WEB",
        "SERVICES",
        "years",
        "API",
        "years",
        "HTML5",
        "years",
        "years",
        "MODEL",
        "VIEW",
        "years",
        "Java",
        "years",
        "Javascript",
        "years",
        "Html",
        "years",
        "Multithreading",
        "years",
        "Jsp",
        "years",
        "Servlet",
        "years",
        "years",
        "Java",
        "Beans",
        "years",
        "Tag",
        "years",
        "Groovy",
        "years",
        "ApacheTomcat",
        "years",
        "Web",
        "Logic",
        "years",
        "Web",
        "Services",
        "years",
        "Jira",
        "years",
        "JUnit",
        "years",
        "Windows",
        "years",
        "Unix",
        "years",
        "Linux",
        "years",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Summary",
        "Programming",
        "Languages",
        "Java",
        "J2EE",
        "HTML5",
        "PLSQL",
        "Java",
        "Technologies",
        "Collections",
        "Multithreading",
        "AWT",
        "Exception",
        "Handling",
        "J2EE",
        "Technologies",
        "JSP",
        "Servlets",
        "Applet",
        "JDBC",
        "Java",
        "Beans",
        "Tag",
        "Groovy",
        "Web",
        "Servers",
        "ApacheTomcat",
        "5x6x",
        "n",
        "JBuilder",
        "Application",
        "Servers",
        "Web",
        "Logic",
        "Tomcat",
        "JBoss",
        "WebSphere",
        "Markup",
        "Scripting",
        "Lang",
        "Java",
        "Script",
        "HTML",
        "Framework",
        "Spring",
        "Struts",
        "Spring",
        "MVC",
        "Spring",
        "Core",
        "JMS",
        "GUI",
        "Proto",
        "type",
        "Tools",
        "AWT",
        "JSP",
        "CSS",
        "IDETools",
        "Eclipse",
        "RAD",
        "Net",
        "Beans",
        "Visual",
        "Studio",
        "ANT",
        "JIRA",
        "XML",
        "Technologies",
        "XML",
        "XSL",
        "DTDSchema",
        "DOMSAX",
        "API",
        "JAXB",
        "Databases",
        "Tools",
        "Oracle",
        "MYSQL",
        "SQL",
        "Server",
        "MS",
        "Access",
        "ORM",
        "Tool",
        "Hibernate",
        "Cassandra",
        "Web",
        "Service",
        "Technologies",
        "Web",
        "Services",
        "JAXWS",
        "JAXRS",
        "Apache",
        "CXF",
        "SOAP",
        "Testing",
        "Bug",
        "Fix",
        "Tools",
        "JUNIT",
        "Clear",
        "Quest",
        "Operating",
        "Systems",
        "Windows",
        "UNIX",
        "Linux",
        "Design",
        "MethodologyTools",
        "UML",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "J2EE",
        "Design",
        "Patterns",
        "Deployment",
        "Build",
        "Tool",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "SourceVersion",
        "Control",
        "Dimensions",
        "ClearCase",
        "SVN",
        "GIT",
        "VSS",
        "Documentation",
        "Tool",
        "Microsoft",
        "Word",
        "Microsoft",
        "Visio",
        "Open",
        "Office",
        "Cloud",
        "Technologies",
        "AWS",
        "EC2",
        "S3",
        "Automation",
        "Cucumber",
        "Selenium"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:13:47.244719",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Cerner Corporation Kansas City MO MO Around 4 years of experience in the IT industry with diversified exposure in Software Process Engineering designing building and testing a Web Application using JavaJ2EE technology Expertise in developing Web based distributed and Frontend applications in a threetier architecture using Java J2EE HTML CSS JavaScript Ajax JSP jQuery and Angular JS Expertise in serverside development with JDBC JNDI Servlets spring frameworks like MVC architecture spring boot etc Proficient in working on various Spring modules Spring Core Spring IOC Spring MVC Spring DAO Spring Boot and AOP Batch cloud security along with Hibernate and JPA as the backend ORM tool for implementation of persistence layer and mapping of POJOs Strong experience on Hibernate and in using Hibernate Connection Pooling HQL Collections Hibernate Caching etc Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts Good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Built and managed policies for S3 buckets used S3 bucket and glacier for storage and backup on AWS Experience in Database Design Creation and management of Schemas writing Stored Procedures functions Triggers DDL DML SQL queries Experience in database related work primarily creating complex stored procedures Views Triggers Functions using PLSQL Experience with messaging frameworks like ActiveMQ RabbitMQ Kafka Experience in Integration of Amazon Web Services AWS with other applications infrastructure Strong database skills in Oracle 12c DB2 My SQL and MS SQL Server MySQL MongoDB Experienced in working in AGILE based development environment and participating in Scrum sessions Strong experience with Junit and Mockito in performing unit tests of the applications Performed test driven development for JavaScript with Angular Js with mocha and chai test cases Excellent communication and Strong team player and effective individual with an ability to adapt to new technologies quickly Work Experience Full Stack Java Developer Cerner Corporation Kansas City MO October 2017 to Present Kansas City MO Responsibilities Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Integrated Nodejs with Hapijs and communicated with Mongo dB for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Extensively used ES6 to create components in REACT Enhanced the customer search experience by developing searchable components with Splunk Performed CRUD operations like Create Update Insert and Delete data in MongodB Worked on Mongo dB database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Java Developer Mc Donalds Corporation Chicago IL January 2016 to September 2017 Responsibilities Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Java Developer Frost Bank San Antonio TX September 2014 to November 2015 Responsibilities Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Education Masters Skills WEB SERVICES 4 years API 3 years HTML5 3 years JAVA 2 years MODEL VIEW CONTROLLER 2 years Java 3 years Javascript 3 years Html 3 years Multithreading 3 years Jsp 3 years Servlet 3 years Applet 3 years Java Beans 3 years Tag Libraries 3 years Groovy 3 years ApacheTomcat 4 years Web Logic 3 years Web Services 3 years Jira 3 years JUnit 3 years Windows 4 years Unix 3 years Linux 3 years Restful 3 years Additional Information Technical Summary Programming Languages Java J2EE HTML5 PLSQL Java Technologies Collections Multithreading AWT Exception Handling J2EE Technologies JSP Servlets Applet JDBC Java Beans Tag Libraries Groovy Web Servers ApacheTomcat 5x6x n JBuilder Application Servers Web Logic Tomcat JBoss WebSphere Markup Scripting Lang Java Script HTML 5 Framework Spring 322 Struts 2312 Spring MVC Spring Core JMS GUI and Proto type Tools AWT JSP CSS IDETools Eclipse RAD Net Beans Visual Studio ANT JIRA XML Technologies XML XSL DTDSchema DOMSAX API JAXB Databases and Tools Oracle MYSQL SQL Server MS Access ORM Tool Hibernate 30 Cassandra Web Service Technologies Web Services JAXWS JAXRS Apache CXF SOAP RESTful Testing Bug Fix Tools JUNIT Clear Quest Operating Systems Windows UNIX Linux Design MethodologyTools UML Object Oriented Analysis and Design J2EE Design Patterns Deployment Build Tool Apache Ant 19 Apache Maven 221 SourceVersion Control Dimensions ClearCase SVN GIT VSS Documentation Tool Microsoft Word 2007 Microsoft Visio Open Office Cloud Technologies AWS EC2 S3 Automation testing Cucumber Selenium",
    "unique_id": "aad72318-8941-41cf-b2e5-977b19677062"
}