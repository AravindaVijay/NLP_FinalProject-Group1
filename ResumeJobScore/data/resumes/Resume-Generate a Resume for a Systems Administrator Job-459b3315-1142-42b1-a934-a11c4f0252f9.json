{
    "clean_data": "Full Stack Developer Angular47 Web API Full Stack span lDeveloperspan Angular4amp7span lWebspan API Full Stack Developer Angular47 Web API ProSight Specialty Insurance Group Boston MA Full Stack Developer with 5 years of experience in both frontend and backend software engineering with focus on NET technologies in various domains including healthcare and finance Working experience in Angular 4 5 and 7 developing services modules components directives custom directives routing and performed validations Solid understanding in single page applications SPA development using the Angular framework Bootstrap jQuery and AJAX which allows a program to function without page reloads Experienced in designing the UI with HTML5 CSS3 Bootstrap and Angular material Expertise in Web based languages such as HTML5 CSS3 JavaScript jQuery JSON and XML with framework Experienced in NET technologies including ASPNET ADONET Web Forms LINQ to SQL Entity Framework 6 and MVC 5 Strong experience in developing NET applications using Web services Windows Communication Foundation WCF and Web API Hands on experience in design and development of applications using Object Oriented languages including Microsoft C used in ASPNET and Typescript in Angular projects Proficient in both Ntier and Onion architecture allowing for separation of concerns in projects that require RDS data Expertise in SQL Server writing Stored Procedures UserDefined Functions UDF Views Indexes Triggers Joins and other Complex Queries using TSQL Expertise in creating SQL server reports using SSRS Skilled in writing programs that can read and manipulate JSON script as another means of packaging data to be used in projects Used postman to simulate and debug Web API and SOAPUI to test the WCF and Web Service based application Demonstrated version control using SVN and Git via GitHub to allow contributions from team members into projects as well as highlight progress and issues Successfully participated in software methodology such as Agile Scrum Testdriven development TDD and Waterfall methodologies Selfmotivated collaborated with team worked under high pressure worked in several projects simultaneously dynamic problemsolving adept at working with minimal to supervision and worked with highlycaliber teams of professionals Authorized to work in the US for any employer Work Experience Full Stack Developer Angular47 Web API ProSight Specialty Insurance Group Morristown NJ July 2018 to Present ProSight Specialty Insurance Group Inc is a private specialty insurance company based in Morristown NJ ProSight Health Plans Insurance Management System is fully automated and integrated application for managing the Policy plans Agent Commission incurred but not paid and Settlements This Insurance Management System manages different claims per policies claim settlements and allows coverage verifications I was involved in developing the claims management system and designing the frontend for management system Roles and Responsibilities Involved in the complete Software Development Life Cycle including Analysis Design Implementation Testing and Maintenance Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Used HTML5 CSS3 AngularUI Bootstrap Angular Material Forms and Typescript at the frontend to provide design styling and logic for the project Experienced in implementing authentication and authorization by using route guards and interceptors The project requires email and password to check the credentials and used the JSON Web Tokens JWT to check the authorities of the users Implemented pagination for the claims page by using Angular ngxpagination and search filter by creating a custom filter pipe Created angular services to serve for different functions such as data services account services and route guard Experienced on Web API and created web application worked on CRUD actions HTTP get post put and delete attribute routing and used Http Response message approach Accessed and updated data through RESTFUL services using JSON as the main requestresponse format Enabled CORS to allow communication between the frontend Angular project and the backend Web API functionality Implemented LINQtoEntities queries operate on the entity set DbSet type properties to access the data from the underlying database Implemented code first approach with entity framework to build connections between Web API and database Designed and developed databases which include the development of functions stored procedures and triggers using T SQL Implemented Jasmine unit tests for Angular and used Karma to run the tests for Behavior Driven Development BDD Purpose Used Postman to test the Web API to ensure proper functionality of the backend Managed all development tasks and source code modifications via Azure DevOps and Git Environment C Visual Studio 2017 ASPNET45 Web API Angular47 Entity Framework 6 LINQ HTML5 JavaScript CSS3 AJAX JSON jQuery SQL Server 2018 Agile Postman Git Azure DevOps Jasmine and Karma Software Developer Angular5 Web API Social Interest Solutions Sacramento CA May 2017 to June 2018 Social Interest Solutions is a national nonprofit dedicated to improving access to quality health and social services through policy and technology solutions HealtheArizona Plus which is an online application for Arizona Residents This application provides services to users to apply for medical coverage through AHCCCS Nutrition Assistance formerly known as the Food Stamp program and Cash Assistance HealtheArizona Plus is used even for existing customers or for those who are currently receiving benefits I was involved in implementing the functions for user to create application for medical coverage and the management of applications Roles and Responsibilities Involved in requirement analysis design and development of Web application Implemented data exchange between components by using Angular Input and Output Experienced in different types of data binding in angular such as String Interpolation Property Binding Event Binding and TwoWay Data Binding Used Observable from the RXJS library in the Angular service layer to enable subscription in the component Implemented Angular material dialog for users to create new applications Created input fields with autocomplete for user input by using autocomplete in Angular Material Implemented clientside validation by using Angular form validations when we need users input Created different business classes and interfaces using NET Framework 45 with Object Oriented Programming Methodology Expertise in creating JSON Web Token JWT rolebased authentication in OWINbased web application Enabled Content Negotiation to allow Web API to request and response in different representations and formats Implemented business logic using Action Filters like authorization filters action filters and exception filters Used bundling to improve application performance Utilized Onion Architecture to allow for separation of concerns and minimize coupling Used Dependency Injection to promote reusable code and ease of maintenance Implemented Unit Test classes for business class methods to check all possible conditions worked with test data provided using MOCK objects Used Git from GitHub for version controls and code merges Environment Visual Studio 2015 NET Framework 45 SQL Server 2014 C Web API HTML5 CSS3 Bootstrap 4 Angular5 JSON TSQL and Unit Test Software Developer Albina Community Bank Portland OR May 2016 to April 2017 Albina Community Bank is a Certified Community Development Financial Institution CDFI with a mission to increase economic opportunity and promote community development The project is to develop an online investment management platform for corporations The platform offers investment options such as stock ETFs mutual funds and bonds Users could create accounts and are able to choose from all the investment options I was involved in implementing the functionalities for users searching products and managing their stock ETFs mutual funds and bonds Roles and Responsibilities Involved in SDLC of the project from Design Development and Testing in Agile Scrum Methodology Developed Views Partial views using ASP NET MVC and used MVC Routing rules to match the URLs of the incoming request Used JavaScript jQuery and Ajax to implement filters with sliders for the Users search purpose Created user input field with autocomplete by using AJAX control and jQuery UI Employed Layout page and multiple partial views to combine the views as a single view when launched and refreshed Utilized Onion Architecture to allow for separation of concerns and minimize coupling Repository Pattern is used to build the project by combining serviceoriented applications Most notably the service employs Unit of Work to provide the functionality to the rest of the object Applied data annotation to models in order to add constraints to database when using data first approach Implemented conventions between objects with dissimilar types by using AutoMapper SQL statements were used to obtain the appropriate data from database For example it is used in filtering the database during a search Used MS SQL Server to create the tables and sample data via SQL commands The sample data were used to test the application Prepared unit test cases and performed NUnit Testing prior to system implementation and wrote test cases for testing the code based on the requirements and involved in the Unit testing Integration Testing and Regression Testing Environment Agile Scrum Windows C NET Framework ASP NET MVC 5 HTML5 CSS3 JavaScript jQuery AJAX JSON XML SQL Server TSQL Visual Studio 2014 Unit Test and Entity Framework 6 Software Developer AllCare Health Grants Pass OR May 2015 to April 2016 AllCare Health is an integrated health organization based in Southern Oregon The project is a web based 3tier software platform for the marketing departments to facilitate their recruitment and placement activities on line Job requirements were standardized candidate profiles client requirements and information are stored in database The software provided for querying the database on the basis of the Job criteria I was involved in developing Information Management System and payroll system Roles and Responsibilities Involved in the complete Software Development Life Cycle SDLC for development process and Agile including Analysis Design Implementation Testing and Maintenance Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Employed JavaScript jQuery and AJAX to enable searching and filtering of candidates without needing to reload the page The functionality is connected to the frontend through WCF Experienced in data exchange between view and controller by using ViewModel strongly typed views ViewBag and ViewData Used TempData to pass data between controller actions Implemented routing and authentication for easy navigability and security through a username and password coupled with Form Validation Created endpoints for WCF to build the runtime communication channels to send and receive message by using address binding and contract ABC Demonstrated create read update and delete CRUD functionalities for hire requests and recruitments Created queries to different data resources by using LINQ and Lambda Expression Entity Framework Database First approach was used to allow the program to connect with the database Created clientside validations with JavaScript and serverside validations with ASP Net 45 Used SoapUI to test the WCF to ensure proper functionality of the backend Environment ASP NET C ADO NET Entity Framework 6 HTML5 CSS3 JavaScript jQuery Bootstrap AJAX ASPNET MVC5 LINQ Web API SQL Server XML JSON and SoapUI Software Developer Web Forms Siga Technologies Inc Corvallis OR June 2014 to April 2015 SIGA Technologies Inc is a pharmaceutical company set up in 1995 that is now based in New York City and Development operations in Corvallis OR Clinic Management System stores and manages patients and medicine information such as the electronic medical records EMR and medicine management system I was involved in developing the information and records management system Roles and Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Developed an ASP NET Web Form application in Visual Studio using the testdriven development TDD approach based on 3layer architecture Implemented searching and filtering of medicine information using JavaScript and AJAX Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using Web Form C and JavaScript for clientside validation Created buttons with similar styles and functions automatically with Repeater Control Experienced in using ADONET which includes building connections to database by using SqlConnection with connection string and using DataReader and DataAdapter to fetch data from database Implemented Dependency Injection with constructor injections for loosely coupled components using IOC container Followed Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASP NET Web Forms ADONET AJAX jQuery Agile Scrum Unit test Visual Studio 2012 SQL Server 2008 JavaScript C TDD and Unit Test Education Masters Skills net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Svn Xml Ado Database Adonet Microsoft sql server Sql server Sql Ajax Java NET Node Angular Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Typescript jQuery Angular 4 5 7 Bootstrap Angular Material Programming Microsoft C JavaScript TSQL NET ASPNET ADONET Web Forms MVC 5 Web Services WCF Web API Entity Framework 6 LINQ Visual Studio 20152018 Database SQL Microsoft SQL Server Management Studio 20122017 TSQL Others Git SVN XML JSON AJAX RESTful Postman SDLC Agile Scrum VS Code Jasmine Karma",
    "entities": [
        "AJAX",
        "API Social Interest Solutions",
        "NET Framework",
        "Angular Material Implemented",
        "Applied",
        "HTTP",
        "Morristown NJ ProSight Health Plans Insurance Management System",
        "AutoMapper SQL",
        "Sacramento",
        "LINQ Visual Studio",
        "XML",
        "Corvallis OR Clinic Management System",
        "AJAX Involved",
        "SQL Server",
        "Object Oriented Programming Methodology Expertise",
        "Repository Pattern",
        "Present ProSight Specialty Insurance Group Inc",
        "NUnit",
        "Software Development Life Cycle including Analysis Design Implementation Testing",
        "T SQL Implemented Jasmine",
        "Responsibilities Involved",
        "Albina Community",
        "Git",
        "Waterfall",
        "ABC Demonstrated",
        "HTML5",
        "Bootstrap Angular Material Forms",
        "Action Filters",
        "DataAdapter",
        "Design Development and Testing in Agile Scrum Methodology Developed Views Partial",
        "Visual",
        "IOC",
        "Utilized Onion Architecture",
        "SqlConnection",
        "RDS",
        "MS",
        "jQuery UI",
        "MVC",
        "Albina Community Bank",
        "Social Interest Solutions",
        "SQL Entity Framework 6",
        "NET",
        "Stored Procedures UserDefined Functions",
        "MS SQL Server",
        "Arizona Residents",
        "Complex Queries using TSQL Expertise",
        "Git Environment C Visual Studio",
        "LINQ",
        "Lambda Expression Entity Framework Database",
        "US",
        "Implemented Unit Test",
        "AHCCCS Nutrition Assistance",
        "Information Management System",
        "Created",
        "HealtheArizona",
        "Unit Test Education Masters Skills",
        "Users",
        "Windows Communication Foundation",
        "Form Validation Created",
        "SSRS",
        "RESTFUL",
        "SQL",
        "GitHub",
        "ViewBag",
        "Agile Postman Git Azure",
        "Api C Git Javascript Bootstrap Typescript Json Vs",
        "ASP Net",
        "a Certified Community Development Financial Institution",
        "ViewModel",
        "Microsoft C",
        "WCF Experienced",
        "Ntier and Onion",
        "SQL Server Management Studio",
        "TSQL Visual Studio",
        "Visual Studio",
        "CRUD",
        "DataReader",
        "OWINbased",
        "JWT",
        "Agile including Analysis Design Implementation Testing and Maintenance Developed",
        "JavaScript",
        "New York City",
        "Food Stamp",
        "UI",
        "Microsoft",
        "ASP",
        "SIGA Technologies Inc",
        "Repeater Control Experienced",
        "SVN",
        "AllCare Health",
        "Output Experienced",
        "SPA",
        "String Interpolation Property Binding Event Binding",
        "ASPNET MVC",
        "TDD",
        "RXJS",
        "Implemented Angular",
        "MVC Routing",
        "Software Development Life Cycle",
        "Integration Testing and Regression Testing Environment Agile Scrum Windows C NET Framework ASP NET"
    ],
    "experience": "Experience Full Stack Developer Angular47 Web API ProSight Specialty Insurance Group Morristown NJ July 2018 to Present ProSight Specialty Insurance Group Inc is a private specialty insurance company based in Morristown NJ ProSight Health Plans Insurance Management System is fully automated and integrated application for managing the Policy plans Agent Commission incurred but not paid and Settlements This Insurance Management System manages different claims per policies claim settlements and allows coverage verifications I was involved in developing the claims management system and designing the frontend for management system Roles and Responsibilities Involved in the complete Software Development Life Cycle including Analysis Design Implementation Testing and Maintenance Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Used HTML5 CSS3 AngularUI Bootstrap Angular Material Forms and Typescript at the frontend to provide design styling and logic for the project Experienced in implementing authentication and authorization by using route guards and interceptors The project requires email and password to check the credentials and used the JSON Web Tokens JWT to check the authorities of the users Implemented pagination for the claims page by using Angular ngxpagination and search filter by creating a custom filter pipe Created angular services to serve for different functions such as data services account services and route guard Experienced on Web API and created web application worked on CRUD actions HTTP get post put and delete attribute routing and used Http Response message approach Accessed and updated data through RESTFUL services using JSON as the main requestresponse format Enabled CORS to allow communication between the frontend Angular project and the backend Web API functionality Implemented LINQtoEntities queries operate on the entity set DbSet type properties to access the data from the underlying database Implemented code first approach with entity framework to build connections between Web API and database Designed and developed databases which include the development of functions stored procedures and triggers using T SQL Implemented Jasmine unit tests for Angular and used Karma to run the tests for Behavior Driven Development BDD Purpose Used Postman to test the Web API to ensure proper functionality of the backend Managed all development tasks and source code modifications via Azure DevOps and Git Environment C Visual Studio 2017 ASPNET45 Web API Angular47 Entity Framework 6 LINQ HTML5 JavaScript CSS3 AJAX JSON jQuery SQL Server 2018 Agile Postman Git Azure DevOps Jasmine and Karma Software Developer Angular5 Web API Social Interest Solutions Sacramento CA May 2017 to June 2018 Social Interest Solutions is a national nonprofit dedicated to improving access to quality health and social services through policy and technology solutions HealtheArizona Plus which is an online application for Arizona Residents This application provides services to users to apply for medical coverage through AHCCCS Nutrition Assistance formerly known as the Food Stamp program and Cash Assistance HealtheArizona Plus is used even for existing customers or for those who are currently receiving benefits I was involved in implementing the functions for user to create application for medical coverage and the management of applications Roles and Responsibilities Involved in requirement analysis design and development of Web application Implemented data exchange between components by using Angular Input and Output Experienced in different types of data binding in angular such as String Interpolation Property Binding Event Binding and TwoWay Data Binding Used Observable from the RXJS library in the Angular service layer to enable subscription in the component Implemented Angular material dialog for users to create new applications Created input fields with autocomplete for user input by using autocomplete in Angular Material Implemented clientside validation by using Angular form validations when we need users input Created different business classes and interfaces using NET Framework 45 with Object Oriented Programming Methodology Expertise in creating JSON Web Token JWT rolebased authentication in OWINbased web application Enabled Content Negotiation to allow Web API to request and response in different representations and formats Implemented business logic using Action Filters like authorization filters action filters and exception filters Used bundling to improve application performance Utilized Onion Architecture to allow for separation of concerns and minimize coupling Used Dependency Injection to promote reusable code and ease of maintenance Implemented Unit Test classes for business class methods to check all possible conditions worked with test data provided using MOCK objects Used Git from GitHub for version controls and code merges Environment Visual Studio 2015 NET Framework 45 SQL Server 2014 C Web API HTML5 CSS3 Bootstrap 4 Angular5 JSON TSQL and Unit Test Software Developer Albina Community Bank Portland OR May 2016 to April 2017 Albina Community Bank is a Certified Community Development Financial Institution CDFI with a mission to increase economic opportunity and promote community development The project is to develop an online investment management platform for corporations The platform offers investment options such as stock ETFs mutual funds and bonds Users could create accounts and are able to choose from all the investment options I was involved in implementing the functionalities for users searching products and managing their stock ETFs mutual funds and bonds Roles and Responsibilities Involved in SDLC of the project from Design Development and Testing in Agile Scrum Methodology Developed Views Partial views using ASP NET MVC and used MVC Routing rules to match the URLs of the incoming request Used JavaScript jQuery and Ajax to implement filters with sliders for the Users search purpose Created user input field with autocomplete by using AJAX control and jQuery UI Employed Layout page and multiple partial views to combine the views as a single view when launched and refreshed Utilized Onion Architecture to allow for separation of concerns and minimize coupling Repository Pattern is used to build the project by combining serviceoriented applications Most notably the service employs Unit of Work to provide the functionality to the rest of the object Applied data annotation to models in order to add constraints to database when using data first approach Implemented conventions between objects with dissimilar types by using AutoMapper SQL statements were used to obtain the appropriate data from database For example it is used in filtering the database during a search Used MS SQL Server to create the tables and sample data via SQL commands The sample data were used to test the application Prepared unit test cases and performed NUnit Testing prior to system implementation and wrote test cases for testing the code based on the requirements and involved in the Unit testing Integration Testing and Regression Testing Environment Agile Scrum Windows C NET Framework ASP NET MVC 5 HTML5 CSS3 JavaScript jQuery AJAX JSON XML SQL Server TSQL Visual Studio 2014 Unit Test and Entity Framework 6 Software Developer AllCare Health Grants Pass OR May 2015 to April 2016 AllCare Health is an integrated health organization based in Southern Oregon The project is a web based 3tier software platform for the marketing departments to facilitate their recruitment and placement activities on line Job requirements were standardized candidate profiles client requirements and information are stored in database The software provided for querying the database on the basis of the Job criteria I was involved in developing Information Management System and payroll system Roles and Responsibilities Involved in the complete Software Development Life Cycle SDLC for development process and Agile including Analysis Design Implementation Testing and Maintenance Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Employed JavaScript jQuery and AJAX to enable searching and filtering of candidates without needing to reload the page The functionality is connected to the frontend through WCF Experienced in data exchange between view and controller by using ViewModel strongly typed views ViewBag and ViewData Used TempData to pass data between controller actions Implemented routing and authentication for easy navigability and security through a username and password coupled with Form Validation Created endpoints for WCF to build the runtime communication channels to send and receive message by using address binding and contract ABC Demonstrated create read update and delete CRUD functionalities for hire requests and recruitments Created queries to different data resources by using LINQ and Lambda Expression Entity Framework Database First approach was used to allow the program to connect with the database Created clientside validations with JavaScript and serverside validations with ASP Net 45 Used SoapUI to test the WCF to ensure proper functionality of the backend Environment ASP NET C ADO NET Entity Framework 6 HTML5 CSS3 JavaScript jQuery Bootstrap AJAX ASPNET MVC5 LINQ Web API SQL Server XML JSON and SoapUI Software Developer Web Forms Siga Technologies Inc Corvallis OR June 2014 to April 2015 SIGA Technologies Inc is a pharmaceutical company set up in 1995 that is now based in New York City and Development operations in Corvallis OR Clinic Management System stores and manages patients and medicine information such as the electronic medical records EMR and medicine management system I was involved in developing the information and records management system Roles and Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Developed an ASP NET Web Form application in Visual Studio using the testdriven development TDD approach based on 3layer architecture Implemented searching and filtering of medicine information using JavaScript and AJAX Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using Web Form C and JavaScript for clientside validation Created buttons with similar styles and functions automatically with Repeater Control Experienced in using ADONET which includes building connections to database by using SqlConnection with connection string and using DataReader and DataAdapter to fetch data from database Implemented Dependency Injection with constructor injections for loosely coupled components using IOC container Followed Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASP NET Web Forms ADONET AJAX jQuery Agile Scrum Unit test Visual Studio 2012 SQL Server 2008 JavaScript C TDD and Unit Test Education Masters Skills net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Svn Xml Ado Database Adonet Microsoft sql server Sql server Sql Ajax Java NET Node Angular Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Typescript jQuery Angular 4 5 7 Bootstrap Angular Material Programming Microsoft C JavaScript TSQL NET ASPNET ADONET Web Forms MVC 5 Web Services WCF Web API Entity Framework 6 LINQ Visual Studio 20152018 Database SQL Microsoft SQL Server Management Studio 20122017 TSQL Others Git SVN XML JSON AJAX RESTful Postman SDLC Agile Scrum VS Code Jasmine Karma",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Angular47",
        "Web",
        "API",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Angular4amp7span",
        "lWebspan",
        "API",
        "Full",
        "Stack",
        "Developer",
        "Angular47",
        "Web",
        "API",
        "ProSight",
        "Specialty",
        "Insurance",
        "Group",
        "Boston",
        "MA",
        "Full",
        "Stack",
        "Developer",
        "years",
        "experience",
        "frontend",
        "software",
        "engineering",
        "focus",
        "NET",
        "technologies",
        "domains",
        "healthcare",
        "finance",
        "Working",
        "experience",
        "Angular",
        "services",
        "modules",
        "components",
        "directives",
        "custom",
        "directives",
        "validations",
        "understanding",
        "page",
        "applications",
        "SPA",
        "development",
        "framework",
        "Bootstrap",
        "jQuery",
        "AJAX",
        "program",
        "page",
        "reloads",
        "UI",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Angular",
        "material",
        "Expertise",
        "Web",
        "languages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "JSON",
        "XML",
        "framework",
        "NET",
        "technologies",
        "ASPNET",
        "ADONET",
        "Web",
        "Forms",
        "LINQ",
        "SQL",
        "Entity",
        "Framework",
        "MVC",
        "experience",
        "NET",
        "applications",
        "Web",
        "services",
        "Windows",
        "Communication",
        "Foundation",
        "WCF",
        "Web",
        "API",
        "Hands",
        "experience",
        "design",
        "development",
        "applications",
        "Object",
        "languages",
        "Microsoft",
        "C",
        "ASPNET",
        "Typescript",
        "projects",
        "Ntier",
        "Onion",
        "architecture",
        "separation",
        "concerns",
        "projects",
        "RDS",
        "data",
        "Expertise",
        "SQL",
        "Server",
        "Procedures",
        "UserDefined",
        "Functions",
        "UDF",
        "Views",
        "Indexes",
        "Triggers",
        "Joins",
        "Complex",
        "Queries",
        "TSQL",
        "Expertise",
        "SQL",
        "server",
        "reports",
        "SSRS",
        "Skilled",
        "programs",
        "JSON",
        "script",
        "means",
        "packaging",
        "data",
        "projects",
        "postman",
        "Web",
        "API",
        "SOAPUI",
        "WCF",
        "Web",
        "Service",
        "application",
        "version",
        "control",
        "SVN",
        "Git",
        "GitHub",
        "contributions",
        "team",
        "members",
        "projects",
        "highlight",
        "progress",
        "issues",
        "software",
        "methodology",
        "Agile",
        "Scrum",
        "Testdriven",
        "development",
        "TDD",
        "Waterfall",
        "methodologies",
        "Selfmotivated",
        "team",
        "pressure",
        "projects",
        "supervision",
        "highlycaliber",
        "teams",
        "professionals",
        "US",
        "employer",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Angular47",
        "Web",
        "API",
        "ProSight",
        "Specialty",
        "Insurance",
        "Group",
        "Morristown",
        "NJ",
        "July",
        "Present",
        "ProSight",
        "Specialty",
        "Insurance",
        "Group",
        "Inc",
        "specialty",
        "insurance",
        "company",
        "Morristown",
        "NJ",
        "ProSight",
        "Health",
        "Plans",
        "Insurance",
        "Management",
        "System",
        "application",
        "Policy",
        "Agent",
        "Commission",
        "Settlements",
        "Insurance",
        "Management",
        "System",
        "claims",
        "policies",
        "settlements",
        "coverage",
        "verifications",
        "claims",
        "management",
        "system",
        "frontend",
        "management",
        "system",
        "Roles",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "Created",
        "Angular",
        "components",
        "modules",
        "services",
        "features",
        "project",
        "functionalities",
        "Web",
        "API",
        "HTML5",
        "CSS3",
        "AngularUI",
        "Bootstrap",
        "Angular",
        "Material",
        "Forms",
        "Typescript",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "authentication",
        "authorization",
        "route",
        "guards",
        "interceptors",
        "project",
        "email",
        "password",
        "credentials",
        "JSON",
        "Web",
        "Tokens",
        "JWT",
        "authorities",
        "users",
        "pagination",
        "claims",
        "page",
        "ngxpagination",
        "search",
        "filter",
        "custom",
        "filter",
        "pipe",
        "services",
        "functions",
        "data",
        "services",
        "account",
        "services",
        "route",
        "guard",
        "Web",
        "API",
        "web",
        "application",
        "CRUD",
        "actions",
        "HTTP",
        "post",
        "attribute",
        "routing",
        "Http",
        "Response",
        "message",
        "approach",
        "Accessed",
        "data",
        "RESTFUL",
        "services",
        "JSON",
        "requestresponse",
        "format",
        "CORS",
        "communication",
        "project",
        "Web",
        "API",
        "functionality",
        "LINQtoEntities",
        "queries",
        "entity",
        "DbSet",
        "type",
        "properties",
        "data",
        "database",
        "code",
        "approach",
        "entity",
        "framework",
        "connections",
        "Web",
        "API",
        "database",
        "databases",
        "development",
        "functions",
        "procedures",
        "triggers",
        "T",
        "SQL",
        "Jasmine",
        "unit",
        "Angular",
        "Karma",
        "tests",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "Purpose",
        "Postman",
        "Web",
        "API",
        "functionality",
        "backend",
        "development",
        "tasks",
        "source",
        "code",
        "modifications",
        "Azure",
        "DevOps",
        "Git",
        "Environment",
        "C",
        "Visual",
        "Studio",
        "ASPNET45",
        "Web",
        "API",
        "Angular47",
        "Entity",
        "Framework",
        "HTML5",
        "JavaScript",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "SQL",
        "Server",
        "Agile",
        "Postman",
        "Git",
        "Azure",
        "DevOps",
        "Jasmine",
        "Karma",
        "Software",
        "Developer",
        "Angular5",
        "Web",
        "API",
        "Social",
        "Interest",
        "Solutions",
        "Sacramento",
        "CA",
        "May",
        "June",
        "Social",
        "Interest",
        "Solutions",
        "nonprofit",
        "access",
        "quality",
        "health",
        "services",
        "policy",
        "technology",
        "solutions",
        "HealtheArizona",
        "application",
        "Arizona",
        "Residents",
        "application",
        "services",
        "users",
        "coverage",
        "AHCCCS",
        "Nutrition",
        "Assistance",
        "Food",
        "Stamp",
        "program",
        "Cash",
        "Assistance",
        "HealtheArizona",
        "Plus",
        "customers",
        "benefits",
        "functions",
        "user",
        "application",
        "coverage",
        "management",
        "applications",
        "Roles",
        "Responsibilities",
        "requirement",
        "analysis",
        "design",
        "development",
        "Web",
        "application",
        "data",
        "exchange",
        "components",
        "Angular",
        "Input",
        "Output",
        "types",
        "data",
        "String",
        "Interpolation",
        "Property",
        "Binding",
        "Event",
        "Binding",
        "TwoWay",
        "Data",
        "Binding",
        "RXJS",
        "library",
        "Angular",
        "service",
        "layer",
        "subscription",
        "component",
        "material",
        "dialog",
        "users",
        "applications",
        "input",
        "fields",
        "autocomplete",
        "user",
        "input",
        "autocomplete",
        "Angular",
        "Material",
        "validation",
        "form",
        "validations",
        "users",
        "input",
        "business",
        "classes",
        "interfaces",
        "NET",
        "Framework",
        "Object",
        "Oriented",
        "Programming",
        "Methodology",
        "Expertise",
        "JSON",
        "Web",
        "Token",
        "JWT",
        "authentication",
        "web",
        "application",
        "Content",
        "Negotiation",
        "Web",
        "API",
        "response",
        "representations",
        "formats",
        "business",
        "logic",
        "Action",
        "Filters",
        "authorization",
        "filters",
        "action",
        "filters",
        "exception",
        "filters",
        "application",
        "performance",
        "Onion",
        "Architecture",
        "separation",
        "concerns",
        "Dependency",
        "Injection",
        "code",
        "ease",
        "maintenance",
        "Unit",
        "Test",
        "classes",
        "business",
        "class",
        "methods",
        "conditions",
        "test",
        "data",
        "objects",
        "Git",
        "GitHub",
        "version",
        "controls",
        "code",
        "merges",
        "Environment",
        "Visual",
        "Studio",
        "NET",
        "Framework",
        "SQL",
        "Server",
        "C",
        "Web",
        "API",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Angular5",
        "JSON",
        "TSQL",
        "Unit",
        "Test",
        "Software",
        "Developer",
        "Albina",
        "Community",
        "Bank",
        "Portland",
        "May",
        "April",
        "Albina",
        "Community",
        "Bank",
        "Certified",
        "Community",
        "Development",
        "Financial",
        "Institution",
        "mission",
        "opportunity",
        "community",
        "development",
        "project",
        "investment",
        "management",
        "platform",
        "corporations",
        "platform",
        "investment",
        "options",
        "stock",
        "ETFs",
        "funds",
        "bonds",
        "Users",
        "accounts",
        "investment",
        "options",
        "functionalities",
        "users",
        "products",
        "stock",
        "ETFs",
        "funds",
        "bonds",
        "Roles",
        "Responsibilities",
        "SDLC",
        "project",
        "Design",
        "Development",
        "Testing",
        "Agile",
        "Scrum",
        "Methodology",
        "Views",
        "Partial",
        "views",
        "ASP",
        "NET",
        "MVC",
        "MVC",
        "Routing",
        "rules",
        "URLs",
        "request",
        "JavaScript",
        "jQuery",
        "Ajax",
        "filters",
        "sliders",
        "Users",
        "search",
        "purpose",
        "user",
        "input",
        "field",
        "AJAX",
        "control",
        "jQuery",
        "UI",
        "Employed",
        "Layout",
        "page",
        "views",
        "views",
        "view",
        "Onion",
        "Architecture",
        "separation",
        "concerns",
        "Repository",
        "Pattern",
        "project",
        "applications",
        "service",
        "Unit",
        "Work",
        "functionality",
        "rest",
        "object",
        "data",
        "annotation",
        "models",
        "order",
        "constraints",
        "database",
        "data",
        "approach",
        "conventions",
        "objects",
        "types",
        "AutoMapper",
        "SQL",
        "statements",
        "data",
        "database",
        "example",
        "database",
        "search",
        "MS",
        "SQL",
        "Server",
        "tables",
        "sample",
        "data",
        "SQL",
        "sample",
        "data",
        "application",
        "Prepared",
        "unit",
        "test",
        "cases",
        "NUnit",
        "Testing",
        "system",
        "implementation",
        "test",
        "cases",
        "code",
        "requirements",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "Regression",
        "Testing",
        "Environment",
        "Agile",
        "Scrum",
        "Windows",
        "C",
        "NET",
        "Framework",
        "ASP",
        "NET",
        "MVC",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "XML",
        "SQL",
        "Server",
        "TSQL",
        "Visual",
        "Studio",
        "Unit",
        "Test",
        "Entity",
        "Framework",
        "Software",
        "Developer",
        "AllCare",
        "Health",
        "Grants",
        "Pass",
        "May",
        "April",
        "AllCare",
        "Health",
        "health",
        "organization",
        "Southern",
        "Oregon",
        "project",
        "web",
        "software",
        "platform",
        "marketing",
        "departments",
        "recruitment",
        "placement",
        "activities",
        "line",
        "Job",
        "requirements",
        "candidate",
        "profiles",
        "client",
        "requirements",
        "information",
        "database",
        "software",
        "database",
        "basis",
        "Job",
        "criteria",
        "Information",
        "Management",
        "System",
        "payroll",
        "system",
        "Roles",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "development",
        "process",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "application",
        "concepts",
        "ASPNET",
        "MVC",
        "Onion",
        "Architecture",
        "Employed",
        "JavaScript",
        "jQuery",
        "AJAX",
        "filtering",
        "candidates",
        "page",
        "functionality",
        "frontend",
        "WCF",
        "data",
        "exchange",
        "view",
        "controller",
        "ViewModel",
        "views",
        "ViewBag",
        "ViewData",
        "TempData",
        "data",
        "controller",
        "actions",
        "routing",
        "authentication",
        "navigability",
        "security",
        "password",
        "Form",
        "Validation",
        "endpoints",
        "WCF",
        "runtime",
        "communication",
        "channels",
        "message",
        "address",
        "contract",
        "ABC",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "hire",
        "requests",
        "recruitments",
        "queries",
        "data",
        "resources",
        "LINQ",
        "Lambda",
        "Expression",
        "Entity",
        "Framework",
        "Database",
        "First",
        "approach",
        "program",
        "database",
        "validations",
        "JavaScript",
        "validations",
        "ASP",
        "Net",
        "SoapUI",
        "WCF",
        "functionality",
        "Environment",
        "ASP",
        "NET",
        "C",
        "ADO",
        "NET",
        "Entity",
        "Framework",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "AJAX",
        "ASPNET",
        "MVC5",
        "LINQ",
        "Web",
        "API",
        "SQL",
        "Server",
        "XML",
        "JSON",
        "SoapUI",
        "Software",
        "Developer",
        "Web",
        "Forms",
        "Siga",
        "Technologies",
        "Inc",
        "Corvallis",
        "June",
        "April",
        "SIGA",
        "Technologies",
        "Inc",
        "company",
        "New",
        "York",
        "City",
        "Development",
        "operations",
        "Corvallis",
        "Clinic",
        "Management",
        "System",
        "stores",
        "patients",
        "medicine",
        "information",
        "records",
        "EMR",
        "medicine",
        "management",
        "system",
        "information",
        "management",
        "system",
        "Roles",
        "Responsibilities",
        "requirements",
        "design",
        "architecture",
        "programming",
        "testing",
        "implementation",
        "application",
        "ASP",
        "NET",
        "Web",
        "Form",
        "application",
        "Visual",
        "Studio",
        "testdriven",
        "development",
        "TDD",
        "approach",
        "architecture",
        "searching",
        "filtering",
        "medicine",
        "information",
        "JavaScript",
        "AJAX",
        "UI",
        "user",
        "web",
        "pages",
        "classes",
        "functions",
        "Web",
        "Form",
        "C",
        "JavaScript",
        "validation",
        "buttons",
        "styles",
        "functions",
        "Repeater",
        "Control",
        "ADONET",
        "building",
        "connections",
        "database",
        "SqlConnection",
        "connection",
        "string",
        "DataReader",
        "DataAdapter",
        "data",
        "database",
        "Dependency",
        "Injection",
        "constructor",
        "injections",
        "components",
        "IOC",
        "container",
        "Agile",
        "SCRUM",
        "methodology",
        "progress",
        "task",
        "assignment",
        "meetings",
        "Unit",
        "testing",
        "MS",
        "testing",
        "integration",
        "testing",
        "application",
        "Environment",
        "ASP",
        "NET",
        "Web",
        "Forms",
        "ADONET",
        "AJAX",
        "jQuery",
        "Agile",
        "Scrum",
        "Unit",
        "test",
        "Visual",
        "Studio",
        "SQL",
        "Server",
        "JavaScript",
        "C",
        "TDD",
        "Unit",
        "Test",
        "Education",
        "Masters",
        "Skills",
        "studio",
        "Api",
        "C",
        "Git",
        "Javascript",
        "Bootstrap",
        "Typescript",
        "Json",
        "Vs",
        "code",
        "Wcf",
        "Svn",
        "Xml",
        "Ado",
        "Database",
        "Adonet",
        "Microsoft",
        "server",
        "Sql",
        "server",
        "Sql",
        "Ajax",
        "Java",
        "NET",
        "Node",
        "Angular",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "Typescript",
        "jQuery",
        "Angular",
        "Bootstrap",
        "Angular",
        "Material",
        "Programming",
        "Microsoft",
        "C",
        "JavaScript",
        "TSQL",
        "NET",
        "ASPNET",
        "ADONET",
        "Web",
        "Forms",
        "MVC",
        "Web",
        "Services",
        "WCF",
        "Web",
        "API",
        "Entity",
        "Framework",
        "Visual",
        "Studio",
        "Database",
        "SQL",
        "Microsoft",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "TSQL",
        "Others",
        "Git",
        "SVN",
        "XML",
        "JSON",
        "AJAX",
        "RESTful",
        "Postman",
        "SDLC",
        "Agile",
        "Scrum",
        "VS",
        "Code",
        "Jasmine",
        "Karma"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:37:28.859913",
    "resume_data": "Full Stack Developer Angular47 Web API Full Stack span lDeveloperspan Angular4amp7span lWebspan API Full Stack Developer Angular47 Web API ProSight Specialty Insurance Group Boston MA Full Stack Developer with 5 years of experience in both frontend and backend software engineering with focus on NET technologies in various domains including healthcare and finance Working experience in Angular 4 5 and 7 developing services modules components directives custom directives routing and performed validations Solid understanding in single page applications SPA development using the Angular framework Bootstrap jQuery and AJAX which allows a program to function without page reloads Experienced in designing the UI with HTML5 CSS3 Bootstrap and Angular material Expertise in Web based languages such as HTML5 CSS3 JavaScript jQuery JSON and XML with framework Experienced in NET technologies including ASPNET ADONET Web Forms LINQ to SQL Entity Framework 6 and MVC 5 Strong experience in developing NET applications using Web services Windows Communication Foundation WCF and Web API Hands on experience in design and development of applications using Object Oriented languages including Microsoft C used in ASPNET and Typescript in Angular projects Proficient in both Ntier and Onion architecture allowing for separation of concerns in projects that require RDS data Expertise in SQL Server writing Stored Procedures UserDefined Functions UDF Views Indexes Triggers Joins and other Complex Queries using TSQL Expertise in creating SQL server reports using SSRS Skilled in writing programs that can read and manipulate JSON script as another means of packaging data to be used in projects Used postman to simulate and debug Web API and SOAPUI to test the WCF and Web Service based application Demonstrated version control using SVN and Git via GitHub to allow contributions from team members into projects as well as highlight progress and issues Successfully participated in software methodology such as Agile Scrum Testdriven development TDD and Waterfall methodologies Selfmotivated collaborated with team worked under high pressure worked in several projects simultaneously dynamic problemsolving adept at working with minimal to supervision and worked with highlycaliber teams of professionals Authorized to work in the US for any employer Work Experience Full Stack Developer Angular47 Web API ProSight Specialty Insurance Group Morristown NJ July 2018 to Present ProSight Specialty Insurance Group Inc is a private specialty insurance company based in Morristown NJ ProSight Health Plans Insurance Management System is fully automated and integrated application for managing the Policy plans Agent Commission incurred but not paid and Settlements This Insurance Management System manages different claims per policies claim settlements and allows coverage verifications I was involved in developing the claims management system and designing the frontend for management system Roles and Responsibilities Involved in the complete Software Development Life Cycle including Analysis Design Implementation Testing and Maintenance Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Used HTML5 CSS3 AngularUI Bootstrap Angular Material Forms and Typescript at the frontend to provide design styling and logic for the project Experienced in implementing authentication and authorization by using route guards and interceptors The project requires email and password to check the credentials and used the JSON Web Tokens JWT to check the authorities of the users Implemented pagination for the claims page by using Angular ngxpagination and search filter by creating a custom filter pipe Created angular services to serve for different functions such as data services account services and route guard Experienced on Web API and created web application worked on CRUD actions HTTP get post put and delete attribute routing and used Http Response message approach Accessed and updated data through RESTFUL services using JSON as the main requestresponse format Enabled CORS to allow communication between the frontend Angular project and the backend Web API functionality Implemented LINQtoEntities queries operate on the entity set DbSet type properties to access the data from the underlying database Implemented code first approach with entity framework to build connections between Web API and database Designed and developed databases which include the development of functions stored procedures and triggers using T SQL Implemented Jasmine unit tests for Angular and used Karma to run the tests for Behavior Driven Development BDD Purpose Used Postman to test the Web API to ensure proper functionality of the backend Managed all development tasks and source code modifications via Azure DevOps and Git Environment C Visual Studio 2017 ASPNET45 Web API Angular47 Entity Framework 6 LINQ HTML5 JavaScript CSS3 AJAX JSON jQuery SQL Server 2018 Agile Postman Git Azure DevOps Jasmine and Karma Software Developer Angular5 Web API Social Interest Solutions Sacramento CA May 2017 to June 2018 Social Interest Solutions is a national nonprofit dedicated to improving access to quality health and social services through policy and technology solutions HealtheArizona Plus which is an online application for Arizona Residents This application provides services to users to apply for medical coverage through AHCCCS Nutrition Assistance formerly known as the Food Stamp program and Cash Assistance HealtheArizona Plus is used even for existing customers or for those who are currently receiving benefits I was involved in implementing the functions for user to create application for medical coverage and the management of applications Roles and Responsibilities Involved in requirement analysis design and development of Web application Implemented data exchange between components by using Angular Input and Output Experienced in different types of data binding in angular such as String Interpolation Property Binding Event Binding and TwoWay Data Binding Used Observable from the RXJS library in the Angular service layer to enable subscription in the component Implemented Angular material dialog for users to create new applications Created input fields with autocomplete for user input by using autocomplete in Angular Material Implemented clientside validation by using Angular form validations when we need users input Created different business classes and interfaces using NET Framework 45 with Object Oriented Programming Methodology Expertise in creating JSON Web Token JWT rolebased authentication in OWINbased web application Enabled Content Negotiation to allow Web API to request and response in different representations and formats Implemented business logic using Action Filters like authorization filters action filters and exception filters Used bundling to improve application performance Utilized Onion Architecture to allow for separation of concerns and minimize coupling Used Dependency Injection to promote reusable code and ease of maintenance Implemented Unit Test classes for business class methods to check all possible conditions worked with test data provided using MOCK objects Used Git from GitHub for version controls and code merges Environment Visual Studio 2015 NET Framework 45 SQL Server 2014 C Web API HTML5 CSS3 Bootstrap 4 Angular5 JSON TSQL and Unit Test Software Developer Albina Community Bank Portland OR May 2016 to April 2017 Albina Community Bank is a Certified Community Development Financial Institution CDFI with a mission to increase economic opportunity and promote community development The project is to develop an online investment management platform for corporations The platform offers investment options such as stock ETFs mutual funds and bonds Users could create accounts and are able to choose from all the investment options I was involved in implementing the functionalities for users searching products and managing their stock ETFs mutual funds and bonds Roles and Responsibilities Involved in SDLC of the project from Design Development and Testing in Agile Scrum Methodology Developed Views Partial views using ASP NET MVC and used MVC Routing rules to match the URLs of the incoming request Used JavaScript jQuery and Ajax to implement filters with sliders for the Users search purpose Created user input field with autocomplete by using AJAX control and jQuery UI Employed Layout page and multiple partial views to combine the views as a single view when launched and refreshed Utilized Onion Architecture to allow for separation of concerns and minimize coupling Repository Pattern is used to build the project by combining serviceoriented applications Most notably the service employs Unit of Work to provide the functionality to the rest of the object Applied data annotation to models in order to add constraints to database when using data first approach Implemented conventions between objects with dissimilar types by using AutoMapper SQL statements were used to obtain the appropriate data from database For example it is used in filtering the database during a search Used MS SQL Server to create the tables and sample data via SQL commands The sample data were used to test the application Prepared unit test cases and performed NUnit Testing prior to system implementation and wrote test cases for testing the code based on the requirements and involved in the Unit testing Integration Testing and Regression Testing Environment Agile Scrum Windows C NET Framework ASP NET MVC 5 HTML5 CSS3 JavaScript jQuery AJAX JSON XML SQL Server TSQL Visual Studio 2014 Unit Test and Entity Framework 6 Software Developer AllCare Health Grants Pass OR May 2015 to April 2016 AllCare Health is an integrated health organization based in Southern Oregon The project is a web based 3tier software platform for the marketing departments to facilitate their recruitment and placement activities on line Job requirements were standardized candidate profiles client requirements and information are stored in database The software provided for querying the database on the basis of the Job criteria I was involved in developing Information Management System and payroll system Roles and Responsibilities Involved in the complete Software Development Life Cycle SDLC for development process and Agile including Analysis Design Implementation Testing and Maintenance Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Employed JavaScript jQuery and AJAX to enable searching and filtering of candidates without needing to reload the page The functionality is connected to the frontend through WCF Experienced in data exchange between view and controller by using ViewModel strongly typed views ViewBag and ViewData Used TempData to pass data between controller actions Implemented routing and authentication for easy navigability and security through a username and password coupled with Form Validation Created endpoints for WCF to build the runtime communication channels to send and receive message by using address binding and contract ABC Demonstrated create read update and delete CRUD functionalities for hire requests and recruitments Created queries to different data resources by using LINQ and Lambda Expression Entity Framework Database First approach was used to allow the program to connect with the database Created clientside validations with JavaScript and serverside validations with ASP Net 45 Used SoapUI to test the WCF to ensure proper functionality of the backend Environment ASP NET C ADO NET Entity Framework 6 HTML5 CSS3 JavaScript jQuery Bootstrap AJAX ASPNET MVC5 LINQ Web API SQL Server XML JSON and SoapUI Software Developer Web Forms Siga Technologies Inc Corvallis OR June 2014 to April 2015 SIGA Technologies Inc is a pharmaceutical company set up in 1995 that is now based in New York City and Development operations in Corvallis OR Clinic Management System stores and manages patients and medicine information such as the electronic medical records EMR and medicine management system I was involved in developing the information and records management system Roles and Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Developed an ASP NET Web Form application in Visual Studio using the testdriven development TDD approach based on 3layer architecture Implemented searching and filtering of medicine information using JavaScript and AJAX Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using Web Form C and JavaScript for clientside validation Created buttons with similar styles and functions automatically with Repeater Control Experienced in using ADONET which includes building connections to database by using SqlConnection with connection string and using DataReader and DataAdapter to fetch data from database Implemented Dependency Injection with constructor injections for loosely coupled components using IOC container Followed Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASP NET Web Forms ADONET AJAX jQuery Agile Scrum Unit test Visual Studio 2012 SQL Server 2008 JavaScript C TDD and Unit Test Education Masters Skills net Visual studio Api C Git Javascript Bootstrap Typescript Json Vs code Wcf Svn Xml Ado Database Adonet Microsoft sql server Sql server Sql Ajax Java NET Node Angular Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Typescript jQuery Angular 4 5 7 Bootstrap Angular Material Programming Microsoft C JavaScript TSQL NET ASPNET ADONET Web Forms MVC 5 Web Services WCF Web API Entity Framework 6 LINQ Visual Studio 20152018 Database SQL Microsoft SQL Server Management Studio 20122017 TSQL Others Git SVN XML JSON AJAX RESTful Postman SDLC Agile Scrum VS Code Jasmine Karma",
    "unique_id": "459b3315-1142-42b1-a934-a11c4f0252f9"
}