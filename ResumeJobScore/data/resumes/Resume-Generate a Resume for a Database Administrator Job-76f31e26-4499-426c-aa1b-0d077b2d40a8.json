{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Nabors Industries Inc Houston TX Over 4 years of IT experience in all phases of Software Development Life Cycle and Maintenance of web based and client server multitier applicationsarchitectures using JavaJ2EE technologies Good experience in implementing Java web compliant applications using spring springboot and hibernate framework Experienced in implementing NET web compliant APIs using NET Core and Dapper framework Strong background in objectoriented programming concepts Experience in designing POJO classes using Hibernate Annotations using JPA API Experience in design and implementation of our REST APIs Experience in UI technologies like HTML5 AngularJS Angular JavaScript Typescript CSS Bootstrap and AJAX Expertise with Ajax Calls to Jackson framework to direct call java methods and Play routing for restful web services Strong experience in various IDEs like Eclipse WebStorm Visual Studio Notepad IntelliJ and VSCode Experience in implementing web applications using JBoss and Apache Experience with versioning tools like VSTS GIT and TFS Worked independently in many of my academic projects and was able to manage priorities and tasks before the deadline Sponsorship required to work in the US Work Experience Full Stack Developer Nabors Industries Inc July 2017 to Present Project RigCLOUDWITSML Description The RigCLOUDplatform is the oil and gas industrys nextgeneration cloud platform uniquely designed for developing and hosting any software analytics programs or other applications at the rig site Its capabilities include Highfrequency data collection Data integration Streaming data analytics Hosting of drilling applications Process automation Remote access Remote operations Open systems integration Responsibilities Designed and Implemented RealTime Server that will establish sessions with each Oil Rig and start storing live data in Oracle DB and MapR streams Implemented MapR producer that will create Topics and Queues as soon as the Oil Rig starts session When the RealTime server starts receiving the data MapR producer publishes the same to Topics and MapR clients will start consuming data One of the MapR client includes StreamBase that will generate alerts depending upon the data and communicates the same to business users Implemented ASPNET Core Well Log and RCApplications APIs to provide well log and RigCLOUD applications information to RealTime Server Implemented a Security API that will act as a security layer between user and the Cloud APIs to prevent unauthorized access to the Cloud APIs Implemented Database Schema for RigCLOUDs Datacenter using SQL and Oracle database Implemented SQL procedures Triggers Sequences and Database configuration scripts for the same Implemented Trajectory Rig Message Tags and Aggregates APIs using ASPNET Core and Dapper These APIs will be used by WITSML Studio to persist and fetch data from datacenter These APIs are done to implement microservices architecture and improve response time by distributing the computation logic to different processes Encoded the data in Protobuff and MessagePack format before transmitting it via satellite to reducethe bandwidth consumption Implemented all the APIs in OpenAPISpecifications and Implemented Swagger in all the APIs to ease the use for end user Implemented API testing suits in SoapUI and JMeter to test the functionality and performance of APIs Implemented Steeltoe in all APIs to send health metrics and performance information to RigCLOUD Admin Implemented RigCLOUD Admin server to which all Cloud APIs Send health and metrics information This server is used to monitor all the Cloud APIs Implemented AutoFac Interception AOP module to log the elapsed time for each method during run time Implemented Redis Caching and Cache Invalidation to improve the API performance Implemented Eureka server This will act as service registry server to all the APIs Deployed and hosted all the APIs and applications on IIS server in Development environment Implemented Shell scripts for each application to run stop and monitor in the hosted environment Deployed all the Net Core APIs SpringBoot servres and Java Applications in Microsoft Azure Cloud Implemented APIs using Spring Boot and Apache Solr to improve search box response time by indexing table columns Software Developer Tietronix August 2016 to December 2016 Project Automation of Virtual Tour Creation Description Our team has created a WPF application which lets the user drag and drop the thumbnail images on to a grid layout After dropping all the images in their respective positions and clicking the process button the application creates a tour file This file when opened in the virtual tour viewer will take the user through the 360degree tour of the property Responsibilities Participated in all the phases of the web site and desktop application development life cycle involving analysis design development testing and deployment of the project Developed and maintained a website for the project Developed a frontend UI using XAML which lets the user drag and drop images on the grid Designed and implemented business methods which will let the user select a folder of images and convert them into thumbnails Designed and implemented methods which read the image patterns from the grid and create a text file which contains the relationship among those images This file is then fed to the Virtual tour viewer which shows the virtual tour of the property by reading the text file Solved memory leak problem in the application by weak referencing instead of strong referencing and virtualization Using VSTS as configuration control system Visual Studio for development environment and MVVM Design pattern for the application EnvironmentTools Visual Studio VSTS MVVM C ASPNET XAML WPF NCTech Immersive studio Iris 360 Programmer Analyst Full Stack Java Developer Cognizant Technology Solutions September 2013 to July 2015 Project1 Car Tracker Description The APIs of this application ingests the live data from moving cars like fuel capacity RPM geographical location etc and stores in the database This data is then used to generate alerts and send it back to the car This application also has a UI which lets the user to track the car and view the history of alerts etc Responsibilities Implemented the Graphic User Interface GUI by coding in HTML5 CSS Bootstrap JavaScript AngularJS Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented corresponding service to handle the request from frontend pages like adding new cars and car readings Developed single page applications SPAs using AngularJS to improve page performance and consumed REST web services Used JSON objects effectively for efficient clientside coding Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Developed serverside logic using Spring MVC Hibernate and JPA by writing configurations Built DAO package as well as DAO IMPL package to implement the data access logic and using Hibernate Annotation to do the data mapping Wrote Hibernate configuration files to enable the data transactions between POJO and Database Wrote JUnit test case for backend logic implementation development EnvironmentTools HTML CSS HTTP JavaScript SQL JPQL Agile XML web services Java J2EE Spring MVC Hibernate3 JPA JSON Jackson Maven RESTful APIs AngularJS MVW WebStorm Nodejs npm bower gulp GitHub JUnit Project2 ACEGTK migration Description This project consists of 4 different modules interacting with each other those are ABI GTI TSI MIB The main scope of the project was to replace TSI having UNIX server with GTK having Windows server The ABI system consists of shell scripts which were used to run batch jobs for MIB Since the SQL loader was not compatible with windows DB these shell scripts were programmed again into ETL scripts Responsibilities Conducting meetings with clients of both the systems for understanding the customer records and its attributes Used  Scheduler to Schedule Start of the Day SOD and End of the Day EOD job SOD creates a Child Data space of Master Data space where feed files are loaded Configured job schedule so that job is kicked off at the appropriate time Involved in batch processing using Spring Batch framework to validate feed files and load data into corresponding AIB database tables EOD merges Child Data space with Master Data space and ensures single version and governance of master data Documented how Spring Batch is useful for the current project Worked with Mocking while running the Junit test cases for batch processing Validated if every job is doing what it is supposed to do after replacing TSI UNIX server application with GTK Windows server desktop application EnvironmentTools Shell Scripts JSP servlets JDBC Oracle SQL Web Sphere Application Server TFS Spring Batch maven Project3 TNO Tariff Restructure Transportation Network Optimization Description The main aim of this job is to take the approved Freight Bills from AIB database and depending upon the category of the freight bill data should be updated into the freight bill tables of corresponding MIB database tables Responsibilities Responsible for collecting data from archive documents analyzed requirements and documented Technical Design document for project modules Involved in batch processing using Spring Batch framework to extract data from AIB database and load into corresponding MIB tables Involved in writing program specification and coding business methods These methods are then called using JDBC Extracted the xml document from AIB database and pushed the document into Message Queues Coordinated with the Database team to add a freight bill table into the MIB database XML documents will be read from Message Queues by FEPA job and values from freight bill will be updated into MIB database using Spring Batch job Developing Junit test cases using HSQL DB Using Apache Ant as build management system TFS as configuration control system and IBM Rational Software Architect as development environment Coordinated with application maintenance team for scheduling and running jobs Experience and knowledge in cryptography encryption and encoding algorithms EnvironmentTools Rational Software Architect Oracle 11g PLSQL Spring Batch TFS MSVisio JSP servlets JDBC Web Sphere Application Server maven Education Masters of Science in Computer Science in Computer Science University of Houston Houston TX May 2017 engineering Sreenidhi Institute of Science Technology Hyderabad Telangana May 2013 Skills database 2 years Java 2 years JSON 2 years Junit 2 years Maven 2 years Angular Javascript Jquery spring boot 2 years spring security 2 years Net Core 2 years Angular 6 dapper 2 years Apache Solr 2 years Gradle 2 years Links httpswwwlinkedincominirfansk66httpsgithubcomirfansk66 Additional Information Technical Skills Programming Languages C C C Java SQL PHP Frameworks Spring MVC Spring Batch ASPNET Hibernate WPF MVVM MVW Database Oracle MySQL UI Web Technologies XML HTMLHTML5 XAML CSSCSS3 Bootstrap JavaScript AngularJS Nodejs AJAX JSON Bower npm and Gulp Developer Tools Eclipse Visual Studio NetBeans IntelliJ WebStorm VSCode Web Services REST JAXRS JERSY Jackson Application Servers Tomcat Web sphere Application Server JBoss Unit Testing Frameworks Junit Operating Systems Windows Linux Kali Linux Build Tools Ant Maven Jenkins Gulp Bower Version Control TFS VSTS Git",
    "entities": [
        "Topics",
        "HTML5 CSS Bootstrap JavaScript",
        "WebStorm",
        "WITSML Studio",
        "UNIX",
        "TNO Tariff Restructure Transportation Network Optimization Description",
        "XML",
        "SOD",
        "Telangana",
        "Shell",
        "Present Project RigCLOUDWITSML Description",
        "Database Wrote",
        "VSCode",
        "JavaJ2EE",
        "ASPNET Core",
        "Responsibilities Implemented the Graphic User Interface GUI",
        "Developed",
        "Links httpswwwlinkedincominirfansk66httpsgithubcomirfansk66",
        "Software Development Life Cycle and Maintenance",
        "MessagePack",
        "Cloud Implemented",
        "Windows",
        "Child Data",
        "JSP",
        "Protobuff",
        "Built",
        "JBoss",
        "Hibernate Annotation",
        "Hibernate Annotations",
        "NCTech Immersive",
        "GTK Windows",
        "NET",
        "WPF",
        "Wrote Hibernate",
        "RigCLOUD Admin Implemented",
        "ABI",
        "API",
        "US",
        "Database",
        "GTK",
        "POJO",
        "Coordinated",
        "Oracle DB",
        "AIB",
        "Triggers Sequences",
        "the Net Core APIs SpringBoot",
        "Responsibilities Responsible",
        "EnvironmentTools Rational Software Architect Oracle",
        "Spring MVC Hibernate",
        "Worked with Mocking",
        "SQL",
        "Project Automation of Virtual Tour Creation Description Our",
        "IBM Rational Software Architect",
        "XAML",
        "GitHub JUnit",
        "MVW WebStorm Nodejs",
        "RigCLOUDplatform",
        "Implemented Steeltoe",
        "MIB",
        "Queues",
        "Virtual",
        "Gulp Developer Tools Eclipse Visual Studio",
        "MapR",
        "ETL",
        "Eclipse WebStorm Visual Studio Notepad",
        "TFS Worked",
        "UI",
        "Microsoft",
        "VSTS GIT",
        "NET Core",
        "VSTS",
        "Responsibilities Conducting",
        "REST",
        "NetBeans",
        "Technical Design",
        "EOD",
        "Sreenidhi Institute of Science Technology Hyderabad",
        "Jackson",
        "Master Data",
        "EnvironmentTools Visual Studio"
    ],
    "experience": "Experience in designing POJO classes using Hibernate Annotations using JPA API Experience in design and implementation of our REST APIs Experience in UI technologies like HTML5 AngularJS Angular JavaScript Typescript CSS Bootstrap and AJAX Expertise with Ajax Calls to Jackson framework to direct call java methods and Play routing for restful web services Strong experience in various IDEs like Eclipse WebStorm Visual Studio Notepad IntelliJ and VSCode Experience in implementing web applications using JBoss and Apache Experience with versioning tools like VSTS GIT and TFS Worked independently in many of my academic projects and was able to manage priorities and tasks before the deadline Sponsorship required to work in the US Work Experience Full Stack Developer Nabors Industries Inc July 2017 to Present Project RigCLOUDWITSML Description The RigCLOUDplatform is the oil and gas industrys nextgeneration cloud platform uniquely designed for developing and hosting any software analytics programs or other applications at the rig site Its capabilities include Highfrequency data collection Data integration Streaming data analytics Hosting of drilling applications Process automation Remote access Remote operations Open systems integration Responsibilities Designed and Implemented RealTime Server that will establish sessions with each Oil Rig and start storing live data in Oracle DB and MapR streams Implemented MapR producer that will create Topics and Queues as soon as the Oil Rig starts session When the RealTime server starts receiving the data MapR producer publishes the same to Topics and MapR clients will start consuming data One of the MapR client includes StreamBase that will generate alerts depending upon the data and communicates the same to business users Implemented ASPNET Core Well Log and RCApplications APIs to provide well log and RigCLOUD applications information to RealTime Server Implemented a Security API that will act as a security layer between user and the Cloud APIs to prevent unauthorized access to the Cloud APIs Implemented Database Schema for RigCLOUDs Datacenter using SQL and Oracle database Implemented SQL procedures Triggers Sequences and Database configuration scripts for the same Implemented Trajectory Rig Message Tags and Aggregates APIs using ASPNET Core and Dapper These APIs will be used by WITSML Studio to persist and fetch data from datacenter These APIs are done to implement microservices architecture and improve response time by distributing the computation logic to different processes Encoded the data in Protobuff and MessagePack format before transmitting it via satellite to reducethe bandwidth consumption Implemented all the APIs in OpenAPISpecifications and Implemented Swagger in all the APIs to ease the use for end user Implemented API testing suits in SoapUI and JMeter to test the functionality and performance of APIs Implemented Steeltoe in all APIs to send health metrics and performance information to RigCLOUD Admin Implemented RigCLOUD Admin server to which all Cloud APIs Send health and metrics information This server is used to monitor all the Cloud APIs Implemented AutoFac Interception AOP module to log the elapsed time for each method during run time Implemented Redis Caching and Cache Invalidation to improve the API performance Implemented Eureka server This will act as service registry server to all the APIs Deployed and hosted all the APIs and applications on IIS server in Development environment Implemented Shell scripts for each application to run stop and monitor in the hosted environment Deployed all the Net Core APIs SpringBoot servres and Java Applications in Microsoft Azure Cloud Implemented APIs using Spring Boot and Apache Solr to improve search box response time by indexing table columns Software Developer Tietronix August 2016 to December 2016 Project Automation of Virtual Tour Creation Description Our team has created a WPF application which lets the user drag and drop the thumbnail images on to a grid layout After dropping all the images in their respective positions and clicking the process button the application creates a tour file This file when opened in the virtual tour viewer will take the user through the 360degree tour of the property Responsibilities Participated in all the phases of the web site and desktop application development life cycle involving analysis design development testing and deployment of the project Developed and maintained a website for the project Developed a frontend UI using XAML which lets the user drag and drop images on the grid Designed and implemented business methods which will let the user select a folder of images and convert them into thumbnails Designed and implemented methods which read the image patterns from the grid and create a text file which contains the relationship among those images This file is then fed to the Virtual tour viewer which shows the virtual tour of the property by reading the text file Solved memory leak problem in the application by weak referencing instead of strong referencing and virtualization Using VSTS as configuration control system Visual Studio for development environment and MVVM Design pattern for the application EnvironmentTools Visual Studio VSTS MVVM C ASPNET XAML WPF NCTech Immersive studio Iris 360 Programmer Analyst Full Stack Java Developer Cognizant Technology Solutions September 2013 to July 2015 Project1 Car Tracker Description The APIs of this application ingests the live data from moving cars like fuel capacity RPM geographical location etc and stores in the database This data is then used to generate alerts and send it back to the car This application also has a UI which lets the user to track the car and view the history of alerts etc Responsibilities Implemented the Graphic User Interface GUI by coding in HTML5 CSS Bootstrap JavaScript AngularJS Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented corresponding service to handle the request from frontend pages like adding new cars and car readings Developed single page applications SPAs using AngularJS to improve page performance and consumed REST web services Used JSON objects effectively for efficient clientside coding Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Developed serverside logic using Spring MVC Hibernate and JPA by writing configurations Built DAO package as well as DAO IMPL package to implement the data access logic and using Hibernate Annotation to do the data mapping Wrote Hibernate configuration files to enable the data transactions between POJO and Database Wrote JUnit test case for backend logic implementation development EnvironmentTools HTML CSS HTTP JavaScript SQL JPQL Agile XML web services Java J2EE Spring MVC Hibernate3 JPA JSON Jackson Maven RESTful APIs AngularJS MVW WebStorm Nodejs npm bower gulp GitHub JUnit Project2 ACEGTK migration Description This project consists of 4 different modules interacting with each other those are ABI GTI TSI MIB The main scope of the project was to replace TSI having UNIX server with GTK having Windows server The ABI system consists of shell scripts which were used to run batch jobs for MIB Since the SQL loader was not compatible with windows DB these shell scripts were programmed again into ETL scripts Responsibilities Conducting meetings with clients of both the systems for understanding the customer records and its attributes Used   Scheduler to Schedule Start of the Day SOD and End of the Day EOD job SOD creates a Child Data space of Master Data space where feed files are loaded Configured job schedule so that job is kicked off at the appropriate time Involved in batch processing using Spring Batch framework to validate feed files and load data into corresponding AIB database tables EOD merges Child Data space with Master Data space and ensures single version and governance of master data Documented how Spring Batch is useful for the current project Worked with Mocking while running the Junit test cases for batch processing Validated if every job is doing what it is supposed to do after replacing TSI UNIX server application with GTK Windows server desktop application EnvironmentTools Shell Scripts JSP servlets JDBC Oracle SQL Web Sphere Application Server TFS Spring Batch maven Project3 TNO Tariff Restructure Transportation Network Optimization Description The main aim of this job is to take the approved Freight Bills from AIB database and depending upon the category of the freight bill data should be updated into the freight bill tables of corresponding MIB database tables Responsibilities Responsible for collecting data from archive documents analyzed requirements and documented Technical Design document for project modules Involved in batch processing using Spring Batch framework to extract data from AIB database and load into corresponding MIB tables Involved in writing program specification and coding business methods These methods are then called using JDBC Extracted the xml document from AIB database and pushed the document into Message Queues Coordinated with the Database team to add a freight bill table into the MIB database XML documents will be read from Message Queues by FEPA job and values from freight bill will be updated into MIB database using Spring Batch job Developing Junit test cases using HSQL DB Using Apache Ant as build management system TFS as configuration control system and IBM Rational Software Architect as development environment Coordinated with application maintenance team for scheduling and running jobs Experience and knowledge in cryptography encryption and encoding algorithms EnvironmentTools Rational Software Architect Oracle 11 g PLSQL Spring Batch TFS MSVisio JSP servlets JDBC Web Sphere Application Server maven Education Masters of Science in Computer Science in Computer Science University of Houston Houston TX May 2017 engineering Sreenidhi Institute of Science Technology Hyderabad Telangana May 2013 Skills database 2 years Java 2 years JSON 2 years Junit 2 years Maven 2 years Angular Javascript Jquery spring boot 2 years spring security 2 years Net Core 2 years Angular 6 dapper 2 years Apache Solr 2 years Gradle 2 years Links httpswwwlinkedincominirfansk66httpsgithubcomirfansk66 Additional Information Technical Skills Programming Languages C C C Java SQL PHP Frameworks Spring MVC Spring Batch ASPNET Hibernate WPF MVVM MVW Database Oracle MySQL UI Web Technologies XML HTMLHTML5 XAML CSSCSS3 Bootstrap JavaScript AngularJS Nodejs AJAX JSON Bower npm and Gulp Developer Tools Eclipse Visual Studio NetBeans IntelliJ WebStorm VSCode Web Services REST JAXRS JERSY Jackson Application Servers Tomcat Web sphere Application Server JBoss Unit Testing Frameworks Junit Operating Systems Windows Linux Kali Linux Build Tools Ant Maven Jenkins Gulp Bower Version Control TFS VSTS Git",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "Nabors",
        "Industries",
        "Inc",
        "Houston",
        "TX",
        "years",
        "IT",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Maintenance",
        "web",
        "client",
        "server",
        "applicationsarchitectures",
        "JavaJ2EE",
        "technologies",
        "experience",
        "Java",
        "web",
        "compliant",
        "applications",
        "spring",
        "springboot",
        "hibernate",
        "framework",
        "NET",
        "web",
        "compliant",
        "APIs",
        "NET",
        "Core",
        "Dapper",
        "framework",
        "background",
        "programming",
        "concepts",
        "Experience",
        "POJO",
        "classes",
        "Hibernate",
        "Annotations",
        "JPA",
        "API",
        "Experience",
        "design",
        "implementation",
        "REST",
        "APIs",
        "Experience",
        "UI",
        "technologies",
        "HTML5",
        "AngularJS",
        "Angular",
        "JavaScript",
        "Typescript",
        "CSS",
        "Bootstrap",
        "AJAX",
        "Expertise",
        "Calls",
        "Jackson",
        "framework",
        "call",
        "methods",
        "web",
        "services",
        "experience",
        "IDEs",
        "Eclipse",
        "WebStorm",
        "Visual",
        "Studio",
        "Notepad",
        "IntelliJ",
        "VSCode",
        "Experience",
        "web",
        "applications",
        "JBoss",
        "Apache",
        "Experience",
        "tools",
        "VSTS",
        "GIT",
        "TFS",
        "projects",
        "priorities",
        "tasks",
        "deadline",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Nabors",
        "Industries",
        "Inc",
        "July",
        "Present",
        "Project",
        "RigCLOUDWITSML",
        "Description",
        "RigCLOUDplatform",
        "oil",
        "gas",
        "industrys",
        "nextgeneration",
        "cloud",
        "platform",
        "software",
        "analytics",
        "programs",
        "applications",
        "rig",
        "site",
        "capabilities",
        "Highfrequency",
        "data",
        "collection",
        "Data",
        "integration",
        "data",
        "analytics",
        "Hosting",
        "drilling",
        "applications",
        "Process",
        "automation",
        "access",
        "Remote",
        "operations",
        "Open",
        "systems",
        "integration",
        "Responsibilities",
        "RealTime",
        "Server",
        "sessions",
        "Oil",
        "Rig",
        "data",
        "Oracle",
        "DB",
        "MapR",
        "MapR",
        "producer",
        "Topics",
        "Queues",
        "Oil",
        "Rig",
        "session",
        "RealTime",
        "server",
        "starts",
        "data",
        "MapR",
        "producer",
        "Topics",
        "MapR",
        "clients",
        "data",
        "MapR",
        "client",
        "StreamBase",
        "alerts",
        "data",
        "business",
        "users",
        "ASPNET",
        "Core",
        "Log",
        "RCApplications",
        "APIs",
        "log",
        "RigCLOUD",
        "applications",
        "information",
        "RealTime",
        "Server",
        "Security",
        "API",
        "security",
        "layer",
        "user",
        "Cloud",
        "APIs",
        "access",
        "Cloud",
        "APIs",
        "Database",
        "Schema",
        "RigCLOUDs",
        "Datacenter",
        "SQL",
        "Oracle",
        "database",
        "SQL",
        "procedures",
        "Triggers",
        "Sequences",
        "Database",
        "configuration",
        "scripts",
        "Implemented",
        "Trajectory",
        "Rig",
        "Message",
        "Tags",
        "Aggregates",
        "APIs",
        "ASPNET",
        "Core",
        "Dapper",
        "APIs",
        "WITSML",
        "Studio",
        "data",
        "datacenter",
        "APIs",
        "microservices",
        "architecture",
        "response",
        "time",
        "computation",
        "logic",
        "processes",
        "data",
        "Protobuff",
        "MessagePack",
        "format",
        "satellite",
        "consumption",
        "APIs",
        "OpenAPISpecifications",
        "Swagger",
        "APIs",
        "use",
        "end",
        "user",
        "API",
        "testing",
        "suits",
        "SoapUI",
        "JMeter",
        "functionality",
        "performance",
        "APIs",
        "Steeltoe",
        "APIs",
        "health",
        "metrics",
        "performance",
        "information",
        "Admin",
        "RigCLOUD",
        "Admin",
        "server",
        "Cloud",
        "APIs",
        "health",
        "metrics",
        "information",
        "server",
        "Cloud",
        "APIs",
        "AutoFac",
        "Interception",
        "AOP",
        "module",
        "time",
        "method",
        "time",
        "Redis",
        "Caching",
        "Cache",
        "Invalidation",
        "API",
        "performance",
        "Eureka",
        "server",
        "service",
        "registry",
        "server",
        "APIs",
        "Deployed",
        "APIs",
        "applications",
        "IIS",
        "server",
        "Development",
        "environment",
        "Shell",
        "scripts",
        "application",
        "stop",
        "environment",
        "Net",
        "Core",
        "APIs",
        "SpringBoot",
        "servres",
        "Java",
        "Applications",
        "Microsoft",
        "Azure",
        "Cloud",
        "APIs",
        "Spring",
        "Boot",
        "Apache",
        "Solr",
        "search",
        "box",
        "response",
        "time",
        "indexing",
        "table",
        "columns",
        "Software",
        "Developer",
        "Tietronix",
        "August",
        "December",
        "Project",
        "Automation",
        "Virtual",
        "Tour",
        "Creation",
        "Description",
        "team",
        "WPF",
        "application",
        "user",
        "thumbnail",
        "images",
        "grid",
        "layout",
        "images",
        "positions",
        "process",
        "button",
        "application",
        "tour",
        "file",
        "file",
        "tour",
        "viewer",
        "user",
        "360degree",
        "tour",
        "property",
        "Responsibilities",
        "phases",
        "web",
        "site",
        "desktop",
        "application",
        "development",
        "life",
        "cycle",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "project",
        "website",
        "project",
        "frontend",
        "UI",
        "XAML",
        "user",
        "images",
        "grid",
        "business",
        "methods",
        "user",
        "folder",
        "images",
        "thumbnails",
        "methods",
        "image",
        "patterns",
        "grid",
        "text",
        "file",
        "relationship",
        "images",
        "file",
        "tour",
        "viewer",
        "tour",
        "property",
        "text",
        "file",
        "memory",
        "leak",
        "problem",
        "application",
        "referencing",
        "referencing",
        "virtualization",
        "VSTS",
        "configuration",
        "control",
        "system",
        "Visual",
        "Studio",
        "development",
        "environment",
        "MVVM",
        "Design",
        "pattern",
        "application",
        "EnvironmentTools",
        "Visual",
        "Studio",
        "VSTS",
        "MVVM",
        "C",
        "ASPNET",
        "XAML",
        "WPF",
        "NCTech",
        "Immersive",
        "studio",
        "Iris",
        "Programmer",
        "Analyst",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Cognizant",
        "Technology",
        "Solutions",
        "September",
        "July",
        "Project1",
        "Car",
        "Tracker",
        "Description",
        "APIs",
        "application",
        "data",
        "cars",
        "fuel",
        "capacity",
        "RPM",
        "location",
        "stores",
        "database",
        "data",
        "alerts",
        "car",
        "application",
        "UI",
        "user",
        "car",
        "history",
        "alerts",
        "Responsibilities",
        "Graphic",
        "User",
        "Interface",
        "GUI",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "RESTHTTP",
        "APIs",
        "data",
        "formats",
        "API",
        "versioning",
        "strategy",
        "service",
        "request",
        "frontend",
        "pages",
        "cars",
        "car",
        "readings",
        "page",
        "applications",
        "SPAs",
        "page",
        "performance",
        "REST",
        "web",
        "services",
        "JSON",
        "objects",
        "clientside",
        "Core",
        "Java",
        "Java",
        "APIs",
        "Collections",
        "Multithreading",
        "Exception",
        "Handling",
        "Generics",
        "Enumeration",
        "Java",
        "IO",
        "implementation",
        "business",
        "logic",
        "serverside",
        "logic",
        "Spring",
        "MVC",
        "Hibernate",
        "JPA",
        "configurations",
        "DAO",
        "package",
        "DAO",
        "IMPL",
        "package",
        "data",
        "access",
        "logic",
        "Hibernate",
        "Annotation",
        "data",
        "mapping",
        "Wrote",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "transactions",
        "POJO",
        "Database",
        "Wrote",
        "JUnit",
        "test",
        "case",
        "logic",
        "implementation",
        "development",
        "EnvironmentTools",
        "HTML",
        "CSS",
        "HTTP",
        "JavaScript",
        "SQL",
        "JPQL",
        "Agile",
        "XML",
        "web",
        "services",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Hibernate3",
        "JPA",
        "JSON",
        "Jackson",
        "Maven",
        "APIs",
        "MVW",
        "WebStorm",
        "Nodejs",
        "npm",
        "bower",
        "gulp",
        "GitHub",
        "JUnit",
        "Project2",
        "ACEGTK",
        "migration",
        "Description",
        "project",
        "modules",
        "ABI",
        "GTI",
        "TSI",
        "MIB",
        "scope",
        "project",
        "TSI",
        "UNIX",
        "server",
        "GTK",
        "Windows",
        "server",
        "ABI",
        "system",
        "scripts",
        "batch",
        "jobs",
        "MIB",
        "SQL",
        "loader",
        "windows",
        "DB",
        "scripts",
        "ETL",
        "scripts",
        "Responsibilities",
        "meetings",
        "clients",
        "systems",
        "customer",
        "records",
        "attributes",
        "Scheduler",
        "Start",
        "Day",
        "SOD",
        "End",
        "Day",
        "EOD",
        "job",
        "SOD",
        "Child",
        "Data",
        "space",
        "Master",
        "Data",
        "space",
        "feed",
        "files",
        "job",
        "schedule",
        "job",
        "time",
        "batch",
        "processing",
        "Spring",
        "Batch",
        "framework",
        "feed",
        "files",
        "load",
        "data",
        "AIB",
        "database",
        "EOD",
        "Child",
        "Data",
        "space",
        "Master",
        "Data",
        "space",
        "version",
        "governance",
        "master",
        "data",
        "Spring",
        "Batch",
        "project",
        "Mocking",
        "Junit",
        "test",
        "cases",
        "batch",
        "processing",
        "job",
        "TSI",
        "UNIX",
        "server",
        "application",
        "GTK",
        "Windows",
        "server",
        "desktop",
        "application",
        "EnvironmentTools",
        "Shell",
        "Scripts",
        "JSP",
        "JDBC",
        "Oracle",
        "SQL",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "TFS",
        "Spring",
        "Batch",
        "maven",
        "Project3",
        "TNO",
        "Tariff",
        "Restructure",
        "Transportation",
        "Network",
        "Optimization",
        "Description",
        "aim",
        "job",
        "Freight",
        "Bills",
        "AIB",
        "database",
        "category",
        "freight",
        "bill",
        "data",
        "freight",
        "bill",
        "tables",
        "MIB",
        "database",
        "Responsibilities",
        "data",
        "documents",
        "requirements",
        "Technical",
        "Design",
        "document",
        "project",
        "modules",
        "batch",
        "processing",
        "Spring",
        "Batch",
        "framework",
        "data",
        "AIB",
        "database",
        "load",
        "MIB",
        "tables",
        "program",
        "specification",
        "business",
        "methods",
        "methods",
        "JDBC",
        "xml",
        "document",
        "AIB",
        "database",
        "document",
        "Message",
        "Queues",
        "Database",
        "team",
        "freight",
        "bill",
        "table",
        "MIB",
        "database",
        "XML",
        "documents",
        "Message",
        "Queues",
        "FEPA",
        "job",
        "values",
        "freight",
        "bill",
        "MIB",
        "database",
        "Spring",
        "Batch",
        "job",
        "Junit",
        "test",
        "cases",
        "HSQL",
        "DB",
        "Apache",
        "Ant",
        "management",
        "system",
        "TFS",
        "configuration",
        "control",
        "system",
        "IBM",
        "Rational",
        "Software",
        "Architect",
        "development",
        "environment",
        "application",
        "maintenance",
        "team",
        "scheduling",
        "running",
        "jobs",
        "Experience",
        "knowledge",
        "cryptography",
        "encryption",
        "encoding",
        "algorithms",
        "EnvironmentTools",
        "Rational",
        "Software",
        "Architect",
        "Oracle",
        "g",
        "PLSQL",
        "Spring",
        "Batch",
        "TFS",
        "MSVisio",
        "JSP",
        "JDBC",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "maven",
        "Education",
        "Masters",
        "Science",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "University",
        "Houston",
        "Houston",
        "TX",
        "May",
        "engineering",
        "Sreenidhi",
        "Institute",
        "Science",
        "Technology",
        "Hyderabad",
        "Telangana",
        "May",
        "Skills",
        "database",
        "years",
        "Java",
        "years",
        "JSON",
        "years",
        "Junit",
        "years",
        "Maven",
        "years",
        "Angular",
        "Javascript",
        "Jquery",
        "spring",
        "boot",
        "years",
        "spring",
        "security",
        "years",
        "Net",
        "Core",
        "years",
        "Angular",
        "dapper",
        "years",
        "Apache",
        "Solr",
        "years",
        "Gradle",
        "years",
        "Links",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "C",
        "C",
        "C",
        "Java",
        "SQL",
        "PHP",
        "Frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "ASPNET",
        "Hibernate",
        "WPF",
        "MVVM",
        "MVW",
        "Database",
        "Oracle",
        "MySQL",
        "UI",
        "Web",
        "Technologies",
        "XML",
        "HTMLHTML5",
        "XAML",
        "CSSCSS3",
        "Bootstrap",
        "JavaScript",
        "Nodejs",
        "AJAX",
        "JSON",
        "Bower",
        "npm",
        "Gulp",
        "Developer",
        "Tools",
        "Eclipse",
        "Visual",
        "Studio",
        "NetBeans",
        "WebStorm",
        "VSCode",
        "Web",
        "Services",
        "REST",
        "JAXRS",
        "JERSY",
        "Jackson",
        "Application",
        "Servers",
        "Tomcat",
        "Web",
        "sphere",
        "Application",
        "Server",
        "JBoss",
        "Unit",
        "Testing",
        "Frameworks",
        "Junit",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "Kali",
        "Linux",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Jenkins",
        "Gulp",
        "Bower",
        "Version",
        "Control",
        "TFS",
        "VSTS",
        "Git"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:41:24.715892",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Nabors Industries Inc Houston TX Over 4 years of IT experience in all phases of Software Development Life Cycle and Maintenance of web based and client server multitier applicationsarchitectures using JavaJ2EE technologies Good experience in implementing Java web compliant applications using spring springboot and hibernate framework Experienced in implementing NET web compliant APIs using NET Core and Dapper framework Strong background in objectoriented programming concepts Experience in designing POJO classes using Hibernate Annotations using JPA API Experience in design and implementation of our REST APIs Experience in UI technologies like HTML5 AngularJS Angular JavaScript Typescript CSS Bootstrap and AJAX Expertise with Ajax Calls to Jackson framework to direct call java methods and Play routing for restful web services Strong experience in various IDEs like Eclipse WebStorm Visual Studio Notepad IntelliJ and VSCode Experience in implementing web applications using JBoss and Apache Experience with versioning tools like VSTS GIT and TFS Worked independently in many of my academic projects and was able to manage priorities and tasks before the deadline Sponsorship required to work in the US Work Experience Full Stack Developer Nabors Industries Inc July 2017 to Present Project RigCLOUDWITSML Description The RigCLOUDplatform is the oil and gas industrys nextgeneration cloud platform uniquely designed for developing and hosting any software analytics programs or other applications at the rig site Its capabilities include Highfrequency data collection Data integration Streaming data analytics Hosting of drilling applications Process automation Remote access Remote operations Open systems integration Responsibilities Designed and Implemented RealTime Server that will establish sessions with each Oil Rig and start storing live data in Oracle DB and MapR streams Implemented MapR producer that will create Topics and Queues as soon as the Oil Rig starts session When the RealTime server starts receiving the data MapR producer publishes the same to Topics and MapR clients will start consuming data One of the MapR client includes StreamBase that will generate alerts depending upon the data and communicates the same to business users Implemented ASPNET Core Well Log and RCApplications APIs to provide well log and RigCLOUD applications information to RealTime Server Implemented a Security API that will act as a security layer between user and the Cloud APIs to prevent unauthorized access to the Cloud APIs Implemented Database Schema for RigCLOUDs Datacenter using SQL and Oracle database Implemented SQL procedures Triggers Sequences and Database configuration scripts for the same Implemented Trajectory Rig Message Tags and Aggregates APIs using ASPNET Core and Dapper These APIs will be used by WITSML Studio to persist and fetch data from datacenter These APIs are done to implement microservices architecture and improve response time by distributing the computation logic to different processes Encoded the data in Protobuff and MessagePack format before transmitting it via satellite to reducethe bandwidth consumption Implemented all the APIs in OpenAPISpecifications and Implemented Swagger in all the APIs to ease the use for end user Implemented API testing suits in SoapUI and JMeter to test the functionality and performance of APIs Implemented Steeltoe in all APIs to send health metrics and performance information to RigCLOUD Admin Implemented RigCLOUD Admin server to which all Cloud APIs Send health and metrics information This server is used to monitor all the Cloud APIs Implemented AutoFac Interception AOP module to log the elapsed time for each method during run time Implemented Redis Caching and Cache Invalidation to improve the API performance Implemented Eureka server This will act as service registry server to all the APIs Deployed and hosted all the APIs and applications on IIS server in Development environment Implemented Shell scripts for each application to run stop and monitor in the hosted environment Deployed all the Net Core APIs SpringBoot servres and Java Applications in Microsoft Azure Cloud Implemented APIs using Spring Boot and Apache Solr to improve search box response time by indexing table columns Software Developer Tietronix August 2016 to December 2016 Project Automation of Virtual Tour Creation Description Our team has created a WPF application which lets the user drag and drop the thumbnail images on to a grid layout After dropping all the images in their respective positions and clicking the process button the application creates a tour file This file when opened in the virtual tour viewer will take the user through the 360degree tour of the property Responsibilities Participated in all the phases of the web site and desktop application development life cycle involving analysis design development testing and deployment of the project Developed and maintained a website for the project Developed a frontend UI using XAML which lets the user drag and drop images on the grid Designed and implemented business methods which will let the user select a folder of images and convert them into thumbnails Designed and implemented methods which read the image patterns from the grid and create a text file which contains the relationship among those images This file is then fed to the Virtual tour viewer which shows the virtual tour of the property by reading the text file Solved memory leak problem in the application by weak referencing instead of strong referencing and virtualization Using VSTS as configuration control system Visual Studio for development environment and MVVM Design pattern for the application EnvironmentTools Visual Studio VSTS MVVM C ASPNET XAML WPF NCTech Immersive studio Iris 360 Programmer Analyst Full Stack Java Developer Cognizant Technology Solutions September 2013 to July 2015 Project1 Car Tracker Description The APIs of this application ingests the live data from moving cars like fuel capacity RPM geographical location etc and stores in the database This data is then used to generate alerts and send it back to the car This application also has a UI which lets the user to track the car and view the history of alerts etc Responsibilities Implemented the Graphic User Interface GUI by coding in HTML5 CSS Bootstrap JavaScript AngularJS Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Implemented corresponding service to handle the request from frontend pages like adding new cars and car readings Developed single page applications SPAs using AngularJS to improve page performance and consumed REST web services Used JSON objects effectively for efficient clientside coding Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Developed serverside logic using Spring MVC Hibernate and JPA by writing configurations Built DAO package as well as DAO IMPL package to implement the data access logic and using Hibernate Annotation to do the data mapping Wrote Hibernate configuration files to enable the data transactions between POJO and Database Wrote JUnit test case for backend logic implementation development EnvironmentTools HTML CSS HTTP JavaScript SQL JPQL Agile XML web services Java J2EE Spring MVC Hibernate3 JPA JSON Jackson Maven RESTful APIs AngularJS MVW WebStorm Nodejs npm bower gulp GitHub JUnit Project2 ACEGTK migration Description This project consists of 4 different modules interacting with each other those are ABI GTI TSI MIB The main scope of the project was to replace TSI having UNIX server with GTK having Windows server The ABI system consists of shell scripts which were used to run batch jobs for MIB Since the SQL loader was not compatible with windows DB these shell scripts were programmed again into ETL scripts Responsibilities Conducting meetings with clients of both the systems for understanding the customer records and its attributes Used ControlM Scheduler to Schedule Start of the Day SOD and End of the Day EOD job SOD creates a Child Data space of Master Data space where feed files are loaded Configured job schedule so that job is kicked off at the appropriate time Involved in batch processing using Spring Batch framework to validate feed files and load data into corresponding AIB database tables EOD merges Child Data space with Master Data space and ensures single version and governance of master data Documented how Spring Batch is useful for the current project Worked with Mocking while running the Junit test cases for batch processing Validated if every job is doing what it is supposed to do after replacing TSI UNIX server application with GTK Windows server desktop application EnvironmentTools Shell Scripts JSP servlets JDBC Oracle SQL Web Sphere Application Server TFS Spring Batch maven Project3 TNO Tariff Restructure Transportation Network Optimization Description The main aim of this job is to take the approved Freight Bills from AIB database and depending upon the category of the freight bill data should be updated into the freight bill tables of corresponding MIB database tables Responsibilities Responsible for collecting data from archive documents analyzed requirements and documented Technical Design document for project modules Involved in batch processing using Spring Batch framework to extract data from AIB database and load into corresponding MIB tables Involved in writing program specification and coding business methods These methods are then called using JDBC Extracted the xml document from AIB database and pushed the document into Message Queues Coordinated with the Database team to add a freight bill table into the MIB database XML documents will be read from Message Queues by FEPA job and values from freight bill will be updated into MIB database using Spring Batch job Developing Junit test cases using HSQL DB Using Apache Ant as build management system TFS as configuration control system and IBM Rational Software Architect as development environment Coordinated with application maintenance team for scheduling and running jobs Experience and knowledge in cryptography encryption and encoding algorithms EnvironmentTools Rational Software Architect Oracle 11g PLSQL Spring Batch TFS MSVisio JSP servlets JDBC Web Sphere Application Server maven Education Masters of Science in Computer Science in Computer Science University of Houston Houston TX May 2017 engineering Sreenidhi Institute of Science Technology Hyderabad Telangana May 2013 Skills database 2 years Java 2 years JSON 2 years Junit 2 years Maven 2 years Angular Javascript Jquery spring boot 2 years spring security 2 years Net Core 2 years Angular 6 dapper 2 years Apache Solr 2 years Gradle 2 years Links httpswwwlinkedincominirfansk66httpsgithubcomirfansk66 Additional Information Technical Skills Programming Languages C C C Java SQL PHP Frameworks Spring MVC Spring Batch ASPNET Hibernate WPF MVVM MVW Database Oracle MySQL UI Web Technologies XML HTMLHTML5 XAML CSSCSS3 Bootstrap JavaScript AngularJS Nodejs AJAX JSON Bower npm and Gulp Developer Tools Eclipse Visual Studio NetBeans IntelliJ WebStorm VSCode Web Services REST JAXRS JERSY Jackson Application Servers Tomcat Web sphere Application Server JBoss Unit Testing Frameworks Junit Operating Systems Windows Linux Kali Linux Build Tools Ant Maven Jenkins Gulp Bower Version Control TFS VSTS Git",
    "unique_id": "76f31e26-4499-426c-aa1b-0d077b2d40a8"
}