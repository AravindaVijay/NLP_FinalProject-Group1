{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Gogo Aviations Broomfield CO Having 8 years of experience as a Python Developer with deep understanding of technology trends with expertise in core of complex technologies Solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Bottle framework Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile and Vmodel Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev and Bottle framework Experienced in developing Webbased Applications using Python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS and jQuery also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Experienced in developing Web Services with Python programming language and good knowledge of Web Services with protocols SOAP REST Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Profiled python code for optimization and memory management and skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy NumPy Scipy Matplotlib Pickle PySide Pandas dataframe Bottle framework networkX urllib2 Pychart Highcharts to drive improvements throughout entire SDLC Involved in Unit testing Integration testing UserAcceptance testing and Functional testing and experienced in web applications development using Flask Python Bottle framework and Nodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in developing webbased applications using libraries and frameworks like Bottle Angular JS Bootstrap jQuery Ruby on Rails Knockoutjs Node Js Backbonejs React JS D3 JS and Require JS Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Extensive use of Object Oriented design methodology and Agile in software development and experience in Building web applications using Kendo UI widgets jQuery Angular JS Experience objectoriented programming OOP concepts using Python C and PHP and expertise in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite Postgre SQL and MySQL databases Experience on Web development using HTML 45 CSSCSS3 JavaScript jQuery Angularjs AJAX XML and JSON by following W3C standards also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML SQL XML and JSON and developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Proficient in developing multithreaded web services using CherryPy bottlePy framework andleveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Knowledge in working with continuous deployment using Heroku and Jenkins and experienced on Cloud innovations including Infrastructure as a Service Platform as a Service and Software as a Service supplier IaaS PaaS and SaaS Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process worked on Python Testing frameworks like Bottle zope pytest nose and Robot framework also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies experienced in installing configuring modifying testing and deploying applications with Apache Experience in working with different operating systems like LINUX UNIX and WINDOWS and developed web applications and RESTful web services and APIs using Python Flask Django and PHP also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Gogo Aviations Broomfield CO September 2017 to Present Responsibilities Developed frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analysed the imported data using Hadoop Components and Created and maintained Technical documentation for launching HADOOP Clusters and for executing Hive queries and Pig Scripts Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using postgreSQL Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Established Postgresql databases for blog entries created a client login portal using LinkedIn authentication Expertise in React JS and working with React Flux architecture Designed SPA Single page applications in Flux architecture using Reactjs Comfortable working within the Django ORM writing native SQL queries in PostgreSQL Using React Js worked on applications for Bash terminal component to add Extensible commands and autocomplete in content writing Maintaining Tableau reports analysis and work on enhancements to existing reports or creating new reports based on business needs and Performed Tableau type conversion functions when connected to relational data sources Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used integration tool Drools rules engine that would accept JSON request via restful web services for providing a simple interface allowing anyone to capture new rules and logic defining the behavior of a system Created the Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Implemented ELK stack on Hadoop cluster Generated audit logs for Hbase HDFS Knox Ambari and other Hadoop Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs and Worked on creating the Docker containers and Docker consoles for managing the application life cycle Wrote Python scripts to parse JSON documents and load the data in MongoDB Enhanced performance of application by developing a topology to cache resources using Gemfirefor SOA layer accessing database for savingaccessing financial information Implemented and executed code to perform CRUD operations on MongoDB using Pymongo module Published REST APIs to fetch data from Elastic Search clusters for clientbased applications to search patients and claims by multifield indexes and Used Elastic Search for setting up the search cluster Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background and Built a Golang web server to host multiple tools so another has http access to them Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using DJANGO Dynamic implementation of SQL server work on website using SQL developer tool and Experience with continuous integration and automation using Jenkins and Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire Created Intelligence Cubes in MicroStrategy to overcome performance issues related to Report Service Documents using high volume datasets Develop applications that use MongoDB database and pymongo Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Performed data analysis feature selection feature extraction using Apache Spark Machine Learning streaming libraries in Python and Creating data pipelines using Apache Spark a bigdata processing and computing framework Developed frontend using Html CSS Javascript React Redux Bootstrap Developed new Widgetapp module for MMD 20 using Reactjs with Redux architecture and ES6 Implemented mapStateToProps mapDispatchToProps for the interactions between Redux and React Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used NumPy for Numerical analysis and Used Spring Framework to support the Hibernate tool and Struts Implemented a wide variety of statistical and graphical techniques including linera and nonlinera modeling classical statistical tests timeseries analysis classification clustering and others using R and its libraries Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Python Developer Infosys Chicago IL July 2015 to September 2017 Responsibilities Involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches To maintain the code using GIT version control and Cygwin for Linux commands Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Designed and implemented Sandra NoSQL database readwritesearch function Worked on migrating data to Amazon AWS Used AWS products like EC2 IAM RDS Log Monitor Lambda REST API Gateway etc Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Used Amazon Web Services AWS for improved efficiency of storage and fast access Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Constructed powerful and modern frontend architecture involving React Redux and ES6 Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Developed and deployed corporate intranet platforms for data visualization and analytics using Python Django Django Rest Framework PostgreSQL backend Development of Scripts for CICD using Virtual machines Docker python and Yaml Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Organizing and configuring web application through YAML by creating and configuring appyaml Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Excellent experience with Python development under Linux OS DebianRedHatAIX Experience with Linux command and bash shell scripting Worked on Amazon Web ServicesAWS infrastructure with automation and configuration management tools such as Chef and Puppet Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with MongoDB database Search engine optimization by replacing existing database with MongoDB NoSQL Database Used Github for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Working extensively on REST APIs JSON Microservices CICD Docker containers Worked in NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL NOSQL queries implementing functions packages views triggers and tables Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Creating new MEAN MERN stack React applications Create REST APIs using DRF to be consumed by the frontend UI built on Angular JS Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Utilized Celery to automate various tasks such as API calls Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Developed tools using Python Shell scripting XML to automate some of the menial tasks Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed coding in C on Linux Platform Developed a frontend application using React JS and FLUX architecture for internal teams productivity use Executed asynchronous tasks with help of Celery and Rabbit MQ Versatile with Version control systems including Git and SVN and Implemented RESTful API which returns data from PostgreSQL in JSON format Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Java Consultant Python Atlanta GA March 2013 to July 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed GUI using Django and Python for dynamically displaying the test block documentation and other features with Python code for a web browser Implemented migration tasks from Oracle apps to PostgreSQL databases Used Amazon Web Services AWS for improved efficiency of storage and fast access Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used and Python Django to interface with the jQuery UI and manage the storage and deletion of content Wrote scripts to parse JSON documents and load the data in database Worked on front end frame works like CSS Bootstrap for responsive webpages Used python libraries like Beautiful Soup and matplotlib Used Pandas for a data alignment and data manipulation Implemented monitoring and established best practices around using elastic search and Install and configuring monitoring scripts for AWS EC2 instances and AWS S3 Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Involved in the application development using Spring Core MVC modules and Java web based technologies such as Servlets JSP Java Web Service RESTSOAP based WSDL Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWSarchitecture and automated AWS S3 data upload download using python scripts Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Worked on Python OpenStack APIs and used NumPy for Numerical analysis Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers Used Angular MVC and twoway data binding Worked on automation scripts using Selenium in JAVA Designed coded and tested key modules of the project using java oops concepts Install KAFKA on Hadoop cluster and configure producer and consumer coding part in java to establish connection from twitter source to HDFS with popular hash tags Developed Splunk infrastructure and related solution for application toolsets Helped team to onboard data create various knowledge objects Install and maintain the Splunk Apps Creating Application on Splunk to analyse the data Manage Splunk configurations files like input props transforms and lookups Configured Maven for Java automation projects and developed Maven Project Object Model POM Setup automated cron jobs to upload data into database generate graphs bar charts upload these chartsto wiki and backup the database Followed AGILE development methodology to develop the application Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Added several options to the application to choose particular algorithm for data and address generation Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across all the teams for several projects Environment Python 32 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting PyCharm Urllib jQuery GitHub AngularJS Jira Software Developer US Cellular Inc Chicago IL May 2011 to March 2013 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Writing Unit Functional and Integration test cases for Cloud Computing applications on AWS usingPython with boto library Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL Education Bachelors",
    "entities": [
        "Widgetapp",
        "Mesos Working",
        "Infrastructure",
        "React Flux architecture Designed SPA Single",
        "Maven Project Object Model POM Setup",
        "Collections Generics Exception",
        "Created the Application",
        "Nodejs",
        "jQuery Developed GUI",
        "Building",
        "MicroStrategy",
        "Writing Unit Functional and Integration",
        "Amazon AWS Used AWS",
        "Interfacing",
        "JSON",
        "Hadoop Implemented",
        "Amazon Web Services AWS",
        "Heroku",
        "Panda",
        "ER",
        "OO Python Successfully",
        "Rational Application Developer Proficient",
        "Html CSS Javascript React",
        "Hadoop",
        "XML",
        "Spring Core",
        "Atlanta",
        "CherryPy",
        "Hadoop Distributed File System",
        "Functional",
        "AWS S3 Developed",
        "the React JS Flux for SPA development Developed",
        "DevOps",
        "Shell",
        "csv",
        "Cassandra Configuration",
        "Apache Spark",
        "Devops",
        "Amazon",
        "YAML",
        "Oracle apps to PostgreSQL",
        "ELK",
        "UserAcceptance",
        "Python",
        "Python C",
        "Gemfire Created Intelligence Cubes",
        "Amazon AWS S3",
        "Mongo",
        "Stored Procedures",
        "Developed",
        "Bash",
        "CSS Bootstrap",
        "AWS S3",
        "REST SOAP",
        "Reengineered",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "LinkedIn",
        "CSSCSS3",
        "Python Unit",
        "US Cellular Inc",
        "Puppet",
        "Developed Business Logic",
        "uDeploy Puppet",
        "Windows",
        "Git",
        "Complete Software",
        "Linux",
        "JSP",
        "Implemented RESTful API",
        "Worked",
        "Version",
        "Requirement Analysis Application Design Development",
        "jQuery Angular",
        "Docker",
        "RDS",
        "Software",
        "Developed Ruby Python",
        "PythonTornado",
        "MVC",
        "Agile",
        "Redux",
        "GIT",
        "JS",
        "API",
        "US",
        "HTML CSS JavaScript",
        "Jenkins and Implemented Service Oriented Architecture SOA",
        "Drools",
        "Created",
        "AWS",
        "Implemented",
        "Chef and Puppet Created",
        "Python Developer",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "React JS",
        "Development of Scripts",
        "Apache Experience",
        "java",
        "WINDOWS",
        "RESTFUL",
        "SQL",
        "GitHub",
        "Development of Isomorphic",
        "JVM Parameters Established Postgresql",
        "REST APIs JSON Microservices CICD Docker",
        "lPythonspan",
        "Apache Spark Machine Learning",
        "CSV Parsing",
        "JS Angular JS CSS",
        "HADOOP Clusters",
        "AWS Cloud Architecture",
        "Hive",
        "CICD",
        "Amazon AWS",
        "Yaml Added",
        "Virtual",
        "Pandas",
        "SQLite",
        "CRUD",
        "Kendo UI",
        "Flux",
        "Oracle SQLite Postgre",
        "JAVA",
        "Pandas Data",
        "Build",
        "Performed",
        "AWS EC2 Used Sqoop",
        "Djangos",
        "PostgreSQL",
        "JavaScript",
        "Maintaining Tableau",
        "Analysis Design and Development Testing Implementation",
        "UI",
        "Selenium",
        "Pymongo",
        "PyCharm PyScripter Spyder PyStudio",
        "SVN",
        "Hadoop Components",
        "Expertise",
        "Pandas Dataframe urlib2",
        "jQuery",
        "REST",
        "Developed Ruby on Rails",
        "DRF",
        "HTMLCSSJS",
        "AWS Security",
        "PHP",
        "NoSQL",
        "CC SQL",
        "MMD",
        "QA Team",
        "Work Experience Sr Python Developer Gogo Aviations Broomfield CO",
        "Used Elastic Search",
        "AWS SNS SQS",
        "Amazon Web Services Profiled",
        "Report Service Documents"
    ],
    "experience": "Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Profiled python code for optimization and memory management and skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy NumPy Scipy Matplotlib Pickle PySide Pandas dataframe Bottle framework networkX urllib2 Pychart Highcharts to drive improvements throughout entire SDLC Involved in Unit testing Integration testing UserAcceptance testing and Functional testing and experienced in web applications development using Flask Python Bottle framework and Nodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in developing webbased applications using libraries and frameworks like Bottle Angular JS Bootstrap jQuery Ruby on Rails Knockoutjs Node Js Backbonejs React JS D3 JS and Require JS Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Extensive use of Object Oriented design methodology and Agile in software development and experience in Building web applications using Kendo UI widgets jQuery Angular JS Experience objectoriented programming OOP concepts using Python C and PHP and expertise in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite Postgre SQL and MySQL databases Experience on Web development using HTML 45 CSSCSS3 JavaScript jQuery Angularjs AJAX XML and JSON by following W3C standards also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML SQL XML and JSON and developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Proficient in developing multithreaded web services using CherryPy bottlePy framework andleveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Knowledge in working with continuous deployment using Heroku and Jenkins and experienced on Cloud innovations including Infrastructure as a Service Platform as a Service and Software as a Service supplier IaaS PaaS and SaaS Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process worked on Python Testing frameworks like Bottle zope pytest nose and Robot framework also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies experienced in installing configuring modifying testing and deploying applications with Apache Experience in working with different operating systems like LINUX UNIX and WINDOWS and developed web applications and RESTful web services and APIs using Python Flask Django and PHP also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Gogo Aviations Broomfield CO September 2017 to Present Responsibilities Developed frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analysed the imported data using Hadoop Components and Created and maintained Technical documentation for launching HADOOP Clusters and for executing Hive queries and Pig Scripts Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using postgreSQL Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Established Postgresql databases for blog entries created a client login portal using LinkedIn authentication Expertise in React JS and working with React Flux architecture Designed SPA Single page applications in Flux architecture using Reactjs Comfortable working within the Django ORM writing native SQL queries in PostgreSQL Using React Js worked on applications for Bash terminal component to add Extensible commands and autocomplete in content writing Maintaining Tableau reports analysis and work on enhancements to existing reports or creating new reports based on business needs and Performed Tableau type conversion functions when connected to relational data sources Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used integration tool Drools rules engine that would accept JSON request via restful web services for providing a simple interface allowing anyone to capture new rules and logic defining the behavior of a system Created the Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Implemented ELK stack on Hadoop cluster Generated audit logs for Hbase HDFS Knox Ambari and other Hadoop Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs and Worked on creating the Docker containers and Docker consoles for managing the application life cycle Wrote Python scripts to parse JSON documents and load the data in MongoDB Enhanced performance of application by developing a topology to cache resources using Gemfirefor SOA layer accessing database for savingaccessing financial information Implemented and executed code to perform CRUD operations on MongoDB using Pymongo module Published REST APIs to fetch data from Elastic Search clusters for clientbased applications to search patients and claims by multifield indexes and Used Elastic Search for setting up the search cluster Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background and Built a Golang web server to host multiple tools so another has http access to them Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using DJANGO Dynamic implementation of SQL server work on website using SQL developer tool and Experience with continuous integration and automation using Jenkins and Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire Created Intelligence Cubes in MicroStrategy to overcome performance issues related to Report Service Documents using high volume datasets Develop applications that use MongoDB database and pymongo Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Performed data analysis feature selection feature extraction using Apache Spark Machine Learning streaming libraries in Python and Creating data pipelines using Apache Spark a bigdata processing and computing framework Developed frontend using Html CSS Javascript React Redux Bootstrap Developed new Widgetapp module for MMD 20 using Reactjs with Redux architecture and ES6 Implemented mapStateToProps mapDispatchToProps for the interactions between Redux and React Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used NumPy for Numerical analysis and Used Spring Framework to support the Hibernate tool and Struts Implemented a wide variety of statistical and graphical techniques including linera and nonlinera modeling classical statistical tests timeseries analysis classification clustering and others using R and its libraries Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Python Developer Infosys Chicago IL July 2015 to September 2017 Responsibilities Involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches To maintain the code using GIT version control and Cygwin for Linux commands Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Designed and implemented Sandra NoSQL database readwritesearch function Worked on migrating data to Amazon AWS Used AWS products like EC2 IAM RDS Log Monitor Lambda REST API Gateway etc Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Used Amazon Web Services AWS for improved efficiency of storage and fast access Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Constructed powerful and modern frontend architecture involving React Redux and ES6 Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Developed and deployed corporate intranet platforms for data visualization and analytics using Python Django Django Rest Framework PostgreSQL backend Development of Scripts for CICD using Virtual machines Docker python and Yaml Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Organizing and configuring web application through YAML by creating and configuring appyaml Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Excellent experience with Python development under Linux OS DebianRedHatAIX Experience with Linux command and bash shell scripting Worked on Amazon Web ServicesAWS infrastructure with automation and configuration management tools such as Chef and Puppet Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with MongoDB database Search engine optimization by replacing existing database with MongoDB NoSQL Database Used Github for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Working extensively on REST APIs JSON Microservices CICD Docker containers Worked in NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL NOSQL queries implementing functions packages views triggers and tables Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Creating new MEAN MERN stack React applications Create REST APIs using DRF to be consumed by the frontend UI built on Angular JS Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Utilized Celery to automate various tasks such as API calls Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Developed tools using Python Shell scripting XML to automate some of the menial tasks Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed coding in C on Linux Platform Developed a frontend application using React JS and FLUX architecture for internal teams productivity use Executed asynchronous tasks with help of Celery and Rabbit MQ Versatile with Version control systems including Git and SVN and Implemented RESTful API which returns data from PostgreSQL in JSON format Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Java Consultant Python Atlanta GA March 2013 to July 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed GUI using Django and Python for dynamically displaying the test block documentation and other features with Python code for a web browser Implemented migration tasks from Oracle apps to PostgreSQL databases Used Amazon Web Services AWS for improved efficiency of storage and fast access Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used and Python Django to interface with the jQuery UI and manage the storage and deletion of content Wrote scripts to parse JSON documents and load the data in database Worked on front end frame works like CSS Bootstrap for responsive webpages Used python libraries like Beautiful Soup and matplotlib Used Pandas for a data alignment and data manipulation Implemented monitoring and established best practices around using elastic search and Install and configuring monitoring scripts for AWS EC2 instances and AWS S3 Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Involved in the application development using Spring Core MVC modules and Java web based technologies such as Servlets JSP Java Web Service RESTSOAP based WSDL Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWSarchitecture and automated AWS S3 data upload download using python scripts Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Worked on Python OpenStack APIs and used NumPy for Numerical analysis Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers Used Angular MVC and twoway data binding Worked on automation scripts using Selenium in JAVA Designed coded and tested key modules of the project using java oops concepts Install KAFKA on Hadoop cluster and configure producer and consumer coding part in java to establish connection from twitter source to HDFS with popular hash tags Developed Splunk infrastructure and related solution for application toolsets Helped team to onboard data create various knowledge objects Install and maintain the Splunk Apps Creating Application on Splunk to analyse the data Manage Splunk configurations files like input props transforms and lookups Configured Maven for Java automation projects and developed Maven Project Object Model POM Setup automated cron jobs to upload data into database generate graphs bar charts upload these chartsto wiki and backup the database Followed AGILE development methodology to develop the application Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Added several options to the application to choose particular algorithm for data and address generation Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across all the teams for several projects Environment Python 32 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting PyCharm Urllib jQuery GitHub AngularJS Jira Software Developer US Cellular Inc Chicago IL May 2011 to March 2013 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Writing Unit Functional and Integration test cases for Cloud Computing applications on AWS usingPython with boto library Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL Education Bachelors",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Gogo",
        "Aviations",
        "Broomfield",
        "CO",
        "years",
        "experience",
        "Python",
        "Developer",
        "understanding",
        "technology",
        "trends",
        "expertise",
        "core",
        "technologies",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "production",
        "support",
        "maintenance",
        "Web",
        "Applications",
        "Python",
        "Django",
        "Bottle",
        "framework",
        "experience",
        "Requirement",
        "Analysis",
        "Application",
        "Design",
        "Development",
        "knowledge",
        "SDLC",
        "Vmodel",
        "Experienced",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Bottle",
        "framework",
        "Webbased",
        "Applications",
        "Python",
        "CSS",
        "HTML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "J2EE",
        "jQuery",
        "JSON",
        "jQuery",
        "UI",
        "XML",
        "JS",
        "jQuery",
        "Soap",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Dataframe",
        "urlib2",
        "libraries",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "knowledge",
        "Web",
        "Services",
        "protocols",
        "SOAP",
        "REST",
        "Experience",
        "party",
        "tools",
        "Telerik",
        "DevExpress",
        "kendo",
        "Controls",
        "applications",
        "Docker",
        "Vagrant",
        "JSON",
        "REST",
        "SOAP",
        "Amazon",
        "Web",
        "Services",
        "python",
        "code",
        "optimization",
        "memory",
        "management",
        "experience",
        "Python",
        "tools",
        "developments",
        "Beautiful",
        "Soup",
        "Jasy",
        "NumPy",
        "Scipy",
        "Matplotlib",
        "Pickle",
        "PySide",
        "Pandas",
        "Bottle",
        "framework",
        "networkX",
        "urllib2",
        "Pychart",
        "Highcharts",
        "improvements",
        "SDLC",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "web",
        "applications",
        "development",
        "Flask",
        "Python",
        "Bottle",
        "framework",
        "Nodejs",
        "Angularjs",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Soap",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Dataframe",
        "urlib2",
        "libraries",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Expertise",
        "applications",
        "libraries",
        "frameworks",
        "Bottle",
        "Angular",
        "JS",
        "Bootstrap",
        "jQuery",
        "Ruby",
        "Rails",
        "Knockoutjs",
        "Node",
        "Js",
        "Backbonejs",
        "React",
        "JS",
        "D3",
        "JS",
        "Require",
        "JS",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "extracts",
        "Soap",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "urlib2",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "use",
        "Object",
        "design",
        "methodology",
        "software",
        "development",
        "experience",
        "Building",
        "web",
        "applications",
        "Kendo",
        "UI",
        "jQuery",
        "Angular",
        "JS",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "expertise",
        "NoSQL",
        "technologies",
        "MongoDB",
        "CouchDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "Postgre",
        "SQL",
        "MySQL",
        "Experience",
        "Web",
        "development",
        "HTML",
        "CSSCSS3",
        "JavaScript",
        "jQuery",
        "Angularjs",
        "AJAX",
        "XML",
        "JSON",
        "W3C",
        "standards",
        "Soap",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Dataframe",
        "urlib2",
        "development",
        "experience",
        "Java",
        "Struts",
        "JSPs",
        "Servlets",
        "Hibernate",
        "JDBC",
        "HTML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "J2EE",
        "jQuery",
        "JSON",
        "jQuery",
        "UI",
        "XML",
        "SQL",
        "XML",
        "JSON",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "PyCharm",
        "Eclipse",
        "Google",
        "GWT",
        "Rational",
        "Application",
        "Developer",
        "Proficient",
        "web",
        "services",
        "CherryPy",
        "bottlePy",
        "framework",
        "andleveraging",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "building",
        "Soap",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Dataframe",
        "urlib2",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Cloud",
        "innovations",
        "Infrastructure",
        "Service",
        "Platform",
        "Service",
        "Software",
        "Service",
        "supplier",
        "IaaS",
        "PaaS",
        "SaaS",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Python",
        "Testing",
        "frameworks",
        "Bottle",
        "zope",
        "nose",
        "Robot",
        "framework",
        "Soap",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Dataframe",
        "urlib2",
        "libraries",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Testdriven",
        "development",
        "methodologies",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "operating",
        "systems",
        "LINUX",
        "UNIX",
        "WINDOWS",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "Soap",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "urlib2",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Gogo",
        "Aviations",
        "Broomfield",
        "CO",
        "September",
        "Present",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "MYSQL",
        "data",
        "lineage",
        "process",
        "source",
        "DB",
        "table",
        "column",
        "mappings",
        "OO",
        "Python",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "CSV",
        "data",
        "approach",
        "AWS",
        "EC2",
        "Sqoop",
        "data",
        "RDBMS",
        "Hadoop",
        "Distributed",
        "File",
        "System",
        "HDFS",
        "data",
        "Hadoop",
        "Components",
        "Created",
        "documentation",
        "HADOOP",
        "Clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "datasets",
        "Panda",
        "data",
        "frames",
        "PostgreSQL",
        "data",
        "management",
        "system",
        "postgreSQL",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "JVM",
        "Parameters",
        "Established",
        "Postgresql",
        "blog",
        "entries",
        "client",
        "login",
        "LinkedIn",
        "authentication",
        "Expertise",
        "React",
        "JS",
        "React",
        "Flux",
        "architecture",
        "SPA",
        "page",
        "applications",
        "Flux",
        "architecture",
        "Reactjs",
        "Comfortable",
        "Django",
        "ORM",
        "SQL",
        "queries",
        "PostgreSQL",
        "React",
        "Js",
        "applications",
        "Bash",
        "component",
        "commands",
        "content",
        "Maintaining",
        "Tableau",
        "analysis",
        "work",
        "enhancements",
        "reports",
        "reports",
        "business",
        "needs",
        "Performed",
        "Tableau",
        "type",
        "conversion",
        "functions",
        "data",
        "sources",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "integration",
        "tool",
        "Drools",
        "rules",
        "engine",
        "request",
        "web",
        "services",
        "interface",
        "rules",
        "logic",
        "behavior",
        "system",
        "Application",
        "ReactJS",
        "Nodejs",
        "NPM",
        "gulp",
        "directories",
        "view",
        "flux",
        "URLs",
        "ELK",
        "stack",
        "Hadoop",
        "cluster",
        "audit",
        "Hbase",
        "HDFS",
        "Knox",
        "Ambari",
        "Hadoop",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Wrote",
        "Python",
        "documents",
        "data",
        "performance",
        "application",
        "topology",
        "cache",
        "resources",
        "Gemfirefor",
        "SOA",
        "layer",
        "accessing",
        "database",
        "information",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "Pymongo",
        "module",
        "REST",
        "APIs",
        "data",
        "Elastic",
        "Search",
        "clusters",
        "applications",
        "patients",
        "claims",
        "multifield",
        "indexes",
        "Elastic",
        "Search",
        "search",
        "cluster",
        "MySQL",
        "queue",
        "AWS",
        "SNS",
        "SQS",
        "Golang",
        "SQL",
        "background",
        "Golang",
        "web",
        "server",
        "tools",
        "http",
        "access",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "frame",
        "work",
        "DJANGO",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Implemented",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "JMS",
        "messages",
        "web",
        "services",
        "issues",
        "QA",
        "Team",
        "utilities",
        "testing",
        "tool",
        "Gemfire",
        "Created",
        "Intelligence",
        "Cubes",
        "MicroStrategy",
        "performance",
        "issues",
        "Report",
        "Service",
        "Documents",
        "volume",
        "datasets",
        "Develop",
        "applications",
        "database",
        "pymongo",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "Strong",
        "Expertise",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "data",
        "analysis",
        "feature",
        "selection",
        "feature",
        "extraction",
        "Apache",
        "Spark",
        "Machine",
        "Learning",
        "streaming",
        "libraries",
        "Python",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "frontend",
        "Html",
        "CSS",
        "Javascript",
        "React",
        "Redux",
        "Bootstrap",
        "Widgetapp",
        "module",
        "MMD",
        "Reactjs",
        "Redux",
        "architecture",
        "mapStateToProps",
        "mapDispatchToProps",
        "interactions",
        "Redux",
        "React",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "NumPy",
        "analysis",
        "Spring",
        "Framework",
        "Hibernate",
        "tool",
        "Struts",
        "variety",
        "techniques",
        "linera",
        "nonlinera",
        "tests",
        "analysis",
        "classification",
        "clustering",
        "others",
        "R",
        "libraries",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "software",
        "developers",
        "DevOps",
        "software",
        "system",
        "problems",
        "AGILE",
        "development",
        "methodology",
        "application",
        "GO",
        "Programming",
        "Language",
        "legacy",
        "Environment",
        "Python",
        "Django",
        "SQL",
        "ZODB",
        "MySQL",
        "Sqlite3",
        "git",
        "Devops",
        "PostgreSQL",
        "NoSQLYaml",
        "MongoDB",
        "Golang",
        "bitbucket",
        "pdb",
        "AWS",
        "Jira",
        "Jenkins",
        "Pyspark",
        "Rest",
        "Virtual",
        "Machine",
        "Ajax",
        "jQuery",
        "JavaScript",
        "LINUX",
        "Python",
        "Developer",
        "Infosys",
        "Chicago",
        "IL",
        "July",
        "September",
        "Responsibilities",
        "GIT",
        "Puppet",
        "integrity",
        "applications",
        "Production",
        "Development",
        "Test",
        "Release",
        "Branches",
        "code",
        "GIT",
        "version",
        "control",
        "Cygwin",
        "Linux",
        "commands",
        "data",
        "form",
        "JSON",
        "documents",
        "collection",
        "MongoDB",
        "Sandra",
        "NoSQL",
        "database",
        "readwritesearch",
        "function",
        "data",
        "Amazon",
        "AWS",
        "AWS",
        "products",
        "EC2",
        "IAM",
        "RDS",
        "Log",
        "Monitor",
        "Lambda",
        "REST",
        "API",
        "Gateway",
        "end",
        "Angularjs",
        "ReactJS",
        "Nodejs",
        "bootstrapjs",
        "backbonejs",
        "JavaScript",
        "end",
        "REST",
        "webservice",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "requirement",
        "gathering",
        "sessions",
        "capability",
        "planning",
        "data",
        "center",
        "Cassandra",
        "cluster",
        "frontend",
        "architecture",
        "React",
        "Redux",
        "ES6",
        "Worked",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "user",
        "interface",
        "React",
        "JS",
        "Flux",
        "SPA",
        "development",
        "Developed",
        "intranet",
        "platforms",
        "data",
        "visualization",
        "analytics",
        "Python",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "PostgreSQL",
        "backend",
        "Development",
        "Scripts",
        "CICD",
        "machines",
        "Docker",
        "python",
        "Yaml",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Organizing",
        "web",
        "application",
        "YAML",
        "appyaml",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "uDeploy",
        "Puppet",
        "Designing",
        "solutions",
        "AWS",
        "product",
        "suite",
        "experience",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Experience",
        "Linux",
        "command",
        "bash",
        "shell",
        "scripting",
        "Amazon",
        "Web",
        "ServicesAWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "MongoDB",
        "database",
        "Search",
        "engine",
        "optimization",
        "database",
        "MongoDB",
        "NoSQL",
        "Database",
        "Github",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Mesos",
        "Working",
        "REST",
        "APIs",
        "JSON",
        "Microservices",
        "CICD",
        "Docker",
        "containers",
        "NoSQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Build",
        "SQL",
        "NOSQL",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "AGILE",
        "development",
        "methodology",
        "application",
        "GO",
        "Programming",
        "Language",
        "legacy",
        "MEAN",
        "MERN",
        "React",
        "applications",
        "REST",
        "APIs",
        "DRF",
        "frontend",
        "UI",
        "JS",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "Celery",
        "tasks",
        "API",
        "process",
        "builds",
        "deployments",
        "Jenkins",
        "Ant",
        "Maven",
        "Shell",
        "Script",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Windows",
        "Linux",
        "server",
        "enhancements",
        "system",
        "bugfixing",
        "tasks",
        "CC",
        "SQL",
        "UNIX",
        "Shell",
        "Python",
        "focus",
        "Devops",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "handson",
        "Engineering",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "C",
        "Linux",
        "Platform",
        "frontend",
        "application",
        "React",
        "JS",
        "FLUX",
        "architecture",
        "teams",
        "productivity",
        "tasks",
        "help",
        "Celery",
        "Rabbit",
        "MQ",
        "Versatile",
        "Version",
        "control",
        "systems",
        "Git",
        "SVN",
        "API",
        "data",
        "PostgreSQL",
        "format",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "Environment",
        "Python",
        "Django",
        "SQL",
        "ZODB",
        "MySQL",
        "Sqlite3",
        "git",
        "Devops",
        "PostgreSQL",
        "NoSQLYaml",
        "MongoDB",
        "Golang",
        "bitbucket",
        "pdb",
        "AWS",
        "Jira",
        "Jenkins",
        "Pyspark",
        "Rest",
        "Virtual",
        "Machine",
        "Ajax",
        "jQuery",
        "JavaScript",
        "LINUX",
        "Java",
        "Consultant",
        "Python",
        "Atlanta",
        "GA",
        "March",
        "July",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "GUI",
        "Django",
        "Python",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "migration",
        "tasks",
        "Oracle",
        "apps",
        "PostgreSQL",
        "databases",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "scripts",
        "documents",
        "data",
        "database",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "webpages",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "Pandas",
        "data",
        "alignment",
        "data",
        "manipulation",
        "monitoring",
        "practices",
        "search",
        "monitoring",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "AWS",
        "S3",
        "end",
        "Angularjs",
        "ReactJS",
        "Nodejs",
        "bootstrapjs",
        "backbonejs",
        "JavaScript",
        "end",
        "REST",
        "webservice",
        "application",
        "development",
        "Spring",
        "Core",
        "MVC",
        "modules",
        "Java",
        "web",
        "technologies",
        "Servlets",
        "JSP",
        "Java",
        "Web",
        "Service",
        "RESTSOAP",
        "WSDL",
        "Deployed",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWSarchitecture",
        "AWS",
        "S3",
        "data",
        "upload",
        "download",
        "scripts",
        "Knowledge",
        "AWS",
        "Lambda",
        "Auto",
        "Cloud",
        "Front",
        "RDS",
        "Route53",
        "AWS",
        "SNS",
        "SQS",
        "SES",
        "Python",
        "scripting",
        "library",
        "AWS",
        "Security",
        "audit",
        "AWS",
        "Lambda",
        "AWS",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "Ajax",
        "jQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "Angular",
        "MVC",
        "twoway",
        "data",
        "automation",
        "scripts",
        "Selenium",
        "JAVA",
        "modules",
        "project",
        "oops",
        "Install",
        "KAFKA",
        "Hadoop",
        "cluster",
        "configure",
        "producer",
        "consumer",
        "part",
        "connection",
        "twitter",
        "source",
        "HDFS",
        "hash",
        "tags",
        "Splunk",
        "infrastructure",
        "solution",
        "application",
        "toolsets",
        "data",
        "knowledge",
        "Splunk",
        "Apps",
        "Application",
        "Splunk",
        "data",
        "Manage",
        "Splunk",
        "configurations",
        "files",
        "input",
        "props",
        "lookups",
        "Configured",
        "Maven",
        "Java",
        "automation",
        "projects",
        "Maven",
        "Project",
        "Object",
        "Model",
        "POM",
        "Setup",
        "cron",
        "jobs",
        "data",
        "database",
        "graphs",
        "bar",
        "charts",
        "wiki",
        "database",
        "AGILE",
        "development",
        "methodology",
        "application",
        "core",
        "concepts",
        "Collections",
        "Generics",
        "Exception",
        "IO",
        "Concurrency",
        "business",
        "logic",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "versions",
        "GIT",
        "release",
        "notes",
        "release",
        "issues",
        "tool",
        "teams",
        "projects",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "PyCharm",
        "Urllib",
        "jQuery",
        "GitHub",
        "AngularJS",
        "Jira",
        "Software",
        "Developer",
        "US",
        "Cellular",
        "Inc",
        "Chicago",
        "IL",
        "May",
        "March",
        "Responsibilities",
        "business",
        "process",
        "scope",
        "project",
        "position",
        "statement",
        "modules",
        "changes",
        "system",
        "web",
        "pages",
        "python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "issues",
        "process",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Writing",
        "Unit",
        "Functional",
        "Integration",
        "test",
        "cases",
        "Cloud",
        "Computing",
        "applications",
        "AWS",
        "usingPython",
        "boto",
        "library",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "Connected",
        "Flex",
        "Backend",
        "Controller",
        "API",
        "services",
        "architect",
        "developers",
        "business",
        "issues",
        "system",
        "testers",
        "requirements",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Data",
        "mapping",
        "data",
        "class",
        "diagrams",
        "ER",
        "diagrams",
        "SQL",
        "queries",
        "data",
        "Oracle",
        "database",
        "Environment",
        "Python",
        "Django",
        "Java",
        "MySQL",
        "XML",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JSON",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:42:09.187811",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Gogo Aviations Broomfield CO Having 8 years of experience as a Python Developer with deep understanding of technology trends with expertise in core of complex technologies Solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Bottle framework Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile and Vmodel Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev and Bottle framework Experienced in developing Webbased Applications using Python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS and jQuery also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Experienced in developing Web Services with Python programming language and good knowledge of Web Services with protocols SOAP REST Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Profiled python code for optimization and memory management and skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy NumPy Scipy Matplotlib Pickle PySide Pandas dataframe Bottle framework networkX urllib2 Pychart Highcharts to drive improvements throughout entire SDLC Involved in Unit testing Integration testing UserAcceptance testing and Functional testing and experienced in web applications development using Flask Python Bottle framework and Nodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in developing webbased applications using libraries and frameworks like Bottle Angular JS Bootstrap jQuery Ruby on Rails Knockoutjs Node Js Backbonejs React JS D3 JS and Require JS Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Extensive use of Object Oriented design methodology and Agile in software development and experience in Building web applications using Kendo UI widgets jQuery Angular JS Experience objectoriented programming OOP concepts using Python C and PHP and expertise in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite Postgre SQL and MySQL databases Experience on Web development using HTML 45 CSSCSS3 JavaScript jQuery Angularjs AJAX XML and JSON by following W3C standards also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML SQL XML and JSON and developed J2EE applications on IDEs like Eclipse PyCharm My Eclipse Google GWT and Rational Application Developer Proficient in developing multithreaded web services using CherryPy bottlePy framework andleveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap Numpy Scipy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Knowledge in working with continuous deployment using Heroku and Jenkins and experienced on Cloud innovations including Infrastructure as a Service Platform as a Service and Software as a Service supplier IaaS PaaS and SaaS Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process worked on Python Testing frameworks like Bottle zope pytest nose and Robot framework also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Dataframe urlib2 libraries Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies experienced in installing configuring modifying testing and deploying applications with Apache Experience in working with different operating systems like LINUX UNIX and WINDOWS and developed web applications and RESTful web services and APIs using Python Flask Django and PHP also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Authorized to work in the US for any employer Work Experience Sr Python Developer Gogo Aviations Broomfield CO September 2017 to Present Responsibilities Developed frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Used Sqoop to import the data from RDBMS to Hadoop Distributed File System HDFS and later analysed the imported data using Hadoop Components and Created and maintained Technical documentation for launching HADOOP Clusters and for executing Hive queries and Pig Scripts Managed large datasets using Panda data frames and PostgreSQL Designed and developed data management system using postgreSQL Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Established Postgresql databases for blog entries created a client login portal using LinkedIn authentication Expertise in React JS and working with React Flux architecture Designed SPA Single page applications in Flux architecture using Reactjs Comfortable working within the Django ORM writing native SQL queries in PostgreSQL Using React Js worked on applications for Bash terminal component to add Extensible commands and autocomplete in content writing Maintaining Tableau reports analysis and work on enhancements to existing reports or creating new reports based on business needs and Performed Tableau type conversion functions when connected to relational data sources Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used integration tool Drools rules engine that would accept JSON request via restful web services for providing a simple interface allowing anyone to capture new rules and logic defining the behavior of a system Created the Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Implemented ELK stack on Hadoop cluster Generated audit logs for Hbase HDFS Knox Ambari and other Hadoop Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs and Worked on creating the Docker containers and Docker consoles for managing the application life cycle Wrote Python scripts to parse JSON documents and load the data in MongoDB Enhanced performance of application by developing a topology to cache resources using Gemfirefor SOA layer accessing database for savingaccessing financial information Implemented and executed code to perform CRUD operations on MongoDB using Pymongo module Published REST APIs to fetch data from Elastic Search clusters for clientbased applications to search patients and claims by multifield indexes and Used Elastic Search for setting up the search cluster Created MySQL queue using AWS SNS SQS and Golang Go to concurrently process SQL queries in the background and Built a Golang web server to host multiple tools so another has http access to them Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using DJANGO Dynamic implementation of SQL server work on website using SQL developer tool and Experience with continuous integration and automation using Jenkins and Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire Created Intelligence Cubes in MicroStrategy to overcome performance issues related to Report Service Documents using high volume datasets Develop applications that use MongoDB database and pymongo Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Performed data analysis feature selection feature extraction using Apache Spark Machine Learning streaming libraries in Python and Creating data pipelines using Apache Spark a bigdata processing and computing framework Developed frontend using Html CSS Javascript React Redux Bootstrap Developed new Widgetapp module for MMD 20 using Reactjs with Redux architecture and ES6 Implemented mapStateToProps mapDispatchToProps for the interactions between Redux and React Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used NumPy for Numerical analysis and Used Spring Framework to support the Hibernate tool and Struts Implemented a wide variety of statistical and graphical techniques including linera and nonlinera modeling classical statistical tests timeseries analysis classification clustering and others using R and its libraries Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Python Developer Infosys Chicago IL July 2015 to September 2017 Responsibilities Involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches To maintain the code using GIT version control and Cygwin for Linux commands Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Designed and implemented Sandra NoSQL database readwritesearch function Worked on migrating data to Amazon AWS Used AWS products like EC2 IAM RDS Log Monitor Lambda REST API Gateway etc Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Used Amazon Web Services AWS for improved efficiency of storage and fast access Actively participated in requirement gathering sessions and capability planning for multi data center Cassandra cluster Constructed powerful and modern frontend architecture involving React Redux and ES6 Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Developed and deployed corporate intranet platforms for data visualization and analytics using Python Django Django Rest Framework PostgreSQL backend Development of Scripts for CICD using Virtual machines Docker python and Yaml Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Organizing and configuring web application through YAML by creating and configuring appyaml Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Managing Amazon Web Services AWS infrastructure with automation and configuration management tools such as uDeploy Puppet or custombuilt Designing cloudhosted solutions specific AWS product suite experience Excellent experience with Python development under Linux OS DebianRedHatAIX Experience with Linux command and bash shell scripting Worked on Amazon Web ServicesAWS infrastructure with automation and configuration management tools such as Chef and Puppet Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with MongoDB database Search engine optimization by replacing existing database with MongoDB NoSQL Database Used Github for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Working extensively on REST APIs JSON Microservices CICD Docker containers Worked in NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL NOSQL queries implementing functions packages views triggers and tables Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Creating new MEAN MERN stack React applications Create REST APIs using DRF to be consumed by the frontend UI built on Angular JS Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Utilized Celery to automate various tasks such as API calls Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Developed tools using Python Shell scripting XML to automate some of the menial tasks Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed coding in C on Linux Platform Developed a frontend application using React JS and FLUX architecture for internal teams productivity use Executed asynchronous tasks with help of Celery and Rabbit MQ Versatile with Version control systems including Git and SVN and Implemented RESTful API which returns data from PostgreSQL in JSON format Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create Environment Python 3 Django SQL ZODB MySQL Sqlite3 git Devops PostgreSQL NoSQLYaml MongoDB Golang bitbucket pdb AWS Jira Jenkins dockers Pyspark Rest Virtual Machine Ajax jQuery JavaScript LINUX Java Consultant Python Atlanta GA March 2013 to July 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed GUI using Django and Python for dynamically displaying the test block documentation and other features with Python code for a web browser Implemented migration tasks from Oracle apps to PostgreSQL databases Used Amazon Web Services AWS for improved efficiency of storage and fast access Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used and Python Django to interface with the jQuery UI and manage the storage and deletion of content Wrote scripts to parse JSON documents and load the data in database Worked on front end frame works like CSS Bootstrap for responsive webpages Used python libraries like Beautiful Soup and matplotlib Used Pandas for a data alignment and data manipulation Implemented monitoring and established best practices around using elastic search and Install and configuring monitoring scripts for AWS EC2 instances and AWS S3 Developed front end using Angularjs ReactJS Nodejs bootstrapjs backbonejs JavaScript where back end is java with REST webservice Involved in the application development using Spring Core MVC modules and Java web based technologies such as Servlets JSP Java Web Service RESTSOAP based WSDL Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWSarchitecture and automated AWS S3 data upload download using python scripts Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Worked on Python OpenStack APIs and used NumPy for Numerical analysis Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers Used Angular MVC and twoway data binding Worked on automation scripts using Selenium in JAVA Designed coded and tested key modules of the project using java oops concepts Install KAFKA on Hadoop cluster and configure producer and consumer coding part in java to establish connection from twitter source to HDFS with popular hash tags Developed Splunk infrastructure and related solution for application toolsets Helped team to onboard data create various knowledge objects Install and maintain the Splunk Apps Creating Application on Splunk to analyse the data Manage Splunk configurations files like input props transforms and lookups Configured Maven for Java automation projects and developed Maven Project Object Model POM Setup automated cron jobs to upload data into database generate graphs bar charts upload these chartsto wiki and backup the database Followed AGILE development methodology to develop the application Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Added several options to the application to choose particular algorithm for data and address generation Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across all the teams for several projects Environment Python 32 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting PyCharm Urllib jQuery GitHub AngularJS Jira Software Developer US Cellular Inc Chicago IL May 2011 to March 2013 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Writing Unit Functional and Integration test cases for Cloud Computing applications on AWS usingPython with boto library Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL Education Bachelors",
    "unique_id": "3e12503e-7d9e-4de0-a790-fbe098d5c371"
}