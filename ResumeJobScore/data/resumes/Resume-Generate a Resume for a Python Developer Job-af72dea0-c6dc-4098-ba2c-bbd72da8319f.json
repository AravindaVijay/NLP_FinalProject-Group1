{
    "clean_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Staples Framingham MA Over 9 years of strong software experience in design development and deployment of webbased ClientServer business applications using JavaJ2EE technologies Experience working with different SDLC Software Development Life Cycle including Requirement gathering Analysis Design Coding Testing and Implementation like AGILE SCRUM TDD and Waterfall Models Worked with PLSQL Packages Procedures and Functions for back end processes Involved in development in Java and PLSQL components Excellent exposure to Microsoft Technologies ORACLE  sqlSQL Having good knowledge in front end technologies like HTML4 CSS3 Android AJAX JSON DOM TypeScript Bootstrap XHTML DHTMLJavaScript jQuery Tag librariesAngular JS 24 Knowledge in developing applications using JavaJ2EE technologiesHibernateServlets JSPJSF AJAX JDBC JNDI GWT JavaBeans EJBsJSTL Swing Struts XML Web Services JMS Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Good hands on Java 8 concepts like Lambda Functional Interfaces Filters and Streams Experience in database design and development of PLSQL stored procedures and packages in relational databases like Oracle  10g 11g SQL Server 20052008 DB2 MySQL and good hands on experience in implementing designing and developing NoSQL Databases like MongoDB Apache Cassandra and CouchDB Experience in configuration and deployment of multitier applications using different web servers like Apache Tomcat WebSphere Apache Axis Apache HTTP Server and WebLogic Experience on AWS platforms VPC EC2 ELB SQ3 and EBS ROUTE 53 Dynamo DB CLI and SDKsAPI tools and good knowledge on AWS tools like S3 Lambda Kinesis Cloud Watch SQS Expertise in configuring WBI Adapters such as Jtext JDBC HTTP Webservices MQand JMS Used PLSQL and SQLLoader to create ETL packages for flat file loading and error capturing into log tables Experience in working with different IDEs like Eclipse NetBeans IntelliJ STS Spring Tool Suite Visual Studio Rational Application Developer RAD Dream Viewer Experience in implementing and deploying Java EE design patterns such as MVC Singleton Factory DAO DTO and Business Delegate in the development of MultiTier distributed Enterprise Applications Experience in using code repository tools Tortoise SVN CVS GitHub and Visual Source Safe Experience with project buildtestdeployment tools like Maven and Ant Worked with Log4j for logging and used JUnit and Mockito for unit testing and integration testing Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Staples Framingham MA August 2018 to Present The SOMS Shared Order Management system Application enables the backend process of Staples online and vendor orders This is a centralized application which interacts with lot of other APIs and helps in managing different intermediate steps like authorization of the customer order price payments sourcing and shipping involved during the life cycle of an order Responsibilities Involved in development and testing of Streamlets module Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model and worked on JIRAand Confluence to access the user stories Worked with PLSQL Packages Procedures and Functions for back end processes Implemented Java8 features like Lambda expressions Streams filters pipelines Optional Interfaces etc Developed UIweb pages using HTML5 CSS3 and jQuery to display the data on the client side Oracle PLSQL developer responsible for writing ETL scripts Created the AngularJS application using Grunt and Bower and used AngularUI for component model Updated the project midway to Angular 4 for its performance benefits Used J2EE design patterns like Adapter Service locator Session facade Singleton Factory and DAO Developed classes using Core javaExecutor Servicemultithreading concurrency memory management Involved in developing UI pages using AngularJS and calling the Rest APIs from backend Created Spring Boot with Micro Services utilizing RESTful API Consumed REST Web Services for getting the credit card information from third party application using EME Developed Restful Web services for other systems to interact with our system and secured the service with Spring Security Oauth20 Added WSSecurity using XWSS to secure the Web services Implemented the associated business modules integration using Springand Hibernate data mapping Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query Criteria Performed Hibernate framework optimization using Projection in Criteria object to query minimum columns to display data on dashboards Worked closely with Project manager development testing andproduction team to align project deliverables dates and report issuesconcerns Used NodeJS to run Grunt Tasks and build properly the project Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Developed Session Beans for necessary Transactions like fetching the data and updating the customer information Utilized Spring core AOP and security to build robust business operations with transactional support Implemented SpringCloud Config Server Routing and Filtering to Microservices using Netflix Zuul Extensively used Spring Batch which uses Spring IOC dependencies this is useful for developing batch processing Developed unit and integration tests for existing microservices using JUnit Mockito environments Developed database objectsStored Procedures Tables Views Sequences Cursors Packages and Triggers Wrote SQL queries using PLSQL stored procedures and enhanced performance by running explain plans Developed and tested extraction transformation job and load ETL processes Tuned performance of Informaticasession for large data files by increasing block size data cache size sequence buffer length and target based commit interval Performed cross browser testing by using Selenium Grid on multiple browsers and on different platforms Oversaw all aspects of testing JUnit FIT and SITEnd to End RegressionUser acceptance and Performance Used Git as Version Control System for the application Used JMeter to test performance of SOAP protocol Developed API for using AWS Lambda to manage the servers and run the code in the AWS Created detailed AWS Security groups which behaved as virtual firewalls that controlled the traffic allowed reaching one or more AWS EC2 instances Created and maintained documentation for launching HADOOP Clusters and executing Hive queries Pig Scripts Worked on creation of custom Docker container images tagging pushing images integration of Spring boot Experience of working with AzureMonitoring Data Factory Traffic Manager Service Bus Key Vault Hands on experience with Microsoft Azure Cloudservices Storage Accounts and Virtual Networks Environment Java 1718 J2EE Git PLSQLSpring Boot Hibernate 4x Core Java SOAPRest Web Services CSS Angular 4IBM WebSphere Application Server 8X6XStruts2 RAD DB2 VisualizerHadoop Scala Spark Eclipse RCP SASS WSDL JIRA 56x JMS NOSQLMongoDB ETL Grunt J AWS Microsoft AzureRecently Spring Cloud SAAS1Spring batch Apache JMeter jQuery JUnit Maven Jenkins Sr JavaJ2EE Full Stack Developer Protective Life Insurance Birmingham AL July 2017 to August 2018 The Life Insurance Application allows customers to access their account online This application provides employers to access customer information to process and authorize claims of the customers and generates free quotes for the customers depending on the type of insurance package they selected It also facilitates customers to pay their monthly premiums Responsibilities Involved in all stages of SDLC like Requirement Analysis Design and Implementation in Agile Methodology Developed presentation layers using HTML5 CSS3 and Angular2 router to build single page application to navigate through the different status and multiple modals Used Angular 2 to associate HTML elements to model to provide dynamic user validations on client side Worked on UI components using Angular2Dependency Injection Models data binding and controllers Worked on Java8 features like Lambda expressions Streams filters optional classes and default methods Used Executor Service Interfaces ThreadPoolExecutor class for multithreading thread resource pooling Worked on Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache Spring Boot components to implement business layer and navigation part of application Demonstrated our SAAS engaged in contract negotiations and presented ROI to C Level Executives Developed the Application using design patternsSingleton Factory DAO DTO prototype and Composite View Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Bootto provide clientside load balancing in calls to another Microservicesfor making application in to smaller chunks and also the Spring Hystrix as circuit breaker and for the failsafe Involved in developing Restful service APIs end points in microservice architecture Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Implemented a distributed messaging queue to integrate with MongoDB using Kafka and Zookeeper Developed various SQL queries and PL SQL Procedures in Oracle DB for the application Involved in Designing and deploying AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Supporting Systems Infrastructure comprised of Linux OSAWS EC2 clusters Worked on instantiating multiple AWSEC2 servers by using YAML Script in Ansible playbook Experienced DevOps methodologies by implementing CICD Pipelines using tool sets like GIT Jenkins and AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Extensively worked in data extraction transformation and loading from source to target system using Informaticapower center Worked with API Management product of APIGEE in consuming the APIs in implementing customer use cases UNIX Shellscripts for Bash shell to automate deployments and environment configurations on the EC2 Clusters Developed ApacheSpark jobs using Java in test environment for faster data processing and used SparkSQL Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Environment HTML CSS JavaScript Angular2 Nodejs Java8 JavaJ2EE Spring MVC Restful Webservices Microservices IBM BPMNetflix Spring Eureka Spring Ribbon Spring BootSAAS Spring Hystrix AWS EC2 S3 RDS EBS Elastic Load Balancer PL SQL Oracle Ansible Kafka Zookeeper Kubernetes GIT Jenkins ChefLinux OSSelenium TestNG APIGEE MongoDB Design Patterns log4j Agile Methodology Maven Spark Java Developer Woodforest National Bank Chicago IL February 2016 to June 2017 Financial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning We give the monetary benefits at each period and projection till the end of period We also help the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Implemented Spring MVC controllers configured using Spring MVC annotations and configuration files Implemented spring framework Bean Factory Application Context for bean initialization and configurations Spring AOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Used Hibernate as an ORM tool to interact with the database Involved in development of POJO classes and writing Hibernate query languageHQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using SpringMVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture by developing and consuming RESTFULservices based on JAXRS Implemented Java Classes to use JAXP parser to create Java objects able to modify the data received in the response Worked with DB2 and Wrote SQL Queries stored Procedures triggers and integrated SQL Queries into DAO Deployed the application on ApacheTomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artifacts and code build deployment with Maven Used JIRA for defect and issue tracking and Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Environment Java 6 J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 JavaJ2EE Developer People Tech Group February 2015 to January 2016 This is a comprehensive and integrated Hospital Management System for a super specialty hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Participated in all phases of the project like design development testing enhancements and production support We used Multithreading in this application to improve the performance Used Strutsframeworks and MVC design patterns to complete several projects on complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Developed SOAP web services using Apache web services and Spring framework Involved in designing and implementing the application using various Java andJ2EE Design patterns design patterns such as Singleton Business Delegate Faade MVC and Data Access Object DAO Developed UI using spring view component HTML CSS Java Script Designed and Developed UI using JSP by following MVC architecture The Java Message Service JMS API used to allow application components to create send receive and read messages Utilized Spring MVC annotations and XML configuration for Dependency Injection Wrote SQL queries stored procedures and modifications to existing database structure for addition features Controller Servlets Action Form objects for process of interacting with Oracle database and retrieving dynamic data Involved in writing all formats of database quires like SQL HQL in DAO layer Developed Unit test cases using Junit and Developed ant scripts and developed builds using Apache ANT Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose and Used Clear Case for source code maintenance Produced comprehensive documentation for Microservices and Applications supporting Change Management process Installed Web Logic Server for handling HTTP RequestResponse and controlled using Session Tracking in JSP Used Maven for compilation and building JAR WAR and EAR files Used Jenkins as a continuous integration tool for application building testing and deploying Coordinate with the QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and those defects are resolved Was part of production support team to resolve the production issues Environment Java 15 J2EE Struts 11 MVC Design Patterns Spring MVC SOAP Web Services JSP 12 HTML CSS JavaScript SQL Web Logic 70 XML JMS Apache ANT Rational Rose Junit Jenkins Maven Microservices Med Host Financial Franklin TN October 2013 to January 2015 Java Developer MEDHOST provides marketleading enterprise departmental and health IT engagement solutions to more than 1 000 hospitals Med host financial department provides account payments credit card processing general ledger materials management online bill payments patient statements electronic claims and electronic remittance Responsibilities Worked on Agile methodology including teambased design and code reviews Involved in the combining two web applications into one for a new project Developed applications using AngularJS Bootstrap like Grids Toolbars Panels ComboBox and Button etc Enhanced user experience by designing new web features and also single page applications using AngularJS Experienced in Responsive Web Design technology framework like Bootstrap Used Ehcache for caching and improved the performance of the application Responsible for development of Business logic in core Java Created SQL jobs to upload the feeds received from Borg Using Spring AOP to capture performance statistics of business logic and DAO layer methods Designed and Developed user interactive screens using HTML5 CSS3 JavaScript jQuery Extensively worked on MEAN MongoDB Express Angular and Node stack for rapid prototyping of applications for client demonstrations JSON objects have been created to store them in Database in OFFLINE mode Serialized string of a Google Protocol Buffer data structure Implemented Single Sign on emarketing commercial portal site with B2B and B2C sites Stubby server communication and creation Implemented spring MVC to achieve Model View Controller design pattern Configured spring to manage actions as beans and set their dependencies in a spring context file and integrated middle tire with spring web layer Implementing the coding standards review the code and fixing all the code review bugs Created all the services to work with various entities provided and rectified the services using APIs using JAXRS Created application layer POJO classes and mapped them to backend Oracle database tables using Hibernate framework Experienced in writing SQL and PLSQL scripts Analyse the code and apply the fix solution for the issues Identified based on the severity basis Developed queries that are required for the application development and implemented using different logics Developed test classes in Junit for implementing unit testing Batch Jobs have been developed using spring Batch Used SVN as the Version Control Environment Java Bootstrap AngularJS jQuery HTML CSS Struts Spring POJO Eclipse IntelliJ Sub lime Spring MVC Maven SVN AJAX Apache Tomcat Server Log4j Restful web services WebSphere Application Server Spring Oracle Jboss JIRA Jenkins AgileScrum JavaJ2EE Developer Tavant Technologies October 2011 to August 2013 Tavant Technologies is an IT solutions and services provider recognized globally for its innovative solutions They have been able to provide game changing results for customers by combining industry experience with cuttingedge technologies Developing enterprise software that automates primary business processes to maintaining or modernizing legacy systems our Application Development and Maintenance Services ADM Services have made a positive impact to businesses across the world Responsibilities Involved in all phases of the development life cycle SDLC involving in requirement Collection Design and analysis of the customer specifications of the application using TDD Methodology Implemented struts framework using MVC design pattern and front controller pattern Designed user interface by creating web pages for each component using Struts web MVC and Action Servlet as front controller in this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML for each user interface JavaScript Servlets standard validations are used as the controllers for business logic and using JDBC XML parsing techniques using MVC Designed mailing application to send notifications to the Oracle users for intimating to start the next workflow Designed and implemented AJAX server calls to dynamically retrieve shipping information Worked on Oracle in writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Involved in testing the application using JUnit Designed coded and tested business logic for software applications Environment Core Java JDK J2EE JSP MySQL Ant Build JDBC Struts HTML XML Java Script JUnit Ajax TDD Methodology Apache Tomcat Eclipse JavaUI Developer Prime soft Technologies Pvt Ltd May 2010 to September 2011 Electronic Medical Record EMR is a webbased java solution that capture data from different fields different forms to compile individual Health data that can be shared across different health care settings and different clinicians This individual data can be compiled to generate different types of reports that can help the organizations to grow their business rapidly Responsibilities Worked extensively with the backend which comprised of Spring Hibernate and JPA Used JSON and XML formats to transfer data from the server Implemented Web Services to handle data from third party interfaces used tool like axis 14 to create web services Developed AJAX based webbased UI framework Created simple user interface for applications configuration system using MVC design patterns and Swing framework Developed Servlets and JSP for performing CRUD operations on domain specific entities Developed Service Layer using POJOs and Spring IOC Developed Data Access Layer using Hibernate and DAO Design Pattern Involved in working with J2EE Design patterns Singleton Factory DAO and Business Delegate and Model View Controller Architecture with JSF and Spring IOC Used Apache POI API to generate excel document for data in each grid in the application Extensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references Involved in the development of the application based on backend Spring MVC architecture Utilized Spring MVC framework to implement design patterns like IOC Dependency Injection Spring DAO Data Transfer objects Business objects ORM Mappings Used the Spring DAO to handle exception for database transaction like open connections no result connection aborted closing the connections etc Utilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects Environment JSP Servlets Struts framework MVC Java Beans JDBC Tomcat Linux Oracle 10g JavaScript HTML CSS JavaScript jQuery GIT JUnit Education Bachelors Skills AJAX 4 years Apache 6 years HTML5 4 years J2EE 7 years Java 8 years JavaScript 8 years jQuery 4 years JSP 5 years JUnit 6 years Maven 5 years Model View Controller 8 years MODELVIEWCONTROLLER 8 years MVC 8 years Oracle 7 years SQL 5 years testing 7 years Tomcat 6 years UI 5 years user interface 7 years Web Services 5 years CertificationsLicenses Drivers License",
    "entities": [
        "Maven Used",
        "Optional Interfaces etc Developed UIweb",
        "Lambda Functional Interfaces Filters and Streams Experience",
        "TDD Methodology Implemented",
        "AJAX",
        "Analysis Design Development System Testing",
        "GUI",
        "WebSphere Application",
        "the Spring Hystrix",
        "Criteria",
        "JMS",
        "Retirement Insurance Education Tax Estate and Mortgage",
        "Virtual Networks",
        "Spring IOC",
        "Apache ANT Created",
        "Strutsframeworks",
        "BootSAAS Spring Hystrix AWS",
        "Waterfall Models Worked",
        "Rational Rose and Used Clear Case",
        "Spring IOC Developed Data Access Layer using",
        "Implemented Hibernate Template",
        "Updated",
        "Microsoft Azure Cloudservices Storage Accounts",
        "The Life Insurance Application",
        "XML",
        "API Consumed",
        "JavaScript Implemented",
        "EAR",
        "Auxiliary Services Each",
        "J2EE Design",
        "WebLogic",
        "JUnit",
        "Bean Factory Application Context",
        "Automated",
        "SDLC Software Development Life Cycle",
        "the Version Control Environment",
        "Bootstrap Enhance",
        "JavaJ2EE",
        "Linux OSAWS EC2",
        "Java andJ2EE Design",
        "STS Spring Tool Suite Visual Studio Rational Application Developer RAD Dream Viewer",
        "Woodforest National Bank",
        "Developed",
        "DAO",
        "Maven Jenkins DB2 Selenium Log4j",
        "Bash",
        "AWS S3",
        "Created Spring Boot with Micro Services",
        "XWSS",
        "Mockito",
        "Spring MVC",
        "Responsibilities Worked on Agile",
        "Bootstrap Used Ehcache",
        "RAD",
        "Responsibilities Involved",
        "Restful",
        "RESTFUL API",
        "Core",
        "Data Access Object DAO Developed UI",
        "Junit",
        "HTML5",
        "Expression Query Criteria Performed Hibernate",
        "Worked on Spring MVC Transaction Management",
        "SAAS",
        "JSP",
        "MVC Singleton",
        "Worked",
        "JAXRS Created",
        "SDLC",
        "SQL Queries",
        "CertificationsLicenses",
        "PL SQL Procedures",
        "Procedures Tables Views Sequences Cursors Packages and Triggers Wrote",
        "Adapter Service",
        "Developed Servlets",
        "Application Development and Maintenance Services ADM Services",
        "CLI",
        "S3 Lambda Kinesis Cloud Watch SQS Expertise",
        "MVC",
        "API Management",
        "Microsoft Technologies ORACLE",
        "ApacheTomcat Application",
        "Spring Data Implemented",
        "US",
        "Database",
        "QA",
        "POJO",
        "Implemented Single Sign",
        "MVC Restful Webservices Microservices",
        "Created",
        "AOP",
        "AWS",
        "Nodejs Java8 JavaJ2EE Spring",
        "Oracle",
        "SQL HQL",
        "Singleton",
        "JSF",
        "Injection Models",
        "Oracle DB",
        "ClientServer",
        "ELB",
        "APIGEE",
        "SQL",
        "Oversaw",
        "Business Delegate and",
        "JSPHTML",
        "AWS Created",
        "Responsibilities Worked",
        "Installed Web Logic Server",
        "Used Executor Service Interfaces",
        "SpringMVC",
        "Springand Hibernate",
        "HADOOP Clusters",
        "Chicago",
        "AWS Utilized AWS Lambda",
        "JIRAand Confluence",
        "Netflix Spring",
        "JMS NOSQLMongoDB",
        "EME Developed Restful Web",
        "Hospital Management System",
        "Borg Using Spring AOP",
        "ETL",
        "Singleton Factory",
        "The Java Message Service JMS API",
        "SCM",
        "CRUD",
        "Utilized Spring",
        "JavaScript Servlets",
        "Spring Hibernate",
        "Maven",
        "Performed",
        "Present The SOMS Shared Order Management system Application",
        "AzureMonitoring Data Factory Traffic",
        "Developed Unit",
        "Controller Servlets Action Form",
        "Supporting Systems Infrastructure",
        "UI",
        "Spring Security Oauth20 Added WSSecurity",
        "CICD Pipelines",
        "HQL Named Parameters Named Queries",
        "Netflix Zuul",
        "HTTP RequestResponse",
        "Singleton Business Delegate Faade",
        "SVN",
        "Jtext JDBC HTTP Webservices",
        "CSS",
        "Ant Worked",
        "Hibernate 30",
        "Requirement Analysis Design and Implementation in Agile Methodology Developed",
        "YAML Script",
        "GWT JavaBeans EJBsJSTL",
        "SDKsAPI",
        "jQuery",
        "Tavant Technologies",
        "Developed Action Class",
        "UNIX Shellscripts",
        "Oraclestored",
        "NetBeans",
        "AWS Security",
        "Implemented Web Services",
        "Developed UI",
        "TDD",
        "Filtering",
        "DAO Developed",
        "HTML4",
        "Developed Mongo DB Data Access Layer",
        "Collection Design"
    ],
    "experience": "Experience working with different SDLC Software Development Life Cycle including Requirement gathering Analysis Design Coding Testing and Implementation like AGILE SCRUM TDD and Waterfall Models Worked with PLSQL Packages Procedures and Functions for back end processes Involved in development in Java and PLSQL components Excellent exposure to Microsoft Technologies ORACLE   sqlSQL Having good knowledge in front end technologies like HTML4 CSS3 Android AJAX JSON DOM TypeScript Bootstrap XHTML DHTMLJavaScript jQuery Tag librariesAngular JS 24 Knowledge in developing applications using JavaJ2EE technologiesHibernateServlets JSPJSF AJAX JDBC JNDI GWT JavaBeans EJBsJSTL Swing Struts XML Web Services JMS Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Good hands on Java 8 concepts like Lambda Functional Interfaces Filters and Streams Experience in database design and development of PLSQL stored procedures and packages in relational databases like Oracle   10 g 11 g SQL Server 20052008 DB2 MySQL and good hands on experience in implementing designing and developing NoSQL Databases like MongoDB Apache Cassandra and CouchDB Experience in configuration and deployment of multitier applications using different web servers like Apache Tomcat WebSphere Apache Axis Apache HTTP Server and WebLogic Experience on AWS platforms VPC EC2 ELB SQ3 and EBS ROUTE 53 Dynamo DB CLI and SDKsAPI tools and good knowledge on AWS tools like S3 Lambda Kinesis Cloud Watch SQS Expertise in configuring WBI Adapters such as Jtext JDBC HTTP Webservices MQand JMS Used PLSQL and SQLLoader to create ETL packages for flat file loading and error capturing into log tables Experience in working with different IDEs like Eclipse NetBeans IntelliJ STS Spring Tool Suite Visual Studio Rational Application Developer RAD Dream Viewer Experience in implementing and deploying Java EE design patterns such as MVC Singleton Factory DAO DTO and Business Delegate in the development of MultiTier distributed Enterprise Applications Experience in using code repository tools Tortoise SVN CVS GitHub and Visual Source Safe Experience with project buildtestdeployment tools like Maven and Ant Worked with Log4j for logging and used JUnit and Mockito for unit testing and integration testing Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Staples Framingham MA August 2018 to Present The SOMS Shared Order Management system Application enables the backend process of Staples online and vendor orders This is a centralized application which interacts with lot of other APIs and helps in managing different intermediate steps like authorization of the customer order price payments sourcing and shipping involved during the life cycle of an order Responsibilities Involved in development and testing of Streamlets module Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model and worked on JIRAand Confluence to access the user stories Worked with PLSQL Packages Procedures and Functions for back end processes Implemented Java8 features like Lambda expressions Streams filters pipelines Optional Interfaces etc Developed UIweb pages using HTML5 CSS3 and jQuery to display the data on the client side Oracle PLSQL developer responsible for writing ETL scripts Created the AngularJS application using Grunt and Bower and used AngularUI for component model Updated the project midway to Angular 4 for its performance benefits Used J2EE design patterns like Adapter Service locator Session facade Singleton Factory and DAO Developed classes using Core javaExecutor Servicemultithreading concurrency memory management Involved in developing UI pages using AngularJS and calling the Rest APIs from backend Created Spring Boot with Micro Services utilizing RESTful API Consumed REST Web Services for getting the credit card information from third party application using EME Developed Restful Web services for other systems to interact with our system and secured the service with Spring Security Oauth20 Added WSSecurity using XWSS to secure the Web services Implemented the associated business modules integration using Springand Hibernate data mapping Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query Criteria Performed Hibernate framework optimization using Projection in Criteria object to query minimum columns to display data on dashboards Worked closely with Project manager development testing andproduction team to align project deliverables dates and report issuesconcerns Used NodeJS to run Grunt Tasks and build properly the project Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Developed Session Beans for necessary Transactions like fetching the data and updating the customer information Utilized Spring core AOP and security to build robust business operations with transactional support Implemented SpringCloud Config Server Routing and Filtering to Microservices using Netflix Zuul Extensively used Spring Batch which uses Spring IOC dependencies this is useful for developing batch processing Developed unit and integration tests for existing microservices using JUnit Mockito environments Developed database objectsStored Procedures Tables Views Sequences Cursors Packages and Triggers Wrote SQL queries using PLSQL stored procedures and enhanced performance by running explain plans Developed and tested extraction transformation job and load ETL processes Tuned performance of Informaticasession for large data files by increasing block size data cache size sequence buffer length and target based commit interval Performed cross browser testing by using Selenium Grid on multiple browsers and on different platforms Oversaw all aspects of testing JUnit FIT and SITEnd to End RegressionUser acceptance and Performance Used Git as Version Control System for the application Used JMeter to test performance of SOAP protocol Developed API for using AWS Lambda to manage the servers and run the code in the AWS Created detailed AWS Security groups which behaved as virtual firewalls that controlled the traffic allowed reaching one or more AWS EC2 instances Created and maintained documentation for launching HADOOP Clusters and executing Hive queries Pig Scripts Worked on creation of custom Docker container images tagging pushing images integration of Spring boot Experience of working with AzureMonitoring Data Factory Traffic Manager Service Bus Key Vault Hands on experience with Microsoft Azure Cloudservices Storage Accounts and Virtual Networks Environment Java 1718 J2EE Git PLSQLSpring Boot Hibernate 4x Core Java SOAPRest Web Services CSS Angular 4IBM WebSphere Application Server 8X6XStruts2 RAD DB2 VisualizerHadoop Scala Spark Eclipse RCP SASS WSDL JIRA 56x JMS NOSQLMongoDB ETL Grunt J AWS Microsoft AzureRecently Spring Cloud SAAS1Spring batch Apache JMeter jQuery JUnit Maven Jenkins Sr JavaJ2EE Full Stack Developer Protective Life Insurance Birmingham AL July 2017 to August 2018 The Life Insurance Application allows customers to access their account online This application provides employers to access customer information to process and authorize claims of the customers and generates free quotes for the customers depending on the type of insurance package they selected It also facilitates customers to pay their monthly premiums Responsibilities Involved in all stages of SDLC like Requirement Analysis Design and Implementation in Agile Methodology Developed presentation layers using HTML5 CSS3 and Angular2 router to build single page application to navigate through the different status and multiple modals Used Angular 2 to associate HTML elements to model to provide dynamic user validations on client side Worked on UI components using Angular2Dependency Injection Models data binding and controllers Worked on Java8 features like Lambda expressions Streams filters optional classes and default methods Used Executor Service Interfaces ThreadPoolExecutor class for multithreading thread resource pooling Worked on Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache Spring Boot components to implement business layer and navigation part of application Demonstrated our SAAS engaged in contract negotiations and presented ROI to C Level Executives Developed the Application using design patternsSingleton Factory DAO DTO prototype and Composite View Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Bootto provide clientside load balancing in calls to another Microservicesfor making application in to smaller chunks and also the Spring Hystrix as circuit breaker and for the failsafe Involved in developing Restful service APIs end points in microservice architecture Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Implemented a distributed messaging queue to integrate with MongoDB using Kafka and Zookeeper Developed various SQL queries and PL SQL Procedures in Oracle DB for the application Involved in Designing and deploying AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Supporting Systems Infrastructure comprised of Linux OSAWS EC2 clusters Worked on instantiating multiple AWSEC2 servers by using YAML Script in Ansible playbook Experienced DevOps methodologies by implementing CICD Pipelines using tool sets like GIT Jenkins and AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Extensively worked in data extraction transformation and loading from source to target system using Informaticapower center Worked with API Management product of APIGEE in consuming the APIs in implementing customer use cases UNIX Shellscripts for Bash shell to automate deployments and environment configurations on the EC2 Clusters Developed ApacheSpark jobs using Java in test environment for faster data processing and used SparkSQL Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Environment HTML CSS JavaScript Angular2 Nodejs Java8 JavaJ2EE Spring MVC Restful Webservices Microservices IBM BPMNetflix Spring Eureka Spring Ribbon Spring BootSAAS Spring Hystrix AWS EC2 S3 RDS EBS Elastic Load Balancer PL SQL Oracle Ansible Kafka Zookeeper Kubernetes GIT Jenkins ChefLinux OSSelenium TestNG APIGEE MongoDB Design Patterns log4j Agile Methodology Maven Spark Java Developer Woodforest National Bank Chicago IL February 2016 to June 2017 Financial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning We give the monetary benefits at each period and projection till the end of period We also help the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Implemented Spring MVC controllers configured using Spring MVC annotations and configuration files Implemented spring framework Bean Factory Application Context for bean initialization and configurations Spring AOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Used Hibernate as an ORM tool to interact with the database Involved in development of POJO classes and writing Hibernate query languageHQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using SpringMVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture by developing and consuming RESTFULservices based on JAXRS Implemented Java Classes to use JAXP parser to create Java objects able to modify the data received in the response Worked with DB2 and Wrote SQL Queries stored Procedures triggers and integrated SQL Queries into DAO Deployed the application on ApacheTomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artifacts and code build deployment with Maven Used JIRA for defect and issue tracking and Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Environment Java 6 J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 JavaJ2EE Developer People Tech Group February 2015 to January 2016 This is a comprehensive and integrated Hospital Management System for a super specialty hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Participated in all phases of the project like design development testing enhancements and production support We used Multithreading in this application to improve the performance Used Strutsframeworks and MVC design patterns to complete several projects on complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Developed SOAP web services using Apache web services and Spring framework Involved in designing and implementing the application using various Java andJ2EE Design patterns design patterns such as Singleton Business Delegate Faade MVC and Data Access Object DAO Developed UI using spring view component HTML CSS Java Script Designed and Developed UI using JSP by following MVC architecture The Java Message Service JMS API used to allow application components to create send receive and read messages Utilized Spring MVC annotations and XML configuration for Dependency Injection Wrote SQL queries stored procedures and modifications to existing database structure for addition features Controller Servlets Action Form objects for process of interacting with Oracle database and retrieving dynamic data Involved in writing all formats of database quires like SQL HQL in DAO layer Developed Unit test cases using Junit and Developed ant scripts and developed builds using Apache ANT Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose and Used Clear Case for source code maintenance Produced comprehensive documentation for Microservices and Applications supporting Change Management process Installed Web Logic Server for handling HTTP RequestResponse and controlled using Session Tracking in JSP Used Maven for compilation and building JAR WAR and EAR files Used Jenkins as a continuous integration tool for application building testing and deploying Coordinate with the QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and those defects are resolved Was part of production support team to resolve the production issues Environment Java 15 J2EE Struts 11 MVC Design Patterns Spring MVC SOAP Web Services JSP 12 HTML CSS JavaScript SQL Web Logic 70 XML JMS Apache ANT Rational Rose Junit Jenkins Maven Microservices Med Host Financial Franklin TN October 2013 to January 2015 Java Developer MEDHOST provides marketleading enterprise departmental and health IT engagement solutions to more than 1 000 hospitals Med host financial department provides account payments credit card processing general ledger materials management online bill payments patient statements electronic claims and electronic remittance Responsibilities Worked on Agile methodology including teambased design and code reviews Involved in the combining two web applications into one for a new project Developed applications using AngularJS Bootstrap like Grids Toolbars Panels ComboBox and Button etc Enhanced user experience by designing new web features and also single page applications using AngularJS Experienced in Responsive Web Design technology framework like Bootstrap Used Ehcache for caching and improved the performance of the application Responsible for development of Business logic in core Java Created SQL jobs to upload the feeds received from Borg Using Spring AOP to capture performance statistics of business logic and DAO layer methods Designed and Developed user interactive screens using HTML5 CSS3 JavaScript jQuery Extensively worked on MEAN MongoDB Express Angular and Node stack for rapid prototyping of applications for client demonstrations JSON objects have been created to store them in Database in OFFLINE mode Serialized string of a Google Protocol Buffer data structure Implemented Single Sign on emarketing commercial portal site with B2B and B2C sites Stubby server communication and creation Implemented spring MVC to achieve Model View Controller design pattern Configured spring to manage actions as beans and set their dependencies in a spring context file and integrated middle tire with spring web layer Implementing the coding standards review the code and fixing all the code review bugs Created all the services to work with various entities provided and rectified the services using APIs using JAXRS Created application layer POJO classes and mapped them to backend Oracle database tables using Hibernate framework Experienced in writing SQL and PLSQL scripts Analyse the code and apply the fix solution for the issues Identified based on the severity basis Developed queries that are required for the application development and implemented using different logics Developed test classes in Junit for implementing unit testing Batch Jobs have been developed using spring Batch Used SVN as the Version Control Environment Java Bootstrap AngularJS jQuery HTML CSS Struts Spring POJO Eclipse IntelliJ Sub lime Spring MVC Maven SVN AJAX Apache Tomcat Server Log4j Restful web services WebSphere Application Server Spring Oracle Jboss JIRA Jenkins AgileScrum JavaJ2EE Developer Tavant Technologies October 2011 to August 2013 Tavant Technologies is an IT solutions and services provider recognized globally for its innovative solutions They have been able to provide game changing results for customers by combining industry experience with cuttingedge technologies Developing enterprise software that automates primary business processes to maintaining or modernizing legacy systems our Application Development and Maintenance Services ADM Services have made a positive impact to businesses across the world Responsibilities Involved in all phases of the development life cycle SDLC involving in requirement Collection Design and analysis of the customer specifications of the application using TDD Methodology Implemented struts framework using MVC design pattern and front controller pattern Designed user interface by creating web pages for each component using Struts web MVC and Action Servlet as front controller in this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML for each user interface JavaScript Servlets standard validations are used as the controllers for business logic and using JDBC XML parsing techniques using MVC Designed mailing application to send notifications to the Oracle users for intimating to start the next workflow Designed and implemented AJAX server calls to dynamically retrieve shipping information Worked on Oracle in writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Involved in testing the application using JUnit Designed coded and tested business logic for software applications Environment Core Java JDK J2EE JSP MySQL Ant Build JDBC Struts HTML XML Java Script JUnit Ajax TDD Methodology Apache Tomcat Eclipse JavaUI Developer Prime soft Technologies Pvt Ltd May 2010 to September 2011 Electronic Medical Record EMR is a webbased java solution that capture data from different fields different forms to compile individual Health data that can be shared across different health care settings and different clinicians This individual data can be compiled to generate different types of reports that can help the organizations to grow their business rapidly Responsibilities Worked extensively with the backend which comprised of Spring Hibernate and JPA Used JSON and XML formats to transfer data from the server Implemented Web Services to handle data from third party interfaces used tool like axis 14 to create web services Developed AJAX based webbased UI framework Created simple user interface for applications configuration system using MVC design patterns and Swing framework Developed Servlets and JSP for performing CRUD operations on domain specific entities Developed Service Layer using POJOs and Spring IOC Developed Data Access Layer using Hibernate and DAO Design Pattern Involved in working with J2EE Design patterns Singleton Factory DAO and Business Delegate and Model View Controller Architecture with JSF and Spring IOC Used Apache POI API to generate excel document for data in each grid in the application Extensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references Involved in the development of the application based on backend Spring MVC architecture Utilized Spring MVC framework to implement design patterns like IOC Dependency Injection Spring DAO Data Transfer objects Business objects ORM Mappings Used the Spring DAO to handle exception for database transaction like open connections no result connection aborted closing the connections etc Utilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects Environment JSP Servlets Struts framework MVC Java Beans JDBC Tomcat Linux Oracle 10 g JavaScript HTML CSS JavaScript jQuery GIT JUnit Education Bachelors Skills AJAX 4 years Apache 6 years HTML5 4 years J2EE 7 years Java 8 years JavaScript 8 years jQuery 4 years JSP 5 years JUnit 6 years Maven 5 years Model View Controller 8 years MODELVIEWCONTROLLER 8 years MVC 8 years Oracle 7 years SQL 5 years testing 7 years Tomcat 6 years UI 5 years user interface 7 years Web Services 5 years CertificationsLicenses Drivers License",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Staples",
        "Framingham",
        "MA",
        "years",
        "software",
        "experience",
        "design",
        "development",
        "deployment",
        "ClientServer",
        "business",
        "applications",
        "JavaJ2EE",
        "technologies",
        "Experience",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Requirement",
        "Analysis",
        "Design",
        "Coding",
        "Testing",
        "Implementation",
        "AGILE",
        "SCRUM",
        "TDD",
        "Waterfall",
        "Models",
        "PLSQL",
        "Packages",
        "Procedures",
        "Functions",
        "end",
        "processes",
        "development",
        "Java",
        "PLSQL",
        "components",
        "exposure",
        "Microsoft",
        "Technologies",
        "ORACLE",
        "sqlSQL",
        "knowledge",
        "end",
        "technologies",
        "HTML4",
        "CSS3",
        "Android",
        "AJAX",
        "DOM",
        "TypeScript",
        "Bootstrap",
        "XHTML",
        "DHTMLJavaScript",
        "jQuery",
        "Tag",
        "JS",
        "Knowledge",
        "applications",
        "JavaJ2EE",
        "technologiesHibernateServlets",
        "JSPJSF",
        "AJAX",
        "JDBC",
        "JNDI",
        "GWT",
        "JavaBeans",
        "Swing",
        "Struts",
        "XML",
        "Web",
        "Services",
        "JMS",
        "business",
        "logic",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "hands",
        "Java",
        "concepts",
        "Lambda",
        "Functional",
        "Interfaces",
        "Filters",
        "Streams",
        "Experience",
        "database",
        "design",
        "development",
        "procedures",
        "packages",
        "databases",
        "Oracle",
        "g",
        "g",
        "SQL",
        "Server",
        "DB2",
        "MySQL",
        "hands",
        "experience",
        "designing",
        "NoSQL",
        "Databases",
        "MongoDB",
        "Apache",
        "Cassandra",
        "CouchDB",
        "Experience",
        "configuration",
        "deployment",
        "applications",
        "web",
        "servers",
        "Apache",
        "Tomcat",
        "WebSphere",
        "Apache",
        "Axis",
        "Apache",
        "HTTP",
        "Server",
        "WebLogic",
        "Experience",
        "AWS",
        "VPC",
        "EC2",
        "ELB",
        "SQ3",
        "EBS",
        "ROUTE",
        "Dynamo",
        "DB",
        "CLI",
        "SDKsAPI",
        "tools",
        "knowledge",
        "AWS",
        "tools",
        "S3",
        "Lambda",
        "Kinesis",
        "Cloud",
        "Watch",
        "SQS",
        "Expertise",
        "WBI",
        "Adapters",
        "Jtext",
        "JDBC",
        "HTTP",
        "Webservices",
        "MQand",
        "JMS",
        "ETL",
        "packages",
        "file",
        "loading",
        "error",
        "capturing",
        "log",
        "tables",
        "Experience",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "STS",
        "Spring",
        "Tool",
        "Suite",
        "Visual",
        "Studio",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Dream",
        "Viewer",
        "Experience",
        "Java",
        "EE",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Factory",
        "DAO",
        "DTO",
        "Business",
        "Delegate",
        "development",
        "MultiTier",
        "Enterprise",
        "Applications",
        "Experience",
        "code",
        "repository",
        "tools",
        "Tortoise",
        "SVN",
        "CVS",
        "GitHub",
        "Visual",
        "Source",
        "Safe",
        "Experience",
        "project",
        "buildtestdeployment",
        "tools",
        "Maven",
        "Ant",
        "Worked",
        "Log4j",
        "JUnit",
        "Mockito",
        "unit",
        "testing",
        "integration",
        "testing",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Staples",
        "Framingham",
        "MA",
        "August",
        "Present",
        "Shared",
        "Order",
        "Management",
        "system",
        "Application",
        "process",
        "Staples",
        "vendor",
        "orders",
        "application",
        "lot",
        "APIs",
        "steps",
        "authorization",
        "customer",
        "order",
        "price",
        "payments",
        "shipping",
        "life",
        "cycle",
        "order",
        "Responsibilities",
        "development",
        "testing",
        "Streamlets",
        "module",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "methodology",
        "Scrum",
        "Cycle",
        "model",
        "JIRAand",
        "Confluence",
        "user",
        "stories",
        "PLSQL",
        "Packages",
        "Procedures",
        "Functions",
        "end",
        "processes",
        "Java8",
        "features",
        "Lambda",
        "expressions",
        "Streams",
        "filters",
        "Optional",
        "Interfaces",
        "Developed",
        "UIweb",
        "pages",
        "HTML5",
        "CSS3",
        "jQuery",
        "data",
        "client",
        "side",
        "Oracle",
        "PLSQL",
        "developer",
        "ETL",
        "scripts",
        "application",
        "Grunt",
        "Bower",
        "AngularUI",
        "component",
        "model",
        "project",
        "Angular",
        "performance",
        "benefits",
        "J2EE",
        "design",
        "patterns",
        "Adapter",
        "Service",
        "locator",
        "Session",
        "facade",
        "Singleton",
        "Factory",
        "DAO",
        "classes",
        "Core",
        "javaExecutor",
        "concurrency",
        "memory",
        "management",
        "UI",
        "pages",
        "Rest",
        "APIs",
        "Created",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "API",
        "Consumed",
        "REST",
        "Web",
        "Services",
        "credit",
        "card",
        "information",
        "party",
        "application",
        "EME",
        "Developed",
        "Restful",
        "Web",
        "services",
        "systems",
        "system",
        "service",
        "Spring",
        "Security",
        "Oauth20",
        "Added",
        "WSSecurity",
        "XWSS",
        "Web",
        "services",
        "business",
        "modules",
        "integration",
        "Springand",
        "Hibernate",
        "data",
        "mapping",
        "Hibernate",
        "Template",
        "extent",
        "use",
        "HQL",
        "Parameters",
        "Queries",
        "interfaces",
        "Expression",
        "Query",
        "Criteria",
        "Performed",
        "Hibernate",
        "framework",
        "optimization",
        "Projection",
        "Criteria",
        "object",
        "columns",
        "data",
        "dashboards",
        "Project",
        "manager",
        "development",
        "testing",
        "andproduction",
        "team",
        "project",
        "deliverables",
        "dates",
        "issuesconcerns",
        "NodeJS",
        "Grunt",
        "Tasks",
        "project",
        "business",
        "logic",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "Developed",
        "Session",
        "Beans",
        "Transactions",
        "data",
        "customer",
        "information",
        "Spring",
        "core",
        "AOP",
        "security",
        "business",
        "operations",
        "support",
        "SpringCloud",
        "Config",
        "Server",
        "Routing",
        "Filtering",
        "Microservices",
        "Netflix",
        "Zuul",
        "Spring",
        "Batch",
        "Spring",
        "IOC",
        "dependencies",
        "batch",
        "processing",
        "unit",
        "integration",
        "tests",
        "microservices",
        "JUnit",
        "Mockito",
        "database",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Packages",
        "Triggers",
        "Wrote",
        "SQL",
        "procedures",
        "performance",
        "explain",
        "plans",
        "extraction",
        "transformation",
        "job",
        "load",
        "ETL",
        "processes",
        "performance",
        "Informaticasession",
        "data",
        "files",
        "block",
        "size",
        "data",
        "cache",
        "size",
        "sequence",
        "length",
        "target",
        "commit",
        "interval",
        "Performed",
        "cross",
        "browser",
        "testing",
        "Selenium",
        "Grid",
        "browsers",
        "platforms",
        "aspects",
        "JUnit",
        "FIT",
        "SITEnd",
        "RegressionUser",
        "acceptance",
        "Performance",
        "Git",
        "Version",
        "Control",
        "System",
        "application",
        "JMeter",
        "performance",
        "SOAP",
        "protocol",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "AWS",
        "Security",
        "groups",
        "firewalls",
        "traffic",
        "AWS",
        "EC2",
        "instances",
        "documentation",
        "HADOOP",
        "Clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "integration",
        "Spring",
        "boot",
        "Experience",
        "AzureMonitoring",
        "Data",
        "Factory",
        "Traffic",
        "Manager",
        "Service",
        "Bus",
        "Key",
        "Vault",
        "Hands",
        "experience",
        "Microsoft",
        "Azure",
        "Cloudservices",
        "Storage",
        "Accounts",
        "Virtual",
        "Networks",
        "Environment",
        "Java",
        "J2EE",
        "Git",
        "PLSQLSpring",
        "Boot",
        "Hibernate",
        "4x",
        "Core",
        "Java",
        "SOAPRest",
        "Web",
        "Services",
        "CSS",
        "Angular",
        "4IBM",
        "WebSphere",
        "Application",
        "Server",
        "RAD",
        "DB2",
        "VisualizerHadoop",
        "Scala",
        "Spark",
        "Eclipse",
        "RCP",
        "SASS",
        "WSDL",
        "JIRA",
        "JMS",
        "NOSQLMongoDB",
        "ETL",
        "Grunt",
        "J",
        "AWS",
        "Microsoft",
        "AzureRecently",
        "Spring",
        "Cloud",
        "batch",
        "Apache",
        "JMeter",
        "jQuery",
        "JUnit",
        "Maven",
        "Jenkins",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Protective",
        "Life",
        "Insurance",
        "Birmingham",
        "AL",
        "July",
        "August",
        "Life",
        "Insurance",
        "Application",
        "customers",
        "account",
        "application",
        "employers",
        "customer",
        "information",
        "claims",
        "customers",
        "quotes",
        "customers",
        "type",
        "insurance",
        "package",
        "customers",
        "premiums",
        "Responsibilities",
        "stages",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Implementation",
        "Agile",
        "Methodology",
        "presentation",
        "layers",
        "HTML5",
        "CSS3",
        "Angular2",
        "page",
        "application",
        "status",
        "modals",
        "Angular",
        "HTML",
        "elements",
        "user",
        "validations",
        "client",
        "side",
        "UI",
        "components",
        "Injection",
        "Models",
        "data",
        "controllers",
        "Java8",
        "features",
        "Lambda",
        "expressions",
        "Streams",
        "classes",
        "default",
        "methods",
        "Executor",
        "Service",
        "Interfaces",
        "ThreadPoolExecutor",
        "class",
        "thread",
        "resource",
        "pooling",
        "Spring",
        "MVC",
        "Transaction",
        "Management",
        "SpringHibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "Spring",
        "Boot",
        "components",
        "business",
        "layer",
        "navigation",
        "part",
        "application",
        "SAAS",
        "contract",
        "negotiations",
        "ROI",
        "C",
        "Level",
        "Executives",
        "Application",
        "design",
        "patternsSingleton",
        "Factory",
        "DAO",
        "DTO",
        "prototype",
        "Composite",
        "View",
        "Microservices",
        "architecture",
        "Netflix",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "Bootto",
        "load",
        "calls",
        "Microservicesfor",
        "application",
        "chunks",
        "Spring",
        "Hystrix",
        "circuit",
        "breaker",
        "failsafe",
        "service",
        "APIs",
        "end",
        "points",
        "microservice",
        "architecture",
        "Developed",
        "Mongo",
        "DB",
        "Data",
        "Access",
        "Layer",
        "Mongo",
        "Repository",
        "interface",
        "Spring",
        "Data",
        "queue",
        "MongoDB",
        "Kafka",
        "Zookeeper",
        "SQL",
        "queries",
        "PL",
        "SQL",
        "Procedures",
        "Oracle",
        "DB",
        "application",
        "Designing",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "Systems",
        "Infrastructure",
        "Linux",
        "OSAWS",
        "EC2",
        "clusters",
        "AWSEC2",
        "servers",
        "YAML",
        "Script",
        "playbook",
        "DevOps",
        "methodologies",
        "CICD",
        "Pipelines",
        "tool",
        "sets",
        "GIT",
        "Jenkins",
        "AWS",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "Lambda",
        "functions",
        "data",
        "extraction",
        "transformation",
        "loading",
        "source",
        "system",
        "Informaticapower",
        "center",
        "API",
        "Management",
        "product",
        "APIGEE",
        "APIs",
        "customer",
        "use",
        "cases",
        "UNIX",
        "Shellscripts",
        "Bash",
        "shell",
        "deployments",
        "environment",
        "configurations",
        "EC2",
        "Clusters",
        "Developed",
        "ApacheSpark",
        "jobs",
        "Java",
        "test",
        "environment",
        "data",
        "processing",
        "SparkSQL",
        "Automation",
        "Testing",
        "Framework",
        "Java",
        "Selenium",
        "Web",
        "Driver",
        "TestNG",
        "Environment",
        "HTML",
        "CSS",
        "JavaScript",
        "Angular2",
        "Nodejs",
        "JavaJ2EE",
        "Spring",
        "MVC",
        "Restful",
        "Webservices",
        "Microservices",
        "IBM",
        "BPMNetflix",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "BootSAAS",
        "Spring",
        "Hystrix",
        "AWS",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "PL",
        "SQL",
        "Oracle",
        "Ansible",
        "Kafka",
        "Zookeeper",
        "Kubernetes",
        "GIT",
        "Jenkins",
        "ChefLinux",
        "OSSelenium",
        "TestNG",
        "APIGEE",
        "Design",
        "Patterns",
        "log4j",
        "Agile",
        "Methodology",
        "Maven",
        "Spark",
        "Java",
        "Developer",
        "Woodforest",
        "National",
        "Bank",
        "Chicago",
        "IL",
        "February",
        "June",
        "planner",
        "advisors",
        "customers",
        "Retirement",
        "Insurance",
        "Education",
        "Tax",
        "Estate",
        "Mortgage",
        "planning",
        "benefits",
        "period",
        "projection",
        "end",
        "period",
        "customers",
        "insurance",
        "claims",
        "purchase",
        "insurance",
        "payment",
        "system",
        "insurance",
        "premiums",
        "Retirement",
        "plans",
        "system",
        "system",
        "facility",
        "insurance",
        "investment",
        "plans",
        "quotes",
        "information",
        "customer",
        "Responsibilities",
        "methodology",
        "design",
        "code",
        "reviews",
        "Requirement",
        "Analysis",
        "development",
        "testing",
        "application",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Bootstrap",
        "Enhance",
        "presentation",
        "layer",
        "GUI",
        "framework",
        "JSP",
        "validations",
        "JavaScript",
        "Spring",
        "MVC",
        "controllers",
        "Spring",
        "MVC",
        "annotations",
        "configuration",
        "files",
        "spring",
        "framework",
        "Bean",
        "Factory",
        "Application",
        "Context",
        "bean",
        "initialization",
        "configurations",
        "Spring",
        "AOP",
        "auditing",
        "security",
        "transaction",
        "management",
        "business",
        "logic",
        "concerns",
        "functionality",
        "modules",
        "Singleton",
        "Session",
        "Facade",
        "design",
        "patterns",
        "Hibernate",
        "ORM",
        "tool",
        "database",
        "development",
        "POJO",
        "classes",
        "Hibernate",
        "query",
        "messaging",
        "JMS",
        "Queue",
        "point",
        "Developed",
        "REST",
        "web",
        "services",
        "SpringMVC",
        "client",
        "data",
        "database",
        "SOAP",
        "UI",
        "RESTFUL",
        "API",
        "web",
        "services",
        "Service",
        "Oriented",
        "Architecture",
        "RESTFULservices",
        "JAXRS",
        "Java",
        "Classes",
        "JAXP",
        "parser",
        "Java",
        "objects",
        "data",
        "response",
        "DB2",
        "Wrote",
        "SQL",
        "Queries",
        "Procedures",
        "triggers",
        "SQL",
        "Queries",
        "DAO",
        "application",
        "ApacheTomcat",
        "Application",
        "Server",
        "Log4j",
        "logging",
        "mechanism",
        "SVN",
        "access",
        "project",
        "files",
        "spring",
        "framework",
        "artifacts",
        "code",
        "build",
        "deployment",
        "Maven",
        "JIRA",
        "defect",
        "tracking",
        "Jenkins",
        "deployment",
        "regression",
        "test",
        "cases",
        "Selenium",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Hibernate",
        "HTML",
        "CSS",
        "JavaScript",
        "React",
        "JS",
        "JMS",
        "SOAP",
        "Axis2",
        "Maven",
        "Jenkins",
        "DB2",
        "Selenium",
        "Log4j",
        "SVN",
        "JIRA",
        "Tomcat",
        "JavaJ2EE",
        "Developer",
        "People",
        "Tech",
        "Group",
        "February",
        "January",
        "Hospital",
        "Management",
        "System",
        "specialty",
        "hospital",
        "package",
        "activities",
        "servicing",
        "system",
        "package",
        "modules",
        "Administration",
        "Patient",
        "Care",
        "System",
        "Health",
        "Services",
        "Auxiliary",
        "Services",
        "module",
        "sub",
        "modules",
        "sub",
        "modules",
        "details",
        "details",
        "day",
        "activities",
        "database",
        "Responsibilities",
        "phases",
        "project",
        "design",
        "development",
        "testing",
        "enhancements",
        "production",
        "support",
        "Multithreading",
        "application",
        "performance",
        "Strutsframeworks",
        "MVC",
        "design",
        "patterns",
        "projects",
        "areas",
        "development",
        "user",
        "interface",
        "design",
        "batch",
        "processing",
        "procedure",
        "development",
        "XML",
        "data",
        "exchange",
        "integration",
        "SOAP",
        "web",
        "services",
        "Apache",
        "web",
        "services",
        "Spring",
        "framework",
        "application",
        "Java",
        "andJ2EE",
        "Design",
        "patterns",
        "design",
        "patterns",
        "Singleton",
        "Business",
        "Delegate",
        "Faade",
        "MVC",
        "Data",
        "Access",
        "Object",
        "DAO",
        "UI",
        "spring",
        "view",
        "component",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "UI",
        "JSP",
        "MVC",
        "architecture",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "application",
        "components",
        "messages",
        "Spring",
        "MVC",
        "annotations",
        "XML",
        "configuration",
        "Dependency",
        "Injection",
        "Wrote",
        "SQL",
        "procedures",
        "modifications",
        "database",
        "structure",
        "addition",
        "Controller",
        "Servlets",
        "Action",
        "Form",
        "process",
        "Oracle",
        "database",
        "data",
        "formats",
        "database",
        "SQL",
        "HQL",
        "DAO",
        "layer",
        "Developed",
        "Unit",
        "test",
        "cases",
        "Junit",
        "scripts",
        "builds",
        "Apache",
        "ANT",
        "design",
        "documents",
        "use",
        "case",
        "diagram",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "Rational",
        "Rose",
        "Clear",
        "Case",
        "source",
        "code",
        "maintenance",
        "documentation",
        "Microservices",
        "Applications",
        "Change",
        "Management",
        "process",
        "Web",
        "Logic",
        "Server",
        "HTTP",
        "RequestResponse",
        "Session",
        "Tracking",
        "JSP",
        "Maven",
        "compilation",
        "JAR",
        "WAR",
        "EAR",
        "files",
        "Jenkins",
        "integration",
        "tool",
        "application",
        "building",
        "testing",
        "Coordinate",
        "QA",
        "lead",
        "development",
        "test",
        "plan",
        "test",
        "cases",
        "code",
        "testing",
        "defects",
        "allocation",
        "defects",
        "part",
        "production",
        "support",
        "team",
        "production",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "MVC",
        "Design",
        "Patterns",
        "Spring",
        "MVC",
        "SOAP",
        "Web",
        "Services",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "SQL",
        "Web",
        "Logic",
        "XML",
        "JMS",
        "Apache",
        "ANT",
        "Rational",
        "Rose",
        "Junit",
        "Jenkins",
        "Maven",
        "Microservices",
        "Med",
        "Host",
        "Financial",
        "Franklin",
        "TN",
        "October",
        "January",
        "Java",
        "Developer",
        "MEDHOST",
        "enterprise",
        "health",
        "IT",
        "solutions",
        "hospitals",
        "Med",
        "host",
        "department",
        "account",
        "payments",
        "credit",
        "card",
        "processing",
        "ledger",
        "materials",
        "management",
        "online",
        "bill",
        "payments",
        "statements",
        "claims",
        "remittance",
        "Responsibilities",
        "methodology",
        "design",
        "code",
        "reviews",
        "web",
        "applications",
        "project",
        "applications",
        "Bootstrap",
        "Grids",
        "Toolbars",
        "Panels",
        "ComboBox",
        "Button",
        "Enhanced",
        "user",
        "experience",
        "web",
        "features",
        "page",
        "applications",
        "AngularJS",
        "Responsive",
        "Web",
        "Design",
        "technology",
        "framework",
        "Bootstrap",
        "Ehcache",
        "performance",
        "application",
        "development",
        "Business",
        "logic",
        "core",
        "Java",
        "SQL",
        "jobs",
        "feeds",
        "Borg",
        "Spring",
        "AOP",
        "performance",
        "statistics",
        "business",
        "logic",
        "DAO",
        "layer",
        "methods",
        "user",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "MEAN",
        "Express",
        "Angular",
        "Node",
        "stack",
        "prototyping",
        "applications",
        "client",
        "demonstrations",
        "objects",
        "Database",
        "OFFLINE",
        "string",
        "Google",
        "Protocol",
        "Buffer",
        "data",
        "structure",
        "Single",
        "Sign",
        "site",
        "B2B",
        "B2C",
        "sites",
        "Stubby",
        "server",
        "communication",
        "creation",
        "spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "design",
        "pattern",
        "spring",
        "actions",
        "beans",
        "dependencies",
        "spring",
        "context",
        "file",
        "tire",
        "spring",
        "web",
        "layer",
        "standards",
        "code",
        "code",
        "review",
        "bugs",
        "services",
        "entities",
        "services",
        "APIs",
        "JAXRS",
        "application",
        "layer",
        "POJO",
        "classes",
        "Oracle",
        "database",
        "tables",
        "Hibernate",
        "framework",
        "SQL",
        "PLSQL",
        "Analyse",
        "code",
        "fix",
        "solution",
        "issues",
        "severity",
        "basis",
        "queries",
        "application",
        "development",
        "logics",
        "test",
        "classes",
        "Junit",
        "unit",
        "testing",
        "Batch",
        "Jobs",
        "spring",
        "Batch",
        "SVN",
        "Version",
        "Control",
        "Environment",
        "Java",
        "Bootstrap",
        "jQuery",
        "HTML",
        "CSS",
        "Struts",
        "Spring",
        "POJO",
        "Eclipse",
        "IntelliJ",
        "Sub",
        "lime",
        "Spring",
        "MVC",
        "Maven",
        "SVN",
        "AJAX",
        "Apache",
        "Tomcat",
        "Server",
        "Log4j",
        "Restful",
        "web",
        "services",
        "WebSphere",
        "Application",
        "Server",
        "Spring",
        "Oracle",
        "Jboss",
        "JIRA",
        "Jenkins",
        "AgileScrum",
        "JavaJ2EE",
        "Developer",
        "Tavant",
        "Technologies",
        "October",
        "August",
        "Tavant",
        "Technologies",
        "IT",
        "solutions",
        "services",
        "provider",
        "solutions",
        "game",
        "results",
        "customers",
        "industry",
        "experience",
        "cuttingedge",
        "technologies",
        "enterprise",
        "software",
        "business",
        "processes",
        "legacy",
        "systems",
        "Application",
        "Development",
        "Maintenance",
        "Services",
        "ADM",
        "Services",
        "impact",
        "businesses",
        "world",
        "Responsibilities",
        "phases",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirement",
        "Collection",
        "Design",
        "analysis",
        "customer",
        "specifications",
        "application",
        "TDD",
        "Methodology",
        "struts",
        "framework",
        "MVC",
        "design",
        "pattern",
        "controller",
        "pattern",
        "user",
        "interface",
        "web",
        "pages",
        "component",
        "Struts",
        "web",
        "MVC",
        "Action",
        "Servlet",
        "controller",
        "application",
        "Action",
        "Class",
        "components",
        "business",
        "process",
        "execution",
        "configuration",
        "struts",
        "configuration",
        "xml",
        "file",
        "SCM",
        "JSPHTML",
        "user",
        "interface",
        "JavaScript",
        "Servlets",
        "validations",
        "controllers",
        "business",
        "logic",
        "JDBC",
        "XML",
        "techniques",
        "MVC",
        "mailing",
        "application",
        "notifications",
        "Oracle",
        "users",
        "workflow",
        "AJAX",
        "server",
        "calls",
        "shipping",
        "information",
        "Oracle",
        "queries",
        "business",
        "logic",
        "layer",
        "SCM",
        "packages",
        "customization",
        "application",
        "JUnit",
        "business",
        "logic",
        "software",
        "applications",
        "Environment",
        "Core",
        "Java",
        "JDK",
        "J2EE",
        "JSP",
        "MySQL",
        "Ant",
        "Build",
        "JDBC",
        "Struts",
        "HTML",
        "XML",
        "Java",
        "Script",
        "JUnit",
        "Ajax",
        "TDD",
        "Methodology",
        "Apache",
        "Tomcat",
        "Eclipse",
        "JavaUI",
        "Developer",
        "Prime",
        "Technologies",
        "Pvt",
        "Ltd",
        "May",
        "September",
        "Electronic",
        "Medical",
        "Record",
        "EMR",
        "solution",
        "data",
        "fields",
        "forms",
        "Health",
        "data",
        "health",
        "care",
        "settings",
        "clinicians",
        "data",
        "types",
        "reports",
        "organizations",
        "business",
        "Responsibilities",
        "backend",
        "Spring",
        "Hibernate",
        "JPA",
        "JSON",
        "XML",
        "formats",
        "data",
        "server",
        "Web",
        "Services",
        "data",
        "party",
        "interfaces",
        "tool",
        "axis",
        "web",
        "services",
        "AJAX",
        "UI",
        "framework",
        "user",
        "interface",
        "applications",
        "configuration",
        "system",
        "MVC",
        "design",
        "patterns",
        "Swing",
        "framework",
        "Developed",
        "Servlets",
        "JSP",
        "CRUD",
        "operations",
        "domain",
        "entities",
        "Developed",
        "Service",
        "Layer",
        "POJOs",
        "Spring",
        "IOC",
        "Developed",
        "Data",
        "Access",
        "Layer",
        "Hibernate",
        "DAO",
        "Design",
        "Pattern",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Factory",
        "DAO",
        "Business",
        "Delegate",
        "Model",
        "View",
        "Controller",
        "Architecture",
        "JSF",
        "Spring",
        "IOC",
        "Apache",
        "POI",
        "API",
        "document",
        "data",
        "grid",
        "application",
        "Spring",
        "IOC",
        "model",
        "objects",
        "selection",
        "components",
        "setter",
        "injection",
        "Interface",
        "injection",
        "references",
        "development",
        "application",
        "Spring",
        "MVC",
        "architecture",
        "Spring",
        "MVC",
        "framework",
        "design",
        "patterns",
        "IOC",
        "Dependency",
        "Injection",
        "Spring",
        "DAO",
        "Data",
        "Transfer",
        "Business",
        "ORM",
        "Mappings",
        "Spring",
        "DAO",
        "exception",
        "database",
        "transaction",
        "connections",
        "result",
        "connection",
        "connections",
        "concept",
        "Lazy",
        "initialization",
        "Eager",
        "fetch",
        "requirements",
        "performance",
        "session",
        "objects",
        "Environment",
        "JSP",
        "Servlets",
        "Struts",
        "framework",
        "MVC",
        "Java",
        "Beans",
        "JDBC",
        "Tomcat",
        "Linux",
        "Oracle",
        "g",
        "JavaScript",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "GIT",
        "JUnit",
        "Education",
        "Bachelors",
        "Skills",
        "AJAX",
        "years",
        "Apache",
        "years",
        "HTML5",
        "years",
        "J2EE",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "jQuery",
        "years",
        "JSP",
        "years",
        "JUnit",
        "years",
        "Maven",
        "years",
        "Model",
        "View",
        "Controller",
        "years",
        "MODELVIEWCONTROLLER",
        "years",
        "MVC",
        "years",
        "Oracle",
        "years",
        "SQL",
        "years",
        "years",
        "Tomcat",
        "years",
        "UI",
        "years",
        "user",
        "interface",
        "years",
        "Web",
        "Services",
        "years",
        "CertificationsLicenses",
        "Drivers",
        "License"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:13:56.783487",
    "resume_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Staples Framingham MA Over 9 years of strong software experience in design development and deployment of webbased ClientServer business applications using JavaJ2EE technologies Experience working with different SDLC Software Development Life Cycle including Requirement gathering Analysis Design Coding Testing and Implementation like AGILE SCRUM TDD and Waterfall Models Worked with PLSQL Packages Procedures and Functions for back end processes Involved in development in Java and PLSQL components Excellent exposure to Microsoft Technologies ORACLE 9i sqlSQL Having good knowledge in front end technologies like HTML4 CSS3 Android AJAX JSON DOM TypeScript Bootstrap XHTML DHTMLJavaScript jQuery Tag librariesAngular JS 24 Knowledge in developing applications using JavaJ2EE technologiesHibernateServlets JSPJSF AJAX JDBC JNDI GWT JavaBeans EJBsJSTL Swing Struts XML Web Services JMS Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Good hands on Java 8 concepts like Lambda Functional Interfaces Filters and Streams Experience in database design and development of PLSQL stored procedures and packages in relational databases like Oracle 9i 10g 11g SQL Server 20052008 DB2 MySQL and good hands on experience in implementing designing and developing NoSQL Databases like MongoDB Apache Cassandra and CouchDB Experience in configuration and deployment of multitier applications using different web servers like Apache Tomcat WebSphere Apache Axis Apache HTTP Server and WebLogic Experience on AWS platforms VPC EC2 ELB SQ3 and EBS ROUTE 53 Dynamo DB CLI and SDKsAPI tools and good knowledge on AWS tools like S3 Lambda Kinesis Cloud Watch SQS Expertise in configuring WBI Adapters such as Jtext JDBC HTTP Webservices MQand JMS Used PLSQL and SQLLoader to create ETL packages for flat file loading and error capturing into log tables Experience in working with different IDEs like Eclipse NetBeans IntelliJ STS Spring Tool Suite Visual Studio Rational Application Developer RAD Dream Viewer Experience in implementing and deploying Java EE design patterns such as MVC Singleton Factory DAO DTO and Business Delegate in the development of MultiTier distributed Enterprise Applications Experience in using code repository tools Tortoise SVN CVS GitHub and Visual Source Safe Experience with project buildtestdeployment tools like Maven and Ant Worked with Log4j for logging and used JUnit and Mockito for unit testing and integration testing Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Staples Framingham MA August 2018 to Present The SOMS Shared Order Management system Application enables the backend process of Staples online and vendor orders This is a centralized application which interacts with lot of other APIs and helps in managing different intermediate steps like authorization of the customer order price payments sourcing and shipping involved during the life cycle of an order Responsibilities Involved in development and testing of Streamlets module Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model and worked on JIRAand Confluence to access the user stories Worked with PLSQL Packages Procedures and Functions for back end processes Implemented Java8 features like Lambda expressions Streams filters pipelines Optional Interfaces etc Developed UIweb pages using HTML5 CSS3 and jQuery to display the data on the client side Oracle PLSQL developer responsible for writing ETL scripts Created the AngularJS application using Grunt and Bower and used AngularUI for component model Updated the project midway to Angular 4 for its performance benefits Used J2EE design patterns like Adapter Service locator Session facade Singleton Factory and DAO Developed classes using Core javaExecutor Servicemultithreading concurrency memory management Involved in developing UI pages using AngularJS and calling the Rest APIs from backend Created Spring Boot with Micro Services utilizing RESTful API Consumed REST Web Services for getting the credit card information from third party application using EME Developed Restful Web services for other systems to interact with our system and secured the service with Spring Security Oauth20 Added WSSecurity using XWSS to secure the Web services Implemented the associated business modules integration using Springand Hibernate data mapping Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query Criteria Performed Hibernate framework optimization using Projection in Criteria object to query minimum columns to display data on dashboards Worked closely with Project manager development testing andproduction team to align project deliverables dates and report issuesconcerns Used NodeJS to run Grunt Tasks and build properly the project Involved in implementing business logic with Oraclestored procedures functions and triggers using PLSQL Developed Session Beans for necessary Transactions like fetching the data and updating the customer information Utilized Spring core AOP and security to build robust business operations with transactional support Implemented SpringCloud Config Server Routing and Filtering to Microservices using Netflix Zuul Extensively used Spring Batch which uses Spring IOC dependencies this is useful for developing batch processing Developed unit and integration tests for existing microservices using JUnit Mockito environments Developed database objectsStored Procedures Tables Views Sequences Cursors Packages and Triggers Wrote SQL queries using PLSQL stored procedures and enhanced performance by running explain plans Developed and tested extraction transformation job and load ETL processes Tuned performance of Informaticasession for large data files by increasing block size data cache size sequence buffer length and target based commit interval Performed cross browser testing by using Selenium Grid on multiple browsers and on different platforms Oversaw all aspects of testing JUnit FIT and SITEnd to End RegressionUser acceptance and Performance Used Git as Version Control System for the application Used JMeter to test performance of SOAP protocol Developed API for using AWS Lambda to manage the servers and run the code in the AWS Created detailed AWS Security groups which behaved as virtual firewalls that controlled the traffic allowed reaching one or more AWS EC2 instances Created and maintained documentation for launching HADOOP Clusters and executing Hive queries Pig Scripts Worked on creation of custom Docker container images tagging pushing images integration of Spring boot Experience of working with AzureMonitoring Data Factory Traffic Manager Service Bus Key Vault Hands on experience with Microsoft Azure Cloudservices Storage Accounts and Virtual Networks Environment Java 1718 J2EE Git PLSQLSpring Boot Hibernate 4x Core Java SOAPRest Web Services CSS Angular 4IBM WebSphere Application Server 8X6XStruts2 RAD DB2 VisualizerHadoop Scala Spark Eclipse RCP SASS WSDL JIRA 56x JMS NOSQLMongoDB ETL Grunt J AWS Microsoft AzureRecently Spring Cloud SAAS1Spring batch Apache JMeter jQuery JUnit Maven Jenkins Sr JavaJ2EE Full Stack Developer Protective Life Insurance Birmingham AL July 2017 to August 2018 The Life Insurance Application allows customers to access their account online This application provides employers to access customer information to process and authorize claims of the customers and generates free quotes for the customers depending on the type of insurance package they selected It also facilitates customers to pay their monthly premiums Responsibilities Involved in all stages of SDLC like Requirement Analysis Design and Implementation in Agile Methodology Developed presentation layers using HTML5 CSS3 and Angular2 router to build single page application to navigate through the different status and multiple modals Used Angular 2 to associate HTML elements to model to provide dynamic user validations on client side Worked on UI components using Angular2Dependency Injection Models data binding and controllers Worked on Java8 features like Lambda expressions Streams filters optional classes and default methods Used Executor Service Interfaces ThreadPoolExecutor class for multithreading thread resource pooling Worked on Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache Spring Boot components to implement business layer and navigation part of application Demonstrated our SAAS engaged in contract negotiations and presented ROI to C Level Executives Developed the Application using design patternsSingleton Factory DAO DTO prototype and Composite View Implemented Microservices architecture with Netflix Spring Eureka Spring Ribbon using Spring Bootto provide clientside load balancing in calls to another Microservicesfor making application in to smaller chunks and also the Spring Hystrix as circuit breaker and for the failsafe Involved in developing Restful service APIs end points in microservice architecture Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Implemented a distributed messaging queue to integrate with MongoDB using Kafka and Zookeeper Developed various SQL queries and PL SQL Procedures in Oracle DB for the application Involved in Designing and deploying AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Supporting Systems Infrastructure comprised of Linux OSAWS EC2 clusters Worked on instantiating multiple AWSEC2 servers by using YAML Script in Ansible playbook Experienced DevOps methodologies by implementing CICD Pipelines using tool sets like GIT Jenkins and AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Extensively worked in data extraction transformation and loading from source to target system using Informaticapower center Worked with API Management product of APIGEE in consuming the APIs in implementing customer use cases UNIX Shellscripts for Bash shell to automate deployments and environment configurations on the EC2 Clusters Developed ApacheSpark jobs using Java in test environment for faster data processing and used SparkSQL Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Environment HTML CSS JavaScript Angular2 Nodejs Java8 JavaJ2EE Spring MVC Restful Webservices Microservices IBM BPMNetflix Spring Eureka Spring Ribbon Spring BootSAAS Spring Hystrix AWS EC2 S3 RDS EBS Elastic Load Balancer PL SQL Oracle Ansible Kafka Zookeeper Kubernetes GIT Jenkins ChefLinux OSSelenium TestNG APIGEE MongoDB Design Patterns log4j Agile Methodology Maven Spark Java Developer Woodforest National Bank Chicago IL February 2016 to June 2017 Financial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning We give the monetary benefits at each period and projection till the end of period We also help the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Implemented Spring MVC controllers configured using Spring MVC annotations and configuration files Implemented spring framework Bean Factory Application Context for bean initialization and configurations Spring AOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Used Hibernate as an ORM tool to interact with the database Involved in development of POJO classes and writing Hibernate query languageHQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using SpringMVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture by developing and consuming RESTFULservices based on JAXRS Implemented Java Classes to use JAXP parser to create Java objects able to modify the data received in the response Worked with DB2 and Wrote SQL Queries stored Procedures triggers and integrated SQL Queries into DAO Deployed the application on ApacheTomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artifacts and code build deployment with Maven Used JIRA for defect and issue tracking and Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Environment Java 6 J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 JavaJ2EE Developer People Tech Group February 2015 to January 2016 This is a comprehensive and integrated Hospital Management System for a super specialty hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Participated in all phases of the project like design development testing enhancements and production support We used Multithreading in this application to improve the performance Used Strutsframeworks and MVC design patterns to complete several projects on complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Developed SOAP web services using Apache web services and Spring framework Involved in designing and implementing the application using various Java andJ2EE Design patterns design patterns such as Singleton Business Delegate Faade MVC and Data Access Object DAO Developed UI using spring view component HTML CSS Java Script Designed and Developed UI using JSP by following MVC architecture The Java Message Service JMS API used to allow application components to create send receive and read messages Utilized Spring MVC annotations and XML configuration for Dependency Injection Wrote SQL queries stored procedures and modifications to existing database structure for addition features Controller Servlets Action Form objects for process of interacting with Oracle database and retrieving dynamic data Involved in writing all formats of database quires like SQL HQL in DAO layer Developed Unit test cases using Junit and Developed ant scripts and developed builds using Apache ANT Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose and Used Clear Case for source code maintenance Produced comprehensive documentation for Microservices and Applications supporting Change Management process Installed Web Logic Server for handling HTTP RequestResponse and controlled using Session Tracking in JSP Used Maven for compilation and building JAR WAR and EAR files Used Jenkins as a continuous integration tool for application building testing and deploying Coordinate with the QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and those defects are resolved Was part of production support team to resolve the production issues Environment Java 15 J2EE Struts 11 MVC Design Patterns Spring MVC SOAP Web Services JSP 12 HTML CSS JavaScript SQL Web Logic 70 XML JMS Apache ANT Rational Rose Junit Jenkins Maven Microservices Med Host Financial Franklin TN October 2013 to January 2015 Java Developer MEDHOST provides marketleading enterprise departmental and health IT engagement solutions to more than 1 000 hospitals Med host financial department provides account payments credit card processing general ledger materials management online bill payments patient statements electronic claims and electronic remittance Responsibilities Worked on Agile methodology including teambased design and code reviews Involved in the combining two web applications into one for a new project Developed applications using AngularJS Bootstrap like Grids Toolbars Panels ComboBox and Button etc Enhanced user experience by designing new web features and also single page applications using AngularJS Experienced in Responsive Web Design technology framework like Bootstrap Used Ehcache for caching and improved the performance of the application Responsible for development of Business logic in core Java Created SQL jobs to upload the feeds received from Borg Using Spring AOP to capture performance statistics of business logic and DAO layer methods Designed and Developed user interactive screens using HTML5 CSS3 JavaScript jQuery Extensively worked on MEAN MongoDB Express Angular and Node stack for rapid prototyping of applications for client demonstrations JSON objects have been created to store them in Database in OFFLINE mode Serialized string of a Google Protocol Buffer data structure Implemented Single Sign on emarketing commercial portal site with B2B and B2C sites Stubby server communication and creation Implemented spring MVC to achieve Model View Controller design pattern Configured spring to manage actions as beans and set their dependencies in a spring context file and integrated middle tire with spring web layer Implementing the coding standards review the code and fixing all the code review bugs Created all the services to work with various entities provided and rectified the services using APIs using JAXRS Created application layer POJO classes and mapped them to backend Oracle database tables using Hibernate framework Experienced in writing SQL and PLSQL scripts Analyse the code and apply the fix solution for the issues Identified based on the severity basis Developed queries that are required for the application development and implemented using different logics Developed test classes in Junit for implementing unit testing Batch Jobs have been developed using spring Batch Used SVN as the Version Control Environment Java Bootstrap AngularJS jQuery HTML CSS Struts Spring POJO Eclipse IntelliJ Sub lime Spring MVC Maven SVN AJAX Apache Tomcat Server Log4j Restful web services WebSphere Application Server Spring Oracle Jboss JIRA Jenkins AgileScrum JavaJ2EE Developer Tavant Technologies October 2011 to August 2013 Tavant Technologies is an IT solutions and services provider recognized globally for its innovative solutions They have been able to provide game changing results for customers by combining industry experience with cuttingedge technologies Developing enterprise software that automates primary business processes to maintaining or modernizing legacy systems our Application Development and Maintenance Services ADM Services have made a positive impact to businesses across the world Responsibilities Involved in all phases of the development life cycle SDLC involving in requirement Collection Design and analysis of the customer specifications of the application using TDD Methodology Implemented struts framework using MVC design pattern and front controller pattern Designed user interface by creating web pages for each component using Struts web MVC and Action Servlet as front controller in this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML for each user interface JavaScript Servlets standard validations are used as the controllers for business logic and using JDBC XML parsing techniques using MVC Designed mailing application to send notifications to the Oracle users for intimating to start the next workflow Designed and implemented AJAX server calls to dynamically retrieve shipping information Worked on Oracle in writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Involved in testing the application using JUnit Designed coded and tested business logic for software applications Environment Core Java JDK J2EE JSP MySQL Ant Build JDBC Struts HTML XML Java Script JUnit Ajax TDD Methodology Apache Tomcat Eclipse JavaUI Developer Prime soft Technologies Pvt Ltd May 2010 to September 2011 Electronic Medical Record EMR is a webbased java solution that capture data from different fields different forms to compile individual Health data that can be shared across different health care settings and different clinicians This individual data can be compiled to generate different types of reports that can help the organizations to grow their business rapidly Responsibilities Worked extensively with the backend which comprised of Spring Hibernate and JPA Used JSON and XML formats to transfer data from the server Implemented Web Services to handle data from third party interfaces used tool like axis 14 to create web services Developed AJAX based webbased UI framework Created simple user interface for applications configuration system using MVC design patterns and Swing framework Developed Servlets and JSP for performing CRUD operations on domain specific entities Developed Service Layer using POJOs and Spring IOC Developed Data Access Layer using Hibernate and DAO Design Pattern Involved in working with J2EE Design patterns Singleton Factory DAO and Business Delegate and Model View Controller Architecture with JSF and Spring IOC Used Apache POI API to generate excel document for data in each grid in the application Extensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references Involved in the development of the application based on backend Spring MVC architecture Utilized Spring MVC framework to implement design patterns like IOC Dependency Injection Spring DAO Data Transfer objects Business objects ORM Mappings Used the Spring DAO to handle exception for database transaction like open connections no result connection aborted closing the connections etc Utilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects Environment JSP Servlets Struts framework MVC Java Beans JDBC Tomcat Linux Oracle 10g JavaScript HTML CSS JavaScript jQuery GIT JUnit Education Bachelors Skills AJAX 4 years Apache 6 years HTML5 4 years J2EE 7 years Java 8 years JavaScript 8 years jQuery 4 years JSP 5 years JUnit 6 years Maven 5 years Model View Controller 8 years MODELVIEWCONTROLLER 8 years MVC 8 years Oracle 7 years SQL 5 years testing 7 years Tomcat 6 years UI 5 years user interface 7 years Web Services 5 years CertificationsLicenses Drivers License",
    "unique_id": "af72dea0-c6dc-4098-ba2c-bbd72da8319f"
}