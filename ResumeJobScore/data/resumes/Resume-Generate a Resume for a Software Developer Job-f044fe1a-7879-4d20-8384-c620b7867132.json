{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Boston Consulting Group Dallas TX Around 8 years of experience in the field of software development Proficient in developing applications using Python Java and C Experience in IT industry with proficiency in Analysis Design Development and UnitTesting of Enterprise Applications and Database Development using Python Django Flask and SQL Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced in complete Agile Methodology for development Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience with Cloud Services like Heroku Google App Engine Microsoft Azure Amazon AWS EC2 S3 etc Good working experience in processing large datasets with Spark using Django and PySpark Used Ansible to document all infrastructures into version control Experience of using Python modules like Django NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Skilled in ObjectOriented Design and Programming using Python and C Experienced in using Python Django PHP C CSS HTML XHTML JavaScript AngularJS REACT and JSON for developing web applications Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript AngularJS and JSON Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Experienced with JSON based Restful web services and XML based SOAP web services Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Proficient in developing complex SQL Queries Stored Procedures Triggers Cursors Functions and Packages along with performing DDL and DML operations on the database Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and Postgre SQL database Experience Amazon SQS and Amazon Web Services like EC2 Redshift and S3 Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Experience in project deployment using Heroku Jenkins and Amazon Web Services AWS Worked on various Operating Systems like UNIX Linux Windows and Mac OS Experienced with version control systems like Git GitHub Bit Bucket and SVN in order to keep the versions and configurations of the code organized Experienced with Unit Testing System Integration Testing SIT and User Acceptance Testing UAT Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB and Django Experience in handling errorsexceptions and debugging issues in large scale applications Work Experience Sr Python Developer Boston Consulting Group Seattle WA January 2019 to Present Description FCA Car pricing is the application developed by BCG for FIAT Company to analyze the historical data and compute the price Tax Co2 emission logics models brands manufactures and to provide the scope of the market for their particular brand or product This Pricing Tools is developed with Python Flask various databases and cloud services etc FCA Car Pricing project is also implemented with Data Lake to archive the data for future analysis Responsibilities Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Used AWS EC2 LAMBDA S3 API GATEWAY and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and Transformed Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and used Python to interact database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Develop remote integration with third party platforms by using Restful web services and Successful implementation of PySpark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Flask framework Written backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in the Complete Agile Methodology to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Developed entire front end and back end modules using flask Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Flask MySQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Maven Jenkins NodeJS SQLAlchemy Psutil Server less Sr Python Developer HAVI Global Solutions Naperville IL February 2018 to January 2019 Description SEQUOIA is the Web Application developed by Havi Global Solution for one of their very very important customer MecD MecD is one of top most food industry in USA and it has it branches all over nationwide Sequoia is the application where it will help the user to perform many things like creating promotions for their product analyzing the sales data according to the region wise and session they create the promotions for a certain period of time for different locations This project is developed in Python Django Spark AngularJS NodeJS Postgres and Azure cloud services Responsibilities Developed API Using Django Rest Frame Work for Frontend and various Database Plugins for Postgres Designed Databases in MySQL Postgres Written code in python to handle the Request and response using REST frame work and Json data objects Worked with Flask and pandas to monitor migrate and develop table database and work with large data set files Implemented SQL scripts and quarries in Python code to handle User requests and work with the data in database Performed Unit testing and regression testing Worked with AZURE SERVICES in multiple areas API code to interact and trigger the functionality at particular points of code Developed Interacting UI with REACT and ANGUALR Used Azure Cloud for maintaining database code Used Azure machines to development the service in cloud Work with team of developers for the BACKEND and FROINTEND INTRIGRATION Manage the configurations of multiple servers using Ansible Created database using Postgres and wrote several queries to extract data from database Designed and Developed User Interface using frontend technologies like REACT Developed and tested many features in an agile environment using Python Django REACT Developed Job dashboard monitor UI using DjangoREACT Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services Implemented Restful Web Services for the data transportation between multiple systems Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Bit Bucket Developed Application logic using Python 27 and Django framework Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Environment Python 27 Django 18 Flask Oracle MySQL PostgreSQL Windows JavaScript AngularJS Bootstrap Git GitHub PySpark Linux Shell Scripting AWS Postgres Jenkins Pycharm Vs Code Sr Python Developer JPMC Wilmington DE January 2017 to February 2018 Responsibilities Performed Systems Analysis and detail application design Developed multiple Database Plugins for Cassandra MySQL Oracle Mssql Designed various Databases in MySQL Oracle Implemented threshold points to secure the code to crash free run environment Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Worked with AWS in different servers to implement and test the code and develop a database Used AWS EC2 REDSHIFT DEVBOX DBA and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and filtered Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and wrote several queries to extract data from database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack MongoDBAngularJS and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Involved in the Complete Software development life cycle SDLC to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Use JavaScript and Bootstrap for page usefulness popup screens Sale and discount tags for the products Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed python scripts in order to migrate information from Oracle to MongoDB Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Django 18 Flask Oracle MySQL PostgreSQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Mongo DB Maven Jenkins Python Developer Dexmedia Dallas TX May 2016 to December 2016 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib urllib2 for web crawling Designed and developed multithreaded C programs to process data into different Data Bases Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Involved in writing stored procedures using MySQL Worked on front end frame works like CSS Bootstrap for development of Web application Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Experience in writing playbooks for Ansible and deploying applications using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Private VPN using Ubuntu Python Django PostgreSQL Redis Bootstrap JQuery Mongo Fabric Git Tenjin Selenium Developed Job dashboard monitor UI using DjangoFlask Performed QA testing on the application Developed approaches for improving NLP pipeline Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Used Django framework for application development Excellent knowledge with distributed storages HDFS and distributed processing Map Reduce Yarn Used Amazon Web Services AWS for improved efficiency of storage and fast access Used on Djangos APIs to access database objects Used AWS tats and Google Analytics to analyze web traffic Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed tested and deployed Business feature set in NodeJS with Express and MongoDB backend incorporating APIs Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created database using MySQL wrote several queries to extract data from database Involved in the Complete Software development life cycle SDLC to develop the application Involved in front end and utilized Bootstrap and AngularJS for page design Wrote scripts in Python for extracting data from HTML file Environment MySQL HTML C C Python 27 Django 18 PySpark Flask HTML5 CSS XML MySQL MS SQL Server Ansible JavaScript AWS Linux Shell Scripting Bootstrap AJAX urllib urllib2 Json Jenkins CherryPy Unix Redis Bootstrap MongoDB SQLAlchemy JQuery Python Developer Clever Devices Woodbury NY October 2015 to April 2016 Responsibilities Developed Python based API Restful Web Service to track the events and perform analysis using Django Involved in development using Python bug fixing and unit testing of the layout commands Dealt with development of parsers for handling JSON XML responses and JAXB binding and worked with JMS java messaging service for asynchronous communication Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Used Pandas API to put the data as time series in a tabular format for east timestamp data manipulation and retrieval Published and Consumed Contract SOAP web services and developed corresponding test cases Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Performed debugging and troubleshooting the web applications using Subversion version control tool to coordinate teamdevelopment Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery AJAX GitHub Jira Python Developer Napier Healthcare Pvt Ltd Hyderabad Telangana August 2012 to June 2015 Responsibilities Participated in the development of application architecture and blueprints to define application components Specification of platforms interfaces and development tools Used Python scripts for automation of production tasks Generated property list for every application dynamically using Python Rewrite existing Java application in Python module to deliver certain format of data Designed statistical analysis tools using R for data analysis and visualization Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Used PyQuery for selecting particular DOM elements when parsing HTML Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed GUI using CSS HTML JavaScript Bootstrap and JQuery Used JQuery and Ajax calls for transmitting Json data objects between frontend and controllers Used GitHub for version control Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Actively participated in System Testing production support and maintenancepatch deployments Environment Python Django Flashvars PyUnit PyQuery PyQt HTML CSS PHP DOM REST AJAX JQuery AWS GitHub agile Oracle and Windows Education Bachelors in Computer Science Engineering in JNTUH in Computer Science Engineering Southern Arkansas University",
    "entities": [
        "CSS HTML JavaScript",
        "Python Worked on HTML5",
        "NLP File Prep SettlementPrepare",
        "Python Django PHP C",
        "API Restful Web Service",
        "GUI",
        "Request",
        "FCA",
        "HTML AJAX CSS",
        "UNIX",
        "SQL Server Designed",
        "Sublime Text",
        "HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed",
        "Data Lake",
        "CSS HTML",
        "LAMP Linux",
        "Amazon AWS EC2",
        "IP",
        "Google",
        "Amazon Web Services AWS",
        "Operating Systems",
        "Created a PythonDjango",
        "ObjectOriented Design and Programming",
        "Model View Control MVC",
        "Agile Methodology",
        "Hadoop",
        "XML",
        "SOAP",
        "Express",
        "Utilizing",
        "HTMLCSSJQuery",
        "CherryPy",
        "DHTML",
        "Telangana",
        "Created PyUnit",
        "Shell",
        "Apache Spark",
        "TX",
        "Amazon",
        "Python REST API Framework Developed",
        "GitHub Jenkins Nexus",
        "Software Development Lifecycle SDLC Proficient",
        "Generated",
        "Oracle Actively",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "Spark using",
        "Dallas",
        "MATLAB",
        "AWS Route 53 Developed Application",
        "Restful",
        "FIAT Company",
        "Complete Software",
        "DDL",
        "BCG",
        "Python REST API Framework",
        "PythonPHP",
        "Raw",
        "Develop",
        "Linux",
        "Flask",
        "Spark Streaming",
        "Developed Interacting UI",
        "DOM",
        "SQL Experienced",
        "PySpark Developed",
        "NodeJS Developed",
        "Implemented Restful Web Services",
        "USA",
        "MS",
        "Unit Testing System Integration Testing SIT",
        "Sequoia",
        "Ubuntu Python Django PostgreSQL Redis Bootstrap JQuery Mongo Fabric Git Tenjin Selenium Developed Job",
        "PythonDjango",
        "PythonPHP Architecture",
        "Developed SQL Queries Stored Procedures",
        "NodeJS Postgres",
        "Python Django REACT Developed Job",
        "API",
        "Oracle Implemented",
        "Computer Science Engineering",
        "Heroku Jenkins",
        "AWS",
        "WAMP Windows Apache",
        "Maven Jenkins",
        "Oracle",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PySpark",
        "Postgres",
        "Performed Unit",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "DML",
        "the Complete Agile Methodology",
        "lPythonspan",
        "Data Bases Developed",
        "NLP",
        "Worked with",
        "Oracle SQLite PostgreSQL MySQL DB2",
        "Analysis Design Development",
        "DjangoFlask Develop REST API",
        "HTML CSS Work",
        "Amazon AWS",
        "Published and Consumed Contract SOAP",
        "SQS",
        "Bootstrap Developed Job",
        "JQuery Created",
        "Specification of platforms interfaces and development",
        "Maven",
        "Performed",
        "HTMLHTML5",
        "Transformed Data Work",
        "Djangos",
        "Data Work",
        "Cloud Services",
        "UI",
        "Apache Spark Hadoop HDFS Hive",
        "OOAD",
        "Computer Science Engineering Southern Arkansas University",
        "Amazon Web Services AWS Worked",
        "Google Analytics",
        "Ansible Created",
        "SVN",
        "Oracle Responsible",
        "CSS",
        "Developer Boston Consulting Group",
        "REST",
        "Requirement Analysis Design Development Database Design Deployment Testing Debugging",
        "Application",
        "Python REST API Framework Designed",
        "BASH",
        "Software Development Life Cycle",
        "Worked with JSON",
        "Database Plugins for Postgres Designed Databases",
        "Django Involved",
        "Python Created",
        "BACKEND",
        "HTML file Environment",
        "DevTest",
        "JSON XML"
    ],
    "experience": "Experience in IT industry with proficiency in Analysis Design Development and UnitTesting of Enterprise Applications and Database Development using Python Django Flask and SQL Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced in complete Agile Methodology for development Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience with Cloud Services like Heroku Google App Engine Microsoft Azure Amazon AWS EC2 S3 etc Good working experience in processing large datasets with Spark using Django and PySpark Used Ansible to document all infrastructures into version control Experience of using Python modules like Django NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Skilled in ObjectOriented Design and Programming using Python and C Experienced in using Python Django PHP C CSS HTML XHTML JavaScript AngularJS REACT and JSON for developing web applications Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript AngularJS and JSON Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Experienced with JSON based Restful web services and XML based SOAP web services Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Proficient in developing complex SQL Queries Stored Procedures Triggers Cursors Functions and Packages along with performing DDL and DML operations on the database Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and Postgre SQL database Experience Amazon SQS and Amazon Web Services like EC2 Redshift and S3 Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Experience in project deployment using Heroku Jenkins and Amazon Web Services AWS Worked on various Operating Systems like UNIX Linux Windows and Mac OS Experienced with version control systems like Git GitHub Bit Bucket and SVN in order to keep the versions and configurations of the code organized Experienced with Unit Testing System Integration Testing SIT and User Acceptance Testing UAT Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB and Django Experience in handling errorsexceptions and debugging issues in large scale applications Work Experience Sr Python Developer Boston Consulting Group Seattle WA January 2019 to Present Description FCA Car pricing is the application developed by BCG for FIAT Company to analyze the historical data and compute the price Tax Co2 emission logics models brands manufactures and to provide the scope of the market for their particular brand or product This Pricing Tools is developed with Python Flask various databases and cloud services etc FCA Car Pricing project is also implemented with Data Lake to archive the data for future analysis Responsibilities Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Used AWS EC2 LAMBDA S3 API GATEWAY and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and Transformed Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and used Python to interact database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Develop remote integration with third party platforms by using Restful web services and Successful implementation of PySpark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Flask framework Written backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in the Complete Agile Methodology to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Developed entire front end and back end modules using flask Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Flask MySQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Maven Jenkins NodeJS SQLAlchemy Psutil Server less Sr Python Developer HAVI Global Solutions Naperville IL February 2018 to January 2019 Description SEQUOIA is the Web Application developed by Havi Global Solution for one of their very very important customer MecD MecD is one of top most food industry in USA and it has it branches all over nationwide Sequoia is the application where it will help the user to perform many things like creating promotions for their product analyzing the sales data according to the region wise and session they create the promotions for a certain period of time for different locations This project is developed in Python Django Spark AngularJS NodeJS Postgres and Azure cloud services Responsibilities Developed API Using Django Rest Frame Work for Frontend and various Database Plugins for Postgres Designed Databases in MySQL Postgres Written code in python to handle the Request and response using REST frame work and Json data objects Worked with Flask and pandas to monitor migrate and develop table database and work with large data set files Implemented SQL scripts and quarries in Python code to handle User requests and work with the data in database Performed Unit testing and regression testing Worked with AZURE SERVICES in multiple areas API code to interact and trigger the functionality at particular points of code Developed Interacting UI with REACT and ANGUALR Used Azure Cloud for maintaining database code Used Azure machines to development the service in cloud Work with team of developers for the BACKEND and FROINTEND INTRIGRATION Manage the configurations of multiple servers using Ansible Created database using Postgres and wrote several queries to extract data from database Designed and Developed User Interface using frontend technologies like REACT Developed and tested many features in an agile environment using Python Django REACT Developed Job dashboard monitor UI using DjangoREACT Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services Implemented Restful Web Services for the data transportation between multiple systems Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Bit Bucket Developed Application logic using Python 27 and Django framework Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Environment Python 27 Django 18 Flask Oracle MySQL PostgreSQL Windows JavaScript AngularJS Bootstrap Git GitHub PySpark Linux Shell Scripting AWS Postgres Jenkins Pycharm Vs Code Sr Python Developer JPMC Wilmington DE January 2017 to February 2018 Responsibilities Performed Systems Analysis and detail application design Developed multiple Database Plugins for Cassandra MySQL Oracle Mssql Designed various Databases in MySQL Oracle Implemented threshold points to secure the code to crash free run environment Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Worked with AWS in different servers to implement and test the code and develop a database Used AWS EC2 REDSHIFT DEVBOX DBA and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and filtered Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and wrote several queries to extract data from database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack MongoDBAngularJS and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Involved in the Complete Software development life cycle SDLC to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Use JavaScript and Bootstrap for page usefulness popup screens Sale and discount tags for the products Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed python scripts in order to migrate information from Oracle to MongoDB Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Django 18 Flask Oracle MySQL PostgreSQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Mongo DB Maven Jenkins Python Developer Dexmedia Dallas TX May 2016 to December 2016 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib urllib2 for web crawling Designed and developed multithreaded C programs to process data into different Data Bases Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Involved in writing stored procedures using MySQL Worked on front end frame works like CSS Bootstrap for development of Web application Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Experience in writing playbooks for Ansible and deploying applications using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Private VPN using Ubuntu Python Django PostgreSQL Redis Bootstrap JQuery Mongo Fabric Git Tenjin Selenium Developed Job dashboard monitor UI using DjangoFlask Performed QA testing on the application Developed approaches for improving NLP pipeline Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Used Django framework for application development Excellent knowledge with distributed storages HDFS and distributed processing Map Reduce Yarn Used Amazon Web Services AWS for improved efficiency of storage and fast access Used on Djangos APIs to access database objects Used AWS tats and Google Analytics to analyze web traffic Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed tested and deployed Business feature set in NodeJS with Express and MongoDB backend incorporating APIs Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created database using MySQL wrote several queries to extract data from database Involved in the Complete Software development life cycle SDLC to develop the application Involved in front end and utilized Bootstrap and AngularJS for page design Wrote scripts in Python for extracting data from HTML file Environment MySQL HTML C C Python 27 Django 18 PySpark Flask HTML5 CSS XML MySQL MS SQL Server Ansible JavaScript AWS Linux Shell Scripting Bootstrap AJAX urllib urllib2 Json Jenkins CherryPy Unix Redis Bootstrap MongoDB SQLAlchemy JQuery Python Developer Clever Devices Woodbury NY October 2015 to April 2016 Responsibilities Developed Python based API Restful Web Service to track the events and perform analysis using Django Involved in development using Python bug fixing and unit testing of the layout commands Dealt with development of parsers for handling JSON XML responses and JAXB binding and worked with JMS java messaging service for asynchronous communication Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Used Pandas API to put the data as time series in a tabular format for east timestamp data manipulation and retrieval Published and Consumed Contract SOAP web services and developed corresponding test cases Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Performed debugging and troubleshooting the web applications using Subversion version control tool to coordinate teamdevelopment Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery AJAX GitHub Jira Python Developer Napier Healthcare Pvt Ltd Hyderabad Telangana August 2012 to June 2015 Responsibilities Participated in the development of application architecture and blueprints to define application components Specification of platforms interfaces and development tools Used Python scripts for automation of production tasks Generated property list for every application dynamically using Python Rewrite existing Java application in Python module to deliver certain format of data Designed statistical analysis tools using R for data analysis and visualization Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Used PyQuery for selecting particular DOM elements when parsing HTML Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed GUI using CSS HTML JavaScript Bootstrap and JQuery Used JQuery and Ajax calls for transmitting Json data objects between frontend and controllers Used GitHub for version control Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Actively participated in System Testing production support and maintenancepatch deployments Environment Python Django Flashvars PyUnit PyQuery PyQt HTML CSS PHP DOM REST AJAX JQuery AWS GitHub agile Oracle and Windows Education Bachelors in Computer Science Engineering in JNTUH in Computer Science Engineering Southern Arkansas University",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Boston",
        "Consulting",
        "Group",
        "Dallas",
        "TX",
        "years",
        "experience",
        "field",
        "software",
        "development",
        "Proficient",
        "applications",
        "Python",
        "Java",
        "C",
        "Experience",
        "IT",
        "industry",
        "proficiency",
        "Analysis",
        "Design",
        "Development",
        "UnitTesting",
        "Enterprise",
        "Applications",
        "Database",
        "Development",
        "Python",
        "Django",
        "Flask",
        "SQL",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "aspects",
        "projects",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Database",
        "Design",
        "Deployment",
        "Testing",
        "Debugging",
        "Application",
        "Maintenance",
        "Agile",
        "Methodology",
        "development",
        "WAMP",
        "Windows",
        "Apache",
        "MySQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "Cloud",
        "Services",
        "Heroku",
        "Google",
        "App",
        "Engine",
        "Microsoft",
        "Azure",
        "Amazon",
        "AWS",
        "EC2",
        "S3",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Django",
        "PySpark",
        "Ansible",
        "infrastructures",
        "version",
        "control",
        "Experience",
        "Python",
        "modules",
        "Django",
        "NumPy",
        "Matplotlib",
        "Pickle",
        "SciPy",
        "PyTables",
        "PyQt",
        "data",
        "creation",
        "histograms",
        "ObjectOriented",
        "Design",
        "Programming",
        "Python",
        "C",
        "Python",
        "Django",
        "PHP",
        "C",
        "CSS",
        "HTML",
        "XHTML",
        "JavaScript",
        "REACT",
        "JSON",
        "web",
        "applications",
        "HTMLHTML5",
        "DHTML",
        "CSSCSS3",
        "JavaScript",
        "AngularJS",
        "JSON",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "web",
        "applications",
        "JSON",
        "Restful",
        "web",
        "services",
        "XML",
        "SOAP",
        "web",
        "services",
        "applications",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Sublime",
        "Text",
        "PyCharm",
        "Experience",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "databases",
        "MongoDB",
        "Cassandra",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "Proficient",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "Packages",
        "DDL",
        "DML",
        "operations",
        "database",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "Postgre",
        "SQL",
        "database",
        "Experience",
        "Amazon",
        "SQS",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "Redshift",
        "S3",
        "Written",
        "scripts",
        "tasks",
        "Jenkins",
        "UNIX",
        "shell",
        "scripting",
        "Experience",
        "project",
        "deployment",
        "Heroku",
        "Jenkins",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Windows",
        "Mac",
        "OS",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "Bit",
        "Bucket",
        "SVN",
        "order",
        "versions",
        "configurations",
        "code",
        "Unit",
        "Testing",
        "System",
        "Integration",
        "Testing",
        "SIT",
        "User",
        "Acceptance",
        "Testing",
        "UAT",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Strong",
        "Experience",
        "data",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "HDFS",
        "Hive",
        "MongoDB",
        "Django",
        "Experience",
        "errorsexceptions",
        "issues",
        "scale",
        "applications",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Boston",
        "Consulting",
        "Group",
        "Seattle",
        "WA",
        "January",
        "Present",
        "Description",
        "FCA",
        "Car",
        "pricing",
        "application",
        "BCG",
        "FIAT",
        "Company",
        "data",
        "price",
        "Tax",
        "Co2",
        "emission",
        "logics",
        "models",
        "brands",
        "manufactures",
        "scope",
        "market",
        "brand",
        "product",
        "Pricing",
        "Tools",
        "Python",
        "Flask",
        "databases",
        "cloud",
        "services",
        "FCA",
        "Car",
        "Pricing",
        "project",
        "Data",
        "Lake",
        "data",
        "analysis",
        "Responsibilities",
        "Flask",
        "migrate",
        "table",
        "database",
        "SQL",
        "scripts",
        "quarries",
        "Python",
        "code",
        "databases",
        "data",
        "sources",
        "AWS",
        "EC2",
        "LAMBDA",
        "S3",
        "API",
        "GATEWAY",
        "work",
        "environment",
        "Performed",
        "data",
        "migration",
        "data",
        "filter",
        "data",
        "sources",
        "databases",
        "data",
        "Transformed",
        "Data",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "configurations",
        "servers",
        "Ansible",
        "Created",
        "database",
        "MySQL",
        "Python",
        "database",
        "mircoservices2",
        "AWS",
        "environments",
        "Playbooks",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Developed",
        "Job",
        "dashboard",
        "monitor",
        "UI",
        "DjangoFlask",
        "Develop",
        "REST",
        "API",
        "products",
        "AWS",
        "REST",
        "API",
        "gateway",
        "AWS",
        "lambda",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "implementation",
        "PySpark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "Restful",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "analysis",
        "data",
        "sets",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "Worked",
        "UI",
        "modification",
        "HTML",
        "CSS",
        "Work",
        "dns",
        "tables",
        "website",
        "IP",
        "address",
        "AWS",
        "Route",
        "Developed",
        "Application",
        "logic",
        "Python",
        "Flask",
        "framework",
        "Written",
        "data",
        "access",
        "Logic",
        "MYSQL",
        "SQL",
        "Server",
        "QA",
        "infrastructure",
        "testing",
        "process",
        "software",
        "product",
        "Complete",
        "Agile",
        "Methodology",
        "application",
        "customer",
        "data",
        "collection",
        "PySparkHadoop",
        "analytics",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "Restful",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "end",
        "end",
        "modules",
        "flask",
        "Web",
        "Framework",
        "page",
        "application",
        "MongoDB",
        "NodeJS",
        "project",
        "Flask",
        "report",
        "Google",
        "analytics",
        "basis",
        "reporting",
        "module",
        "Apache",
        "Spark",
        "SQL",
        "reports",
        "data",
        "center",
        "management",
        "system",
        "MySQL",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "Responsible",
        "web",
        "application",
        "Environment",
        "Python",
        "Flask",
        "MySQL",
        "Microservices",
        "Windows",
        "HTML5",
        "CSS3",
        "JQuery",
        "JavaScript",
        "AJAX",
        "Bootstrap",
        "Git",
        "GitHub",
        "PySpark",
        "Linux",
        "Shell",
        "Scripting",
        "Apache",
        "Spark",
        "AWS",
        "Maven",
        "Jenkins",
        "NodeJS",
        "SQLAlchemy",
        "Psutil",
        "Server",
        "Sr",
        "Python",
        "Developer",
        "HAVI",
        "Global",
        "Solutions",
        "Naperville",
        "IL",
        "February",
        "January",
        "Description",
        "SEQUOIA",
        "Web",
        "Application",
        "Havi",
        "Global",
        "Solution",
        "customer",
        "MecD",
        "MecD",
        "food",
        "industry",
        "USA",
        "Sequoia",
        "application",
        "user",
        "things",
        "promotions",
        "product",
        "sales",
        "data",
        "region",
        "session",
        "promotions",
        "period",
        "time",
        "locations",
        "project",
        "Python",
        "Django",
        "Spark",
        "NodeJS",
        "Postgres",
        "cloud",
        "services",
        "Responsibilities",
        "API",
        "Django",
        "Rest",
        "Frame",
        "Work",
        "Frontend",
        "Database",
        "Plugins",
        "Postgres",
        "Databases",
        "MySQL",
        "Postgres",
        "Written",
        "code",
        "python",
        "Request",
        "response",
        "REST",
        "frame",
        "work",
        "Json",
        "data",
        "Flask",
        "migrate",
        "table",
        "database",
        "work",
        "data",
        "files",
        "SQL",
        "scripts",
        "quarries",
        "Python",
        "code",
        "User",
        "requests",
        "work",
        "data",
        "database",
        "Performed",
        "Unit",
        "testing",
        "regression",
        "testing",
        "AZURE",
        "SERVICES",
        "areas",
        "API",
        "code",
        "functionality",
        "points",
        "code",
        "Interacting",
        "UI",
        "REACT",
        "ANGUALR",
        "Azure",
        "Cloud",
        "database",
        "code",
        "Azure",
        "machines",
        "service",
        "cloud",
        "Work",
        "team",
        "developers",
        "BACKEND",
        "FROINTEND",
        "INTRIGRATION",
        "configurations",
        "servers",
        "Ansible",
        "Created",
        "database",
        "Postgres",
        "queries",
        "data",
        "database",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "REACT",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "REACT",
        "Developed",
        "Job",
        "dashboard",
        "monitor",
        "UI",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Utilizing",
        "MEAN",
        "stack",
        "JSON",
        "data",
        "transfer",
        "technologies",
        "Develop",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Restful",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Bit",
        "Bucket",
        "Developed",
        "Application",
        "logic",
        "Python",
        "Django",
        "framework",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "Restful",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "Windows",
        "JavaScript",
        "Bootstrap",
        "Git",
        "GitHub",
        "PySpark",
        "Linux",
        "Shell",
        "Scripting",
        "AWS",
        "Postgres",
        "Jenkins",
        "Pycharm",
        "Vs",
        "Code",
        "Sr",
        "Python",
        "Developer",
        "JPMC",
        "Wilmington",
        "DE",
        "January",
        "February",
        "Responsibilities",
        "Performed",
        "Systems",
        "Analysis",
        "detail",
        "application",
        "design",
        "Database",
        "Plugins",
        "Cassandra",
        "MySQL",
        "Oracle",
        "Mssql",
        "Databases",
        "MySQL",
        "Oracle",
        "threshold",
        "code",
        "run",
        "environment",
        "Flask",
        "migrate",
        "table",
        "database",
        "SQL",
        "scripts",
        "quarries",
        "Python",
        "code",
        "databases",
        "data",
        "sources",
        "AWS",
        "servers",
        "code",
        "database",
        "AWS",
        "EC2",
        "REDSHIFT",
        "DBA",
        "work",
        "environment",
        "Performed",
        "data",
        "migration",
        "data",
        "filter",
        "data",
        "sources",
        "databases",
        "data",
        "Data",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "configurations",
        "servers",
        "Ansible",
        "Created",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "mircoservices2",
        "AWS",
        "environments",
        "Playbooks",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Developed",
        "Job",
        "dashboard",
        "monitor",
        "UI",
        "DjangoFlask",
        "Develop",
        "REST",
        "API",
        "products",
        "AWS",
        "REST",
        "API",
        "gateway",
        "AWS",
        "lambda",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Utilizing",
        "MEAN",
        "MongoDBAngularJS",
        "JSON",
        "data",
        "transfer",
        "technologies",
        "Develop",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "implementation",
        "Apache",
        "Spark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "Restful",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "analysis",
        "data",
        "sets",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "Worked",
        "UI",
        "modification",
        "HTML",
        "CSS",
        "Work",
        "dns",
        "tables",
        "website",
        "IP",
        "address",
        "AWS",
        "Route",
        "Developed",
        "Application",
        "logic",
        "Python",
        "Django",
        "framework",
        "Wrote",
        "data",
        "access",
        "Logic",
        "MYSQL",
        "SQL",
        "Server",
        "QA",
        "infrastructure",
        "testing",
        "process",
        "software",
        "product",
        "Unit",
        "integration",
        "smoke",
        "testing",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "customer",
        "data",
        "collection",
        "PySparkHadoop",
        "analytics",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "Restful",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Use",
        "JavaScript",
        "Bootstrap",
        "page",
        "usefulness",
        "popup",
        "screens",
        "Sale",
        "discount",
        "tags",
        "products",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "page",
        "application",
        "MongoDB",
        "NodeJS",
        "project",
        "Flask",
        "report",
        "Google",
        "analytics",
        "basis",
        "python",
        "scripts",
        "order",
        "information",
        "Oracle",
        "reporting",
        "module",
        "Apache",
        "Spark",
        "SQL",
        "reports",
        "data",
        "center",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "Responsible",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "Microservices",
        "Windows",
        "HTML5",
        "CSS3",
        "JQuery",
        "JavaScript",
        "AJAX",
        "Bootstrap",
        "Git",
        "GitHub",
        "PySpark",
        "Linux",
        "Shell",
        "Scripting",
        "Apache",
        "Spark",
        "Ansible",
        "AWS",
        "Mongo",
        "DB",
        "Maven",
        "Jenkins",
        "Python",
        "Developer",
        "Dexmedia",
        "Dallas",
        "TX",
        "May",
        "December",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "C",
        "programs",
        "data",
        "Data",
        "Bases",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQLAlchemy",
        "companys",
        "framework",
        "Python",
        "framework",
        "basement",
        "services",
        "development",
        "Framework",
        "CherryPy",
        "GnuPg",
        "encryption",
        "reGnuPg",
        "module",
        "top",
        "procedures",
        "MySQL",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "MongoDB",
        "Experience",
        "playbooks",
        "applications",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "Design",
        "environment",
        "MongoDB",
        "shards",
        "replica",
        "DevTest",
        "Production",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "PostgreSQL",
        "Redis",
        "Bootstrap",
        "JQuery",
        "Mongo",
        "Fabric",
        "Git",
        "Tenjin",
        "Selenium",
        "Developed",
        "Job",
        "dashboard",
        "monitor",
        "UI",
        "DjangoFlask",
        "Performed",
        "QA",
        "testing",
        "application",
        "approaches",
        "NLP",
        "pipeline",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "renormalization",
        "MYSQL",
        "custom",
        "VB",
        "scripts",
        "applications",
        "NLP",
        "File",
        "Prep",
        "SettlementPrepare",
        "review",
        "Settlement",
        "Managed",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "PySpark",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "processing",
        "reporting",
        "module",
        "Apache",
        "Spark",
        "SQL",
        "reports",
        "Django",
        "framework",
        "application",
        "development",
        "Excellent",
        "knowledge",
        "storages",
        "HDFS",
        "Map",
        "Reduce",
        "Yarn",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "Djangos",
        "APIs",
        "database",
        "AWS",
        "tats",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "project",
        "Flask",
        "report",
        "Google",
        "analytics",
        "basis",
        "Business",
        "feature",
        "NodeJS",
        "Express",
        "backend",
        "APIs",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "Created",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "end",
        "Bootstrap",
        "AngularJS",
        "page",
        "design",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Environment",
        "MySQL",
        "HTML",
        "C",
        "C",
        "Python",
        "Django",
        "PySpark",
        "Flask",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "Ansible",
        "JavaScript",
        "Linux",
        "Shell",
        "Scripting",
        "Bootstrap",
        "AJAX",
        "urllib2",
        "Json",
        "Jenkins",
        "CherryPy",
        "Unix",
        "Redis",
        "Bootstrap",
        "SQLAlchemy",
        "JQuery",
        "Python",
        "Developer",
        "Clever",
        "Devices",
        "Woodbury",
        "NY",
        "October",
        "April",
        "Responsibilities",
        "Python",
        "API",
        "Restful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "development",
        "Python",
        "bug",
        "fixing",
        "unit",
        "testing",
        "layout",
        "commands",
        "development",
        "parsers",
        "XML",
        "responses",
        "JAXB",
        "JMS",
        "service",
        "communication",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Developed",
        "process",
        "builds",
        "deployments",
        "Jenkins",
        "Ant",
        "Maven",
        "Shell",
        "Script",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Consumed",
        "Contract",
        "SOAP",
        "web",
        "services",
        "test",
        "cases",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "debugging",
        "web",
        "applications",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "AJAX",
        "GitHub",
        "Jira",
        "Python",
        "Developer",
        "Napier",
        "Healthcare",
        "Pvt",
        "Ltd",
        "Hyderabad",
        "Telangana",
        "August",
        "June",
        "Responsibilities",
        "development",
        "application",
        "architecture",
        "blueprints",
        "application",
        "components",
        "Specification",
        "platforms",
        "interfaces",
        "development",
        "tools",
        "Python",
        "scripts",
        "automation",
        "production",
        "tasks",
        "property",
        "list",
        "application",
        "Python",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "analysis",
        "tools",
        "R",
        "data",
        "analysis",
        "visualization",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "testing",
        "JSON",
        "REST",
        "Web",
        "services",
        "GUI",
        "CSS",
        "HTML",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JQuery",
        "Ajax",
        "calls",
        "Json",
        "data",
        "objects",
        "frontend",
        "controllers",
        "GitHub",
        "version",
        "control",
        "development",
        "environment",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "System",
        "Testing",
        "production",
        "support",
        "maintenancepatch",
        "deployments",
        "Environment",
        "Python",
        "Django",
        "Flashvars",
        "PyUnit",
        "PyQuery",
        "PyQt",
        "HTML",
        "CSS",
        "PHP",
        "DOM",
        "REST",
        "JQuery",
        "AWS",
        "GitHub",
        "Oracle",
        "Windows",
        "Education",
        "Bachelors",
        "Computer",
        "Science",
        "Engineering",
        "JNTUH",
        "Computer",
        "Science",
        "Engineering",
        "Southern",
        "Arkansas",
        "University"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:20:59.081085",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Boston Consulting Group Dallas TX Around 8 years of experience in the field of software development Proficient in developing applications using Python Java and C Experience in IT industry with proficiency in Analysis Design Development and UnitTesting of Enterprise Applications and Database Development using Python Django Flask and SQL Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Experienced in complete Agile Methodology for development Experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience with Cloud Services like Heroku Google App Engine Microsoft Azure Amazon AWS EC2 S3 etc Good working experience in processing large datasets with Spark using Django and PySpark Used Ansible to document all infrastructures into version control Experience of using Python modules like Django NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Skilled in ObjectOriented Design and Programming using Python and C Experienced in using Python Django PHP C CSS HTML XHTML JavaScript AngularJS REACT and JSON for developing web applications Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript AngularJS and JSON Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Experienced with JSON based Restful web services and XML based SOAP web services Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Proficient in developing complex SQL Queries Stored Procedures Triggers Cursors Functions and Packages along with performing DDL and DML operations on the database Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and Postgre SQL database Experience Amazon SQS and Amazon Web Services like EC2 Redshift and S3 Written and developed scripts for automating tasks using Jenkins and UNIX shell scripting Experience in project deployment using Heroku Jenkins and Amazon Web Services AWS Worked on various Operating Systems like UNIX Linux Windows and Mac OS Experienced with version control systems like Git GitHub Bit Bucket and SVN in order to keep the versions and configurations of the code organized Experienced with Unit Testing System Integration Testing SIT and User Acceptance Testing UAT Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB and Django Experience in handling errorsexceptions and debugging issues in large scale applications Work Experience Sr Python Developer Boston Consulting Group Seattle WA January 2019 to Present Description FCA Car pricing is the application developed by BCG for FIAT Company to analyze the historical data and compute the price Tax Co2 emission logics models brands manufactures and to provide the scope of the market for their particular brand or product This Pricing Tools is developed with Python Flask various databases and cloud services etc FCA Car Pricing project is also implemented with Data Lake to archive the data for future analysis Responsibilities Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Used AWS EC2 LAMBDA S3 API GATEWAY and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and Transformed Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and used Python to interact database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Develop remote integration with third party platforms by using Restful web services and Successful implementation of PySpark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Flask framework Written backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in the Complete Agile Methodology to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Developed entire front end and back end modules using flask Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Flask MySQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Maven Jenkins NodeJS SQLAlchemy Psutil Server less Sr Python Developer HAVI Global Solutions Naperville IL February 2018 to January 2019 Description SEQUOIA is the Web Application developed by Havi Global Solution for one of their very very important customer MecD MecD is one of top most food industry in USA and it has it branches all over nationwide Sequoia is the application where it will help the user to perform many things like creating promotions for their product analyzing the sales data according to the region wise and session they create the promotions for a certain period of time for different locations This project is developed in Python Django Spark AngularJS NodeJS Postgres and Azure cloud services Responsibilities Developed API Using Django Rest Frame Work for Frontend and various Database Plugins for Postgres Designed Databases in MySQL Postgres Written code in python to handle the Request and response using REST frame work and Json data objects Worked with Flask and pandas to monitor migrate and develop table database and work with large data set files Implemented SQL scripts and quarries in Python code to handle User requests and work with the data in database Performed Unit testing and regression testing Worked with AZURE SERVICES in multiple areas API code to interact and trigger the functionality at particular points of code Developed Interacting UI with REACT and ANGUALR Used Azure Cloud for maintaining database code Used Azure machines to development the service in cloud Work with team of developers for the BACKEND and FROINTEND INTRIGRATION Manage the configurations of multiple servers using Ansible Created database using Postgres and wrote several queries to extract data from database Designed and Developed User Interface using frontend technologies like REACT Developed and tested many features in an agile environment using Python Django REACT Developed Job dashboard monitor UI using DjangoREACT Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services Implemented Restful Web Services for the data transportation between multiple systems Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Bit Bucket Developed Application logic using Python 27 and Django framework Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Environment Python 27 Django 18 Flask Oracle MySQL PostgreSQL Windows JavaScript AngularJS Bootstrap Git GitHub PySpark Linux Shell Scripting AWS Postgres Jenkins Pycharm Vs Code Sr Python Developer JPMC Wilmington DE January 2017 to February 2018 Responsibilities Performed Systems Analysis and detail application design Developed multiple Database Plugins for Cassandra MySQL Oracle Mssql Designed various Databases in MySQL Oracle Implemented threshold points to secure the code to crash free run environment Worked with Flask and pandas to monitor migrate and develop table database Implemented SQL scripts and quarries in Python code to work with various databases and data sources Worked with AWS in different servers to implement and test the code and develop a database Used AWS EC2 REDSHIFT DEVBOX DBA and implemented various work environment Performed data migration and data filter from various data sources and build different databases to store the Raw data and filtered Data Work with team of developers on python applications for RISK management Manage the configurations of multiple servers using Ansible Created database using MySQL and wrote several queries to extract data from database Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Developed Job dashboard monitor UI using DjangoFlask Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Utilizing MEAN stack MongoDBAngularJS and JSON for data transfer and technologies related to serverside scripting Develop remote integration with third party platforms by using Restful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Implemented Restful Web Services for the data transportation between multiple systems Automating analysis of large data sets Responsible for on boarding Application teams to build and deploy there code using GitHub Jenkins Nexus and Ansible Worked on UI modification using HTML CSS Work on dns tables to map the website to its IP address and mapped them to AWS Route 53 Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Involved in the Complete Software development life cycle SDLC to develop the application Implementing customer data collection with PySparkHadoop analytics Involved in back end development using Python with framework Flask Restful web services using Python REST API Framework Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Use JavaScript and Bootstrap for page usefulness popup screens Sale and discount tags for the products Used Amazon Web Services AWS for improved efficiency of storage and fast access Developed entire front end and back end modules using Python on Django Web Framework Developed single page application by using AngularJS backed by MongoDB and NodeJS Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed python scripts in order to migrate information from Oracle to MongoDB Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Responsible for setting up Python REST API framework and spring framework using Django Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Developed SQL Queries Stored Procedures and Triggers Using Oracle Responsible for debugging and troubleshooting the web application Environment Python 327 Django 18 Flask Oracle MySQL PostgreSQL Microservices Windows HTML5 CSS3 JQuery JavaScript AngularJS AJAX Bootstrap Git GitHub PySpark Linux Shell Scripting Apache Spark Ansible AWS Mongo DB Maven Jenkins Python Developer Dexmedia Dallas TX May 2016 to December 2016 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib urllib2 for web crawling Designed and developed multithreaded C programs to process data into different Data Bases Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Involved in writing stored procedures using MySQL Worked on front end frame works like CSS Bootstrap for development of Web application Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Experience in writing playbooks for Ansible and deploying applications using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of MongoDB with shards and replica sets DevTest and Production Private VPN using Ubuntu Python Django PostgreSQL Redis Bootstrap JQuery Mongo Fabric Git Tenjin Selenium Developed Job dashboard monitor UI using DjangoFlask Performed QA testing on the application Developed approaches for improving NLP pipeline Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports Used Django framework for application development Excellent knowledge with distributed storages HDFS and distributed processing Map Reduce Yarn Used Amazon Web Services AWS for improved efficiency of storage and fast access Used on Djangos APIs to access database objects Used AWS tats and Google Analytics to analyze web traffic Developed internal project in Flask to generate report from Google analytics on daily monthly and weekly basis Developed tested and deployed Business feature set in NodeJS with Express and MongoDB backend incorporating APIs Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created database using MySQL wrote several queries to extract data from database Involved in the Complete Software development life cycle SDLC to develop the application Involved in front end and utilized Bootstrap and AngularJS for page design Wrote scripts in Python for extracting data from HTML file Environment MySQL HTML C C Python 27 Django 18 PySpark Flask HTML5 CSS XML MySQL MS SQL Server Ansible JavaScript AWS Linux Shell Scripting Bootstrap AJAX urllib urllib2 Json Jenkins CherryPy Unix Redis Bootstrap MongoDB SQLAlchemy JQuery Python Developer Clever Devices Woodbury NY October 2015 to April 2016 Responsibilities Developed Python based API Restful Web Service to track the events and perform analysis using Django Involved in development using Python bug fixing and unit testing of the layout commands Dealt with development of parsers for handling JSON XML responses and JAXB binding and worked with JMS java messaging service for asynchronous communication Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Used Pandas API to put the data as time series in a tabular format for east timestamp data manipulation and retrieval Published and Consumed Contract SOAP web services and developed corresponding test cases Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Performed debugging and troubleshooting the web applications using Subversion version control tool to coordinate teamdevelopment Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery AJAX GitHub Jira Python Developer Napier Healthcare Pvt Ltd Hyderabad Telangana August 2012 to June 2015 Responsibilities Participated in the development of application architecture and blueprints to define application components Specification of platforms interfaces and development tools Used Python scripts for automation of production tasks Generated property list for every application dynamically using Python Rewrite existing Java application in Python module to deliver certain format of data Designed statistical analysis tools using R for data analysis and visualization Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Used PyQuery for selecting particular DOM elements when parsing HTML Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed GUI using CSS HTML JavaScript Bootstrap and JQuery Used JQuery and Ajax calls for transmitting Json data objects between frontend and controllers Used GitHub for version control Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Actively participated in System Testing production support and maintenancepatch deployments Environment Python Django Flashvars PyUnit PyQuery PyQt HTML CSS PHP DOM REST AJAX JQuery AWS GitHub agile Oracle and Windows Education Bachelors in Computer Science Engineering in JNTUH in Computer Science Engineering Southern Arkansas University",
    "unique_id": "f044fe1a-7879-4d20-8384-c620b7867132"
}