{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Boeing Chicago IL Around 6 years of competitive work experience in Software Design Development Maintenance and Enhancement Implementation of Enterprise applications using Java J2EE technologies with strong ObjectOriented Programming skills Proficient and strong working knowledge of J2EE Architectural Design Patterns SOAP Web Services JAXWS JAXRPC REST e Frame work Struts Servlets JSP JSF JMS EJB Hibernate Having strong Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS HTML5 CSS3 DHTML XML XSLT AJAX jQuery JSON Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple  Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon CloudFront Deployment performance scalability finetuning webapplication servers like WebLogic WebSphere JBoss and Pramati Tomcat Expertise in Spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP Java J2EE Servlets EJB JPA WebSphere Commerce Hibernate Spring Framework Jasper Reports Server Ext js JSP JMS Struts XML Eclipse NetBeans jQuery Visual Source Safe CVS SVN JDBC JNDI JIRA ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Web flow Spring Data JPA JSF ICE faces HTML and Java Scripts Expertise in developing Microservices using Spring Boot and Node JS to build more physically separated modular applications which will improve scalability Availability Agility of application Experience and familiarity building modern Spring applications with Spring Boot Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Experience in making Junit and Test NG test cases and executed as part of auto build process from Jenkins Jobs Hands on experience in designing and implementation of Selenium WebDriver Automation Framework for Smoke test and Regression test using TestNG Experience in developing end to end automation using Selenium WebDriver Grid POM Junit TestNG Cucumber Object Repository Web Services REST SOAP Excellent knowledge and experience in SQL queries PLSQL stored procedures functions and triggers to interact with SQL MySQL Oracle databases Experience in Maven pomxml and as CICD tool Jenkins CI and Configured Log4j for logging mechanism Authorized to work in the US for any employer Work Experience Sr Java Developer Boeing Chicago IL June 2018 to Present As a Java Developer on the project worked with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer Amazon Seattle WA February 2016 to June 2018 As a java developer involved in creating a reusable component using React JS for DOM Manipulation also migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appender minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Java Developer Caf Coffee Day Bengaluru Karnataka May 2013 to June 2015 Designed and developed the REST based Microservices using the Spring Boot Spring Data with JPA Java Persistence API and deployed Microservices onto Docker also created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Redux for state management to store the whole state of the app in an immutable object tree Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Developed a single page mobile first cross devicecross browser web application for real time location sharing utilizing Angular JS and JavaScript API Coded extensively in jQuery with Bootstrap to make rich Internet web pages and created custom date picker on the website Created the Nodejs EXPRESS Server combined with Socketio to build MVC framework from frontend side AngularJS to backend MongoDB to provide broadcast service as well as chatting service Build REST web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery Ajax calls Created both Manual and Automation Test Scripts using Selenium WebDriver and JAVA Technologies Eclipse IDE Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Education Masters in Computer Information Science Wayne State University Detroit MI August 2015 to May 2017 Skills Java Spring Java J2Ee Hibernate",
    "entities": [
        "UMLRational Rose",
        "Second Level",
        "Spring Bootbased",
        "Spring Framework",
        "SNS",
        "FlashFlex Used Babel to Transpile ES6",
        "GUI",
        "NAT",
        "Kubernetes Created Pods",
        "Angular 6",
        "Java Developer Caf Coffee Day",
        "Spring Annotation",
        "Redux Pattern",
        "JAVA Technologies Eclipse",
        "Java Server Pages",
        "Scala Microservices",
        "Detroit",
        "Created Automation",
        "Node Package",
        "NAS Storage Developed",
        "XML",
        "JavaScript ES6 React",
        "JAXWS",
        "JUnit",
        "BabelLoader",
        "HBase",
        "Reactjs",
        "Amazon",
        "Selenium IDE Firebug Fire Path Selenium Builder Worked",
        "JUNIT TESTNG Selenium",
        "Configuring AWS EC2",
        "Hibernate Spring Framework Jasper",
        "Stored Procedures",
        "Developed",
        "DAO",
        "Influx DB",
        "Kerberos",
        "Version Control",
        "EBS Snapshots",
        "REST API s",
        "Continuous",
        "Spring Sleuth",
        "UML",
        "Created AWS Security Groups",
        "Sequence",
        "JQUERY",
        "AWS Cloud",
        "iText",
        "Frame",
        "RD",
        "Cassandra using Spark",
        "IFP",
        "Linux",
        "JSP",
        "Regression Test",
        "Spring DI",
        "React Js",
        "Factory Singleton Service Locator",
        "Kubernetes Implemented Redux Sagas",
        "RDS",
        "SSL",
        "Views",
        "ObjectOriented Programming",
        "Kubernetes Created",
        "MVC",
        "Tomcat 8",
        "Interface",
        "JPA Annotation",
        "EJB",
        "Nextjs Express",
        "GIT",
        "Validate",
        "Node JS",
        "CICD Continuous Integration",
        "Event Bubbling Created",
        "JS",
        "API",
        "Created the Nodejs EXPRESS Server",
        "US",
        "jQuery Ajax",
        "AWS Worked",
        "POJO",
        "PDF",
        "J2EE Architectural Design Patterns SOAP Web Services",
        "MVC Spring Cache Spring Integration Spring Boot",
        "Created",
        "Gitlab",
        "AWS",
        "CA",
        "IDE Created",
        "Software Design Development Maintenance and Enhancement Implementation of Enterprise",
        "Managed Chef Cookbooks",
        "Handlebar JS",
        "CFT",
        "Boot Spring Cloud Setup",
        "Seattle",
        "React JS",
        "Quality Created Database",
        "Backbone JS",
        "Selenium WebDriver Grid",
        "JSX",
        "HTML",
        "java",
        "Tomcat Server",
        "SQL",
        "Amazon Web Services",
        "Express RouterModelController",
        "Bootstrap",
        "React Flux",
        "Test Driven Development",
        "MAVEN",
        "Kerberos Implemented Kafka Security Features",
        "the Cassandra Database",
        "Worked on React Js",
        "Hive",
        "CICD",
        "WebLogic WebSphere JBoss",
        "Pramati Tomcat Expertise",
        "NETFLIX",
        "Hive connectors Used Storm and Kafka Services",
        "Test NG",
        "Regression",
        "Rational Rose Created Servlets",
        "SQS",
        "NetBeans jQuery Visual Source Safe CVS SVN",
        "Backend",
        "JBoss Application Server",
        "Maven",
        "Build",
        "lJavaspan",
        "Selenium WebDriver Automation Framework",
        "JavaScript",
        "Worked on JDK 8",
        "TestNG",
        "Availability Agility",
        "UI",
        "Selenium WebDriver Involved",
        "WebSphere Commerce",
        "JSP Servlets",
        "Continuous Integration",
        "Created JSP JavaScript JQUERY",
        "Selenium WebDriver",
        "SVN",
        "CSS",
        "NodeJS for Relationship Mangers Worked",
        "Restful Web Services",
        "Java Message Service",
        "Data Access Object Developed Flex Custom",
        "REST",
        "Tomcat",
        "Performed Verification",
        "Angular with Bootstrap",
        "Worked on Software Development Life Cycle",
        "Nodejs Server",
        "Socketio",
        "Application",
        "Responsible for Writing Hibernate",
        "Amazon CloudFront Deployment",
        "Stream Installed Ranger",
        "jQuery with Bootstrap",
        "DNS"
    ],
    "experience": "Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS HTML5 CSS3 DHTML XML XSLT AJAX jQuery JSON Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple   Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon CloudFront Deployment performance scalability finetuning webapplication servers like WebLogic WebSphere JBoss and Pramati Tomcat Expertise in Spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP Java J2EE Servlets EJB JPA WebSphere Commerce Hibernate Spring Framework Jasper Reports Server Ext js JSP JMS Struts XML Eclipse NetBeans jQuery Visual Source Safe CVS SVN JDBC JNDI JIRA ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Web flow Spring Data JPA JSF ICE faces HTML and Java Scripts Expertise in developing Microservices using Spring Boot and Node JS to build more physically separated modular applications which will improve scalability Availability Agility of application Experience and familiarity building modern Spring applications with Spring Boot Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Experience in making Junit and Test NG test cases and executed as part of auto build process from Jenkins Jobs Hands on experience in designing and implementation of Selenium WebDriver Automation Framework for Smoke test and Regression test using TestNG Experience in developing end to end automation using Selenium WebDriver Grid POM Junit TestNG Cucumber Object Repository Web Services REST SOAP Excellent knowledge and experience in SQL queries PLSQL stored procedures functions and triggers to interact with SQL MySQL Oracle databases Experience in Maven pomxml and as CICD tool Jenkins CI and Configured Log4j for logging mechanism Authorized to work in the US for any employer Work Experience Sr Java Developer Boeing Chicago IL June 2018 to Present As a Java Developer on the project worked with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer Amazon Seattle WA February 2016 to June 2018 As a java developer involved in creating a reusable component using React JS for DOM Manipulation also migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appender minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Java Developer Caf Coffee Day Bengaluru Karnataka May 2013 to June 2015 Designed and developed the REST based Microservices using the Spring Boot Spring Data with JPA Java Persistence API and deployed Microservices onto Docker also created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Redux for state management to store the whole state of the app in an immutable object tree Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Developed a single page mobile first cross devicecross browser web application for real time location sharing utilizing Angular JS and JavaScript API Coded extensively in jQuery with Bootstrap to make rich Internet web pages and created custom date picker on the website Created the Nodejs EXPRESS Server combined with Socketio to build MVC framework from frontend side AngularJS to backend MongoDB to provide broadcast service as well as chatting service Build REST web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery Ajax calls Created both Manual and Automation Test Scripts using Selenium WebDriver and JAVA Technologies Eclipse IDE Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Education Masters in Computer Information Science Wayne State University Detroit MI August 2015 to May 2017 Skills Java Spring Java J2Ee Hibernate",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Boeing",
        "Chicago",
        "IL",
        "years",
        "work",
        "experience",
        "Software",
        "Design",
        "Development",
        "Maintenance",
        "Enhancement",
        "Implementation",
        "Enterprise",
        "applications",
        "Java",
        "J2EE",
        "technologies",
        "ObjectOriented",
        "Programming",
        "skills",
        "knowledge",
        "J2EE",
        "Architectural",
        "Design",
        "Patterns",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "JAXRPC",
        "REST",
        "e",
        "Frame",
        "work",
        "Struts",
        "Servlets",
        "JSP",
        "JSF",
        "JMS",
        "EJB",
        "Hibernate",
        "Experience",
        "Web",
        "Service",
        "Applications",
        "User",
        "Interface",
        "UI",
        "Technologies",
        "Object",
        "Oriented",
        "JavaScript",
        "JavaScript",
        "UI",
        "LibrariesFrameworks",
        "Angular",
        "JS",
        "Angular",
        "React",
        "JS",
        "Node",
        "JS",
        "HTML5",
        "CSS3",
        "DHTML",
        "XML",
        "XSLT",
        "AJAX",
        "jQuery",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Simple",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "CloudFront",
        "Deployment",
        "performance",
        "scalability",
        "webapplication",
        "servers",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "Pramati",
        "Tomcat",
        "Expertise",
        "Spring",
        "framework",
        "Spring",
        "IoC",
        "Spring",
        "DAO",
        "support",
        "Spring",
        "ORM",
        "Spring",
        "Microservices",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Spring",
        "MVC",
        "Spring",
        "Cache",
        "Spring",
        "Integration",
        "Spring",
        "Boot",
        "Spring",
        "REST",
        "Expertise",
        "applications",
        "Restful",
        "Web",
        "Services",
        "SOAP",
        "Java",
        "J2EE",
        "Servlets",
        "EJB",
        "JPA",
        "WebSphere",
        "Commerce",
        "Hibernate",
        "Spring",
        "Framework",
        "Jasper",
        "Reports",
        "Server",
        "Ext",
        "JSP",
        "JMS",
        "Struts",
        "XML",
        "Eclipse",
        "NetBeans",
        "jQuery",
        "Visual",
        "Source",
        "Safe",
        "CVS",
        "SVN",
        "JDBC",
        "JNDI",
        "JIRA",
        "ANT",
        "Maven",
        "IReport",
        "Apache",
        "Tiles",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Web",
        "flow",
        "Spring",
        "Data",
        "JPA",
        "JSF",
        "ICE",
        "HTML",
        "Java",
        "Scripts",
        "Expertise",
        "Microservices",
        "Spring",
        "Boot",
        "Node",
        "JS",
        "applications",
        "scalability",
        "Availability",
        "Agility",
        "application",
        "Experience",
        "familiarity",
        "Spring",
        "applications",
        "Spring",
        "Boot",
        "Experience",
        "delivery",
        "Continuous",
        "Integration",
        "CDCI",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "AWS",
        "Experience",
        "Junit",
        "Test",
        "NG",
        "test",
        "cases",
        "part",
        "auto",
        "build",
        "process",
        "Jenkins",
        "Jobs",
        "Hands",
        "experience",
        "designing",
        "implementation",
        "Selenium",
        "WebDriver",
        "Automation",
        "Framework",
        "Smoke",
        "test",
        "Regression",
        "test",
        "TestNG",
        "Experience",
        "end",
        "automation",
        "Selenium",
        "WebDriver",
        "Grid",
        "POM",
        "Junit",
        "TestNG",
        "Cucumber",
        "Object",
        "Repository",
        "Web",
        "Services",
        "REST",
        "Excellent",
        "knowledge",
        "experience",
        "SQL",
        "queries",
        "procedures",
        "functions",
        "triggers",
        "SQL",
        "MySQL",
        "Oracle",
        "Experience",
        "Maven",
        "pomxml",
        "CICD",
        "tool",
        "Jenkins",
        "CI",
        "Configured",
        "Log4j",
        "mechanism",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Boeing",
        "Chicago",
        "IL",
        "June",
        "Present",
        "Java",
        "Developer",
        "project",
        "JavaScript",
        "ES6",
        "React",
        "Redux",
        "Saga",
        "services",
        "HTML5CSS3SASSBootstrap",
        "Gitlab",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Redux",
        "Sagas",
        "actions",
        "reducers",
        "API",
        "calls",
        "redux",
        "saga",
        "middleware",
        "redux",
        "application",
        "state",
        "redux",
        "actions",
        "Ajax",
        "JSON",
        "JavaScript",
        "functions",
        "User",
        "selections",
        "radio",
        "button",
        "dropdown",
        "menu",
        "selections",
        "cookie",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Spring",
        "Boot",
        "microservices",
        "CSS",
        "templates",
        "use",
        "pages",
        "website",
        "CSS",
        "background",
        "text",
        "border",
        "margin",
        "padding",
        "table",
        "TestNG",
        "white",
        "box",
        "testing",
        "application",
        "test",
        "conditionstest",
        "data",
        "experience",
        "Keyword",
        "Driven",
        "Data",
        "Driven",
        "Hybrid",
        "framework",
        "Selenium",
        "Web",
        "Driver",
        "Jenkins",
        "web",
        "services",
        "CICD",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "goals",
        "code",
        "quality",
        "metrics",
        "topics",
        "Kafka",
        "cluster",
        "environment",
        "Kafka",
        "cluster",
        "Kerberos",
        "Kafka",
        "Security",
        "Features",
        "SSL",
        "grainfines",
        "security",
        "Kerberos",
        "users",
        "groups",
        "security",
        "experience",
        "Firefox",
        "Addons",
        "Selenium",
        "IDE",
        "Firebug",
        "Fire",
        "Path",
        "Selenium",
        "Builder",
        "frameworks",
        "Reactjs",
        "highquality",
        "components",
        "Frontend",
        "solution",
        "tables",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "functions",
        "application",
        "packages",
        "Inserts",
        "updates",
        "database",
        "Stored",
        "Procedures",
        "User",
        "functions",
        "Views",
        "Error",
        "Handling",
        "Stored",
        "Procedures",
        "SQL",
        "objects",
        "Modified",
        "Java",
        "REST",
        "Spring",
        "Framework",
        "application",
        "persistence",
        "layer",
        "Hibernate",
        "Hibernate",
        "Spring",
        "Cassandra",
        "Database",
        "DAO",
        "Java",
        "persistence",
        "layer",
        "application",
        "migration",
        "Cassandra",
        "Spark",
        "data",
        "Cassandra",
        "Cluster",
        "Customized",
        "Spring",
        "Multi",
        "Action",
        "operations",
        "spring",
        "Spring",
        "JDBC",
        "frameworks",
        "MVC",
        "DB",
        "interaction",
        "application",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Requirement",
        "analysis",
        "Design",
        "Development",
        "Testing",
        "Maintenance",
        "Used",
        "AJAX",
        "JQUERY",
        "JSON",
        "technologies",
        "Asynchronous",
        "Http",
        "requests",
        "JavaScript",
        "TDD",
        "approach",
        "environment",
        "unit",
        "testing",
        "useracceptance",
        "Integration",
        "tests",
        "JUNIT",
        "TESTNG",
        "Selenium",
        "tests",
        "selenium",
        "tests",
        "testing",
        "executor",
        "service",
        "actors",
        "documents",
        "components",
        "Angular",
        "application",
        "scratch",
        "libraries",
        "applications",
        "functionality",
        "legacy",
        "application",
        "components",
        "Angular",
        "typescript",
        "Configured",
        "Selenium",
        "Web",
        "Driver",
        "TestNG",
        "Maven",
        "tool",
        "Selenium",
        "automation",
        "scripts",
        "TestNG",
        "release",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "RESTAPIs",
        "Spring",
        "Boot",
        "Microservices",
        "Hibernate",
        "Criteria",
        "API",
        "filtration",
        "rules",
        "conditions",
        "persistence",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "instance",
        "security",
        "groups",
        "load",
        "balancers",
        "Route",
        "SNS",
        "architecture",
        "Managed",
        "Chef",
        "Cookbooks",
        "system",
        "operations",
        "AWS",
        "Cloud",
        "management",
        "applications",
        "MVC",
        "frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Group",
        "AutoScaling",
        "RDS",
        "Cloud",
        "Formation",
        "templates",
        "Hibernate",
        "Object",
        "Relational",
        "Mapping",
        "tool",
        "data",
        "persistence",
        "Developed",
        "Spring",
        "REST",
        "web",
        "services",
        "applications",
        "organization",
        "data",
        "Json",
        "Jackson",
        "library",
        "REST",
        "web",
        "services",
        "Web",
        "Application",
        "Angular",
        "JS",
        "Bootstrap",
        "CSS",
        "Web",
        "Services",
        "Json",
        "data",
        "CA",
        "groups",
        "load",
        "customer",
        "application",
        "analysis",
        "needs",
        "goals",
        "development",
        "implementation",
        "application",
        "systems",
        "business",
        "personnel",
        "AWS",
        "cloud",
        "resources",
        "troubleshooting",
        "EC2",
        "instances",
        "S3",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "Elastic",
        "Search",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "AWS",
        "Route",
        "traffic",
        "regions",
        "AWS",
        "Security",
        "Groups",
        "Configuring",
        "AWS",
        "EC2",
        "instances",
        "Java",
        "API",
        "Amazon",
        "SQS",
        "emails",
        "micro",
        "services",
        "Spring",
        "Sleuth",
        "Config",
        "Server",
        "NETFLIX",
        "OSS",
        "Eureka",
        "Hystrix",
        "Zuul",
        "containerization",
        "tools",
        "Docker",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "docker",
        "host",
        "JDK",
        "code",
        "interfaces",
        "default",
        "methods",
        "interfaces",
        "filters",
        "Stream",
        "Installed",
        "Ranger",
        "environments",
        "Level",
        "security",
        "Kafka",
        "Broker",
        "application",
        "ReactJS",
        "Nextjs",
        "Express",
        "NodeJS",
        "Relationship",
        "Mangers",
        "Oracle",
        "PLSQL",
        "database",
        "HQL",
        "query",
        "data",
        "database",
        "Annotations",
        "Hibernate",
        "mapping",
        "Apache",
        "Camel",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "email",
        "notifications",
        "employee",
        "notifications",
        "GIT",
        "Version",
        "Control",
        "iText",
        "pdf",
        "form",
        "tree",
        "unit",
        "testing",
        "Test",
        "NG",
        "GIT",
        "version",
        "management",
        "JIRA",
        "management",
        "system",
        "user",
        "interfaces",
        "JSP",
        "Servlets",
        "Spring",
        "framework",
        "DAO",
        "layer",
        "Hibernate",
        "system",
        "performance",
        "analysis",
        "design",
        "UML",
        "uses",
        "cases",
        "domain",
        "model",
        "Activity",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "generation",
        "engineering",
        "tool",
        "Rational",
        "Rose",
        "Created",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "Enterprise",
        "Java",
        "Bean",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "Flex",
        "Custom",
        "Events",
        "communication",
        "components",
        "Event",
        "error",
        "handling",
        "framework",
        "business",
        "validation",
        "errors",
        "application",
        "error",
        "IFP",
        "error",
        "table",
        "J2EE",
        "design",
        "patterns",
        "project",
        "Factory",
        "Singleton",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Flex",
        "Custom",
        "Events",
        "communication",
        "components",
        "Event",
        "JavaScript",
        "data",
        "entry",
        "form",
        "form",
        "information",
        "stamp",
        "PDF",
        "form",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "February",
        "June",
        "developer",
        "component",
        "React",
        "JS",
        "DOM",
        "Manipulation",
        "environment",
        "applications",
        "Java8",
        "Tomcat",
        "Test",
        "Server",
        "Tomcat",
        "Server",
        "domain",
        "version",
        "MVC",
        "architecture",
        "Tomcat",
        "deployment",
        "purposes",
        "build",
        "instructions",
        "docs",
        "production",
        "build",
        "tags",
        "applications",
        "TestNG",
        "automation",
        "framework",
        "functions",
        "application",
        "Regression",
        "Test",
        "functionality",
        "Spring",
        "MVC",
        "Hibernate",
        "REST",
        "services",
        "end",
        "feature",
        "React",
        "JS",
        "server",
        "DOM",
        "browser",
        "page",
        "S3",
        "buckets",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "Glacier",
        "storage",
        "backup",
        "AWS",
        "creation",
        "JUnit",
        "Unit",
        "Test",
        "Cases",
        "Java",
        "class",
        "application",
        "mocking",
        "framework",
        "Mockito",
        "Test",
        "Driven",
        "Development",
        "technique",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "Spring",
        "Boot",
        "building",
        "services",
        "Spring",
        "application",
        "configuration",
        "installing",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Kafka",
        "cluster",
        "nodes",
        "brokers",
        "Integrated",
        "Kafka",
        "Flume",
        "sand",
        "box",
        "Environment",
        "Kafka",
        "source",
        "Kafka",
        "sink",
        "Created",
        "Automation",
        "script",
        "Selenium",
        "WebDriver",
        "scripts",
        "browsers",
        "JavaScript",
        "slider",
        "animations",
        "calendar",
        "widgets",
        "Web",
        "APIs",
        "Media",
        "Type",
        "Formatter",
        "XML",
        "format",
        "Media",
        "Type",
        "Formatter",
        "web",
        "pages",
        "components",
        "Angular",
        "components",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "app",
        "book",
        "reading",
        "capability",
        "HTML5",
        "Sencha",
        "services",
        "FlashFlex",
        "Babel",
        "Transpile",
        "ES6",
        "JSX",
        "code",
        "JavaScript",
        "browser",
        "JERSEY",
        "framework",
        "JAXRS",
        "Java",
        "API",
        "XML",
        "RESTful",
        "Service",
        "Developed",
        "SQL",
        "procedures",
        "statements",
        "data",
        "database",
        "Eclipse",
        "Integrated",
        "Development",
        "Environment",
        "Clear",
        "Case",
        "Version",
        "Control",
        "Project",
        "Configuration",
        "Management",
        "Spring",
        "Configuration",
        "Annotation",
        "configuration",
        "hibernate",
        "JPA",
        "Annotation",
        "POJO",
        "classes",
        "Spring",
        "Annotation",
        "spring",
        "boot",
        "application",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Created",
        "REST",
        "APIs",
        "Microservices",
        "EJB",
        "Express",
        "architecture",
        "Spring",
        "Features",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "AOP",
        "Aspect",
        "Oriented",
        "Programming",
        "Hibernate",
        "ORM",
        "Object",
        "Relational",
        "Mapping",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Java",
        "Scala",
        "Microservices",
        "Enterprise",
        "Web",
        "application",
        "AWS",
        "Lambda",
        "services",
        "process",
        "EBS",
        "Snapshots",
        "day",
        "production",
        "environment",
        "cloud",
        "Deployed",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Integrated",
        "delivery",
        "CI",
        "CD",
        "Jenkins",
        "Ansible",
        "Configured",
        "Route",
        "CFT",
        "templates",
        "DNS",
        "mapping",
        "AWS",
        "servers",
        "issues",
        "load",
        "auto",
        "scaling",
        "groups",
        "Route",
        "QTP",
        "Scripts",
        "source",
        "Selenium",
        "WebDriver",
        "profits",
        "company",
        "Quality",
        "Created",
        "Database",
        "Influx",
        "DB",
        "Interface",
        "Kafka",
        "measurements",
        "Databases",
        "Kafka",
        "Backup",
        "Index",
        "Log4j",
        "appender",
        "minimized",
        "logs",
        "Pointed",
        "Ambari",
        "server",
        "logs",
        "NAS",
        "Storage",
        "frontend",
        "application",
        "React",
        "Js",
        "FLUX",
        "architecture",
        "teams",
        "productivity",
        "use",
        "React",
        "Js",
        "React",
        "Flux",
        "architecture",
        "Single",
        "Page",
        "Applications",
        "SPAs",
        "microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "endpoints",
        "Tiles",
        "Plugin",
        "struts",
        "JSP",
        "page",
        "layouts",
        "menus",
        "project",
        "UI",
        "Generic",
        "XHTML",
        "face",
        "templates",
        "data",
        "tables",
        "JSF",
        "Interacted",
        "business",
        "teams",
        "database",
        "schema",
        "tables",
        "queries",
        "procedures",
        "database",
        "Installed",
        "Kafka",
        "manager",
        "consumer",
        "lags",
        "Kafka",
        "Metrics",
        "topics",
        "Partitions",
        "test",
        "scripts",
        "changes",
        "objects",
        "applications",
        "GUI",
        "testing",
        "environment",
        "Selenium",
        "WebDriver",
        "issues",
        "TEST",
        "server",
        "environments",
        "reports",
        "Crystal",
        "Reports",
        "Developed",
        "applications",
        "CICD",
        "techniques",
        "Performed",
        "Verification",
        "validation",
        "process",
        "code",
        "use",
        "JavaScript",
        "testing",
        "frameworks",
        "Jasmine",
        "Karma",
        "Developed",
        "API",
        "RWAs",
        "Angular",
        "Bootstrap",
        "APIs",
        "JavaScript",
        "library",
        "D3js",
        "documents",
        "data",
        "approach",
        "DOM",
        "manipulation",
        "Subversion",
        "SVN",
        "configuration",
        "management",
        "tool",
        "code",
        "repository",
        "Work",
        "project",
        "buildscript",
        "MAVEN",
        "Tomcat",
        "logging",
        "time",
        "JMS",
        "Java",
        "Mailing",
        "Service",
        "API",
        "notifications",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "problems",
        "Java",
        "Developer",
        "Caf",
        "Coffee",
        "Day",
        "Bengaluru",
        "Karnataka",
        "May",
        "June",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JPA",
        "Java",
        "Persistence",
        "API",
        "Microservices",
        "Docker",
        "RFP",
        "microservice",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "components",
        "JSX",
        "Reactjs",
        "user",
        "interface",
        "view",
        "web",
        "packbuilt",
        "tool",
        "BabelLoader",
        "JSX",
        "ES6",
        "ES5",
        "Redux",
        "state",
        "management",
        "state",
        "app",
        "object",
        "tree",
        "UI",
        "modules",
        "Backbone",
        "JS",
        "dependency",
        "JS",
        "combination",
        "Handlebar",
        "JS",
        "Cloudwatch",
        "AWS",
        "cloud",
        "resources",
        "applications",
        "AWS",
        "alarm",
        "notification",
        "service",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "AWS",
        "CloudFormation",
        "custom",
        "VPC",
        "subnets",
        "NAT",
        "deployment",
        "Web",
        "applications",
        "database",
        "templates",
        "multistore",
        "state",
        "logic",
        "source",
        "truth",
        "Actions",
        "Reducers",
        "components",
        "components",
        "applications",
        "Reactjs",
        "pages",
        "client",
        "server",
        "codebase",
        "page",
        "mobile",
        "first",
        "cross",
        "devicecross",
        "browser",
        "web",
        "application",
        "time",
        "location",
        "sharing",
        "Angular",
        "JS",
        "JavaScript",
        "API",
        "jQuery",
        "Bootstrap",
        "Internet",
        "web",
        "pages",
        "custom",
        "date",
        "picker",
        "website",
        "Nodejs",
        "EXPRESS",
        "Server",
        "Socketio",
        "MVC",
        "framework",
        "frontend",
        "side",
        "broadcast",
        "service",
        "service",
        "Build",
        "REST",
        "web",
        "service",
        "Nodejs",
        "Server",
        "backend",
        "requests",
        "frontend",
        "jQuery",
        "Ajax",
        "calls",
        "Manual",
        "Automation",
        "Test",
        "Scripts",
        "Selenium",
        "WebDriver",
        "JAVA",
        "Technologies",
        "Eclipse",
        "IDE",
        "ReactJS",
        "components",
        "Redux",
        "Pattern",
        "solution",
        "Application",
        "state",
        "Reactjs",
        "development",
        "web",
        "application",
        "datamodel",
        "database",
        "services",
        "controller",
        "view",
        "scope",
        "Backbone",
        "JS",
        "set",
        "datastructuring",
        "models",
        "collections",
        "user",
        "interface",
        "views",
        "URLs",
        "primitives",
        "MVC",
        "work",
        "flow",
        "design",
        "JSP",
        "JavaScript",
        "JQUERY",
        "HTML",
        "collection",
        "classes",
        "Array",
        "List",
        "Hash",
        "Map",
        "Hash",
        "Table",
        "Hash",
        "Set",
        "JAXB",
        "JBoss",
        "Application",
        "Server",
        "Java",
        "Platform",
        "Enterprise",
        "Edition",
        "Java",
        "EE",
        "Spring",
        "MVC",
        "model",
        "integration",
        "frontend",
        "request",
        "action",
        "controller",
        "Use",
        "case",
        "Sequence",
        "Class",
        "diagrams",
        "UMLRational",
        "Rose",
        "Spring",
        "MVC",
        "business",
        "logic",
        "components",
        "core",
        "framework",
        "classes",
        "web",
        "services",
        "JAXWS",
        "use",
        "applications",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "requirement",
        "analysis",
        "client",
        "interaction",
        "Hibernate",
        "mapping",
        "XML",
        "Files",
        "HQL",
        "Education",
        "Masters",
        "Computer",
        "Information",
        "Science",
        "Wayne",
        "State",
        "University",
        "Detroit",
        "MI",
        "August",
        "May",
        "Skills",
        "Java",
        "Spring",
        "Java",
        "Hibernate"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:34:26.352975",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Boeing Chicago IL Around 6 years of competitive work experience in Software Design Development Maintenance and Enhancement Implementation of Enterprise applications using Java J2EE technologies with strong ObjectOriented Programming skills Proficient and strong working knowledge of J2EE Architectural Design Patterns SOAP Web Services JAXWS JAXRPC REST e Frame work Struts Servlets JSP JSF JMS EJB Hibernate Having strong Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS HTML5 CSS3 DHTML XML XSLT AJAX jQuery JSON Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple dB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon CloudFront Deployment performance scalability finetuning webapplication servers like WebLogic WebSphere JBoss and Pramati Tomcat Expertise in Spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP Java J2EE Servlets EJB JPA WebSphere Commerce Hibernate Spring Framework Jasper Reports Server Ext js JSP JMS Struts XML Eclipse NetBeans jQuery Visual Source Safe CVS SVN JDBC JNDI JIRA ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Web flow Spring Data JPA JSF ICE faces HTML and Java Scripts Expertise in developing Microservices using Spring Boot and Node JS to build more physically separated modular applications which will improve scalability Availability Agility of application Experience and familiarity building modern Spring applications with Spring Boot Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Experience in making Junit and Test NG test cases and executed as part of auto build process from Jenkins Jobs Hands on experience in designing and implementation of Selenium WebDriver Automation Framework for Smoke test and Regression test using TestNG Experience in developing end to end automation using Selenium WebDriver Grid POM Junit TestNG Cucumber Object Repository Web Services REST SOAP Excellent knowledge and experience in SQL queries PLSQL stored procedures functions and triggers to interact with SQL MySQL Oracle databases Experience in Maven pomxml and as CICD tool Jenkins CI and Configured Log4j for logging mechanism Authorized to work in the US for any employer Work Experience Sr Java Developer Boeing Chicago IL June 2018 to Present As a Java Developer on the project worked with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Extensive experience in working on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Extensive experience in using Firefox Addons like Selenium IDE Firebug Fire Path Selenium Builder Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form Java Developer Amazon Seattle WA February 2016 to June 2018 As a java developer involved in creating a reusable component using React JS for DOM Manipulation also migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appender minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Java Developer Caf Coffee Day Bengaluru Karnataka May 2013 to June 2015 Designed and developed the REST based Microservices using the Spring Boot Spring Data with JPA Java Persistence API and deployed Microservices onto Docker also created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Built components using JSX in Reactjs for rich user interface view used web packbuilt tool and BabelLoader for transpiling JSX and ES6 to ES5 Redux for state management to store the whole state of the app in an immutable object tree Created responsive UI modules using Backbone JS with hard coded dependency of underscore JS in combination with Handlebar JS for templating Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Designed AWS CloudFormation templates to create custom sized VPC subnets NAT to ensure successful deployment of Web applications and database templates Managed multistore state logic to maintain single source of truth and created Actions Reducers dumb components and smart components Built applications using Reactjs which allowed us to render pages on both the client and server using the same codebase Developed a single page mobile first cross devicecross browser web application for real time location sharing utilizing Angular JS and JavaScript API Coded extensively in jQuery with Bootstrap to make rich Internet web pages and created custom date picker on the website Created the Nodejs EXPRESS Server combined with Socketio to build MVC framework from frontend side AngularJS to backend MongoDB to provide broadcast service as well as chatting service Build REST web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery Ajax calls Created both Manual and Automation Test Scripts using Selenium WebDriver and JAVA Technologies Eclipse IDE Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Used Reactjs in development of the web application to bind the datamodel that is being retrieved from a database through services provided in a controller to the view using scope Used Backbone JS to utilize its minimal set of datastructuring models and collections and user interface views and URLs primitives for building MVC work flow design Created JSP JavaScript JQUERY HTML extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Worked with JAXB used JBoss Application Server that implements the Java Platform Enterprise Edition Java EE Involved in Spring MVC model integration for frontend request action controller Developed the Use case Sequence and Class diagrams using UMLRational Rose used Spring MVC to decouple business logic and view components involved in developingcoding the core framework classes and developed web services using JAXWS to make use of existing applications Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Involved in requirement analysis client interaction Responsible for Writing Hibernate mapping XML Files HQL Education Masters in Computer Information Science Wayne State University Detroit MI August 2015 to May 2017 Skills Java Spring Java J2Ee Hibernate",
    "unique_id": "1913dd0f-29a6-4437-9511-e8987be76472"
}