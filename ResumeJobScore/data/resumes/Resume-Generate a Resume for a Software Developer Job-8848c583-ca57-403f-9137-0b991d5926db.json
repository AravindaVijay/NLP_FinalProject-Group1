{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Nike Hillsboro OR Authorized to work in the US for any employer Work Experience Sr Python Developer Nike Hillsboro OR March 2017 to Present Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Django view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack AGILE SCRUM practices and attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and setting weekly goals Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design etc Developed MEAN Stack from scratch including MongoDB server setup and Express JS server development Used automation Jenkins for continuous integration on Amazon EC2 Hands on Experience in AWS Cloud in various AWS Services such as Route 53 Domain configuration Designed and developed the framework to consume the web services hosted in Amazon EC2 Created monitors alarms and notifications for EC2 hosts using Cloud watch Developed Python scripts to execute Stored Procedures and load data from various forms of CSV files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 2735 Python Django 11020 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting MongoDB Amazon Web Services AWS Python Developer Blackhawk Harrisburg PA Dec 2014 to Mar 2017 Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Wrote Automation Test cases using Robot Framework Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Responsible for all client side UI Validation and implementing Business logic based on user selection AngularJS 2 Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote Python modules to view and connect the Apache Cassandra instance Responsible for Debugging and Troubleshooting issues Involved in debugging the applications monitored on JIRA using agile methodology Setting up network environments using TCPIP DNS DHCP and proxy Involved in postproduction support for solving complex tickets Resolved user problems in a timely and accurate manner as a member of the EndUser support team Involved in presenting demos to the clients and also reporting the daily and weekly status to the Project manager Involved in assigning the tasks to the development team Created Windows Service to Database Migration Involved in handling the developing team and mentoring the junior developers Involved in creating the database modelling to the project and wrote queries for retrieving data from backend Deployed the project into Heroku using GIT version control system Designed RESTful XML web service for handling AJAX requests Involved in deploying the code into Amazon Web Server using BOTO API Designed and developed Application Module with Windows Service and C Reorganized couple of windows service with WCF Experience in managing largescale geographicallydistributed database systems including relational Oracle MySQL and NoSQL MongoDB systems Familiar with MongoDB clusters performance tuning backup and recovery Manage runtime configuration processes scaling backup and recovery monitoring and performance tuning for production MongoDB instances Used Python to integrate third party application on windows Used embedded python to interface code like convert data values from C to Python Perform a function call to a python interface routine using the converted values and convert the data values from the call from python to C Developed tested and debugged software tools utilized by clients and internal customers Good coding experience with scripting languages like Perl Ruby and Bash Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Built a comprehensive PERL script which would call the required ANT scripts and notify the build distribution team in case of Build errors or Completion of the builds Coded test programs and evaluated existing engineering processes Environment Python 30 Django 17 Meteor Framework AngularJS 2Java Script Coffee Scripting LESS HTML Angular JS JSON AJAX XML CSS SQL MySQL NoSql MongoDB PySpark Hadoop Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm PHP HTML5 CSS3 MYSQL LAMPPUPPET and CHEF Python Developer AgFirst Farm Credit Bank Columbia SC September 2012 to 2014 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework including Tastypie to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Provided fault isolation and root cause analysis for technical problems Highly efficient in handling multitasking issues in a fast paced environment Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Business Logic using Python on Django Web Framework Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Wrote validation scripts in SQL to validate data loading Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django PYQt Python SDK AWS Flash PHP PyQuery DOM Bootstrap XML HTML5 JavaScript Angularjs JSON Rest Apache Web Server Git Hub MySQL LINUX Python Developer Dart Dallas TX May 2010 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application For the implementation of batch job scheduling the concepts of multithreading and concurrency were practiced Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Deployed applications to Witbe server also experience in creating host instances Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Witbe Tool Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Education Bachelors",
    "entities": [
        "Python Flask",
        "Flashvars",
        "AJAX",
        "GUI",
        "Oracle MySQL",
        "UI Validation",
        "Witbe Tool",
        "Amazon EC2 Hands",
        "Interfacing",
        "Heroku",
        "Developed Hadoop",
        "Model View Control MVC",
        "Hadoop",
        "XML",
        "Setup Created",
        "Flask Developed",
        "Front Arena Worked",
        "JIRA",
        "Maintained",
        "Shell",
        "AWS Services",
        "EndUser",
        "TX",
        "Amazon",
        "Consumed",
        "Python",
        "SQL Server",
        "the Single Page Application",
        "Amazon EC2 Created",
        "Developed",
        "C Developed",
        "Work Experience Sr Python Developer Nike Hillsboro",
        "Amazon Web Services AWS Python Developer Blackhawk Harrisburg PA Dec",
        "Dallas",
        "Django",
        "Database Migration Involved",
        "Developed Business Logic",
        "Meteor Framework",
        "Git",
        "Application Module",
        "HTML5",
        "Bash Responsible",
        "AGILE",
        "API RESTful Web Service",
        "Perl Ruby",
        "Flask",
        "Views",
        "GitHub Utilized Agile",
        "GIT",
        "Nose Test Wrote Automation Test",
        "CSV",
        "API",
        "US",
        "Developed Merge",
        "Created",
        "the Apache Cassandra instance Responsible for Debugging and Troubleshooting issues Involved",
        "Application For the implementation of",
        "Oracle",
        "Coded",
        "SQL Server Developed Python Script",
        "Created Windows Service",
        "SQL",
        "GitHub",
        "lPythonspan",
        "Nginx",
        "Windows Service",
        "Amazon AWS",
        "Chef for Cloud Automation Automated",
        "google analytics",
        "SQS",
        "Build",
        "JavaScript Created",
        "Performed",
        "ANT",
        "Microsoft",
        "Created Business Logic",
        "Windows Created PyUnit",
        "NoSql MongoDB PySpark Hadoop Bootstrap Restful Web Services",
        "CSS",
        "CMS",
        "Python PHP C",
        "Developed UI",
        "NoSQL",
        "SPRINT"
    ],
    "experience": "Experience Sr Python Developer Nike Hillsboro OR March 2017 to Present Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Django view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack AGILE SCRUM practices and attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and setting weekly goals Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design etc Developed MEAN Stack from scratch including MongoDB server setup and Express JS server development Used automation Jenkins for continuous integration on Amazon EC2 Hands on Experience in AWS Cloud in various AWS Services such as Route 53 Domain configuration Designed and developed the framework to consume the web services hosted in Amazon EC2 Created monitors alarms and notifications for EC2 hosts using Cloud watch Developed Python scripts to execute Stored Procedures and load data from various forms of CSV files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 2735 Python Django 11020 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting MongoDB Amazon Web Services AWS Python Developer Blackhawk Harrisburg PA Dec 2014 to Mar 2017 Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Wrote Automation Test cases using Robot Framework Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Responsible for all client side UI Validation and implementing Business logic based on user selection AngularJS 2 Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote Python modules to view and connect the Apache Cassandra instance Responsible for Debugging and Troubleshooting issues Involved in debugging the applications monitored on JIRA using agile methodology Setting up network environments using TCPIP DNS DHCP and proxy Involved in postproduction support for solving complex tickets Resolved user problems in a timely and accurate manner as a member of the EndUser support team Involved in presenting demos to the clients and also reporting the daily and weekly status to the Project manager Involved in assigning the tasks to the development team Created Windows Service to Database Migration Involved in handling the developing team and mentoring the junior developers Involved in creating the database modelling to the project and wrote queries for retrieving data from backend Deployed the project into Heroku using GIT version control system Designed RESTful XML web service for handling AJAX requests Involved in deploying the code into Amazon Web Server using BOTO API Designed and developed Application Module with Windows Service and C Reorganized couple of windows service with WCF Experience in managing largescale geographicallydistributed database systems including relational Oracle MySQL and NoSQL MongoDB systems Familiar with MongoDB clusters performance tuning backup and recovery Manage runtime configuration processes scaling backup and recovery monitoring and performance tuning for production MongoDB instances Used Python to integrate third party application on windows Used embedded python to interface code like convert data values from C to Python Perform a function call to a python interface routine using the converted values and convert the data values from the call from python to C Developed tested and debugged software tools utilized by clients and internal customers Good coding experience with scripting languages like Perl Ruby and Bash Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Built a comprehensive PERL script which would call the required ANT scripts and notify the build distribution team in case of Build errors or Completion of the builds Coded test programs and evaluated existing engineering processes Environment Python 30 Django 17 Meteor Framework AngularJS 2Java Script Coffee Scripting LESS HTML Angular JS JSON AJAX XML CSS SQL MySQL NoSql MongoDB PySpark Hadoop Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm PHP HTML5 CSS3 MYSQL LAMPPUPPET and CHEF Python Developer AgFirst Farm Credit Bank Columbia SC September 2012 to 2014 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework including Tastypie to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Provided fault isolation and root cause analysis for technical problems Highly efficient in handling multitasking issues in a fast paced environment Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Business Logic using Python on Django Web Framework Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Wrote validation scripts in SQL to validate data loading Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django PYQt Python SDK AWS Flash PHP PyQuery DOM Bootstrap XML HTML5 JavaScript Angularjs JSON Rest Apache Web Server Git Hub MySQL LINUX Python Developer Dart Dallas TX May 2010 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application For the implementation of batch job scheduling the concepts of multithreading and concurrency were practiced Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Deployed applications to Witbe server also experience in creating host instances Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Witbe Tool Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Education Bachelors",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Nike",
        "Hillsboro",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Nike",
        "Hillsboro",
        "March",
        "Present",
        "Responsibilities",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Experience",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "validation",
        "serverclient",
        "user",
        "experience",
        "platform",
        "server",
        "environment",
        "development",
        "production",
        "Nginx",
        "stack",
        "AGILE",
        "SCRUM",
        "practices",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "goals",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "Django",
        "ORM",
        "SQL",
        "SQL",
        "Server",
        "Developed",
        "Python",
        "Script",
        "files",
        "dropbox",
        "Amazon",
        "server",
        "Written",
        "Python",
        "Scripts",
        "loading",
        "data",
        "CSV",
        "files",
        "database",
        "tasks",
        "Confluence",
        "JIRA",
        "tickets",
        "experience",
        "Python",
        "Perl",
        "phases",
        "data",
        "processing",
        "pipeline",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "Apache",
        "SVN",
        "state",
        "application",
        "development",
        "process",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "Django",
        "Python",
        "Created",
        "Docker",
        "images",
        "Docker",
        "Hub",
        "tools",
        "Docker",
        "integration",
        "updates",
        "downtime",
        "UI",
        "phases",
        "exceptions",
        "data",
        "SQL",
        "Server",
        "database",
        "web",
        "pages",
        "exception",
        "statistics",
        "phase",
        "experience",
        "SQL",
        "queries",
        "procedures",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "Developed",
        "MEAN",
        "Stack",
        "scratch",
        "server",
        "setup",
        "Express",
        "JS",
        "server",
        "development",
        "automation",
        "Jenkins",
        "integration",
        "Amazon",
        "EC2",
        "Hands",
        "Experience",
        "AWS",
        "Cloud",
        "AWS",
        "Services",
        "Route",
        "Domain",
        "configuration",
        "framework",
        "web",
        "services",
        "Amazon",
        "EC2",
        "Created",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "watch",
        "Python",
        "scripts",
        "Procedures",
        "load",
        "data",
        "forms",
        "CSV",
        "files",
        "tables",
        "SQL",
        "Server",
        "database",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "Environment",
        "Python",
        "Python",
        "Django",
        "Django",
        "REST",
        "Framework",
        "Flask",
        "XML",
        "HTTP",
        "Ajax",
        "Bootstrap",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "Pandas",
        "Bugzilla",
        "GITHUB",
        "Java",
        "Script",
        "PLSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Shell",
        "Scripting",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Python",
        "Developer",
        "Blackhawk",
        "Harrisburg",
        "PA",
        "Dec",
        "Mar",
        "Responsibilities",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "unit",
        "test",
        "cases",
        "functionalities",
        "Nose",
        "Test",
        "Wrote",
        "Automation",
        "Test",
        "cases",
        "Robot",
        "Framework",
        "Amazon",
        "SQS",
        "work",
        "Amazon",
        "EC2",
        "nodes",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "addition",
        "Hadoop",
        "processing",
        "IT",
        "infrastructure",
        "customer",
        "data",
        "collection",
        "PySparkHadoop",
        "analytics",
        "Developed",
        "Hadoop",
        "integrations",
        "data",
        "ingestion",
        "data",
        "mapping",
        "data",
        "processing",
        "XML",
        "display",
        "options",
        "box",
        "description",
        "web",
        "page",
        "client",
        "side",
        "UI",
        "Validation",
        "Business",
        "logic",
        "user",
        "selection",
        "AngularJS",
        "Meteor",
        "framework",
        "Single",
        "Page",
        "Application",
        "development",
        "Wrote",
        "Python",
        "Apache",
        "Cassandra",
        "instance",
        "Debugging",
        "Troubleshooting",
        "issues",
        "applications",
        "JIRA",
        "methodology",
        "network",
        "environments",
        "TCPIP",
        "DNS",
        "DHCP",
        "proxy",
        "postproduction",
        "support",
        "tickets",
        "user",
        "problems",
        "manner",
        "member",
        "EndUser",
        "support",
        "team",
        "demos",
        "clients",
        "status",
        "Project",
        "manager",
        "tasks",
        "development",
        "team",
        "Windows",
        "Service",
        "Database",
        "Migration",
        "team",
        "developers",
        "database",
        "project",
        "queries",
        "data",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "code",
        "Amazon",
        "Web",
        "Server",
        "BOTO",
        "API",
        "Application",
        "Module",
        "Windows",
        "Service",
        "C",
        "couple",
        "windows",
        "service",
        "WCF",
        "Experience",
        "largescale",
        "database",
        "systems",
        "Oracle",
        "MySQL",
        "NoSQL",
        "MongoDB",
        "systems",
        "MongoDB",
        "clusters",
        "performance",
        "backup",
        "recovery",
        "Manage",
        "runtime",
        "configuration",
        "processes",
        "backup",
        "recovery",
        "monitoring",
        "performance",
        "production",
        "MongoDB",
        "instances",
        "Python",
        "party",
        "application",
        "windows",
        "python",
        "interface",
        "code",
        "data",
        "values",
        "C",
        "Python",
        "function",
        "call",
        "python",
        "interface",
        "routine",
        "values",
        "data",
        "values",
        "call",
        "python",
        "C",
        "software",
        "tools",
        "clients",
        "customers",
        "experience",
        "scripting",
        "languages",
        "Perl",
        "Ruby",
        "Bash",
        "Responsible",
        "specialization",
        "areas",
        "Chef",
        "Cloud",
        "Automation",
        "cloud",
        "deployments",
        "chef",
        "Python",
        "boto",
        "fabric",
        "AWS",
        "Cloud",
        "Formation",
        "Templates",
        "PERL",
        "script",
        "ANT",
        "scripts",
        "distribution",
        "team",
        "case",
        "Build",
        "errors",
        "Completion",
        "builds",
        "test",
        "programs",
        "engineering",
        "processes",
        "Environment",
        "Python",
        "Django",
        "Meteor",
        "Framework",
        "Script",
        "Coffee",
        "Scripting",
        "HTML",
        "JS",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "SQL",
        "MySQL",
        "NoSql",
        "MongoDB",
        "PySpark",
        "Hadoop",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "GitHub",
        "Linux",
        "PyCharm",
        "PHP",
        "HTML5",
        "CSS3",
        "MYSQL",
        "LAMPPUPPET",
        "CHEF",
        "Python",
        "Developer",
        "AgFirst",
        "Farm",
        "Credit",
        "Bank",
        "Columbia",
        "SC",
        "September",
        "Responsibilities",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "companys",
        "website",
        "Django",
        "framework",
        "Tastypie",
        "server",
        "applications",
        "Wrote",
        "Python",
        "code",
        "procedure",
        "automate",
        "processes",
        "Build",
        "test",
        "functionality",
        "production",
        "pipeline",
        "Python",
        "code",
        "bugs",
        "upgrades",
        "functionality",
        "fault",
        "isolation",
        "root",
        "analysis",
        "problems",
        "issues",
        "environment",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Developed",
        "app",
        "Python",
        "PHP",
        "C",
        "Circuit",
        "parameters",
        "performance",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Angularjs",
        "Twitter",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Perl",
        "Linux",
        "Windows",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "user",
        "interfaces",
        "HTML5",
        "JavaScript",
        "Git",
        "repository",
        "project",
        "GitHub",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "validation",
        "scripts",
        "SQL",
        "data",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Python",
        "SDK",
        "Flash",
        "PHP",
        "PyQuery",
        "DOM",
        "Bootstrap",
        "XML",
        "HTML5",
        "JavaScript",
        "Angularjs",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Git",
        "Hub",
        "MySQL",
        "LINUX",
        "Python",
        "Developer",
        "Dart",
        "Dallas",
        "TX",
        "May",
        "September",
        "Responsibilities",
        "build",
        "methodologies",
        "Witbe",
        "Tool",
        "Experience",
        "methodologies",
        "Python",
        "update",
        "manipulation",
        "file",
        "Python",
        "scripts",
        "tasks",
        "project",
        "team",
        "product",
        "acceptance",
        "test",
        "phase",
        "product",
        "development",
        "lifecycle",
        "Deploy",
        "Test",
        "cases",
        "Tool",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "projects",
        "sites",
        "Web",
        "portal",
        "Installed",
        "build",
        "manager",
        "agents",
        "queue",
        "builds",
        "Application",
        "implementation",
        "batch",
        "job",
        "concepts",
        "multithreading",
        "concurrency",
        "Installed",
        "Witbe",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "Experience",
        "troubleshooting",
        "code",
        "Data",
        "stage",
        "SQL",
        "procedures",
        "access",
        "data",
        "Oracle",
        "SQL",
        "server",
        "MYSQL",
        "system",
        "data",
        "management",
        "queries",
        "order",
        "performance",
        "Experience",
        "App",
        "pools",
        "web",
        "sites",
        "Python",
        "Features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Git",
        "repository",
        "GitHub",
        "project",
        "code",
        "part",
        "build",
        "deployment",
        "Experience",
        "setup",
        "office",
        "application",
        "Front",
        "Arena",
        "bug",
        "tracking",
        "tools",
        "BUGZILLA",
        "JIRA",
        "Deployed",
        "applications",
        "Witbe",
        "server",
        "experience",
        "host",
        "instances",
        "documentation",
        "projects",
        "development",
        "marketing",
        "material",
        "flyers",
        "presentations",
        "case",
        "studies",
        "writing",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Environment",
        "Python",
        "Witbe",
        "Tool",
        "Git",
        "CSS",
        "HTML",
        "Bootstrap",
        "Django",
        "MYSQL",
        "PLSQL",
        "JIRA",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:01:04.958874",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Nike Hillsboro OR Authorized to work in the US for any employer Work Experience Sr Python Developer Nike Hillsboro OR March 2017 to Present Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Django view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack AGILE SCRUM practices and attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time and setting weekly goals Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design etc Developed MEAN Stack from scratch including MongoDB server setup and Express JS server development Used automation Jenkins for continuous integration on Amazon EC2 Hands on Experience in AWS Cloud in various AWS Services such as Route 53 Domain configuration Designed and developed the framework to consume the web services hosted in Amazon EC2 Created monitors alarms and notifications for EC2 hosts using Cloud watch Developed Python scripts to execute Stored Procedures and load data from various forms of CSV files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 2735 Python Django 11020 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting MongoDB Amazon Web Services AWS Python Developer Blackhawk Harrisburg PA Dec 2014 to Mar 2017 Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Wrote Automation Test cases using Robot Framework Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Assisted with the addition of Hadoop processing to the IT infrastructure Implementing customer data collection with PySparkHadoop analytics Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Responsible for all client side UI Validation and implementing Business logic based on user selection AngularJS 2 Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote Python modules to view and connect the Apache Cassandra instance Responsible for Debugging and Troubleshooting issues Involved in debugging the applications monitored on JIRA using agile methodology Setting up network environments using TCPIP DNS DHCP and proxy Involved in postproduction support for solving complex tickets Resolved user problems in a timely and accurate manner as a member of the EndUser support team Involved in presenting demos to the clients and also reporting the daily and weekly status to the Project manager Involved in assigning the tasks to the development team Created Windows Service to Database Migration Involved in handling the developing team and mentoring the junior developers Involved in creating the database modelling to the project and wrote queries for retrieving data from backend Deployed the project into Heroku using GIT version control system Designed RESTful XML web service for handling AJAX requests Involved in deploying the code into Amazon Web Server using BOTO API Designed and developed Application Module with Windows Service and C Reorganized couple of windows service with WCF Experience in managing largescale geographicallydistributed database systems including relational Oracle MySQL and NoSQL MongoDB systems Familiar with MongoDB clusters performance tuning backup and recovery Manage runtime configuration processes scaling backup and recovery monitoring and performance tuning for production MongoDB instances Used Python to integrate third party application on windows Used embedded python to interface code like convert data values from C to Python Perform a function call to a python interface routine using the converted values and convert the data values from the call from python to C Developed tested and debugged software tools utilized by clients and internal customers Good coding experience with scripting languages like Perl Ruby and Bash Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Built a comprehensive PERL script which would call the required ANT scripts and notify the build distribution team in case of Build errors or Completion of the builds Coded test programs and evaluated existing engineering processes Environment Python 30 Django 17 Meteor Framework AngularJS 2Java Script Coffee Scripting LESS HTML Angular JS JSON AJAX XML CSS SQL MySQL NoSql MongoDB PySpark Hadoop Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm PHP HTML5 CSS3 MYSQL LAMPPUPPET and CHEF Python Developer AgFirst Farm Credit Bank Columbia SC September 2012 to 2014 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework including Tastypie to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Provided fault isolation and root cause analysis for technical problems Highly efficient in handling multitasking issues in a fast paced environment Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Business Logic using Python on Django Web Framework Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Wrote validation scripts in SQL to validate data loading Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django PYQt Python SDK AWS Flash PHP PyQuery DOM Bootstrap XML HTML5 JavaScript Angularjs JSON Rest Apache Web Server Git Hub MySQL LINUX Python Developer Dart Dallas TX May 2010 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application For the implementation of batch job scheduling the concepts of multithreading and concurrency were practiced Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Deployed applications to Witbe server also experience in creating host instances Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Witbe Tool Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Education Bachelors",
    "unique_id": "8848c583-ca57-403f-9137-0b991d5926db"
}