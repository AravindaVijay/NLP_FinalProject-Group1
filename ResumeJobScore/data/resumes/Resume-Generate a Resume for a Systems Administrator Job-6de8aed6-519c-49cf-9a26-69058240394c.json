{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Jefferson Bank Atlanta GA 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Experienced with full software development lifecycle SDLC architecting scalable platforms object oriented programming OOPs database design and agile methodologies Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS Java Script jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Architecture size Capacity planning Data modeling implementation and support Cassandra Clusters including install configure and upgrade DSE v34 Cassandra v 12x and OpsCenter v 4x5x on Bare metal and Cloud including AWS Amazon Web Services Experience with creating script for data modeling and data import and export Extensive experience in deploying managing and developing MongoDB clusters Good Knowledge of web services using SOAP and REST protocols Used Nodejs as a proxy to interact with Rest services and interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Deployed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer Jefferson Bank San Antonio TX October 2016 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Environment Python Django HTML CSS PHP DOM REST Nodejs Angularjs JavaScript AJAX jQuery AWS GitHub agile Oracle MongoDB and Windows Python Developer CONIFER Health Solutions Frisco TX May 2015 to August 2016 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra RabbitMQ SoapUI NodeJS REST API Bash Spyder Agile Python Developer Walgreens Deerfield IL February 2014 to April 2015 Walgreens is one of the largest drugstore chains in the US with more than 8000 stores in all 50 states the District of Columbia Puerto Rico and the US Virgin Islands The combination brought together two leading companies with iconic brands complementary geographic footprints shared values and a heritage of trusted health care services through community pharmacy care and pharmaceutical wholesaling Both companies have more than a centurys worth of experience in customer and patient care Walgreens is today part of the Retail Pharmacy USA division of Walgreens Boots Alliance Responsibilities Configuring and managing Open stack components such as keystone nova neutron glance swift Heat Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Understanding python files in open stack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Open stack Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Involved in Requirement gathering Analysis Design Estimation and testing of the assigned tasks in Open stack Implemented Rally open stack benchmarking tool on the entire cloud environment Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in Automated Open stack and AWS deployment using Cloud Formation heat and Puppet Involve in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and jQuery Maintained and managed Puppet modules responsible for deploying Open stack and other cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Created a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Open stack Used JSP JavaScript jQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and clientside validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Build Backend support for Application from ground up using Python Shell scripts Perl Use the Model View controller MVC framework to build modular and maintainable applications Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST jQuery JavaScript Bootstrap AWS EC2 S3 RDS Python Developer Staples Inc Framingham MA May 2012 to December 2013 Staples makes it easy to make more happen with more products and more ways to shop Through its worldclass retail online and delivery capabilities Staples lets customers shop however and whenever they want whether its in store online or on mobile devices Responsibilities Designed the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Implemented AWS solutions using S3 RDS EBS Elastic Load Balancer and Auto scaling groups Design roles and groups for users and resources using AWS Identity Access Management IAM Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented dynamic page elements and form error validations using AngularJS Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL package Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django creating graphics XML processing data exchange and business logic implementation Involved in design implementation and modifying the Python code and MySQL database schema onthe back end Developed web applications in Django Frameworks model view control MVC architecture Had regular interactions with customers and gathered requirements in Big Data collation summation filtering and normalizing the data Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Environment Python Django Java AWS MySQL Nodejs Linux HTML XHTML CSS AJAX REST JSON JavaScript PHP MySQL Linux HTML Skills CSS 5 years Django 5 years HTML 5 years Java Script 5 years MySQL 5 years Additional Information SKILLS Languages Proficient Python Nodejs JavaScript HTML CSS SQL Familiar C Java Web Frameworks Flask Django WebApp2 Express Software Atom Linux PostgreSQL MySQL Eclipse Android Studio Cloud Platforms AWS EC2 EBS S3 Elastic Beanstalk Google Cloud App Engine Firebase",
    "entities": [
        "SQL Server Integration Service",
        "Flashvars",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "ORMsDOMs",
        "Oracle MongoDB and",
        "jQuery Worked",
        "Nodejs",
        "Agile Software Methodology",
        "Driven Development BDD",
        "webapp2",
        "Bash Wrote",
        "REST JSON",
        "MVTMVC",
        "OpenStack",
        "Heroku",
        "Created a PythonDjango",
        "SOAP",
        "XML",
        "Atlanta",
        "Puerto Rico",
        "Designed Cloud Infrastructure",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "DevOps",
        "SQL Server Analysis Service",
        "OpsCenter",
        "Shell",
        "API Integration Used Celery",
        "TX",
        "Amazon",
        "SSIS",
        "Python",
        "Nodejs Designed",
        "Bugzilla Planning",
        "Bash",
        "OpenStack API Created",
        "AnsiblePuppet Design",
        "Build Backend",
        "Django",
        "the Texas Hill Country Through",
        "Python Unit",
        "MultiThreading",
        "UML",
        "Restful",
        "Complete Software",
        "Bash Python",
        "Conifer Health Solutions",
        "HTML5",
        "Develop",
        "Application Understanding",
        "San Antonio",
        "Responsibilities Created Python",
        "Created Data",
        "JSP",
        "Flask",
        "Worked",
        "VMWare API",
        "Bank",
        "JDBC MySQL Python Successfully",
        "XML SOAP web Service",
        "Created a",
        "PyQt",
        "MVC",
        "PythonDjango",
        "DSE",
        "GIT",
        "Developed SQL Queries Stored Procedures",
        "Cassandra Clusters",
        "API",
        "US",
        "Created",
        "JSF",
        "Nodejs Experienced",
        "Responsibilities Responsible",
        "AWS Identity Access Management IAM Creating Cloud",
        "Implemented Rally",
        "Jefferson Bank",
        "RESTFUL",
        "SQL",
        "GitHub",
        "Present Jefferson Bank",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "Database Administration",
        "Jenkins Ansible",
        "Administrators",
        "the Retail Pharmacy USA",
        "JS Angular JS CSS",
        "RESTAPI",
        "the Flash Created PHPMySQL",
        "Analysis Design Development Testing Customization Bug",
        "Big Data",
        "MVW",
        "Amazon AWS",
        "Wrote",
        "Using Django",
        "SQLite",
        "CRUD",
        "Additional Information SKILLS Languages Proficient Python",
        "the District of Columbia",
        "Performed",
        "PEP Guidelines",
        "Djangos",
        "Django Python",
        "Microsoft",
        "Database Excellent",
        "AWS Identity Access Management IAM Developed",
        "Created Business Logic",
        "Windows Python Developer CONIFER Health",
        "CSS",
        "CMS",
        "Implemented Integration",
        "Bootstrap JavaScript",
        "jQuery",
        "the US Virgin Islands",
        "REST",
        "Walgreens Boots Alliance Responsibilities Configuring",
        "Conifer Health",
        "HTMLCSSJS",
        "Horizon",
        "PHP",
        "Use Test",
        "TDD",
        "Application",
        "HTMLCSSjQuery",
        "Unit",
        "Bare",
        "HTML Angular JS Bootstrap",
        "Node",
        "jQuery Maintained"
    ],
    "experience": "Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS Java Script jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Architecture size Capacity planning Data modeling implementation and support Cassandra Clusters including install configure and upgrade DSE v34 Cassandra v 12x and OpsCenter v 4x5x on Bare metal and Cloud including AWS Amazon Web Services Experience with creating script for data modeling and data import and export Extensive experience in deploying managing and developing MongoDB clusters Good Knowledge of web services using SOAP and REST protocols Used Nodejs as a proxy to interact with Rest services and interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Deployed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer Jefferson Bank San Antonio TX October 2016 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Environment Python Django HTML CSS PHP DOM REST Nodejs Angularjs JavaScript AJAX jQuery AWS GitHub agile Oracle MongoDB and Windows Python Developer CONIFER Health Solutions Frisco TX May 2015 to August 2016 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra RabbitMQ SoapUI NodeJS REST API Bash Spyder Agile Python Developer Walgreens Deerfield IL February 2014 to April 2015 Walgreens is one of the largest drugstore chains in the US with more than 8000 stores in all 50 states the District of Columbia Puerto Rico and the US Virgin Islands The combination brought together two leading companies with iconic brands complementary geographic footprints shared values and a heritage of trusted health care services through community pharmacy care and pharmaceutical wholesaling Both companies have more than a centurys worth of experience in customer and patient care Walgreens is today part of the Retail Pharmacy USA division of Walgreens Boots Alliance Responsibilities Configuring and managing Open stack components such as keystone nova neutron glance swift Heat Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Understanding python files in open stack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Open stack Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Involved in Requirement gathering Analysis Design Estimation and testing of the assigned tasks in Open stack Implemented Rally open stack benchmarking tool on the entire cloud environment Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in Automated Open stack and AWS deployment using Cloud Formation heat and Puppet Involve in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and jQuery Maintained and managed Puppet modules responsible for deploying Open stack and other cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Created a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Open stack Used JSP JavaScript jQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and clientside validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Build Backend support for Application from ground up using Python Shell scripts Perl Use the Model View controller MVC framework to build modular and maintainable applications Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST jQuery JavaScript Bootstrap AWS EC2 S3 RDS Python Developer Staples Inc Framingham MA May 2012 to December 2013 Staples makes it easy to make more happen with more products and more ways to shop Through its worldclass retail online and delivery capabilities Staples lets customers shop however and whenever they want whether its in store online or on mobile devices Responsibilities Designed the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Implemented AWS solutions using S3 RDS EBS Elastic Load Balancer and Auto scaling groups Design roles and groups for users and resources using AWS Identity Access Management IAM Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented dynamic page elements and form error validations using AngularJS Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL package Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django creating graphics XML processing data exchange and business logic implementation Involved in design implementation and modifying the Python code and MySQL database schema onthe back end Developed web applications in Django Frameworks model view control MVC architecture Had regular interactions with customers and gathered requirements in Big Data collation summation filtering and normalizing the data Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Environment Python Django Java AWS MySQL Nodejs Linux HTML XHTML CSS AJAX REST JSON JavaScript PHP MySQL Linux HTML Skills CSS 5 years Django 5 years HTML 5 years Java Script 5 years MySQL 5 years Additional Information SKILLS Languages Proficient Python Nodejs JavaScript HTML CSS SQL Familiar C Java Web Frameworks Flask Django WebApp2 Express Software Atom Linux PostgreSQL MySQL Eclipse Android Studio Cloud Platforms AWS EC2 EBS S3 Elastic Beanstalk Google Cloud App Engine Firebase",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Jefferson",
        "Bank",
        "Atlanta",
        "GA",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "domains",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "platforms",
        "programming",
        "OOPs",
        "database",
        "design",
        "methodologies",
        "Experience",
        "applications",
        "Python",
        "Django",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "Angular",
        "JS",
        "Bootstrap",
        "JS",
        "Node",
        "JS",
        "CSS",
        "JavaScript",
        "AJAX",
        "JSP",
        "JDBC",
        "XML",
        "XSLT",
        "Python",
        "Django",
        "Good",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "Webapp2",
        "spring",
        "web",
        "application",
        "frameworks",
        "Experience",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "MVC",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "jQuery",
        "Nodejs",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "PythonAndNodejs",
        "Angularjs",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "data",
        "SQL",
        "Server",
        "Integration",
        "Service",
        "SSIS",
        "SQL",
        "Server",
        "Analysis",
        "Service",
        "SSAS",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "Neo4J",
        "MongoDB",
        "Cassandra",
        "SQLite",
        "custom",
        "queries",
        "database",
        "connectors",
        "Expertise",
        "database",
        "connections",
        "Java",
        "Python",
        "packages",
        "JDBC",
        "MySQL",
        "Python",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "Postgres",
        "SQL",
        "data",
        "integrity",
        "Architecture",
        "size",
        "Capacity",
        "Data",
        "modeling",
        "implementation",
        "Cassandra",
        "Clusters",
        "install",
        "configure",
        "DSE",
        "v34",
        "Cassandra",
        "12x",
        "OpsCenter",
        "4x5x",
        "metal",
        "Cloud",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Experience",
        "script",
        "data",
        "modeling",
        "data",
        "import",
        "experience",
        "clusters",
        "Good",
        "Knowledge",
        "web",
        "services",
        "SOAP",
        "REST",
        "protocols",
        "Nodejs",
        "proxy",
        "Rest",
        "services",
        "Database",
        "Excellent",
        "Experience",
        "knowledge",
        "XML",
        "SOAP",
        "web",
        "Service",
        "inter",
        "software",
        "applications",
        "knowledge",
        "version",
        "control",
        "software",
        "CVS",
        "GitHub",
        "Efficient",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "design",
        "architecture",
        "development",
        "testing",
        "Experience",
        "tools",
        "Microsoft",
        "Azure",
        "Heroku",
        "Jenkins",
        "production",
        "site",
        "Apache",
        "mod",
        "python",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Skilled",
        "writing",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "issues",
        "applications",
        "Experience",
        "Database",
        "Administration",
        "development",
        "design",
        "maintenance",
        "production",
        "support",
        "databases",
        "business",
        "applications",
        "server",
        "setup",
        "MySQL",
        "Server",
        "installation",
        "upgrade",
        "migration",
        "requirement",
        "documents",
        "business",
        "development",
        "team",
        "architecture",
        "functionality",
        "application",
        "requirements",
        "modules",
        "Test",
        "strategy",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Requirement",
        "Use",
        "case",
        "development",
        "Business",
        "Process",
        "Business",
        "Process",
        "Modeling",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Jefferson",
        "Bank",
        "San",
        "Antonio",
        "TX",
        "October",
        "Present",
        "Jefferson",
        "Bank",
        "bank",
        "communities",
        "San",
        "Antonio",
        "areas",
        "Texas",
        "Hill",
        "Country",
        "years",
        "Jefferson",
        "Bank",
        "team",
        "family",
        "individuals",
        "Bank",
        "success",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Worked",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "Django",
        "framework",
        "Clinical",
        "Trial",
        "Data",
        "sources",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "Nodejs",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "JSON",
        "REST",
        "Web",
        "services",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "GitHub",
        "version",
        "control",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "development",
        "environment",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "PHP",
        "DOM",
        "REST",
        "Nodejs",
        "Angularjs",
        "JavaScript",
        "AJAX",
        "jQuery",
        "GitHub",
        "Oracle",
        "MongoDB",
        "Windows",
        "Python",
        "Developer",
        "CONIFER",
        "Health",
        "Solutions",
        "Frisco",
        "TX",
        "May",
        "August",
        "Conifer",
        "Health",
        "Solutions",
        "healthcare",
        "services",
        "company",
        "clients",
        "performance",
        "Conifer",
        "Health",
        "organizations",
        "transition",
        "volume",
        "care",
        "consumer",
        "healthcare",
        "experience",
        "quality",
        "access",
        "healthcare",
        "control",
        "costs",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "RESTAPI",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "user",
        "experience",
        "operations",
        "calculation",
        "purpose",
        "python",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "automation",
        "test",
        "cases",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "SoapUI",
        "NodeJS",
        "REST",
        "API",
        "Bash",
        "Spyder",
        "Agile",
        "Python",
        "Developer",
        "Deerfield",
        "IL",
        "February",
        "April",
        "Walgreens",
        "drugstore",
        "chains",
        "US",
        "stores",
        "states",
        "District",
        "Columbia",
        "Puerto",
        "Rico",
        "US",
        "Virgin",
        "Islands",
        "combination",
        "companies",
        "brands",
        "footprints",
        "values",
        "heritage",
        "health",
        "care",
        "services",
        "community",
        "pharmacy",
        "care",
        "pharmaceutical",
        "companies",
        "centurys",
        "worth",
        "experience",
        "customer",
        "patient",
        "care",
        "Walgreens",
        "today",
        "part",
        "Retail",
        "Pharmacy",
        "USA",
        "division",
        "Walgreens",
        "Boots",
        "Alliance",
        "Responsibilities",
        "Configuring",
        "stack",
        "components",
        "keystone",
        "nova",
        "neutron",
        "glance",
        "swift",
        "Heat",
        "Written",
        "Nova",
        "Glance",
        "Neutron",
        "Cinder",
        "Keystone",
        "Hashborad",
        "Swift",
        "client",
        "API",
        "Application",
        "files",
        "stack",
        "environment",
        "changes",
        "Cinder",
        "storage",
        "applications",
        "databases",
        "stack",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "Requirement",
        "Analysis",
        "Design",
        "Estimation",
        "testing",
        "tasks",
        "stack",
        "Rally",
        "stack",
        "tool",
        "cloud",
        "environment",
        "Experience",
        "Python",
        "code",
        "troubleshooting",
        "testcases",
        "bug",
        "issues",
        "Automated",
        "stack",
        "AWS",
        "deployment",
        "Cloud",
        "Formation",
        "heat",
        "Puppet",
        "Involve",
        "development",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "Puppet",
        "modules",
        "stack",
        "cloud",
        "tools",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Cloud",
        "alerts",
        "instances",
        "auto",
        "scaling",
        "launch",
        "configurations",
        "Cloud",
        "infrastructure",
        "compute",
        "storage",
        "services",
        "OpenStack",
        "API",
        "custom",
        "dashboard",
        "JSF",
        "Horizon",
        "dashboard",
        "API",
        "stack",
        "JSP",
        "JavaScript",
        "jQuery",
        "AJAX",
        "CSS3",
        "HTML5",
        "data",
        "presentation",
        "layer",
        "technology",
        "User",
        "Interface",
        "UI",
        "operations",
        "validations",
        "AJAX",
        "toolkit",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "Cloud",
        "Infrastructure",
        "Service",
        "environment",
        "source",
        "technology",
        "OpenStack",
        "portability",
        "cloud",
        "services",
        "cloud",
        "application",
        "provisioning",
        "OpenStack",
        "cloud",
        "AnsiblePuppet",
        "Design",
        "front",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Design",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Build",
        "Backend",
        "support",
        "Application",
        "ground",
        "Python",
        "Shell",
        "Perl",
        "Use",
        "Model",
        "View",
        "controller",
        "MVC",
        "framework",
        "applications",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "git",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "integration",
        "automation",
        "Jenkins",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "software",
        "developers",
        "DevOps",
        "software",
        "system",
        "problems",
        "AGILE",
        "development",
        "methodology",
        "application",
        "GO",
        "Programming",
        "Language",
        "legacy",
        "Use",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Implemented",
        "Integration",
        "test",
        "cases",
        "analytic",
        "Apache",
        "Spark",
        "Scala",
        "APIs",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "REST",
        "jQuery",
        "JavaScript",
        "Bootstrap",
        "AWS",
        "EC2",
        "S3",
        "RDS",
        "Python",
        "Developer",
        "Staples",
        "Inc",
        "Framingham",
        "MA",
        "May",
        "December",
        "Staples",
        "products",
        "ways",
        "worldclass",
        "delivery",
        "capabilities",
        "Staples",
        "customers",
        "store",
        "devices",
        "Responsibilities",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "jQuery",
        "backend",
        "application",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "AWS",
        "solutions",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "intranet",
        "portal",
        "Amazon",
        "EC2",
        "servers",
        "Python",
        "Tornado",
        "MongoDB",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "Celery",
        "task",
        "queue",
        "RabbitMQ",
        "broker",
        "tasks",
        "page",
        "elements",
        "error",
        "validations",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "design",
        "implementation",
        "Python",
        "code",
        "MySQL",
        "database",
        "schema",
        "onthe",
        "end",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "interactions",
        "customers",
        "requirements",
        "Big",
        "Data",
        "collation",
        "summation",
        "filtering",
        "data",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Environment",
        "Python",
        "Django",
        "Java",
        "AWS",
        "MySQL",
        "Nodejs",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "REST",
        "JSON",
        "JavaScript",
        "PHP",
        "MySQL",
        "Linux",
        "HTML",
        "Skills",
        "CSS",
        "years",
        "Django",
        "years",
        "HTML",
        "years",
        "Java",
        "Script",
        "years",
        "MySQL",
        "years",
        "Information",
        "SKILLS",
        "Languages",
        "Proficient",
        "Python",
        "Nodejs",
        "JavaScript",
        "HTML",
        "CSS",
        "SQL",
        "Familiar",
        "C",
        "Java",
        "Web",
        "Frameworks",
        "Flask",
        "Django",
        "WebApp2",
        "Express",
        "Software",
        "Atom",
        "Linux",
        "PostgreSQL",
        "MySQL",
        "Eclipse",
        "Android",
        "Studio",
        "Cloud",
        "Platforms",
        "EC2",
        "EBS",
        "S3",
        "Elastic",
        "Beanstalk",
        "Google",
        "Cloud",
        "App",
        "Engine",
        "Firebase"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:28:40.898835",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Jefferson Bank Atlanta GA 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Experienced with full software development lifecycle SDLC architecting scalable platforms object oriented programming OOPs database design and agile methodologies Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS Java Script jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Architecture size Capacity planning Data modeling implementation and support Cassandra Clusters including install configure and upgrade DSE v34 Cassandra v 12x and OpsCenter v 4x5x on Bare metal and Cloud including AWS Amazon Web Services Experience with creating script for data modeling and data import and export Extensive experience in deploying managing and developing MongoDB clusters Good Knowledge of web services using SOAP and REST protocols Used Nodejs as a proxy to interact with Rest services and interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Deployed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering Use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer Jefferson Bank San Antonio TX October 2016 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Worked in an agile development environment Developed SQL Queries Stored Procedures and Triggers Using Oracle Environment Python Django HTML CSS PHP DOM REST Nodejs Angularjs JavaScript AJAX jQuery AWS GitHub agile Oracle MongoDB and Windows Python Developer CONIFER Health Solutions Frisco TX May 2015 to August 2016 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra RabbitMQ SoapUI NodeJS REST API Bash Spyder Agile Python Developer Walgreens Deerfield IL February 2014 to April 2015 Walgreens is one of the largest drugstore chains in the US with more than 8000 stores in all 50 states the District of Columbia Puerto Rico and the US Virgin Islands The combination brought together two leading companies with iconic brands complementary geographic footprints shared values and a heritage of trusted health care services through community pharmacy care and pharmaceutical wholesaling Both companies have more than a centurys worth of experience in customer and patient care Walgreens is today part of the Retail Pharmacy USA division of Walgreens Boots Alliance Responsibilities Configuring and managing Open stack components such as keystone nova neutron glance swift Heat Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Understanding python files in open stack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Open stack Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Involved in Requirement gathering Analysis Design Estimation and testing of the assigned tasks in Open stack Implemented Rally open stack benchmarking tool on the entire cloud environment Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in Automated Open stack and AWS deployment using Cloud Formation heat and Puppet Involve in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and jQuery Maintained and managed Puppet modules responsible for deploying Open stack and other cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Created a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Open stack Used JSP JavaScript jQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and clientside validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Build Backend support for Application from ground up using Python Shell scripts Perl Use the Model View controller MVC framework to build modular and maintainable applications Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text git Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST jQuery JavaScript Bootstrap AWS EC2 S3 RDS Python Developer Staples Inc Framingham MA May 2012 to December 2013 Staples makes it easy to make more happen with more products and more ways to shop Through its worldclass retail online and delivery capabilities Staples lets customers shop however and whenever they want whether its in store online or on mobile devices Responsibilities Designed the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Implemented AWS solutions using S3 RDS EBS Elastic Load Balancer and Auto scaling groups Design roles and groups for users and resources using AWS Identity Access Management IAM Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented dynamic page elements and form error validations using AngularJS Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL package Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django creating graphics XML processing data exchange and business logic implementation Involved in design implementation and modifying the Python code and MySQL database schema onthe back end Developed web applications in Django Frameworks model view control MVC architecture Had regular interactions with customers and gathered requirements in Big Data collation summation filtering and normalizing the data Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Environment Python Django Java AWS MySQL Nodejs Linux HTML XHTML CSS AJAX REST JSON JavaScript PHP MySQL Linux HTML Skills CSS 5 years Django 5 years HTML 5 years Java Script 5 years MySQL 5 years Additional Information SKILLS Languages Proficient Python Nodejs JavaScript HTML CSS SQL Familiar C Java Web Frameworks Flask Django WebApp2 Express Software Atom Linux PostgreSQL MySQL Eclipse Android Studio Cloud Platforms AWS EC2 EBS S3 Elastic Beanstalk Google Cloud App Engine Firebase",
    "unique_id": "6de8aed6-519c-49cf-9a26-69058240394c"
}