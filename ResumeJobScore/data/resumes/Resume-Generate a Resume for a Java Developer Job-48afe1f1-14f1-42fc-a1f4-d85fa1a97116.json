{
    "clean_data": "Chef and Ansible Chef and Ansible Chef and Ansible Cardinal Health Python Developer Overall 4 Years of Experience as webapplication developer in software development and design using python Django Flask java Angularjs HTML5CSS3 JavaScript Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript JSON and Angularjs Nodejs Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Chef and Ansible Cardinal Health Valencia CA October 2018 to Present valencia CA October 2018 to Present Responsibilities Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Developed Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer Fannie Mae Texas October 2016 to July 2018 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Used Couchbase Python SDK to build applications that use Couchbase Server Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used GCP to create storage resources and define resource attributes such as disk type or redundancy type at the service level Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Junior Python Developer July 2015 to September 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Imported and managed multiple corporate applications into Subversion SVN Skills AWS 3 years JAVASCRIPT 3 years PYTHON 3 years HTML5 3 years SQL 3 years Additional Information Technical Skills Languages Python C C Shell Script Java PHP PLSQL Ruby Version Controls GIT GitHub SVN CVS Web Technologies JavaScript HTMLHTML5 CSSCSS3 AngularJS Node JS React JS Frameworks Django Flask Pyramid Web Services Soap Apache Axis Restful Bigdata Technologies Hadoop Hive Pig Spark Cloud AWS Databases PostgreSQL MySQL MariaDB Oracle 8i9i10g MS Access SQL Server Sybase SQL Lite SQL Alchemy NoSQL Databases Mongo DB Redis Cassandra Operating Systems Linux Windows IOS MAC OSX Protocols TCPIP HTTPHTTPS SMTP",
    "entities": [
        "Continuous Deployment Application Server",
        "GUI",
        "UNIX",
        "Node JS Proficient",
        "HTTP",
        "Interfacing",
        "OpenStack",
        "Created a PythonDjango",
        "Fannie Mae",
        "Software Configuration Management",
        "XML",
        "Python 3627 Django 1718",
        "jQuery Created",
        "DevOps",
        "Chef Serverworkstation",
        "Shell",
        "Implemented Terraform",
        "Amazon",
        "Lambda Work Experience Chef and Ansible Cardinal",
        "WebSphere",
        "Stored Procedures",
        "Developed",
        "CSS Bootstrap",
        "Automation Test",
        "Django",
        "SQL PLSQL",
        "Kubernets",
        "Bash Python",
        "DjangoREST",
        "HTML5",
        "FLASK Framework Developed",
        "Flask",
        "Oracle 8i9i10",
        "Additional Information Technical Skills Languages Python C C Shell Script",
        "Docker",
        "Views",
        "CLI",
        "Integration Testing",
        "GIT",
        "API RESTful Web Services",
        "API",
        "Created",
        "AWS",
        "Oracle",
        "PHP PLSQL Ruby Version Controls",
        "Worked with View Sets",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "GIT Working",
        "Performed Unit",
        "Couchbase Server Involved",
        "SQL",
        "Created Selenium",
        "Nginx",
        "GitHub SVN",
        "FLASK",
        "Jenkins Used GCP",
        "SSH",
        "SQL Alchemy",
        "MVW",
        "Amazon AWS",
        "Wrote",
        "google analytics",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "Maven",
        "Build",
        "JavaScript",
        "Front",
        "AJAX Created Python",
        "Microsoft",
        "Texas",
        "Continuous Integration",
        "Django Supportedmaintained",
        "Expertise",
        "Imported",
        "SDK",
        "Application",
        "AzureAws Established",
        "Node",
        "Created Test"
    ],
    "experience": "Experience as webapplication developer in software development and design using python Django Flask java Angularjs HTML5CSS3 JavaScript Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript JSON and Angularjs Nodejs Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Chef and Ansible Cardinal Health Valencia CA October 2018 to Present valencia CA October 2018 to Present Responsibilities Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Developed Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer Fannie Mae Texas October 2016 to July 2018 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Used Couchbase Python SDK to build applications that use Couchbase Server Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used GCP to create storage resources and define resource attributes such as disk type or redundancy type at the service level Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Junior Python Developer July 2015 to September 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Imported and managed multiple corporate applications into Subversion SVN Skills AWS 3 years JAVASCRIPT 3 years PYTHON 3 years HTML5 3 years SQL 3 years Additional Information Technical Skills Languages Python C C Shell Script Java PHP PLSQL Ruby Version Controls GIT GitHub SVN CVS Web Technologies JavaScript HTMLHTML5 CSSCSS3 AngularJS Node JS React JS Frameworks Django Flask Pyramid Web Services Soap Apache Axis Restful Bigdata Technologies Hadoop Hive Pig Spark Cloud AWS Databases PostgreSQL MySQL MariaDB Oracle 8i9i10 g MS Access SQL Server Sybase SQL Lite SQL Alchemy NoSQL Databases Mongo DB Redis Cassandra Operating Systems Linux Windows IOS MAC OSX Protocols TCPIP HTTPHTTPS SMTP",
    "extracted_keywords": [
        "Chef",
        "Ansible",
        "Chef",
        "Ansible",
        "Chef",
        "Ansible",
        "Cardinal",
        "Health",
        "Python",
        "Developer",
        "Overall",
        "Years",
        "Experience",
        "webapplication",
        "developer",
        "software",
        "development",
        "design",
        "python",
        "Django",
        "Flask",
        "java",
        "Angularjs",
        "HTML5CSS3",
        "JavaScript",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Experience",
        "Kubernets",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MYSQL",
        "Oracle",
        "SQL",
        "Cassandra",
        "Experience",
        "List",
        "Comprehensions",
        "Python",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Work",
        "Experience",
        "Chef",
        "Ansible",
        "Cardinal",
        "Health",
        "Valencia",
        "CA",
        "October",
        "Present",
        "valencia",
        "CA",
        "October",
        "Present",
        "Responsibilities",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "Developed",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Python",
        "Developer",
        "Fannie",
        "Mae",
        "Texas",
        "October",
        "July",
        "Responsibilities",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Services",
        "events",
        "analysis",
        "Django",
        "client",
        "website",
        "DJANGO",
        "CMS",
        "system",
        "website",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "UI",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JSON",
        "AJAX",
        "Created",
        "Python",
        "Bash",
        "scripts",
        "increase",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "Django",
        "CMS",
        "promotion",
        "management",
        "system",
        "ability",
        "forms",
        "admin",
        "interface",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "GCP",
        "storage",
        "resources",
        "resource",
        "attributes",
        "disk",
        "type",
        "redundancy",
        "type",
        "service",
        "level",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "PythonDjango",
        "web",
        "application",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJavaScript",
        "frontend",
        "development",
        "D3",
        "JavaScript",
        "Data",
        "Visualization",
        "REST",
        "APIs",
        "Python",
        "python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "MySQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "troubleshooting",
        "programming",
        "issues",
        "tools",
        "Bamboo",
        "Jira",
        "confluence",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "JIRA",
        "projects",
        "departments",
        "JIRA",
        "projects",
        "DevOps",
        "tools",
        "team",
        "scripts",
        "deployment",
        "tools",
        "environment",
        "Docker",
        "Junior",
        "Python",
        "Developer",
        "July",
        "September",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Build",
        "database",
        "mapping",
        "classes",
        "FLASK",
        "models",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "Created",
        "Test",
        "plans",
        "SQL",
        "scripts",
        "data",
        "tables",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "product",
        "requirement",
        "documents",
        "specifications",
        "test",
        "strategy",
        "test",
        "plan",
        "test",
        "case",
        "documents",
        "Created",
        "Selenium",
        "webdriver",
        "automation",
        "scripts",
        "Python",
        "functionality",
        "browsers",
        "understanding",
        "Microsoft",
        "Azure",
        "cloud",
        "platform",
        "Experience",
        "cloud",
        "delivery",
        "platforms",
        "AzureAws",
        "framework",
        "Continuous",
        "Integration",
        "environment",
        "Jenkins",
        "Nexus",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "selenium",
        "automation",
        "framework",
        "TestNG",
        "Developed",
        "Maven",
        "targets",
        "automation",
        "suites",
        "command",
        "line",
        "AWS",
        "Cloud",
        "instances",
        "EC2",
        "Participated",
        "release",
        "meetings",
        "Technology",
        "stakeholders",
        "risks",
        "releases",
        "applications",
        "Subversion",
        "SVN",
        "Skills",
        "AWS",
        "years",
        "JAVASCRIPT",
        "years",
        "PYTHON",
        "years",
        "HTML5",
        "years",
        "SQL",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "C",
        "C",
        "Shell",
        "Script",
        "Java",
        "PHP",
        "PLSQL",
        "Ruby",
        "Version",
        "Controls",
        "GIT",
        "GitHub",
        "SVN",
        "CVS",
        "Web",
        "Technologies",
        "JavaScript",
        "HTMLHTML5",
        "CSSCSS3",
        "AngularJS",
        "Node",
        "JS",
        "React",
        "JS",
        "Frameworks",
        "Django",
        "Flask",
        "Pyramid",
        "Web",
        "Services",
        "Soap",
        "Apache",
        "Axis",
        "Restful",
        "Bigdata",
        "Technologies",
        "Hadoop",
        "Hive",
        "Pig",
        "Spark",
        "Cloud",
        "Databases",
        "PostgreSQL",
        "MySQL",
        "MariaDB",
        "Oracle",
        "g",
        "MS",
        "Access",
        "SQL",
        "Server",
        "Sybase",
        "SQL",
        "Lite",
        "SQL",
        "Alchemy",
        "NoSQL",
        "Mongo",
        "DB",
        "Redis",
        "Cassandra",
        "Operating",
        "Systems",
        "Linux",
        "Windows",
        "IOS",
        "MAC",
        "OSX",
        "Protocols",
        "HTTPHTTPS",
        "SMTP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:14:40.169072",
    "resume_data": "Chef and Ansible Chef and Ansible Chef and Ansible Cardinal Health Python Developer Overall 4 Years of Experience as webapplication developer in software development and design using python Django Flask java Angularjs HTML5CSS3 JavaScript Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript JSON and Angularjs Nodejs Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Chef and Ansible Cardinal Health Valencia CA October 2018 to Present valencia CA October 2018 to Present Responsibilities Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Developed Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer Fannie Mae Texas October 2016 to July 2018 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Used Couchbase Python SDK to build applications that use Couchbase Server Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used GCP to create storage resources and define resource attributes such as disk type or redundancy type at the service level Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Junior Python Developer July 2015 to September 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Imported and managed multiple corporate applications into Subversion SVN Skills AWS 3 years JAVASCRIPT 3 years PYTHON 3 years HTML5 3 years SQL 3 years Additional Information Technical Skills Languages Python C C Shell Script Java PHP PLSQL Ruby Version Controls GIT GitHub SVN CVS Web Technologies JavaScript HTMLHTML5 CSSCSS3 AngularJS Node JS React JS Frameworks Django Flask Pyramid Web Services Soap Apache Axis Restful Bigdata Technologies Hadoop Hive Pig Spark Cloud AWS Databases PostgreSQL MySQL MariaDB Oracle 8i9i10g MS Access SQL Server Sybase SQL Lite SQL Alchemy NoSQL Databases Mongo DB Redis Cassandra Operating Systems Linux Windows IOS MAC OSX Protocols TCPIP HTTPHTTPS SMTP",
    "unique_id": "48afe1f1-14f1-42fc-a1f4-d85fa1a97116"
}