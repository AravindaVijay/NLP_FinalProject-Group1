{
    "clean_data": "Senior Net Developer Senior Net span lDeveloperspan Senior Net Developer Mitchell Martin Inc Frisco TX 9 years of IT experience as Developer and involved in Requirement Gathering Analysis Design Development Implementation Testing documentation enduser training and Webbased using Microsoft Technologies Professional experience in web mobile and back end applications Analyzing Design Development Management and Implementation of Clientserver Mainframe and WEB enabled applications Experience in advanced JavaScriptUI frameworks like AngularJS BootstrapUI JSON and JQuery Work Experience Senior Net Developer Mitchell Martin Inc New York NY May 2018 to Present Responsibilities Created the model using Entity Framework 60 using the Database First approach Implemented serverside and clientside validations Used JavaScript for clientside validations Implemented page level error handling using Custom Error pages and Error logs Worked on all the layers such as Presentation layer UI Business Logic layer and Data Access layer as a Full Stack developer Made use of ASPNet Authentication and Authorization providers for ensuring security Used Entity Framework 60 as an Object Relational Mapper ORM for Database operations Properly unit tested the modules to ensure all requirements are met Used SQL Server 2014 to build database and tables Stored Procedures and Triggers Implemented Admin Panel to updating contents and to approve user request in the application Integrated ASPNET Identity based Authentication for authenticating and authorizing users Consumed REST APIs by using Angular http service Utilized Fiddler tool to debug Web API exposed over HTTP Used EFEntity Framework and Web API for data retrieving from the database Coded application functionality and Filters for heavy DOM manipulation Implemented Clientside validations using builtin classes and states in Angular Used AJAX Operations to load data into the view using Angular Developed Single Page Application SPA by using routing Service Used MVC features such as routing controllers action results filter model binders IOC container and used dependency injection Used Integrated Entity Framework 60 to process queries on database for faster speed and more reliability EnvironmentVisual Studio 2017 Angular 2 Net Framework 45 IIS 70 ASPNET MVC5 ASPNET Web API C Entity Framework 60 SQL Server 2016 LINQ JSON HTML5 CSS3 and Bootstrap Batarangle ChartJS GitLab Jasmine Senior Net Developer Dutech Systems Inc Boston MA January 2017 to 2018 Responsibilities Developed single page applications using Angular4 Typescript HTML5 CSS3 JavaScript and Bootstrap and worked in an Agile Scrum development methodology and involved in sprint planning and review Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular4 Implemented responsive web design using Bootstrap and used NgBootstarp based on Angular4 Components Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Implemented HTTP requests using Observable library to handle multiple values over time Worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI along with DOMCSS Manipulation Developed Custom Authentication Exception Filters in Web API that handles Token based Authentication and Exceptions respectively and returns appropriate Http Status Codes Used the Database first approach with the Entity Framework to generate models and the DbContext Implemented Unit Testing using MSTest along with MOQ for mocking the objects Debugged and tracked using Fiddler for Web API service and Jasmine to unit test the Angular project in an isolated and automated manner Environment VS Code C Visual Studio 2015 Angular4 Bootstrap CSS3 JavaScript HTML5 Web API2 Fiddler Jasmine SQL Server Entity Framework NUnit Agile Scrum Software Engineer Agile Premier Dallas TX February 2015 to December 2016 Responsibilities Developed User Interface using HTML CSS JavaScript AJAX JSON Angular and Bootstrap based on AWS Successfully integrated data from multiple data sources including SQL Server 2008 and legacy data delivered via message queues using ADONet Used Web Services to access data from the Remote Application Implemented Distributed computing using NET Remoting Performed Unit testing Used Database first approach in Entity Framework to perform CRUD operations Used LINQ and LINQ to Entities data provider for interacting with the data in the Entity Framework Responsible for Designing and Developing the Reusable UI Components Like Partial View and MVC Layout View Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for clientside validation Implemented JavaScript form validation using Regular Expressions Created synchronous and Asynchronous web service invocation with JavaScript Implemented security authentication and authorization in MVC Optimized the applications performance by Minification and Bundling Developed RESTful web services using WEB API Used serialization and Model binding in Web API Actively involved in Exception Handling Testing and Debugging in Web API Created Indexes to speed up the Query process Procedures and Cursors in SQL Server Management Studio Involved in design and developing of navigations control user controls custom control etc Involved in gathering requirement and creating prototype for the new upgrade for application EnvironmentASPNET 45 C MVC 50 JavaScript ADONET Entity Framework core 20 HTML5 CSS3 XML AJAX JSON JQuery Angular 2 Bootstrap 40 SQL Server 2014 ADONET Net Developer Nitco Inc Houston TX August 2013 to January 2015 Responsibilities Developed MultiTier Application using 3layer approach Presentation layer was developed using ASPNET MVC5 the business layer was developed using C and data access layer using Entity Framework Involved in gathering of requirements by interacting with analysts Used Waterfall development methodology Developed Net assemblies using CNET Data access and Business Logic Worked on Reusable software components Design and Development Developed web pages using HTML CSS JavaScript jQuery and Ajax Worked on JavaScript for ClientSide Validation Used AJAX extensively with JavaScript and XML Involved in designing complete database objects like Tables Views Stored procedures and triggers using SQL Server Used ASPNET MVC5 filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented clientside validations using jQuery validation plugins and ASPNET MVC5 validation at controller level using data annotations for model validations Implemented CRUD functionality with Entity framework in ASPNET MVC5 and implemented sorting filtering and paging with Entity framework in MVC Use jQuery clientside scripting for auto complete tabs validation date picking sorting autosubmit and other functions Created and optimized views for user interactions using objects of HTML Helper class Custom Helpers Developed Stored Procedures Views and Triggers for data manipulation ensuring set up relations includes Indexing Constraints and Foreign Keys Maintenance and Defect Tracking Using TFS JIRA Responsible for quality assurance of finished websites including the validation of web forms and links Involved in testing like Unit test Integration test Acceptance test and Regression testing using NUnit and responsible for writing test scripts and scenarios Environment ASPNET MVC5 jQuery JavaScript C Entity Framework WCF JIRA TFS NUnit SQL Server HTML CSS Visual Studio Software Engineer Hyperion Tech LLC Washington DC March 2011 to July 2013 Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Performed required field comparison range custom validations of the input controls of the Web Forms Implemented Web services for the communication between client and server using SOAP Created web pages using HTML and CSS to take advantage of the newest web techniques and styles Used ADONET extensively for database interactions using Data Reader Data Adapter Data view and Datasets Involved in collecting and analyzing the business requirements from the customers Designed Web Forms User Controls AJAX Web Forms and HTML Pages using ASPNET Performed validations on Web Forms using NET Validation Controls and JavaScript Designed Web Forms using different ASPNET Server Controls API Validation Controls and other thirdparty controls Developed an ASPNET MVC application in Visual Studio using the testdriven development TDD approach Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using MVC C and JavaScript for clientside validation Implemented Web Services using WCF to update the information displayed in the browser and to authenticate the current users to ensure security and information sharing Implemented Dependency Injection with constructor injections for loosely coupled components using Ninject IOC container Generate Entity Framework context models utilizing database first approach and built library of data access methods Used RESTful service methods for create read update and delete form data Product development is an Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASPNET MVC WCF Entity Framework AJAX jQuery IIS AgileScrum Unit test Visual Studio SQL Server JavaScript C TDD C Developer Innovee Consulting LLC Atlanta GA June 2009 to February 2011 Responsibilities Developed a custom Grid control with sorting and paging features Implemented Excel to XML import functionality Designed Graphical User Interface GUI using Master Pages HTML JavaScript and CSS classes Developed the Business Logic Data Access classes and stored procedures for the assigned modules Implemented serverside and clientside validations Made use of ASPNet State Management techniques like ViewState Cookies and Sessions Developed a SOAP based WCF service for exposing certain functions to an external system Used Team Foundation Server to version control the code and various artifacts Created unit test cases and thoroughly tested the modules to ensure all requirements are met Wrote Stored Procedures Triggers Functions and Indexes to improve the throughput of application using optimized queries Prepared detailed design documents for the modules to be developed Developed the User Interface using EXTNet controls Used MVC 3 architecture in the UI project to create views and controllers Used JavaScript for clientside validations and to call controller methods Developed reusable user controls and custom web controls Implemented the business logic for the modules assigned Created Interfaces for service layer and data layer classes Used NHibernate for Database operations Used Team Foundation Server TFS for Source Code Control project related document sharing and team collaboration Created the branches in TFS to facilitate the parallel development process Wrote Stored Procedures to insert update and retrieve data from SQL Server DB Environment Visual Studio 2008 NET 30 C Serviced Components Web Services Custom controls XML SQL Server 2008 VSS Agile Scrum Education Bachelors Additional Information Technical Skills Languages C Net Framework11 20 30 35 40 VB 60 HTML XML Java Script C C JQuery HTML 5 CSS 3 ASNET VBScript ASP 30 Frameworks ASPNET ADONET WCF MVC LINQ IIS ASP CSS TFS AngularJS NodeJS JQuery Operating System DOS NT98XP20002003 Vista2008 Windows 12XP and Windows 7 Databases SQL Server 102012 TSQL Stored Procedures PLSQL NET Technologies ASPNET XML Web Services ADONET WCF WPF and Web API Win Forms Web Forms Windows Services IDE Visual Studio 2013 Notepad Methodologies Ntier Application SOA ClientServer Architecture OOA Prototyping Process Models Systems Integration Web Servers Internet Information Server IIS REST with WCF SOAP API Version Control Tools Team Foundation Server Test Driven Development TDD Visual Source Safe VSS Browsers ALL IE Google Chrome Mozilla Opera Markup Languages HTML XHTML XML XSL DHTML AngularJS Javascript CSS",
    "entities": [
        "AWS Successfully",
        "AJAX",
        "Implemented Excel",
        "Present Responsibilities Created",
        "EFEntity Framework",
        "New York",
        "Indexing Constraints and Foreign",
        "ASPNET MVC5",
        "Token",
        "ASP CSS TFS",
        "Utilized Fiddler",
        "Query",
        "TFS",
        "Created Typescript",
        "Entity Framework 60",
        "JavaScript Implemented",
        "XML",
        "Atlanta",
        "Componentbased",
        "Ninject IOC",
        "Angular Developed Single Page Application",
        "TX",
        "SQL Server",
        "CSS Visual Studio Software Engineer Hyperion Tech",
        "Stored Procedures",
        "Developed",
        "Data Access",
        "Developed the Business Logic Data Access",
        "Dallas",
        "NUnit",
        "ASPNET Identity",
        "Used Integrated Entity Framework 60",
        "HTML CSS JavaScript AJAX JSON Angular",
        "Waterfall",
        "Developer Innovee Consulting",
        "the Web Forms Implemented Web",
        "HTML5",
        "ViewState Cookies",
        "the DbContext Implemented Unit Testing",
        "Custom Error",
        "Action Filters Exception Filters",
        "Data Reader Data Adapter Data",
        "ASPNET Performed",
        "IOC",
        "Regular Expressions Created",
        "Washington DC",
        "Tables Views Stored",
        "Designed Web Forms User Controls AJAX Web Forms",
        "ASPNET C AJAX",
        "Entity Framework Involved",
        "MS",
        "MVC",
        "SQL Server Management Studio Involved",
        "MVC Optimized",
        "Observable",
        "NET",
        "JQuery Work Experience Senior Net Developer",
        "API",
        "LINQ",
        "Angular Used AJAX Operations",
        "EnvironmentVisual Studio",
        "Dutech Systems Inc",
        "Filters",
        "Created",
        "NET Remoting Performed Unit",
        "Martin Inc",
        "Coded",
        "SQL Server DB Environment Visual Studio",
        "Used Database",
        "State Management",
        "XML Involved",
        "Authentication and Exceptions",
        "the Remote Application Implemented Distributed",
        "HTML",
        "HTML Helper",
        "Requirement Gathering Analysis Design Development Implementation Testing",
        "SQL",
        "MOQ",
        "Bootstrap",
        "the Entity Framework Responsible for Designing",
        "Design and Development Developed",
        "SOAP Created",
        "CNET Data",
        "Regression",
        "NgBootstarp",
        "Visual Studio",
        "Used Team Foundation Server",
        "CRUD",
        "Analyzing Design Development Management and Implementation of Clientserver Mainframe",
        "Entity Framework",
        "JavaScript",
        "UI",
        "HTML CSS JavaScript jQuery",
        "UI Business Logic",
        "Http Status Codes",
        "CSS",
        "ASPNET Server Controls API Validation Controls",
        "Microsoft Technologies Professional",
        "WCF SOAP API Version Control Tools Team Foundation",
        "jQuery",
        "ASPNET",
        "Boston",
        "REST",
        "Implemented Web Services",
        "the Entity Framework",
        "ASPNET MVC",
        "IDE Visual Studio",
        "MVC C",
        "Created Interfaces"
    ],
    "experience": "Experience in advanced JavaScriptUI frameworks like AngularJS BootstrapUI JSON and JQuery Work Experience Senior Net Developer Mitchell Martin Inc New York NY May 2018 to Present Responsibilities Created the model using Entity Framework 60 using the Database First approach Implemented serverside and clientside validations Used JavaScript for clientside validations Implemented page level error handling using Custom Error pages and Error logs Worked on all the layers such as Presentation layer UI Business Logic layer and Data Access layer as a Full Stack developer Made use of ASPNet Authentication and Authorization providers for ensuring security Used Entity Framework 60 as an Object Relational Mapper ORM for Database operations Properly unit tested the modules to ensure all requirements are met Used SQL Server 2014 to build database and tables Stored Procedures and Triggers Implemented Admin Panel to updating contents and to approve user request in the application Integrated ASPNET Identity based Authentication for authenticating and authorizing users Consumed REST APIs by using Angular http service Utilized Fiddler tool to debug Web API exposed over HTTP Used EFEntity Framework and Web API for data retrieving from the database Coded application functionality and Filters for heavy DOM manipulation Implemented Clientside validations using builtin classes and states in Angular Used AJAX Operations to load data into the view using Angular Developed Single Page Application SPA by using routing Service Used MVC features such as routing controllers action results filter model binders IOC container and used dependency injection Used Integrated Entity Framework 60 to process queries on database for faster speed and more reliability EnvironmentVisual Studio 2017 Angular 2 Net Framework 45 IIS 70 ASPNET MVC5 ASPNET Web API C Entity Framework 60 SQL Server 2016 LINQ JSON HTML5 CSS3 and Bootstrap Batarangle ChartJS GitLab Jasmine Senior Net Developer Dutech Systems Inc Boston MA January 2017 to 2018 Responsibilities Developed single page applications using Angular4 Typescript HTML5 CSS3 JavaScript and Bootstrap and worked in an Agile Scrum development methodology and involved in sprint planning and review Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular4 Implemented responsive web design using Bootstrap and used NgBootstarp based on Angular4 Components Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Implemented HTTP requests using Observable library to handle multiple values over time Worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI along with DOMCSS Manipulation Developed Custom Authentication Exception Filters in Web API that handles Token based Authentication and Exceptions respectively and returns appropriate Http Status Codes Used the Database first approach with the Entity Framework to generate models and the DbContext Implemented Unit Testing using MSTest along with MOQ for mocking the objects Debugged and tracked using Fiddler for Web API service and Jasmine to unit test the Angular project in an isolated and automated manner Environment VS Code C Visual Studio 2015 Angular4 Bootstrap CSS3 JavaScript HTML5 Web API2 Fiddler Jasmine SQL Server Entity Framework NUnit Agile Scrum Software Engineer Agile Premier Dallas TX February 2015 to December 2016 Responsibilities Developed User Interface using HTML CSS JavaScript AJAX JSON Angular and Bootstrap based on AWS Successfully integrated data from multiple data sources including SQL Server 2008 and legacy data delivered via message queues using ADONet Used Web Services to access data from the Remote Application Implemented Distributed computing using NET Remoting Performed Unit testing Used Database first approach in Entity Framework to perform CRUD operations Used LINQ and LINQ to Entities data provider for interacting with the data in the Entity Framework Responsible for Designing and Developing the Reusable UI Components Like Partial View and MVC Layout View Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for clientside validation Implemented JavaScript form validation using Regular Expressions Created synchronous and Asynchronous web service invocation with JavaScript Implemented security authentication and authorization in MVC Optimized the applications performance by Minification and Bundling Developed RESTful web services using WEB API Used serialization and Model binding in Web API Actively involved in Exception Handling Testing and Debugging in Web API Created Indexes to speed up the Query process Procedures and Cursors in SQL Server Management Studio Involved in design and developing of navigations control user controls custom control etc Involved in gathering requirement and creating prototype for the new upgrade for application EnvironmentASPNET 45 C MVC 50 JavaScript ADONET Entity Framework core 20 HTML5 CSS3 XML AJAX JSON JQuery Angular 2 Bootstrap 40 SQL Server 2014 ADONET Net Developer Nitco Inc Houston TX August 2013 to January 2015 Responsibilities Developed MultiTier Application using 3layer approach Presentation layer was developed using ASPNET MVC5 the business layer was developed using C and data access layer using Entity Framework Involved in gathering of requirements by interacting with analysts Used Waterfall development methodology Developed Net assemblies using CNET Data access and Business Logic Worked on Reusable software components Design and Development Developed web pages using HTML CSS JavaScript jQuery and Ajax Worked on JavaScript for ClientSide Validation Used AJAX extensively with JavaScript and XML Involved in designing complete database objects like Tables Views Stored procedures and triggers using SQL Server Used ASPNET MVC5 filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented clientside validations using jQuery validation plugins and ASPNET MVC5 validation at controller level using data annotations for model validations Implemented CRUD functionality with Entity framework in ASPNET MVC5 and implemented sorting filtering and paging with Entity framework in MVC Use jQuery clientside scripting for auto complete tabs validation date picking sorting autosubmit and other functions Created and optimized views for user interactions using objects of HTML Helper class Custom Helpers Developed Stored Procedures Views and Triggers for data manipulation ensuring set up relations includes Indexing Constraints and Foreign Keys Maintenance and Defect Tracking Using TFS JIRA Responsible for quality assurance of finished websites including the validation of web forms and links Involved in testing like Unit test Integration test Acceptance test and Regression testing using NUnit and responsible for writing test scripts and scenarios Environment ASPNET MVC5 jQuery JavaScript C Entity Framework WCF JIRA TFS NUnit SQL Server HTML CSS Visual Studio Software Engineer Hyperion Tech LLC Washington DC March 2011 to July 2013 Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Performed required field comparison range custom validations of the input controls of the Web Forms Implemented Web services for the communication between client and server using SOAP Created web pages using HTML and CSS to take advantage of the newest web techniques and styles Used ADONET extensively for database interactions using Data Reader Data Adapter Data view and Datasets Involved in collecting and analyzing the business requirements from the customers Designed Web Forms User Controls AJAX Web Forms and HTML Pages using ASPNET Performed validations on Web Forms using NET Validation Controls and JavaScript Designed Web Forms using different ASPNET Server Controls API Validation Controls and other thirdparty controls Developed an ASPNET MVC application in Visual Studio using the testdriven development TDD approach Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using MVC C and JavaScript for clientside validation Implemented Web Services using WCF to update the information displayed in the browser and to authenticate the current users to ensure security and information sharing Implemented Dependency Injection with constructor injections for loosely coupled components using Ninject IOC container Generate Entity Framework context models utilizing database first approach and built library of data access methods Used RESTful service methods for create read update and delete form data Product development is an Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASPNET MVC WCF Entity Framework AJAX jQuery IIS AgileScrum Unit test Visual Studio SQL Server JavaScript C TDD C Developer Innovee Consulting LLC Atlanta GA June 2009 to February 2011 Responsibilities Developed a custom Grid control with sorting and paging features Implemented Excel to XML import functionality Designed Graphical User Interface GUI using Master Pages HTML JavaScript and CSS classes Developed the Business Logic Data Access classes and stored procedures for the assigned modules Implemented serverside and clientside validations Made use of ASPNet State Management techniques like ViewState Cookies and Sessions Developed a SOAP based WCF service for exposing certain functions to an external system Used Team Foundation Server to version control the code and various artifacts Created unit test cases and thoroughly tested the modules to ensure all requirements are met Wrote Stored Procedures Triggers Functions and Indexes to improve the throughput of application using optimized queries Prepared detailed design documents for the modules to be developed Developed the User Interface using EXTNet controls Used MVC 3 architecture in the UI project to create views and controllers Used JavaScript for clientside validations and to call controller methods Developed reusable user controls and custom web controls Implemented the business logic for the modules assigned Created Interfaces for service layer and data layer classes Used NHibernate for Database operations Used Team Foundation Server TFS for Source Code Control project related document sharing and team collaboration Created the branches in TFS to facilitate the parallel development process Wrote Stored Procedures to insert update and retrieve data from SQL Server DB Environment Visual Studio 2008 NET 30 C Serviced Components Web Services Custom controls XML SQL Server 2008 VSS Agile Scrum Education Bachelors Additional Information Technical Skills Languages C Net Framework11 20 30 35 40 VB 60 HTML XML Java Script C C JQuery HTML 5 CSS 3 ASNET VBScript ASP 30 Frameworks ASPNET ADONET WCF MVC LINQ IIS ASP CSS TFS AngularJS NodeJS JQuery Operating System DOS NT98XP20002003 Vista2008 Windows 12XP and Windows 7 Databases SQL Server 102012 TSQL Stored Procedures PLSQL NET Technologies ASPNET XML Web Services ADONET WCF WPF and Web API Win Forms Web Forms Windows Services IDE Visual Studio 2013 Notepad Methodologies Ntier Application SOA ClientServer Architecture OOA Prototyping Process Models Systems Integration Web Servers Internet Information Server IIS REST with WCF SOAP API Version Control Tools Team Foundation Server Test Driven Development TDD Visual Source Safe VSS Browsers ALL IE Google Chrome Mozilla Opera Markup Languages HTML XHTML XML XSL DHTML AngularJS Javascript CSS",
    "extracted_keywords": [
        "Net",
        "Developer",
        "Senior",
        "Net",
        "span",
        "lDeveloperspan",
        "Senior",
        "Net",
        "Developer",
        "Mitchell",
        "Martin",
        "Inc",
        "Frisco",
        "TX",
        "years",
        "IT",
        "experience",
        "Developer",
        "Requirement",
        "Gathering",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "documentation",
        "enduser",
        "training",
        "Microsoft",
        "Technologies",
        "Professional",
        "experience",
        "web",
        "mobile",
        "end",
        "applications",
        "Analyzing",
        "Design",
        "Development",
        "Management",
        "Implementation",
        "Clientserver",
        "Mainframe",
        "WEB",
        "applications",
        "Experience",
        "JavaScriptUI",
        "frameworks",
        "AngularJS",
        "BootstrapUI",
        "JSON",
        "JQuery",
        "Work",
        "Experience",
        "Senior",
        "Net",
        "Developer",
        "Mitchell",
        "Martin",
        "Inc",
        "New",
        "York",
        "NY",
        "May",
        "Present",
        "Responsibilities",
        "model",
        "Entity",
        "Framework",
        "Database",
        "First",
        "approach",
        "serverside",
        "validations",
        "JavaScript",
        "validations",
        "page",
        "level",
        "error",
        "handling",
        "Custom",
        "Error",
        "pages",
        "Error",
        "logs",
        "layers",
        "Presentation",
        "layer",
        "UI",
        "Business",
        "Logic",
        "layer",
        "Data",
        "Access",
        "layer",
        "Stack",
        "developer",
        "use",
        "ASPNet",
        "Authentication",
        "Authorization",
        "providers",
        "security",
        "Used",
        "Entity",
        "Framework",
        "Object",
        "Relational",
        "Mapper",
        "ORM",
        "Database",
        "operations",
        "Properly",
        "unit",
        "modules",
        "requirements",
        "SQL",
        "Server",
        "database",
        "Stored",
        "Procedures",
        "Triggers",
        "Admin",
        "Panel",
        "contents",
        "user",
        "request",
        "application",
        "Integrated",
        "ASPNET",
        "Identity",
        "Authentication",
        "authenticating",
        "users",
        "REST",
        "APIs",
        "http",
        "service",
        "Fiddler",
        "tool",
        "Web",
        "API",
        "HTTP",
        "Used",
        "EFEntity",
        "Framework",
        "Web",
        "API",
        "data",
        "database",
        "application",
        "functionality",
        "Filters",
        "DOM",
        "manipulation",
        "Clientside",
        "validations",
        "builtin",
        "classes",
        "states",
        "Angular",
        "Used",
        "AJAX",
        "Operations",
        "data",
        "view",
        "Angular",
        "Developed",
        "Single",
        "Page",
        "Application",
        "SPA",
        "Service",
        "MVC",
        "features",
        "controllers",
        "action",
        "filter",
        "model",
        "binders",
        "container",
        "dependency",
        "injection",
        "Integrated",
        "Entity",
        "Framework",
        "queries",
        "database",
        "speed",
        "reliability",
        "EnvironmentVisual",
        "Studio",
        "Angular",
        "Net",
        "Framework",
        "IIS",
        "ASPNET",
        "MVC5",
        "ASPNET",
        "Web",
        "API",
        "C",
        "Entity",
        "Framework",
        "SQL",
        "Server",
        "JSON",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Batarangle",
        "ChartJS",
        "GitLab",
        "Jasmine",
        "Senior",
        "Net",
        "Developer",
        "Dutech",
        "Systems",
        "Inc",
        "Boston",
        "MA",
        "January",
        "Responsibilities",
        "page",
        "applications",
        "Angular4",
        "Typescript",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "Agile",
        "Scrum",
        "development",
        "methodology",
        "sprint",
        "planning",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "architecture",
        "Angular4",
        "web",
        "design",
        "Bootstrap",
        "NgBootstarp",
        "Angular4",
        "Components",
        "Bootstrap",
        "responsiveness",
        "webpage",
        "design",
        "custom",
        "CSS3",
        "style",
        "sheet",
        "elements",
        "HTTP",
        "requests",
        "library",
        "values",
        "time",
        "calls",
        "WEB",
        "APIs",
        "data",
        "end",
        "response",
        "UI",
        "DOMCSS",
        "Manipulation",
        "Developed",
        "Custom",
        "Authentication",
        "Exception",
        "Filters",
        "Web",
        "API",
        "Token",
        "Authentication",
        "Exceptions",
        "Http",
        "Status",
        "Codes",
        "Database",
        "approach",
        "Entity",
        "Framework",
        "models",
        "DbContext",
        "Implemented",
        "Unit",
        "Testing",
        "MSTest",
        "MOQ",
        "objects",
        "Fiddler",
        "Web",
        "API",
        "service",
        "Jasmine",
        "unit",
        "project",
        "manner",
        "Environment",
        "VS",
        "Code",
        "C",
        "Visual",
        "Studio",
        "Angular4",
        "Bootstrap",
        "CSS3",
        "JavaScript",
        "HTML5",
        "Web",
        "API2",
        "Fiddler",
        "Jasmine",
        "SQL",
        "Server",
        "Entity",
        "Framework",
        "NUnit",
        "Agile",
        "Scrum",
        "Software",
        "Engineer",
        "Agile",
        "Premier",
        "Dallas",
        "TX",
        "February",
        "December",
        "Responsibilities",
        "Developed",
        "User",
        "Interface",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JSON",
        "Angular",
        "Bootstrap",
        "AWS",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "legacy",
        "data",
        "message",
        "queues",
        "ADONet",
        "Used",
        "Web",
        "Services",
        "data",
        "Remote",
        "Application",
        "computing",
        "NET",
        "Remoting",
        "Performed",
        "Unit",
        "testing",
        "Database",
        "approach",
        "Entity",
        "Framework",
        "CRUD",
        "operations",
        "LINQ",
        "LINQ",
        "Entities",
        "data",
        "provider",
        "data",
        "Entity",
        "Framework",
        "Responsible",
        "Designing",
        "Reusable",
        "UI",
        "Components",
        "View",
        "MVC",
        "Layout",
        "View",
        "UI",
        "user",
        "web",
        "pages",
        "classes",
        "functions",
        "ASPNET",
        "C",
        "AJAX",
        "JavaScript",
        "validation",
        "JavaScript",
        "form",
        "validation",
        "Regular",
        "Expressions",
        "web",
        "service",
        "invocation",
        "JavaScript",
        "security",
        "authentication",
        "authorization",
        "MVC",
        "applications",
        "performance",
        "Minification",
        "Bundling",
        "web",
        "services",
        "WEB",
        "API",
        "serialization",
        "Model",
        "Web",
        "API",
        "Exception",
        "Handling",
        "Testing",
        "Debugging",
        "Web",
        "API",
        "Indexes",
        "Query",
        "process",
        "Procedures",
        "Cursors",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "design",
        "developing",
        "navigations",
        "control",
        "user",
        "custom",
        "control",
        "requirement",
        "prototype",
        "upgrade",
        "application",
        "EnvironmentASPNET",
        "C",
        "MVC",
        "JavaScript",
        "ADONET",
        "Entity",
        "Framework",
        "HTML5",
        "CSS3",
        "XML",
        "AJAX",
        "JSON",
        "JQuery",
        "Angular",
        "Bootstrap",
        "SQL",
        "Server",
        "ADONET",
        "Net",
        "Developer",
        "Nitco",
        "Inc",
        "Houston",
        "TX",
        "August",
        "January",
        "Responsibilities",
        "Developed",
        "MultiTier",
        "Application",
        "approach",
        "Presentation",
        "layer",
        "ASPNET",
        "MVC5",
        "business",
        "layer",
        "C",
        "data",
        "access",
        "layer",
        "Entity",
        "Framework",
        "gathering",
        "requirements",
        "analysts",
        "Waterfall",
        "development",
        "methodology",
        "assemblies",
        "CNET",
        "Data",
        "access",
        "Business",
        "Logic",
        "Reusable",
        "software",
        "components",
        "Design",
        "Development",
        "Developed",
        "web",
        "pages",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Ajax",
        "Worked",
        "JavaScript",
        "ClientSide",
        "Validation",
        "Used",
        "AJAX",
        "JavaScript",
        "XML",
        "database",
        "objects",
        "Tables",
        "Views",
        "procedures",
        "triggers",
        "SQL",
        "Server",
        "ASPNET",
        "MVC5",
        "filters",
        "Action",
        "Filters",
        "Exception",
        "Filters",
        "custom",
        "filters",
        "controller",
        "action",
        "level",
        "controller",
        "level",
        "validations",
        "jQuery",
        "validation",
        "plugins",
        "ASPNET",
        "MVC5",
        "validation",
        "controller",
        "level",
        "data",
        "annotations",
        "model",
        "validations",
        "CRUD",
        "functionality",
        "Entity",
        "framework",
        "ASPNET",
        "MVC5",
        "filtering",
        "Entity",
        "framework",
        "MVC",
        "Use",
        "jQuery",
        "clientside",
        "scripting",
        "auto",
        "tabs",
        "validation",
        "date",
        "autosubmit",
        "functions",
        "views",
        "user",
        "interactions",
        "objects",
        "HTML",
        "Helper",
        "class",
        "Custom",
        "Helpers",
        "Stored",
        "Procedures",
        "Views",
        "Triggers",
        "data",
        "manipulation",
        "relations",
        "Indexing",
        "Constraints",
        "Foreign",
        "Keys",
        "Maintenance",
        "Defect",
        "Tracking",
        "TFS",
        "JIRA",
        "Responsible",
        "quality",
        "assurance",
        "websites",
        "validation",
        "web",
        "forms",
        "links",
        "testing",
        "Unit",
        "test",
        "Integration",
        "test",
        "Acceptance",
        "test",
        "Regression",
        "testing",
        "NUnit",
        "test",
        "scripts",
        "scenarios",
        "Environment",
        "ASPNET",
        "MVC5",
        "jQuery",
        "JavaScript",
        "C",
        "Entity",
        "Framework",
        "WCF",
        "JIRA",
        "TFS",
        "NUnit",
        "SQL",
        "Server",
        "HTML",
        "CSS",
        "Visual",
        "Studio",
        "Software",
        "Engineer",
        "Hyperion",
        "Tech",
        "LLC",
        "Washington",
        "DC",
        "March",
        "July",
        "Responsibilities",
        "requirements",
        "design",
        "architecture",
        "programming",
        "testing",
        "implementation",
        "application",
        "Performed",
        "field",
        "comparison",
        "range",
        "custom",
        "validations",
        "input",
        "controls",
        "Web",
        "Forms",
        "Web",
        "services",
        "communication",
        "client",
        "server",
        "SOAP",
        "web",
        "pages",
        "HTML",
        "CSS",
        "advantage",
        "web",
        "techniques",
        "styles",
        "ADONET",
        "database",
        "interactions",
        "Data",
        "Reader",
        "Data",
        "Adapter",
        "Data",
        "view",
        "Datasets",
        "business",
        "requirements",
        "customers",
        "Web",
        "Forms",
        "User",
        "Controls",
        "AJAX",
        "Web",
        "Forms",
        "HTML",
        "Pages",
        "ASPNET",
        "Performed",
        "validations",
        "Web",
        "Forms",
        "NET",
        "Validation",
        "Controls",
        "JavaScript",
        "Designed",
        "Web",
        "Forms",
        "ASPNET",
        "Server",
        "Controls",
        "API",
        "Validation",
        "Controls",
        "thirdparty",
        "controls",
        "ASPNET",
        "MVC",
        "application",
        "Visual",
        "Studio",
        "testdriven",
        "development",
        "TDD",
        "approach",
        "UI",
        "user",
        "web",
        "pages",
        "classes",
        "functions",
        "MVC",
        "C",
        "JavaScript",
        "validation",
        "Web",
        "Services",
        "WCF",
        "information",
        "browser",
        "users",
        "security",
        "information",
        "Dependency",
        "Injection",
        "constructor",
        "injections",
        "components",
        "Ninject",
        "IOC",
        "container",
        "Generate",
        "Entity",
        "Framework",
        "context",
        "models",
        "database",
        "approach",
        "library",
        "data",
        "access",
        "methods",
        "service",
        "methods",
        "create",
        "read",
        "update",
        "form",
        "data",
        "Product",
        "development",
        "Agile",
        "SCRUM",
        "methodology",
        "progress",
        "task",
        "assignment",
        "meetings",
        "Unit",
        "testing",
        "MS",
        "testing",
        "integration",
        "testing",
        "application",
        "Environment",
        "ASPNET",
        "MVC",
        "WCF",
        "Entity",
        "Framework",
        "AJAX",
        "jQuery",
        "IIS",
        "AgileScrum",
        "Unit",
        "test",
        "Visual",
        "Studio",
        "SQL",
        "Server",
        "JavaScript",
        "C",
        "TDD",
        "C",
        "Developer",
        "Innovee",
        "Consulting",
        "LLC",
        "Atlanta",
        "GA",
        "June",
        "February",
        "Responsibilities",
        "custom",
        "Grid",
        "control",
        "features",
        "Excel",
        "import",
        "functionality",
        "Graphical",
        "User",
        "Interface",
        "GUI",
        "Master",
        "Pages",
        "HTML",
        "JavaScript",
        "CSS",
        "classes",
        "Business",
        "Logic",
        "Data",
        "Access",
        "classes",
        "procedures",
        "modules",
        "serverside",
        "validations",
        "use",
        "ASPNet",
        "State",
        "Management",
        "techniques",
        "ViewState",
        "Cookies",
        "Sessions",
        "SOAP",
        "WCF",
        "service",
        "functions",
        "system",
        "Team",
        "Foundation",
        "Server",
        "version",
        "code",
        "artifacts",
        "unit",
        "test",
        "cases",
        "modules",
        "requirements",
        "Wrote",
        "Stored",
        "Procedures",
        "Triggers",
        "Functions",
        "Indexes",
        "throughput",
        "application",
        "queries",
        "design",
        "documents",
        "modules",
        "Developed",
        "User",
        "Interface",
        "EXTNet",
        "controls",
        "MVC",
        "architecture",
        "UI",
        "project",
        "views",
        "controllers",
        "JavaScript",
        "validations",
        "controller",
        "methods",
        "user",
        "controls",
        "custom",
        "web",
        "controls",
        "business",
        "logic",
        "modules",
        "Created",
        "Interfaces",
        "service",
        "layer",
        "data",
        "layer",
        "classes",
        "NHibernate",
        "Database",
        "operations",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Source",
        "Code",
        "Control",
        "project",
        "document",
        "sharing",
        "team",
        "collaboration",
        "branches",
        "TFS",
        "development",
        "process",
        "Wrote",
        "Stored",
        "Procedures",
        "update",
        "retrieve",
        "data",
        "SQL",
        "Server",
        "DB",
        "Environment",
        "Visual",
        "Studio",
        "NET",
        "C",
        "Serviced",
        "Components",
        "Web",
        "Services",
        "Custom",
        "XML",
        "SQL",
        "Server",
        "VSS",
        "Agile",
        "Scrum",
        "Education",
        "Bachelors",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "C",
        "Net",
        "Framework11",
        "VB",
        "HTML",
        "XML",
        "Java",
        "Script",
        "C",
        "C",
        "JQuery",
        "HTML",
        "CSS",
        "ASNET",
        "VBScript",
        "ASP",
        "Frameworks",
        "ASPNET",
        "ADONET",
        "WCF",
        "MVC",
        "IIS",
        "ASP",
        "CSS",
        "TFS",
        "NodeJS",
        "JQuery",
        "Operating",
        "System",
        "DOS",
        "NT98XP20002003",
        "Vista2008",
        "Windows",
        "Windows",
        "SQL",
        "Server",
        "TSQL",
        "Stored",
        "Procedures",
        "PLSQL",
        "NET",
        "Technologies",
        "ASPNET",
        "XML",
        "Web",
        "Services",
        "ADONET",
        "WCF",
        "WPF",
        "Web",
        "API",
        "Win",
        "Forms",
        "Web",
        "Forms",
        "Windows",
        "Services",
        "IDE",
        "Visual",
        "Studio",
        "Notepad",
        "Methodologies",
        "Ntier",
        "Application",
        "SOA",
        "ClientServer",
        "Architecture",
        "OOA",
        "Prototyping",
        "Process",
        "Models",
        "Systems",
        "Integration",
        "Web",
        "Servers",
        "Internet",
        "Information",
        "Server",
        "IIS",
        "REST",
        "WCF",
        "SOAP",
        "API",
        "Version",
        "Control",
        "Tools",
        "Team",
        "Foundation",
        "Server",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Visual",
        "Source",
        "Safe",
        "VSS",
        "Browsers",
        "IE",
        "Google",
        "Chrome",
        "Mozilla",
        "Opera",
        "Markup",
        "Languages",
        "HTML",
        "XHTML",
        "XML",
        "XSL",
        "Javascript",
        "CSS"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:54:29.537040",
    "resume_data": "Senior Net Developer Senior Net span lDeveloperspan Senior Net Developer Mitchell Martin Inc Frisco TX 9 years of IT experience as Developer and involved in Requirement Gathering Analysis Design Development Implementation Testing documentation enduser training and Webbased using Microsoft Technologies Professional experience in web mobile and back end applications Analyzing Design Development Management and Implementation of Clientserver Mainframe and WEB enabled applications Experience in advanced JavaScriptUI frameworks like AngularJS BootstrapUI JSON and JQuery Work Experience Senior Net Developer Mitchell Martin Inc New York NY May 2018 to Present Responsibilities Created the model using Entity Framework 60 using the Database First approach Implemented serverside and clientside validations Used JavaScript for clientside validations Implemented page level error handling using Custom Error pages and Error logs Worked on all the layers such as Presentation layer UI Business Logic layer and Data Access layer as a Full Stack developer Made use of ASPNet Authentication and Authorization providers for ensuring security Used Entity Framework 60 as an Object Relational Mapper ORM for Database operations Properly unit tested the modules to ensure all requirements are met Used SQL Server 2014 to build database and tables Stored Procedures and Triggers Implemented Admin Panel to updating contents and to approve user request in the application Integrated ASPNET Identity based Authentication for authenticating and authorizing users Consumed REST APIs by using Angular http service Utilized Fiddler tool to debug Web API exposed over HTTP Used EFEntity Framework and Web API for data retrieving from the database Coded application functionality and Filters for heavy DOM manipulation Implemented Clientside validations using builtin classes and states in Angular Used AJAX Operations to load data into the view using Angular Developed Single Page Application SPA by using routing Service Used MVC features such as routing controllers action results filter model binders IOC container and used dependency injection Used Integrated Entity Framework 60 to process queries on database for faster speed and more reliability EnvironmentVisual Studio 2017 Angular 2 Net Framework 45 IIS 70 ASPNET MVC5 ASPNET Web API C Entity Framework 60 SQL Server 2016 LINQ JSON HTML5 CSS3 and Bootstrap Batarangle ChartJS GitLab Jasmine Senior Net Developer Dutech Systems Inc Boston MA January 2017 to 2018 Responsibilities Developed single page applications using Angular4 Typescript HTML5 CSS3 JavaScript and Bootstrap and worked in an Agile Scrum development methodology and involved in sprint planning and review Created Typescript reusable components and services to consume REST APIs using Componentbased architecture provided by Angular4 Implemented responsive web design using Bootstrap and used NgBootstarp based on Angular4 Components Used Bootstrap to help the responsiveness of webpage and design with few custom CSS3 style sheet on elements Implemented HTTP requests using Observable library to handle multiple values over time Worked with making calls to WEB APIs to fetch the data from the back end as JSON response and parse it on the UI along with DOMCSS Manipulation Developed Custom Authentication Exception Filters in Web API that handles Token based Authentication and Exceptions respectively and returns appropriate Http Status Codes Used the Database first approach with the Entity Framework to generate models and the DbContext Implemented Unit Testing using MSTest along with MOQ for mocking the objects Debugged and tracked using Fiddler for Web API service and Jasmine to unit test the Angular project in an isolated and automated manner Environment VS Code C Visual Studio 2015 Angular4 Bootstrap CSS3 JavaScript HTML5 Web API2 Fiddler Jasmine SQL Server Entity Framework NUnit Agile Scrum Software Engineer Agile Premier Dallas TX February 2015 to December 2016 Responsibilities Developed User Interface using HTML CSS JavaScript AJAX JSON Angular and Bootstrap based on AWS Successfully integrated data from multiple data sources including SQL Server 2008 and legacy data delivered via message queues using ADONet Used Web Services to access data from the Remote Application Implemented Distributed computing using NET Remoting Performed Unit testing Used Database first approach in Entity Framework to perform CRUD operations Used LINQ and LINQ to Entities data provider for interacting with the data in the Entity Framework Responsible for Designing and Developing the Reusable UI Components Like Partial View and MVC Layout View Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using ASPNET C AJAX and JavaScript for clientside validation Implemented JavaScript form validation using Regular Expressions Created synchronous and Asynchronous web service invocation with JavaScript Implemented security authentication and authorization in MVC Optimized the applications performance by Minification and Bundling Developed RESTful web services using WEB API Used serialization and Model binding in Web API Actively involved in Exception Handling Testing and Debugging in Web API Created Indexes to speed up the Query process Procedures and Cursors in SQL Server Management Studio Involved in design and developing of navigations control user controls custom control etc Involved in gathering requirement and creating prototype for the new upgrade for application EnvironmentASPNET 45 C MVC 50 JavaScript ADONET Entity Framework core 20 HTML5 CSS3 XML AJAX JSON JQuery Angular 2 Bootstrap 40 SQL Server 2014 ADONET Net Developer Nitco Inc Houston TX August 2013 to January 2015 Responsibilities Developed MultiTier Application using 3layer approach Presentation layer was developed using ASPNET MVC5 the business layer was developed using C and data access layer using Entity Framework Involved in gathering of requirements by interacting with analysts Used Waterfall development methodology Developed Net assemblies using CNET Data access and Business Logic Worked on Reusable software components Design and Development Developed web pages using HTML CSS JavaScript jQuery and Ajax Worked on JavaScript for ClientSide Validation Used AJAX extensively with JavaScript and XML Involved in designing complete database objects like Tables Views Stored procedures and triggers using SQL Server Used ASPNET MVC5 filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented clientside validations using jQuery validation plugins and ASPNET MVC5 validation at controller level using data annotations for model validations Implemented CRUD functionality with Entity framework in ASPNET MVC5 and implemented sorting filtering and paging with Entity framework in MVC Use jQuery clientside scripting for auto complete tabs validation date picking sorting autosubmit and other functions Created and optimized views for user interactions using objects of HTML Helper class Custom Helpers Developed Stored Procedures Views and Triggers for data manipulation ensuring set up relations includes Indexing Constraints and Foreign Keys Maintenance and Defect Tracking Using TFS JIRA Responsible for quality assurance of finished websites including the validation of web forms and links Involved in testing like Unit test Integration test Acceptance test and Regression testing using NUnit and responsible for writing test scripts and scenarios Environment ASPNET MVC5 jQuery JavaScript C Entity Framework WCF JIRA TFS NUnit SQL Server HTML CSS Visual Studio Software Engineer Hyperion Tech LLC Washington DC March 2011 to July 2013 Responsibilities Involved in requirements gathering design architecture programming testing and implementation of the application Performed required field comparison range custom validations of the input controls of the Web Forms Implemented Web services for the communication between client and server using SOAP Created web pages using HTML and CSS to take advantage of the newest web techniques and styles Used ADONET extensively for database interactions using Data Reader Data Adapter Data view and Datasets Involved in collecting and analyzing the business requirements from the customers Designed Web Forms User Controls AJAX Web Forms and HTML Pages using ASPNET Performed validations on Web Forms using NET Validation Controls and JavaScript Designed Web Forms using different ASPNET Server Controls API Validation Controls and other thirdparty controls Developed an ASPNET MVC application in Visual Studio using the testdriven development TDD approach Involved in building flexible UI more user interactive and userfriendly web pages reusable classes functions using MVC C and JavaScript for clientside validation Implemented Web Services using WCF to update the information displayed in the browser and to authenticate the current users to ensure security and information sharing Implemented Dependency Injection with constructor injections for loosely coupled components using Ninject IOC container Generate Entity Framework context models utilizing database first approach and built library of data access methods Used RESTful service methods for create read update and delete form data Product development is an Agile SCRUM methodology where progress and task assignment are discussed in everyday meetings Involved in Unit testing using MS testing and integration testing of the entire application Environment ASPNET MVC WCF Entity Framework AJAX jQuery IIS AgileScrum Unit test Visual Studio SQL Server JavaScript C TDD C Developer Innovee Consulting LLC Atlanta GA June 2009 to February 2011 Responsibilities Developed a custom Grid control with sorting and paging features Implemented Excel to XML import functionality Designed Graphical User Interface GUI using Master Pages HTML JavaScript and CSS classes Developed the Business Logic Data Access classes and stored procedures for the assigned modules Implemented serverside and clientside validations Made use of ASPNet State Management techniques like ViewState Cookies and Sessions Developed a SOAP based WCF service for exposing certain functions to an external system Used Team Foundation Server to version control the code and various artifacts Created unit test cases and thoroughly tested the modules to ensure all requirements are met Wrote Stored Procedures Triggers Functions and Indexes to improve the throughput of application using optimized queries Prepared detailed design documents for the modules to be developed Developed the User Interface using EXTNet controls Used MVC 3 architecture in the UI project to create views and controllers Used JavaScript for clientside validations and to call controller methods Developed reusable user controls and custom web controls Implemented the business logic for the modules assigned Created Interfaces for service layer and data layer classes Used NHibernate for Database operations Used Team Foundation Server TFS for Source Code Control project related document sharing and team collaboration Created the branches in TFS to facilitate the parallel development process Wrote Stored Procedures to insert update and retrieve data from SQL Server DB Environment Visual Studio 2008 NET 30 C Serviced Components Web Services Custom controls XML SQL Server 2008 VSS Agile Scrum Education Bachelors Additional Information Technical Skills Languages C Net Framework11 20 30 35 40 VB 60 HTML XML Java Script C C JQuery HTML 5 CSS 3 ASNET VBScript ASP 30 Frameworks ASPNET ADONET WCF MVC LINQ IIS ASP CSS TFS AngularJS NodeJS JQuery Operating System DOS NT98XP20002003 Vista2008 Windows 200320082012XP and Windows 7 Databases SQL Server 2005200820102012 TSQL Stored Procedures PLSQL NET Technologies ASPNET XML Web Services ADONET WCF WPF and Web API Win Forms Web Forms Windows Services IDE Visual Studio 200320052008201020122013 Notepad Methodologies Ntier Application SOA ClientServer Architecture OOA Prototyping Process Models Systems Integration Web Servers Internet Information Server IIS REST with WCF SOAP API Version Control Tools Team Foundation Server Test Driven Development TDD Visual Source Safe VSS Browsers ALL IE Google Chrome Mozilla Opera Markup Languages HTML XHTML XML XSL DHTML AngularJS Javascript CSS",
    "unique_id": "d2407e3d-743c-4882-9ead-091d15101568"
}