{
    "clean_data": "Java SDET and Developer span lJavaspan SDET and span lDeveloperspan Java SDET and Developer Nintendo of America Boston MA 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modeling skilled at progressing from problem statement to welldocumented designs and code Work Experience Java SDET and Developer Nintendo of America Redmond WA February 2017 to Present Description The Nintendo of America is a subsidiary of Nintendo CoLtd It is Japanese multinational consumer electronics and Software Company it is the worlds largest video game company by revenue The Nintendo of America handles the sales marketing and Advertising of Nintendo Responsibilities Participated in all phases of the SDLC including technical requirements design development and unit testing Used JSPs HTML on front end Servlets as Front Controllers and JavaScript and JQuery for clientside validations Used Angular JS in dynamic binding of HTML web pages using the MVC architecture Created controller Servlets for handling HTTP requests from JSP pages Developed few web pages using JSP JSTL HTML CSS Java script Worked on AngularJS framework to develop the page and make it responsive Developed RESTfulWeb Services for the project as per the business requirements Involved in developing XML Schemas and used JAXB for marshallingunmarshalling Implemented MVC architecture by using Spring framework Implemented the Spring dependency injection of the Database helper instance to the action objects Used JDBC to invoke Stored Procedures and database connectivity to Oracle database All the coding and testing was performed using IntelliJ Maintained the existing code based developed in Spring and Hibernate framework by incorporating new features and fixing bugs Involved in fixing bugs and unit testing with test cases using JUnit framework Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Developed stored procedures and triggers using PLSQL to calculate and update the tables to implement business logic using Oracle database Involved in writing Hibernate Query Language HQL for persistence layer Used Maven to build run and create JARs and WAR files among other uses Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Worked with Jenkins in continuous Integration by using GIT tool and executed projects in Apache Maven and Ant Used Log4j for application logging and debugging Involve in Technology Performance Optimization and Error Reduction Procedures Maintain and enhance existing client applications and internal systems to improve integration Wrote Test Cases which adhere to a TestDriven DevelopmentTDD Pattern JUnit was used for unit testing and implementing Test Driven Development TDD methodology Involved in planning process of iterations under the Agile Scrum methodology Environment Java 17J2EE Spring30 Hibernate Oracle AngularJS HTML XML CSS AJAX JavaScript Log4J Restful Web Services Maven Java Application Developer Capital One Investing LLC Seattle WA June 2015 to January 2017 Description The Capital One Investing LLC is a subsidiary of Capital One Financial Corporation Itis an Online Brokerage investment firm with its headquarters in Seattle WA Capital One Investing is a fullservice brokerage offering a range of investment services including advised accounts and fully selfdirected digital accounts Capital One Investing allows investors to easily buy stocks options mutual funds and exchangetraded funds as partial shares via the Share Builder Investment Plan Portfolio Builder and Fund Evaluator a digital tool to help investors pick which funds sold on Capital Ones online platform are best for them Responsibilities Participated in all phases of the SDLC including technical requirements design development deployment and testing Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Migrated several Java Batch Applications and Services from the Onpremise infrastructure to AWScloud Migrated the Java REST API builton the Drop Wizard framework to AWS cloud platform Wrote the Gradle scripts to build the Applications and used AntHill Pro to get the build of the application and Deploy the application in AWS QA environment Made code changes to upgrade the existing Database connections to SSL and upgraded the existing TLS versions for the Applications while migrating them to AWS cloud platforms Worked on the latest AWS products like Amazon EC2 AmazonSimple Storage ServiceS3 Amazon Route 53 Amazon EBS Elastic Load Balancing AWS Cloud formation AWS VPC Security Groups Developed theAWS Cloud formation templates and Parameter files for various environments such as QA Dev INT Preprod and Prod as per the AWS designdocument for various applications Created the AWS environments in QA Dev INT Preprod and Production and Deployed the application in those environments Used Amazon Cloud watch to monitor environment for operational and performance metrics during load testing Written CHEF cookbooks andCHEF Environment files for automating the deployment in the AWS Cloud infrastructure We used GIT for versioning and maintaining the Application related source code and as well as the AWS Cloud and CHEFinfrastructure code for various environments Used Splunk to capture the application logs and Chef logs from the AWS EC2 instances to verify and validate the deployments Run the Splunk queries to obtain the application logs and analyzed and Monitored the application logs for the Applications running on the AWS cloud platform Created the Encrypted and Unencrypted CHEF data bags for managing the Application specific property values in the configuration files Run the Jenkins jobs to Upload the necessary CHEF artifacts into enterprise CHEF server Used Aqua Data Studio to connect to the Sybase database and run the required stored Procedures and modify the data in tables by Using SQL Statements Performed End to End testing in all the environments after migrating the application from OnPerm to AWS Cloud platform Involved in planning the Rehydration for the AMIs which are deployed in the production and performed the Rehydration to the Production AWS instances Involved in Cutover planning and validation testing for the Batch applications Services and APIs which are migrated to the AWS Cloud platform Environment Java 18J2EE Log4J Restful Web Services Gradle AWS Cloud platform Splunk CHEF Aqua Data studio Swagger Eclipse Sybase Database JAVA J2EE Developer NAIC Kansas City MO January 2014 to May 2015 Description The National Association of Insurance Commissioners NAIC is the US standardsetting and regulatory support organization created and represented by the chief insurance regulators from the 50 states the District of Columbia and five US territories Responsibilities Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Responsible for Requirements capturing Preparing Software Requirement Specification Involved in Design and Development using J2EEHibernate XML JSP Spring MVCModel Framework and Oracle Used AngularJS framework to bind HTML to java script objects for single page application Familiar with concepts of Directives DataBinding and Dependency Injection in Angular JS Developed RESTful Web Services for the project as per the business requirements Worked on Data Management classes using Hibernate to access the Oracle Database Implemented the application using Spring Framework which is based on MVC design pattern Used spring framework for Dependency injection Used Cucumber for Behavior Driven Testing Implemented persistence layer using Hibernate framework Have proficiency in using JSPs and Servlets for view and controlling parts of application Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations Used XSLT for transforming the XML documents in to HTML documents Building the application using Maven scripts Monitored the error logs using Log4j and fixed the problems Written Test Cases for Unit Level Testing using JUnit Create test framework using Selenium WebDriver Java with BDD Cucumber framework and Gherkins syntax for further test creation and execution Involved in the Unit Testing and defect resolution as and when they are reported Designing creating reusable custom data visualization componentswidgets Integrate the developed Applications with Enterprise Security Environments Involve in Technology Performance Optimization and Error Reduction Procedures Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Deployed the application on JBOSS Used Mongo DB for the JSON documents retrieval Data was stored in Mongo DB with elastic search Design and implement effective User Interfaces that are intuitive and easy to use Maintain and enhance existing client applications and internal systems to improve integration Worked on SVN for version control Environment Java 16J2EE Oracle 11g HTML Maven Eclipse 4 Unix Web logic Application Server 11 Hibernate 30 Spring 30 LOG4J SVN JavaJ2EE Developer American Express Phoenix AZ April 2012 to December 2013 Description American Express is an American multinational financial services organization which is primarily known for providing financial services such as Credit card Charge card and travelers cheque Responsibilities Involved in creating the workflow framework by using threads concept to execute spring beans sequentially parallel and parallel for each Responsible for design and implementation of various modules of the application using SpringHibernate architecture Responsible for implementing the transaction management in the application by applying Spring AOP methodology Designed and developed UI with AJAX HTML XHTML DHTML and java script for more interactive web pages Involved in creating the Xml schemas and WSDL documents by understanding the business requirements and the application as web service component by using JAXWS Published and consumed SOAP Web Services for transferring data between different applications Provided security to Web Service using trusted certificates and created the DAO classes using Spring DAO module Built standalone applications with Spring Boot Created stored procedures and functions to process the data from Mainframe Systems Implemented Spring ORM wiring with Hibernate provided access to Oracle  RDBMS Hibernate Query Language HQL was used to perform various queries in the database Wrote build and deployed scripts using Shell and ANT scripts and involved in performance analysis of the application and fixed problemssuggest solutions JUnit was used for unit testing and implementing Test Driven Development TDD methodology Used Eclipse IDE for developing code modules in the development environment Implemented the logging mechanism using log4j framework Used SVN version control to track and maintain the different version of the project Worked on a variety of defects to stabilize application Environment Java 15 J2EE spring 25 Hibernate Oracle  HTML CSS AJAX JQuery JSP Servlets Maven CSS Web Logic JUnit Eclipse Log4j SVN JavaJ2EE Developer Citizens Bank Chicago IL May 2010 to March 2012 Worked as a Java Developer for a Web based online application for Citizens National Bank this online application offers Banking and Investment services for high networth customers The project involved working on commercial web applications which included developing robust reusable services in context of overall middleware strategy Responsibilities Implemented User Interface in ModelViewController Architecture which accomplishes a tight and neat coordination of JSP and Custom Taglibs Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface Developed Serverside components using Spring IOC Hibernate and design patterns such as Business Delegate session facade Service locator DAOs DTOs Developed and utilized J2EE Services and JMS components for message communication in WebLogic Application Server Involved in the development of the application framework Designed and developed various Business Delegates and EJB Stateless Session Beans to implement the business functionality and security to the system Implemented data access mapping and framework using Hibernate ORM tool Used DAO pattern to implement data access framework Developed reusable and interoperable Web service modules based on SOA architecture using JAXWS and Apache AXIS 20 Developed XML Schema XSLT and WSDL using XMLSPY Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Worked on XPath and XQuery for transforming inbound calls and making outbound calls to business services Configured development environment using WebLogicapplication server for developers integration testing Involved in integrating JMS providers with J2EE application servers by using J2EE Connecting Architecture Developed Unit testing framework driven by Test First methodology to develop test cases for business layer and User Interface using mock objects Environment Java WebLogic Eclipse Hibernate Spring EJB JMS Java Script AJAX Web Services AXIS JAXRPC Maven Clear Case JUnit Oracle Sun Solaris Jr JAVA Developer Smart Software technologies Hyderabad Telangana January 2009 to April 2010 Responsibilities Analyze the prerequisites in the view of business data and user necessities Implemented the modules utilizingModelViewController MVC design pattern Develop GUI related changes utilizing JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for communicating with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed Servlet and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using session faade Developed value object mainly used to wrap the data and pass across the layers Developed business logic utilizingStateless session beans for calculating asset depreciation on Straight Line and written down value approaches Designed database Queries for updating insertion and retrieval of asset information and rates Created java classes to interact with database using JDBC Used JMeter for Database Backend Testing with JDBC ODBC Connection Environment Java 14 Servlets JSP EJB20 J2EE 14 STRUTS XML XSLT Java Script Oracle 8iMs Visio Eclipse JDBC CVS Windows 2003 Server Education BACHELORS in ELECTRICAL AND ELECTRONICS ENGINEERING KL UNIVERSITY Skills J2EE 9 years JAVA 9 years TESTING 9 years ECLIPSE 8 years WEB SERVICES 7 years Java J2Ee Spring Soap Rest Hibernate Additional Information Technical Skills Programming Languages JDK 151617 18 C SQL PLSQL Platforms Windows 2003 2008 Server Linux Unix Amazon Web Services Java Core Memory Management Thread Classes Exception Handling and Collection APIs UML Tools MS Visio Rational Rose Enterprise IDE Reporting Tools Eclipse NetBeans IntelliJ JBuilder 2005 2006 J2EE MVC Frameworks Struts 11 and 2 Spring 25 30 JSF 12 Databases MySQL 51 Oracle 11g 10g  8i MS SQL Server 2008 DB2 Database Tools SQL Developer for Oracle Application Servers IBM Web Sphere Web Logic JBoss Apache Tomcat Web Technologies HTML DHTML CSS Java Script XML SOAP XSL XSLT XHTMLAWS ORM Frameworks Hibernate 30 JPA Version Control Rational Clear Case SVN CVS GitHub Middleware Technologies EJB 21 30 JNDI JMS Java Message Service Design Methodologies Rational Unified Process Agile Scrum Test Driven Development Rapid Application Development Testing JUnit 41 JMock Easy Mock Logging Tools Log4j Continuous Integration Hudson Jenkins",
    "entities": [
        "Spring Framework",
        "Used Hibernate",
        "XQuery",
        "Restful Web Services Gradle AWS Cloud",
        "MVCModel Framework",
        "Custom Taglibs Implemented Dependency Injection IOC",
        "Nintendo CoLtd",
        "JMS",
        "LOG4J SVN JavaJ2EE Developer American Express",
        "HTTP",
        "Selenium Created Automation",
        "User Interfaces",
        "JSON",
        "Capital Ones",
        "Oracle Used",
        "XML",
        "NOSQL",
        "JAXWS",
        "Maintained",
        "JUnit",
        "AWScloud Migrated",
        "Banking and Investment services",
        "Shell",
        "JSP Wrote",
        "Amazon",
        "Unencrypted CHEF",
        "ELECTRONICS ENGINEERING KL UNIVERSITY Skills J2EE",
        "Log4j SVN JavaJ2EE Developer Citizens Bank",
        "Credit",
        "Created controller Servlets",
        "Developed",
        "TLS",
        "DAO",
        "Mainframe Systems",
        "Citizens National Bank",
        "Monitored",
        "Using SQL Statements Performed End to End",
        "Responsible for Requirements",
        "Develop",
        "Advertising of Nintendo Responsibilities Participated",
        "SOA",
        "Worked on Data Management",
        "JSP",
        "Amazon Route",
        "XMLSPY Developed",
        "Responsibilities Implemented User Interface",
        "Hyderabad",
        "SSL",
        "MS",
        "MVC",
        "Application Server 11 Hibernate",
        "Agile",
        "EJB",
        "Aqua Data Studio",
        "GIT",
        "User Interface",
        "AmazonSimple Storage",
        "Written CHEF cookbooks andCHEF Environment",
        "Sybase",
        "US",
        "Created the AWS",
        "Capital One Financial Corporation Itis",
        "BDD",
        "Database Tools SQL Developer",
        "AWS",
        "OnPerm",
        "JSF",
        "Description American Express",
        "Apache",
        "Seattle",
        "Created the Encrypted and",
        "WebLogic Application Server Involved",
        "HTML",
        "Wrote Test Cases",
        "Upload",
        "the Oracle Database Implemented",
        "JPA Version Control Rational Clear Case",
        "Drop Wizard",
        "Selenium WebDriver Executed",
        "Test Driven Development",
        "C SQL PLSQL Platforms",
        "ELECTRICAL",
        "J2EE Connecting Architecture Developed Unit",
        "Chicago",
        "TestDriven",
        "Business Delegates",
        "Hibernate Query Language",
        "the District of Columbia",
        "Servlet",
        "Maven",
        "XSLT",
        "Spring Boot Created",
        "JavaScript",
        "ANT",
        "Developed Dispatch Action",
        "UI",
        "Database Backend Testing",
        "Capital One Investing",
        "Software Company",
        "SVN",
        "SpringHibernate",
        "WebLogicapplication",
        "Test First",
        "Written Test Cases for Unit Level Testing",
        "Restful Web Services",
        "Data",
        "NetBeans",
        "Cutover",
        "Straight Line",
        "Java Application Developer Capital",
        "the Share Builder Investment Plan Portfolio Builder and Fund Evaluator",
        "Application",
        "Spring IOC Hibernate",
        "Front Controllers",
        "JQuery",
        "Directives DataBinding",
        "J2EE Services",
        "Amazon EBS Elastic Load Balancing AWS Cloud",
        "The National Association of Insurance Commissioners NAIC"
    ],
    "experience": "Experience Java SDET and Developer Nintendo of America Redmond WA February 2017 to Present Description The Nintendo of America is a subsidiary of Nintendo CoLtd It is Japanese multinational consumer electronics and Software Company it is the worlds largest video game company by revenue The Nintendo of America handles the sales marketing and Advertising of Nintendo Responsibilities Participated in all phases of the SDLC including technical requirements design development and unit testing Used JSPs HTML on front end Servlets as Front Controllers and JavaScript and JQuery for clientside validations Used Angular JS in dynamic binding of HTML web pages using the MVC architecture Created controller Servlets for handling HTTP requests from JSP pages Developed few web pages using JSP JSTL HTML CSS Java script Worked on AngularJS framework to develop the page and make it responsive Developed RESTfulWeb Services for the project as per the business requirements Involved in developing XML Schemas and used JAXB for marshallingunmarshalling Implemented MVC architecture by using Spring framework Implemented the Spring dependency injection of the Database helper instance to the action objects Used JDBC to invoke Stored Procedures and database connectivity to Oracle database All the coding and testing was performed using IntelliJ Maintained the existing code based developed in Spring and Hibernate framework by incorporating new features and fixing bugs Involved in fixing bugs and unit testing with test cases using JUnit framework Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Developed stored procedures and triggers using PLSQL to calculate and update the tables to implement business logic using Oracle database Involved in writing Hibernate Query Language HQL for persistence layer Used Maven to build run and create JARs and WAR files among other uses Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Worked with Jenkins in continuous Integration by using GIT tool and executed projects in Apache Maven and Ant Used Log4j for application logging and debugging Involve in Technology Performance Optimization and Error Reduction Procedures Maintain and enhance existing client applications and internal systems to improve integration Wrote Test Cases which adhere to a TestDriven DevelopmentTDD Pattern JUnit was used for unit testing and implementing Test Driven Development TDD methodology Involved in planning process of iterations under the Agile Scrum methodology Environment Java 17J2EE Spring30 Hibernate Oracle AngularJS HTML XML CSS AJAX JavaScript Log4J Restful Web Services Maven Java Application Developer Capital One Investing LLC Seattle WA June 2015 to January 2017 Description The Capital One Investing LLC is a subsidiary of Capital One Financial Corporation Itis an Online Brokerage investment firm with its headquarters in Seattle WA Capital One Investing is a fullservice brokerage offering a range of investment services including advised accounts and fully selfdirected digital accounts Capital One Investing allows investors to easily buy stocks options mutual funds and exchangetraded funds as partial shares via the Share Builder Investment Plan Portfolio Builder and Fund Evaluator a digital tool to help investors pick which funds sold on Capital Ones online platform are best for them Responsibilities Participated in all phases of the SDLC including technical requirements design development deployment and testing Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Migrated several Java Batch Applications and Services from the Onpremise infrastructure to AWScloud Migrated the Java REST API builton the Drop Wizard framework to AWS cloud platform Wrote the Gradle scripts to build the Applications and used AntHill Pro to get the build of the application and Deploy the application in AWS QA environment Made code changes to upgrade the existing Database connections to SSL and upgraded the existing TLS versions for the Applications while migrating them to AWS cloud platforms Worked on the latest AWS products like Amazon EC2 AmazonSimple Storage ServiceS3 Amazon Route 53 Amazon EBS Elastic Load Balancing AWS Cloud formation AWS VPC Security Groups Developed theAWS Cloud formation templates and Parameter files for various environments such as QA Dev INT Preprod and Prod as per the AWS designdocument for various applications Created the AWS environments in QA Dev INT Preprod and Production and Deployed the application in those environments Used Amazon Cloud watch to monitor environment for operational and performance metrics during load testing Written CHEF cookbooks andCHEF Environment files for automating the deployment in the AWS Cloud infrastructure We used GIT for versioning and maintaining the Application related source code and as well as the AWS Cloud and CHEFinfrastructure code for various environments Used Splunk to capture the application logs and Chef logs from the AWS EC2 instances to verify and validate the deployments Run the Splunk queries to obtain the application logs and analyzed and Monitored the application logs for the Applications running on the AWS cloud platform Created the Encrypted and Unencrypted CHEF data bags for managing the Application specific property values in the configuration files Run the Jenkins jobs to Upload the necessary CHEF artifacts into enterprise CHEF server Used Aqua Data Studio to connect to the Sybase database and run the required stored Procedures and modify the data in tables by Using SQL Statements Performed End to End testing in all the environments after migrating the application from OnPerm to AWS Cloud platform Involved in planning the Rehydration for the AMIs which are deployed in the production and performed the Rehydration to the Production AWS instances Involved in Cutover planning and validation testing for the Batch applications Services and APIs which are migrated to the AWS Cloud platform Environment Java 18J2EE Log4J Restful Web Services Gradle AWS Cloud platform Splunk CHEF Aqua Data studio Swagger Eclipse Sybase Database JAVA J2EE Developer NAIC Kansas City MO January 2014 to May 2015 Description The National Association of Insurance Commissioners NAIC is the US standardsetting and regulatory support organization created and represented by the chief insurance regulators from the 50 states the District of Columbia and five US territories Responsibilities Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Responsible for Requirements capturing Preparing Software Requirement Specification Involved in Design and Development using J2EEHibernate XML JSP Spring MVCModel Framework and Oracle Used AngularJS framework to bind HTML to java script objects for single page application Familiar with concepts of Directives DataBinding and Dependency Injection in Angular JS Developed RESTful Web Services for the project as per the business requirements Worked on Data Management classes using Hibernate to access the Oracle Database Implemented the application using Spring Framework which is based on MVC design pattern Used spring framework for Dependency injection Used Cucumber for Behavior Driven Testing Implemented persistence layer using Hibernate framework Have proficiency in using JSPs and Servlets for view and controlling parts of application Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations Used XSLT for transforming the XML documents in to HTML documents Building the application using Maven scripts Monitored the error logs using Log4j and fixed the problems Written Test Cases for Unit Level Testing using JUnit Create test framework using Selenium WebDriver Java with BDD Cucumber framework and Gherkins syntax for further test creation and execution Involved in the Unit Testing and defect resolution as and when they are reported Designing creating reusable custom data visualization componentswidgets Integrate the developed Applications with Enterprise Security Environments Involve in Technology Performance Optimization and Error Reduction Procedures Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Deployed the application on JBOSS Used Mongo DB for the JSON documents retrieval Data was stored in Mongo DB with elastic search Design and implement effective User Interfaces that are intuitive and easy to use Maintain and enhance existing client applications and internal systems to improve integration Worked on SVN for version control Environment Java 16J2EE Oracle 11 g HTML Maven Eclipse 4 Unix Web logic Application Server 11 Hibernate 30 Spring 30 LOG4J SVN JavaJ2EE Developer American Express Phoenix AZ April 2012 to December 2013 Description American Express is an American multinational financial services organization which is primarily known for providing financial services such as Credit card Charge card and travelers cheque Responsibilities Involved in creating the workflow framework by using threads concept to execute spring beans sequentially parallel and parallel for each Responsible for design and implementation of various modules of the application using SpringHibernate architecture Responsible for implementing the transaction management in the application by applying Spring AOP methodology Designed and developed UI with AJAX HTML XHTML DHTML and java script for more interactive web pages Involved in creating the Xml schemas and WSDL documents by understanding the business requirements and the application as web service component by using JAXWS Published and consumed SOAP Web Services for transferring data between different applications Provided security to Web Service using trusted certificates and created the DAO classes using Spring DAO module Built standalone applications with Spring Boot Created stored procedures and functions to process the data from Mainframe Systems Implemented Spring ORM wiring with Hibernate provided access to Oracle   RDBMS Hibernate Query Language HQL was used to perform various queries in the database Wrote build and deployed scripts using Shell and ANT scripts and involved in performance analysis of the application and fixed problemssuggest solutions JUnit was used for unit testing and implementing Test Driven Development TDD methodology Used Eclipse IDE for developing code modules in the development environment Implemented the logging mechanism using log4j framework Used SVN version control to track and maintain the different version of the project Worked on a variety of defects to stabilize application Environment Java 15 J2EE spring 25 Hibernate Oracle   HTML CSS AJAX JQuery JSP Servlets Maven CSS Web Logic JUnit Eclipse Log4j SVN JavaJ2EE Developer Citizens Bank Chicago IL May 2010 to March 2012 Worked as a Java Developer for a Web based online application for Citizens National Bank this online application offers Banking and Investment services for high networth customers The project involved working on commercial web applications which included developing robust reusable services in context of overall middleware strategy Responsibilities Implemented User Interface in ModelViewController Architecture which accomplishes a tight and neat coordination of JSP and Custom Taglibs Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface Developed Serverside components using Spring IOC Hibernate and design patterns such as Business Delegate session facade Service locator DAOs DTOs Developed and utilized J2EE Services and JMS components for message communication in WebLogic Application Server Involved in the development of the application framework Designed and developed various Business Delegates and EJB Stateless Session Beans to implement the business functionality and security to the system Implemented data access mapping and framework using Hibernate ORM tool Used DAO pattern to implement data access framework Developed reusable and interoperable Web service modules based on SOA architecture using JAXWS and Apache AXIS 20 Developed XML Schema XSLT and WSDL using XMLSPY Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Worked on XPath and XQuery for transforming inbound calls and making outbound calls to business services Configured development environment using WebLogicapplication server for developers integration testing Involved in integrating JMS providers with J2EE application servers by using J2EE Connecting Architecture Developed Unit testing framework driven by Test First methodology to develop test cases for business layer and User Interface using mock objects Environment Java WebLogic Eclipse Hibernate Spring EJB JMS Java Script AJAX Web Services AXIS JAXRPC Maven Clear Case JUnit Oracle Sun Solaris Jr JAVA Developer Smart Software technologies Hyderabad Telangana January 2009 to April 2010 Responsibilities Analyze the prerequisites in the view of business data and user necessities Implemented the modules utilizingModelViewController MVC design pattern Develop GUI related changes utilizing JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for communicating with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed Servlet and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using session faade Developed value object mainly used to wrap the data and pass across the layers Developed business logic utilizingStateless session beans for calculating asset depreciation on Straight Line and written down value approaches Designed database Queries for updating insertion and retrieval of asset information and rates Created java classes to interact with database using JDBC Used JMeter for Database Backend Testing with JDBC ODBC Connection Environment Java 14 Servlets JSP EJB20 J2EE 14 STRUTS XML XSLT Java Script Oracle 8iMs Visio Eclipse JDBC CVS Windows 2003 Server Education BACHELORS in ELECTRICAL AND ELECTRONICS ENGINEERING KL UNIVERSITY Skills J2EE 9 years JAVA 9 years TESTING 9 years ECLIPSE 8 years WEB SERVICES 7 years Java J2Ee Spring Soap Rest Hibernate Additional Information Technical Skills Programming Languages JDK 151617 18 C SQL PLSQL Platforms Windows 2003 2008 Server Linux Unix Amazon Web Services Java Core Memory Management Thread Classes Exception Handling and Collection APIs UML Tools MS Visio Rational Rose Enterprise IDE Reporting Tools Eclipse NetBeans IntelliJ JBuilder 2005 2006 J2EE MVC Frameworks Struts 11 and 2 Spring 25 30 JSF 12 Databases MySQL 51 Oracle 11 g 10 g   8i MS SQL Server 2008 DB2 Database Tools SQL Developer for Oracle Application Servers IBM Web Sphere Web Logic JBoss Apache Tomcat Web Technologies HTML DHTML CSS Java Script XML SOAP XSL XSLT XHTMLAWS ORM Frameworks Hibernate 30 JPA Version Control Rational Clear Case SVN CVS GitHub Middleware Technologies EJB 21 30 JNDI JMS Java Message Service Design Methodologies Rational Unified Process Agile Scrum Test Driven Development Rapid Application Development Testing JUnit 41 JMock Easy Mock Logging Tools Log4j Continuous Integration Hudson Jenkins",
    "extracted_keywords": [
        "Java",
        "SDET",
        "Developer",
        "lJavaspan",
        "SDET",
        "span",
        "lDeveloperspan",
        "Java",
        "SDET",
        "Developer",
        "Nintendo",
        "America",
        "Boston",
        "MA",
        "years",
        "experience",
        "designanalysis",
        "Java",
        "development",
        "web",
        "services",
        "architecture",
        "data",
        "problem",
        "statement",
        "designs",
        "code",
        "Work",
        "Experience",
        "Java",
        "SDET",
        "Developer",
        "Nintendo",
        "America",
        "Redmond",
        "WA",
        "February",
        "Present",
        "Description",
        "Nintendo",
        "America",
        "subsidiary",
        "Nintendo",
        "CoLtd",
        "consumer",
        "electronics",
        "Software",
        "Company",
        "worlds",
        "video",
        "game",
        "company",
        "revenue",
        "Nintendo",
        "America",
        "sales",
        "marketing",
        "Advertising",
        "Nintendo",
        "Responsibilities",
        "phases",
        "SDLC",
        "requirements",
        "development",
        "unit",
        "testing",
        "JSPs",
        "HTML",
        "end",
        "Servlets",
        "Front",
        "Controllers",
        "JavaScript",
        "JQuery",
        "validations",
        "JS",
        "binding",
        "HTML",
        "web",
        "pages",
        "MVC",
        "architecture",
        "controller",
        "Servlets",
        "HTTP",
        "requests",
        "JSP",
        "pages",
        "web",
        "pages",
        "JSP",
        "JSTL",
        "HTML",
        "CSS",
        "Java",
        "script",
        "framework",
        "page",
        "Developed",
        "RESTfulWeb",
        "Services",
        "project",
        "business",
        "requirements",
        "XML",
        "Schemas",
        "JAXB",
        "MVC",
        "architecture",
        "Spring",
        "framework",
        "Spring",
        "dependency",
        "injection",
        "Database",
        "helper",
        "instance",
        "action",
        "JDBC",
        "Procedures",
        "database",
        "connectivity",
        "Oracle",
        "database",
        "testing",
        "IntelliJ",
        "code",
        "Spring",
        "Hibernate",
        "framework",
        "features",
        "bugs",
        "bugs",
        "unit",
        "testing",
        "test",
        "cases",
        "JUnit",
        "framework",
        "scripts",
        "functionality",
        "testing",
        "phases",
        "application",
        "development",
        "Selenium",
        "Created",
        "Automation",
        "script",
        "Selenium",
        "WebDriver",
        "scripts",
        "browser",
        "platform",
        "procedures",
        "triggers",
        "PLSQL",
        "tables",
        "business",
        "logic",
        "Oracle",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "persistence",
        "layer",
        "Maven",
        "run",
        "JARs",
        "WAR",
        "files",
        "uses",
        "scripts",
        "functionality",
        "testing",
        "phases",
        "application",
        "development",
        "Selenium",
        "Created",
        "Automation",
        "script",
        "Selenium",
        "WebDriver",
        "scripts",
        "browser",
        "platform",
        "Jenkins",
        "Integration",
        "GIT",
        "tool",
        "projects",
        "Apache",
        "Maven",
        "Ant",
        "Used",
        "Log4j",
        "application",
        "Involve",
        "Technology",
        "Performance",
        "Optimization",
        "Error",
        "Reduction",
        "Procedures",
        "client",
        "applications",
        "systems",
        "integration",
        "Wrote",
        "Test",
        "Cases",
        "TestDriven",
        "DevelopmentTDD",
        "Pattern",
        "JUnit",
        "unit",
        "testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "planning",
        "process",
        "iterations",
        "Agile",
        "Scrum",
        "methodology",
        "Environment",
        "Java",
        "Spring30",
        "Hibernate",
        "Oracle",
        "AngularJS",
        "HTML",
        "XML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Log4J",
        "Restful",
        "Web",
        "Services",
        "Maven",
        "Java",
        "Application",
        "Developer",
        "Capital",
        "Investing",
        "LLC",
        "Seattle",
        "WA",
        "June",
        "January",
        "Description",
        "Capital",
        "Investing",
        "LLC",
        "subsidiary",
        "Capital",
        "One",
        "Financial",
        "Corporation",
        "Itis",
        "Online",
        "Brokerage",
        "investment",
        "firm",
        "headquarters",
        "Seattle",
        "WA",
        "Capital",
        "Investing",
        "fullservice",
        "brokerage",
        "range",
        "investment",
        "services",
        "accounts",
        "accounts",
        "Capital",
        "One",
        "Investing",
        "investors",
        "stocks",
        "options",
        "funds",
        "funds",
        "shares",
        "Share",
        "Builder",
        "Investment",
        "Plan",
        "Portfolio",
        "Builder",
        "Fund",
        "Evaluator",
        "tool",
        "investors",
        "funds",
        "Capital",
        "Ones",
        "platform",
        "Responsibilities",
        "phases",
        "SDLC",
        "requirements",
        "development",
        "deployment",
        "testing",
        "methodology",
        "environment",
        "Test",
        "Driven",
        "Development",
        "Continuous",
        "IntegrationDelivery",
        "Interpret",
        "business",
        "requirements",
        "specification",
        "documents",
        "Java",
        "Batch",
        "Applications",
        "Services",
        "Onpremise",
        "infrastructure",
        "AWScloud",
        "Java",
        "REST",
        "API",
        "Drop",
        "Wizard",
        "framework",
        "AWS",
        "cloud",
        "platform",
        "Gradle",
        "scripts",
        "Applications",
        "AntHill",
        "Pro",
        "build",
        "application",
        "application",
        "AWS",
        "QA",
        "environment",
        "code",
        "changes",
        "Database",
        "connections",
        "SSL",
        "TLS",
        "versions",
        "Applications",
        "AWS",
        "cloud",
        "platforms",
        "AWS",
        "products",
        "Amazon",
        "EC2",
        "AmazonSimple",
        "Storage",
        "ServiceS3",
        "Amazon",
        "Route",
        "Amazon",
        "EBS",
        "Elastic",
        "Load",
        "AWS",
        "Cloud",
        "formation",
        "VPC",
        "Security",
        "Groups",
        "theAWS",
        "Cloud",
        "formation",
        "templates",
        "Parameter",
        "files",
        "environments",
        "QA",
        "Dev",
        "INT",
        "Preprod",
        "Prod",
        "AWS",
        "applications",
        "AWS",
        "environments",
        "QA",
        "Dev",
        "INT",
        "Preprod",
        "Production",
        "application",
        "environments",
        "Amazon",
        "Cloud",
        "environment",
        "metrics",
        "load",
        "testing",
        "Written",
        "CHEF",
        "andCHEF",
        "Environment",
        "files",
        "deployment",
        "AWS",
        "Cloud",
        "infrastructure",
        "GIT",
        "Application",
        "source",
        "code",
        "AWS",
        "Cloud",
        "CHEFinfrastructure",
        "code",
        "environments",
        "Splunk",
        "application",
        "logs",
        "Chef",
        "AWS",
        "EC2",
        "instances",
        "deployments",
        "Splunk",
        "application",
        "logs",
        "application",
        "logs",
        "Applications",
        "AWS",
        "cloud",
        "platform",
        "Encrypted",
        "Unencrypted",
        "CHEF",
        "data",
        "bags",
        "Application",
        "property",
        "values",
        "configuration",
        "files",
        "Jenkins",
        "jobs",
        "CHEF",
        "artifacts",
        "enterprise",
        "server",
        "Aqua",
        "Data",
        "Studio",
        "Sybase",
        "database",
        "Procedures",
        "data",
        "tables",
        "SQL",
        "Statements",
        "Performed",
        "End",
        "End",
        "testing",
        "environments",
        "application",
        "OnPerm",
        "AWS",
        "Cloud",
        "platform",
        "Rehydration",
        "AMIs",
        "production",
        "Rehydration",
        "Production",
        "AWS",
        "instances",
        "Cutover",
        "planning",
        "validation",
        "testing",
        "Batch",
        "applications",
        "Services",
        "APIs",
        "AWS",
        "Cloud",
        "platform",
        "Environment",
        "Java",
        "Log4J",
        "Restful",
        "Web",
        "Services",
        "Gradle",
        "AWS",
        "Cloud",
        "platform",
        "Splunk",
        "CHEF",
        "Aqua",
        "Data",
        "studio",
        "Swagger",
        "Eclipse",
        "Sybase",
        "Database",
        "J2EE",
        "Developer",
        "NAIC",
        "Kansas",
        "City",
        "MO",
        "January",
        "May",
        "Description",
        "National",
        "Association",
        "Insurance",
        "Commissioners",
        "NAIC",
        "US",
        "standardsetting",
        "support",
        "organization",
        "insurance",
        "regulators",
        "states",
        "District",
        "Columbia",
        "US",
        "territories",
        "Responsibilities",
        "methodology",
        "environment",
        "Test",
        "Driven",
        "Development",
        "Continuous",
        "IntegrationDelivery",
        "Interpret",
        "business",
        "requirements",
        "specification",
        "documents",
        "Requirements",
        "Preparing",
        "Software",
        "Requirement",
        "Specification",
        "Design",
        "Development",
        "XML",
        "JSP",
        "Spring",
        "MVCModel",
        "Framework",
        "Oracle",
        "framework",
        "HTML",
        "java",
        "script",
        "objects",
        "page",
        "application",
        "Familiar",
        "concepts",
        "Directives",
        "DataBinding",
        "Dependency",
        "Injection",
        "Angular",
        "JS",
        "Web",
        "Services",
        "project",
        "business",
        "requirements",
        "Data",
        "Management",
        "classes",
        "Hibernate",
        "Oracle",
        "Database",
        "application",
        "Spring",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "spring",
        "framework",
        "Dependency",
        "injection",
        "Cucumber",
        "Behavior",
        "Driven",
        "Testing",
        "persistence",
        "layer",
        "Hibernate",
        "framework",
        "proficiency",
        "JSPs",
        "Servlets",
        "view",
        "parts",
        "application",
        "Hibernate",
        "framework",
        "DAO",
        "layer",
        "Oracle",
        "database",
        "JavaScript",
        "validations",
        "XSLT",
        "XML",
        "documents",
        "HTML",
        "documents",
        "application",
        "Maven",
        "scripts",
        "error",
        "logs",
        "Log4j",
        "problems",
        "Test",
        "Cases",
        "Unit",
        "Level",
        "Testing",
        "JUnit",
        "test",
        "framework",
        "Selenium",
        "WebDriver",
        "Java",
        "BDD",
        "Cucumber",
        "framework",
        "Gherkins",
        "syntax",
        "test",
        "creation",
        "execution",
        "Unit",
        "Testing",
        "resolution",
        "Designing",
        "custom",
        "data",
        "visualization",
        "componentswidgets",
        "Applications",
        "Enterprise",
        "Security",
        "Environments",
        "Technology",
        "Performance",
        "Optimization",
        "Error",
        "Reduction",
        "Procedures",
        "application",
        "NOSQL",
        "mapping",
        "application",
        "JBOSS",
        "Mongo",
        "DB",
        "JSON",
        "documents",
        "Data",
        "Mongo",
        "DB",
        "search",
        "Design",
        "User",
        "Interfaces",
        "client",
        "applications",
        "systems",
        "integration",
        "SVN",
        "version",
        "control",
        "Environment",
        "Java",
        "Oracle",
        "g",
        "HTML",
        "Maven",
        "Eclipse",
        "Unix",
        "Web",
        "logic",
        "Application",
        "Server",
        "Hibernate",
        "Spring",
        "LOG4J",
        "SVN",
        "JavaJ2EE",
        "Developer",
        "American",
        "Express",
        "Phoenix",
        "AZ",
        "April",
        "December",
        "Description",
        "American",
        "Express",
        "services",
        "organization",
        "services",
        "Credit",
        "card",
        "Charge",
        "card",
        "travelers",
        "Responsibilities",
        "framework",
        "threads",
        "concept",
        "spring",
        "beans",
        "design",
        "implementation",
        "modules",
        "application",
        "SpringHibernate",
        "architecture",
        "transaction",
        "management",
        "application",
        "Spring",
        "AOP",
        "methodology",
        "UI",
        "AJAX",
        "HTML",
        "XHTML",
        "DHTML",
        "script",
        "web",
        "pages",
        "Xml",
        "schemas",
        "WSDL",
        "documents",
        "business",
        "requirements",
        "application",
        "web",
        "service",
        "component",
        "JAXWS",
        "SOAP",
        "Web",
        "Services",
        "data",
        "applications",
        "security",
        "Web",
        "Service",
        "certificates",
        "DAO",
        "classes",
        "Spring",
        "DAO",
        "module",
        "applications",
        "Spring",
        "Boot",
        "procedures",
        "functions",
        "data",
        "Mainframe",
        "Systems",
        "Spring",
        "ORM",
        "wiring",
        "Hibernate",
        "access",
        "Oracle",
        "RDBMS",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "queries",
        "database",
        "Wrote",
        "scripts",
        "Shell",
        "ANT",
        "scripts",
        "performance",
        "analysis",
        "application",
        "solutions",
        "JUnit",
        "unit",
        "testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "Eclipse",
        "IDE",
        "code",
        "modules",
        "development",
        "environment",
        "logging",
        "mechanism",
        "log4j",
        "framework",
        "SVN",
        "version",
        "control",
        "version",
        "project",
        "variety",
        "defects",
        "application",
        "Environment",
        "Java",
        "J2EE",
        "spring",
        "Hibernate",
        "Oracle",
        "HTML",
        "CSS",
        "AJAX",
        "JQuery",
        "JSP",
        "Servlets",
        "Maven",
        "CSS",
        "Web",
        "Logic",
        "JUnit",
        "Eclipse",
        "Log4j",
        "SVN",
        "JavaJ2EE",
        "Developer",
        "Citizens",
        "Bank",
        "Chicago",
        "IL",
        "March",
        "Java",
        "Developer",
        "Web",
        "application",
        "Citizens",
        "National",
        "Bank",
        "application",
        "Banking",
        "Investment",
        "services",
        "networth",
        "customers",
        "project",
        "web",
        "applications",
        "services",
        "context",
        "middleware",
        "strategy",
        "Responsibilities",
        "User",
        "Interface",
        "ModelViewController",
        "Architecture",
        "coordination",
        "JSP",
        "Custom",
        "Taglibs",
        "Dependency",
        "Injection",
        "IOC",
        "feature",
        "spring",
        "framework",
        "beans",
        "User",
        "Interface",
        "Developed",
        "Serverside",
        "components",
        "Spring",
        "IOC",
        "Hibernate",
        "design",
        "patterns",
        "Business",
        "Delegate",
        "session",
        "facade",
        "Service",
        "locator",
        "DTOs",
        "J2EE",
        "Services",
        "JMS",
        "components",
        "message",
        "communication",
        "WebLogic",
        "Application",
        "Server",
        "development",
        "application",
        "framework",
        "Business",
        "Delegates",
        "EJB",
        "Stateless",
        "Session",
        "Beans",
        "business",
        "functionality",
        "security",
        "system",
        "data",
        "access",
        "mapping",
        "framework",
        "Hibernate",
        "ORM",
        "tool",
        "DAO",
        "pattern",
        "data",
        "access",
        "framework",
        "Web",
        "service",
        "modules",
        "SOA",
        "architecture",
        "JAXWS",
        "Apache",
        "AXIS",
        "XML",
        "Schema",
        "XSLT",
        "WSDL",
        "XMLSPY",
        "application",
        "NOSQL",
        "mapping",
        "Worked",
        "XPath",
        "XQuery",
        "calls",
        "outbound",
        "calls",
        "business",
        "services",
        "development",
        "environment",
        "WebLogicapplication",
        "server",
        "developers",
        "integration",
        "testing",
        "JMS",
        "providers",
        "J2EE",
        "application",
        "servers",
        "J2EE",
        "Connecting",
        "Architecture",
        "Developed",
        "Unit",
        "testing",
        "framework",
        "Test",
        "methodology",
        "test",
        "cases",
        "business",
        "layer",
        "User",
        "Interface",
        "objects",
        "Environment",
        "Java",
        "WebLogic",
        "Eclipse",
        "Hibernate",
        "Spring",
        "EJB",
        "JMS",
        "Java",
        "Script",
        "AJAX",
        "Web",
        "Services",
        "AXIS",
        "JAXRPC",
        "Maven",
        "Clear",
        "Case",
        "JUnit",
        "Oracle",
        "Sun",
        "Solaris",
        "Jr",
        "Developer",
        "Smart",
        "Software",
        "Hyderabad",
        "Telangana",
        "January",
        "April",
        "Responsibilities",
        "prerequisites",
        "view",
        "business",
        "data",
        "user",
        "necessities",
        "modules",
        "utilizingModelViewController",
        "MVC",
        "design",
        "pattern",
        "Develop",
        "GUI",
        "changes",
        "JSP",
        "HTML",
        "client",
        "validations",
        "Java",
        "script",
        "Java",
        "beans",
        "helper",
        "classes",
        "Servlets",
        "UI",
        "JSP",
        "controller",
        "Servlet",
        "requests",
        "classes",
        "Dispatch",
        "Action",
        "classes",
        "business",
        "methods",
        "Servlet",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "EJB",
        "components",
        "information",
        "session",
        "faade",
        "value",
        "object",
        "data",
        "layers",
        "business",
        "logic",
        "session",
        "beans",
        "asset",
        "depreciation",
        "Straight",
        "Line",
        "value",
        "approaches",
        "database",
        "insertion",
        "retrieval",
        "asset",
        "information",
        "rates",
        "classes",
        "database",
        "JDBC",
        "JMeter",
        "Database",
        "Backend",
        "Testing",
        "JDBC",
        "ODBC",
        "Connection",
        "Environment",
        "Java",
        "Servlets",
        "JSP",
        "EJB20",
        "J2EE",
        "STRUTS",
        "XML",
        "XSLT",
        "Java",
        "Script",
        "Oracle",
        "8iMs",
        "Visio",
        "Eclipse",
        "JDBC",
        "CVS",
        "Windows",
        "Server",
        "Education",
        "BACHELORS",
        "ELECTRICAL",
        "ELECTRONICS",
        "ENGINEERING",
        "KL",
        "UNIVERSITY",
        "Skills",
        "J2EE",
        "years",
        "years",
        "years",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "Java",
        "J2Ee",
        "Spring",
        "Soap",
        "Rest",
        "Hibernate",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "JDK",
        "C",
        "SQL",
        "PLSQL",
        "Platforms",
        "Windows",
        "Server",
        "Linux",
        "Unix",
        "Amazon",
        "Web",
        "Services",
        "Java",
        "Core",
        "Memory",
        "Management",
        "Thread",
        "Classes",
        "Exception",
        "Handling",
        "Collection",
        "APIs",
        "UML",
        "Tools",
        "MS",
        "Visio",
        "Rational",
        "Rose",
        "Enterprise",
        "IDE",
        "Reporting",
        "Tools",
        "Eclipse",
        "NetBeans",
        "JBuilder",
        "J2EE",
        "MVC",
        "Frameworks",
        "Struts",
        "Spring",
        "JSF",
        "MySQL",
        "Oracle",
        "g",
        "g",
        "MS",
        "SQL",
        "Server",
        "DB2",
        "Database",
        "Tools",
        "SQL",
        "Developer",
        "Oracle",
        "Application",
        "Servers",
        "IBM",
        "Web",
        "Sphere",
        "Web",
        "Logic",
        "JBoss",
        "Apache",
        "Tomcat",
        "Web",
        "Technologies",
        "HTML",
        "DHTML",
        "CSS",
        "Java",
        "Script",
        "XML",
        "SOAP",
        "XSL",
        "XSLT",
        "ORM",
        "Frameworks",
        "Hibernate",
        "JPA",
        "Version",
        "Control",
        "Rational",
        "Clear",
        "Case",
        "SVN",
        "CVS",
        "GitHub",
        "Middleware",
        "Technologies",
        "EJB",
        "JNDI",
        "JMS",
        "Java",
        "Message",
        "Service",
        "Design",
        "Methodologies",
        "Rational",
        "Unified",
        "Process",
        "Agile",
        "Scrum",
        "Test",
        "Driven",
        "Development",
        "Rapid",
        "Application",
        "Development",
        "Testing",
        "JUnit",
        "JMock",
        "Easy",
        "Mock",
        "Logging",
        "Tools",
        "Log4j",
        "Continuous",
        "Integration",
        "Hudson",
        "Jenkins"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:51:12.023825",
    "resume_data": "Java SDET and Developer span lJavaspan SDET and span lDeveloperspan Java SDET and Developer Nintendo of America Boston MA 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modeling skilled at progressing from problem statement to welldocumented designs and code Work Experience Java SDET and Developer Nintendo of America Redmond WA February 2017 to Present Description The Nintendo of America is a subsidiary of Nintendo CoLtd It is Japanese multinational consumer electronics and Software Company it is the worlds largest video game company by revenue The Nintendo of America handles the sales marketing and Advertising of Nintendo Responsibilities Participated in all phases of the SDLC including technical requirements design development and unit testing Used JSPs HTML on front end Servlets as Front Controllers and JavaScript and JQuery for clientside validations Used Angular JS in dynamic binding of HTML web pages using the MVC architecture Created controller Servlets for handling HTTP requests from JSP pages Developed few web pages using JSP JSTL HTML CSS Java script Worked on AngularJS framework to develop the page and make it responsive Developed RESTfulWeb Services for the project as per the business requirements Involved in developing XML Schemas and used JAXB for marshallingunmarshalling Implemented MVC architecture by using Spring framework Implemented the Spring dependency injection of the Database helper instance to the action objects Used JDBC to invoke Stored Procedures and database connectivity to Oracle database All the coding and testing was performed using IntelliJ Maintained the existing code based developed in Spring and Hibernate framework by incorporating new features and fixing bugs Involved in fixing bugs and unit testing with test cases using JUnit framework Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Developed stored procedures and triggers using PLSQL to calculate and update the tables to implement business logic using Oracle database Involved in writing Hibernate Query Language HQL for persistence layer Used Maven to build run and create JARs and WAR files among other uses Used automated scripts and performed functionality testing during the various phases of the application development using Selenium Created Automation script using Selenium WebDriver Executed scripts on different browser and different platform Worked with Jenkins in continuous Integration by using GIT tool and executed projects in Apache Maven and Ant Used Log4j for application logging and debugging Involve in Technology Performance Optimization and Error Reduction Procedures Maintain and enhance existing client applications and internal systems to improve integration Wrote Test Cases which adhere to a TestDriven DevelopmentTDD Pattern JUnit was used for unit testing and implementing Test Driven Development TDD methodology Involved in planning process of iterations under the Agile Scrum methodology Environment Java 17J2EE Spring30 Hibernate Oracle AngularJS HTML XML CSS AJAX JavaScript Log4J Restful Web Services Maven Java Application Developer Capital One Investing LLC Seattle WA June 2015 to January 2017 Description The Capital One Investing LLC is a subsidiary of Capital One Financial Corporation Itis an Online Brokerage investment firm with its headquarters in Seattle WA Capital One Investing is a fullservice brokerage offering a range of investment services including advised accounts and fully selfdirected digital accounts Capital One Investing allows investors to easily buy stocks options mutual funds and exchangetraded funds as partial shares via the Share Builder Investment Plan Portfolio Builder and Fund Evaluator a digital tool to help investors pick which funds sold on Capital Ones online platform are best for them Responsibilities Participated in all phases of the SDLC including technical requirements design development deployment and testing Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Migrated several Java Batch Applications and Services from the Onpremise infrastructure to AWScloud Migrated the Java REST API builton the Drop Wizard framework to AWS cloud platform Wrote the Gradle scripts to build the Applications and used AntHill Pro to get the build of the application and Deploy the application in AWS QA environment Made code changes to upgrade the existing Database connections to SSL and upgraded the existing TLS versions for the Applications while migrating them to AWS cloud platforms Worked on the latest AWS products like Amazon EC2 AmazonSimple Storage ServiceS3 Amazon Route 53 Amazon EBS Elastic Load Balancing AWS Cloud formation AWS VPC Security Groups Developed theAWS Cloud formation templates and Parameter files for various environments such as QA Dev INT Preprod and Prod as per the AWS designdocument for various applications Created the AWS environments in QA Dev INT Preprod and Production and Deployed the application in those environments Used Amazon Cloud watch to monitor environment for operational and performance metrics during load testing Written CHEF cookbooks andCHEF Environment files for automating the deployment in the AWS Cloud infrastructure We used GIT for versioning and maintaining the Application related source code and as well as the AWS Cloud and CHEFinfrastructure code for various environments Used Splunk to capture the application logs and Chef logs from the AWS EC2 instances to verify and validate the deployments Run the Splunk queries to obtain the application logs and analyzed and Monitored the application logs for the Applications running on the AWS cloud platform Created the Encrypted and Unencrypted CHEF data bags for managing the Application specific property values in the configuration files Run the Jenkins jobs to Upload the necessary CHEF artifacts into enterprise CHEF server Used Aqua Data Studio to connect to the Sybase database and run the required stored Procedures and modify the data in tables by Using SQL Statements Performed End to End testing in all the environments after migrating the application from OnPerm to AWS Cloud platform Involved in planning the Rehydration for the AMIs which are deployed in the production and performed the Rehydration to the Production AWS instances Involved in Cutover planning and validation testing for the Batch applications Services and APIs which are migrated to the AWS Cloud platform Environment Java 18J2EE Log4J Restful Web Services Gradle AWS Cloud platform Splunk CHEF Aqua Data studio Swagger Eclipse Sybase Database JAVA J2EE Developer NAIC Kansas City MO January 2014 to May 2015 Description The National Association of Insurance Commissioners NAIC is the US standardsetting and regulatory support organization created and represented by the chief insurance regulators from the 50 states the District of Columbia and five US territories Responsibilities Worked in Agile methodology environment including Test Driven Development with Continuous IntegrationDelivery Interpret written business requirements and technical specification documents Responsible for Requirements capturing Preparing Software Requirement Specification Involved in Design and Development using J2EEHibernate XML JSP Spring MVCModel Framework and Oracle Used AngularJS framework to bind HTML to java script objects for single page application Familiar with concepts of Directives DataBinding and Dependency Injection in Angular JS Developed RESTful Web Services for the project as per the business requirements Worked on Data Management classes using Hibernate to access the Oracle Database Implemented the application using Spring Framework which is based on MVC design pattern Used spring framework for Dependency injection Used Cucumber for Behavior Driven Testing Implemented persistence layer using Hibernate framework Have proficiency in using JSPs and Servlets for view and controlling parts of application Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations Used XSLT for transforming the XML documents in to HTML documents Building the application using Maven scripts Monitored the error logs using Log4j and fixed the problems Written Test Cases for Unit Level Testing using JUnit Create test framework using Selenium WebDriver Java with BDD Cucumber framework and Gherkins syntax for further test creation and execution Involved in the Unit Testing and defect resolution as and when they are reported Designing creating reusable custom data visualization componentswidgets Integrate the developed Applications with Enterprise Security Environments Involve in Technology Performance Optimization and Error Reduction Procedures Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Deployed the application on JBOSS Used Mongo DB for the JSON documents retrieval Data was stored in Mongo DB with elastic search Design and implement effective User Interfaces that are intuitive and easy to use Maintain and enhance existing client applications and internal systems to improve integration Worked on SVN for version control Environment Java 16J2EE Oracle 11g HTML Maven Eclipse 4 Unix Web logic Application Server 11 Hibernate 30 Spring 30 LOG4J SVN JavaJ2EE Developer American Express Phoenix AZ April 2012 to December 2013 Description American Express is an American multinational financial services organization which is primarily known for providing financial services such as Credit card Charge card and travelers cheque Responsibilities Involved in creating the workflow framework by using threads concept to execute spring beans sequentially parallel and parallel for each Responsible for design and implementation of various modules of the application using SpringHibernate architecture Responsible for implementing the transaction management in the application by applying Spring AOP methodology Designed and developed UI with AJAX HTML XHTML DHTML and java script for more interactive web pages Involved in creating the Xml schemas and WSDL documents by understanding the business requirements and the application as web service component by using JAXWS Published and consumed SOAP Web Services for transferring data between different applications Provided security to Web Service using trusted certificates and created the DAO classes using Spring DAO module Built standalone applications with Spring Boot Created stored procedures and functions to process the data from Mainframe Systems Implemented Spring ORM wiring with Hibernate provided access to Oracle 9i RDBMS Hibernate Query Language HQL was used to perform various queries in the database Wrote build and deployed scripts using Shell and ANT scripts and involved in performance analysis of the application and fixed problemssuggest solutions JUnit was used for unit testing and implementing Test Driven Development TDD methodology Used Eclipse IDE for developing code modules in the development environment Implemented the logging mechanism using log4j framework Used SVN version control to track and maintain the different version of the project Worked on a variety of defects to stabilize application Environment Java 15 J2EE spring 25 Hibernate Oracle 9i HTML CSS AJAX JQuery JSP Servlets Maven CSS Web Logic JUnit Eclipse Log4j SVN JavaJ2EE Developer Citizens Bank Chicago IL May 2010 to March 2012 Worked as a Java Developer for a Web based online application for Citizens National Bank this online application offers Banking and Investment services for high networth customers The project involved working on commercial web applications which included developing robust reusable services in context of overall middleware strategy Responsibilities Implemented User Interface in ModelViewController Architecture which accomplishes a tight and neat coordination of JSP and Custom Taglibs Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface Developed Serverside components using Spring IOC Hibernate and design patterns such as Business Delegate session facade Service locator DAOs DTOs Developed and utilized J2EE Services and JMS components for message communication in WebLogic Application Server Involved in the development of the application framework Designed and developed various Business Delegates and EJB Stateless Session Beans to implement the business functionality and security to the system Implemented data access mapping and framework using Hibernate ORM tool Used DAO pattern to implement data access framework Developed reusable and interoperable Web service modules based on SOA architecture using JAXWS and Apache AXIS 20 Developed XML Schema XSLT and WSDL using XMLSPY Developed application vastly using NOSQL to achieve nonrelational mapping and to make horizontally scalable Worked on XPath and XQuery for transforming inbound calls and making outbound calls to business services Configured development environment using WebLogicapplication server for developers integration testing Involved in integrating JMS providers with J2EE application servers by using J2EE Connecting Architecture Developed Unit testing framework driven by Test First methodology to develop test cases for business layer and User Interface using mock objects Environment Java WebLogic Eclipse Hibernate Spring EJB JMS Java Script AJAX Web Services AXIS JAXRPC Maven Clear Case JUnit Oracle Sun Solaris Jr JAVA Developer Smart Software technologies Hyderabad Telangana January 2009 to April 2010 Responsibilities Analyze the prerequisites in the view of business data and user necessities Implemented the modules utilizingModelViewController MVC design pattern Develop GUI related changes utilizing JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for communicating with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed Servlet and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using session faade Developed value object mainly used to wrap the data and pass across the layers Developed business logic utilizingStateless session beans for calculating asset depreciation on Straight Line and written down value approaches Designed database Queries for updating insertion and retrieval of asset information and rates Created java classes to interact with database using JDBC Used JMeter for Database Backend Testing with JDBC ODBC Connection Environment Java 14 Servlets JSP EJB20 J2EE 14 STRUTS XML XSLT Java Script Oracle 8iMs Visio Eclipse JDBC CVS Windows 2003 Server Education BACHELORS in ELECTRICAL AND ELECTRONICS ENGINEERING KL UNIVERSITY Skills J2EE 9 years JAVA 9 years TESTING 9 years ECLIPSE 8 years WEB SERVICES 7 years Java J2Ee Spring Soap Rest Hibernate Additional Information Technical Skills Programming Languages JDK 151617 18 C SQL PLSQL Platforms Windows 2003 2008 Server Linux Unix Amazon Web Services Java Core Memory Management Thread Classes Exception Handling and Collection APIs UML Tools MS Visio Rational Rose Enterprise IDE Reporting Tools Eclipse NetBeans IntelliJ JBuilder 2005 2006 J2EE MVC Frameworks Struts 11 and 2 Spring 25 30 JSF 12 Databases MySQL 51 Oracle 11g 10g 9i 8i MS SQL Server 2008 DB2 Database Tools SQL Developer for Oracle Application Servers IBM Web Sphere Web Logic JBoss Apache Tomcat Web Technologies HTML DHTML CSS Java Script XML SOAP XSL XSLT XHTMLAWS ORM Frameworks Hibernate 30 JPA Version Control Rational Clear Case SVN CVS GitHub Middleware Technologies EJB 21 30 JNDI JMS Java Message Service Design Methodologies Rational Unified Process Agile Scrum Test Driven Development Rapid Application Development Testing JUnit 41 JMock Easy Mock Logging Tools Log4j Continuous Integration Hudson Jenkins",
    "unique_id": "9b1313f9-bb4a-4518-9537-64367f4b2d67"
}