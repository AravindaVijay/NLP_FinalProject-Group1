{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer General Motors New York NY Over 6 years of experience in Analysis Design Development Testing Customization Bug fixes Support and Implementation of various standalone clientserver enterprise applications using Python Django in various domains Software Developer with 5 years of experience coding in C C Embedded Linux and Assembly Experience working in Java JavaScript and Python software development environments Experience with Design code debug operations reporting data analysis and web applications utilizing Python Experience in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript Jquery and also on XAMPP and LAMP Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Hand on experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Supported C testing framework to improve automated testing Sound experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm Emacs Expertise in Onsite ApplicationsServicesPackages using Chef along with AWS for EC2S3 and ELB with Chef Cookbooks Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX Hands on Integrated Development Environments experience like Pycharm Eclipse MyEclipse JDeveloper and RAD Proficiency in scripting for system administration and AWS using languages such as BASH and Python Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Expertise in developing consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Experienced with batch processing of data sources using Apache Spark Good working experience in processing large datasets with Spark using Scala and Pyspark Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in programming with Python IDEs like PyCharm Java IDEs like Eclipse and Sublime Expertise in writing AJAX framework to transform Datasets and Data tables into HTTP JSON strings Authorized to work in the US for any employer Work Experience Python Developer General Motors Detroit MI January 2015 to Present Responsibilities Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from MySQL to PostgreSQL with complete data integrity Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed user interface using CSS HTML JavaScript and JQuery Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used JSON based REST Web services and Amazon Web services AWS for smooth operation of application Responsible to use and implement Pandas library for statistical Analysis Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript IronPython Gathered all requirements for developing and analyzing requirement of projects Involved in the Complete Software development life cycle SDLC to develop the application Used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on python and portlet Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python 33 PyQT PyQuery MVW HTML5 CSS3 AWS Angularjs Shell Scripting JSON Rest Apache Web Server Django MySQL IronPython MongoDB PostgreSQL Numpy IPython sqlalchemy Django Tastypie Python Developer Merck Co Inc August 2013 to January 2015 Responsibilities Developed web applications to implement the model view control architecture using Django Framework Build database mapping classes using Django models and Apache Cassandra Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Involved in developing Restful services using Python Flask framework Created entire application using Python Django MySQL and Linux Developed complex database prediction models and pattern matching algorithms in C Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Loading claims into Facets using Kron Shell Scripting and Perl stored in Sybase database Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 perl AJAX MYSQL Linux Rest Heroku GIT Kron urllib urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer US BANK Los Angeles CA November 2012 to July 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed user interface using CSS HTML JavaScript and JQuery Used standard Python modules viz csv robot parser itertools pickl jinja2 lxml for development Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Creating data pipelines using Apache Spark a bigdata processing and computing framework Planning implementing and converting manual test cases to automation test cases Wrote Python modules to extractload asset data from the MySQL source database Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX MYSQL Linux Rest GIT urllib net urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer Rockwell Automation San Jose CA October 2010 to October 2012 Responsibilities Worked on server side applications with Django using Python programming Used python libraries like Beautiful Soup and matplotlib Utilized standard Python modules such as csv robotparser itertools and pickle for development Implemented the business logic in back end with ProC and C Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of a webpages for front end applications Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Used Agile Methodology and SCRUM Process Worked on creating documents in Mongo database Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across 67all the teams for several projects Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX LAMP UnitTest Jquery XML Additional Information Technical Skills Programming Languages Python 3327 Django 1413 Flask perl Java C Shell Script SQL JavaJ2EE PyJamas Jython IronPython Cpython Web Technologies AJAX JavaScript HTML XHTML Amazon Web ServicesAmazon Cloud EC2 Simple Storage Service S3 and Amazon SQS XML JSON Jquery Angular Js Python Modules csv robotparser itertools pickle urllib urllib2 Python Libraries Pandas NumPy UnitTest IPython sqlalchemy Django Tastypie Beautiful Soup wxPython and matplotlib Python Version Control Tools Git GitHub SVN VSS Database MongoDB Cassandra MySQL PostgreSQL Operating systems Windows XP Win 7 81 10 Linux OS X Python Automation Testing UnitTest Nose Python Packages JSON CSV XML XLS Methodologies AgileScrum Waterfall Bug Tracking Tools Jira Bugzilla Rational Clearquest Other Apache Shark Dreamweaver Eclipse IDE NetBeans IDE FlashFXP LAMP",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "Agile Software Methodology",
        "webapp2",
        "Jquery XML Additional Information Technical Skills Programming Languages Python",
        "MVTMVC",
        "Los Angeles",
        "Panda",
        "XML",
        "HTMLCSSJQuery",
        "DHTML",
        "Bootstrap CSS",
        "Maintained",
        "Automated",
        "Apache Spark",
        "LAMP",
        "Amazon",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "Mongo",
        "ProC",
        "CSS Bootstrap",
        "Simple Storage Service S3",
        "Python Unit",
        "AWS Elastic Load Balancing ELB",
        "Complete Software",
        "Restful",
        "C Worked",
        "San Jose",
        "NGINX Hands on Integrated Development Environments",
        "Design and Development Testing",
        "VMWare API",
        "RDS",
        "Work Experience Python Developer General Motors",
        "Created a",
        "HTML CSS JavaScript JQuery",
        "PythonDjango",
        "Spark",
        "GIT",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "US",
        "HTML CSS JavaScript",
        "Linux OS X Python Automation Testing UnitTest Nose Python Packages JSON CSV XML",
        "AWS",
        "Scala",
        "Facets",
        "CA",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "ELB",
        "Sublime Expertise",
        "SQL",
        "Chef Cookbooks Experienced",
        "HTTP JSON",
        "lPythonspan",
        "Amazon SQS Supported C",
        "Administrators",
        "JS Angular JS CSS",
        "Analysis Design Development Testing Customization Bug",
        "IronPython",
        "Bash Managed",
        "Pandas",
        "Performed",
        "LAMP Proficient",
        "Djangos",
        "Windows XP Win",
        "Front",
        "SVN",
        "Implemented Integration",
        "HTML XML CSS",
        "REST",
        "NetBeans",
        "JQuery Implemented AJAX",
        "TDD",
        "BASH",
        "JQuery",
        "Developed GUI",
        "Assembly"
    ],
    "experience": "Experience working in Java JavaScript and Python software development environments Experience with Design code debug operations reporting data analysis and web applications utilizing Python Experience in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript Jquery and also on XAMPP and LAMP Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Hand on experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Supported C testing framework to improve automated testing Sound experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm Emacs Expertise in Onsite ApplicationsServicesPackages using Chef along with AWS for EC2S3 and ELB with Chef Cookbooks Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX Hands on Integrated Development Environments experience like Pycharm Eclipse MyEclipse JDeveloper and RAD Proficiency in scripting for system administration and AWS using languages such as BASH and Python Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Expertise in developing consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Experienced with batch processing of data sources using Apache Spark Good working experience in processing large datasets with Spark using Scala and Pyspark Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in programming with Python IDEs like PyCharm Java IDEs like Eclipse and Sublime Expertise in writing AJAX framework to transform Datasets and Data tables into HTTP JSON strings Authorized to work in the US for any employer Work Experience Python Developer General Motors Detroit MI January 2015 to Present Responsibilities Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from MySQL to PostgreSQL with complete data integrity Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed user interface using CSS HTML JavaScript and JQuery Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used JSON based REST Web services and Amazon Web services AWS for smooth operation of application Responsible to use and implement Pandas library for statistical Analysis Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript IronPython Gathered all requirements for developing and analyzing requirement of projects Involved in the Complete Software development life cycle SDLC to develop the application Used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on python and portlet Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python 33 PyQT PyQuery MVW HTML5 CSS3 AWS Angularjs Shell Scripting JSON Rest Apache Web Server Django MySQL IronPython MongoDB PostgreSQL Numpy IPython sqlalchemy Django Tastypie Python Developer Merck Co Inc August 2013 to January 2015 Responsibilities Developed web applications to implement the model view control architecture using Django Framework Build database mapping classes using Django models and Apache Cassandra Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Involved in developing Restful services using Python Flask framework Created entire application using Python Django MySQL and Linux Developed complex database prediction models and pattern matching algorithms in C Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Loading claims into Facets using Kron Shell Scripting and Perl stored in Sybase database Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 perl AJAX MYSQL Linux Rest Heroku GIT Kron urllib urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer US BANK Los Angeles CA November 2012 to July 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed user interface using CSS HTML JavaScript and JQuery Used standard Python modules viz csv robot parser itertools pickl jinja2 lxml for development Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Creating data pipelines using Apache Spark a bigdata processing and computing framework Planning implementing and converting manual test cases to automation test cases Wrote Python modules to extractload asset data from the MySQL source database Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX MYSQL Linux Rest GIT urllib net urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer Rockwell Automation San Jose CA October 2010 to October 2012 Responsibilities Worked on server side applications with Django using Python programming Used python libraries like Beautiful Soup and matplotlib Utilized standard Python modules such as csv robotparser itertools and pickle for development Implemented the business logic in back end with ProC and C Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of a webpages for front end applications Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Used Agile Methodology and SCRUM Process Worked on creating documents in Mongo database Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across 67all the teams for several projects Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX LAMP UnitTest Jquery XML Additional Information Technical Skills Programming Languages Python 3327 Django 1413 Flask perl Java C Shell Script SQL JavaJ2EE PyJamas Jython IronPython Cpython Web Technologies AJAX JavaScript HTML XHTML Amazon Web ServicesAmazon Cloud EC2 Simple Storage Service S3 and Amazon SQS XML JSON Jquery Angular Js Python Modules csv robotparser itertools pickle urllib urllib2 Python Libraries Pandas NumPy UnitTest IPython sqlalchemy Django Tastypie Beautiful Soup wxPython and matplotlib Python Version Control Tools Git GitHub SVN VSS Database MongoDB Cassandra MySQL PostgreSQL Operating systems Windows XP Win 7 81 10 Linux OS X Python Automation Testing UnitTest Nose Python Packages JSON CSV XML XLS Methodologies AgileScrum Waterfall Bug Tracking Tools Jira Bugzilla Rational Clearquest Other Apache Shark Dreamweaver Eclipse IDE NetBeans IDE FlashFXP LAMP",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "General",
        "Motors",
        "New",
        "York",
        "NY",
        "years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Support",
        "Implementation",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "domains",
        "Software",
        "Developer",
        "years",
        "experience",
        "C",
        "C",
        "Linux",
        "Assembly",
        "Experience",
        "Java",
        "JavaScript",
        "Python",
        "software",
        "development",
        "Experience",
        "Design",
        "code",
        "debug",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Flask",
        "Webapp2",
        "Angularjs",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "Jquery",
        "XAMPP",
        "LAMP",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "CSS",
        "Bootstrap",
        "Hand",
        "experience",
        "Amazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Amazon",
        "SQS",
        "Supported",
        "C",
        "testing",
        "framework",
        "testing",
        "Sound",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "Emacs",
        "Expertise",
        "Onsite",
        "ApplicationsServicesPackages",
        "Chef",
        "AWS",
        "EC2S3",
        "ELB",
        "Chef",
        "Cookbooks",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "Hands",
        "Integrated",
        "Development",
        "Environments",
        "experience",
        "Pycharm",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "Proficiency",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "Experience",
        "SDLC",
        "Design",
        "Development",
        "Testing",
        "life",
        "cycle",
        "methodologies",
        "Expertise",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "batch",
        "processing",
        "data",
        "sources",
        "Apache",
        "Spark",
        "Good",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Pyspark",
        "Good",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "Webapp2",
        "spring",
        "web",
        "application",
        "frameworks",
        "Expertise",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Proficient",
        "programming",
        "Python",
        "IDEs",
        "PyCharm",
        "Java",
        "IDEs",
        "Eclipse",
        "Sublime",
        "Expertise",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "JSON",
        "strings",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "General",
        "Motors",
        "Detroit",
        "MI",
        "January",
        "Present",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "database",
        "MySQL",
        "PostgreSQL",
        "data",
        "integrity",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "AWS",
        "highavailability",
        "AWS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "balance",
        "instances",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Developed",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "operation",
        "application",
        "Pandas",
        "library",
        "Analysis",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "IronPython",
        "requirements",
        "requirement",
        "projects",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "Numpy",
        "Numerical",
        "analysis",
        "AGILE",
        "development",
        "methodology",
        "application",
        "apache",
        "server",
        "project",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Integration",
        "test",
        "cases",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "Git",
        "work",
        "python",
        "portlet",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Environment",
        "Python",
        "PyQT",
        "PyQuery",
        "MVW",
        "HTML5",
        "CSS3",
        "AWS",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "MySQL",
        "IronPython",
        "MongoDB",
        "PostgreSQL",
        "Numpy",
        "IPython",
        "sqlalchemy",
        "Django",
        "Tastypie",
        "Python",
        "Developer",
        "Merck",
        "Co",
        "Inc",
        "August",
        "January",
        "Responsibilities",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Django",
        "Framework",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Apache",
        "Cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "manipulation",
        "retrieval",
        "data",
        "services",
        "Python",
        "Flask",
        "framework",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "database",
        "prediction",
        "models",
        "pattern",
        "algorithms",
        "C",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JQuery",
        "libraries",
        "client",
        "side",
        "JavaScript",
        "manipulations",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "MongoDB",
        "environment",
        "availability",
        "performance",
        "scalability",
        "perspectives",
        "algorithms",
        "data",
        "patterns",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "Loading",
        "claims",
        "Facets",
        "Kron",
        "Shell",
        "Scripting",
        "Perl",
        "Sybase",
        "database",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "OracleDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "webbapp2",
        "AJAX",
        "MYSQL",
        "Linux",
        "Rest",
        "Heroku",
        "GIT",
        "Kron",
        "urllib2",
        "OracleDB",
        "MongoDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Python",
        "Developer",
        "US",
        "BANK",
        "Los",
        "Angeles",
        "CA",
        "November",
        "July",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "modules",
        "viz",
        "csv",
        "robot",
        "parser",
        "itertools",
        "pickl",
        "jinja2",
        "lxml",
        "development",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "REST",
        "API",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "sqlalchemy",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "webbapp2",
        "AJAX",
        "MYSQL",
        "Linux",
        "Rest",
        "GIT",
        "urllib2",
        "OracleDB",
        "MongoDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Python",
        "Developer",
        "Rockwell",
        "Automation",
        "San",
        "Jose",
        "CA",
        "October",
        "October",
        "Responsibilities",
        "server",
        "side",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "Python",
        "modules",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "development",
        "business",
        "logic",
        "end",
        "ProC",
        "C",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "functionality",
        "webpages",
        "end",
        "applications",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "webpages",
        "features",
        "dashboard",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "package",
        "information",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "documents",
        "Mongo",
        "database",
        "versions",
        "GIT",
        "release",
        "notes",
        "release",
        "issues",
        "tool",
        "67all",
        "teams",
        "projects",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "webbapp2",
        "LAMP",
        "UnitTest",
        "Jquery",
        "XML",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "Python",
        "Django",
        "Flask",
        "perl",
        "Java",
        "C",
        "Shell",
        "Script",
        "SQL",
        "JavaJ2EE",
        "PyJamas",
        "Jython",
        "IronPython",
        "Cpython",
        "Web",
        "Technologies",
        "AJAX",
        "JavaScript",
        "HTML",
        "XHTML",
        "Amazon",
        "Web",
        "ServicesAmazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Amazon",
        "SQS",
        "XML",
        "JSON",
        "Jquery",
        "Angular",
        "Js",
        "Python",
        "Modules",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "urllib2",
        "Python",
        "Pandas",
        "NumPy",
        "UnitTest",
        "IPython",
        "sqlalchemy",
        "Django",
        "Tastypie",
        "Beautiful",
        "Soup",
        "wxPython",
        "Python",
        "Version",
        "Control",
        "Tools",
        "Git",
        "GitHub",
        "SVN",
        "VSS",
        "Database",
        "MongoDB",
        "Cassandra",
        "MySQL",
        "PostgreSQL",
        "Operating",
        "systems",
        "Windows",
        "XP",
        "Win",
        "Linux",
        "OS",
        "X",
        "Python",
        "Automation",
        "Testing",
        "UnitTest",
        "Nose",
        "Python",
        "Packages",
        "CSV",
        "XML",
        "XLS",
        "Methodologies",
        "AgileScrum",
        "Waterfall",
        "Bug",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "Rational",
        "Clearquest",
        "Apache",
        "Shark",
        "Dreamweaver",
        "Eclipse",
        "IDE",
        "NetBeans",
        "IDE",
        "FlashFXP",
        "LAMP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:07:18.688192",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer General Motors New York NY Over 6 years of experience in Analysis Design Development Testing Customization Bug fixes Support and Implementation of various standalone clientserver enterprise applications using Python Django in various domains Software Developer with 5 years of experience coding in C C Embedded Linux and Assembly Experience working in Java JavaScript and Python software development environments Experience with Design code debug operations reporting data analysis and web applications utilizing Python Experience in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript Jquery and also on XAMPP and LAMP Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Hand on experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Supported C testing framework to improve automated testing Sound experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm Emacs Expertise in Onsite ApplicationsServicesPackages using Chef along with AWS for EC2S3 and ELB with Chef Cookbooks Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX Hands on Integrated Development Environments experience like Pycharm Eclipse MyEclipse JDeveloper and RAD Proficiency in scripting for system administration and AWS using languages such as BASH and Python Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Expertise in developing consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Experienced with batch processing of data sources using Apache Spark Good working experience in processing large datasets with Spark using Scala and Pyspark Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in programming with Python IDEs like PyCharm Java IDEs like Eclipse and Sublime Expertise in writing AJAX framework to transform Datasets and Data tables into HTTP JSON strings Authorized to work in the US for any employer Work Experience Python Developer General Motors Detroit MI January 2015 to Present Responsibilities Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from MySQL to PostgreSQL with complete data integrity Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed user interface using CSS HTML JavaScript and JQuery Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used JSON based REST Web services and Amazon Web services AWS for smooth operation of application Responsible to use and implement Pandas library for statistical Analysis Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript IronPython Gathered all requirements for developing and analyzing requirement of projects Involved in the Complete Software development life cycle SDLC to develop the application Used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on python and portlet Used several python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python 33 PyQT PyQuery MVW HTML5 CSS3 AWS Angularjs Shell Scripting JSON Rest Apache Web Server Django MySQL IronPython MongoDB PostgreSQL Numpy IPython sqlalchemy Django Tastypie Python Developer Merck Co Inc August 2013 to January 2015 Responsibilities Developed web applications to implement the model view control architecture using Django Framework Build database mapping classes using Django models and Apache Cassandra Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Involved in developing Restful services using Python Flask framework Created entire application using Python Django MySQL and Linux Developed complex database prediction models and pattern matching algorithms in C Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed MongoDB environment from availability performance and scalability perspectives Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Loading claims into Facets using Kron Shell Scripting and Perl stored in Sybase database Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 perl AJAX MYSQL Linux Rest Heroku GIT Kron urllib urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer US BANK Los Angeles CA November 2012 to July 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Developed user interface using CSS HTML JavaScript and JQuery Used standard Python modules viz csv robot parser itertools pickl jinja2 lxml for development Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Creating data pipelines using Apache Spark a bigdata processing and computing framework Planning implementing and converting manual test cases to automation test cases Wrote Python modules to extractload asset data from the MySQL source database Anticipated potential parts of failure database communication points file system errors Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX MYSQL Linux Rest GIT urllib net urllib2 OracleDB MongoDB PostgreSQL and VMWare API Python Developer Rockwell Automation San Jose CA October 2010 to October 2012 Responsibilities Worked on server side applications with Django using Python programming Used python libraries like Beautiful Soup and matplotlib Utilized standard Python modules such as csv robotparser itertools and pickle for development Implemented the business logic in back end with ProC and C Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of a webpages for front end applications Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Used Agile Methodology and SCRUM Process Worked on creating documents in Mongo database Maintained the versions using GIT and sending the release notes for each release Supported the issues seen in the tool across 67all the teams for several projects Environment Python 27 Django 18 CSS HTML JavaScript JQuery webbapp2 AJAX LAMP UnitTest Jquery XML Additional Information Technical Skills Programming Languages Python 3327 Django 1413 Flask perl Java C Shell Script SQL JavaJ2EE PyJamas Jython IronPython Cpython Web Technologies AJAX JavaScript HTML XHTML Amazon Web ServicesAmazon Cloud EC2 Simple Storage Service S3 and Amazon SQS XML JSON Jquery Angular Js Python Modules csv robotparser itertools pickle urllib urllib2 Python Libraries Pandas NumPy UnitTest IPython sqlalchemy Django Tastypie Beautiful Soup wxPython and matplotlib Python Version Control Tools Git GitHub SVN VSS Database MongoDB Cassandra MySQL PostgreSQL Operating systems Windows XP Win 7 81 10 Linux OS X Python Automation Testing UnitTest Nose Python Packages JSON CSV XML XLS Methodologies AgileScrum Waterfall Bug Tracking Tools Jira Bugzilla Rational Clearquest Other Apache Shark Dreamweaver Eclipse IDE NetBeans IDE FlashFXP LAMP",
    "unique_id": "888d1ae9-752f-46e1-a7a5-9735d29315d8"
}