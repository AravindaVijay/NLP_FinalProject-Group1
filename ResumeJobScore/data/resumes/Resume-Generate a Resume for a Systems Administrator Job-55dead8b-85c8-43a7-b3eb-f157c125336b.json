{
    "clean_data": "Sr JavaLiferay Portal Developer Sr span lJavaspanLiferay Portal span lDeveloperspan Sr JavaLiferay Portal Developer BCBSA Angels PA Certified Oracle Java Developer with 7 years of experience in Software Development Life Cycle Softwaredeveloping enterprise applications in domains Finance Public Sector and Health Care Involved in various projects related to Data Modelling System Analysis Design and Development for both OLTP and Data warehousing environments Acquainted in designing and developing serverclient and webbased applications in JavaJ2EE technology using Object Oriented Technology Adept knowledge in Liferayportal development technology using HooksPortletsOSGiframeworkFragmentsActivatorsForm NavigatorService Builder extand Liferay CMS Leveraged the Liferay DXP OSGi framework for providing the development environment for modular applications Expertise in Core Java concepts such as OOP Design MultiThreading Generics Exception Handling Collections Java Reflection JDBC and Annotation Familiar with Java 8 concepts like Lambda Expressions Functional Interfaces Stream API JodaOrgTime and Date API Proficient in developing web based GUIs using HTML5 CSS3 JavaScript AngularJS XMLDOJOBootstrap and knowledge on JavaScript libraries ReactJSNodeJSBackboneJS etc Good working experience on XML suite of technologies such as XML XSDXSLT DTD DOM SAXparser Created UI application using Angular4 and Type script as POC Mastered different modules of Spring core Spring MVC Spring securityandgood handson experience with Spring Boot Spring cloud Stronghands on experience with Hibernate andSpring JPA Spring Data Having good experience in exposing and consuming web services using Apache CXF and Apache Camel Adeptknowledge in RDBMS like MySQL PostgreSQL OraclePLSQL Microsoft SQL Server DB2 Good knowledge in NOSQL databases like MongoDBElastic Search and Couchbase Knowledge in Amazon web servicesAWS Open shift Enterprise Docker Images BRMS images Involved incoding both View layer MVC Framework and Model Layerusing Struts and Java Web Services and UI mockups using Balsamiq Extensive exposure in AngularJs for application implementations proficient in creating modules controllers factory services customizable filters http getpost method and directives to realize functionalitieslike REST service using Ajax call input validations searchable and sortable contents Proficientwith version control software like SVNGIT andimplementing logging features using Log4j Slf4j Experiencedin TEST automation usingSelenium Cucumber Jenkins Karma Jasmine and Testing tools JUnit Firebug JMeter Acquainted inWeb Services usingSOAP REST UDDI WSDLandJava Web Service APIs such as JAXRPC JAXM JAXRS JAXWS Experiencedwith CICD build pipelines using Jenkins for timely builds code coverage running test Expert in using defect tracking system like JIRA ClearQuest and Bugzilla and in Message brokersusing ActiveMQ RabbitMQ Familiar in deploying applications using Java build tools Apache Ant Maven Gradle and Basicknowledge in UNIX and LINUX Shell scripting Exposure in interacting with clients and solving application environments issues Work Experience Sr JavaLiferay Portal Developer BCBSA Chicago IL September 2017 to Present Description MyBlue is User facing online health and wellness community that connects the Blue Plan members across the countryMyBlue offers variety of health and wellness resources and covers Pharmacy Medicare Overseas claims and Maternity User can access statements health records provider directories realtime nurse chats Responsibilities Involved in Software Development Life Cycle type of methodology Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design Code Review and work progress in Rally DesignDevelop and Test the Portals using JavaJ2EE and Liferay Portal Technology Involved in creating a roadmap and implemented Liferay portal upgrade for MyBlue customer portal application from versions 62 to Liferay DXP As a part of Liferay DXP upgrade from 62 version all the existing portlets are migrated to Liferay DXP OSGI modules Used Liferay Content Manage SystemCMS for create edit manage and maintain website pages and created both public and private pages at the site level Development of UI with JSP AlloyUI components jQuery AngularJS NodeJS and JavaScript Application architected and developed using AngularJS NodeJS and MVC framework Created responsive designsMobileTabletDesktop using HTML5 CSS3 and Bootstrap Worked on JavaScript and Browser Cache mechanism for storing and retrieving data for website Implemented various Validation controls for form validation and custom validation controls using JavaScript and AngularJS validation controls Developing a Spring MVC Portlet which generated and imported Web PDF reports based on user claims request Worked on custom login portlet with forgot username password with various email templates and multiple security questions using google captcha Migrated Liferay Hook in 62 to several Fragments Activators and Form Navigators to deprecate the changes with Liferay DXP Customized the look and feel of Liferay theme for MyBlue website usingCSS HTML JavaScript and Free Markup Language Used Liferay Theme Generator for migrating the customized theme from versions Liferay 62 to Liferay DXP Installed DXP Portal and development environment for MyBlue application using Gradle Designed Service builder code implementation strategy in themes and other plugins to ensure a decoupled code strategy Worked on Liferay Portlet development using JSR 168 and JSR 286 standards Involved on integration of Liferay with Nagios Xugglerto monitor the health of webservices Implemented SSO integration for MDOTwebsite and SAML for Liferay Auto Login Created Email Notifications Templates while creating a user forgot password and change username using Liferay Fragment Implementing Theme Hooks Layout in Liferay Portal and working on current project architecture and Inter Portal Communication Integrated and deployed the application on Tomcat Application Server and used KALEO workflow tasks and notifications Used Service Builder for generating remote Liferay portal web services in REST and exposed it to JSON webservice using servicexml Used Velocity Template Language and Free Marker Templates to create the template and structure for publishing the web content articles in Liferay DXP Installed Blade Command Line InterfaceCLI for generating Liferay workspace and used Telnet command prompt for checking status of the OSGi modules REST extenders were used for publishing the JAXRS web service and implemented to the OSGi framework Developed SQL Server Stored Procedures to execute backend processes Used SQL Server as database and used create Select Update and Delete statements Created DB tables functions Joins and wrote prepared statements using SQL Server Integrated Elastic Search on Liferay DXP which a distributed search engine is to run parallel searches on different servers and collate results back into single page Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Imported and Exported Liferay web content articles from Stage Environment to PE using LAR Liferay Archive File Used Gradle for project management and build automation and Continuous Integration is done using JenkinsandPUTTY for debugging ImplementedContinuous Deliverypipeline with Docker Jenkins and GitLab Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Used JSON API REST Client and Postman for testing the RESTful webservices Integrated and tested various modules with JUnit test cases by PowerMockito and used Java Code Coverage Jacoco report to ensure highquality delivery with minimal rework in Agile environment Participated in preparing technical documents which includes logical flow of the code and migration process of Liferay from versions 62 to DXP Environment Java J2EE Liferay62DXP OSGI Module Spring MVC JavaScript AngularJS HTML5 CSS3 JSON AlloyUI Bootstrap jQuery NodeJS Liferay developer Studio Eclipse Ant Gradle Apache Tomcat Server Jenkins Gitlab JUnit Agile Rally Mockito Power Mockito Jacoco Blade CLI Elastic search Docker JIRA SQL Server Full Stack Developer General Motors Warren MI September 2016 to August 2017 Description GM uses GWARP Global Warranty part centerapplication across the globe It is an Interactive Attestation UI application which is integrated through General Motorsand other applications where the user performs all the actions on provider level namely claims parts analysis warranty Business rules will be applied and send to GM if they can be automated Responsibilities Involved in entire Software Development Life CycleSDLC of the project right from requirement gathering to the implementation Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design and work progress in Rally Created environment for Micro service architectureMSA and Deployed intoAWS using Open Shift EnvironmentOSE as Docker images Followed Micro Service ArchitectureMSAand routes to each service are implemented with Apache Camel Implemented Cache using HazelCast Infinispanwhich stores data from GWARP calls and update the cache for every 24 hours Developedall UIweb pages using web technologies using HTML5 CSS3 Angular2 Bootstrap jQueryand ReactJS NodeJS as POC Involved in Enhancement of existing application utilizing Angular2 created HTMLnavigation menu that is role based wherein menu item changes dynamically based on the values derived from the databasein JSON form using JACKSON API Used various Bootstrap components and developed the application based on Responsive web design and user facing features using React JS in view level Developed controllers services custom directives for various modules in Angular2 and used expressions to bind data to HTML using Angular2 JavaScript framework Develop the name selectors in GWARP application using Dojo and AJAX for onkeydown responses from back end Used ReactJS for the use of metrics and endend events tracing for the analysis purpose Responsible for writing the Design specifications for the generic and application specific web services using Groovy and Grailsand migrated from AngularJS to Angular2to make GWARPapplication more responsive Designed the portlets for General Motors application using J2EE and Liferay Portal Technology and integrated Liferay portal application with other services Administered the Liferay GWARP portal and worked on creating tracking and insurance of Parts claims for authorizing and publishing the content to the company Imlemented the customized portlets based on the GWARP application demand using Liferay plugins using Java and Spring Involved in the migration process of Liferay 62 to 70 version Defined Object Relational MappingORM for Hibernate and performed Spring integration using Hibernate for ease of data access Familiar in using Named queries to pull all HQL data using annotations Worked on Trade Item Product Item publications and test in FileZilla to get response that publication is received review or rejected Used MongoDB as DataBase as a ServiceDBAASforquery update insert and MongoDB for storing JSON files Upgraded Java8version into server and usedLambda expressions JodaorgTimeDate Stream API in Drools to deploy KIE sessions into Open shiftenterprise and integrated with eclipse Implemented message retry mechanism using kafka in the event of any failure of systems and enhanced the listeners for RabbitMQ and Apache Kafka Exposed and consumed theLiferayweb services to downstream GWARP application Worked on EC2 and VPC API to create instances and virtual private cloud in AmazonAWS ImplementedContinuous Deliverypipeline with Docker Jenkins and GitHubAnd AWS AMIs whenever a new GitHub branch begins whereas Jenkins automatically builds a new Docker container from it Used GitHub version controlling toolsCICD to maintain project versions supported the application through debugging fixing and maintenance releases Used PUTTY for debugging and connect tomy remote files in server securely using SSH Encryption FileZillato transfer files between local and remote folders change file permissions Developed a smart rule engine for GWARP that track claims emails and generatesJasper reports for the application in the company about claim and insurance issue Used ElasticSearch for querying from Oracle database and periodic exported the data Tracked the error logs using Log4J and fixed the bugs and generated documentation for SOAP calls using Swagger API Configured and maintained JBoss application server and development server Created JUnit test cases to automate the testing of business logicand Karma with Mocha for testing Angular applications mocked the response with Mockito and Power Mockito Tracked and solved tickets for defects on bug reporting tool JIRAand End2End testing with Protractor and Httpserver Participated in preparing technical documents which includes logical flow of the code and UML diagrams users manual for the application Environment Java 8 J2EE Liferay627 Spring Core Spring MVC Hibernate JSON JUnit Agile Rally JavaScript Angular2 ReactJS HTML5 CSS3 JSON Redux Bootstrap jQuery nodeJS Kendo UI Eclipse JBoss 7 Mavens Jenkins GitHub JUnit Karma Mocha Mockito Power Mockito Jasmine Linux Swagger Apache Kafka Httpserver JIRA MongoDB Oracle PlSQL AWS UIJ2EE Developer Full Stack Developer Blue Shield of California San Francisco CA January 2016 to August 2016 Description To develop Health enterprise portal for California Medicaid Management Information System The overall MMIS design mandated by Centers for Medicare and Medicaid for Receipt Client or member provider reference claims processing SURS Surveillance Health Enterprise modules includes member management claims financial management pharmacy and benefit administration Responsibilities Involved in Requirements gathering Analysis Design Developing and Testing of application developed using Agile SCRUM methodology Developed User Interface screens for presentation using HTML5 CSS3 AngularJS AJAX Bootstrap ReactJS Glyphicons and jQuery Developed UI using Bootstrap dropdown multiselect Bootstrap modals implemented a suite of application wide MODALS for application configurable warnings alerts and Tab Widget Tree Widget UI controllers Created documentation for all the components which is included in ReactJS and Bootstrap page Developed an AngularJSworkflow manager leveraging AngularJS state router for flexible configuration and management of multistep user input flows Used Bootstrap for writing gulp tasks bower npm Node Package Manager for packing and creating production ready code using NodeJS Used JavaScript and AJAX to query the Elastic search indices format and display JSON results in a webpage using HTML CSS and PHP Improved application by designing and implementing a GroovyGrails for project activity planning activities Analyzed and dissembled PHP code in legacy project and did translation for functional methods in Java Code Developed Backend REST Services using Spring Jersey Apache CXF and MAVENto automate the builds and managing projects Modified webxml and inject Spring Security to ensure backend security and enhanced doPost method in servlet to avoid multiple submissions Entailed in system design and development in Core Java using collections multithreading and generics Implementedthe caching mechanism in Hibernate to load data from Oracle 10g database and wrote Hibernate configured files to enable the data transactions between POJO and Oracle 10g Database Involved inimplementation of JSPs Servlets to interact with Oracle 10g Database Deployed complete Web application on JBoss server and Log4J to capture the log that includes runtime exceptions Developed a production level cloud based architecture in AWS andinvolved in maintenance performance infrastructure services of Amazon EC2 instancesand used S3 Data pipeline to move data to AWS Redshift Converted data objects in Transient memory assertions and attributes to SAML response as a part of SAML SSO Used Cruise Controlframework for a continuous build process and reporting build status and highly scalable performance efficient Drools Architecture Wrote Drool rules in both rule flow and drools fusion fetching the rule data from the database Used REST web service API JAXRS with JSON for client based communication in the browser Involved in Unit Testing Functional and Integration Testing for different modules in the application using JUnit Jasmine Karma and PhantomJs Involved in application architectures development tools for web solutions that fulfill the business requirement of the project Implemented and maintained the branching and buildrelease strategies using GIT Build deploy and maintain SOAPREST compliant Web services and Fetched records for SOAP and Restful requests from Oracle DB using SOLR search Designed properties file that has been used by many services and wrote code for reading EnvironmentJ2EE HTML5 CSS3 AngularJS ReactJS JSP Groovy GULP Bootstrap NodeJS PHP Spring Frame work Spring Security Hibernate JMS JBoss SOAP REST XML Log4j websphere Oracle 10g SOLR Drools Shell Script GIT MAVEN JSON AWS S3 EC2 POJO Jasmine Karma JIRA Mockito JavaJ2EE Developer Virginia Department of Social Services Richmond VA March 2014 to December 2015 DescriptionVDSS is a state supervised and locally administered Social Services system providing benefits to millions of people in Virginia It has an internal application called VACMS used to enter applications and to get track of all benefits The UI application is integrated through VACMS application and other applications where the user performs all the actions on customer level namely adding or changing the  to the customer NDB if they can be automated Responsibilities Designed and developed the application using Agile methodology and followed TDD SCRUM Wrote a Technical design document with the class sequence activity diagram in each use case Designedand developed UI Framework usingHTML5 CSS3 JavaScript Dojo JSF Facelets Primefacesand involved in writing JSF Backing Beansfor controlling customizing and validations of components Implemented JSF converters to handle formatting and Localization configuring facesconfigxml for converters and validators Used AJAX interaction with Prime faces for better and interactive Frontend and developed Single Page Application using AngularJs Developed custom layouts and reusable composite components for the web application using Facelets Used Struts components like Formbeans ActionClasses JavaBeans and designed the client UI MVC using Struts and EJB Developed the business layer logic and implemented EJBs Session beans and Created Grids for VACMS application using Dojo and business widgets for mobile application Designed and developed Business components and integrated with Spring MVC and performed data validation in Form beans and Action Classes Used Spring to develop light weight business component and Spring IOC for DI Spring AOP for cross cutting concerns like logging security transaction management Implemented Hibernate Caching Query and second level EH Cache for frequent queries executed against databases for reports use of APIs like Java Transaction API Java Persistence API Involved in configuring and integrating JSF Spring and Hibernate Frameworksand implemented MVC architecture in various modules Used Spring Hibernate and DAO layers to offer abstraction for the business from the database related code CRUD and created aspects using Spring AOP annotation approach Developed Spring controller class for forms and performed URL and view mapping using the Spring MVCFramework Wrote data Components for Plan Setup wrote called Stored procedures using HQL Hibernate and Hibernate ORM with IBM DB2 Integrated Spring and Hibernate to develop the business layer which serves the data required for JSF beans Consumed data REST web services using JAXRS API using Apache CXFand configured JDBC data source and JMS connection factories in WebSphere Designed and developed the VACMS application to provide integration of FileNet with other systems Developedinterfaces and their implementation classes for asynchronous communication with the Middleware using JMS Modified the VACMS Dashboard application to allow it to be used for Virginia state claims a new region is added to the application and created test support documents for Dashboard Responsible for Deploying and configuring the builds on WebSphere Application Server and Shell scripting in UNIX Wrote notification servicethat executes daily sends emails and escalation to participate and experienced in using LDAP for Authentication and job scheduling using Quartz Worked Error handling for the flows and routed the failures to Cloud hub connector and created alerts in the cloud hub to send the error messages to the Operations team Developed and calling Web services with SOAPHTTP bindings from message flows and reusable components in FTP module File processor Wrote build and deployments scripts using MAVEN on UNIX based environment Worked on application support on different environments from QA to Production where responsible for analyzing the issues providing technical functional support to the users and fix them and tested application VACMS using JMeter EnvironmentJ2EEJ2SE Java CSS3 PHP HTML5 Dojo JSP Prime Faces JSF Struts MVC Spring Framework Spring Batch Hibernate JDBC AngularJS JMS Apache CXF EJB JNDI UDDI WSDL SOAP XML XSLT XPath Log4j Web Sphere Oracle PlSQL RAD UNIX Maven JMeter GitHub JBoss Java Developer FL Blue Florida June 2012 to February 2014 Description Florida Blue is a trade name of Blue Cross and Blue Shield of Florida Inc an Independent Licensee of the Blue Cross and Blue Shield Association Florida Blue is a PPO RPPO and Rx PDP Plan with a Medicare contract Florida Blue HMO Florida Blue Preferred HMO are HMO plans with a Medicare contract Enrollment in Florida Blue Florida Blue HMO or Florida Blue Preferred HMO depends on contract renewal Responsibilities Followed Agile software development methodology in building the System in an iterative and incremental manner Created a Collections in MongoDB by writing Java code through Spring Boot specifications as part of the implementation and implemented serverside tasks using Servlets and XML Developed view components using JSP JSTL JavaScript CSS Struts Logic tags and struts tag libraries Integrated Struts with Spring by delegating Struts action management to Spring framework Developed the project using struts components Strutsconfigxml tiles formbeans and plugins in Struts architecture Implemented Struts Validation Framework for Serverside validation Struts Action classes using Struts controller component and Layout management using Struts Tiles Framework Used Core Spring framework for Dependency injection and configured JDBC connections and JMS connection factories Configured the user actions Struts Actions using XML The controller uses XML mappings in struts to map the request to the serverside functionality Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Installed and configured Oracle RDBMS on UNIX and Windows environments Configured and created JMS servers with various JMS Modules like Queues Topics Connection Factories distributed Queues and Distributed topics Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Migrated DB2 databases from AIX servers to Amazon Web Services AWS Cloud servers on Linux Used Spring framework for dependency injection and integrated with Hibernate Used SOAPUI for testing responses of SOAP web service also generated Mock Service in SOAPUI to simulate and test the functionalities of Web Service Used SOAP Web Services synchronous and asynchronous for checking customer information like names NA credit checks and scores with bureau LECCBCES Defined hibernate mappings to map database tables and created queries Created programmatic query by using Criteria and Query by Example QBC and QBE Defined project dependencies for Maven to build the project based on the package goals and used GIT for version control JavaJ2EE Developer CareFirst BCBS CA June 2010 to May 2012 Description This project is to streamline simplify and standardize the online channel for member users with industry leading capabilities to cater upcoming reforms The purpose of this initiative is to define a member Portal solution at CareFirst that are available today that provide this capability in parts Through this CareFirst Blue Cross Blue Shield intends to achieve an industry standard Responsibilities Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Worked in Multithreaded environment and excessively used Java Threads concurrency and exception handling Designed and Coded JEE components using Spring and Hibernate Analyzed and implemented the SpringMVC framework Used XML based transactional support of Spring Framework Responsible for developing Spring Controllers Service Components and DAO using Hibernate framework Worked on Web Services using SOAP and REST Worked both on Service and Client Side Implemented Hibernate and replaced JDBC code Deployment and Testing the services using SOAP UI Developed White box test cases using JUnit and Mockito framework Configured Log4j Mechanism for complete project using xml files Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Designed Developed user interface layer using combination of JSPs HTML JavaScript jQuery for front end Worked with Cassandra database on Unix and Windows environment Designed the application using UML Class Diagrams Sequence diagrams and State diagrams Wrote JUnit tests to test all implementation Set up code coverage tool for web applications to monitor the degree of source code being tested in different environments Wrote builds and deployment scripts using Maven Coordinated the efforts across different teams to ensure smooth progress of migration and to resolve any issues Supported the application in production and worked on the incidents in a timely manner Demonstrated the application to end user during scrum meeting and end of the release Involved in resolving business and technical issues Handled Remedy production incidents and worked with offshore team and reviewed logs using Splunk Developed JUnit and Configured Log4j Mechanism for complete project using xml files Implemented build scripts using Maven and SVN technology was used for version controlling Environment Java J2EE JSP SpringMVC Core Batch IOC AOP DAO ORM SOAP Restful Web services Jersey Axis Hibernate Servlets JSTL HTML CSS XML Ajax Java Script jQuery Log4j JNDI Maven Jenkin Java Beans GIT Junit Cassandra SQLPLSQL TOAD WebSphere Linux Agile Rally Splunk Education Bachelors in Information Technology Carnegie Mellon University Skills JAVA 8 years JAVASCRIPT 8 years WEB SERVICES 8 years MODEL VIEW CONTROLLER 7 years MODELVIEWCONTROLLER 7 years Additional Information TECHNICAL PROFICIENCY Programming Languages C C Java 8 Scala Liferay 62DXP J2EE Framework JSP Servlets JavaBeans JDBC Struts RMI EJB Hibernate Spring JMS AWTRMIWeb Services Micro Services SOA SAX and DOM Parsers Web Technologies HTMLDHTML XHTML JavaScript DojoXML XSL XSLT CSSSASS jQuery Bootstrap Angular 24NodeJS Ajax JSON ReactJSGrunt Portal Technology Liferay 62DXP Hooks Service Builder Fragments Activator Form NavigatorTheme GeneratorOSGI framework ext Liferay CMS API DOM Data Object Model JTA Java Transaction API Java Persistence API JPA Java Message Service DevelopmentTools IDEs Eclipse Liferay Developer Studio RAD NetBeans MS Visual Studio WebStorm BracketsTFS WebApplication Servers Apache Tomcat WebLogic IBM WebSphere Glassfish Design Patterns MVC Front Controller Singleton SessionFaade Business Delegateand DAO patterns Databases Oracle MySQLMS SQL Server DB2 PLSQL MongoDB Couchbase Web Services SOAP RESTJAXRPCJAXMJAXRSJAXWS Amazon Web Services UnitTesting Frameworks JUnit JMeter Mockito TestNG JasmineKarma Chai Protractor Httpserver Platforms Windows UNIX LINUX MAC Source Control Tools CVS SVN VSS Rational Clear Case Source Tree GIT Hub SDLC Methodologies Water Fall Model Agile Scrum Kanban Methodology Build and Performance Managing Tools Ant Maven Gradle Jenkins JIRA",
    "entities": [
        "Spring MVC Portlet",
        "UNIX Wrote",
        "JavaScript Application",
        "Queues Topics Connection Factories",
        "MyBlue",
        "UIweb",
        "Pharmacy Medicare Overseas",
        "AJAX",
        "AJAX Bootstrap",
        "LECCBCES",
        "POC Involved",
        "Liferay Portal Technology Involved",
        "Stronghands",
        "Strutsconfigxml",
        "Designedand",
        "UNIX",
        "AIX",
        "Facelets",
        "REST Worked",
        "Criteria",
        "Liferay DXP Installed DXP Portal",
        "Virginia Department of Social Services",
        "Integrated Struts with Spring",
        "Stage Environment",
        "SOLR",
        "Spring IOC",
        "HazelCast Infinispanwhich",
        "Liferay CMS Leveraged",
        "Groups",
        "Date API Proficient",
        "Blue Shield Association",
        "MVC Spring",
        "Cloud",
        "IBM",
        "Blue Florida Blue HMO",
        "Rally Created",
        "Node Package",
        "Ajax",
        "EJB Developed",
        "google",
        "Used Spring Hibernate",
        "XML",
        "SOAP",
        "Virginia",
        "NOSQL",
        "Portal Technology",
        "MAC",
        "WebLogic",
        "JUnit",
        "General Motorsand",
        "SAXparser Created UI",
        "API JAXRS",
        "Shell",
        "WebSphere Designed",
        "State",
        "SVNGIT",
        "SURS Surveillance Health Enterprise",
        "JavaJ2EE",
        "Amazon",
        "Object Oriented Technology Adept",
        "FileNet",
        "DI Spring AOP",
        "JSF Spring",
        "Framework Spring Batch Hibernate",
        "Telnet",
        "Lambda Expressions Functional Interfaces Stream API JodaOrgTime",
        "Interactive Attestation UI",
        "Developed",
        "Dojo",
        "DAO",
        "Liferay",
        "Middleware",
        "Global Warranty",
        "PowerMockito",
        "MMIS",
        "GM",
        "Mockito",
        "PHP Spring Frame",
        "HTML JavaScript",
        "San Francisco",
        "Groovy and Grailsand",
        "Responsibilities Involved",
        "General Motors",
        "UML",
        "Windows",
        "GWARP",
        "Restful",
        "Servlets",
        "Balsamiq Extensive",
        "Validation",
        "VACMS",
        "Stream API",
        "ElasticSearch",
        "Struts Tiles Framework",
        "DTD",
        "PHP Improved",
        "HTML5",
        "jQuery Bootstrap Angular 24NodeJS Ajax JSON",
        "PPO",
        "Spring Security",
        "Control Tools",
        "Developed SQL Server Stored Procedures",
        "JSP",
        "J2EE Framework JSP Servlets",
        "Blue Cross",
        "Software Development Life Cycle Softwaredeveloping",
        "Liferay DXP Installed Blade Command Line",
        "Micro",
        "Splunk Developed JUnit",
        "Blue Plan",
        "Release Planning",
        "Bootstrap jQueryand",
        "JBoss",
        "JIRAand",
        "Apache Camel Adeptknowledge",
        "Medicaid for Receipt Client",
        "Roles",
        "CareFirst",
        "SOAPHTTP",
        "SSH Encryption",
        "Florida Inc an Independent Licensee",
        "Oracle 10",
        "MVC",
        "Agile",
        "Hibernate andSpring JPA Spring Data Having",
        "UI MVC",
        "Redux",
        "GIT",
        "EJB",
        "Power Mockito Tracked",
        "Select Update and Delete",
        "Bugzilla",
        "HTML CSS",
        "Multithreaded",
        "S3 Data",
        "QA",
        "POJO",
        "PDF",
        "QBE",
        "Integrated Spring and Hibernate",
        "HQL Hibernate and Hibernate ORM",
        "Drools",
        "SOAPREST",
        "Used SQL Server",
        "Created",
        "Description Florida Blue",
        "Information Technology Carnegie Mellon University",
        "Followed Micro Service",
        "AWS",
        "Implemented",
        "Florida Blue HMO",
        "the Blue Cross",
        "Florida",
        "Oracle",
        "California Medicaid Management Information System",
        "Fetched",
        "Coded",
        "JSF",
        "POC Mastered",
        "Oracle DB",
        "Liferay Portal",
        "Created JUnit",
        "Hibernate Used SOAPUI",
        "React JS",
        "MVC Framework",
        "SAX",
        "EH Cache",
        "Liferay Fragment Implementing Theme Hooks Layout",
        "California",
        "KALEO",
        "Software Development Life",
        "theLiferayweb",
        "LAR Liferay Archive File Used Gradle",
        "CXF",
        "GitLab Administration",
        "Mock Service",
        "NA",
        "OLTP",
        "GitHub",
        "Amazon Web Services",
        "Bootstrap",
        "Liferay DXP OSGI",
        "MAVEN",
        "Implemented Hibernate Caching Query",
        "J2EE",
        "jQuery Developed UI",
        "Create Maven",
        "Front Controller Singleton SessionFaade Business Delegateand",
        "Spring Jersey Apache",
        "Social Services",
        "WebSphere Linux Agile Rally Splunk Education Bachelors",
        "Centers for Medicare",
        "XML Developed",
        "Java Code Developed Backend REST Services",
        "JAXRS",
        "Liferay 62 to",
        "Florida Blue Preferred HMO",
        "Amazon Web Services AWS Cloud",
        "Postman",
        "Oracle 10g Database Deployed",
        "HMO",
        "CareFirst Blue Cross Blue Shield",
        "Worked with",
        "FileZilla",
        "CICD",
        "CLI Elastic",
        "Maven Coordinated",
        "Gradle Designed Service",
        "Inter Portal Communication Integrated",
        "JDBC",
        "Fragments Activators",
        "FTP",
        "GitHubAnd",
        "Created DB",
        "NPM Node Package",
        "CRUD",
        "Medicare",
        "Layout",
        "Flux",
        "Drools Architecture Wrote Drool",
        "Rally DesignDevelop",
        "Maven",
        "Tomcat Application Server",
        "MDOTwebsite",
        "JavaScript",
        "SOLR Drools Shell Script GIT MAVEN JSON AWS",
        "UI",
        "Spring Controllers Service Components",
        "Dashboard Responsible for Deploying",
        "DOM Parsers",
        "Microsoft",
        "Continuous Integration",
        "Struts Actions",
        "Swagger API Configured",
        "Blue Shield",
        "Created a Collections",
        "SVN",
        "Expertise",
        "Java Transaction API Java Persistence API Involved",
        "Proficientwith",
        "Created Grids",
        "SQL Server Integrated Elastic Search",
        "jQuery",
        "Data Modelling System Analysis Design and Development",
        "Data",
        "REST",
        "Description GM",
        "Enrollment",
        "Liferay Auto Login Created",
        "NetBeans",
        "PHP",
        "Apache Camel Implemented Cache",
        "AWS Redshift Converted",
        "Development of UI",
        "NDB",
        "Additional Information TECHNICAL PROFICIENCY Programming Languages C C",
        "Sprint",
        "WebSphere Application Server",
        "Single Page Application",
        "Operations",
        "Liferay Portal Technology",
        "GWARPapplication",
        "GIT Build",
        "Named",
        "Java Code Coverage Jacoco"
    ],
    "experience": "Experience Sr JavaLiferay Portal Developer BCBSA Chicago IL September 2017 to Present Description MyBlue is User facing online health and wellness community that connects the Blue Plan members across the countryMyBlue offers variety of health and wellness resources and covers Pharmacy Medicare Overseas claims and Maternity User can access statements health records provider directories realtime nurse chats Responsibilities Involved in Software Development Life Cycle type of methodology Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design Code Review and work progress in Rally DesignDevelop and Test the Portals using JavaJ2EE and Liferay Portal Technology Involved in creating a roadmap and implemented Liferay portal upgrade for MyBlue customer portal application from versions 62 to Liferay DXP As a part of Liferay DXP upgrade from 62 version all the existing portlets are migrated to Liferay DXP OSGI modules Used Liferay Content Manage SystemCMS for create edit manage and maintain website pages and created both public and private pages at the site level Development of UI with JSP AlloyUI components jQuery AngularJS NodeJS and JavaScript Application architected and developed using AngularJS NodeJS and MVC framework Created responsive designsMobileTabletDesktop using HTML5 CSS3 and Bootstrap Worked on JavaScript and Browser Cache mechanism for storing and retrieving data for website Implemented various Validation controls for form validation and custom validation controls using JavaScript and AngularJS validation controls Developing a Spring MVC Portlet which generated and imported Web PDF reports based on user claims request Worked on custom login portlet with forgot username password with various email templates and multiple security questions using google captcha Migrated Liferay Hook in 62 to several Fragments Activators and Form Navigators to deprecate the changes with Liferay DXP Customized the look and feel of Liferay theme for MyBlue website usingCSS HTML JavaScript and Free Markup Language Used Liferay Theme Generator for migrating the customized theme from versions Liferay 62 to Liferay DXP Installed DXP Portal and development environment for MyBlue application using Gradle Designed Service builder code implementation strategy in themes and other plugins to ensure a decoupled code strategy Worked on Liferay Portlet development using JSR 168 and JSR 286 standards Involved on integration of Liferay with Nagios Xugglerto monitor the health of webservices Implemented SSO integration for MDOTwebsite and SAML for Liferay Auto Login Created Email Notifications Templates while creating a user forgot password and change username using Liferay Fragment Implementing Theme Hooks Layout in Liferay Portal and working on current project architecture and Inter Portal Communication Integrated and deployed the application on Tomcat Application Server and used KALEO workflow tasks and notifications Used Service Builder for generating remote Liferay portal web services in REST and exposed it to JSON webservice using servicexml Used Velocity Template Language and Free Marker Templates to create the template and structure for publishing the web content articles in Liferay DXP Installed Blade Command Line InterfaceCLI for generating Liferay workspace and used Telnet command prompt for checking status of the OSGi modules REST extenders were used for publishing the JAXRS web service and implemented to the OSGi framework Developed SQL Server Stored Procedures to execute backend processes Used SQL Server as database and used create Select Update and Delete statements Created DB tables functions Joins and wrote prepared statements using SQL Server Integrated Elastic Search on Liferay DXP which a distributed search engine is to run parallel searches on different servers and collate results back into single page Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Imported and Exported Liferay web content articles from Stage Environment to PE using LAR Liferay Archive File Used Gradle for project management and build automation and Continuous Integration is done using JenkinsandPUTTY for debugging ImplementedContinuous Deliverypipeline with Docker Jenkins and GitLab Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Used JSON API REST Client and Postman for testing the RESTful webservices Integrated and tested various modules with JUnit test cases by PowerMockito and used Java Code Coverage Jacoco report to ensure highquality delivery with minimal rework in Agile environment Participated in preparing technical documents which includes logical flow of the code and migration process of Liferay from versions 62 to DXP Environment Java J2EE Liferay62DXP OSGI Module Spring MVC JavaScript AngularJS HTML5 CSS3 JSON AlloyUI Bootstrap jQuery NodeJS Liferay developer Studio Eclipse Ant Gradle Apache Tomcat Server Jenkins Gitlab JUnit Agile Rally Mockito Power Mockito Jacoco Blade CLI Elastic search Docker JIRA SQL Server Full Stack Developer General Motors Warren MI September 2016 to August 2017 Description GM uses GWARP Global Warranty part centerapplication across the globe It is an Interactive Attestation UI application which is integrated through General Motorsand other applications where the user performs all the actions on provider level namely claims parts analysis warranty Business rules will be applied and send to GM if they can be automated Responsibilities Involved in entire Software Development Life CycleSDLC of the project right from requirement gathering to the implementation Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design and work progress in Rally Created environment for Micro service architectureMSA and Deployed intoAWS using Open Shift EnvironmentOSE as Docker images Followed Micro Service ArchitectureMSAand routes to each service are implemented with Apache Camel Implemented Cache using HazelCast Infinispanwhich stores data from GWARP calls and update the cache for every 24 hours Developedall UIweb pages using web technologies using HTML5 CSS3 Angular2 Bootstrap jQueryand ReactJS NodeJS as POC Involved in Enhancement of existing application utilizing Angular2 created HTMLnavigation menu that is role based wherein menu item changes dynamically based on the values derived from the databasein JSON form using JACKSON API Used various Bootstrap components and developed the application based on Responsive web design and user facing features using React JS in view level Developed controllers services custom directives for various modules in Angular2 and used expressions to bind data to HTML using Angular2 JavaScript framework Develop the name selectors in GWARP application using Dojo and AJAX for onkeydown responses from back end Used ReactJS for the use of metrics and endend events tracing for the analysis purpose Responsible for writing the Design specifications for the generic and application specific web services using Groovy and Grailsand migrated from AngularJS to Angular2to make GWARPapplication more responsive Designed the portlets for General Motors application using J2EE and Liferay Portal Technology and integrated Liferay portal application with other services Administered the Liferay GWARP portal and worked on creating tracking and insurance of Parts claims for authorizing and publishing the content to the company Imlemented the customized portlets based on the GWARP application demand using Liferay plugins using Java and Spring Involved in the migration process of Liferay 62 to 70 version Defined Object Relational MappingORM for Hibernate and performed Spring integration using Hibernate for ease of data access Familiar in using Named queries to pull all HQL data using annotations Worked on Trade Item Product Item publications and test in FileZilla to get response that publication is received review or rejected Used MongoDB as DataBase as a ServiceDBAASforquery update insert and MongoDB for storing JSON files Upgraded Java8version into server and usedLambda expressions JodaorgTimeDate Stream API in Drools to deploy KIE sessions into Open shiftenterprise and integrated with eclipse Implemented message retry mechanism using kafka in the event of any failure of systems and enhanced the listeners for RabbitMQ and Apache Kafka Exposed and consumed theLiferayweb services to downstream GWARP application Worked on EC2 and VPC API to create instances and virtual private cloud in AmazonAWS ImplementedContinuous Deliverypipeline with Docker Jenkins and GitHubAnd AWS AMIs whenever a new GitHub branch begins whereas Jenkins automatically builds a new Docker container from it Used GitHub version controlling toolsCICD to maintain project versions supported the application through debugging fixing and maintenance releases Used PUTTY for debugging and connect tomy remote files in server securely using SSH Encryption FileZillato transfer files between local and remote folders change file permissions Developed a smart rule engine for GWARP that track claims emails and generatesJasper reports for the application in the company about claim and insurance issue Used ElasticSearch for querying from Oracle database and periodic exported the data Tracked the error logs using Log4J and fixed the bugs and generated documentation for SOAP calls using Swagger API Configured and maintained JBoss application server and development server Created JUnit test cases to automate the testing of business logicand Karma with Mocha for testing Angular applications mocked the response with Mockito and Power Mockito Tracked and solved tickets for defects on bug reporting tool JIRAand End2End testing with Protractor and Httpserver Participated in preparing technical documents which includes logical flow of the code and UML diagrams users manual for the application Environment Java 8 J2EE Liferay627 Spring Core Spring MVC Hibernate JSON JUnit Agile Rally JavaScript Angular2 ReactJS HTML5 CSS3 JSON Redux Bootstrap jQuery nodeJS Kendo UI Eclipse JBoss 7 Mavens Jenkins GitHub JUnit Karma Mocha Mockito Power Mockito Jasmine Linux Swagger Apache Kafka Httpserver JIRA MongoDB Oracle PlSQL AWS UIJ2EE Developer Full Stack Developer Blue Shield of California San Francisco CA January 2016 to August 2016 Description To develop Health enterprise portal for California Medicaid Management Information System The overall MMIS design mandated by Centers for Medicare and Medicaid for Receipt Client or member provider reference claims processing SURS Surveillance Health Enterprise modules includes member management claims financial management pharmacy and benefit administration Responsibilities Involved in Requirements gathering Analysis Design Developing and Testing of application developed using Agile SCRUM methodology Developed User Interface screens for presentation using HTML5 CSS3 AngularJS AJAX Bootstrap ReactJS Glyphicons and jQuery Developed UI using Bootstrap dropdown multiselect Bootstrap modals implemented a suite of application wide MODALS for application configurable warnings alerts and Tab Widget Tree Widget UI controllers Created documentation for all the components which is included in ReactJS and Bootstrap page Developed an AngularJSworkflow manager leveraging AngularJS state router for flexible configuration and management of multistep user input flows Used Bootstrap for writing gulp tasks bower npm Node Package Manager for packing and creating production ready code using NodeJS Used JavaScript and AJAX to query the Elastic search indices format and display JSON results in a webpage using HTML CSS and PHP Improved application by designing and implementing a GroovyGrails for project activity planning activities Analyzed and dissembled PHP code in legacy project and did translation for functional methods in Java Code Developed Backend REST Services using Spring Jersey Apache CXF and MAVENto automate the builds and managing projects Modified webxml and inject Spring Security to ensure backend security and enhanced doPost method in servlet to avoid multiple submissions Entailed in system design and development in Core Java using collections multithreading and generics Implementedthe caching mechanism in Hibernate to load data from Oracle 10 g database and wrote Hibernate configured files to enable the data transactions between POJO and Oracle 10 g Database Involved inimplementation of JSPs Servlets to interact with Oracle 10 g Database Deployed complete Web application on JBoss server and Log4J to capture the log that includes runtime exceptions Developed a production level cloud based architecture in AWS andinvolved in maintenance performance infrastructure services of Amazon EC2 instancesand used S3 Data pipeline to move data to AWS Redshift Converted data objects in Transient memory assertions and attributes to SAML response as a part of SAML SSO Used Cruise Controlframework for a continuous build process and reporting build status and highly scalable performance efficient Drools Architecture Wrote Drool rules in both rule flow and drools fusion fetching the rule data from the database Used REST web service API JAXRS with JSON for client based communication in the browser Involved in Unit Testing Functional and Integration Testing for different modules in the application using JUnit Jasmine Karma and PhantomJs Involved in application architectures development tools for web solutions that fulfill the business requirement of the project Implemented and maintained the branching and buildrelease strategies using GIT Build deploy and maintain SOAPREST compliant Web services and Fetched records for SOAP and Restful requests from Oracle DB using SOLR search Designed properties file that has been used by many services and wrote code for reading EnvironmentJ2EE HTML5 CSS3 AngularJS ReactJS JSP Groovy GULP Bootstrap NodeJS PHP Spring Frame work Spring Security Hibernate JMS JBoss SOAP REST XML Log4j websphere Oracle 10 g SOLR Drools Shell Script GIT MAVEN JSON AWS S3 EC2 POJO Jasmine Karma JIRA Mockito JavaJ2EE Developer Virginia Department of Social Services Richmond VA March 2014 to December 2015 DescriptionVDSS is a state supervised and locally administered Social Services system providing benefits to millions of people in Virginia It has an internal application called VACMS used to enter applications and to get track of all benefits The UI application is integrated through VACMS application and other applications where the user performs all the actions on customer level namely adding or changing the   to the customer NDB if they can be automated Responsibilities Designed and developed the application using Agile methodology and followed TDD SCRUM Wrote a Technical design document with the class sequence activity diagram in each use case Designedand developed UI Framework usingHTML5 CSS3 JavaScript Dojo JSF Facelets Primefacesand involved in writing JSF Backing Beansfor controlling customizing and validations of components Implemented JSF converters to handle formatting and Localization configuring facesconfigxml for converters and validators Used AJAX interaction with Prime faces for better and interactive Frontend and developed Single Page Application using AngularJs Developed custom layouts and reusable composite components for the web application using Facelets Used Struts components like Formbeans ActionClasses JavaBeans and designed the client UI MVC using Struts and EJB Developed the business layer logic and implemented EJBs Session beans and Created Grids for VACMS application using Dojo and business widgets for mobile application Designed and developed Business components and integrated with Spring MVC and performed data validation in Form beans and Action Classes Used Spring to develop light weight business component and Spring IOC for DI Spring AOP for cross cutting concerns like logging security transaction management Implemented Hibernate Caching Query and second level EH Cache for frequent queries executed against databases for reports use of APIs like Java Transaction API Java Persistence API Involved in configuring and integrating JSF Spring and Hibernate Frameworksand implemented MVC architecture in various modules Used Spring Hibernate and DAO layers to offer abstraction for the business from the database related code CRUD and created aspects using Spring AOP annotation approach Developed Spring controller class for forms and performed URL and view mapping using the Spring MVCFramework Wrote data Components for Plan Setup wrote called Stored procedures using HQL Hibernate and Hibernate ORM with IBM DB2 Integrated Spring and Hibernate to develop the business layer which serves the data required for JSF beans Consumed data REST web services using JAXRS API using Apache CXFand configured JDBC data source and JMS connection factories in WebSphere Designed and developed the VACMS application to provide integration of FileNet with other systems Developedinterfaces and their implementation classes for asynchronous communication with the Middleware using JMS Modified the VACMS Dashboard application to allow it to be used for Virginia state claims a new region is added to the application and created test support documents for Dashboard Responsible for Deploying and configuring the builds on WebSphere Application Server and Shell scripting in UNIX Wrote notification servicethat executes daily sends emails and escalation to participate and experienced in using LDAP for Authentication and job scheduling using Quartz Worked Error handling for the flows and routed the failures to Cloud hub connector and created alerts in the cloud hub to send the error messages to the Operations team Developed and calling Web services with SOAPHTTP bindings from message flows and reusable components in FTP module File processor Wrote build and deployments scripts using MAVEN on UNIX based environment Worked on application support on different environments from QA to Production where responsible for analyzing the issues providing technical functional support to the users and fix them and tested application VACMS using JMeter EnvironmentJ2EEJ2SE Java CSS3 PHP HTML5 Dojo JSP Prime Faces JSF Struts MVC Spring Framework Spring Batch Hibernate JDBC AngularJS JMS Apache CXF EJB JNDI UDDI WSDL SOAP XML XSLT XPath Log4j Web Sphere Oracle PlSQL RAD UNIX Maven JMeter GitHub JBoss Java Developer FL Blue Florida June 2012 to February 2014 Description Florida Blue is a trade name of Blue Cross and Blue Shield of Florida Inc an Independent Licensee of the Blue Cross and Blue Shield Association Florida Blue is a PPO RPPO and Rx PDP Plan with a Medicare contract Florida Blue HMO Florida Blue Preferred HMO are HMO plans with a Medicare contract Enrollment in Florida Blue Florida Blue HMO or Florida Blue Preferred HMO depends on contract renewal Responsibilities Followed Agile software development methodology in building the System in an iterative and incremental manner Created a Collections in MongoDB by writing Java code through Spring Boot specifications as part of the implementation and implemented serverside tasks using Servlets and XML Developed view components using JSP JSTL JavaScript CSS Struts Logic tags and struts tag libraries Integrated Struts with Spring by delegating Struts action management to Spring framework Developed the project using struts components Strutsconfigxml tiles formbeans and plugins in Struts architecture Implemented Struts Validation Framework for Serverside validation Struts Action classes using Struts controller component and Layout management using Struts Tiles Framework Used Core Spring framework for Dependency injection and configured JDBC connections and JMS connection factories Configured the user actions Struts Actions using XML The controller uses XML mappings in struts to map the request to the serverside functionality Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Installed and configured Oracle RDBMS on UNIX and Windows environments Configured and created JMS servers with various JMS Modules like Queues Topics Connection Factories distributed Queues and Distributed topics Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Migrated DB2 databases from AIX servers to Amazon Web Services AWS Cloud servers on Linux Used Spring framework for dependency injection and integrated with Hibernate Used SOAPUI for testing responses of SOAP web service also generated Mock Service in SOAPUI to simulate and test the functionalities of Web Service Used SOAP Web Services synchronous and asynchronous for checking customer information like names NA credit checks and scores with bureau LECCBCES Defined hibernate mappings to map database tables and created queries Created programmatic query by using Criteria and Query by Example QBC and QBE Defined project dependencies for Maven to build the project based on the package goals and used GIT for version control JavaJ2EE Developer CareFirst BCBS CA June 2010 to May 2012 Description This project is to streamline simplify and standardize the online channel for member users with industry leading capabilities to cater upcoming reforms The purpose of this initiative is to define a member Portal solution at CareFirst that are available today that provide this capability in parts Through this CareFirst Blue Cross Blue Shield intends to achieve an industry standard Responsibilities Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Worked in Multithreaded environment and excessively used Java Threads concurrency and exception handling Designed and Coded JEE components using Spring and Hibernate Analyzed and implemented the SpringMVC framework Used XML based transactional support of Spring Framework Responsible for developing Spring Controllers Service Components and DAO using Hibernate framework Worked on Web Services using SOAP and REST Worked both on Service and Client Side Implemented Hibernate and replaced JDBC code Deployment and Testing the services using SOAP UI Developed White box test cases using JUnit and Mockito framework Configured Log4j Mechanism for complete project using xml files Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Designed Developed user interface layer using combination of JSPs HTML JavaScript jQuery for front end Worked with Cassandra database on Unix and Windows environment Designed the application using UML Class Diagrams Sequence diagrams and State diagrams Wrote JUnit tests to test all implementation Set up code coverage tool for web applications to monitor the degree of source code being tested in different environments Wrote builds and deployment scripts using Maven Coordinated the efforts across different teams to ensure smooth progress of migration and to resolve any issues Supported the application in production and worked on the incidents in a timely manner Demonstrated the application to end user during scrum meeting and end of the release Involved in resolving business and technical issues Handled Remedy production incidents and worked with offshore team and reviewed logs using Splunk Developed JUnit and Configured Log4j Mechanism for complete project using xml files Implemented build scripts using Maven and SVN technology was used for version controlling Environment Java J2EE JSP SpringMVC Core Batch IOC AOP DAO ORM SOAP Restful Web services Jersey Axis Hibernate Servlets JSTL HTML CSS XML Ajax Java Script jQuery Log4j JNDI Maven Jenkin Java Beans GIT Junit Cassandra SQLPLSQL TOAD WebSphere Linux Agile Rally Splunk Education Bachelors in Information Technology Carnegie Mellon University Skills JAVA 8 years JAVASCRIPT 8 years WEB SERVICES 8 years MODEL VIEW CONTROLLER 7 years MODELVIEWCONTROLLER 7 years Additional Information TECHNICAL PROFICIENCY Programming Languages C C Java 8 Scala Liferay 62DXP J2EE Framework JSP Servlets JavaBeans JDBC Struts RMI EJB Hibernate Spring JMS AWTRMIWeb Services Micro Services SOA SAX and DOM Parsers Web Technologies HTMLDHTML XHTML JavaScript DojoXML XSL XSLT CSSSASS jQuery Bootstrap Angular 24NodeJS Ajax JSON ReactJSGrunt Portal Technology Liferay 62DXP Hooks Service Builder Fragments Activator Form NavigatorTheme GeneratorOSGI framework ext Liferay CMS API DOM Data Object Model JTA Java Transaction API Java Persistence API JPA Java Message Service DevelopmentTools IDEs Eclipse Liferay Developer Studio RAD NetBeans MS Visual Studio WebStorm BracketsTFS WebApplication Servers Apache Tomcat WebLogic IBM WebSphere Glassfish Design Patterns MVC Front Controller Singleton SessionFaade Business Delegateand DAO patterns Databases Oracle MySQLMS SQL Server DB2 PLSQL MongoDB Couchbase Web Services SOAP RESTJAXRPCJAXMJAXRSJAXWS Amazon Web Services UnitTesting Frameworks JUnit JMeter Mockito TestNG JasmineKarma Chai Protractor Httpserver Platforms Windows UNIX LINUX MAC Source Control Tools CVS SVN VSS Rational Clear Case Source Tree GIT Hub SDLC Methodologies Water Fall Model Agile Scrum Kanban Methodology Build and Performance Managing Tools Ant Maven Gradle Jenkins JIRA",
    "extracted_keywords": [
        "Sr",
        "JavaLiferay",
        "Portal",
        "Developer",
        "Sr",
        "lJavaspanLiferay",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaLiferay",
        "Portal",
        "Developer",
        "BCBSA",
        "Angels",
        "PA",
        "Certified",
        "Oracle",
        "Java",
        "Developer",
        "years",
        "experience",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Softwaredeveloping",
        "enterprise",
        "applications",
        "domains",
        "Finance",
        "Public",
        "Sector",
        "Health",
        "Care",
        "projects",
        "Data",
        "Modelling",
        "System",
        "Analysis",
        "Design",
        "Development",
        "OLTP",
        "Data",
        "warehousing",
        "environments",
        "serverclient",
        "applications",
        "JavaJ2EE",
        "technology",
        "Object",
        "Oriented",
        "Technology",
        "Adept",
        "knowledge",
        "Liferayportal",
        "development",
        "technology",
        "HooksPortletsOSGiframeworkFragmentsActivatorsForm",
        "NavigatorService",
        "Builder",
        "extand",
        "Liferay",
        "CMS",
        "Leveraged",
        "Liferay",
        "DXP",
        "OSGi",
        "framework",
        "development",
        "environment",
        "applications",
        "Expertise",
        "Core",
        "Java",
        "concepts",
        "OOP",
        "Design",
        "MultiThreading",
        "Generics",
        "Exception",
        "Handling",
        "Collections",
        "Java",
        "Reflection",
        "JDBC",
        "Annotation",
        "Familiar",
        "Java",
        "concepts",
        "Lambda",
        "Expressions",
        "Functional",
        "Interfaces",
        "Stream",
        "API",
        "JodaOrgTime",
        "Date",
        "API",
        "Proficient",
        "web",
        "GUIs",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AngularJS",
        "XMLDOJOBootstrap",
        "knowledge",
        "JavaScript",
        "working",
        "experience",
        "XML",
        "suite",
        "technologies",
        "XML",
        "XSDXSLT",
        "DTD",
        "DOM",
        "SAXparser",
        "UI",
        "application",
        "Angular4",
        "Type",
        "script",
        "POC",
        "modules",
        "Spring",
        "core",
        "Spring",
        "MVC",
        "Spring",
        "securityandgood",
        "handson",
        "experience",
        "Spring",
        "Boot",
        "Spring",
        "cloud",
        "Stronghands",
        "experience",
        "Hibernate",
        "JPA",
        "Spring",
        "Data",
        "experience",
        "web",
        "services",
        "Apache",
        "CXF",
        "Apache",
        "Camel",
        "Adeptknowledge",
        "RDBMS",
        "MySQL",
        "PostgreSQL",
        "Microsoft",
        "SQL",
        "Server",
        "DB2",
        "knowledge",
        "NOSQL",
        "Search",
        "Couchbase",
        "Knowledge",
        "Amazon",
        "web",
        "shift",
        "Enterprise",
        "Docker",
        "Images",
        "BRMS",
        "images",
        "View",
        "layer",
        "MVC",
        "Framework",
        "Model",
        "Layerusing",
        "Struts",
        "Java",
        "Web",
        "Services",
        "UI",
        "mockups",
        "Balsamiq",
        "exposure",
        "AngularJs",
        "application",
        "implementations",
        "modules",
        "factory",
        "services",
        "filters",
        "getpost",
        "method",
        "directives",
        "functionalitieslike",
        "REST",
        "service",
        "call",
        "input",
        "validations",
        "contents",
        "Proficientwith",
        "version",
        "control",
        "software",
        "SVNGIT",
        "features",
        "Log4j",
        "Slf4j",
        "Experiencedin",
        "TEST",
        "automation",
        "usingSelenium",
        "Cucumber",
        "Jenkins",
        "Karma",
        "Jasmine",
        "Testing",
        "tools",
        "JUnit",
        "Firebug",
        "JMeter",
        "Acquainted",
        "inWeb",
        "Services",
        "REST",
        "UDDI",
        "WSDLandJava",
        "Web",
        "Service",
        "APIs",
        "JAXRPC",
        "JAXM",
        "JAXRS",
        "JAXWS",
        "Experiencedwith",
        "CICD",
        "pipelines",
        "Jenkins",
        "builds",
        "code",
        "coverage",
        "test",
        "Expert",
        "tracking",
        "system",
        "JIRA",
        "ClearQuest",
        "Bugzilla",
        "Message",
        "applications",
        "Java",
        "build",
        "tools",
        "Apache",
        "Ant",
        "Maven",
        "Gradle",
        "Basicknowledge",
        "UNIX",
        "LINUX",
        "Shell",
        "Exposure",
        "clients",
        "application",
        "environments",
        "issues",
        "Work",
        "Experience",
        "Sr",
        "JavaLiferay",
        "Portal",
        "Developer",
        "BCBSA",
        "Chicago",
        "IL",
        "September",
        "Present",
        "Description",
        "MyBlue",
        "User",
        "health",
        "wellness",
        "community",
        "Blue",
        "Plan",
        "members",
        "countryMyBlue",
        "variety",
        "health",
        "wellness",
        "resources",
        "Pharmacy",
        "Medicare",
        "Overseas",
        "claims",
        "Maternity",
        "User",
        "statements",
        "health",
        "records",
        "provider",
        "directories",
        "realtime",
        "nurse",
        "chats",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "type",
        "methodology",
        "Agile",
        "Development",
        "Teamfor",
        "application",
        "development",
        "Sprint",
        "Scrum",
        "design",
        "Code",
        "Review",
        "progress",
        "Rally",
        "DesignDevelop",
        "Test",
        "Portals",
        "JavaJ2EE",
        "Liferay",
        "Portal",
        "Technology",
        "roadmap",
        "Liferay",
        "upgrade",
        "MyBlue",
        "customer",
        "application",
        "versions",
        "DXP",
        "part",
        "Liferay",
        "DXP",
        "version",
        "portlets",
        "DXP",
        "OSGI",
        "modules",
        "Liferay",
        "Content",
        "Manage",
        "SystemCMS",
        "edit",
        "manage",
        "website",
        "pages",
        "pages",
        "site",
        "level",
        "Development",
        "UI",
        "JSP",
        "AlloyUI",
        "components",
        "jQuery",
        "NodeJS",
        "JavaScript",
        "Application",
        "NodeJS",
        "MVC",
        "framework",
        "designsMobileTabletDesktop",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "Browser",
        "Cache",
        "mechanism",
        "data",
        "website",
        "Validation",
        "controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "JavaScript",
        "validation",
        "controls",
        "Spring",
        "MVC",
        "Portlet",
        "Web",
        "PDF",
        "reports",
        "user",
        "claims",
        "request",
        "custom",
        "login",
        "portlet",
        "forgot",
        "password",
        "email",
        "templates",
        "security",
        "questions",
        "google",
        "captcha",
        "Liferay",
        "Hook",
        "Fragments",
        "Activators",
        "Form",
        "Navigators",
        "changes",
        "Liferay",
        "DXP",
        "look",
        "feel",
        "Liferay",
        "theme",
        "MyBlue",
        "website",
        "usingCSS",
        "HTML",
        "JavaScript",
        "Free",
        "Markup",
        "Language",
        "Liferay",
        "Theme",
        "Generator",
        "theme",
        "versions",
        "Liferay",
        "Liferay",
        "DXP",
        "DXP",
        "Portal",
        "development",
        "environment",
        "MyBlue",
        "application",
        "Gradle",
        "Designed",
        "Service",
        "builder",
        "code",
        "implementation",
        "strategy",
        "themes",
        "plugins",
        "code",
        "strategy",
        "Liferay",
        "Portlet",
        "development",
        "JSR",
        "JSR",
        "standards",
        "integration",
        "Liferay",
        "Nagios",
        "Xugglerto",
        "health",
        "webservices",
        "SSO",
        "integration",
        "MDOTwebsite",
        "SAML",
        "Liferay",
        "Auto",
        "Login",
        "Created",
        "Email",
        "Notifications",
        "Templates",
        "user",
        "forgot",
        "password",
        "Liferay",
        "Fragment",
        "Implementing",
        "Theme",
        "Hooks",
        "Layout",
        "Liferay",
        "Portal",
        "project",
        "architecture",
        "Inter",
        "Portal",
        "Communication",
        "Integrated",
        "application",
        "Tomcat",
        "Application",
        "Server",
        "KALEO",
        "workflow",
        "tasks",
        "notifications",
        "Used",
        "Service",
        "Builder",
        "Liferay",
        "web",
        "services",
        "REST",
        "webservice",
        "servicexml",
        "Velocity",
        "Template",
        "Language",
        "Free",
        "Marker",
        "Templates",
        "template",
        "structure",
        "web",
        "content",
        "articles",
        "Liferay",
        "DXP",
        "Blade",
        "Command",
        "Line",
        "Liferay",
        "workspace",
        "Telnet",
        "command",
        "prompt",
        "status",
        "OSGi",
        "modules",
        "REST",
        "extenders",
        "JAXRS",
        "web",
        "service",
        "OSGi",
        "framework",
        "SQL",
        "Server",
        "Stored",
        "Procedures",
        "processes",
        "SQL",
        "Server",
        "database",
        "Select",
        "Update",
        "Delete",
        "statements",
        "Created",
        "DB",
        "tables",
        "functions",
        "statements",
        "SQL",
        "Server",
        "Integrated",
        "Elastic",
        "Search",
        "Liferay",
        "DXP",
        "search",
        "engine",
        "searches",
        "servers",
        "results",
        "page",
        "Administration",
        "Liferay",
        "Portal",
        "Roles",
        "Groups",
        "assignment",
        "authorization",
        "editing",
        "publishing",
        "web",
        "content",
        "Exported",
        "Liferay",
        "web",
        "content",
        "articles",
        "Stage",
        "Environment",
        "PE",
        "LAR",
        "Liferay",
        "Archive",
        "File",
        "Gradle",
        "project",
        "management",
        "automation",
        "Continuous",
        "Integration",
        "JenkinsandPUTTY",
        "ImplementedContinuous",
        "Deliverypipeline",
        "Docker",
        "Jenkins",
        "GitLab",
        "Administration",
        "Liferay",
        "Portal",
        "Roles",
        "Groups",
        "assignment",
        "authorization",
        "editing",
        "publishing",
        "web",
        "content",
        "API",
        "REST",
        "Client",
        "Postman",
        "webservices",
        "modules",
        "JUnit",
        "test",
        "cases",
        "PowerMockito",
        "Java",
        "Code",
        "Coverage",
        "Jacoco",
        "report",
        "highquality",
        "delivery",
        "rework",
        "environment",
        "documents",
        "flow",
        "code",
        "migration",
        "process",
        "Liferay",
        "versions",
        "DXP",
        "Environment",
        "Java",
        "J2EE",
        "Liferay62DXP",
        "OSGI",
        "Module",
        "Spring",
        "MVC",
        "JavaScript",
        "HTML5",
        "CSS3",
        "JSON",
        "AlloyUI",
        "Bootstrap",
        "jQuery",
        "NodeJS",
        "Liferay",
        "developer",
        "Studio",
        "Eclipse",
        "Ant",
        "Gradle",
        "Apache",
        "Tomcat",
        "Server",
        "Jenkins",
        "Gitlab",
        "JUnit",
        "Agile",
        "Rally",
        "Mockito",
        "Power",
        "Mockito",
        "Jacoco",
        "Blade",
        "CLI",
        "Elastic",
        "search",
        "Docker",
        "JIRA",
        "SQL",
        "Server",
        "Full",
        "Stack",
        "Developer",
        "General",
        "Motors",
        "Warren",
        "MI",
        "September",
        "August",
        "Description",
        "GM",
        "GWARP",
        "Global",
        "Warranty",
        "part",
        "centerapplication",
        "globe",
        "Interactive",
        "Attestation",
        "UI",
        "application",
        "General",
        "Motorsand",
        "applications",
        "user",
        "actions",
        "provider",
        "level",
        "claims",
        "parts",
        "analysis",
        "warranty",
        "Business",
        "rules",
        "GM",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "CycleSDLC",
        "project",
        "requirement",
        "gathering",
        "implementation",
        "Agile",
        "Development",
        "Teamfor",
        "application",
        "development",
        "Sprint",
        "Scrum",
        "design",
        "work",
        "progress",
        "Rally",
        "environment",
        "Micro",
        "service",
        "architectureMSA",
        "intoAWS",
        "Shift",
        "EnvironmentOSE",
        "Docker",
        "images",
        "Followed",
        "Micro",
        "Service",
        "ArchitectureMSAand",
        "service",
        "Apache",
        "Camel",
        "Cache",
        "HazelCast",
        "Infinispanwhich",
        "stores",
        "data",
        "GWARP",
        "calls",
        "cache",
        "hours",
        "Developedall",
        "UIweb",
        "pages",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "Angular2",
        "Bootstrap",
        "jQueryand",
        "ReactJS",
        "NodeJS",
        "POC",
        "Enhancement",
        "application",
        "Angular2",
        "HTMLnavigation",
        "menu",
        "role",
        "menu",
        "item",
        "changes",
        "values",
        "databasein",
        "form",
        "JACKSON",
        "API",
        "Bootstrap",
        "components",
        "application",
        "Responsive",
        "web",
        "design",
        "user",
        "features",
        "React",
        "JS",
        "view",
        "level",
        "controllers",
        "services",
        "custom",
        "directives",
        "modules",
        "Angular2",
        "expressions",
        "data",
        "HTML",
        "Angular2",
        "JavaScript",
        "framework",
        "name",
        "selectors",
        "application",
        "Dojo",
        "AJAX",
        "responses",
        "end",
        "ReactJS",
        "use",
        "metrics",
        "events",
        "analysis",
        "purpose",
        "Design",
        "specifications",
        "application",
        "web",
        "services",
        "Groovy",
        "Grailsand",
        "Angular2to",
        "GWARPapplication",
        "portlets",
        "General",
        "Motors",
        "application",
        "J2EE",
        "Liferay",
        "Portal",
        "Technology",
        "Liferay",
        "application",
        "services",
        "Liferay",
        "GWARP",
        "tracking",
        "insurance",
        "Parts",
        "content",
        "company",
        "portlets",
        "GWARP",
        "application",
        "demand",
        "Liferay",
        "plugins",
        "Java",
        "Spring",
        "migration",
        "process",
        "Liferay",
        "version",
        "Object",
        "Relational",
        "MappingORM",
        "Hibernate",
        "Spring",
        "integration",
        "Hibernate",
        "ease",
        "data",
        "access",
        "queries",
        "HQL",
        "data",
        "annotations",
        "Trade",
        "Item",
        "Product",
        "Item",
        "publications",
        "test",
        "FileZilla",
        "response",
        "publication",
        "review",
        "MongoDB",
        "DataBase",
        "ServiceDBAASforquery",
        "update",
        "insert",
        "files",
        "server",
        "expressions",
        "JodaorgTimeDate",
        "Stream",
        "API",
        "Drools",
        "KIE",
        "sessions",
        "shiftenterprise",
        "eclipse",
        "message",
        "retry",
        "mechanism",
        "event",
        "failure",
        "systems",
        "listeners",
        "RabbitMQ",
        "Apache",
        "Kafka",
        "theLiferayweb",
        "services",
        "GWARP",
        "application",
        "EC2",
        "API",
        "instances",
        "cloud",
        "AmazonAWS",
        "ImplementedContinuous",
        "Deliverypipeline",
        "Docker",
        "Jenkins",
        "GitHubAnd",
        "AWS",
        "AMIs",
        "GitHub",
        "branch",
        "Jenkins",
        "Docker",
        "container",
        "GitHub",
        "version",
        "toolsCICD",
        "project",
        "versions",
        "application",
        "fixing",
        "maintenance",
        "releases",
        "PUTTY",
        "tomy",
        "files",
        "server",
        "SSH",
        "Encryption",
        "FileZillato",
        "transfer",
        "files",
        "folders",
        "file",
        "permissions",
        "rule",
        "engine",
        "GWARP",
        "claims",
        "emails",
        "generatesJasper",
        "reports",
        "application",
        "company",
        "claim",
        "insurance",
        "issue",
        "ElasticSearch",
        "Oracle",
        "database",
        "periodic",
        "data",
        "error",
        "logs",
        "Log4J",
        "bugs",
        "documentation",
        "SOAP",
        "calls",
        "Swagger",
        "API",
        "Configured",
        "JBoss",
        "application",
        "server",
        "development",
        "server",
        "JUnit",
        "test",
        "cases",
        "testing",
        "business",
        "logicand",
        "Karma",
        "Mocha",
        "applications",
        "response",
        "Mockito",
        "Power",
        "Mockito",
        "tickets",
        "defects",
        "bug",
        "reporting",
        "tool",
        "JIRAand",
        "End2End",
        "testing",
        "Protractor",
        "Httpserver",
        "documents",
        "flow",
        "code",
        "UML",
        "diagrams",
        "manual",
        "application",
        "Environment",
        "Java",
        "J2EE",
        "Liferay627",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Hibernate",
        "JSON",
        "JUnit",
        "Agile",
        "Rally",
        "JavaScript",
        "Angular2",
        "HTML5",
        "CSS3",
        "JSON",
        "Redux",
        "Bootstrap",
        "jQuery",
        "nodeJS",
        "Kendo",
        "UI",
        "Eclipse",
        "JBoss",
        "Mavens",
        "Jenkins",
        "GitHub",
        "JUnit",
        "Karma",
        "Mocha",
        "Mockito",
        "Power",
        "Mockito",
        "Jasmine",
        "Linux",
        "Swagger",
        "Apache",
        "Kafka",
        "Httpserver",
        "JIRA",
        "MongoDB",
        "Oracle",
        "PlSQL",
        "AWS",
        "Developer",
        "Full",
        "Stack",
        "Developer",
        "Blue",
        "Shield",
        "California",
        "San",
        "Francisco",
        "CA",
        "January",
        "August",
        "Description",
        "Health",
        "enterprise",
        "portal",
        "California",
        "Medicaid",
        "Management",
        "Information",
        "System",
        "MMIS",
        "design",
        "Centers",
        "Medicare",
        "Medicaid",
        "Receipt",
        "Client",
        "member",
        "provider",
        "reference",
        "claims",
        "SURS",
        "Surveillance",
        "Health",
        "Enterprise",
        "modules",
        "member",
        "management",
        "management",
        "pharmacy",
        "benefit",
        "administration",
        "Responsibilities",
        "Requirements",
        "Analysis",
        "Design",
        "Developing",
        "Testing",
        "application",
        "Agile",
        "SCRUM",
        "methodology",
        "Developed",
        "User",
        "Interface",
        "screens",
        "presentation",
        "HTML5",
        "CSS3",
        "AJAX",
        "Bootstrap",
        "ReactJS",
        "Glyphicons",
        "jQuery",
        "Developed",
        "UI",
        "Bootstrap",
        "multiselect",
        "Bootstrap",
        "modals",
        "suite",
        "application",
        "MODALS",
        "application",
        "warnings",
        "alerts",
        "Tab",
        "Widget",
        "Tree",
        "Widget",
        "UI",
        "documentation",
        "components",
        "ReactJS",
        "Bootstrap",
        "page",
        "AngularJSworkflow",
        "manager",
        "state",
        "router",
        "configuration",
        "management",
        "multistep",
        "user",
        "input",
        "Bootstrap",
        "tasks",
        "bower",
        "npm",
        "Node",
        "Package",
        "Manager",
        "production",
        "code",
        "NodeJS",
        "JavaScript",
        "AJAX",
        "search",
        "indices",
        "format",
        "results",
        "webpage",
        "HTML",
        "CSS",
        "PHP",
        "application",
        "GroovyGrails",
        "project",
        "activity",
        "planning",
        "activities",
        "PHP",
        "code",
        "project",
        "translation",
        "methods",
        "Java",
        "Code",
        "Developed",
        "Backend",
        "REST",
        "Services",
        "Spring",
        "Jersey",
        "Apache",
        "CXF",
        "MAVENto",
        "builds",
        "managing",
        "projects",
        "Modified",
        "webxml",
        "Spring",
        "Security",
        "security",
        "method",
        "servlet",
        "submissions",
        "system",
        "design",
        "development",
        "Core",
        "Java",
        "collections",
        "Implementedthe",
        "mechanism",
        "Hibernate",
        "data",
        "Oracle",
        "g",
        "database",
        "Hibernate",
        "files",
        "data",
        "transactions",
        "POJO",
        "Oracle",
        "g",
        "Database",
        "inimplementation",
        "JSPs",
        "Servlets",
        "Oracle",
        "g",
        "Database",
        "Web",
        "application",
        "JBoss",
        "server",
        "log",
        "runtime",
        "exceptions",
        "production",
        "level",
        "cloud",
        "architecture",
        "AWS",
        "maintenance",
        "performance",
        "infrastructure",
        "services",
        "Amazon",
        "EC2",
        "instancesand",
        "S3",
        "Data",
        "pipeline",
        "data",
        "AWS",
        "data",
        "objects",
        "Transient",
        "memory",
        "assertions",
        "attributes",
        "SAML",
        "response",
        "part",
        "SAML",
        "SSO",
        "Used",
        "Cruise",
        "Controlframework",
        "build",
        "process",
        "build",
        "status",
        "performance",
        "Drools",
        "Architecture",
        "Wrote",
        "Drool",
        "rule",
        "flow",
        "fusion",
        "rule",
        "data",
        "database",
        "REST",
        "web",
        "service",
        "API",
        "JAXRS",
        "JSON",
        "client",
        "communication",
        "browser",
        "Unit",
        "Testing",
        "Functional",
        "Integration",
        "Testing",
        "modules",
        "application",
        "JUnit",
        "Jasmine",
        "Karma",
        "PhantomJs",
        "application",
        "development",
        "tools",
        "web",
        "solutions",
        "business",
        "requirement",
        "project",
        "branching",
        "buildrelease",
        "strategies",
        "GIT",
        "Build",
        "SOAPREST",
        "compliant",
        "Web",
        "services",
        "records",
        "SOAP",
        "requests",
        "Oracle",
        "DB",
        "SOLR",
        "search",
        "properties",
        "services",
        "code",
        "EnvironmentJ2EE",
        "HTML5",
        "CSS3",
        "ReactJS",
        "JSP",
        "Groovy",
        "GULP",
        "Bootstrap",
        "NodeJS",
        "PHP",
        "Spring",
        "Frame",
        "work",
        "Spring",
        "Security",
        "Hibernate",
        "JMS",
        "JBoss",
        "SOAP",
        "REST",
        "XML",
        "Log4j",
        "Oracle",
        "g",
        "SOLR",
        "Drools",
        "Shell",
        "Script",
        "GIT",
        "MAVEN",
        "JSON",
        "AWS",
        "S3",
        "EC2",
        "POJO",
        "Jasmine",
        "Karma",
        "JIRA",
        "Mockito",
        "JavaJ2EE",
        "Developer",
        "Virginia",
        "Department",
        "Social",
        "Services",
        "Richmond",
        "VA",
        "March",
        "December",
        "DescriptionVDSS",
        "state",
        "Social",
        "Services",
        "system",
        "benefits",
        "millions",
        "people",
        "Virginia",
        "application",
        "VACMS",
        "applications",
        "track",
        "benefits",
        "UI",
        "application",
        "VACMS",
        "application",
        "applications",
        "user",
        "actions",
        "customer",
        "level",
        "customer",
        "NDB",
        "Responsibilities",
        "application",
        "methodology",
        "TDD",
        "SCRUM",
        "design",
        "document",
        "class",
        "sequence",
        "activity",
        "diagram",
        "use",
        "case",
        "Designedand",
        "UI",
        "Framework",
        "usingHTML5",
        "CSS3",
        "JavaScript",
        "Dojo",
        "JSF",
        "Facelets",
        "Primefacesand",
        "JSF",
        "Backing",
        "Beansfor",
        "customizing",
        "validations",
        "components",
        "JSF",
        "converters",
        "Localization",
        "facesconfigxml",
        "converters",
        "validators",
        "AJAX",
        "interaction",
        "Prime",
        "faces",
        "Frontend",
        "Single",
        "Page",
        "Application",
        "custom",
        "layouts",
        "components",
        "web",
        "application",
        "Facelets",
        "Struts",
        "components",
        "Formbeans",
        "ActionClasses",
        "JavaBeans",
        "client",
        "UI",
        "MVC",
        "Struts",
        "EJB",
        "business",
        "layer",
        "logic",
        "EJBs",
        "Session",
        "beans",
        "Created",
        "Grids",
        "VACMS",
        "application",
        "Dojo",
        "business",
        "widgets",
        "application",
        "Business",
        "components",
        "Spring",
        "MVC",
        "data",
        "validation",
        "Form",
        "beans",
        "Action",
        "Classes",
        "Spring",
        "weight",
        "business",
        "component",
        "Spring",
        "IOC",
        "DI",
        "Spring",
        "AOP",
        "cross",
        "concerns",
        "security",
        "transaction",
        "management",
        "Hibernate",
        "Caching",
        "Query",
        "level",
        "EH",
        "Cache",
        "queries",
        "databases",
        "reports",
        "use",
        "APIs",
        "Java",
        "Transaction",
        "API",
        "Java",
        "Persistence",
        "API",
        "JSF",
        "Spring",
        "Hibernate",
        "Frameworksand",
        "MVC",
        "architecture",
        "modules",
        "Spring",
        "Hibernate",
        "DAO",
        "layers",
        "abstraction",
        "business",
        "database",
        "code",
        "CRUD",
        "aspects",
        "Spring",
        "AOP",
        "annotation",
        "Developed",
        "Spring",
        "controller",
        "class",
        "forms",
        "URL",
        "mapping",
        "Spring",
        "MVCFramework",
        "Wrote",
        "data",
        "Components",
        "Plan",
        "Setup",
        "procedures",
        "HQL",
        "Hibernate",
        "Hibernate",
        "ORM",
        "IBM",
        "DB2",
        "Integrated",
        "Spring",
        "Hibernate",
        "business",
        "layer",
        "data",
        "JSF",
        "Consumed",
        "data",
        "REST",
        "web",
        "services",
        "JAXRS",
        "API",
        "Apache",
        "CXFand",
        "JDBC",
        "data",
        "source",
        "JMS",
        "connection",
        "factories",
        "WebSphere",
        "VACMS",
        "application",
        "integration",
        "FileNet",
        "systems",
        "Developedinterfaces",
        "implementation",
        "classes",
        "communication",
        "Middleware",
        "JMS",
        "Modified",
        "VACMS",
        "Dashboard",
        "application",
        "Virginia",
        "state",
        "region",
        "application",
        "test",
        "support",
        "documents",
        "Dashboard",
        "Responsible",
        "Deploying",
        "builds",
        "WebSphere",
        "Application",
        "Server",
        "Shell",
        "scripting",
        "UNIX",
        "Wrote",
        "notification",
        "servicethat",
        "emails",
        "escalation",
        "LDAP",
        "Authentication",
        "job",
        "scheduling",
        "Quartz",
        "Worked",
        "Error",
        "flows",
        "failures",
        "Cloud",
        "hub",
        "connector",
        "alerts",
        "hub",
        "error",
        "messages",
        "Operations",
        "team",
        "Web",
        "services",
        "SOAPHTTP",
        "bindings",
        "message",
        "flows",
        "components",
        "FTP",
        "module",
        "File",
        "processor",
        "Wrote",
        "build",
        "deployments",
        "scripts",
        "MAVEN",
        "UNIX",
        "environment",
        "application",
        "support",
        "environments",
        "QA",
        "Production",
        "issues",
        "support",
        "users",
        "application",
        "VACMS",
        "JMeter",
        "EnvironmentJ2EEJ2SE",
        "Java",
        "CSS3",
        "PHP",
        "HTML5",
        "Dojo",
        "JSP",
        "Prime",
        "Faces",
        "JSF",
        "Struts",
        "MVC",
        "Spring",
        "Framework",
        "Spring",
        "Batch",
        "Hibernate",
        "JDBC",
        "JMS",
        "Apache",
        "CXF",
        "EJB",
        "JNDI",
        "UDDI",
        "WSDL",
        "SOAP",
        "XML",
        "XSLT",
        "XPath",
        "Log4j",
        "Web",
        "Sphere",
        "Oracle",
        "PlSQL",
        "RAD",
        "UNIX",
        "Maven",
        "JMeter",
        "GitHub",
        "JBoss",
        "Java",
        "Developer",
        "FL",
        "Blue",
        "Florida",
        "June",
        "February",
        "Description",
        "Florida",
        "Blue",
        "trade",
        "name",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Florida",
        "Inc",
        "Independent",
        "Licensee",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "Florida",
        "Blue",
        "PPO",
        "RPPO",
        "Rx",
        "PDP",
        "Plan",
        "Medicare",
        "contract",
        "Florida",
        "Blue",
        "HMO",
        "Florida",
        "Blue",
        "Preferred",
        "HMO",
        "HMO",
        "plans",
        "Medicare",
        "contract",
        "Enrollment",
        "Florida",
        "Blue",
        "Florida",
        "Blue",
        "HMO",
        "Florida",
        "Blue",
        "Preferred",
        "HMO",
        "contract",
        "renewal",
        "Responsibilities",
        "software",
        "development",
        "methodology",
        "System",
        "manner",
        "Collections",
        "MongoDB",
        "Java",
        "code",
        "Spring",
        "Boot",
        "specifications",
        "part",
        "implementation",
        "serverside",
        "tasks",
        "Servlets",
        "XML",
        "view",
        "components",
        "JSP",
        "JSTL",
        "JavaScript",
        "CSS",
        "Struts",
        "Logic",
        "tags",
        "struts",
        "tag",
        "Integrated",
        "Struts",
        "Spring",
        "Struts",
        "action",
        "management",
        "Spring",
        "framework",
        "project",
        "struts",
        "components",
        "Strutsconfigxml",
        "formbeans",
        "plugins",
        "Struts",
        "architecture",
        "Struts",
        "Validation",
        "Framework",
        "Serverside",
        "validation",
        "Struts",
        "Action",
        "classes",
        "Struts",
        "controller",
        "component",
        "Layout",
        "management",
        "Struts",
        "Tiles",
        "Framework",
        "Core",
        "Spring",
        "framework",
        "Dependency",
        "injection",
        "JDBC",
        "connections",
        "JMS",
        "connection",
        "factories",
        "user",
        "actions",
        "Struts",
        "Actions",
        "XML",
        "controller",
        "XML",
        "mappings",
        "struts",
        "request",
        "serverside",
        "functionality",
        "applications",
        "React",
        "JS",
        "view",
        "React",
        "JS",
        "Redux",
        "Flux",
        "MVC",
        "design",
        "flow",
        "application",
        "Oracle",
        "RDBMS",
        "UNIX",
        "Windows",
        "environments",
        "Configured",
        "JMS",
        "servers",
        "JMS",
        "Modules",
        "Queues",
        "Topics",
        "Connection",
        "Factories",
        "Queues",
        "topics",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "Redux",
        "DB2",
        "databases",
        "AIX",
        "servers",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "servers",
        "Linux",
        "Spring",
        "framework",
        "dependency",
        "injection",
        "Hibernate",
        "SOAPUI",
        "testing",
        "responses",
        "SOAP",
        "web",
        "service",
        "Mock",
        "Service",
        "SOAPUI",
        "functionalities",
        "Web",
        "Service",
        "SOAP",
        "Web",
        "Services",
        "customer",
        "information",
        "names",
        "NA",
        "credit",
        "checks",
        "scores",
        "bureau",
        "LECCBCES",
        "hibernate",
        "mappings",
        "database",
        "tables",
        "queries",
        "query",
        "Criteria",
        "Query",
        "Example",
        "QBC",
        "QBE",
        "project",
        "dependencies",
        "Maven",
        "project",
        "package",
        "goals",
        "GIT",
        "version",
        "control",
        "JavaJ2EE",
        "Developer",
        "CareFirst",
        "BCBS",
        "CA",
        "June",
        "May",
        "Description",
        "project",
        "channel",
        "member",
        "users",
        "industry",
        "capabilities",
        "reforms",
        "purpose",
        "initiative",
        "member",
        "solution",
        "CareFirst",
        "today",
        "capability",
        "parts",
        "CareFirst",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "industry",
        "Responsibilities",
        "Agile",
        "Scrum",
        "methodology",
        "Agile",
        "meeting",
        "Sprint",
        "Release",
        "Planning",
        "meetings",
        "Multithreaded",
        "environment",
        "Java",
        "Threads",
        "concurrency",
        "exception",
        "JEE",
        "components",
        "Spring",
        "Hibernate",
        "Analyzed",
        "SpringMVC",
        "framework",
        "XML",
        "support",
        "Spring",
        "Framework",
        "Spring",
        "Controllers",
        "Service",
        "Components",
        "DAO",
        "Hibernate",
        "framework",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Worked",
        "Service",
        "Client",
        "Side",
        "Hibernate",
        "JDBC",
        "code",
        "Deployment",
        "services",
        "SOAP",
        "UI",
        "White",
        "box",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "framework",
        "Configured",
        "Log4j",
        "Mechanism",
        "project",
        "xml",
        "files",
        "Create",
        "Maven",
        "pomxml",
        "files",
        "Jenkins",
        "CI",
        "build",
        "engineers",
        "user",
        "interface",
        "layer",
        "combination",
        "JSPs",
        "HTML",
        "JavaScript",
        "jQuery",
        "end",
        "Cassandra",
        "database",
        "Unix",
        "Windows",
        "environment",
        "application",
        "UML",
        "Class",
        "Diagrams",
        "Sequence",
        "diagrams",
        "State",
        "diagrams",
        "Wrote",
        "JUnit",
        "implementation",
        "code",
        "coverage",
        "tool",
        "web",
        "applications",
        "degree",
        "source",
        "code",
        "environments",
        "Wrote",
        "builds",
        "deployment",
        "scripts",
        "Maven",
        "Coordinated",
        "efforts",
        "teams",
        "progress",
        "migration",
        "issues",
        "application",
        "production",
        "incidents",
        "manner",
        "application",
        "user",
        "scrum",
        "meeting",
        "end",
        "release",
        "business",
        "issues",
        "Remedy",
        "production",
        "incidents",
        "team",
        "logs",
        "Splunk",
        "Developed",
        "JUnit",
        "Configured",
        "Log4j",
        "Mechanism",
        "project",
        "xml",
        "files",
        "scripts",
        "Maven",
        "SVN",
        "technology",
        "version",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "SpringMVC",
        "Core",
        "Batch",
        "IOC",
        "AOP",
        "DAO",
        "ORM",
        "SOAP",
        "Restful",
        "Web",
        "services",
        "Jersey",
        "Axis",
        "Hibernate",
        "Servlets",
        "JSTL",
        "HTML",
        "CSS",
        "XML",
        "Ajax",
        "Java",
        "Script",
        "jQuery",
        "Log4j",
        "JNDI",
        "Maven",
        "Jenkin",
        "Java",
        "Beans",
        "GIT",
        "Junit",
        "Cassandra",
        "SQLPLSQL",
        "TOAD",
        "WebSphere",
        "Linux",
        "Agile",
        "Rally",
        "Splunk",
        "Education",
        "Bachelors",
        "Information",
        "Technology",
        "Carnegie",
        "Mellon",
        "University",
        "Skills",
        "JAVA",
        "years",
        "JAVASCRIPT",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "MODEL",
        "VIEW",
        "years",
        "MODELVIEWCONTROLLER",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "PROFICIENCY",
        "Programming",
        "Languages",
        "C",
        "C",
        "Java",
        "Scala",
        "Liferay",
        "62DXP",
        "J2EE",
        "Framework",
        "JSP",
        "Servlets",
        "JavaBeans",
        "JDBC",
        "Struts",
        "RMI",
        "EJB",
        "Hibernate",
        "Spring",
        "JMS",
        "AWTRMIWeb",
        "Services",
        "Micro",
        "Services",
        "SOA",
        "SAX",
        "DOM",
        "Parsers",
        "Web",
        "Technologies",
        "HTMLDHTML",
        "XHTML",
        "JavaScript",
        "DojoXML",
        "XSL",
        "XSLT",
        "CSSSASS",
        "jQuery",
        "Bootstrap",
        "Angular",
        "24NodeJS",
        "JSON",
        "ReactJSGrunt",
        "Portal",
        "Technology",
        "Liferay",
        "62DXP",
        "Hooks",
        "Service",
        "Builder",
        "Fragments",
        "Activator",
        "Form",
        "NavigatorTheme",
        "GeneratorOSGI",
        "framework",
        "Liferay",
        "CMS",
        "API",
        "DOM",
        "Data",
        "Object",
        "Model",
        "JTA",
        "Java",
        "Transaction",
        "API",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "Java",
        "Message",
        "Service",
        "DevelopmentTools",
        "IDEs",
        "Eclipse",
        "Liferay",
        "Developer",
        "Studio",
        "RAD",
        "NetBeans",
        "MS",
        "Visual",
        "Studio",
        "WebStorm",
        "BracketsTFS",
        "WebApplication",
        "Servers",
        "Apache",
        "Tomcat",
        "WebLogic",
        "IBM",
        "WebSphere",
        "Glassfish",
        "Design",
        "Patterns",
        "MVC",
        "Front",
        "Controller",
        "Singleton",
        "SessionFaade",
        "Business",
        "Delegateand",
        "DAO",
        "Databases",
        "Oracle",
        "MySQLMS",
        "SQL",
        "Server",
        "DB2",
        "PLSQL",
        "Couchbase",
        "Web",
        "Services",
        "SOAP",
        "RESTJAXRPCJAXMJAXRSJAXWS",
        "Amazon",
        "Web",
        "Services",
        "UnitTesting",
        "Frameworks",
        "JUnit",
        "JMeter",
        "Mockito",
        "TestNG",
        "JasmineKarma",
        "Chai",
        "Protractor",
        "Httpserver",
        "Platforms",
        "UNIX",
        "LINUX",
        "MAC",
        "Source",
        "Control",
        "Tools",
        "CVS",
        "SVN",
        "VSS",
        "Rational",
        "Clear",
        "Case",
        "Source",
        "Tree",
        "GIT",
        "Hub",
        "SDLC",
        "Methodologies",
        "Water",
        "Fall",
        "Model",
        "Agile",
        "Scrum",
        "Kanban",
        "Methodology",
        "Build",
        "Performance",
        "Managing",
        "Tools",
        "Ant",
        "Maven",
        "Gradle",
        "Jenkins",
        "JIRA"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:27:26.022615",
    "resume_data": "Sr JavaLiferay Portal Developer Sr span lJavaspanLiferay Portal span lDeveloperspan Sr JavaLiferay Portal Developer BCBSA Angels PA Certified Oracle Java Developer with 7 years of experience in Software Development Life Cycle Softwaredeveloping enterprise applications in domains Finance Public Sector and Health Care Involved in various projects related to Data Modelling System Analysis Design and Development for both OLTP and Data warehousing environments Acquainted in designing and developing serverclient and webbased applications in JavaJ2EE technology using Object Oriented Technology Adept knowledge in Liferayportal development technology using HooksPortletsOSGiframeworkFragmentsActivatorsForm NavigatorService Builder extand Liferay CMS Leveraged the Liferay DXP OSGi framework for providing the development environment for modular applications Expertise in Core Java concepts such as OOP Design MultiThreading Generics Exception Handling Collections Java Reflection JDBC and Annotation Familiar with Java 8 concepts like Lambda Expressions Functional Interfaces Stream API JodaOrgTime and Date API Proficient in developing web based GUIs using HTML5 CSS3 JavaScript AngularJS XMLDOJOBootstrap and knowledge on JavaScript libraries ReactJSNodeJSBackboneJS etc Good working experience on XML suite of technologies such as XML XSDXSLT DTD DOM SAXparser Created UI application using Angular4 and Type script as POC Mastered different modules of Spring core Spring MVC Spring securityandgood handson experience with Spring Boot Spring cloud Stronghands on experience with Hibernate andSpring JPA Spring Data Having good experience in exposing and consuming web services using Apache CXF and Apache Camel Adeptknowledge in RDBMS like MySQL PostgreSQL OraclePLSQL Microsoft SQL Server DB2 Good knowledge in NOSQL databases like MongoDBElastic Search and Couchbase Knowledge in Amazon web servicesAWS Open shift Enterprise Docker Images BRMS images Involved incoding both View layer MVC Framework and Model Layerusing Struts and Java Web Services and UI mockups using Balsamiq Extensive exposure in AngularJs for application implementations proficient in creating modules controllers factory services customizable filters http getpost method and directives to realize functionalitieslike REST service using Ajax call input validations searchable and sortable contents Proficientwith version control software like SVNGIT andimplementing logging features using Log4j Slf4j Experiencedin TEST automation usingSelenium Cucumber Jenkins Karma Jasmine and Testing tools JUnit Firebug JMeter Acquainted inWeb Services usingSOAP REST UDDI WSDLandJava Web Service APIs such as JAXRPC JAXM JAXRS JAXWS Experiencedwith CICD build pipelines using Jenkins for timely builds code coverage running test Expert in using defect tracking system like JIRA ClearQuest and Bugzilla and in Message brokersusing ActiveMQ RabbitMQ Familiar in deploying applications using Java build tools Apache Ant Maven Gradle and Basicknowledge in UNIX and LINUX Shell scripting Exposure in interacting with clients and solving application environments issues Work Experience Sr JavaLiferay Portal Developer BCBSA Chicago IL September 2017 to Present Description MyBlue is User facing online health and wellness community that connects the Blue Plan members across the countryMyBlue offers variety of health and wellness resources and covers Pharmacy Medicare Overseas claims and Maternity User can access statements health records provider directories realtime nurse chats Responsibilities Involved in Software Development Life Cycle type of methodology Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design Code Review and work progress in Rally DesignDevelop and Test the Portals using JavaJ2EE and Liferay Portal Technology Involved in creating a roadmap and implemented Liferay portal upgrade for MyBlue customer portal application from versions 62 to Liferay DXP As a part of Liferay DXP upgrade from 62 version all the existing portlets are migrated to Liferay DXP OSGI modules Used Liferay Content Manage SystemCMS for create edit manage and maintain website pages and created both public and private pages at the site level Development of UI with JSP AlloyUI components jQuery AngularJS NodeJS and JavaScript Application architected and developed using AngularJS NodeJS and MVC framework Created responsive designsMobileTabletDesktop using HTML5 CSS3 and Bootstrap Worked on JavaScript and Browser Cache mechanism for storing and retrieving data for website Implemented various Validation controls for form validation and custom validation controls using JavaScript and AngularJS validation controls Developing a Spring MVC Portlet which generated and imported Web PDF reports based on user claims request Worked on custom login portlet with forgot username password with various email templates and multiple security questions using google captcha Migrated Liferay Hook in 62 to several Fragments Activators and Form Navigators to deprecate the changes with Liferay DXP Customized the look and feel of Liferay theme for MyBlue website usingCSS HTML JavaScript and Free Markup Language Used Liferay Theme Generator for migrating the customized theme from versions Liferay 62 to Liferay DXP Installed DXP Portal and development environment for MyBlue application using Gradle Designed Service builder code implementation strategy in themes and other plugins to ensure a decoupled code strategy Worked on Liferay Portlet development using JSR 168 and JSR 286 standards Involved on integration of Liferay with Nagios Xugglerto monitor the health of webservices Implemented SSO integration for MDOTwebsite and SAML for Liferay Auto Login Created Email Notifications Templates while creating a user forgot password and change username using Liferay Fragment Implementing Theme Hooks Layout in Liferay Portal and working on current project architecture and Inter Portal Communication Integrated and deployed the application on Tomcat Application Server and used KALEO workflow tasks and notifications Used Service Builder for generating remote Liferay portal web services in REST and exposed it to JSON webservice using servicexml Used Velocity Template Language and Free Marker Templates to create the template and structure for publishing the web content articles in Liferay DXP Installed Blade Command Line InterfaceCLI for generating Liferay workspace and used Telnet command prompt for checking status of the OSGi modules REST extenders were used for publishing the JAXRS web service and implemented to the OSGi framework Developed SQL Server Stored Procedures to execute backend processes Used SQL Server as database and used create Select Update and Delete statements Created DB tables functions Joins and wrote prepared statements using SQL Server Integrated Elastic Search on Liferay DXP which a distributed search engine is to run parallel searches on different servers and collate results back into single page Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Imported and Exported Liferay web content articles from Stage Environment to PE using LAR Liferay Archive File Used Gradle for project management and build automation and Continuous Integration is done using JenkinsandPUTTY for debugging ImplementedContinuous Deliverypipeline with Docker Jenkins and GitLab Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content Used JSON API REST Client and Postman for testing the RESTful webservices Integrated and tested various modules with JUnit test cases by PowerMockito and used Java Code Coverage Jacoco report to ensure highquality delivery with minimal rework in Agile environment Participated in preparing technical documents which includes logical flow of the code and migration process of Liferay from versions 62 to DXP Environment Java J2EE Liferay62DXP OSGI Module Spring MVC JavaScript AngularJS HTML5 CSS3 JSON AlloyUI Bootstrap jQuery NodeJS Liferay developer Studio Eclipse Ant Gradle Apache Tomcat Server Jenkins Gitlab JUnit Agile Rally Mockito Power Mockito Jacoco Blade CLI Elastic search Docker JIRA SQL Server Full Stack Developer General Motors Warren MI September 2016 to August 2017 Description GM uses GWARP Global Warranty part centerapplication across the globe It is an Interactive Attestation UI application which is integrated through General Motorsand other applications where the user performs all the actions on provider level namely claims parts analysis warranty Business rules will be applied and send to GM if they can be automated Responsibilities Involved in entire Software Development Life CycleSDLC of the project right from requirement gathering to the implementation Participated in Agile Development Teamfor application development which includes biweekly Sprint and daily Scrum to discuss the design and work progress in Rally Created environment for Micro service architectureMSA and Deployed intoAWS using Open Shift EnvironmentOSE as Docker images Followed Micro Service ArchitectureMSAand routes to each service are implemented with Apache Camel Implemented Cache using HazelCast Infinispanwhich stores data from GWARP calls and update the cache for every 24 hours Developedall UIweb pages using web technologies using HTML5 CSS3 Angular2 Bootstrap jQueryand ReactJS NodeJS as POC Involved in Enhancement of existing application utilizing Angular2 created HTMLnavigation menu that is role based wherein menu item changes dynamically based on the values derived from the databasein JSON form using JACKSON API Used various Bootstrap components and developed the application based on Responsive web design and user facing features using React JS in view level Developed controllers services custom directives for various modules in Angular2 and used expressions to bind data to HTML using Angular2 JavaScript framework Develop the name selectors in GWARP application using Dojo and AJAX for onkeydown responses from back end Used ReactJS for the use of metrics and endend events tracing for the analysis purpose Responsible for writing the Design specifications for the generic and application specific web services using Groovy and Grailsand migrated from AngularJS to Angular2to make GWARPapplication more responsive Designed the portlets for General Motors application using J2EE and Liferay Portal Technology and integrated Liferay portal application with other services Administered the Liferay GWARP portal and worked on creating tracking and insurance of Parts claims for authorizing and publishing the content to the company Imlemented the customized portlets based on the GWARP application demand using Liferay plugins using Java and Spring Involved in the migration process of Liferay 62 to 70 version Defined Object Relational MappingORM for Hibernate and performed Spring integration using Hibernate for ease of data access Familiar in using Named queries to pull all HQL data using annotations Worked on Trade Item Product Item publications and test in FileZilla to get response that publication is received review or rejected Used MongoDB as DataBase as a ServiceDBAASforquery update insert and MongoDB for storing JSON files Upgraded Java8version into server and usedLambda expressions JodaorgTimeDate Stream API in Drools to deploy KIE sessions into Open shiftenterprise and integrated with eclipse Implemented message retry mechanism using kafka in the event of any failure of systems and enhanced the listeners for RabbitMQ and Apache Kafka Exposed and consumed theLiferayweb services to downstream GWARP application Worked on EC2 and VPC API to create instances and virtual private cloud in AmazonAWS ImplementedContinuous Deliverypipeline with Docker Jenkins and GitHubAnd AWS AMIs whenever a new GitHub branch begins whereas Jenkins automatically builds a new Docker container from it Used GitHub version controlling toolsCICD to maintain project versions supported the application through debugging fixing and maintenance releases Used PUTTY for debugging and connect tomy remote files in server securely using SSH Encryption FileZillato transfer files between local and remote folders change file permissions Developed a smart rule engine for GWARP that track claims emails and generatesJasper reports for the application in the company about claim and insurance issue Used ElasticSearch for querying from Oracle database and periodic exported the data Tracked the error logs using Log4J and fixed the bugs and generated documentation for SOAP calls using Swagger API Configured and maintained JBoss application server and development server Created JUnit test cases to automate the testing of business logicand Karma with Mocha for testing Angular applications mocked the response with Mockito and Power Mockito Tracked and solved tickets for defects on bug reporting tool JIRAand End2End testing with Protractor and Httpserver Participated in preparing technical documents which includes logical flow of the code and UML diagrams users manual for the application Environment Java 8 J2EE Liferay627 Spring Core Spring MVC Hibernate JSON JUnit Agile Rally JavaScript Angular2 ReactJS HTML5 CSS3 JSON Redux Bootstrap jQuery nodeJS Kendo UI Eclipse JBoss 7 Mavens Jenkins GitHub JUnit Karma Mocha Mockito Power Mockito Jasmine Linux Swagger Apache Kafka Httpserver JIRA MongoDB Oracle PlSQL AWS UIJ2EE Developer Full Stack Developer Blue Shield of California San Francisco CA January 2016 to August 2016 Description To develop Health enterprise portal for California Medicaid Management Information System The overall MMIS design mandated by Centers for Medicare and Medicaid for Receipt Client or member provider reference claims processing SURS Surveillance Health Enterprise modules includes member management claims financial management pharmacy and benefit administration Responsibilities Involved in Requirements gathering Analysis Design Developing and Testing of application developed using Agile SCRUM methodology Developed User Interface screens for presentation using HTML5 CSS3 AngularJS AJAX Bootstrap ReactJS Glyphicons and jQuery Developed UI using Bootstrap dropdown multiselect Bootstrap modals implemented a suite of application wide MODALS for application configurable warnings alerts and Tab Widget Tree Widget UI controllers Created documentation for all the components which is included in ReactJS and Bootstrap page Developed an AngularJSworkflow manager leveraging AngularJS state router for flexible configuration and management of multistep user input flows Used Bootstrap for writing gulp tasks bower npm Node Package Manager for packing and creating production ready code using NodeJS Used JavaScript and AJAX to query the Elastic search indices format and display JSON results in a webpage using HTML CSS and PHP Improved application by designing and implementing a GroovyGrails for project activity planning activities Analyzed and dissembled PHP code in legacy project and did translation for functional methods in Java Code Developed Backend REST Services using Spring Jersey Apache CXF and MAVENto automate the builds and managing projects Modified webxml and inject Spring Security to ensure backend security and enhanced doPost method in servlet to avoid multiple submissions Entailed in system design and development in Core Java using collections multithreading and generics Implementedthe caching mechanism in Hibernate to load data from Oracle 10g database and wrote Hibernate configured files to enable the data transactions between POJO and Oracle 10g Database Involved inimplementation of JSPs Servlets to interact with Oracle 10g Database Deployed complete Web application on JBoss server and Log4J to capture the log that includes runtime exceptions Developed a production level cloud based architecture in AWS andinvolved in maintenance performance infrastructure services of Amazon EC2 instancesand used S3 Data pipeline to move data to AWS Redshift Converted data objects in Transient memory assertions and attributes to SAML response as a part of SAML SSO Used Cruise Controlframework for a continuous build process and reporting build status and highly scalable performance efficient Drools Architecture Wrote Drool rules in both rule flow and drools fusion fetching the rule data from the database Used REST web service API JAXRS with JSON for client based communication in the browser Involved in Unit Testing Functional and Integration Testing for different modules in the application using JUnit Jasmine Karma and PhantomJs Involved in application architectures development tools for web solutions that fulfill the business requirement of the project Implemented and maintained the branching and buildrelease strategies using GIT Build deploy and maintain SOAPREST compliant Web services and Fetched records for SOAP and Restful requests from Oracle DB using SOLR search Designed properties file that has been used by many services and wrote code for reading EnvironmentJ2EE HTML5 CSS3 AngularJS ReactJS JSP Groovy GULP Bootstrap NodeJS PHP Spring Frame work Spring Security Hibernate JMS JBoss SOAP REST XML Log4j websphere Oracle 10g SOLR Drools Shell Script GIT MAVEN JSON AWS S3 EC2 POJO Jasmine Karma JIRA Mockito JavaJ2EE Developer Virginia Department of Social Services Richmond VA March 2014 to December 2015 DescriptionVDSS is a state supervised and locally administered Social Services system providing benefits to millions of people in Virginia It has an internal application called VACMS used to enter applications and to get track of all benefits The UI application is integrated through VACMS application and other applications where the user performs all the actions on customer level namely adding or changing the nameaddressSSN to the customer NDB if they can be automated Responsibilities Designed and developed the application using Agile methodology and followed TDD SCRUM Wrote a Technical design document with the class sequence activity diagram in each use case Designedand developed UI Framework usingHTML5 CSS3 JavaScript Dojo JSF Facelets Primefacesand involved in writing JSF Backing Beansfor controlling customizing and validations of components Implemented JSF converters to handle formatting and Localization configuring facesconfigxml for converters and validators Used AJAX interaction with Prime faces for better and interactive Frontend and developed Single Page Application using AngularJs Developed custom layouts and reusable composite components for the web application using Facelets Used Struts components like Formbeans ActionClasses JavaBeans and designed the client UI MVC using Struts and EJB Developed the business layer logic and implemented EJBs Session beans and Created Grids for VACMS application using Dojo and business widgets for mobile application Designed and developed Business components and integrated with Spring MVC and performed data validation in Form beans and Action Classes Used Spring to develop light weight business component and Spring IOC for DI Spring AOP for cross cutting concerns like logging security transaction management Implemented Hibernate Caching Query and second level EH Cache for frequent queries executed against databases for reports use of APIs like Java Transaction API Java Persistence API Involved in configuring and integrating JSF Spring and Hibernate Frameworksand implemented MVC architecture in various modules Used Spring Hibernate and DAO layers to offer abstraction for the business from the database related code CRUD and created aspects using Spring AOP annotation approach Developed Spring controller class for forms and performed URL and view mapping using the Spring MVCFramework Wrote data Components for Plan Setup wrote called Stored procedures using HQL Hibernate and Hibernate ORM with IBM DB2 Integrated Spring and Hibernate to develop the business layer which serves the data required for JSF beans Consumed data REST web services using JAXRS API using Apache CXFand configured JDBC data source and JMS connection factories in WebSphere Designed and developed the VACMS application to provide integration of FileNet with other systems Developedinterfaces and their implementation classes for asynchronous communication with the Middleware using JMS Modified the VACMS Dashboard application to allow it to be used for Virginia state claims a new region is added to the application and created test support documents for Dashboard Responsible for Deploying and configuring the builds on WebSphere Application Server and Shell scripting in UNIX Wrote notification servicethat executes daily sends emails and escalation to participate and experienced in using LDAP for Authentication and job scheduling using Quartz Worked Error handling for the flows and routed the failures to Cloud hub connector and created alerts in the cloud hub to send the error messages to the Operations team Developed and calling Web services with SOAPHTTP bindings from message flows and reusable components in FTP module File processor Wrote build and deployments scripts using MAVEN on UNIX based environment Worked on application support on different environments from QA to Production where responsible for analyzing the issues providing technical functional support to the users and fix them and tested application VACMS using JMeter EnvironmentJ2EEJ2SE Java CSS3 PHP HTML5 Dojo JSP Prime Faces JSF Struts MVC Spring Framework Spring Batch Hibernate JDBC AngularJS JMS Apache CXF EJB JNDI UDDI WSDL SOAP XML XSLT XPath Log4j Web Sphere Oracle PlSQL RAD UNIX Maven JMeter GitHub JBoss Java Developer FL Blue Florida June 2012 to February 2014 Description Florida Blue is a trade name of Blue Cross and Blue Shield of Florida Inc an Independent Licensee of the Blue Cross and Blue Shield Association Florida Blue is a PPO RPPO and Rx PDP Plan with a Medicare contract Florida Blue HMO Florida Blue Preferred HMO are HMO plans with a Medicare contract Enrollment in Florida Blue Florida Blue HMO or Florida Blue Preferred HMO depends on contract renewal Responsibilities Followed Agile software development methodology in building the System in an iterative and incremental manner Created a Collections in MongoDB by writing Java code through Spring Boot specifications as part of the implementation and implemented serverside tasks using Servlets and XML Developed view components using JSP JSTL JavaScript CSS Struts Logic tags and struts tag libraries Integrated Struts with Spring by delegating Struts action management to Spring framework Developed the project using struts components Strutsconfigxml tiles formbeans and plugins in Struts architecture Implemented Struts Validation Framework for Serverside validation Struts Action classes using Struts controller component and Layout management using Struts Tiles Framework Used Core Spring framework for Dependency injection and configured JDBC connections and JMS connection factories Configured the user actions Struts Actions using XML The controller uses XML mappings in struts to map the request to the serverside functionality Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application Installed and configured Oracle RDBMS on UNIX and Windows environments Configured and created JMS servers with various JMS Modules like Queues Topics Connection Factories distributed Queues and Distributed topics Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Migrated DB2 databases from AIX servers to Amazon Web Services AWS Cloud servers on Linux Used Spring framework for dependency injection and integrated with Hibernate Used SOAPUI for testing responses of SOAP web service also generated Mock Service in SOAPUI to simulate and test the functionalities of Web Service Used SOAP Web Services synchronous and asynchronous for checking customer information like names NA credit checks and scores with bureau LECCBCES Defined hibernate mappings to map database tables and created queries Created programmatic query by using Criteria and Query by Example QBC and QBE Defined project dependencies for Maven to build the project based on the package goals and used GIT for version control JavaJ2EE Developer CareFirst BCBS CA June 2010 to May 2012 Description This project is to streamline simplify and standardize the online channel for member users with industry leading capabilities to cater upcoming reforms The purpose of this initiative is to define a member Portal solution at CareFirst that are available today that provide this capability in parts Through this CareFirst Blue Cross Blue Shield intends to achieve an industry standard Responsibilities Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Worked in Multithreaded environment and excessively used Java Threads concurrency and exception handling Designed and Coded JEE components using Spring and Hibernate Analyzed and implemented the SpringMVC framework Used XML based transactional support of Spring Framework Responsible for developing Spring Controllers Service Components and DAO using Hibernate framework Worked on Web Services using SOAP and REST Worked both on Service and Client Side Implemented Hibernate and replaced JDBC code Deployment and Testing the services using SOAP UI Developed White box test cases using JUnit and Mockito framework Configured Log4j Mechanism for complete project using xml files Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Designed Developed user interface layer using combination of JSPs HTML JavaScript jQuery for front end Worked with Cassandra database on Unix and Windows environment Designed the application using UML Class Diagrams Sequence diagrams and State diagrams Wrote JUnit tests to test all implementation Set up code coverage tool for web applications to monitor the degree of source code being tested in different environments Wrote builds and deployment scripts using Maven Coordinated the efforts across different teams to ensure smooth progress of migration and to resolve any issues Supported the application in production and worked on the incidents in a timely manner Demonstrated the application to end user during scrum meeting and end of the release Involved in resolving business and technical issues Handled Remedy production incidents and worked with offshore team and reviewed logs using Splunk Developed JUnit and Configured Log4j Mechanism for complete project using xml files Implemented build scripts using Maven and SVN technology was used for version controlling Environment Java J2EE JSP SpringMVC Core Batch IOC AOP DAO ORM SOAP Restful Web services Jersey Axis Hibernate Servlets JSTL HTML CSS XML Ajax Java Script jQuery Log4j JNDI Maven Jenkin Java Beans GIT Junit Cassandra SQLPLSQL TOAD WebSphere Linux Agile Rally Splunk Education Bachelors in Information Technology Carnegie Mellon University Skills JAVA 8 years JAVASCRIPT 8 years WEB SERVICES 8 years MODEL VIEW CONTROLLER 7 years MODELVIEWCONTROLLER 7 years Additional Information TECHNICAL PROFICIENCY Programming Languages C C Java 8 Scala Liferay 62DXP J2EE Framework JSP Servlets JavaBeans JDBC Struts RMI EJB Hibernate Spring JMS AWTRMIWeb Services Micro Services SOA SAX and DOM Parsers Web Technologies HTMLDHTML XHTML JavaScript DojoXML XSL XSLT CSSSASS jQuery Bootstrap Angular 24NodeJS Ajax JSON ReactJSGrunt Portal Technology Liferay 62DXP Hooks Service Builder Fragments Activator Form NavigatorTheme GeneratorOSGI framework ext Liferay CMS API DOM Data Object Model JTA Java Transaction API Java Persistence API JPA Java Message Service DevelopmentTools IDEs Eclipse Liferay Developer Studio RAD NetBeans MS Visual Studio WebStorm BracketsTFS WebApplication Servers Apache Tomcat WebLogic IBM WebSphere Glassfish Design Patterns MVC Front Controller Singleton SessionFaade Business Delegateand DAO patterns Databases Oracle MySQLMS SQL Server DB2 PLSQL MongoDB Couchbase Web Services SOAP RESTJAXRPCJAXMJAXRSJAXWS Amazon Web Services UnitTesting Frameworks JUnit JMeter Mockito TestNG JasmineKarma Chai Protractor Httpserver Platforms Windows UNIX LINUX MAC Source Control Tools CVS SVN VSS Rational Clear Case Source Tree GIT Hub SDLC Methodologies Water Fall Model Agile Scrum Kanban Methodology Build and Performance Managing Tools Ant Maven Gradle Jenkins JIRA",
    "unique_id": "55dead8b-85c8-43a7-b3eb-f157c125336b"
}