{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer HSBC New York NY Authorized to work in the US for any employer Work Experience Sr Java Developer HSBC New York NY September 2017 to Present Responsibilities Efficient in using J2EE Frameworks like Struts Restful Web Services Hibernate Spring Technologies Configured the continuous delivery pipelines for deploying Microservices and lambda functions using Jenkins CICD serve Prepare build scripts for projects using MavenGradle Involved in design development and testing of web application and integration projects using Object Oriented technologies such as Core Java Java Collection Framework Spring MVC Spring Boot J2EE JDBC Servlets JSP JSTL XML JSON JavaScript Developed the application using JSF Spring framework that used MVC architecture with JSP as the view Assisted in frontend development with GWT DHTML CSS JavaScript and wrote Java code to interact with third party JSON services Implemented OAuth for authenticationbased web application and accessed their APIs for fetching data services Involved in CICD process using GIT NEXUS Jenkins Job Creation Maven Build create Docker image and Deploy in PCF environment Designed the Frontend Screens using JSP Servlets HTML and JavaScript We are using AngularJS HTML5 CSS and Java Script as frontend technologies to develop the portals Worked with Zookeeper Kafka and created topics and stored the data in to NoSQL Cassandra for storing Big data using Microservices Implementation of new post login navigation system and new Branding experience using Microservices Spring boot JavaJ2EE and JSON logic Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously Designed and created Cassandra tables as data repository to host transactions and implemented Kafka consumers move transaction data from Kafka to Cassandra Worked closely with Cassandra DBA to configure and deploy Cassandra has Experience on automation testing tools like SeeTest Continuous Testing Platform Calabash Developed microservices which renders the authenticated customers rewards information using spring boot REST JavaJ2EE Developed code changes using Core Java J2EE technologies such as Servlets JMS EJBs Spring Eclipse Link JPA Hibernate JPA Oracle SQLs PerlUnix Scripts Built Restful web services securely using Spring MVC framework and Spring boot hands on experience on Appium automation tool for testing mobile applications Development of a Continuous integrationContinuous delivery CICD infrastructure using Agile development methodologies for large scale JAVA Integrated Kubernetes with network storage and security to provide comprehensive infrastructure and orchestrated container across multiple hosts Created Docker images using a Docker file Worked on Docker container snapshots removing images and managing docker volumes and experienced with Docker container service Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Used rest endpoint URLs in the service layer to get the data from the backend in Jason format Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Written the Kafka producer in Java to consume the messages from JMS Queues and used the AVRO Serialization to send the stream into Kafka brokers for partitioning and distributing in cluster Implemented continuous integration web hooks and workflows around Jenkins to automate the dev test deploy workflow around Puppet codebase Designed and developed XML configurationbased Spring REST web services using Spring REST framework Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Providing JSON response to UI layer through spring MVC Experience in implementing AWS lambda to run servers without managing them and to trigger run code by S3 and SNS Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed CICD solutions for running an AngularJS application from a Tomcat container using Jenkins Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Used Angular JS and JBPM for making restful API calls and data binding Implementing business logic in service levels of the spring MVC pattern Built the application using MAVEN and WebSphere application server 85 for deploying EAR files Created CICD Jenkins for deployment Used REST and SOAP UI for testing web service for serverside changes Involved in deployment process of TomcatWeb logic Servers Created bean XML files and row mappers to map tables and fields in the database Worked on package manager tools such as Bower and task runner tools such as GruntJS Worked on creating the Docker containers and Docker consoles for managing the application life cycle Extensively worked on every module of spring framework which includes SpringCore SpringContext SpringDAO SpringJDBC SpringORM SpringJMS SpringWeb Services and SpringAO Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Using Java Persistence API JPA for accessing persisting and managing data between Java Objects classes and a relational database CloudFormation Cloud Trail services and CloudFront to setup and manage cached content delivery Created Elastic load balancers ELBand used Route53 with failover and latency options for high availability and fault tolerance Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Worked on migration Microsoft azure service to AWS service for a project Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Sr Java Developer Amazon Seattle WA September 2015 to November 2016 Responsibilities Worked on testdriven development continuous integration systems and Agile software development Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Designed and developed JSP pages using Spring MVC framework and created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Used CDI to bind the lifecycle and interactions of stateful components to welldefined but extensible lifecycle contexts Extensively used Spring DATA JPA in data access layer to access and update information in the database Developed programs for accessing the database using JDBC thin driver to execute queries prepared statements Stored Procedures and to manipulate the data in the database Developed Single Page applications using angular JS2 DHTML CSS Semantic UI libraries Designed and developed User Interaction screens using HTML5 CSS3 JavaScript AngularJS Bootstrap AJAX JSON and Gulp Worked on the front end of the application using technologies such as JSP JSF Restful Face lets and JavaScript Developed Rest API using NodeJS using various modules in node like express Created database tables and implemented SQL Stored Procedures triggers and complex queries in MySQL Created RESTful Web service for updating customer data from sent from external systems Involved in writing RESTful Web Services for supporting web application consuming those services on different applications Used Node JS for doing nonblocking design operation for serverside code and Angularjs framework in developing various UI components Involved in Development using Spring Java Backend Hibernate Also SQL and Junit following Agile Methodologies Used SVN and Maven for version control Wrote Apache ANT build scripts for building the application and unit test cases using JUnit for performing the unit testing Used Web Services JAXWS using Axis 20 for creating rate summary and used WSDL and SOAP messages for getting data from different module and used SAX XML parsers for data retrieval Createdmanaged Mongo DB collections Developed Serverside automation using Nodejs scripting and connecting different types of SQL stores Worked on Amazon Web Services AWS infrastructure with automation and configuration management in AWS beanstalk Used spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications Developed serverside common utilities for the application and the frontend dynamic web pages using JSP JavaScript and HTML Developed EJB components encapsulating business logic Worked on tools like GIT and JIRA for version control and bug tracking Worked closely with DevOps team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT and deployed Rest API Application in AWS Cloud Used Mockito to test individual methods for unit testing User Docker as the container technology with Spring Boot REST API and worked on creating this application for POC where micro services communicated through the API Java Developer Barclays Pune Maharashtra January 2013 to January 2015 Responsibilities Responsible for coding with the use of ObjectOriented Principles and implementing MVC with JSP Struts Used Spring Framework extensively in all layers of the application including UI backend and integration Daos were implemented using IBATIS Hibernate Developed Web Services using SOAP REST Apache CXF while integrating with the license server to validate the licenses Developed the Spring AOP programming to configure logging for the application and Implemented application level persistence using Hibernate and Spring Implemented the front end using JSP HTML XML CSS ExtJS React JS Bootstrap JavaScript and used AJAX for dynamic web content Wrote the frontend look and appearance for the screens using Java Core Java NO SQL AWS Bootstrap ExtJS JavaScript AJAX and jQuery and Developed web pages with JSP JSF jQuery AJAX java scripts Developed code using Core Java to implement technical enhancement following Java Standards Used JPA Java Persistence API with Hibernate as Persistence provider for Object Relational mapping Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Used Apache camel for endtoend messaging Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat Jboss Fuse Data Warehouse DW data integrated from different sources in different format PDF TIFF JPEG web crawl and RDBMS data MySQL oracle SQL server etc Used XML and JSON for transferringretrieving data between different Applications and Used MongoDB database high availability concepts with data replication for the failover design Also wrote complex PLSQL queries using Joins Stored Procedures Functions Triggers Cursors and Indexes in Data Access Layer Participated in developing web pages using JSP JavaScript and Google Web Toolkit DWR Ajax Framework for better user interface experience Worked as backend developer of this app using Nodejs Socket io and mongo dBMQ Implemented the project using JAXWS based Web Services using WSDL UDDI and SOAP to communicate with other systems Deployed the project into Heroku using GIT version control system and Worked on a largescale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Education Bachelors in computer science engineering in computer science engineering University of Mumbai 2013 Skills Java J2Ee J2Ee Java Hibernate Spring",
    "entities": [
        "AJAX",
        "Request",
        "Nodejs",
        "Created CICD Jenkins",
        "Involved in Development",
        "TomcatWeb",
        "UI backend",
        "CloudFront",
        "Developed Single Page",
        "JSON",
        "Authorization using Spring Security",
        "Form Bean",
        "Amazon Web Services AWS",
        "Heroku",
        "JSP Struts Used Spring Framework",
        "node",
        "Used Web Services",
        "XML",
        "SOAP",
        "EAR",
        "Route53",
        "JAXWS",
        "JUnit",
        "DevOps",
        "JavaJ2EE",
        "Hibernate Developed Web Services",
        "WebSphere",
        "Boot J2EE JDBC Servlets",
        "JSF Spring",
        "Assisted",
        "Rest API Application",
        "Developed",
        "User Docker",
        "User Interaction",
        "Servers Created",
        "Spring MVC",
        "Puppet",
        "HTML Developed",
        "OAuth Developed CICD",
        "Createdmanaged Mongo DB",
        "HTML5",
        "Developed Serverside",
        "JSP",
        "Micro",
        "the JavaScript Servlets",
        "Docker",
        "Jenkins CICD",
        "Created Docker",
        "Angular JS",
        "MVC",
        "Agile",
        "MVC Experience",
        "EJB",
        "GIT",
        "Rabbit MQ",
        "API",
        "Web Services",
        "US",
        "JAVA Integrated Kubernetes",
        "the API Java Developer Barclays Pune Maharashtra",
        "JSP Servlets HTML",
        "ELBand",
        "AWS",
        "the Cassandra Cluster",
        "ObjectOriented Principles",
        "Google Web Toolkit DWR Ajax Framework",
        "CSS Semantic UI",
        "MavenGradle Involved",
        "GIT NEXUS Jenkins Job Creation Maven Build",
        "Seattle",
        "Microservices Implementation",
        "CDI",
        "CXF",
        "SQL",
        "Prepare",
        "Appium",
        "JSPHTML",
        "MAVEN",
        "J2EE",
        "Jenkins Ansible",
        "Created Elastic",
        "CICD",
        "University of Mumbai",
        "Branding",
        "HTML5 CSS",
        "SpringWeb Services",
        "Maven",
        "lJavaspan",
        "PDF TIFF JPEG",
        "Deploy in PCF",
        "REST JavaJ2EE",
        "GWT",
        "UI",
        "JSP Servlets",
        "Microsoft",
        "SVN",
        "SAX XML",
        "IBATIS",
        "jQuery",
        "Tomcat",
        "REST",
        "SeeTest Continuous Testing Platform Calabash Developed",
        "Mongo DB",
        "Dispatch",
        "Node",
        "JBPM"
    ],
    "experience": "Experience Sr Java Developer HSBC New York NY September 2017 to Present Responsibilities Efficient in using J2EE Frameworks like Struts Restful Web Services Hibernate Spring Technologies Configured the continuous delivery pipelines for deploying Microservices and lambda functions using Jenkins CICD serve Prepare build scripts for projects using MavenGradle Involved in design development and testing of web application and integration projects using Object Oriented technologies such as Core Java Java Collection Framework Spring MVC Spring Boot J2EE JDBC Servlets JSP JSTL XML JSON JavaScript Developed the application using JSF Spring framework that used MVC architecture with JSP as the view Assisted in frontend development with GWT DHTML CSS JavaScript and wrote Java code to interact with third party JSON services Implemented OAuth for authenticationbased web application and accessed their APIs for fetching data services Involved in CICD process using GIT NEXUS Jenkins Job Creation Maven Build create Docker image and Deploy in PCF environment Designed the Frontend Screens using JSP Servlets HTML and JavaScript We are using AngularJS HTML5 CSS and Java Script as frontend technologies to develop the portals Worked with Zookeeper Kafka and created topics and stored the data in to NoSQL Cassandra for storing Big data using Microservices Implementation of new post login navigation system and new Branding experience using Microservices Spring boot JavaJ2EE and JSON logic Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously Designed and created Cassandra tables as data repository to host transactions and implemented Kafka consumers move transaction data from Kafka to Cassandra Worked closely with Cassandra DBA to configure and deploy Cassandra has Experience on automation testing tools like SeeTest Continuous Testing Platform Calabash Developed microservices which renders the authenticated customers rewards information using spring boot REST JavaJ2EE Developed code changes using Core Java J2EE technologies such as Servlets JMS EJBs Spring Eclipse Link JPA Hibernate JPA Oracle SQLs PerlUnix Scripts Built Restful web services securely using Spring MVC framework and Spring boot hands on experience on Appium automation tool for testing mobile applications Development of a Continuous integrationContinuous delivery CICD infrastructure using Agile development methodologies for large scale JAVA Integrated Kubernetes with network storage and security to provide comprehensive infrastructure and orchestrated container across multiple hosts Created Docker images using a Docker file Worked on Docker container snapshots removing images and managing docker volumes and experienced with Docker container service Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Used rest endpoint URLs in the service layer to get the data from the backend in Jason format Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Written the Kafka producer in Java to consume the messages from JMS Queues and used the AVRO Serialization to send the stream into Kafka brokers for partitioning and distributing in cluster Implemented continuous integration web hooks and workflows around Jenkins to automate the dev test deploy workflow around Puppet codebase Designed and developed XML configurationbased Spring REST web services using Spring REST framework Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Providing JSON response to UI layer through spring MVC Experience in implementing AWS lambda to run servers without managing them and to trigger run code by S3 and SNS Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed CICD solutions for running an AngularJS application from a Tomcat container using Jenkins Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Used Angular JS and JBPM for making restful API calls and data binding Implementing business logic in service levels of the spring MVC pattern Built the application using MAVEN and WebSphere application server 85 for deploying EAR files Created CICD Jenkins for deployment Used REST and SOAP UI for testing web service for serverside changes Involved in deployment process of TomcatWeb logic Servers Created bean XML files and row mappers to map tables and fields in the database Worked on package manager tools such as Bower and task runner tools such as GruntJS Worked on creating the Docker containers and Docker consoles for managing the application life cycle Extensively worked on every module of spring framework which includes SpringCore SpringContext SpringDAO SpringJDBC SpringORM SpringJMS SpringWeb Services and SpringAO Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Using Java Persistence API JPA for accessing persisting and managing data between Java Objects classes and a relational database CloudFormation Cloud Trail services and CloudFront to setup and manage cached content delivery Created Elastic load balancers ELBand used Route53 with failover and latency options for high availability and fault tolerance Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Worked on migration Microsoft azure service to AWS service for a project Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Sr Java Developer Amazon Seattle WA September 2015 to November 2016 Responsibilities Worked on testdriven development continuous integration systems and Agile software development Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Designed and developed JSP pages using Spring MVC framework and created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Used CDI to bind the lifecycle and interactions of stateful components to welldefined but extensible lifecycle contexts Extensively used Spring DATA JPA in data access layer to access and update information in the database Developed programs for accessing the database using JDBC thin driver to execute queries prepared statements Stored Procedures and to manipulate the data in the database Developed Single Page applications using angular JS2 DHTML CSS Semantic UI libraries Designed and developed User Interaction screens using HTML5 CSS3 JavaScript AngularJS Bootstrap AJAX JSON and Gulp Worked on the front end of the application using technologies such as JSP JSF Restful Face lets and JavaScript Developed Rest API using NodeJS using various modules in node like express Created database tables and implemented SQL Stored Procedures triggers and complex queries in MySQL Created RESTful Web service for updating customer data from sent from external systems Involved in writing RESTful Web Services for supporting web application consuming those services on different applications Used Node JS for doing nonblocking design operation for serverside code and Angularjs framework in developing various UI components Involved in Development using Spring Java Backend Hibernate Also SQL and Junit following Agile Methodologies Used SVN and Maven for version control Wrote Apache ANT build scripts for building the application and unit test cases using JUnit for performing the unit testing Used Web Services JAXWS using Axis 20 for creating rate summary and used WSDL and SOAP messages for getting data from different module and used SAX XML parsers for data retrieval Createdmanaged Mongo DB collections Developed Serverside automation using Nodejs scripting and connecting different types of SQL stores Worked on Amazon Web Services AWS infrastructure with automation and configuration management in AWS beanstalk Used spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications Developed serverside common utilities for the application and the frontend dynamic web pages using JSP JavaScript and HTML Developed EJB components encapsulating business logic Worked on tools like GIT and JIRA for version control and bug tracking Worked closely with DevOps team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT and deployed Rest API Application in AWS Cloud Used Mockito to test individual methods for unit testing User Docker as the container technology with Spring Boot REST API and worked on creating this application for POC where micro services communicated through the API Java Developer Barclays Pune Maharashtra January 2013 to January 2015 Responsibilities Responsible for coding with the use of ObjectOriented Principles and implementing MVC with JSP Struts Used Spring Framework extensively in all layers of the application including UI backend and integration Daos were implemented using IBATIS Hibernate Developed Web Services using SOAP REST Apache CXF while integrating with the license server to validate the licenses Developed the Spring AOP programming to configure logging for the application and Implemented application level persistence using Hibernate and Spring Implemented the front end using JSP HTML XML CSS ExtJS React JS Bootstrap JavaScript and used AJAX for dynamic web content Wrote the frontend look and appearance for the screens using Java Core Java NO SQL AWS Bootstrap ExtJS JavaScript AJAX and jQuery and Developed web pages with JSP JSF jQuery AJAX java scripts Developed code using Core Java to implement technical enhancement following Java Standards Used JPA Java Persistence API with Hibernate as Persistence provider for Object Relational mapping Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Used Apache camel for endtoend messaging Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat Jboss Fuse Data Warehouse DW data integrated from different sources in different format PDF TIFF JPEG web crawl and RDBMS data MySQL oracle SQL server etc Used XML and JSON for transferringretrieving data between different Applications and Used MongoDB database high availability concepts with data replication for the failover design Also wrote complex PLSQL queries using Joins Stored Procedures Functions Triggers Cursors and Indexes in Data Access Layer Participated in developing web pages using JSP JavaScript and Google Web Toolkit DWR Ajax Framework for better user interface experience Worked as backend developer of this app using Nodejs Socket io and mongo dBMQ Implemented the project using JAXWS based Web Services using WSDL UDDI and SOAP to communicate with other systems Deployed the project into Heroku using GIT version control system and Worked on a largescale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Education Bachelors in computer science engineering in computer science engineering University of Mumbai 2013 Skills Java J2Ee J2Ee Java Hibernate Spring",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "HSBC",
        "New",
        "York",
        "NY",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "HSBC",
        "New",
        "York",
        "NY",
        "September",
        "Present",
        "Responsibilities",
        "J2EE",
        "Frameworks",
        "Struts",
        "Restful",
        "Web",
        "Services",
        "Hibernate",
        "Spring",
        "Technologies",
        "delivery",
        "pipelines",
        "Microservices",
        "functions",
        "Jenkins",
        "CICD",
        "Prepare",
        "scripts",
        "projects",
        "MavenGradle",
        "design",
        "development",
        "testing",
        "web",
        "application",
        "integration",
        "projects",
        "Object",
        "technologies",
        "Core",
        "Java",
        "Java",
        "Collection",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "J2EE",
        "JDBC",
        "Servlets",
        "JSP",
        "JSTL",
        "XML",
        "JSON",
        "JavaScript",
        "application",
        "JSF",
        "Spring",
        "framework",
        "MVC",
        "architecture",
        "JSP",
        "view",
        "frontend",
        "development",
        "GWT",
        "DHTML",
        "CSS",
        "JavaScript",
        "Java",
        "code",
        "party",
        "JSON",
        "services",
        "OAuth",
        "web",
        "application",
        "APIs",
        "data",
        "services",
        "CICD",
        "process",
        "GIT",
        "NEXUS",
        "Jenkins",
        "Job",
        "Creation",
        "Maven",
        "Build",
        "Docker",
        "image",
        "Deploy",
        "PCF",
        "environment",
        "Frontend",
        "Screens",
        "JSP",
        "Servlets",
        "HTML",
        "JavaScript",
        "HTML5",
        "CSS",
        "Java",
        "Script",
        "frontend",
        "technologies",
        "portals",
        "Zookeeper",
        "Kafka",
        "topics",
        "data",
        "NoSQL",
        "Cassandra",
        "data",
        "Microservices",
        "Implementation",
        "post",
        "login",
        "navigation",
        "system",
        "Branding",
        "experience",
        "Microservices",
        "Spring",
        "boot",
        "JavaJ2EE",
        "logic",
        "function",
        "AMQP",
        "messages",
        "Rabbit",
        "MQ",
        "Cassandra",
        "tables",
        "data",
        "repository",
        "host",
        "transactions",
        "Kafka",
        "consumers",
        "transaction",
        "data",
        "Kafka",
        "Cassandra",
        "Cassandra",
        "DBA",
        "Cassandra",
        "Experience",
        "automation",
        "testing",
        "tools",
        "SeeTest",
        "Continuous",
        "Testing",
        "Platform",
        "Calabash",
        "microservices",
        "customers",
        "information",
        "spring",
        "boot",
        "REST",
        "JavaJ2EE",
        "code",
        "changes",
        "Core",
        "Java",
        "J2EE",
        "technologies",
        "Servlets",
        "JMS",
        "EJBs",
        "Spring",
        "Eclipse",
        "Link",
        "JPA",
        "Hibernate",
        "JPA",
        "Oracle",
        "SQLs",
        "PerlUnix",
        "Scripts",
        "web",
        "services",
        "Spring",
        "MVC",
        "framework",
        "Spring",
        "boot",
        "hands",
        "experience",
        "Appium",
        "automation",
        "tool",
        "mobile",
        "applications",
        "Development",
        "delivery",
        "CICD",
        "infrastructure",
        "Agile",
        "development",
        "methodologies",
        "scale",
        "Integrated",
        "Kubernetes",
        "network",
        "storage",
        "security",
        "infrastructure",
        "container",
        "hosts",
        "Docker",
        "images",
        "Docker",
        "file",
        "Docker",
        "container",
        "snapshots",
        "images",
        "docker",
        "volumes",
        "Docker",
        "container",
        "service",
        "Databases",
        "Cassandra",
        "Java",
        "API",
        "Cassandra",
        "Cluster",
        "rest",
        "endpoint",
        "URLs",
        "service",
        "layer",
        "data",
        "backend",
        "Jason",
        "format",
        "JSP",
        "jQuery",
        "AJAX",
        "JSON",
        "presentation",
        "layer",
        "validation",
        "components",
        "navigation",
        "layer",
        "Spring",
        "MVC",
        "Written",
        "Kafka",
        "producer",
        "Java",
        "messages",
        "JMS",
        "Queues",
        "AVRO",
        "Serialization",
        "stream",
        "Kafka",
        "brokers",
        "cluster",
        "integration",
        "web",
        "hooks",
        "workflows",
        "Jenkins",
        "dev",
        "test",
        "workflow",
        "Puppet",
        "codebase",
        "XML",
        "Spring",
        "REST",
        "web",
        "services",
        "Spring",
        "REST",
        "framework",
        "MVC",
        "Architectural",
        "Pattern",
        "Struts",
        "Framework",
        "JSP",
        "Servlets",
        "EJB",
        "Form",
        "Bean",
        "Action",
        "classes",
        "response",
        "UI",
        "layer",
        "spring",
        "MVC",
        "Experience",
        "AWS",
        "lambda",
        "servers",
        "code",
        "S3",
        "SNS",
        "Restful",
        "Web",
        "services",
        "data",
        "client",
        "side",
        "REST",
        "API",
        "JS",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "Developed",
        "CICD",
        "solutions",
        "application",
        "Tomcat",
        "container",
        "Jenkins",
        "Implementing",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Apache",
        "Kafka",
        "Angular",
        "JS",
        "JBPM",
        "API",
        "calls",
        "data",
        "business",
        "logic",
        "service",
        "levels",
        "spring",
        "MVC",
        "pattern",
        "application",
        "MAVEN",
        "WebSphere",
        "application",
        "server",
        "EAR",
        "files",
        "CICD",
        "Jenkins",
        "deployment",
        "REST",
        "UI",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "deployment",
        "process",
        "TomcatWeb",
        "logic",
        "Servers",
        "bean",
        "XML",
        "files",
        "row",
        "mappers",
        "tables",
        "fields",
        "database",
        "package",
        "manager",
        "tools",
        "Bower",
        "task",
        "runner",
        "tools",
        "GruntJS",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "module",
        "spring",
        "framework",
        "SpringCore",
        "SpringContext",
        "SpringDAO",
        "SpringJDBC",
        "SpringORM",
        "SpringJMS",
        "SpringWeb",
        "Services",
        "JSP",
        "jQuery",
        "AJAX",
        "JSON",
        "presentation",
        "layer",
        "validation",
        "components",
        "navigation",
        "layer",
        "Spring",
        "MVC",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Apache",
        "Kafka",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "data",
        "Java",
        "Objects",
        "classes",
        "database",
        "CloudFormation",
        "Cloud",
        "Trail",
        "services",
        "CloudFront",
        "content",
        "delivery",
        "load",
        "balancers",
        "ELBand",
        "Route53",
        "failover",
        "latency",
        "options",
        "availability",
        "tolerance",
        "Mongo",
        "DB",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "read",
        "preferences",
        "Mongo",
        "DB",
        "replica",
        "migration",
        "Microsoft",
        "azure",
        "service",
        "AWS",
        "service",
        "project",
        "Mongo",
        "DB",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "Sr",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "September",
        "November",
        "Responsibilities",
        "testdriven",
        "development",
        "integration",
        "systems",
        "software",
        "development",
        "SCM",
        "JSPHTML",
        "form",
        "functionality",
        "user",
        "validations",
        "JavaScript",
        "Servlets",
        "controllers",
        "business",
        "logic",
        "business",
        "logic",
        "JDBC",
        "XML",
        "techniques",
        "MVC",
        "Designed",
        "JSP",
        "pages",
        "Spring",
        "MVC",
        "framework",
        "Spring",
        "MVC",
        "components",
        "Dispatch",
        "servlets",
        "configure",
        "Request",
        "mapping",
        "annotation",
        "controllers",
        "resolver",
        "components",
        "CDI",
        "lifecycle",
        "interactions",
        "components",
        "lifecycle",
        "contexts",
        "Spring",
        "DATA",
        "JPA",
        "data",
        "access",
        "layer",
        "information",
        "database",
        "programs",
        "database",
        "JDBC",
        "driver",
        "queries",
        "statements",
        "Stored",
        "Procedures",
        "data",
        "database",
        "Developed",
        "Single",
        "Page",
        "applications",
        "JS2",
        "DHTML",
        "CSS",
        "Semantic",
        "UI",
        "libraries",
        "User",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "AJAX",
        "JSON",
        "Gulp",
        "end",
        "application",
        "technologies",
        "JSP",
        "JSF",
        "Restful",
        "Face",
        "lets",
        "JavaScript",
        "Developed",
        "Rest",
        "API",
        "NodeJS",
        "modules",
        "node",
        "database",
        "tables",
        "SQL",
        "Stored",
        "Procedures",
        "triggers",
        "queries",
        "MySQL",
        "Web",
        "service",
        "customer",
        "data",
        "systems",
        "Web",
        "Services",
        "web",
        "application",
        "services",
        "applications",
        "Node",
        "JS",
        "nonblocking",
        "design",
        "operation",
        "serverside",
        "code",
        "Angularjs",
        "framework",
        "UI",
        "components",
        "Development",
        "Spring",
        "Java",
        "Backend",
        "Hibernate",
        "SQL",
        "Junit",
        "Agile",
        "Methodologies",
        "SVN",
        "Maven",
        "version",
        "control",
        "Wrote",
        "Apache",
        "ANT",
        "scripts",
        "application",
        "unit",
        "test",
        "cases",
        "JUnit",
        "unit",
        "Web",
        "Services",
        "JAXWS",
        "Axis",
        "rate",
        "summary",
        "WSDL",
        "messages",
        "data",
        "module",
        "SAX",
        "XML",
        "parsers",
        "data",
        "retrieval",
        "Createdmanaged",
        "Mongo",
        "DB",
        "collections",
        "Serverside",
        "automation",
        "Nodejs",
        "types",
        "SQL",
        "stores",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "AWS",
        "beanstalk",
        "spring",
        "frame",
        "work",
        "Spring",
        "AOP",
        "features",
        "JDBC",
        "module",
        "features",
        "data",
        "database",
        "applications",
        "utilities",
        "application",
        "frontend",
        "web",
        "pages",
        "JSP",
        "JavaScript",
        "HTML",
        "Developed",
        "EJB",
        "components",
        "business",
        "logic",
        "tools",
        "GIT",
        "JIRA",
        "version",
        "control",
        "bug",
        "tracking",
        "DevOps",
        "team",
        "CICD",
        "pipeline",
        "Jenkins",
        "Ansible",
        "AWS",
        "Maven",
        "GIT",
        "Rest",
        "API",
        "Application",
        "AWS",
        "Cloud",
        "Mockito",
        "methods",
        "unit",
        "User",
        "Docker",
        "container",
        "technology",
        "Spring",
        "Boot",
        "REST",
        "API",
        "application",
        "POC",
        "micro",
        "services",
        "API",
        "Java",
        "Developer",
        "Barclays",
        "Pune",
        "Maharashtra",
        "January",
        "January",
        "Responsibilities",
        "use",
        "ObjectOriented",
        "Principles",
        "MVC",
        "JSP",
        "Struts",
        "Spring",
        "Framework",
        "layers",
        "application",
        "UI",
        "backend",
        "integration",
        "Daos",
        "IBATIS",
        "Hibernate",
        "Developed",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Apache",
        "CXF",
        "license",
        "server",
        "licenses",
        "Spring",
        "AOP",
        "programming",
        "configure",
        "application",
        "application",
        "level",
        "persistence",
        "Hibernate",
        "Spring",
        "end",
        "JSP",
        "HTML",
        "XML",
        "CSS",
        "ExtJS",
        "React",
        "JS",
        "Bootstrap",
        "JavaScript",
        "AJAX",
        "web",
        "content",
        "frontend",
        "appearance",
        "screens",
        "Java",
        "Core",
        "Java",
        "SQL",
        "AWS",
        "Bootstrap",
        "ExtJS",
        "JavaScript",
        "AJAX",
        "jQuery",
        "Developed",
        "web",
        "pages",
        "JSP",
        "JSF",
        "jQuery",
        "AJAX",
        "code",
        "Core",
        "Java",
        "enhancement",
        "Java",
        "Standards",
        "JPA",
        "Java",
        "Persistence",
        "API",
        "Hibernate",
        "Persistence",
        "provider",
        "Object",
        "Relational",
        "mapping",
        "Swing",
        "Spring",
        "J2EE",
        "MVC",
        "ModelViewController",
        "framework",
        "application",
        "Apache",
        "camel",
        "endtoend",
        "Worked",
        "configuration",
        "APACHE",
        "CAMEL",
        "routes",
        "applications",
        "Red",
        "Hat",
        "Jboss",
        "Fuse",
        "Data",
        "Warehouse",
        "DW",
        "data",
        "sources",
        "format",
        "PDF",
        "TIFF",
        "JPEG",
        "web",
        "crawl",
        "RDBMS",
        "data",
        "MySQL",
        "oracle",
        "SQL",
        "server",
        "XML",
        "JSON",
        "data",
        "Applications",
        "MongoDB",
        "database",
        "availability",
        "concepts",
        "data",
        "replication",
        "design",
        "PLSQL",
        "queries",
        "Joins",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Cursors",
        "Indexes",
        "Data",
        "Access",
        "Layer",
        "web",
        "pages",
        "JSP",
        "JavaScript",
        "Google",
        "Web",
        "Toolkit",
        "DWR",
        "Ajax",
        "Framework",
        "user",
        "interface",
        "experience",
        "developer",
        "app",
        "Nodejs",
        "Socket",
        "io",
        "mongo",
        "dBMQ",
        "project",
        "JAXWS",
        "Web",
        "Services",
        "WSDL",
        "UDDI",
        "SOAP",
        "systems",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "largescale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Education",
        "Bachelors",
        "computer",
        "science",
        "engineering",
        "computer",
        "science",
        "engineering",
        "University",
        "Mumbai",
        "Skills",
        "Java",
        "J2Ee",
        "Java",
        "Hibernate",
        "Spring"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:17:44.284516",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer HSBC New York NY Authorized to work in the US for any employer Work Experience Sr Java Developer HSBC New York NY September 2017 to Present Responsibilities Efficient in using J2EE Frameworks like Struts Restful Web Services Hibernate Spring Technologies Configured the continuous delivery pipelines for deploying Microservices and lambda functions using Jenkins CICD serve Prepare build scripts for projects using MavenGradle Involved in design development and testing of web application and integration projects using Object Oriented technologies such as Core Java Java Collection Framework Spring MVC Spring Boot J2EE JDBC Servlets JSP JSTL XML JSON JavaScript Developed the application using JSF Spring framework that used MVC architecture with JSP as the view Assisted in frontend development with GWT DHTML CSS JavaScript and wrote Java code to interact with third party JSON services Implemented OAuth for authenticationbased web application and accessed their APIs for fetching data services Involved in CICD process using GIT NEXUS Jenkins Job Creation Maven Build create Docker image and Deploy in PCF environment Designed the Frontend Screens using JSP Servlets HTML and JavaScript We are using AngularJS HTML5 CSS and Java Script as frontend technologies to develop the portals Worked with Zookeeper Kafka and created topics and stored the data in to NoSQL Cassandra for storing Big data using Microservices Implementation of new post login navigation system and new Branding experience using Microservices Spring boot JavaJ2EE and JSON logic Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously Designed and created Cassandra tables as data repository to host transactions and implemented Kafka consumers move transaction data from Kafka to Cassandra Worked closely with Cassandra DBA to configure and deploy Cassandra has Experience on automation testing tools like SeeTest Continuous Testing Platform Calabash Developed microservices which renders the authenticated customers rewards information using spring boot REST JavaJ2EE Developed code changes using Core Java J2EE technologies such as Servlets JMS EJBs Spring Eclipse Link JPA Hibernate JPA Oracle SQLs PerlUnix Scripts Built Restful web services securely using Spring MVC framework and Spring boot hands on experience on Appium automation tool for testing mobile applications Development of a Continuous integrationContinuous delivery CICD infrastructure using Agile development methodologies for large scale JAVA Integrated Kubernetes with network storage and security to provide comprehensive infrastructure and orchestrated container across multiple hosts Created Docker images using a Docker file Worked on Docker container snapshots removing images and managing docker volumes and experienced with Docker container service Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Used rest endpoint URLs in the service layer to get the data from the backend in Jason format Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Written the Kafka producer in Java to consume the messages from JMS Queues and used the AVRO Serialization to send the stream into Kafka brokers for partitioning and distributing in cluster Implemented continuous integration web hooks and workflows around Jenkins to automate the dev test deploy workflow around Puppet codebase Designed and developed XML configurationbased Spring REST web services using Spring REST framework Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Providing JSON response to UI layer through spring MVC Experience in implementing AWS lambda to run servers without managing them and to trigger run code by S3 and SNS Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed CICD solutions for running an AngularJS application from a Tomcat container using Jenkins Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Used Angular JS and JBPM for making restful API calls and data binding Implementing business logic in service levels of the spring MVC pattern Built the application using MAVEN and WebSphere application server 85 for deploying EAR files Created CICD Jenkins for deployment Used REST and SOAP UI for testing web service for serverside changes Involved in deployment process of TomcatWeb logic Servers Created bean XML files and row mappers to map tables and fields in the database Worked on package manager tools such as Bower and task runner tools such as GruntJS Worked on creating the Docker containers and Docker consoles for managing the application life cycle Extensively worked on every module of spring framework which includes SpringCore SpringContext SpringDAO SpringJDBC SpringORM SpringJMS SpringWeb Services and SpringAO Used JSP jQuery AJAX and JSON in implementing presentation layer validation components and navigation to controller layer using Spring MVC Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC and Apache Kafka Using Java Persistence API JPA for accessing persisting and managing data between Java Objects classes and a relational database CloudFormation Cloud Trail services and CloudFront to setup and manage cached content delivery Created Elastic load balancers ELBand used Route53 with failover and latency options for high availability and fault tolerance Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Worked on migration Microsoft azure service to AWS service for a project Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Sr Java Developer Amazon Seattle WA September 2015 to November 2016 Responsibilities Worked on testdriven development continuous integration systems and Agile software development Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Designed and developed JSP pages using Spring MVC framework and created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Used CDI to bind the lifecycle and interactions of stateful components to welldefined but extensible lifecycle contexts Extensively used Spring DATA JPA in data access layer to access and update information in the database Developed programs for accessing the database using JDBC thin driver to execute queries prepared statements Stored Procedures and to manipulate the data in the database Developed Single Page applications using angular JS2 DHTML CSS Semantic UI libraries Designed and developed User Interaction screens using HTML5 CSS3 JavaScript AngularJS Bootstrap AJAX JSON and Gulp Worked on the front end of the application using technologies such as JSP JSF Restful Face lets and JavaScript Developed Rest API using NodeJS using various modules in node like express Created database tables and implemented SQL Stored Procedures triggers and complex queries in MySQL Created RESTful Web service for updating customer data from sent from external systems Involved in writing RESTful Web Services for supporting web application consuming those services on different applications Used Node JS for doing nonblocking design operation for serverside code and Angularjs framework in developing various UI components Involved in Development using Spring Java Backend Hibernate Also SQL and Junit following Agile Methodologies Used SVN and Maven for version control Wrote Apache ANT build scripts for building the application and unit test cases using JUnit for performing the unit testing Used Web Services JAXWS using Axis 20 for creating rate summary and used WSDL and SOAP messages for getting data from different module and used SAX XML parsers for data retrieval Createdmanaged Mongo DB collections Developed Serverside automation using Nodejs scripting and connecting different types of SQL stores Worked on Amazon Web Services AWS infrastructure with automation and configuration management in AWS beanstalk Used spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications Developed serverside common utilities for the application and the frontend dynamic web pages using JSP JavaScript and HTML Developed EJB components encapsulating business logic Worked on tools like GIT and JIRA for version control and bug tracking Worked closely with DevOps team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT and deployed Rest API Application in AWS Cloud Used Mockito to test individual methods for unit testing User Docker as the container technology with Spring Boot REST API and worked on creating this application for POC where micro services communicated through the API Java Developer Barclays Pune Maharashtra January 2013 to January 2015 Responsibilities Responsible for coding with the use of ObjectOriented Principles and implementing MVC with JSP Struts Used Spring Framework extensively in all layers of the application including UI backend and integration Daos were implemented using IBATIS Hibernate Developed Web Services using SOAP REST Apache CXF while integrating with the license server to validate the licenses Developed the Spring AOP programming to configure logging for the application and Implemented application level persistence using Hibernate and Spring Implemented the front end using JSP HTML XML CSS ExtJS React JS Bootstrap JavaScript and used AJAX for dynamic web content Wrote the frontend look and appearance for the screens using Java Core Java NO SQL AWS Bootstrap ExtJS JavaScript AJAX and jQuery and Developed web pages with JSP JSF jQuery AJAX java scripts Developed code using Core Java to implement technical enhancement following Java Standards Used JPA Java Persistence API with Hibernate as Persistence provider for Object Relational mapping Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Used Apache camel for endtoend messaging Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat Jboss Fuse Data Warehouse DW data integrated from different sources in different format PDF TIFF JPEG web crawl and RDBMS data MySQL oracle SQL server etc Used XML and JSON for transferringretrieving data between different Applications and Used MongoDB database high availability concepts with data replication for the failover design Also wrote complex PLSQL queries using Joins Stored Procedures Functions Triggers Cursors and Indexes in Data Access Layer Participated in developing web pages using JSP JavaScript and Google Web Toolkit DWR Ajax Framework for better user interface experience Worked as backend developer of this app using Nodejs Socket io and mongo dBMQ Implemented the project using JAXWS based Web Services using WSDL UDDI and SOAP to communicate with other systems Deployed the project into Heroku using GIT version control system and Worked on a largescale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Education Bachelors in computer science engineering in computer science engineering University of Mumbai 2013 Skills Java J2Ee J2Ee Java Hibernate Spring",
    "unique_id": "60a18e79-c7a3-47a8-a12e-cd6a72b89aff"
}