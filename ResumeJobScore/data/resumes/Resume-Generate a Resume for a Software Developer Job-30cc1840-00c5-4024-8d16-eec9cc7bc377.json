{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer University of California SFO CA California City CA Over 9 Years of experience in analysis design and development of Java Applications in a highly dynamic and challenging environment 2 plus years of experience in using AWS EC2S3Route 53Elastic Beanstalk Elastic search Cloud Watch AWS Mobile Hub Amazon messaging  and SNS Lambda and Amazon Kinesis Services 1 year of experience with Openstack cloud 3 Years of experience in Python Programming for development and code deployment across many platforms 3 years of experience with Apache Spark Scala BigData Good experience in developing dynamic websites using the MEAN stack Experience on working with CSS background CSS layouts CSS positioning and CSS behaviors 3 years of experience working on drools engine drools expert and drools fusion Over 6 years of experience using AngularJS Nodejs 4 Years of experience using ReactJS and working with React Flux Architecture Handson experience in Angular5 Angular4 1 Year experience with Splunk Enterprise and Splunk SDK for Java Over 4 years of experience using Microservices using Sringboot and Jersey Frameworks Over 3 years of experience in search APIs Solr Used Scala sbt to develop Scala coded spark projects 3 plus years experience managing UNIXLinux environment 3 years experience in UNIX shell Perl or similar scripting languages Handson 2 years of experience in Lucene Strong experience on work with the Apigee API management platform Experience in API Gateways like Amazon API Oracle API Gateway and Apigee API gateway Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Strong experience in Bluefish Anjuta IDEs for Linux development Expertise in GUI Design using HTML XML JQuery Java Script Polymers AngularJS Nodejs DHTML and JSP Strong Experience in using XML Suite technologies XML XSL XSLT DOM and XML Beans More than 3 years of experience using BPM tools like JBPM Oracle BPM Experienced on Agile Methodology Good experience in developing web service development Good knowledge in Concepts of Object oriented JavaScript Good knowledge in developing single page applications SPA s using the JavaScript libraries like AngularJS and MeteorJS Good understanding on using Aurelia the next generation JavaScript MVC framework and writing ECMASRIPT 6 and ECMASCRIPT 7 2 years of experience in using Mongo DB Hands on experience in using Amazon Dynamo db Hands on experience in working with both angular 1 and angular 2versions Good knowledge in using other successful data virtualization tools like Citrix Good understanding on basic switching and routing Hands on experience on using SDN and SDMN technology 1 year experience using the Yang Data modelling language 1 year experience in using Jasmine open source testing framework Participated in all phases of SDLC like Requirements Analysis Design Implementation Testing and Deployment Over 4 years of strong experience in Spring boot using various versions such as 100 155 200 Expertise in J2EE Technologys Servlets JSP JDBC EJB JNDI JSTL JSON POJO JMS JSF My Faces Prime Faces JPA JAXWS JAX_RS Excellent understanding of Object Oriented design methodology and Core Java concepts such as multi threading exception handling generics annotations Collections and IO Strong Expertise in Data structure concepts Experience in Hashing Search and Sort algorithms Expertise in open source frameworks Spring Hibernate and Struts Actively involved in Service Oriented Architecture using web services Expertise in using SOAP and RESTFUL for implementing web services Experience in Application Servers like WebSphere WebLogic and Tomcat Good experience in databases such as SQL Server Oracle DB2 NoSQL and MySQL Strong experience in using Dynamic Programming for problem solving Strong experience with rule engines like Drools ILOG Experienced in developing middleware applications using Spring IOC Spring Integration Spring WS and Spring WS Security Actively involved in using business process management tools like JBPM Activiti BPM Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Experience in build tools like Ant Maven logging with Log4j Test Driven Development using Junit Experience with Reactjs workflows Flux Redux Experience in using isomorphic react Good knowledge in implementing various Design Patterns Singleton Factory pattern Abstract Factory pattern and DAO pattern Experience in creating Unified Modeling Language UML diagrams such as Use Case Diagrams Activity Diagrams Sequence Diagrams and Class Diagrams Deployment Diagrams using Rational Rose Worked in both UnixLinux and Windows based development environments Good programming and debugging skills in Unix Shell Scripting Expertise in database modeling and development using SQL and PLSQL in Oracle 8i 9i and 10g DB2 and SQL Server environments Experience in using ANT for build automation Versatile team player with good communication analytical presentation and interpersonal skills Authorized to work in the US for any employer Work Experience Full Stack Developer University of California SFO CA Berkeley CA June 2017 to Present is committed to continuously improving the delivery of campus information technology IT projects that are within budget and on schedule to serve the members of the campus community and achieve campus strategic goals This policy is designed to help ensure that campus information technology IT projects meet these objectives by establishing a common and consistent set of project management best practices to reduce project risks and increase project successes Responsibilities Created Maven build file to build the application and deployed on Web Sphere Application Server Used JSON to transmit the data from server application layers to web application layers Worked with unit testing of javascript applications using Karma Jasmine apimocker Jest enzyme Built APIs in NodeJS within a Microservice AWS lambda architecture Used SpringBoot framework to deploy microservices for the web application Build several Unix Shell wrappers for ProC programs to schedule them on Cron Wrote Unix shell scripting for executing any task in Cron scheduler Wrote UNIX script to make sms and ftp to push those sms Scheduling the jobs in Unix Cron Providing data of Dedup on daily biases Implemented code for using Mail through Unix for report and job status Used RMON to collect information about specific groups of statistics for longterm trend analysis Responsible to lead a team of java developers for backend JS using Nodejs to handle web page requests and data transfers Used LINUX in the initial stages of web and application development Built REST full webservices using spring Deployed and developed the web application with REST using Spring Boot Use WebMvcTest for Spring Boot Unit testing for the web application Used Axios with ReactJs for making AJAX Calls Worked on Webpack for build and webpackdevserver a server Integration Testing for different layers of application code was done by SpringBootTest Research about of JBPM process engine for use in the implementation of Flow Control System Used Drools fusion to manage event submission and processing based on each activity in the workflow Used OptaPlanner for automated planning of specific usecase problems Design and manipulation of JBPM process for the client activities in order to manage the people queue for each activity Design and generation of the database for the Flow Control System of People Design and implementation of main functions of the Flow Control System of People Deployed and developed my project using AWS EC2 S3 Data pipeline Elastic Beanstalk cloud watch Elastic search AWS server migration service Lambda Amazon messaging services SQS and SNS and Amazon Kinesis services Used Apigee API management platforms for both web and mobile application from backend workloads running on Amazon EC2 code running on AWS Lambda Used the AWS mobile hub service for creating and configuring powerful mobile app backend features required for our companys new mobile app Used Angular2 and Angular4 in the initial stages of client side development then moved onto Angular5 in the later stages Used Splunk Enterprise for analyzing our Mobile and web applications Big Data pattern Performed routine monitoring of the router cycle using Angular5 Worked with Passport and JSON web tokens for authentication and authorization security configurations using Nodejs Worked with npm commands and using packagejson for managing dependencies and devdependencies of nodejs applications Used Angular5 for continuous and incremental compilations Used Nodejs and  for SPA of the web development part of the project User authentication using JWTJson web tokens Member data was stored in MongoDB and replication sets were migrated from SQL Server Used JSON for accessing data from AngularJS to Nodejs APIs Did the testing and monitoring and visualized how our mobile app built is being used Used the AWS mobile hub for quick storing and retrieval of app data in AWS Dynamo DB Used the AWS mobile SDK which helps to build high quality mobile apps quickly Used AWS data pipeline service for moving data between AWS compute and storage services and created complex data processing fault tolerant and repeatable workloads Used AWS Elastic Beanstalk service for deploying various infrastructures which orchestrates various AWS services Used Amazon Elastic search service for application monitoring and full text search Used Amazon SQS queuing service for reliable communication among distributed software components and micro services and used Amazon SNS push notification service for sending individual messages to mobile device users email recipients and to distributed users Used Amazon RedShift to handle all the analytical workloads using parallel processing Used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed single page applications using React Redux architecture ES6 web pack and grunt Developed screens for the front end using ReactJS and used various predefined components from NPM Node Package Manager Involved in creating a reusable component using React JS for DOM manipulation Worked heavily on CSS3 and LESS layout for DOM manipulation Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Used Scala for mobile application backend services using PhoneGap for the applications use over multiple platforms Implemented Event Sourcing using Akka Implemented design patterns in Scala for the application Serialize and deserialize objects using Play Json lib Used Apache Kafka for keeping the track of all the activities on the website used for some of the large scale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Used KMP algorithm technique for pattern matching Used Merge sort algorithm to differentiate between active and inactive users of the mobile app Developed search handlers by using Apache Solr which includes custom search handlers and custom functions Was responsible for masterslave replications in Solr search engine Used Solr 621 for data import using JDBC Flatfile Developed full text search handlers over crossplatform using Lucene Used BAMBOO for simultaneous integration and deployment for both web application and mobile application server Used Apache CXF for building and developing services and used frontend programming API s like JAX WS and JAXRS Using Java Messaging Service JMS for messaging configured queues and topics on the WebLogic 103 Application Server and used them for messaging Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Deployed the application on WebLogic Application Server cluster on Solaris 10 environment Implemented Persistence layer using Hibernate to interact with the Oracle database Used Hibernate Framework for object relational mapping and persistence Used Python programming and language to develop a working and efficient network within the company Utilized Python in the handling of all hits on Django Redis and other application Performed research regarding Python Programming and its uses and efficiency Converted Python code into C using Cython Used DASK to efficiently distribute python jobs across all the systems Used High Performance Analytics Toolkit HPAT to compile a subset of Python to code to parallelize it across clusters using mpirun utility Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Adopt Agile Methodology to plan using JIRA Development of UI modules using HTML JSP JavaScript AngularJS and CSS Worked on Angular 20 version for mobile app development Used ECMAScript6 ES6 for writing complex applications and modules Implemented application level persistence using Hibernate and spring Worked on the Visual Yang designer 62 version for loading existing YANG and YIN models Used JQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Analyzed changes in online transactional processing business processes and modifications to improve quality of applications and meet additional requirements through MongoDB Built a highly scalable lowlatency NodeJS API Gateway to interact with MongoDB database with JSON Worked on the Node v600 version of Node JS Used the web application framework Express for designing web applications and API s Developed Servlets and JSPs based on MVC pattern using Spring Framework Developed PLSQL procedure for login module and registration module Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Written JUNIT TDD test cases for testing Spring Framework classes and wrote many Java Scripts to do client side validations Used Jasmine testing framework for JavaScript Run the Jasmine tests by using Karma a simple JavaScript test runner tool Used Apache Hadoop framework for distributed storage and the processing of big data sets Configured Maven dependencies for application building processes that created Pomxml files Make files and the like Worked with Clear case source management Enhanced and created new Jasper Reports according to the requirements Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Worked extensively in Struts EJB 30 and JPA in other maintenance projects Involved in agile planning and Estimation Sessions of user stories and also participating in Scrum Meetings to update the status daily Environment Spring Hibernate Weblogic Rest JQuery JavaScript JSON JSP WebSphere Drools JSTL Servlets AWS SDN Oracle Mongo DB Apache PLSQL JDBC EJB UML Eclipse JUnit Maven Apache Hadoop JBPM Drools Apache CXF Amazon Elastic search Express HTML JSP JavaScript Angular 20 ECMAScript6 Nodejs v600 CSS Clear case Jasmine Jasper Report ILOG Agile SOAP Sr Java Developer Singleton Marine Atlanta GA October 2014 to June 2017 The Purpose of this project is to significantly reduce the manual process and automate the business process This is related to the membership agreements and to enable business process reengineering through the implementation of web Services The agreement creation functionality in the Existing Application replaced with the functionality of MAX When user selects a specific product the pricing will be automatically populated based on the selection This application provides more stream lined data entry than the existing system and electronic capturing of member signatures to improve the quality of agreement Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Used Jersey to deploy Microservices for JAXRS APIs Used OpenStack Swift for media and document storage and Cinder to create virtual disks of memory Used Sahara for Big data processing parallel processing using Hadoop Used OpenStack Heat to reduce duplication of files and store only the components that were necessary to run Worked with MEAN MERN stack for developing applications Worked with modules like MongoDB and mongoose for database persistence using Nodejs to interact with MongoDB Developed Python based API RESTful Web Service to track sales and perform sales analysis using Flask SQLAlchemy and PostgreSQL Performed Fulltext search using Solr search handlers on the data Did Field faceting and Query Faceting to make counts of search result data Use Apache Lucene for real time search Implemented Spark using Scala and Spark SQL for faster testing and processing of data Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Developed and designed an API RESTful Web Service for the companys website Developed and designed email marketing campaigns using HTML and CSS Implemented the service layer based on a spring container and exploited SpringsIOC features for bean management Part of the implementation which did a complete End to End automation of new Business Process using Oracle BPM Automation integration and optimization of Business Process Done the Simulation rule analysis for the Process Provided an analysis report that shows the data about the particular process instance Implemented rule services on Product and Plan details created complex and powerful rules with conditions based on business rules Used Maven for dependencies in Spring Boot and testing through various using DataJPATest Used embedded web server deployment in Spring Boot for deployment of web application Used Oracle API Gateway for serviceoriented architecture SOA and its deployment across domain boundaries and in the cloud enabling organizations Used Apigee API manager to manage all the browser based API gateway and mobile API gateway from a single domain Used Apache Tomcat in Spring Boot to communicate with the Spring MVC Controller Implemented the persistence layer using HibernateORM Worked on Spring Web Flow on Spring MVC for building flows in our web application Implemented jQuery based accordion styles and handled complete jQuery in showing Rich Internet application Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript JQuery BootStrap AJAX Angularjs Reactjs and JSON Developed JBPM workflow process rules with help of Drools engine Wrote services for business layer using core java Spring concepts Developed various UI User Interface components using Struts MVC JSP and HTML Developed application on spring 3x framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used springs dependency injection for injecting entity manager and managed beans into spring beans Working extensively with Hibernate Query Language HQL to store and retrieve the data from oracle database Developed Enterprise JavaBeans EJB 30 for implementing applications business rules and policies Developed unit testing the applications using JunitFramework and developed logging and standard mechanism based on Log4j Developed and writing unit tests on both client and JS server side using Jasmine Mocha and Chai frameworks Familiarity with Service oriented architecture SOA by developing and consuming Restful web services based on JAXRS and Jersey Coded JSP pages and used JavaScript for client side validations and to achieve other clientside event handling Designed the user interface of the application using HTML5 CSS3 Boot Strap Java Server Faces 20 JSF 20 JSP JSTL JavaScript AngularJS ReactJS Node JS and AJAX Coded in AngularJS MVC Framework to make single page app spa for specific module and complex price configurations pages Used Spring Security framework for login authentication password hashing Worked on Java Message Service JMS API for developing message oriented middleware MOM layer for handling various asynchronous requests Worked with topic for creating publishsubscribemessaging model Used D3js and Angular to construct data visualization Developed persistence layer based on JPA framework for providing POJO persistence model for objectrelational mapping Used Concurrent Version System CVS as source control tool Developed unit test cases and suits on Junit framework for unit testing Used Maven for building deploying application creating JPA based entity objects and compiling GWT application Used XML parser APIs like JAXB API within the web service for marshallingunmarshalling Used Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Developed the web applications even under pressure when time line occurs Involved in designing and development of web interface using JSP Servlets and JavaScript Tested each and every application with using validators and handled multiple modules simultaneously to achieve the application Environment Spring 31 J2EE 17 Spring JDBC Template Spring Batch AJAX XML CSS CSS 3 HTML 5 JavaScript Oracle 10g11i Maven 303 MYSQL 61 Bootstrap JUNIT Jasmin Mocha JQuery Angularjs Reactjs JUnit REST STS 351eclipse Core Java JSPs Action Components Tomcat Web Server Sr Java Developer Frontier Communications Richardson TX January 2012 to September 2014 Frontier Communications Corporation is a telephone company in the United States mainly serving rural areas and smaller communities Frontier is the sixth largest local exchange carrier and the fifth largest provider of digital subscriber line based on coverage area in the United States In addition to local and longdistance telephone service Frontier offers broadband Internet digital television service and computer technical support to residential and business customers Responsibilities Involved in complete software development life cycle management using UML Unified Modeling Language Requirements gathering Conceptual design Analysis Detailed design and Development Coding interfaces for Web Services Used Springboot for web application development with the help of Spring Initializers Application was developed using Spring MVC Web flow modules Implemented spring framework for application transaction management Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Used Spring ORM to integrate Spring Framework with hibernate and JPA Used Springs JDBC and DAO layers to offer abstraction for the business from the database related code Used Spring AOP module to handle transaction management services for objects in any Springbased application Used Spring MVC framework Integration for Server side programming Responsible to updateverify CDM for release level tasks Developed JavaScript code for Client Side Validations Involved in JAD sessions documenting system requirements creating application designs validating highlevel designs HLDs to ensure accuracy and completeness against the business requirements and programming the solutions Developed Servlets and JSP to interact with Enterprise Java Beans EJB containing all the Business Logic Used Hibernate as the persistence layer to interact with Oracle DB Environment Spring Framework 30 Hibernate Java 16 DHTML HTML CSS Servlets UML J2EEJSP EJB Struts Framework Taglibs SQL Java Script Oracle 11gWebsphere Application Server Eclipse JUnit JMock WSDL Web services XML XSLT XSD Schema Designs SOAP 12XPath XQuery UNIX UML JNDI JDBC JMS Rational Clear Quest Tortoise CVS Java Developer BHEL June 2009 to December 2011 BHEL products is due to adherence to international standards by acquiring and adapting some of the best technologies from leading companies in the world including General Electric Company Alstom SA Siemens AG and Mitsubishi Heavy Industries Ltd together with technologies developed in its own RD centers Most of its manufacturing units and other entities have been accredited to Quality Management Systems ISO 90012008 Environmental Management Systems ISO 140012004 and Occupational Health Safety Management Systems OHSAS 180012007 Responsibilities Modeled UML 2x Class Diagrams and sequence Diagrams using Rational Rose Implemented different Design patterns like DTO DAO Service Locator Pattern Singleton Pattern and MVC architectural design pattern for solving the architectural issues Involved in the design of Relational Database Schema with Entity Relationship diagrams Analysis design and development of Application based on J2EE and Design Patterns Developed Application using an enhanced framework based on Apache Struts Used JDBC for database connectivity with the application Developed some of the presentation layer interfaces JSPs and Java Beans Client side Data Validations are performed using JavaScript Used JSTL and custom tag libraries in place of script lets Extensively used XML and XSLT style sheets Implemented the application and bug fixes in production environment Created Tables and SQL Queries to insert and fetch the data from the database Developed Enterprise Java Beans Session Beans to perform middle ware services and interact with DAO layer to perform database operations like update retrieve insert and delete Involved in writing the ANT scripts for automating the process of building testing and deploying the system Monitored the error logs using Log4J and fixed the problems Developed the test cases using Junit to test Used Microsoft Visual SourceSafe VSS to check out project and maintain various versions of the project Environment J2EE Struts Servlets spring EJB AJAX HTML CSS XML Ant JavaScript Oracle 10G Eclipse 30 VSS Web Sphere 5x Log4J Education Bachelors Skills database 9 years EJB 9 years HTML 9 years java 9 years javascript 9 years Additional Information SKILL SUMMARY Platforms Windows 2000NT XPVista and Sun Solaris 2829 UNIX Programming JDK 15 16 1718 C C Server Scripting JSP1221 JSPEL JSTL Custom Tags Client Scripting JQuery 1819 JQueryUI LESS Dojo ExtJs Webpack AngularJS JavaScript CSS2 CSS3 HTML4 HTML5 Nodejs Bootstrap JS frameworks AngularJS Emberjs Vuejs ReactJS  Java Frameworks Struts 12 Struts 21 Spring MVCDI AOP JSF 11 JSF 21 GWT Vaadin Spring Boot 14 15 157 GA 200 MA Database Tools Toad for Oracle Toad for MySQL Toad for DB2 Interactive SQL Batch SQL HiveQL Toad for MSSQL ERWin Altova Database Spy MySQL Workbench Databases DB2 MSSQL Server HSQLDB PostgresSQL MySQL Middleware Network Protocols EJB 21 EJB 30 CORBA RMI JMS Active MQ SNMP ICMP Version Control Tortoise SVN Rational ClearCase Accurev GitHub CVS IDEs Eclipse 30 31 MyEclipse 41 IntelliJ Netbeans JBuilder 2007 JDeveloper Build Tools ANT 17 18 19 Maven Gradle Continuous Integration Jenkins Hudson XML Tools Altova XML Spy 2005 2008 XML Technologies XSLT JAXP JDOM SAX DOM XPATH XPOINTER XML XSD DTD Webservice Specifications JAXRPC JAXWS JAXRS Webservice Tools SoapUI 40 51 TcpMon RESTful APIs Webservice Implementations Axis 10 21 JWSDP21 Sun Metro Sun Jersey Apache XFire Apache CXF Whitebox Testing Junit 3 Junit 4 DBUnit JUnitPerf HttpUnit LoadTest TimedTest Selenium Fitnesse EasyMock PowerMock Blackbox Testing JMeter LoadUI LoadRunner HP Quality Center WinRunner Application Servers Weblogic 81 100 Websphere 61 JBoss 40 Glassfish 40 Web Servers Tomcat 50 60 71 Joans UML Tools Altova UML Model Rational Enterprise MS Visio ORM Frameworks Hibernate 30 31 41 TopLink  iBatis Defect Tracking JIRA Bugzilla Rational ClearQuest Methodologies Agile XP Scrum Rational Unified Process RUP Waterfall Kanban Reporting iReports JReports Batch Jobs Quartz Scheduler Cron Spring Batch HTML Editors MSFrontpage 2003 Adobe Dreamweaver Coffee Cup HTML Tinplating Velocity Freemarker AWS API Oracle API 11g Search APIs and API Gateway Solr Lucene Apigee API gateway",
    "entities": [
        "Implemented Spark",
        "API Gateway",
        "Frontier Communications Corporation",
        "Drools ILOG Experienced",
        "Flow Control System",
        "Spring Framework",
        "XQuery",
        "SNS",
        "Log4j Test Driven Development using Junit Experience with Reactjs",
        "Nodejs",
        "Pomxml",
        "Used Apache Hadoop",
        "UNIX",
        "BPM Extensive",
        "Struts MVC JSP",
        "Oracle Mongo DB",
        "Web Sphere Application Server Used JSON",
        "Working",
        "Serialize",
        "MyEclipse",
        "Hibernate Session Factory",
        "Sun Metro",
        "XML Beans",
        "Mobile",
        "Worked with Clear",
        "Software Configuration Management",
        "Application using ReactJS",
        "Unix Cron",
        "Converted Python",
        "Business Process",
        "Hadoop",
        "XML",
        "SOAP",
        "Locator Pattern Singleton Pattern",
        "JIRA Development of UI",
        "Atlanta",
        "Dedup",
        "Nodejs Worked",
        "WebLogic",
        "JAD",
        "NodeJS",
        "Shell",
        "Responsibilities Created",
        "Bluefish Anjuta",
        "YIN",
        "Apache Spark",
        "Design Patterns Singleton Factory",
        "Amazon",
        "UNIXLinux",
        "SpringsIOC",
        "SQL Server",
        "Integration for Server",
        "GUI Design",
        "Developed",
        "DAO",
        "JPA",
        "User Interaction",
        "Used Apache CXF",
        "Implemented Event Sourcing",
        "MQ SNMP ICMP Version Control Tortoise SVN Rational",
        "UML",
        "Responsibilities Involved",
        "Windows",
        "Used Apigee API",
        "HTML Developed",
        "Lambda Amazon",
        "Restful",
        "Amazon Kinesis",
        "Used Jersey",
        "RD",
        "Junit",
        "HTML5",
        "Splunk Enterprise and Splunk SDK",
        "Develop",
        "SOA",
        "General Electric Company Alstom SA Siemens AG",
        "Microservices for JAXRS",
        "Linux",
        "API RESTful Web Service",
        "JSP",
        "Cloud Watch AWS",
        "Application Servers",
        "Script Oracle",
        "SDLC",
        "SQL Queries",
        "JBoss Drools",
        "DOM",
        "Apigee API",
        "Spark SQL API",
        "Oracle BPM Automation",
        "UNIX Programming JDK",
        "MSSQL ERWin",
        "Developed Servlets",
        "SDN",
        "SQL Server Used JSON",
        "Development Coding",
        "STS",
        "MVC",
        "Interface",
        "UnixLinux",
        "Requirements Analysis Design Implementation Testing and Deployment",
        "Observer Data Access Objects",
        "Spark",
        "Redux",
        "EJB",
        "RMON",
        "GIT",
        "J2EE Technologys Servlets",
        "Used Hibernate Framework",
        "BHEL",
        "Mitsubishi Heavy Industries Ltd",
        "Inter",
        "JS",
        "CSS Worked",
        "API",
        "S3 Data",
        "Spring Initializers Application",
        "JSP Strong",
        "US",
        "Query Faceting",
        "HTML XML",
        "POJO",
        "Quality Management Systems ISO 90012008 Environmental Management Systems ISO 140012004",
        "JunitFramework",
        "Drools",
        "Created",
        "AWS",
        "Perl",
        "Websphere",
        "OptaPlanner",
        "API Gateways",
        "XSLT DOM",
        "Implemented Business Delegate Design Facade Service",
        "JSF",
        "React JS",
        "WebSphere WebLogic",
        "KMP",
        "MVC Framework",
        "Page Flows Business Objects Hibernate",
        "Dynamic Programming",
        "Occupational Health Safety Management Systems",
        "EJB AJAX HTML CSS XML",
        "HTML",
        "Cron",
        "California",
        "Microservices using Sringboot",
        "CSS Implemented",
        "CXF",
        "RESTFUL",
        "Hibernate Adopt Agile Methodology",
        "SQL",
        "Amazon RedShift",
        "Hashing Search",
        "Data Validations",
        "AWS Dynamo DB Used",
        "React Redux",
        "MAX",
        "Concepts of Object",
        "the Flow Control System",
        "Used Concurrent Version System CVS",
        "Maven Gradle",
        "Additional Information SKILL SUMMARY Platforms",
        "Akka Implemented",
        "JUnit Maven Apache Hadoop JBPM Drools",
        "JAXRS",
        "the United States",
        "J2EE and Design Patterns Developed Application",
        "SVN CVS",
        "Big Data",
        "Python Programming",
        "Amazon AWS",
        "AWS EC2S3Route",
        "EJB Struts Framework Taglibs",
        "the Business Logic Used Hibernate",
        "Sun Solaris",
        "the Flow Control System of People Design",
        "Utilized Python",
        "Created Tables",
        "LoadRunner HP Quality Center WinRunner Application Servers",
        "NPM Node Package",
        "Use Case Diagrams Activity Diagrams",
        "MySQL Strong",
        "SQS",
        "CSS3",
        "Hibernate Query Language",
        "API s Developed Servlets",
        "SQL Server Oracle",
        "Spring WS Security Actively",
        "JBPM Oracle BPM Experienced",
        "Maven",
        "TcpMon",
        "XSLT",
        "Aurelia",
        "GWT",
        "CORBA RMI JMS Active",
        "Model Rational Enterprise",
        "JavaScript",
        "ANT",
        "Oracle API Gateway",
        "Amazon API Oracle API Gateway",
        "JDBC Flatfile Developed",
        "BPM",
        "JSP Servlets",
        "Microsoft",
        "AJAX Coded",
        "XML Technologies",
        "Oracle DB Environment Spring Framework",
        "SNS Lambda",
        "React Flux Architecture Handson",
        "CSS",
        "UML Tools",
        "Karma Jasmine",
        "DTO DAO Service",
        "PhoneGap",
        "jQuery",
        "SDK",
        "SPA",
        "Data",
        "REST",
        "Used Business Process and Decision Management Design",
        "Class Diagrams Deployment Diagrams",
        "Python Programming for development and code deployment",
        "Handson 2 years",
        "NoSQL",
        "Developed Enterprise JavaBeans",
        "Spring Hibernate and Struts Actively",
        "Yang Data",
        "Frontier",
        "Application",
        "WebLogic Application Server",
        "UML Unified Modeling Language Requirements",
        "Amazon Kinesis Services",
        "JQuery",
        "Estimation Sessions",
        "Node",
        "JBPM"
    ],
    "experience": "Experience on working with CSS background CSS layouts CSS positioning and CSS behaviors 3 years of experience working on drools engine drools expert and drools fusion Over 6 years of experience using AngularJS Nodejs 4 Years of experience using ReactJS and working with React Flux Architecture Handson experience in Angular5 Angular4 1 Year experience with Splunk Enterprise and Splunk SDK for Java Over 4 years of experience using Microservices using Sringboot and Jersey Frameworks Over 3 years of experience in search APIs Solr Used Scala sbt to develop Scala coded spark projects 3 plus years experience managing UNIXLinux environment 3 years experience in UNIX shell Perl or similar scripting languages Handson 2 years of experience in Lucene Strong experience on work with the Apigee API management platform Experience in API Gateways like Amazon API Oracle API Gateway and Apigee API gateway Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Strong experience in Bluefish Anjuta IDEs for Linux development Expertise in GUI Design using HTML XML JQuery Java Script Polymers AngularJS Nodejs DHTML and JSP Strong Experience in using XML Suite technologies XML XSL XSLT DOM and XML Beans More than 3 years of experience using BPM tools like JBPM Oracle BPM Experienced on Agile Methodology Good experience in developing web service development Good knowledge in Concepts of Object oriented JavaScript Good knowledge in developing single page applications SPA s using the JavaScript libraries like AngularJS and MeteorJS Good understanding on using Aurelia the next generation JavaScript MVC framework and writing ECMASRIPT 6 and ECMASCRIPT 7 2 years of experience in using Mongo DB Hands on experience in using Amazon Dynamo db Hands on experience in working with both angular 1 and angular 2versions Good knowledge in using other successful data virtualization tools like Citrix Good understanding on basic switching and routing Hands on experience on using SDN and SDMN technology 1 year experience using the Yang Data modelling language 1 year experience in using Jasmine open source testing framework Participated in all phases of SDLC like Requirements Analysis Design Implementation Testing and Deployment Over 4 years of strong experience in Spring boot using various versions such as 100 155 200 Expertise in J2EE Technologys Servlets JSP JDBC EJB JNDI JSTL JSON POJO JMS JSF My Faces Prime Faces JPA JAXWS JAX_RS Excellent understanding of Object Oriented design methodology and Core Java concepts such as multi threading exception handling generics annotations Collections and IO Strong Expertise in Data structure concepts Experience in Hashing Search and Sort algorithms Expertise in open source frameworks Spring Hibernate and Struts Actively involved in Service Oriented Architecture using web services Expertise in using SOAP and RESTFUL for implementing web services Experience in Application Servers like WebSphere WebLogic and Tomcat Good experience in databases such as SQL Server Oracle DB2 NoSQL and MySQL Strong experience in using Dynamic Programming for problem solving Strong experience with rule engines like Drools ILOG Experienced in developing middleware applications using Spring IOC Spring Integration Spring WS and Spring WS Security Actively involved in using business process management tools like JBPM Activiti BPM Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Experience in build tools like Ant Maven logging with Log4j Test Driven Development using Junit Experience with Reactjs workflows Flux Redux Experience in using isomorphic react Good knowledge in implementing various Design Patterns Singleton Factory pattern Abstract Factory pattern and DAO pattern Experience in creating Unified Modeling Language UML diagrams such as Use Case Diagrams Activity Diagrams Sequence Diagrams and Class Diagrams Deployment Diagrams using Rational Rose Worked in both UnixLinux and Windows based development environments Good programming and debugging skills in Unix Shell Scripting Expertise in database modeling and development using SQL and PLSQL in Oracle 8i 9i and 10 g DB2 and SQL Server environments Experience in using ANT for build automation Versatile team player with good communication analytical presentation and interpersonal skills Authorized to work in the US for any employer Work Experience Full Stack Developer University of California SFO CA Berkeley CA June 2017 to Present is committed to continuously improving the delivery of campus information technology IT projects that are within budget and on schedule to serve the members of the campus community and achieve campus strategic goals This policy is designed to help ensure that campus information technology IT projects meet these objectives by establishing a common and consistent set of project management best practices to reduce project risks and increase project successes Responsibilities Created Maven build file to build the application and deployed on Web Sphere Application Server Used JSON to transmit the data from server application layers to web application layers Worked with unit testing of javascript applications using Karma Jasmine apimocker Jest enzyme Built APIs in NodeJS within a Microservice AWS lambda architecture Used SpringBoot framework to deploy microservices for the web application Build several Unix Shell wrappers for ProC programs to schedule them on Cron Wrote Unix shell scripting for executing any task in Cron scheduler Wrote UNIX script to make sms and ftp to push those sms Scheduling the jobs in Unix Cron Providing data of Dedup on daily biases Implemented code for using Mail through Unix for report and job status Used RMON to collect information about specific groups of statistics for longterm trend analysis Responsible to lead a team of java developers for backend JS using Nodejs to handle web page requests and data transfers Used LINUX in the initial stages of web and application development Built REST full webservices using spring Deployed and developed the web application with REST using Spring Boot Use WebMvcTest for Spring Boot Unit testing for the web application Used Axios with ReactJs for making AJAX Calls Worked on Webpack for build and webpackdevserver a server Integration Testing for different layers of application code was done by SpringBootTest Research about of JBPM process engine for use in the implementation of Flow Control System Used Drools fusion to manage event submission and processing based on each activity in the workflow Used OptaPlanner for automated planning of specific usecase problems Design and manipulation of JBPM process for the client activities in order to manage the people queue for each activity Design and generation of the database for the Flow Control System of People Design and implementation of main functions of the Flow Control System of People Deployed and developed my project using AWS EC2 S3 Data pipeline Elastic Beanstalk cloud watch Elastic search AWS server migration service Lambda Amazon messaging services SQS and SNS and Amazon Kinesis services Used Apigee API management platforms for both web and mobile application from backend workloads running on Amazon EC2 code running on AWS Lambda Used the AWS mobile hub service for creating and configuring powerful mobile app backend features required for our companys new mobile app Used Angular2 and Angular4 in the initial stages of client side development then moved onto Angular5 in the later stages Used Splunk Enterprise for analyzing our Mobile and web applications Big Data pattern Performed routine monitoring of the router cycle using Angular5 Worked with Passport and JSON web tokens for authentication and authorization security configurations using Nodejs Worked with npm commands and using packagejson for managing dependencies and devdependencies of nodejs applications Used Angular5 for continuous and incremental compilations Used Nodejs and   for SPA of the web development part of the project User authentication using JWTJson web tokens Member data was stored in MongoDB and replication sets were migrated from SQL Server Used JSON for accessing data from AngularJS to Nodejs APIs Did the testing and monitoring and visualized how our mobile app built is being used Used the AWS mobile hub for quick storing and retrieval of app data in AWS Dynamo DB Used the AWS mobile SDK which helps to build high quality mobile apps quickly Used AWS data pipeline service for moving data between AWS compute and storage services and created complex data processing fault tolerant and repeatable workloads Used AWS Elastic Beanstalk service for deploying various infrastructures which orchestrates various AWS services Used Amazon Elastic search service for application monitoring and full text search Used Amazon SQS queuing service for reliable communication among distributed software components and micro services and used Amazon SNS push notification service for sending individual messages to mobile device users email recipients and to distributed users Used Amazon RedShift to handle all the analytical workloads using parallel processing Used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed single page applications using React Redux architecture ES6 web pack and grunt Developed screens for the front end using ReactJS and used various predefined components from NPM Node Package Manager Involved in creating a reusable component using React JS for DOM manipulation Worked heavily on CSS3 and LESS layout for DOM manipulation Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Used Scala for mobile application backend services using PhoneGap for the applications use over multiple platforms Implemented Event Sourcing using Akka Implemented design patterns in Scala for the application Serialize and deserialize objects using Play Json lib Used Apache Kafka for keeping the track of all the activities on the website used for some of the large scale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Used KMP algorithm technique for pattern matching Used Merge sort algorithm to differentiate between active and inactive users of the mobile app Developed search handlers by using Apache Solr which includes custom search handlers and custom functions Was responsible for masterslave replications in Solr search engine Used Solr 621 for data import using JDBC Flatfile Developed full text search handlers over crossplatform using Lucene Used BAMBOO for simultaneous integration and deployment for both web application and mobile application server Used Apache CXF for building and developing services and used frontend programming API s like JAX WS and JAXRS Using Java Messaging Service JMS for messaging configured queues and topics on the WebLogic 103 Application Server and used them for messaging Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Deployed the application on WebLogic Application Server cluster on Solaris 10 environment Implemented Persistence layer using Hibernate to interact with the Oracle database Used Hibernate Framework for object relational mapping and persistence Used Python programming and language to develop a working and efficient network within the company Utilized Python in the handling of all hits on Django Redis and other application Performed research regarding Python Programming and its uses and efficiency Converted Python code into C using Cython Used DASK to efficiently distribute python jobs across all the systems Used High Performance Analytics Toolkit HPAT to compile a subset of Python to code to parallelize it across clusters using mpirun utility Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Adopt Agile Methodology to plan using JIRA Development of UI modules using HTML JSP JavaScript AngularJS and CSS Worked on Angular 20 version for mobile app development Used ECMAScript6 ES6 for writing complex applications and modules Implemented application level persistence using Hibernate and spring Worked on the Visual Yang designer 62 version for loading existing YANG and YIN models Used JQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Analyzed changes in online transactional processing business processes and modifications to improve quality of applications and meet additional requirements through MongoDB Built a highly scalable lowlatency NodeJS API Gateway to interact with MongoDB database with JSON Worked on the Node v600 version of Node JS Used the web application framework Express for designing web applications and API s Developed Servlets and JSPs based on MVC pattern using Spring Framework Developed PLSQL procedure for login module and registration module Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Written JUNIT TDD test cases for testing Spring Framework classes and wrote many Java Scripts to do client side validations Used Jasmine testing framework for JavaScript Run the Jasmine tests by using Karma a simple JavaScript test runner tool Used Apache Hadoop framework for distributed storage and the processing of big data sets Configured Maven dependencies for application building processes that created Pomxml files Make files and the like Worked with Clear case source management Enhanced and created new Jasper Reports according to the requirements Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Worked extensively in Struts EJB 30 and JPA in other maintenance projects Involved in agile planning and Estimation Sessions of user stories and also participating in Scrum Meetings to update the status daily Environment Spring Hibernate Weblogic Rest JQuery JavaScript JSON JSP WebSphere Drools JSTL Servlets AWS SDN Oracle Mongo DB Apache PLSQL JDBC EJB UML Eclipse JUnit Maven Apache Hadoop JBPM Drools Apache CXF Amazon Elastic search Express HTML JSP JavaScript Angular 20 ECMAScript6 Nodejs v600 CSS Clear case Jasmine Jasper Report ILOG Agile SOAP Sr Java Developer Singleton Marine Atlanta GA October 2014 to June 2017 The Purpose of this project is to significantly reduce the manual process and automate the business process This is related to the membership agreements and to enable business process reengineering through the implementation of web Services The agreement creation functionality in the Existing Application replaced with the functionality of MAX When user selects a specific product the pricing will be automatically populated based on the selection This application provides more stream lined data entry than the existing system and electronic capturing of member signatures to improve the quality of agreement Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Used Jersey to deploy Microservices for JAXRS APIs Used OpenStack Swift for media and document storage and Cinder to create virtual disks of memory Used Sahara for Big data processing parallel processing using Hadoop Used OpenStack Heat to reduce duplication of files and store only the components that were necessary to run Worked with MEAN MERN stack for developing applications Worked with modules like MongoDB and mongoose for database persistence using Nodejs to interact with MongoDB Developed Python based API RESTful Web Service to track sales and perform sales analysis using Flask SQLAlchemy and PostgreSQL Performed Fulltext search using Solr search handlers on the data Did Field faceting and Query Faceting to make counts of search result data Use Apache Lucene for real time search Implemented Spark using Scala and Spark SQL for faster testing and processing of data Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Developed and designed an API RESTful Web Service for the companys website Developed and designed email marketing campaigns using HTML and CSS Implemented the service layer based on a spring container and exploited SpringsIOC features for bean management Part of the implementation which did a complete End to End automation of new Business Process using Oracle BPM Automation integration and optimization of Business Process Done the Simulation rule analysis for the Process Provided an analysis report that shows the data about the particular process instance Implemented rule services on Product and Plan details created complex and powerful rules with conditions based on business rules Used Maven for dependencies in Spring Boot and testing through various using DataJPATest Used embedded web server deployment in Spring Boot for deployment of web application Used Oracle API Gateway for serviceoriented architecture SOA and its deployment across domain boundaries and in the cloud enabling organizations Used Apigee API manager to manage all the browser based API gateway and mobile API gateway from a single domain Used Apache Tomcat in Spring Boot to communicate with the Spring MVC Controller Implemented the persistence layer using HibernateORM Worked on Spring Web Flow on Spring MVC for building flows in our web application Implemented jQuery based accordion styles and handled complete jQuery in showing Rich Internet application Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript JQuery BootStrap AJAX Angularjs Reactjs and JSON Developed JBPM workflow process rules with help of Drools engine Wrote services for business layer using core java Spring concepts Developed various UI User Interface components using Struts MVC JSP and HTML Developed application on spring 3x framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used springs dependency injection for injecting entity manager and managed beans into spring beans Working extensively with Hibernate Query Language HQL to store and retrieve the data from oracle database Developed Enterprise JavaBeans EJB 30 for implementing applications business rules and policies Developed unit testing the applications using JunitFramework and developed logging and standard mechanism based on Log4j Developed and writing unit tests on both client and JS server side using Jasmine Mocha and Chai frameworks Familiarity with Service oriented architecture SOA by developing and consuming Restful web services based on JAXRS and Jersey Coded JSP pages and used JavaScript for client side validations and to achieve other clientside event handling Designed the user interface of the application using HTML5 CSS3 Boot Strap Java Server Faces 20 JSF 20 JSP JSTL JavaScript AngularJS ReactJS Node JS and AJAX Coded in AngularJS MVC Framework to make single page app spa for specific module and complex price configurations pages Used Spring Security framework for login authentication password hashing Worked on Java Message Service JMS API for developing message oriented middleware MOM layer for handling various asynchronous requests Worked with topic for creating publishsubscribemessaging model Used D3js and Angular to construct data visualization Developed persistence layer based on JPA framework for providing POJO persistence model for objectrelational mapping Used Concurrent Version System CVS as source control tool Developed unit test cases and suits on Junit framework for unit testing Used Maven for building deploying application creating JPA based entity objects and compiling GWT application Used XML parser APIs like JAXB API within the web service for marshallingunmarshalling Used Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Developed the web applications even under pressure when time line occurs Involved in designing and development of web interface using JSP Servlets and JavaScript Tested each and every application with using validators and handled multiple modules simultaneously to achieve the application Environment Spring 31 J2EE 17 Spring JDBC Template Spring Batch AJAX XML CSS CSS 3 HTML 5 JavaScript Oracle 10g11i Maven 303 MYSQL 61 Bootstrap JUNIT Jasmin Mocha JQuery Angularjs Reactjs JUnit REST STS 351eclipse Core Java JSPs Action Components Tomcat Web Server Sr Java Developer Frontier Communications Richardson TX January 2012 to September 2014 Frontier Communications Corporation is a telephone company in the United States mainly serving rural areas and smaller communities Frontier is the sixth largest local exchange carrier and the fifth largest provider of digital subscriber line based on coverage area in the United States In addition to local and longdistance telephone service Frontier offers broadband Internet digital television service and computer technical support to residential and business customers Responsibilities Involved in complete software development life cycle management using UML Unified Modeling Language Requirements gathering Conceptual design Analysis Detailed design and Development Coding interfaces for Web Services Used Springboot for web application development with the help of Spring Initializers Application was developed using Spring MVC Web flow modules Implemented spring framework for application transaction management Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Used Spring ORM to integrate Spring Framework with hibernate and JPA Used Springs JDBC and DAO layers to offer abstraction for the business from the database related code Used Spring AOP module to handle transaction management services for objects in any Springbased application Used Spring MVC framework Integration for Server side programming Responsible to updateverify CDM for release level tasks Developed JavaScript code for Client Side Validations Involved in JAD sessions documenting system requirements creating application designs validating highlevel designs HLDs to ensure accuracy and completeness against the business requirements and programming the solutions Developed Servlets and JSP to interact with Enterprise Java Beans EJB containing all the Business Logic Used Hibernate as the persistence layer to interact with Oracle DB Environment Spring Framework 30 Hibernate Java 16 DHTML HTML CSS Servlets UML J2EEJSP EJB Struts Framework Taglibs SQL Java Script Oracle 11gWebsphere Application Server Eclipse JUnit JMock WSDL Web services XML XSLT XSD Schema Designs SOAP 12XPath XQuery UNIX UML JNDI JDBC JMS Rational Clear Quest Tortoise CVS Java Developer BHEL June 2009 to December 2011 BHEL products is due to adherence to international standards by acquiring and adapting some of the best technologies from leading companies in the world including General Electric Company Alstom SA Siemens AG and Mitsubishi Heavy Industries Ltd together with technologies developed in its own RD centers Most of its manufacturing units and other entities have been accredited to Quality Management Systems ISO 90012008 Environmental Management Systems ISO 140012004 and Occupational Health Safety Management Systems OHSAS 180012007 Responsibilities Modeled UML 2x Class Diagrams and sequence Diagrams using Rational Rose Implemented different Design patterns like DTO DAO Service Locator Pattern Singleton Pattern and MVC architectural design pattern for solving the architectural issues Involved in the design of Relational Database Schema with Entity Relationship diagrams Analysis design and development of Application based on J2EE and Design Patterns Developed Application using an enhanced framework based on Apache Struts Used JDBC for database connectivity with the application Developed some of the presentation layer interfaces JSPs and Java Beans Client side Data Validations are performed using JavaScript Used JSTL and custom tag libraries in place of script lets Extensively used XML and XSLT style sheets Implemented the application and bug fixes in production environment Created Tables and SQL Queries to insert and fetch the data from the database Developed Enterprise Java Beans Session Beans to perform middle ware services and interact with DAO layer to perform database operations like update retrieve insert and delete Involved in writing the ANT scripts for automating the process of building testing and deploying the system Monitored the error logs using Log4J and fixed the problems Developed the test cases using Junit to test Used Microsoft Visual SourceSafe VSS to check out project and maintain various versions of the project Environment J2EE Struts Servlets spring EJB AJAX HTML CSS XML Ant JavaScript Oracle 10 G Eclipse 30 VSS Web Sphere 5x Log4J Education Bachelors Skills database 9 years EJB 9 years HTML 9 years java 9 years javascript 9 years Additional Information SKILL SUMMARY Platforms Windows 2000NT XPVista and Sun Solaris 2829 UNIX Programming JDK 15 16 1718 C C Server Scripting JSP1221 JSPEL JSTL Custom Tags Client Scripting JQuery 1819 JQueryUI LESS Dojo ExtJs Webpack AngularJS JavaScript CSS2 CSS3 HTML4 HTML5 Nodejs Bootstrap JS frameworks AngularJS Emberjs Vuejs ReactJS   Java Frameworks Struts 12 Struts 21 Spring MVCDI AOP JSF 11 JSF 21 GWT Vaadin Spring Boot 14 15 157 GA 200 MA Database Tools Toad for Oracle Toad for MySQL Toad for DB2 Interactive SQL Batch SQL HiveQL Toad for MSSQL ERWin Altova Database Spy MySQL Workbench Databases DB2 MSSQL Server HSQLDB PostgresSQL MySQL Middleware Network Protocols EJB 21 EJB 30 CORBA RMI JMS Active MQ SNMP ICMP Version Control Tortoise SVN Rational ClearCase Accurev GitHub CVS IDEs Eclipse 30 31 MyEclipse 41 IntelliJ Netbeans JBuilder 2007 JDeveloper Build Tools ANT 17 18 19 Maven Gradle Continuous Integration Jenkins Hudson XML Tools Altova XML Spy 2005 2008 XML Technologies XSLT JAXP JDOM SAX DOM XPATH XPOINTER XML XSD DTD Webservice Specifications JAXRPC JAXWS JAXRS Webservice Tools SoapUI 40 51 TcpMon RESTful APIs Webservice Implementations Axis 10 21 JWSDP21 Sun Metro Sun Jersey Apache XFire Apache CXF Whitebox Testing Junit 3 Junit 4 DBUnit JUnitPerf HttpUnit LoadTest TimedTest Selenium Fitnesse EasyMock PowerMock Blackbox Testing JMeter LoadUI LoadRunner HP Quality Center WinRunner Application Servers Weblogic 81 100 Websphere 61 JBoss 40 Glassfish 40 Web Servers Tomcat 50 60 71 Joans UML Tools Altova UML Model Rational Enterprise MS Visio ORM Frameworks Hibernate 30 31 41 TopLink   iBatis Defect Tracking JIRA Bugzilla Rational ClearQuest Methodologies Agile XP Scrum Rational Unified Process RUP Waterfall Kanban Reporting iReports JReports Batch Jobs Quartz Scheduler Cron Spring Batch HTML Editors MSFrontpage 2003 Adobe Dreamweaver Coffee Cup HTML Tinplating Velocity Freemarker AWS API Oracle API 11 g Search APIs and API Gateway Solr Lucene Apigee API gateway",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "University",
        "California",
        "SFO",
        "CA",
        "California",
        "City",
        "CA",
        "Years",
        "experience",
        "analysis",
        "design",
        "development",
        "Java",
        "Applications",
        "environment",
        "years",
        "experience",
        "AWS",
        "EC2S3Route",
        "Beanstalk",
        "search",
        "Cloud",
        "Watch",
        "AWS",
        "Mobile",
        "Hub",
        "Amazon",
        "SNS",
        "Lambda",
        "Amazon",
        "Kinesis",
        "Services",
        "year",
        "experience",
        "Openstack",
        "cloud",
        "Years",
        "experience",
        "Python",
        "Programming",
        "development",
        "code",
        "deployment",
        "platforms",
        "years",
        "experience",
        "Apache",
        "Spark",
        "Scala",
        "BigData",
        "Good",
        "experience",
        "websites",
        "MEAN",
        "Experience",
        "CSS",
        "background",
        "CSS",
        "CSS",
        "positioning",
        "CSS",
        "behaviors",
        "years",
        "experience",
        "drools",
        "engine",
        "expert",
        "fusion",
        "years",
        "experience",
        "Nodejs",
        "Years",
        "experience",
        "ReactJS",
        "React",
        "Flux",
        "Architecture",
        "Handson",
        "experience",
        "Angular5",
        "Angular4",
        "Year",
        "experience",
        "Splunk",
        "Enterprise",
        "Splunk",
        "SDK",
        "years",
        "experience",
        "Microservices",
        "Sringboot",
        "Jersey",
        "Frameworks",
        "years",
        "experience",
        "search",
        "APIs",
        "Solr",
        "Scala",
        "sbt",
        "Scala",
        "spark",
        "projects",
        "years",
        "experience",
        "UNIXLinux",
        "environment",
        "years",
        "experience",
        "UNIX",
        "shell",
        "Perl",
        "scripting",
        "languages",
        "Handson",
        "years",
        "experience",
        "Lucene",
        "Strong",
        "experience",
        "work",
        "Apigee",
        "API",
        "management",
        "platform",
        "Experience",
        "API",
        "Gateways",
        "Amazon",
        "API",
        "Oracle",
        "API",
        "Gateway",
        "Apigee",
        "API",
        "gateway",
        "experience",
        "Software",
        "Configuration",
        "Management",
        "Version",
        "Control",
        "Software",
        "SVN",
        "CVS",
        "GIT",
        "Strong",
        "experience",
        "Bluefish",
        "Anjuta",
        "IDEs",
        "Linux",
        "development",
        "Expertise",
        "GUI",
        "Design",
        "HTML",
        "XML",
        "JQuery",
        "Java",
        "Script",
        "Polymers",
        "Nodejs",
        "DHTML",
        "JSP",
        "Strong",
        "Experience",
        "XML",
        "Suite",
        "technologies",
        "XML",
        "XSL",
        "XSLT",
        "DOM",
        "XML",
        "Beans",
        "years",
        "experience",
        "BPM",
        "tools",
        "JBPM",
        "Oracle",
        "BPM",
        "Agile",
        "Methodology",
        "Good",
        "experience",
        "web",
        "service",
        "development",
        "knowledge",
        "Concepts",
        "Object",
        "JavaScript",
        "knowledge",
        "page",
        "applications",
        "SPA",
        "JavaScript",
        "MeteorJS",
        "understanding",
        "Aurelia",
        "generation",
        "JavaScript",
        "MVC",
        "framework",
        "ECMASRIPT",
        "ECMASCRIPT",
        "years",
        "experience",
        "Mongo",
        "DB",
        "Hands",
        "experience",
        "Amazon",
        "Dynamo",
        "Hands",
        "experience",
        "knowledge",
        "data",
        "virtualization",
        "tools",
        "understanding",
        "switching",
        "Hands",
        "experience",
        "SDN",
        "technology",
        "year",
        "experience",
        "Yang",
        "Data",
        "language",
        "year",
        "experience",
        "Jasmine",
        "source",
        "testing",
        "framework",
        "phases",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Deployment",
        "Over",
        "years",
        "experience",
        "Spring",
        "boot",
        "versions",
        "Expertise",
        "J2EE",
        "Technologys",
        "Servlets",
        "JSP",
        "JDBC",
        "EJB",
        "JNDI",
        "JSTL",
        "JSON",
        "POJO",
        "JMS",
        "JSF",
        "Faces",
        "Prime",
        "Faces",
        "JPA",
        "JAXWS",
        "JAX_RS",
        "Excellent",
        "understanding",
        "Object",
        "design",
        "methodology",
        "Core",
        "Java",
        "concepts",
        "multi",
        "exception",
        "generics",
        "annotations",
        "Collections",
        "IO",
        "Strong",
        "Expertise",
        "Data",
        "structure",
        "concepts",
        "Experience",
        "Hashing",
        "Search",
        "Sort",
        "Expertise",
        "source",
        "frameworks",
        "Spring",
        "Hibernate",
        "Struts",
        "Service",
        "Oriented",
        "Architecture",
        "web",
        "services",
        "Expertise",
        "SOAP",
        "RESTFUL",
        "web",
        "services",
        "Experience",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Good",
        "experience",
        "databases",
        "SQL",
        "Server",
        "Oracle",
        "DB2",
        "NoSQL",
        "MySQL",
        "Strong",
        "experience",
        "Programming",
        "problem",
        "experience",
        "rule",
        "engines",
        "Drools",
        "middleware",
        "applications",
        "Spring",
        "IOC",
        "Spring",
        "Integration",
        "Spring",
        "WS",
        "Spring",
        "WS",
        "Security",
        "business",
        "process",
        "management",
        "tools",
        "JBPM",
        "Activiti",
        "BPM",
        "experience",
        "Software",
        "Configuration",
        "Management",
        "Version",
        "Control",
        "Software",
        "SVN",
        "CVS",
        "GIT",
        "Experience",
        "build",
        "tools",
        "Ant",
        "Maven",
        "Log4j",
        "Test",
        "Driven",
        "Development",
        "Junit",
        "Experience",
        "Reactjs",
        "workflows",
        "Flux",
        "Redux",
        "Experience",
        "react",
        "knowledge",
        "Design",
        "Patterns",
        "Singleton",
        "Factory",
        "pattern",
        "Abstract",
        "Factory",
        "pattern",
        "DAO",
        "pattern",
        "Experience",
        "Unified",
        "Modeling",
        "Language",
        "UML",
        "diagrams",
        "Use",
        "Case",
        "Diagrams",
        "Activity",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Class",
        "Diagrams",
        "Deployment",
        "Diagrams",
        "Rational",
        "Rose",
        "UnixLinux",
        "Windows",
        "development",
        "programming",
        "debugging",
        "skills",
        "Unix",
        "Shell",
        "Scripting",
        "Expertise",
        "database",
        "modeling",
        "development",
        "SQL",
        "PLSQL",
        "Oracle",
        "9i",
        "g",
        "DB2",
        "SQL",
        "Server",
        "Experience",
        "ANT",
        "build",
        "automation",
        "Versatile",
        "team",
        "player",
        "communication",
        "presentation",
        "skills",
        "US",
        "employer",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "University",
        "California",
        "SFO",
        "CA",
        "Berkeley",
        "CA",
        "June",
        "Present",
        "delivery",
        "campus",
        "information",
        "technology",
        "IT",
        "budget",
        "schedule",
        "members",
        "campus",
        "community",
        "campus",
        "goals",
        "policy",
        "campus",
        "information",
        "technology",
        "IT",
        "projects",
        "objectives",
        "set",
        "project",
        "management",
        "practices",
        "project",
        "risks",
        "project",
        "successes",
        "Responsibilities",
        "Maven",
        "file",
        "application",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "JSON",
        "data",
        "server",
        "application",
        "layers",
        "web",
        "application",
        "layers",
        "unit",
        "testing",
        "javascript",
        "applications",
        "Karma",
        "Jasmine",
        "apimocker",
        "Jest",
        "APIs",
        "NodeJS",
        "Microservice",
        "AWS",
        "lambda",
        "architecture",
        "SpringBoot",
        "framework",
        "microservices",
        "web",
        "application",
        "Build",
        "Unix",
        "Shell",
        "wrappers",
        "ProC",
        "programs",
        "Cron",
        "Wrote",
        "Unix",
        "shell",
        "scripting",
        "task",
        "Cron",
        "scheduler",
        "Wrote",
        "UNIX",
        "script",
        "sms",
        "ftp",
        "sms",
        "jobs",
        "Unix",
        "Cron",
        "Providing",
        "data",
        "Dedup",
        "biases",
        "code",
        "Mail",
        "Unix",
        "report",
        "job",
        "status",
        "RMON",
        "information",
        "groups",
        "statistics",
        "trend",
        "analysis",
        "team",
        "developers",
        "JS",
        "Nodejs",
        "web",
        "page",
        "requests",
        "data",
        "transfers",
        "LINUX",
        "stages",
        "web",
        "application",
        "development",
        "REST",
        "webservices",
        "spring",
        "Deployed",
        "web",
        "application",
        "REST",
        "Spring",
        "Boot",
        "Use",
        "Spring",
        "Boot",
        "Unit",
        "testing",
        "web",
        "application",
        "Axios",
        "ReactJs",
        "AJAX",
        "Calls",
        "Webpack",
        "build",
        "server",
        "Integration",
        "Testing",
        "layers",
        "application",
        "code",
        "Research",
        "JBPM",
        "process",
        "engine",
        "use",
        "implementation",
        "Flow",
        "Control",
        "System",
        "Drools",
        "fusion",
        "event",
        "submission",
        "processing",
        "activity",
        "workflow",
        "OptaPlanner",
        "planning",
        "usecase",
        "problems",
        "Design",
        "manipulation",
        "JBPM",
        "process",
        "client",
        "activities",
        "order",
        "people",
        "queue",
        "activity",
        "Design",
        "generation",
        "database",
        "Flow",
        "Control",
        "System",
        "People",
        "Design",
        "implementation",
        "functions",
        "Flow",
        "Control",
        "System",
        "People",
        "project",
        "AWS",
        "EC2",
        "S3",
        "Data",
        "pipeline",
        "Elastic",
        "Beanstalk",
        "cloud",
        "search",
        "AWS",
        "server",
        "migration",
        "service",
        "Lambda",
        "Amazon",
        "services",
        "SQS",
        "SNS",
        "Amazon",
        "Kinesis",
        "services",
        "Apigee",
        "API",
        "management",
        "platforms",
        "web",
        "application",
        "workloads",
        "Amazon",
        "EC2",
        "code",
        "AWS",
        "Lambda",
        "AWS",
        "hub",
        "service",
        "app",
        "backend",
        "features",
        "companys",
        "app",
        "Angular2",
        "Angular4",
        "stages",
        "client",
        "side",
        "development",
        "Angular5",
        "stages",
        "Splunk",
        "Enterprise",
        "Mobile",
        "web",
        "applications",
        "Big",
        "Data",
        "pattern",
        "monitoring",
        "router",
        "cycle",
        "Angular5",
        "Passport",
        "JSON",
        "web",
        "tokens",
        "authentication",
        "authorization",
        "security",
        "configurations",
        "Nodejs",
        "npm",
        "commands",
        "packagejson",
        "dependencies",
        "devdependencies",
        "applications",
        "Angular5",
        "compilations",
        "Nodejs",
        "SPA",
        "web",
        "development",
        "part",
        "project",
        "User",
        "authentication",
        "JWTJson",
        "web",
        "tokens",
        "Member",
        "data",
        "MongoDB",
        "replication",
        "sets",
        "SQL",
        "Server",
        "JSON",
        "data",
        "Nodejs",
        "APIs",
        "testing",
        "monitoring",
        "app",
        "AWS",
        "hub",
        "storing",
        "retrieval",
        "app",
        "data",
        "AWS",
        "Dynamo",
        "DB",
        "AWS",
        "SDK",
        "quality",
        "apps",
        "AWS",
        "data",
        "pipeline",
        "service",
        "data",
        "AWS",
        "compute",
        "storage",
        "services",
        "data",
        "processing",
        "fault",
        "workloads",
        "AWS",
        "Beanstalk",
        "service",
        "infrastructures",
        "AWS",
        "services",
        "Amazon",
        "search",
        "service",
        "application",
        "monitoring",
        "text",
        "search",
        "Amazon",
        "SQS",
        "service",
        "communication",
        "software",
        "components",
        "micro",
        "services",
        "Amazon",
        "SNS",
        "notification",
        "service",
        "messages",
        "device",
        "users",
        "email",
        "recipients",
        "users",
        "Amazon",
        "RedShift",
        "workloads",
        "processing",
        "GWT",
        "Amazon",
        "AWS",
        "evaluation",
        "page",
        "applications",
        "React",
        "Redux",
        "architecture",
        "ES6",
        "web",
        "pack",
        "screens",
        "end",
        "ReactJS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "component",
        "React",
        "JS",
        "DOM",
        "manipulation",
        "CSS3",
        "layout",
        "DOM",
        "manipulation",
        "Application",
        "ReactJS",
        "Nodejs",
        "NPM",
        "gulp",
        "directories",
        "view",
        "flux",
        "URLs",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "Redux",
        "libraries",
        "Scala",
        "application",
        "backend",
        "services",
        "PhoneGap",
        "applications",
        "use",
        "platforms",
        "Event",
        "Sourcing",
        "Akka",
        "design",
        "patterns",
        "Scala",
        "application",
        "deserialize",
        "objects",
        "Play",
        "Json",
        "lib",
        "Apache",
        "Kafka",
        "track",
        "activities",
        "website",
        "scale",
        "message",
        "processing",
        "applications",
        "Inter",
        "process",
        "storage",
        "messages",
        "messages",
        "term",
        "memory",
        "storages",
        "KMP",
        "algorithm",
        "technique",
        "pattern",
        "Merge",
        "sort",
        "algorithm",
        "users",
        "app",
        "search",
        "handlers",
        "Apache",
        "Solr",
        "custom",
        "search",
        "handlers",
        "custom",
        "functions",
        "masterslave",
        "replications",
        "Solr",
        "search",
        "engine",
        "Solr",
        "data",
        "import",
        "JDBC",
        "Flatfile",
        "text",
        "search",
        "handlers",
        "crossplatform",
        "Lucene",
        "Used",
        "BAMBOO",
        "integration",
        "deployment",
        "web",
        "application",
        "application",
        "server",
        "Apache",
        "CXF",
        "services",
        "frontend",
        "programming",
        "API",
        "JAX",
        "WS",
        "JAXRS",
        "Java",
        "Messaging",
        "Service",
        "JMS",
        "queues",
        "topics",
        "WebLogic",
        "Application",
        "Server",
        "Developed",
        "Oracle",
        "PLSQL",
        "Stored",
        "Procedures",
        "Queries",
        "Payment",
        "release",
        "process",
        "authorization",
        "process",
        "Developed",
        "Servlets",
        "JSPs",
        "MVC",
        "pattern",
        "Struts",
        "framework",
        "Spring",
        "Framework",
        "application",
        "WebLogic",
        "Application",
        "Server",
        "cluster",
        "Solaris",
        "environment",
        "Persistence",
        "layer",
        "Hibernate",
        "Oracle",
        "database",
        "Hibernate",
        "Framework",
        "mapping",
        "persistence",
        "Python",
        "programming",
        "language",
        "network",
        "company",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "application",
        "research",
        "Python",
        "Programming",
        "uses",
        "efficiency",
        "Converted",
        "Python",
        "code",
        "C",
        "Cython",
        "DASK",
        "python",
        "jobs",
        "systems",
        "Performance",
        "Analytics",
        "Toolkit",
        "HPAT",
        "subset",
        "Python",
        "clusters",
        "mpirun",
        "utility",
        "Enterprise",
        "Eligibility",
        "business",
        "objects",
        "domain",
        "objects",
        "Object",
        "Relational",
        "Mapping",
        "framework",
        "Hibernate",
        "Adopt",
        "Agile",
        "Methodology",
        "JIRA",
        "Development",
        "UI",
        "modules",
        "HTML",
        "JSP",
        "JavaScript",
        "AngularJS",
        "CSS",
        "Worked",
        "Angular",
        "version",
        "app",
        "development",
        "Used",
        "ECMAScript6",
        "ES6",
        "applications",
        "modules",
        "application",
        "level",
        "persistence",
        "Hibernate",
        "spring",
        "Visual",
        "Yang",
        "designer",
        "version",
        "YANG",
        "YIN",
        "models",
        "JQuery",
        "frontend",
        "components",
        "JavaScript",
        "functions",
        "dynamism",
        "web",
        "pages",
        "client",
        "side",
        "changes",
        "processing",
        "business",
        "processes",
        "modifications",
        "quality",
        "applications",
        "requirements",
        "MongoDB",
        "lowlatency",
        "NodeJS",
        "API",
        "Gateway",
        "MongoDB",
        "database",
        "JSON",
        "Node",
        "v600",
        "version",
        "Node",
        "JS",
        "web",
        "application",
        "framework",
        "Express",
        "web",
        "applications",
        "API",
        "Developed",
        "Servlets",
        "JSPs",
        "MVC",
        "pattern",
        "Spring",
        "Framework",
        "PLSQL",
        "procedure",
        "login",
        "module",
        "registration",
        "module",
        "JDBC",
        "information",
        "model",
        "tier",
        "Eclipse",
        "IDE",
        "applications",
        "JUNIT",
        "TDD",
        "test",
        "cases",
        "Spring",
        "Framework",
        "classes",
        "Java",
        "Scripts",
        "client",
        "side",
        "validations",
        "Jasmine",
        "testing",
        "framework",
        "JavaScript",
        "Run",
        "Jasmine",
        "tests",
        "Karma",
        "JavaScript",
        "test",
        "runner",
        "tool",
        "Apache",
        "Hadoop",
        "framework",
        "storage",
        "processing",
        "data",
        "sets",
        "Configured",
        "Maven",
        "dependencies",
        "application",
        "building",
        "processes",
        "Pomxml",
        "files",
        "files",
        "Clear",
        "case",
        "source",
        "management",
        "Jasper",
        "Reports",
        "requirements",
        "multiserver",
        "ILOG",
        "environment",
        "architecture",
        "client",
        "administrators",
        "Struts",
        "EJB",
        "JPA",
        "maintenance",
        "projects",
        "planning",
        "Estimation",
        "Sessions",
        "user",
        "stories",
        "Scrum",
        "Meetings",
        "status",
        "Environment",
        "Spring",
        "Hibernate",
        "Weblogic",
        "Rest",
        "JQuery",
        "JavaScript",
        "JSON",
        "JSP",
        "WebSphere",
        "Drools",
        "JSTL",
        "Servlets",
        "AWS",
        "SDN",
        "Oracle",
        "Mongo",
        "DB",
        "Apache",
        "PLSQL",
        "JDBC",
        "EJB",
        "UML",
        "Eclipse",
        "JUnit",
        "Maven",
        "Apache",
        "Hadoop",
        "JBPM",
        "Drools",
        "Apache",
        "CXF",
        "Amazon",
        "Elastic",
        "search",
        "Express",
        "HTML",
        "JSP",
        "JavaScript",
        "Angular",
        "ECMAScript6",
        "Nodejs",
        "v600",
        "CSS",
        "Clear",
        "case",
        "Jasmine",
        "Jasper",
        "Report",
        "Agile",
        "SOAP",
        "Sr",
        "Java",
        "Developer",
        "Singleton",
        "Marine",
        "Atlanta",
        "GA",
        "October",
        "June",
        "Purpose",
        "project",
        "process",
        "business",
        "process",
        "membership",
        "agreements",
        "business",
        "process",
        "implementation",
        "web",
        "Services",
        "agreement",
        "creation",
        "functionality",
        "Existing",
        "Application",
        "functionality",
        "MAX",
        "user",
        "product",
        "pricing",
        "selection",
        "application",
        "stream",
        "data",
        "entry",
        "system",
        "capturing",
        "member",
        "signatures",
        "quality",
        "agreement",
        "Responsibilities",
        "Agile",
        "Environment",
        "requirement",
        "analysis",
        "design",
        "Implemented",
        "Business",
        "Delegate",
        "Design",
        "Facade",
        "Service",
        "locator",
        "Singleton",
        "Factory",
        "method",
        "Template",
        "method",
        "Observer",
        "Data",
        "Access",
        "Transfer",
        "JEE",
        "design",
        "patterns",
        "Jersey",
        "Microservices",
        "JAXRS",
        "APIs",
        "OpenStack",
        "Swift",
        "media",
        "document",
        "storage",
        "Cinder",
        "disks",
        "memory",
        "Sahara",
        "data",
        "processing",
        "Hadoop",
        "Used",
        "OpenStack",
        "Heat",
        "duplication",
        "files",
        "components",
        "MEAN",
        "MERN",
        "stack",
        "applications",
        "modules",
        "MongoDB",
        "mongoose",
        "database",
        "persistence",
        "Nodejs",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "sales",
        "sales",
        "analysis",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "Performed",
        "Fulltext",
        "search",
        "Solr",
        "search",
        "handlers",
        "data",
        "Field",
        "faceting",
        "Query",
        "Faceting",
        "counts",
        "search",
        "result",
        "data",
        "Use",
        "Apache",
        "Lucene",
        "time",
        "search",
        "Spark",
        "Scala",
        "Spark",
        "SQL",
        "testing",
        "processing",
        "data",
        "Spark",
        "Scala",
        "Data",
        "frames",
        "Spark",
        "SQL",
        "API",
        "processing",
        "data",
        "API",
        "RESTful",
        "Web",
        "Service",
        "companys",
        "website",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "CSS",
        "service",
        "layer",
        "spring",
        "container",
        "features",
        "bean",
        "management",
        "Part",
        "implementation",
        "End",
        "End",
        "automation",
        "Business",
        "Process",
        "Oracle",
        "BPM",
        "Automation",
        "integration",
        "optimization",
        "Business",
        "Process",
        "Simulation",
        "rule",
        "analysis",
        "Process",
        "analysis",
        "report",
        "data",
        "process",
        "instance",
        "rule",
        "services",
        "Product",
        "Plan",
        "details",
        "rules",
        "conditions",
        "business",
        "rules",
        "Maven",
        "dependencies",
        "Spring",
        "Boot",
        "web",
        "server",
        "deployment",
        "Spring",
        "Boot",
        "deployment",
        "web",
        "application",
        "Oracle",
        "API",
        "Gateway",
        "architecture",
        "SOA",
        "deployment",
        "domain",
        "boundaries",
        "organizations",
        "Apigee",
        "API",
        "manager",
        "browser",
        "API",
        "gateway",
        "API",
        "gateway",
        "domain",
        "Apache",
        "Tomcat",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Controller",
        "persistence",
        "layer",
        "HibernateORM",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "MVC",
        "flows",
        "web",
        "application",
        "jQuery",
        "accordion",
        "styles",
        "jQuery",
        "Rich",
        "Internet",
        "application",
        "design",
        "User",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "BootStrap",
        "AJAX",
        "Angularjs",
        "Reactjs",
        "JSON",
        "Developed",
        "JBPM",
        "workflow",
        "process",
        "help",
        "Drools",
        "engine",
        "services",
        "business",
        "layer",
        "core",
        "Spring",
        "concepts",
        "UI",
        "User",
        "Interface",
        "components",
        "Struts",
        "MVC",
        "JSP",
        "HTML",
        "application",
        "spring",
        "framework",
        "features",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Security",
        "Spring",
        "Web",
        "flow",
        "Spring",
        "MVC",
        "springs",
        "dependency",
        "injection",
        "entity",
        "manager",
        "beans",
        "spring",
        "beans",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "data",
        "oracle",
        "database",
        "Developed",
        "Enterprise",
        "JavaBeans",
        "EJB",
        "applications",
        "business",
        "rules",
        "policies",
        "unit",
        "applications",
        "JunitFramework",
        "logging",
        "mechanism",
        "Log4j",
        "unit",
        "tests",
        "client",
        "JS",
        "server",
        "side",
        "Jasmine",
        "Mocha",
        "Chai",
        "Familiarity",
        "Service",
        "architecture",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "JSP",
        "pages",
        "JavaScript",
        "client",
        "side",
        "validations",
        "event",
        "user",
        "interface",
        "application",
        "HTML5",
        "CSS3",
        "Boot",
        "Strap",
        "Java",
        "Server",
        "JSF",
        "JSP",
        "JSTL",
        "JavaScript",
        "ReactJS",
        "Node",
        "JS",
        "AJAX",
        "MVC",
        "Framework",
        "page",
        "app",
        "spa",
        "module",
        "price",
        "configurations",
        "pages",
        "Spring",
        "Security",
        "framework",
        "login",
        "authentication",
        "password",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "message",
        "middleware",
        "MOM",
        "layer",
        "requests",
        "topic",
        "publishsubscribemessaging",
        "model",
        "D3js",
        "Angular",
        "data",
        "visualization",
        "persistence",
        "layer",
        "JPA",
        "framework",
        "POJO",
        "persistence",
        "model",
        "mapping",
        "Concurrent",
        "Version",
        "System",
        "CVS",
        "source",
        "control",
        "tool",
        "unit",
        "test",
        "cases",
        "suits",
        "Junit",
        "framework",
        "unit",
        "testing",
        "Maven",
        "application",
        "JPA",
        "entity",
        "GWT",
        "application",
        "XML",
        "parser",
        "APIs",
        "JAXB",
        "API",
        "web",
        "service",
        "Business",
        "Process",
        "Decision",
        "Management",
        "Design",
        "JBoss",
        "JBPM",
        "JBoss",
        "Drools",
        "Rules",
        "Engine",
        "web",
        "applications",
        "pressure",
        "time",
        "line",
        "designing",
        "development",
        "web",
        "interface",
        "JSP",
        "Servlets",
        "JavaScript",
        "application",
        "validators",
        "modules",
        "application",
        "Environment",
        "Spring",
        "J2EE",
        "Spring",
        "JDBC",
        "Template",
        "Spring",
        "Batch",
        "AJAX",
        "XML",
        "CSS",
        "CSS",
        "HTML",
        "JavaScript",
        "Oracle",
        "Maven",
        "MYSQL",
        "Bootstrap",
        "JUNIT",
        "Jasmin",
        "Mocha",
        "JQuery",
        "Angularjs",
        "Reactjs",
        "JUnit",
        "REST",
        "STS",
        "351eclipse",
        "Core",
        "Java",
        "JSPs",
        "Action",
        "Components",
        "Tomcat",
        "Web",
        "Server",
        "Sr",
        "Java",
        "Developer",
        "Frontier",
        "Communications",
        "Richardson",
        "TX",
        "January",
        "September",
        "Frontier",
        "Communications",
        "Corporation",
        "telephone",
        "company",
        "United",
        "States",
        "areas",
        "communities",
        "Frontier",
        "exchange",
        "carrier",
        "provider",
        "subscriber",
        "line",
        "coverage",
        "area",
        "United",
        "States",
        "addition",
        "longdistance",
        "telephone",
        "service",
        "Frontier",
        "broadband",
        "Internet",
        "television",
        "service",
        "computer",
        "support",
        "business",
        "customers",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "management",
        "UML",
        "Unified",
        "Modeling",
        "Language",
        "Requirements",
        "design",
        "Analysis",
        "Detailed",
        "design",
        "Development",
        "Coding",
        "interfaces",
        "Web",
        "Services",
        "Springboot",
        "web",
        "application",
        "development",
        "help",
        "Spring",
        "Initializers",
        "Application",
        "Spring",
        "MVC",
        "Web",
        "flow",
        "modules",
        "spring",
        "framework",
        "application",
        "transaction",
        "management",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "development",
        "Page",
        "Business",
        "Hibernate",
        "database",
        "mappings",
        "POJOs",
        "xml",
        "style",
        "syntax",
        "metadata",
        "Spring",
        "ORM",
        "Spring",
        "Framework",
        "hibernate",
        "JPA",
        "Springs",
        "JDBC",
        "DAO",
        "layers",
        "abstraction",
        "business",
        "database",
        "code",
        "Spring",
        "AOP",
        "module",
        "transaction",
        "management",
        "services",
        "objects",
        "application",
        "Spring",
        "MVC",
        "framework",
        "Integration",
        "Server",
        "side",
        "programming",
        "CDM",
        "release",
        "level",
        "tasks",
        "Developed",
        "JavaScript",
        "code",
        "Client",
        "Side",
        "Validations",
        "JAD",
        "sessions",
        "documenting",
        "system",
        "requirements",
        "application",
        "designs",
        "highlevel",
        "designs",
        "HLDs",
        "accuracy",
        "completeness",
        "business",
        "requirements",
        "solutions",
        "Developed",
        "Servlets",
        "JSP",
        "Enterprise",
        "Java",
        "Beans",
        "EJB",
        "Business",
        "Logic",
        "Hibernate",
        "persistence",
        "layer",
        "Oracle",
        "DB",
        "Environment",
        "Spring",
        "Framework",
        "Hibernate",
        "Java",
        "DHTML",
        "HTML",
        "CSS",
        "Servlets",
        "UML",
        "J2EEJSP",
        "EJB",
        "Struts",
        "Framework",
        "Taglibs",
        "SQL",
        "Java",
        "Script",
        "Oracle",
        "Application",
        "Server",
        "Eclipse",
        "JUnit",
        "JMock",
        "WSDL",
        "Web",
        "services",
        "XML",
        "XSLT",
        "XSD",
        "Schema",
        "SOAP",
        "12XPath",
        "XQuery",
        "UNIX",
        "UML",
        "JNDI",
        "JDBC",
        "JMS",
        "Rational",
        "Clear",
        "Quest",
        "Tortoise",
        "CVS",
        "Java",
        "Developer",
        "BHEL",
        "June",
        "December",
        "BHEL",
        "products",
        "adherence",
        "standards",
        "technologies",
        "companies",
        "world",
        "General",
        "Electric",
        "Company",
        "Alstom",
        "SA",
        "Siemens",
        "AG",
        "Mitsubishi",
        "Heavy",
        "Industries",
        "Ltd",
        "technologies",
        "RD",
        "centers",
        "manufacturing",
        "units",
        "entities",
        "Quality",
        "Management",
        "Systems",
        "ISO",
        "Environmental",
        "Management",
        "Systems",
        "ISO",
        "Occupational",
        "Health",
        "Safety",
        "Management",
        "Systems",
        "OHSAS",
        "Responsibilities",
        "UML",
        "Class",
        "Diagrams",
        "sequence",
        "Diagrams",
        "Rational",
        "Rose",
        "Design",
        "patterns",
        "DTO",
        "DAO",
        "Service",
        "Locator",
        "Pattern",
        "Singleton",
        "Pattern",
        "MVC",
        "design",
        "pattern",
        "issues",
        "design",
        "Relational",
        "Database",
        "Schema",
        "Entity",
        "Relationship",
        "diagrams",
        "Analysis",
        "design",
        "development",
        "Application",
        "J2EE",
        "Design",
        "Patterns",
        "Developed",
        "Application",
        "framework",
        "Apache",
        "Struts",
        "JDBC",
        "database",
        "connectivity",
        "application",
        "presentation",
        "layer",
        "JSPs",
        "Java",
        "Beans",
        "Client",
        "side",
        "Data",
        "Validations",
        "JavaScript",
        "JSTL",
        "custom",
        "tag",
        "place",
        "script",
        "lets",
        "XML",
        "XSLT",
        "style",
        "sheets",
        "application",
        "bug",
        "fixes",
        "production",
        "environment",
        "Tables",
        "SQL",
        "Queries",
        "data",
        "database",
        "Developed",
        "Enterprise",
        "Java",
        "Beans",
        "Session",
        "Beans",
        "ware",
        "services",
        "DAO",
        "layer",
        "database",
        "operations",
        "update",
        "retrieve",
        "ANT",
        "scripts",
        "process",
        "building",
        "testing",
        "system",
        "error",
        "logs",
        "Log4J",
        "problems",
        "test",
        "cases",
        "Junit",
        "Microsoft",
        "Visual",
        "SourceSafe",
        "VSS",
        "project",
        "versions",
        "project",
        "Environment",
        "J2EE",
        "Struts",
        "Servlets",
        "spring",
        "EJB",
        "AJAX",
        "HTML",
        "CSS",
        "XML",
        "Ant",
        "JavaScript",
        "Oracle",
        "G",
        "Eclipse",
        "VSS",
        "Web",
        "Sphere",
        "5x",
        "Log4J",
        "Education",
        "Bachelors",
        "Skills",
        "database",
        "years",
        "EJB",
        "years",
        "HTML",
        "years",
        "years",
        "javascript",
        "years",
        "Additional",
        "Information",
        "SKILL",
        "SUMMARY",
        "Platforms",
        "2000NT",
        "XPVista",
        "Sun",
        "Solaris",
        "UNIX",
        "Programming",
        "JDK",
        "C",
        "C",
        "Server",
        "Scripting",
        "JSP1221",
        "JSPEL",
        "JSTL",
        "Custom",
        "Tags",
        "Client",
        "Scripting",
        "JQuery",
        "JQueryUI",
        "LESS",
        "Dojo",
        "ExtJs",
        "Webpack",
        "AngularJS",
        "JavaScript",
        "CSS2",
        "CSS3",
        "HTML4",
        "HTML5",
        "Nodejs",
        "Bootstrap",
        "JS",
        "frameworks",
        "Emberjs",
        "Vuejs",
        "ReactJS",
        "Java",
        "Frameworks",
        "Struts",
        "Struts",
        "Spring",
        "MVCDI",
        "AOP",
        "JSF",
        "JSF",
        "GWT",
        "Vaadin",
        "Spring",
        "Boot",
        "GA",
        "MA",
        "Database",
        "Tools",
        "Toad",
        "Oracle",
        "Toad",
        "MySQL",
        "Toad",
        "DB2",
        "Interactive",
        "SQL",
        "Batch",
        "SQL",
        "HiveQL",
        "Toad",
        "MSSQL",
        "ERWin",
        "Altova",
        "Database",
        "Spy",
        "MySQL",
        "Workbench",
        "DB2",
        "MSSQL",
        "Server",
        "HSQLDB",
        "MySQL",
        "Middleware",
        "Network",
        "Protocols",
        "EJB",
        "EJB",
        "CORBA",
        "RMI",
        "JMS",
        "MQ",
        "SNMP",
        "ICMP",
        "Version",
        "Control",
        "Tortoise",
        "SVN",
        "Rational",
        "ClearCase",
        "Accurev",
        "GitHub",
        "CVS",
        "IDEs",
        "Eclipse",
        "MyEclipse",
        "IntelliJ",
        "Netbeans",
        "JBuilder",
        "JDeveloper",
        "Build",
        "Tools",
        "ANT",
        "Maven",
        "Gradle",
        "Continuous",
        "Integration",
        "Jenkins",
        "Hudson",
        "XML",
        "Tools",
        "Altova",
        "XML",
        "Spy",
        "XML",
        "Technologies",
        "XSLT",
        "JAXP",
        "JDOM",
        "SAX",
        "DOM",
        "XPATH",
        "XPOINTER",
        "XML",
        "XSD",
        "DTD",
        "Webservice",
        "Specifications",
        "JAXRPC",
        "JAXWS",
        "JAXRS",
        "Webservice",
        "Tools",
        "SoapUI",
        "TcpMon",
        "APIs",
        "Webservice",
        "Implementations",
        "Axis",
        "JWSDP21",
        "Sun",
        "Metro",
        "Sun",
        "Jersey",
        "Apache",
        "XFire",
        "Apache",
        "CXF",
        "Whitebox",
        "Testing",
        "Junit",
        "Junit",
        "DBUnit",
        "JUnitPerf",
        "HttpUnit",
        "LoadTest",
        "TimedTest",
        "Selenium",
        "Fitnesse",
        "EasyMock",
        "PowerMock",
        "Blackbox",
        "Testing",
        "JMeter",
        "LoadUI",
        "LoadRunner",
        "HP",
        "Quality",
        "Center",
        "WinRunner",
        "Application",
        "Servers",
        "Weblogic",
        "Websphere",
        "JBoss",
        "Web",
        "Servers",
        "Tomcat",
        "Joans",
        "UML",
        "Tools",
        "Altova",
        "UML",
        "Model",
        "Rational",
        "Enterprise",
        "MS",
        "Visio",
        "ORM",
        "Frameworks",
        "Hibernate",
        "TopLink",
        "iBatis",
        "Defect",
        "Tracking",
        "JIRA",
        "Bugzilla",
        "Rational",
        "ClearQuest",
        "Methodologies",
        "Agile",
        "XP",
        "Scrum",
        "Rational",
        "Unified",
        "Process",
        "RUP",
        "Waterfall",
        "Kanban",
        "iReports",
        "JReports",
        "Batch",
        "Jobs",
        "Quartz",
        "Scheduler",
        "Cron",
        "Spring",
        "Batch",
        "HTML",
        "Editors",
        "MSFrontpage",
        "Adobe",
        "Dreamweaver",
        "Coffee",
        "Cup",
        "HTML",
        "Velocity",
        "Freemarker",
        "AWS",
        "API",
        "Oracle",
        "API",
        "g",
        "Search",
        "APIs",
        "API",
        "Gateway",
        "Solr",
        "Lucene",
        "Apigee",
        "API",
        "gateway"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:57:40.623991",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer University of California SFO CA California City CA Over 9 Years of experience in analysis design and development of Java Applications in a highly dynamic and challenging environment 2 plus years of experience in using AWS EC2S3Route 53Elastic Beanstalk Elastic search Cloud Watch AWS Mobile Hub Amazon messaging servicesSQS and SNS Lambda and Amazon Kinesis Services 1 year of experience with Openstack cloud 3 Years of experience in Python Programming for development and code deployment across many platforms 3 years of experience with Apache Spark Scala BigData Good experience in developing dynamic websites using the MEAN stack Experience on working with CSS background CSS layouts CSS positioning and CSS behaviors 3 years of experience working on drools engine drools expert and drools fusion Over 6 years of experience using AngularJS Nodejs 4 Years of experience using ReactJS and working with React Flux Architecture Handson experience in Angular5 Angular4 1 Year experience with Splunk Enterprise and Splunk SDK for Java Over 4 years of experience using Microservices using Sringboot and Jersey Frameworks Over 3 years of experience in search APIs Solr Used Scala sbt to develop Scala coded spark projects 3 plus years experience managing UNIXLinux environment 3 years experience in UNIX shell Perl or similar scripting languages Handson 2 years of experience in Lucene Strong experience on work with the Apigee API management platform Experience in API Gateways like Amazon API Oracle API Gateway and Apigee API gateway Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Strong experience in Bluefish Anjuta IDEs for Linux development Expertise in GUI Design using HTML XML JQuery Java Script Polymers AngularJS Nodejs DHTML and JSP Strong Experience in using XML Suite technologies XML XSL XSLT DOM and XML Beans More than 3 years of experience using BPM tools like JBPM Oracle BPM Experienced on Agile Methodology Good experience in developing web service development Good knowledge in Concepts of Object oriented JavaScript Good knowledge in developing single page applications SPA s using the JavaScript libraries like AngularJS and MeteorJS Good understanding on using Aurelia the next generation JavaScript MVC framework and writing ECMASRIPT 6 and ECMASCRIPT 7 2 years of experience in using Mongo DB Hands on experience in using Amazon Dynamo db Hands on experience in working with both angular 1 and angular 2versions Good knowledge in using other successful data virtualization tools like Citrix Good understanding on basic switching and routing Hands on experience on using SDN and SDMN technology 1 year experience using the Yang Data modelling language 1 year experience in using Jasmine open source testing framework Participated in all phases of SDLC like Requirements Analysis Design Implementation Testing and Deployment Over 4 years of strong experience in Spring boot using various versions such as 100 155 200 Expertise in J2EE Technologys Servlets JSP JDBC EJB JNDI JSTL JSON POJO JMS JSF My Faces Prime Faces JPA JAXWS JAX_RS Excellent understanding of Object Oriented design methodology and Core Java concepts such as multi threading exception handling generics annotations Collections and IO Strong Expertise in Data structure concepts Experience in Hashing Search and Sort algorithms Expertise in open source frameworks Spring Hibernate and Struts Actively involved in Service Oriented Architecture using web services Expertise in using SOAP and RESTFUL for implementing web services Experience in Application Servers like WebSphere WebLogic and Tomcat Good experience in databases such as SQL Server Oracle DB2 NoSQL and MySQL Strong experience in using Dynamic Programming for problem solving Strong experience with rule engines like Drools ILOG Experienced in developing middleware applications using Spring IOC Spring Integration Spring WS and Spring WS Security Actively involved in using business process management tools like JBPM Activiti BPM Extensive experience in Software Configuration Management using Version Control Software such as SVN CVS and GIT Experience in build tools like Ant Maven logging with Log4j Test Driven Development using Junit Experience with Reactjs workflows Flux Redux Experience in using isomorphic react Good knowledge in implementing various Design Patterns Singleton Factory pattern Abstract Factory pattern and DAO pattern Experience in creating Unified Modeling Language UML diagrams such as Use Case Diagrams Activity Diagrams Sequence Diagrams and Class Diagrams Deployment Diagrams using Rational Rose Worked in both UnixLinux and Windows based development environments Good programming and debugging skills in Unix Shell Scripting Expertise in database modeling and development using SQL and PLSQL in Oracle 8i 9i and 10g DB2 and SQL Server environments Experience in using ANT for build automation Versatile team player with good communication analytical presentation and interpersonal skills Authorized to work in the US for any employer Work Experience Full Stack Developer University of California SFO CA Berkeley CA June 2017 to Present is committed to continuously improving the delivery of campus information technology IT projects that are within budget and on schedule to serve the members of the campus community and achieve campus strategic goals This policy is designed to help ensure that campus information technology IT projects meet these objectives by establishing a common and consistent set of project management best practices to reduce project risks and increase project successes Responsibilities Created Maven build file to build the application and deployed on Web Sphere Application Server Used JSON to transmit the data from server application layers to web application layers Worked with unit testing of javascript applications using Karma Jasmine apimocker Jest enzyme Built APIs in NodeJS within a Microservice AWS lambda architecture Used SpringBoot framework to deploy microservices for the web application Build several Unix Shell wrappers for ProC programs to schedule them on Cron Wrote Unix shell scripting for executing any task in Cron scheduler Wrote UNIX script to make sms and ftp to push those sms Scheduling the jobs in Unix Cron Providing data of Dedup on daily biases Implemented code for using Mail through Unix for report and job status Used RMON to collect information about specific groups of statistics for longterm trend analysis Responsible to lead a team of java developers for backend JS using Nodejs to handle web page requests and data transfers Used LINUX in the initial stages of web and application development Built REST full webservices using spring Deployed and developed the web application with REST using Spring Boot Use WebMvcTest for Spring Boot Unit testing for the web application Used Axios with ReactJs for making AJAX Calls Worked on Webpack for build and webpackdevserver a server Integration Testing for different layers of application code was done by SpringBootTest Research about of JBPM process engine for use in the implementation of Flow Control System Used Drools fusion to manage event submission and processing based on each activity in the workflow Used OptaPlanner for automated planning of specific usecase problems Design and manipulation of JBPM process for the client activities in order to manage the people queue for each activity Design and generation of the database for the Flow Control System of People Design and implementation of main functions of the Flow Control System of People Deployed and developed my project using AWS EC2 S3 Data pipeline Elastic Beanstalk cloud watch Elastic search AWS server migration service Lambda Amazon messaging services SQS and SNS and Amazon Kinesis services Used Apigee API management platforms for both web and mobile application from backend workloads running on Amazon EC2 code running on AWS Lambda Used the AWS mobile hub service for creating and configuring powerful mobile app backend features required for our companys new mobile app Used Angular2 and Angular4 in the initial stages of client side development then moved onto Angular5 in the later stages Used Splunk Enterprise for analyzing our Mobile and web applications Big Data pattern Performed routine monitoring of the router cycle using Angular5 Worked with Passport and JSON web tokens for authentication and authorization security configurations using Nodejs Worked with npm commands and using packagejson for managing dependencies and devdependencies of nodejs applications Used Angular5 for continuous and incremental compilations Used Nodejs and ExpressJS for SPA of the web development part of the project User authentication using JWTJson web tokens Member data was stored in MongoDB and replication sets were migrated from SQL Server Used JSON for accessing data from AngularJS to Nodejs APIs Did the testing and monitoring and visualized how our mobile app built is being used Used the AWS mobile hub for quick storing and retrieval of app data in AWS Dynamo DB Used the AWS mobile SDK which helps to build high quality mobile apps quickly Used AWS data pipeline service for moving data between AWS compute and storage services and created complex data processing fault tolerant and repeatable workloads Used AWS Elastic Beanstalk service for deploying various infrastructures which orchestrates various AWS services Used Amazon Elastic search service for application monitoring and full text search Used Amazon SQS queuing service for reliable communication among distributed software components and micro services and used Amazon SNS push notification service for sending individual messages to mobile device users email recipients and to distributed users Used Amazon RedShift to handle all the analytical workloads using parallel processing Used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed single page applications using React Redux architecture ES6 web pack and grunt Developed screens for the front end using ReactJS and used various predefined components from NPM Node Package Manager Involved in creating a reusable component using React JS for DOM manipulation Worked heavily on CSS3 and LESS layout for DOM manipulation Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux libraries Used Scala for mobile application backend services using PhoneGap for the applications use over multiple platforms Implemented Event Sourcing using Akka Implemented design patterns in Scala for the application Serialize and deserialize objects using Play Json lib Used Apache Kafka for keeping the track of all the activities on the website used for some of the large scale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Used KMP algorithm technique for pattern matching Used Merge sort algorithm to differentiate between active and inactive users of the mobile app Developed search handlers by using Apache Solr which includes custom search handlers and custom functions Was responsible for masterslave replications in Solr search engine Used Solr 621 for data import using JDBC Flatfile Developed full text search handlers over crossplatform using Lucene Used BAMBOO for simultaneous integration and deployment for both web application and mobile application server Used Apache CXF for building and developing services and used frontend programming API s like JAX WS and JAXRS Using Java Messaging Service JMS for messaging configured queues and topics on the WebLogic 103 Application Server and used them for messaging Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Deployed the application on WebLogic Application Server cluster on Solaris 10 environment Implemented Persistence layer using Hibernate to interact with the Oracle database Used Hibernate Framework for object relational mapping and persistence Used Python programming and language to develop a working and efficient network within the company Utilized Python in the handling of all hits on Django Redis and other application Performed research regarding Python Programming and its uses and efficiency Converted Python code into C using Cython Used DASK to efficiently distribute python jobs across all the systems Used High Performance Analytics Toolkit HPAT to compile a subset of Python to code to parallelize it across clusters using mpirun utility Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Adopt Agile Methodology to plan using JIRA Development of UI modules using HTML JSP JavaScript AngularJS and CSS Worked on Angular 20 version for mobile app development Used ECMAScript6 ES6 for writing complex applications and modules Implemented application level persistence using Hibernate and spring Worked on the Visual Yang designer 62 version for loading existing YANG and YIN models Used JQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Analyzed changes in online transactional processing business processes and modifications to improve quality of applications and meet additional requirements through MongoDB Built a highly scalable lowlatency NodeJS API Gateway to interact with MongoDB database with JSON Worked on the Node v600 version of Node JS Used the web application framework Express for designing web applications and API s Developed Servlets and JSPs based on MVC pattern using Spring Framework Developed PLSQL procedure for login module and registration module Used JDBC to connect to the information model tier Used Eclipse IDE for designing coding and developing applications Written JUNIT TDD test cases for testing Spring Framework classes and wrote many Java Scripts to do client side validations Used Jasmine testing framework for JavaScript Run the Jasmine tests by using Karma a simple JavaScript test runner tool Used Apache Hadoop framework for distributed storage and the processing of big data sets Configured Maven dependencies for application building processes that created Pomxml files Make files and the like Worked with Clear case source management Enhanced and created new Jasper Reports according to the requirements Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Worked extensively in Struts EJB 30 and JPA in other maintenance projects Involved in agile planning and Estimation Sessions of user stories and also participating in Scrum Meetings to update the status daily Environment Spring Hibernate Weblogic Rest JQuery JavaScript JSON JSP WebSphere Drools JSTL Servlets AWS SDN Oracle Mongo DB Apache PLSQL JDBC EJB UML Eclipse JUnit Maven Apache Hadoop JBPM Drools Apache CXF Amazon Elastic search Express HTML JSP JavaScript Angular 20 ECMAScript6 Nodejs v600 CSS Clear case Jasmine Jasper Report ILOG Agile SOAP Sr Java Developer Singleton Marine Atlanta GA October 2014 to June 2017 The Purpose of this project is to significantly reduce the manual process and automate the business process This is related to the membership agreements and to enable business process reengineering through the implementation of web Services The agreement creation functionality in the Existing Application replaced with the functionality of MAX When user selects a specific product the pricing will be automatically populated based on the selection This application provides more stream lined data entry than the existing system and electronic capturing of member signatures to improve the quality of agreement Responsibilities Worked in an Agile Environment and participated in requirement gathering analysis and design Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Used Jersey to deploy Microservices for JAXRS APIs Used OpenStack Swift for media and document storage and Cinder to create virtual disks of memory Used Sahara for Big data processing parallel processing using Hadoop Used OpenStack Heat to reduce duplication of files and store only the components that were necessary to run Worked with MEAN MERN stack for developing applications Worked with modules like MongoDB and mongoose for database persistence using Nodejs to interact with MongoDB Developed Python based API RESTful Web Service to track sales and perform sales analysis using Flask SQLAlchemy and PostgreSQL Performed Fulltext search using Solr search handlers on the data Did Field faceting and Query Faceting to make counts of search result data Use Apache Lucene for real time search Implemented Spark using Scala and Spark SQL for faster testing and processing of data Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Developed and designed an API RESTful Web Service for the companys website Developed and designed email marketing campaigns using HTML and CSS Implemented the service layer based on a spring container and exploited SpringsIOC features for bean management Part of the implementation which did a complete End to End automation of new Business Process using Oracle BPM Automation integration and optimization of Business Process Done the Simulation rule analysis for the Process Provided an analysis report that shows the data about the particular process instance Implemented rule services on Product and Plan details created complex and powerful rules with conditions based on business rules Used Maven for dependencies in Spring Boot and testing through various using DataJPATest Used embedded web server deployment in Spring Boot for deployment of web application Used Oracle API Gateway for serviceoriented architecture SOA and its deployment across domain boundaries and in the cloud enabling organizations Used Apigee API manager to manage all the browser based API gateway and mobile API gateway from a single domain Used Apache Tomcat in Spring Boot to communicate with the Spring MVC Controller Implemented the persistence layer using HibernateORM Worked on Spring Web Flow on Spring MVC for building flows in our web application Implemented jQuery based accordion styles and handled complete jQuery in showing Rich Internet application Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript JQuery BootStrap AJAX Angularjs Reactjs and JSON Developed JBPM workflow process rules with help of Drools engine Wrote services for business layer using core java Spring concepts Developed various UI User Interface components using Struts MVC JSP and HTML Developed application on spring 3x framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used springs dependency injection for injecting entity manager and managed beans into spring beans Working extensively with Hibernate Query Language HQL to store and retrieve the data from oracle database Developed Enterprise JavaBeans EJB 30 for implementing applications business rules and policies Developed unit testing the applications using JunitFramework and developed logging and standard mechanism based on Log4j Developed and writing unit tests on both client and JS server side using Jasmine Mocha and Chai frameworks Familiarity with Service oriented architecture SOA by developing and consuming Restful web services based on JAXRS and Jersey Coded JSP pages and used JavaScript for client side validations and to achieve other clientside event handling Designed the user interface of the application using HTML5 CSS3 Boot Strap Java Server Faces 20 JSF 20 JSP JSTL JavaScript AngularJS ReactJS Node JS and AJAX Coded in AngularJS MVC Framework to make single page app spa for specific module and complex price configurations pages Used Spring Security framework for login authentication password hashing Worked on Java Message Service JMS API for developing message oriented middleware MOM layer for handling various asynchronous requests Worked with topic for creating publishsubscribemessaging model Used D3js and Angular to construct data visualization Developed persistence layer based on JPA framework for providing POJO persistence model for objectrelational mapping Used Concurrent Version System CVS as source control tool Developed unit test cases and suits on Junit framework for unit testing Used Maven for building deploying application creating JPA based entity objects and compiling GWT application Used XML parser APIs like JAXB API within the web service for marshallingunmarshalling Used Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Developed the web applications even under pressure when time line occurs Involved in designing and development of web interface using JSP Servlets and JavaScript Tested each and every application with using validators and handled multiple modules simultaneously to achieve the application Environment Spring 31 J2EE 17 Spring JDBC Template Spring Batch AJAX XML CSS CSS 3 HTML 5 JavaScript Oracle 10g11i Maven 303 MYSQL 61 Bootstrap JUNIT Jasmin Mocha JQuery Angularjs Reactjs JUnit REST STS 351eclipse Core Java JSPs Action Components Tomcat Web Server Sr Java Developer Frontier Communications Richardson TX January 2012 to September 2014 Frontier Communications Corporation is a telephone company in the United States mainly serving rural areas and smaller communities Frontier is the sixth largest local exchange carrier and the fifth largest provider of digital subscriber line based on coverage area in the United States In addition to local and longdistance telephone service Frontier offers broadband Internet digital television service and computer technical support to residential and business customers Responsibilities Involved in complete software development life cycle management using UML Unified Modeling Language Requirements gathering Conceptual design Analysis Detailed design and Development Coding interfaces for Web Services Used Springboot for web application development with the help of Spring Initializers Application was developed using Spring MVC Web flow modules Implemented spring framework for application transaction management Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Used Spring ORM to integrate Spring Framework with hibernate and JPA Used Springs JDBC and DAO layers to offer abstraction for the business from the database related code Used Spring AOP module to handle transaction management services for objects in any Springbased application Used Spring MVC framework Integration for Server side programming Responsible to updateverify CDM for release level tasks Developed JavaScript code for Client Side Validations Involved in JAD sessions documenting system requirements creating application designs validating highlevel designs HLDs to ensure accuracy and completeness against the business requirements and programming the solutions Developed Servlets and JSP to interact with Enterprise Java Beans EJB containing all the Business Logic Used Hibernate as the persistence layer to interact with Oracle DB Environment Spring Framework 30 Hibernate Java 16 DHTML HTML CSS Servlets UML J2EEJSP EJB Struts Framework Taglibs SQL Java Script Oracle 11gWebsphere Application Server Eclipse JUnit JMock WSDL Web services XML XSLT XSD Schema Designs SOAP 12XPath XQuery UNIX UML JNDI JDBC JMS Rational Clear Quest Tortoise CVS Java Developer BHEL June 2009 to December 2011 BHEL products is due to adherence to international standards by acquiring and adapting some of the best technologies from leading companies in the world including General Electric Company Alstom SA Siemens AG and Mitsubishi Heavy Industries Ltd together with technologies developed in its own RD centers Most of its manufacturing units and other entities have been accredited to Quality Management Systems ISO 90012008 Environmental Management Systems ISO 140012004 and Occupational Health Safety Management Systems OHSAS 180012007 Responsibilities Modeled UML 2x Class Diagrams and sequence Diagrams using Rational Rose Implemented different Design patterns like DTO DAO Service Locator Pattern Singleton Pattern and MVC architectural design pattern for solving the architectural issues Involved in the design of Relational Database Schema with Entity Relationship diagrams Analysis design and development of Application based on J2EE and Design Patterns Developed Application using an enhanced framework based on Apache Struts Used JDBC for database connectivity with the application Developed some of the presentation layer interfaces JSPs and Java Beans Client side Data Validations are performed using JavaScript Used JSTL and custom tag libraries in place of script lets Extensively used XML and XSLT style sheets Implemented the application and bug fixes in production environment Created Tables and SQL Queries to insert and fetch the data from the database Developed Enterprise Java Beans Session Beans to perform middle ware services and interact with DAO layer to perform database operations like update retrieve insert and delete Involved in writing the ANT scripts for automating the process of building testing and deploying the system Monitored the error logs using Log4J and fixed the problems Developed the test cases using Junit to test Used Microsoft Visual SourceSafe VSS to check out project and maintain various versions of the project Environment J2EE Struts Servlets spring EJB AJAX HTML CSS XML Ant JavaScript Oracle 10G Eclipse 30 VSS Web Sphere 5x Log4J Education Bachelors Skills database 9 years EJB 9 years HTML 9 years java 9 years javascript 9 years Additional Information SKILL SUMMARY Platforms Windows 2000NT XPVista and Sun Solaris 2829 UNIX Programming JDK 15 16 1718 C C Server Scripting JSP1221 JSPEL JSTL Custom Tags Client Scripting JQuery 1819 JQueryUI LESS Dojo ExtJs Webpack AngularJS JavaScript CSS2 CSS3 HTML4 HTML5 Nodejs Bootstrap JS frameworks AngularJS Emberjs Vuejs ReactJS ExpressJS Java Frameworks Struts 12 Struts 21 Spring MVCDI AOP JSF 11 JSF 21 GWT Vaadin Spring Boot 14 15 157 GA 200 MA Database Tools Toad for Oracle Toad for MySQL Toad for DB2 Interactive SQL Batch SQL HiveQL Toad for MSSQL ERWin Altova Database Spy MySQL Workbench Databases DB2 MSSQL Server HSQLDB PostgresSQL MySQL Middleware Network Protocols EJB 21 EJB 30 CORBA RMI JMS Active MQ SNMP ICMP Version Control Tortoise SVN Rational ClearCase Accurev GitHub CVS IDEs Eclipse 30 31 MyEclipse 41 IntelliJ Netbeans JBuilder 2007 JDeveloper Build Tools ANT 17 18 19 Maven Gradle Continuous Integration Jenkins Hudson XML Tools Altova XML Spy 2005 2008 XML Technologies XSLT JAXP JDOM SAX DOM XPATH XPOINTER XML XSD DTD Webservice Specifications JAXRPC JAXWS JAXRS Webservice Tools SoapUI 40 51 TcpMon RESTful APIs Webservice Implementations Axis 10 21 JWSDP21 Sun Metro Sun Jersey Apache XFire Apache CXF Whitebox Testing Junit 3 Junit 4 DBUnit JUnitPerf HttpUnit LoadTest TimedTest Selenium Fitnesse EasyMock PowerMock Blackbox Testing JMeter LoadUI LoadRunner HP Quality Center WinRunner Application Servers Weblogic 81 100 Websphere 61 JBoss 40 Glassfish 40 Web Servers Tomcat 50 60 71 Joans UML Tools Altova UML Model Rational Enterprise MS Visio ORM Frameworks Hibernate 30 31 41 TopLink OpenJPA iBatis Defect Tracking JIRA Bugzilla Rational ClearQuest Methodologies Agile XP Scrum Rational Unified Process RUP Waterfall Kanban Reporting iReports JReports Batch Jobs Quartz Scheduler Cron Spring Batch HTML Editors MSFrontpage 2003 Adobe Dreamweaver Coffee Cup HTML Tinplating Velocity Freemarker AWS API Oracle API 11g Search APIs and API Gateway Solr Lucene Apigee API gateway",
    "unique_id": "30cc1840-00c5-4024-8d16-eec9cc7bc377"
}