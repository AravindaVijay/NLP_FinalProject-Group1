{
    "clean_data": "Mean Stack Developer Mean Stack span lDeveloperspan Mean Stack Developer Oscar Insurance Reston VA VA Web Developer with 5 years experience in Full Stack Development MEAN and MERN Stack in analysis design development implementation and troubleshooting various webbased application Used to work in ecommerce and healthcare industries Experience in building MEAN applications using MongoDB ExpressJS Angular 2 NodeJS creating RESTful Web services with NodeJS ExpressJS Extensive experience in designing professional UI Web applications using front end technologies like HTML5 CSS3 JavaScript jQuery AJAX HTTP JSON Strong skill in building Responsive Web Application with Bootstrap CSS media queries Produced visually appealing designs focused on usability DOM Layout utility UX crossbrowser compatibility and hence worked on safari IE Firefox and Google chrome Experienced in ReactJS and working with Redux architecture using complex ObjectOriented concepts in improving the performance of the websites Experienced in open sources libraries for Angular like Angular Material and PrimeNG Experienced in ServerSide programming using Nodejs and node package like Expressjs CORS Bodyparser Mongoose and JWT for the creating more secure routes Used ExpressJS to create RESTful API including methods get put post and delete Used mongoose to connect with the MongoDB database and built the modal Experienced in CJavaScript with Unity Basic idea in cloud computing and Amazon Web Services AWS Proficient in Photoshop and experienced in Illustrator which are used to design the UI and mockups Used Postman to test the functionality of RESTful API Expertise in debugging and troubleshooting existing code using Jira Developer Tools and Git as Version Control System Worked in Software Development Lifecycle SDLC application design functional and technical specs and use case development using UML Followed Waterfall Agile methodologies like Test Driven Development TDD SCRUM and Pair Programming Work Experience Mean Stack Developer Oscar Insurance New York NY July 2017 to Present Description Oscar Insurance is the company providing health insurance to personalfamily and healthcare advisory This application is created for internal users to manage their information of the customers modify the plans that they provide In addition the managers have higher authorization to see the information of their agents like how many clients that the agent has the plan they sold and how much profit they earn My responsibilities is to build the full stack with Angular in frontend NodeJS in backend and MongoDB as the database Responsibilities Designed and developed a single page application with HTML5 CSS3 Bootstrap JavaScript Typescript Angular45 Used Angular CLI to generate components ng g c test ng test and run the application ng serve Used Routing Module to set the route for different components and put children routes into the components Used Http client request to call RESTful API to do get to fetch the data put to update the data post to add new data and delete to remove the data from MongoDB Completed authentication with json web token which is stored in the local storage Used twoway ngModel property disable event click binding to manipulate the DOM Implemented form validation by templatedriven and React Form to customize the additional validation Created dynamical table by using structure directive attribute directive to dynamically display the data in the front end like ngFor ngIf and ngStyle Implemented HTTP Client Module and AuthService in the ngOnInit which is the buildin lifecycle hook of the Angular Created a custom Pipe to filter the data in the table and used default pipe like lowercase pipe for the user input date pipe for recording the date Developed a RESTful API in Nodejs with Expressjs and use Express to handle the CRUD methods Implemented component communication by input output and service Import service to create a router guard to make sure the security in the backend Used interceptor to attach authorization header and bearer token to the HTTP request Used Bcrypt to hash users password upon successful signup Used multer storage to store the image in the server and put the reference address in the MongoDB database Created several models for the database and template driven to make sure the backend receives the correct data type Used mongoose to build the schema of the data and connect to the MongoDB Worked in a agile environment used Git for the version control and Jira for the project management Used Slack and Zoom for communication Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Angular 45 Nodejs Expressjs Mongo DB mongoose Bootstrap Git bcript Jira Web Developer Jackrabbit Design Milton MA February 2016 to June 2017 Description Jackrabbit is a company to provide website development service web application development to their clients and corporate branding The client is a physical therapy center and this application is created for internal users to manage the information of their patients modify their daily schedule and the treatment which combines image and the description etc Users can access to the patients account and attach the treatment to the profile of the patient then print it out to the patient My role of this project is to create the server in NodeJS make it connect to the MongoDB and the client side which is made by React Responsibilities Designed and developed a single page application using HTML5 CSS3 JavaScript ReactJS Redux and Bootstrap Worked on responsive design with Bootstrap and CSS3 Media Queries Maintained state in the stores and dispatched the actions and reducer using Redux Implemented the Drag and Drop functionality using ReactDraggable Implemented router by using reactrouterdom to set path for different components Stored the json web token in the local storage to complete the authentication in the frontend Implemented component communication by props parent to child Implemented the form validation by costuming a function inside a component Used Axios in the frontend to send the CRUD request to the backend like get to fetch the data put to update the data post to add the data and delete to remove the data from the database Created dynamic web page with state in stateful class components for the toplevel components Created multiple reusable functional stateless components for the class component such as input button and the logo etc Used twoway data binding to transfer the value of the input to the state in the input element Displayed the data in a dynamic table by looping the content with map method and used if condition to show or hide a certain element Kept the image in the server by using multer and send the reference address to the MongoDB database Used Express to create the RESTful API in NodeJS environment Used Bcrypt to hash users password upon successful signup Used mongoose to connect with the MongoDB database and create data model for the schema Participated in Agile methodology for application development and involved in analysis design coding and unit testing of business applications SDLC Used Jira to track the progress of the project Responsible for design and maintenance of the Git Repositories views and the access control strategies Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Reactjs Nodejs Expressjs Mongo DB mongoose Bootstrap Git jQuery bcrypt Jira Front End Developer ALK Technologies Princeton NJ December 2014 to January 2016 Description ALK technologies is a a transportation technology company which provides several services like vehicle rental professional driver assisting routing food delivery etc This application is made by React for the internal employees to check and manage their customers information track the vehicle send the message to their driver and make the schedule I am the frontend developer to design and implement the UI and make the page dynamicresponsive Responsibilities Designed the wireframe of the application with Adobe Photoshop This application is made by HTML CSS JavaScript jQuery NodeJS MongoDB Implemented the wireframe and made it dynamical with JavaScript and jQuery Used CSS with Media Queries and Bootstrap to make the pages responsive which based on the screen size platform and orientation Created a navigation bar to director application to the different pages Used AJAX to send the request to the API like get to fetch the data post to update the data put to add new data and delete to remove the data Cooperated with back end developer to send the request in front end to the RESTful API Used Git for the version control and Jira for the task management Worked in Agile environment and software development lifecycle hook SDLC Environment HTML5 CSS3 JavaScript jQuery Bootstrap Nodejs Express MongoDB Git UI Developer HealthEdge Burlington MA September 2013 to November 2014 Description HealthEdge is the company providing nextgeneration core administration and coordination for transformative health plans to their customers This is an application which developed for the internal user to manage the data of their customers and the services that they provide My responsibility is to design and implement the mockups of the application make the application responsive and dynamic Responsibilities Designed the mockups of the application with Adobe Photoshop Designed the Front End applications user interactive UI web pages using web technologies like HTML CSS JavaScript and jQuery Developed nonfunctional HTML CSS pages from the mock ups and involved in UI review with UI designer and Business Units Used CSS Media Queries to make the application responsive Cooperated with Back End developer to make sure the functionalities work Involved in the Software Development Life Cycle phases like Requirement Analysis Implementation and estimating the timelines for the project Worked in an agile environment and had scrum meeting every morning to track the progress of the project Environment HTML CSS JavaScript jQuery JSON AJAX Java MySQL Education Master of Science in Digital Media Northeastern University Boston MA Skills Bootstrap 4 years Git 4 years JavaScript 5 years Jira 4 years json 4 years XML jQuery HTML SQL Linux CertificationsLicenses Drivers License Additional Information Skills Web Technologies HTML CSS Java JavaScript ES6ES5 C PHP JSON DOM AJAX jQuery Angular 2 React 1516 Nodejs P5js Bootstrap 34 PrimeNG Angular Material Typescript Express Mongoose MongoDB REST IDEs ATOM Visual Studio Code Brackets Dreamweaver Eclipse Unity Testing Tools Karma Jasmine Mocha Version Controls Git Github Application Servers Operating Systems Windows XPVista710 MAC Linuxs Task Management Jira Slack Zoom",
    "entities": [
        "ngStyle Implemented",
        "DOM Layout",
        "Skills Bootstrap",
        "AJAX",
        "API",
        "Test Driven Development TDD",
        "CRUD",
        "Cooperated",
        "HTML CSS JavaScript",
        "Present Description Oscar Insurance",
        "Digital Media Northeastern University",
        "Responsive Web Application with Bootstrap CSS",
        "Nodejs",
        "JavaScript Reactjs Nodejs Expressjs Mongo DB",
        "JWT",
        "React Responsibilities Designed",
        "Drag",
        "Created",
        "JavaScript",
        "UML",
        "HTML SQL Linux",
        "Git",
        "UI",
        "HTTP",
        "Bcrypt",
        "jQuery Used CSS",
        "Business Units Used CSS Media Queries",
        "NodeJS ExpressJS",
        "HTML5",
        "Google",
        "jQuery Developed",
        "ReactDraggable",
        "Description HealthEdge",
        "Pair Programming Work Experience Mean Stack Developer Oscar Insurance New York",
        "HTML CSS JavaScript jQuery NodeJS MongoDB Implemented",
        "ObjectOriented",
        "Express",
        "Redux Implemented",
        "Drop",
        "Used Express",
        "Boston",
        "Bootstrap",
        "Description ALK",
        "ATOM Visual Studio Code Brackets Dreamweaver Eclipse Unity Testing Tools Karma",
        "NodeJS",
        "Requirement Analysis Implementation",
        "Media Queries and Bootstrap",
        "Redux",
        "Adobe Photoshop Designed",
        "CLI",
        "Illustrator",
        "Amazon Web Services AWS Proficient",
        "ServerSide",
        "Agile",
        "the Angular Created"
    ],
    "experience": "Experience in building MEAN applications using MongoDB ExpressJS Angular 2 NodeJS creating RESTful Web services with NodeJS ExpressJS Extensive experience in designing professional UI Web applications using front end technologies like HTML5 CSS3 JavaScript jQuery AJAX HTTP JSON Strong skill in building Responsive Web Application with Bootstrap CSS media queries Produced visually appealing designs focused on usability DOM Layout utility UX crossbrowser compatibility and hence worked on safari IE Firefox and Google chrome Experienced in ReactJS and working with Redux architecture using complex ObjectOriented concepts in improving the performance of the websites Experienced in open sources libraries for Angular like Angular Material and PrimeNG Experienced in ServerSide programming using Nodejs and node package like Expressjs CORS Bodyparser Mongoose and JWT for the creating more secure routes Used ExpressJS to create RESTful API including methods get put post and delete Used mongoose to connect with the MongoDB database and built the modal Experienced in CJavaScript with Unity Basic idea in cloud computing and Amazon Web Services AWS Proficient in Photoshop and experienced in Illustrator which are used to design the UI and mockups Used Postman to test the functionality of RESTful API Expertise in debugging and troubleshooting existing code using Jira Developer Tools and Git as Version Control System Worked in Software Development Lifecycle SDLC application design functional and technical specs and use case development using UML Followed Waterfall Agile methodologies like Test Driven Development TDD SCRUM and Pair Programming Work Experience Mean Stack Developer Oscar Insurance New York NY July 2017 to Present Description Oscar Insurance is the company providing health insurance to personalfamily and healthcare advisory This application is created for internal users to manage their information of the customers modify the plans that they provide In addition the managers have higher authorization to see the information of their agents like how many clients that the agent has the plan they sold and how much profit they earn My responsibilities is to build the full stack with Angular in frontend NodeJS in backend and MongoDB as the database Responsibilities Designed and developed a single page application with HTML5 CSS3 Bootstrap JavaScript Typescript Angular45 Used Angular CLI to generate components ng g c test ng test and run the application ng serve Used Routing Module to set the route for different components and put children routes into the components Used Http client request to call RESTful API to do get to fetch the data put to update the data post to add new data and delete to remove the data from MongoDB Completed authentication with json web token which is stored in the local storage Used twoway ngModel property disable event click binding to manipulate the DOM Implemented form validation by templatedriven and React Form to customize the additional validation Created dynamical table by using structure directive attribute directive to dynamically display the data in the front end like ngFor ngIf and ngStyle Implemented HTTP Client Module and AuthService in the ngOnInit which is the buildin lifecycle hook of the Angular Created a custom Pipe to filter the data in the table and used default pipe like lowercase pipe for the user input date pipe for recording the date Developed a RESTful API in Nodejs with Expressjs and use Express to handle the CRUD methods Implemented component communication by input output and service Import service to create a router guard to make sure the security in the backend Used interceptor to attach authorization header and bearer token to the HTTP request Used Bcrypt to hash users password upon successful signup Used multer storage to store the image in the server and put the reference address in the MongoDB database Created several models for the database and template driven to make sure the backend receives the correct data type Used mongoose to build the schema of the data and connect to the MongoDB Worked in a agile environment used Git for the version control and Jira for the project management Used Slack and Zoom for communication Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Angular 45 Nodejs Expressjs Mongo DB mongoose Bootstrap Git bcript Jira Web Developer Jackrabbit Design Milton MA February 2016 to June 2017 Description Jackrabbit is a company to provide website development service web application development to their clients and corporate branding The client is a physical therapy center and this application is created for internal users to manage the information of their patients modify their daily schedule and the treatment which combines image and the description etc Users can access to the patients account and attach the treatment to the profile of the patient then print it out to the patient My role of this project is to create the server in NodeJS make it connect to the MongoDB and the client side which is made by React Responsibilities Designed and developed a single page application using HTML5 CSS3 JavaScript ReactJS Redux and Bootstrap Worked on responsive design with Bootstrap and CSS3 Media Queries Maintained state in the stores and dispatched the actions and reducer using Redux Implemented the Drag and Drop functionality using ReactDraggable Implemented router by using reactrouterdom to set path for different components Stored the json web token in the local storage to complete the authentication in the frontend Implemented component communication by props parent to child Implemented the form validation by costuming a function inside a component Used Axios in the frontend to send the CRUD request to the backend like get to fetch the data put to update the data post to add the data and delete to remove the data from the database Created dynamic web page with state in stateful class components for the toplevel components Created multiple reusable functional stateless components for the class component such as input button and the logo etc Used twoway data binding to transfer the value of the input to the state in the input element Displayed the data in a dynamic table by looping the content with map method and used if condition to show or hide a certain element Kept the image in the server by using multer and send the reference address to the MongoDB database Used Express to create the RESTful API in NodeJS environment Used Bcrypt to hash users password upon successful signup Used mongoose to connect with the MongoDB database and create data model for the schema Participated in Agile methodology for application development and involved in analysis design coding and unit testing of business applications SDLC Used Jira to track the progress of the project Responsible for design and maintenance of the Git Repositories views and the access control strategies Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Reactjs Nodejs Expressjs Mongo DB mongoose Bootstrap Git jQuery bcrypt Jira Front End Developer ALK Technologies Princeton NJ December 2014 to January 2016 Description ALK technologies is a a transportation technology company which provides several services like vehicle rental professional driver assisting routing food delivery etc This application is made by React for the internal employees to check and manage their customers information track the vehicle send the message to their driver and make the schedule I am the frontend developer to design and implement the UI and make the page dynamicresponsive Responsibilities Designed the wireframe of the application with Adobe Photoshop This application is made by HTML CSS JavaScript jQuery NodeJS MongoDB Implemented the wireframe and made it dynamical with JavaScript and jQuery Used CSS with Media Queries and Bootstrap to make the pages responsive which based on the screen size platform and orientation Created a navigation bar to director application to the different pages Used AJAX to send the request to the API like get to fetch the data post to update the data put to add new data and delete to remove the data Cooperated with back end developer to send the request in front end to the RESTful API Used Git for the version control and Jira for the task management Worked in Agile environment and software development lifecycle hook SDLC Environment HTML5 CSS3 JavaScript jQuery Bootstrap Nodejs Express MongoDB Git UI Developer HealthEdge Burlington MA September 2013 to November 2014 Description HealthEdge is the company providing nextgeneration core administration and coordination for transformative health plans to their customers This is an application which developed for the internal user to manage the data of their customers and the services that they provide My responsibility is to design and implement the mockups of the application make the application responsive and dynamic Responsibilities Designed the mockups of the application with Adobe Photoshop Designed the Front End applications user interactive UI web pages using web technologies like HTML CSS JavaScript and jQuery Developed nonfunctional HTML CSS pages from the mock ups and involved in UI review with UI designer and Business Units Used CSS Media Queries to make the application responsive Cooperated with Back End developer to make sure the functionalities work Involved in the Software Development Life Cycle phases like Requirement Analysis Implementation and estimating the timelines for the project Worked in an agile environment and had scrum meeting every morning to track the progress of the project Environment HTML CSS JavaScript jQuery JSON AJAX Java MySQL Education Master of Science in Digital Media Northeastern University Boston MA Skills Bootstrap 4 years Git 4 years JavaScript 5 years Jira 4 years json 4 years XML jQuery HTML SQL Linux CertificationsLicenses Drivers License Additional Information Skills Web Technologies HTML CSS Java JavaScript ES6ES5 C PHP JSON DOM AJAX jQuery Angular 2 React 1516 Nodejs P5js Bootstrap 34 PrimeNG Angular Material Typescript Express Mongoose MongoDB REST IDEs ATOM Visual Studio Code Brackets Dreamweaver Eclipse Unity Testing Tools Karma Jasmine Mocha Version Controls Git Github Application Servers Operating Systems Windows XPVista710 MAC Linuxs Task Management Jira Slack Zoom",
    "extracted_keywords": [
        "Mean",
        "Stack",
        "Developer",
        "Mean",
        "Stack",
        "span",
        "lDeveloperspan",
        "Mean",
        "Stack",
        "Developer",
        "Oscar",
        "Insurance",
        "Reston",
        "VA",
        "VA",
        "Web",
        "Developer",
        "years",
        "experience",
        "Full",
        "Stack",
        "Development",
        "MEAN",
        "MERN",
        "Stack",
        "analysis",
        "design",
        "development",
        "implementation",
        "application",
        "ecommerce",
        "healthcare",
        "industries",
        "Experience",
        "MEAN",
        "applications",
        "MongoDB",
        "ExpressJS",
        "Angular",
        "NodeJS",
        "Web",
        "services",
        "NodeJS",
        "ExpressJS",
        "experience",
        "UI",
        "Web",
        "applications",
        "end",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "HTTP",
        "JSON",
        "skill",
        "Responsive",
        "Web",
        "Application",
        "Bootstrap",
        "CSS",
        "media",
        "queries",
        "designs",
        "usability",
        "DOM",
        "Layout",
        "utility",
        "UX",
        "crossbrowser",
        "compatibility",
        "safari",
        "IE",
        "Firefox",
        "Google",
        "chrome",
        "ReactJS",
        "Redux",
        "architecture",
        "ObjectOriented",
        "concepts",
        "performance",
        "websites",
        "sources",
        "libraries",
        "Angular",
        "Material",
        "PrimeNG",
        "ServerSide",
        "programming",
        "Nodejs",
        "node",
        "package",
        "Expressjs",
        "CORS",
        "Bodyparser",
        "Mongoose",
        "JWT",
        "routes",
        "ExpressJS",
        "API",
        "methods",
        "post",
        "Used",
        "mongoose",
        "MongoDB",
        "database",
        "modal",
        "CJavaScript",
        "Unity",
        "Basic",
        "idea",
        "cloud",
        "computing",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Proficient",
        "Photoshop",
        "Illustrator",
        "UI",
        "mockups",
        "Postman",
        "functionality",
        "API",
        "Expertise",
        "code",
        "Jira",
        "Developer",
        "Tools",
        "Git",
        "Version",
        "Control",
        "System",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "application",
        "design",
        "specs",
        "use",
        "case",
        "development",
        "UML",
        "Followed",
        "Waterfall",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "SCRUM",
        "Pair",
        "Programming",
        "Work",
        "Experience",
        "Mean",
        "Stack",
        "Developer",
        "Oscar",
        "Insurance",
        "New",
        "York",
        "NY",
        "July",
        "Present",
        "Description",
        "Oscar",
        "Insurance",
        "company",
        "health",
        "insurance",
        "healthcare",
        "advisory",
        "application",
        "users",
        "information",
        "customers",
        "plans",
        "addition",
        "managers",
        "authorization",
        "information",
        "agents",
        "clients",
        "agent",
        "plan",
        "profit",
        "responsibilities",
        "stack",
        "Angular",
        "frontend",
        "NodeJS",
        "backend",
        "MongoDB",
        "database",
        "Responsibilities",
        "page",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "Typescript",
        "Angular45",
        "Angular",
        "CLI",
        "components",
        "ng",
        "g",
        "c",
        "test",
        "ng",
        "test",
        "application",
        "Routing",
        "Module",
        "route",
        "components",
        "children",
        "routes",
        "components",
        "Http",
        "client",
        "request",
        "API",
        "data",
        "data",
        "post",
        "data",
        "data",
        "authentication",
        "json",
        "web",
        "token",
        "storage",
        "twoway",
        "ngModel",
        "property",
        "event",
        "DOM",
        "form",
        "validation",
        "React",
        "Form",
        "validation",
        "table",
        "structure",
        "directive",
        "attribute",
        "directive",
        "data",
        "end",
        "ngFor",
        "ngIf",
        "ngStyle",
        "HTTP",
        "Client",
        "Module",
        "AuthService",
        "ngOnInit",
        "lifecycle",
        "hook",
        "Angular",
        "Created",
        "custom",
        "Pipe",
        "data",
        "table",
        "default",
        "pipe",
        "lowercase",
        "pipe",
        "user",
        "input",
        "date",
        "pipe",
        "date",
        "API",
        "Nodejs",
        "Expressjs",
        "Express",
        "CRUD",
        "methods",
        "component",
        "communication",
        "input",
        "output",
        "service",
        "Import",
        "service",
        "router",
        "guard",
        "security",
        "interceptor",
        "authorization",
        "header",
        "bearer",
        "HTTP",
        "request",
        "Bcrypt",
        "users",
        "password",
        "multer",
        "storage",
        "image",
        "server",
        "reference",
        "address",
        "database",
        "models",
        "database",
        "template",
        "backend",
        "data",
        "type",
        "mongoose",
        "schema",
        "data",
        "MongoDB",
        "environment",
        "Git",
        "version",
        "control",
        "Jira",
        "project",
        "management",
        "Slack",
        "Zoom",
        "communication",
        "scrum",
        "meetings",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "Nodejs",
        "Expressjs",
        "Mongo",
        "DB",
        "Bootstrap",
        "Git",
        "bcript",
        "Jira",
        "Web",
        "Developer",
        "Jackrabbit",
        "Design",
        "Milton",
        "MA",
        "February",
        "June",
        "Description",
        "Jackrabbit",
        "company",
        "website",
        "development",
        "service",
        "web",
        "application",
        "development",
        "clients",
        "branding",
        "client",
        "therapy",
        "center",
        "application",
        "users",
        "information",
        "patients",
        "schedule",
        "treatment",
        "image",
        "description",
        "Users",
        "patients",
        "treatment",
        "profile",
        "patient",
        "patient",
        "role",
        "project",
        "server",
        "NodeJS",
        "MongoDB",
        "client",
        "side",
        "React",
        "Responsibilities",
        "page",
        "application",
        "HTML5",
        "CSS3",
        "JavaScript",
        "ReactJS",
        "Redux",
        "Bootstrap",
        "design",
        "Bootstrap",
        "CSS3",
        "Media",
        "Queries",
        "state",
        "stores",
        "actions",
        "reducer",
        "Redux",
        "Drag",
        "Drop",
        "functionality",
        "ReactDraggable",
        "router",
        "reactrouterdom",
        "path",
        "components",
        "json",
        "web",
        "storage",
        "authentication",
        "frontend",
        "component",
        "communication",
        "props",
        "parent",
        "child",
        "form",
        "validation",
        "function",
        "component",
        "Axios",
        "frontend",
        "CRUD",
        "request",
        "backend",
        "data",
        "data",
        "post",
        "data",
        "data",
        "database",
        "web",
        "page",
        "state",
        "class",
        "components",
        "toplevel",
        "components",
        "stateless",
        "components",
        "class",
        "component",
        "input",
        "button",
        "logo",
        "twoway",
        "data",
        "value",
        "input",
        "state",
        "input",
        "element",
        "data",
        "table",
        "content",
        "map",
        "method",
        "condition",
        "element",
        "image",
        "server",
        "multer",
        "reference",
        "address",
        "database",
        "Express",
        "API",
        "NodeJS",
        "environment",
        "Bcrypt",
        "users",
        "password",
        "Used",
        "mongoose",
        "MongoDB",
        "database",
        "data",
        "model",
        "schema",
        "methodology",
        "application",
        "development",
        "analysis",
        "design",
        "unit",
        "testing",
        "business",
        "applications",
        "SDLC",
        "Jira",
        "progress",
        "project",
        "design",
        "maintenance",
        "Git",
        "Repositories",
        "views",
        "access",
        "control",
        "strategies",
        "scrum",
        "meetings",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Reactjs",
        "Nodejs",
        "Expressjs",
        "Mongo",
        "DB",
        "Bootstrap",
        "Git",
        "jQuery",
        "Jira",
        "Front",
        "End",
        "Developer",
        "ALK",
        "Technologies",
        "Princeton",
        "NJ",
        "December",
        "January",
        "Description",
        "ALK",
        "technologies",
        "transportation",
        "technology",
        "company",
        "services",
        "vehicle",
        "driver",
        "food",
        "delivery",
        "application",
        "React",
        "employees",
        "customers",
        "information",
        "vehicle",
        "message",
        "driver",
        "schedule",
        "frontend",
        "developer",
        "UI",
        "page",
        "Responsibilities",
        "wireframe",
        "application",
        "Adobe",
        "Photoshop",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "NodeJS",
        "MongoDB",
        "wireframe",
        "JavaScript",
        "jQuery",
        "CSS",
        "Media",
        "Queries",
        "Bootstrap",
        "pages",
        "screen",
        "size",
        "platform",
        "orientation",
        "navigation",
        "bar",
        "director",
        "application",
        "pages",
        "AJAX",
        "request",
        "API",
        "data",
        "post",
        "data",
        "data",
        "data",
        "end",
        "developer",
        "request",
        "end",
        "API",
        "Git",
        "version",
        "control",
        "Jira",
        "task",
        "management",
        "environment",
        "software",
        "development",
        "lifecycle",
        "hook",
        "SDLC",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Nodejs",
        "Express",
        "MongoDB",
        "Git",
        "UI",
        "Developer",
        "HealthEdge",
        "Burlington",
        "MA",
        "September",
        "November",
        "Description",
        "HealthEdge",
        "company",
        "nextgeneration",
        "core",
        "administration",
        "coordination",
        "health",
        "plans",
        "customers",
        "application",
        "user",
        "data",
        "customers",
        "services",
        "responsibility",
        "mockups",
        "application",
        "application",
        "Responsibilities",
        "mockups",
        "application",
        "Adobe",
        "Photoshop",
        "End",
        "applications",
        "user",
        "UI",
        "web",
        "pages",
        "web",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "HTML",
        "CSS",
        "pages",
        "ups",
        "UI",
        "review",
        "UI",
        "designer",
        "Business",
        "Units",
        "CSS",
        "Media",
        "Queries",
        "application",
        "Cooperated",
        "Back",
        "End",
        "developer",
        "functionalities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Requirement",
        "Analysis",
        "Implementation",
        "timelines",
        "project",
        "environment",
        "scrum",
        "meeting",
        "morning",
        "progress",
        "project",
        "Environment",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "JSON",
        "AJAX",
        "Java",
        "MySQL",
        "Education",
        "Master",
        "Science",
        "Digital",
        "Media",
        "Northeastern",
        "University",
        "Boston",
        "MA",
        "Skills",
        "Bootstrap",
        "years",
        "Git",
        "years",
        "JavaScript",
        "years",
        "Jira",
        "years",
        "json",
        "years",
        "XML",
        "jQuery",
        "HTML",
        "SQL",
        "Linux",
        "CertificationsLicenses",
        "Drivers",
        "License",
        "Additional",
        "Information",
        "Skills",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "Java",
        "JavaScript",
        "ES6ES5",
        "C",
        "PHP",
        "DOM",
        "AJAX",
        "jQuery",
        "Angular",
        "React",
        "Nodejs",
        "P5js",
        "Bootstrap",
        "PrimeNG",
        "Angular",
        "Material",
        "Typescript",
        "Express",
        "Mongoose",
        "MongoDB",
        "REST",
        "ATOM",
        "Visual",
        "Studio",
        "Code",
        "Brackets",
        "Dreamweaver",
        "Eclipse",
        "Unity",
        "Testing",
        "Tools",
        "Karma",
        "Jasmine",
        "Mocha",
        "Version",
        "Controls",
        "Git",
        "Github",
        "Application",
        "Servers",
        "Operating",
        "Systems",
        "Windows",
        "XPVista710",
        "MAC",
        "Linuxs",
        "Task",
        "Management",
        "Jira",
        "Slack",
        "Zoom"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:50:44.746159",
    "resume_data": "Mean Stack Developer Mean Stack span lDeveloperspan Mean Stack Developer Oscar Insurance Reston VA VA Web Developer with 5 years experience in Full Stack Development MEAN and MERN Stack in analysis design development implementation and troubleshooting various webbased application Used to work in ecommerce and healthcare industries Experience in building MEAN applications using MongoDB ExpressJS Angular 2 NodeJS creating RESTful Web services with NodeJS ExpressJS Extensive experience in designing professional UI Web applications using front end technologies like HTML5 CSS3 JavaScript jQuery AJAX HTTP JSON Strong skill in building Responsive Web Application with Bootstrap CSS media queries Produced visually appealing designs focused on usability DOM Layout utility UX crossbrowser compatibility and hence worked on safari IE Firefox and Google chrome Experienced in ReactJS and working with Redux architecture using complex ObjectOriented concepts in improving the performance of the websites Experienced in open sources libraries for Angular like Angular Material and PrimeNG Experienced in ServerSide programming using Nodejs and node package like Expressjs CORS Bodyparser Mongoose and JWT for the creating more secure routes Used ExpressJS to create RESTful API including methods get put post and delete Used mongoose to connect with the MongoDB database and built the modal Experienced in CJavaScript with Unity Basic idea in cloud computing and Amazon Web Services AWS Proficient in Photoshop and experienced in Illustrator which are used to design the UI and mockups Used Postman to test the functionality of RESTful API Expertise in debugging and troubleshooting existing code using Jira Developer Tools and Git as Version Control System Worked in Software Development Lifecycle SDLC application design functional and technical specs and use case development using UML Followed Waterfall Agile methodologies like Test Driven Development TDD SCRUM and Pair Programming Work Experience Mean Stack Developer Oscar Insurance New York NY July 2017 to Present Description Oscar Insurance is the company providing health insurance to personalfamily and healthcare advisory This application is created for internal users to manage their information of the customers modify the plans that they provide In addition the managers have higher authorization to see the information of their agents like how many clients that the agent has the plan they sold and how much profit they earn My responsibilities is to build the full stack with Angular in frontend NodeJS in backend and MongoDB as the database Responsibilities Designed and developed a single page application with HTML5 CSS3 Bootstrap JavaScript Typescript Angular45 Used Angular CLI to generate components ng g c test ng test and run the application ng serve Used Routing Module to set the route for different components and put children routes into the components Used Http client request to call RESTful API to do get to fetch the data put to update the data post to add new data and delete to remove the data from MongoDB Completed authentication with json web token which is stored in the local storage Used twoway ngModel property disable event click binding to manipulate the DOM Implemented form validation by templatedriven and React Form to customize the additional validation Created dynamical table by using structure directive attribute directive to dynamically display the data in the front end like ngFor ngIf and ngStyle Implemented HTTP Client Module and AuthService in the ngOnInit which is the buildin lifecycle hook of the Angular Created a custom Pipe to filter the data in the table and used default pipe like lowercase pipe for the user input date pipe for recording the date Developed a RESTful API in Nodejs with Expressjs and use Express to handle the CRUD methods Implemented component communication by input output and service Import service to create a router guard to make sure the security in the backend Used interceptor to attach authorization header and bearer token to the HTTP request Used Bcrypt to hash users password upon successful signup Used multer storage to store the image in the server and put the reference address in the MongoDB database Created several models for the database and template driven to make sure the backend receives the correct data type Used mongoose to build the schema of the data and connect to the MongoDB Worked in a agile environment used Git for the version control and Jira for the project management Used Slack and Zoom for communication Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Angular 45 Nodejs Expressjs Mongo DB mongoose Bootstrap Git bcript Jira Web Developer Jackrabbit Design Milton MA February 2016 to June 2017 Description Jackrabbit is a company to provide website development service web application development to their clients and corporate branding The client is a physical therapy center and this application is created for internal users to manage the information of their patients modify their daily schedule and the treatment which combines image and the description etc Users can access to the patients account and attach the treatment to the profile of the patient then print it out to the patient My role of this project is to create the server in NodeJS make it connect to the MongoDB and the client side which is made by React Responsibilities Designed and developed a single page application using HTML5 CSS3 JavaScript ReactJS Redux and Bootstrap Worked on responsive design with Bootstrap and CSS3 Media Queries Maintained state in the stores and dispatched the actions and reducer using Redux Implemented the Drag and Drop functionality using ReactDraggable Implemented router by using reactrouterdom to set path for different components Stored the json web token in the local storage to complete the authentication in the frontend Implemented component communication by props parent to child Implemented the form validation by costuming a function inside a component Used Axios in the frontend to send the CRUD request to the backend like get to fetch the data put to update the data post to add the data and delete to remove the data from the database Created dynamic web page with state in stateful class components for the toplevel components Created multiple reusable functional stateless components for the class component such as input button and the logo etc Used twoway data binding to transfer the value of the input to the state in the input element Displayed the data in a dynamic table by looping the content with map method and used if condition to show or hide a certain element Kept the image in the server by using multer and send the reference address to the MongoDB database Used Express to create the RESTful API in NodeJS environment Used Bcrypt to hash users password upon successful signup Used mongoose to connect with the MongoDB database and create data model for the schema Participated in Agile methodology for application development and involved in analysis design coding and unit testing of business applications SDLC Used Jira to track the progress of the project Responsible for design and maintenance of the Git Repositories views and the access control strategies Participated in daily scrum meetings to make sure what was accomplished and what needs to be finished next Environment HTML5 CSS3 JavaScript Reactjs Nodejs Expressjs Mongo DB mongoose Bootstrap Git jQuery bcrypt Jira Front End Developer ALK Technologies Princeton NJ December 2014 to January 2016 Description ALK technologies is a a transportation technology company which provides several services like vehicle rental professional driver assisting routing food delivery etc This application is made by React for the internal employees to check and manage their customers information track the vehicle send the message to their driver and make the schedule I am the frontend developer to design and implement the UI and make the page dynamicresponsive Responsibilities Designed the wireframe of the application with Adobe Photoshop This application is made by HTML CSS JavaScript jQuery NodeJS MongoDB Implemented the wireframe and made it dynamical with JavaScript and jQuery Used CSS with Media Queries and Bootstrap to make the pages responsive which based on the screen size platform and orientation Created a navigation bar to director application to the different pages Used AJAX to send the request to the API like get to fetch the data post to update the data put to add new data and delete to remove the data Cooperated with back end developer to send the request in front end to the RESTful API Used Git for the version control and Jira for the task management Worked in Agile environment and software development lifecycle hook SDLC Environment HTML5 CSS3 JavaScript jQuery Bootstrap Nodejs Express MongoDB Git UI Developer HealthEdge Burlington MA September 2013 to November 2014 Description HealthEdge is the company providing nextgeneration core administration and coordination for transformative health plans to their customers This is an application which developed for the internal user to manage the data of their customers and the services that they provide My responsibility is to design and implement the mockups of the application make the application responsive and dynamic Responsibilities Designed the mockups of the application with Adobe Photoshop Designed the Front End applications user interactive UI web pages using web technologies like HTML CSS JavaScript and jQuery Developed nonfunctional HTML CSS pages from the mock ups and involved in UI review with UI designer and Business Units Used CSS Media Queries to make the application responsive Cooperated with Back End developer to make sure the functionalities work Involved in the Software Development Life Cycle phases like Requirement Analysis Implementation and estimating the timelines for the project Worked in an agile environment and had scrum meeting every morning to track the progress of the project Environment HTML CSS JavaScript jQuery JSON AJAX Java MySQL Education Master of Science in Digital Media Northeastern University Boston MA Skills Bootstrap 4 years Git 4 years JavaScript 5 years Jira 4 years json 4 years XML jQuery HTML SQL Linux CertificationsLicenses Drivers License Additional Information Skills Web Technologies HTML CSS Java JavaScript ES6ES5 C PHP JSON DOM AJAX jQuery Angular 2 React 1516 Nodejs P5js Bootstrap 34 PrimeNG Angular Material Typescript Express Mongoose MongoDB REST IDEs ATOM Visual Studio Code Brackets Dreamweaver Eclipse Unity Testing Tools Karma Jasmine Mocha Version Controls Git Github Application Servers Operating Systems Windows XPVista710 MAC Linuxs Task Management Jira Slack Zoom",
    "unique_id": "3b5b69a1-aab3-4db5-b32b-40bc43442fc7"
}