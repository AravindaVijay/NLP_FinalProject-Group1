{
    "clean_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Sony Corp Miami FL Brief I am working in IT industry for more than 11 years and have been into lead role for two of my recent project I am good with backend and worked with Numpy Scipy for numerical analysis and for MVCs I have worked on django 1620 version I do have hands on experience in working on map reduce algorithm Tensor flow and NN building I have good command in the python scripting and python programming from scratch to go live I have worked on each segment of project development Technical Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Work Experience Sr Python Developer Sony Corp New York NY December 2016 to Present Responsibilities Generously practiced on data cleaning and ensured data quality consistency integrity using Pandas NumPy Generalized linear models Poisson regression and single and multiple linear regressions Principal components analysis common factor analysis and linear discriminate analysis Other machine learning models including support vector machine Developing test automation framework using python and SeeTest APIs Genetic algorithms and heuristic modeling for nondifferentiable problems Cluster analysis and unsupervised learning Used pandas Numpy Scipy Matplotlib Scikitlearn in Python for developing various machine learning algorithms Development of automation of Kubernetes clusters Used Python Libraries to write fully functioning test automation process Built various graphs for business decisionmaking using Python matplot library Worked on Python OpenStack APIs and used Numpy for Numerical analysis Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL package to retrieve information Used Hive to store the data and perform data cleaning steps for huge datasets Scraped and retrieved web data as JSON using Scrapy presented with Pandas library Automating Jenkins to create Docker Images and push to container repository Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Automated the existing scripts for performance calculations using NumPy Used Python Numpy Scipy Pandas to develop variety of models and algorithms for analytic purpose Processing cleansing and verifying the integrity of data used for analysis before ingestion Data mining optimization algorithms to analyze data on top of HadoopHive Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python React Automation Python 3x Scipy Neural network Kubernetes Flask Lambda Django 14 Angular ORM Elastic Search GitHub Linux Pandas Shell Scripting Lead Python Developer Nvidia INC Santa Clara CA October 2014 to October 2016 Responsibilities Developed views and templates with Python and FLASK view controller Templating language to create a userfriendly website interface Ensured high quality data collection and maintaining the integrity of the data Prediction of Time Series Financial Data using LSTM for Algorithmic Trading by Tensorflow Object Detection for Full Motion Video with TensorFlow Object Detection with Nvidia DIGITS Implemented a CNN neural network for detecting invasive animal species using thermal images Tensorflow Image creation using Generative Adversarial Networks in Tensorflow and Nvidia DIGITS Established DevOps protocols integrated collaborative Git and deploying fully tested production features Worked on rebranding the existing web pages to clients according to the type of deployment Used many regular expressions in order to match the pattern with the existing one Configuring and managing Openstack components such as keystone nova neutron glance swift Heat Implemented monitoring and established best practices around using elastic search Developed views and templates with DVC and template language to create a userfriendly web interface Developed and tested many features for dashboard using Python and Bootstrap Used Python Numpy Scipy Pandas ScikitLearn Seaborn and Spark 20 PySpark MLlib to develop variety of models and algorithms for analytic purposes Familiar with MongoDB clusters performance backup and recovery Worked on Migrating data from Django ORM to MySQL database with complete data integrity Implemented clientside Interface using React JS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Implemented Mock REST API using express framework in Node JS Experience in using ScikitLearn and Stats models in Python for Machine Learning and Data Mining Development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 3 Django 16 React Angular Docker Ansible XML MySQL microservices Pandas Scipy AJAX Flask Oracle SQL Server SQL JavaScript GITHub Python Developer Inpensa INC Edison NJ September 2011 to July 2014 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Experience in streaming the data between Kafka and other databases Experienced with databases using ORMsDOMs for integrating with MySQL PostgresSQL MongoDB Working with backend python automation CI pipelines Docker and cloud provisioningautomation Developing server based web application to determine patient journey using Flask Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Experience working with realtime streaming solutions using Kafka Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10g and MongoDB Image manipulation backend services for real time use as RESTful API Automated the existing scripts for performance calculations using Numpy and SQL alchemy Performed debugging and troubleshooting the web applications using Git as a versioncontrolling tool to collaborate and coordinate with the team members Development of Python APIs to dump the structures in the Processor at the failure point for debugging Created a Single Page Application module using Angular JS to manage payee list for customers Developed AngularJs controllers services factories and custom directives Environment Python Django XMLchef Java AWS Kafka Angularjs CSSPostgreSQL MySQL JSON DHTML HTML JavaScript Shell Scripts agile Microservices Restfull UNIX and Windows Python Developer Cephalon Frazer PA March 2008 to August 2011 Responsibilities Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Experience in creating JavaScript for using DML operation with MongoDB Usage of advance features like in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Used Amazon Web Services AWS for improved efficiency of storage and fast access Created tables utilizing PyQtto display customer and policy information and add delete update customer records Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Developed Lambda scripts to automate ETL Jobs Used Python OS module on UNIX environment made job cloning and forking Handled all the client side validation using maven and Jenkins with python Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML chef Java Angularjs MySQL JSON DHTML Shell Scripts lambda agile Restfull UNIX and Windows Java Developer Equifax Atlanta GA May 2006 to February 2008 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL database Nodejs as the backend Development of Python APIs to dump the structures in the Processor at the failure point for debugging Environment C C HTML ORM CSS PLSQL Linux and Windows Python Linux HTML CSS Django Infomatica OOAOOD Education Bachelors Skills DJANGO 10 years PYTHON 10 years XML 8 years MYSQL 10 years MONGODB 10 years CertificationsLicenses Drivers License Additional Information Technical Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed",
    "entities": [
        "Tensorflow Object Detection for Full Motion Video",
        "GIT",
        "API RESTful Web Services",
        "linear",
        "Python Django AWS J2EE Postgre",
        "Pandas",
        "React JS Managed",
        "Development of Python",
        "Developed",
        "ORMsDOMs",
        "HTML CSS JavaScript",
        "Created a Single Page Application",
        "maven",
        "Interface",
        "Nodejs",
        "Performed",
        "Created Python",
        "Python Experienced",
        "Data Mining Development of Web Services",
        "UNIX",
        "Djangos",
        "Created",
        "CA",
        "WAMP Windows Apache",
        "Git",
        "Python Developer Inpensa INC Edison NJ",
        "UI",
        "Windows Python Developer Cephalon Frazer",
        "Principal",
        "HTML CSS JQuery JSON",
        "Design Patterns",
        "CNN",
        "Django Supportedmaintained",
        "Scrapy",
        "Flask Generating",
        "LAMP Linux",
        "ScikitLearn",
        "OpenStack",
        "CertificationsLicenses Drivers License Additional Information Technical Summary Good",
        "Kubernetes Worked",
        "MultiThreading Exception Handling and Collections Proficient",
        "Work Experience Sr Python Developer Sony Corp New York",
        "Amazon Web Services AWS",
        "Linux",
        "Panda",
        "WAMP",
        "Python for Machine Learning",
        "Design Development and Deployment Testing and Implementation",
        "SQL",
        "Flask",
        "REST",
        "SOAP",
        "XML",
        "Restfull",
        "DML",
        "Kubernetes",
        "Present Responsibilities Generously",
        "PHP",
        "NoSQL",
        "Environment Python React Automation Python",
        "FLASK",
        "JQuery Developed",
        "DevOps",
        "SeeTest APIs Genetic",
        "Application",
        "Tensorflow",
        "SQL Alchemy",
        "Developer Nvidia INC",
        "Generative Adversarial Networks",
        "PySpark MLlib",
        "Refactor PythonDjango",
        "PyQtto",
        "MVC",
        "Node",
        "Spark",
        "Agile"
    ],
    "experience": "Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Work Experience Sr Python Developer Sony Corp New York NY December 2016 to Present Responsibilities Generously practiced on data cleaning and ensured data quality consistency integrity using Pandas NumPy Generalized linear models Poisson regression and single and multiple linear regressions Principal components analysis common factor analysis and linear discriminate analysis Other machine learning models including support vector machine Developing test automation framework using python and SeeTest APIs Genetic algorithms and heuristic modeling for nondifferentiable problems Cluster analysis and unsupervised learning Used pandas Numpy Scipy Matplotlib Scikitlearn in Python for developing various machine learning algorithms Development of automation of Kubernetes clusters Used Python Libraries to write fully functioning test automation process Built various graphs for business decisionmaking using Python matplot library Worked on Python OpenStack APIs and used Numpy for Numerical analysis Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL package to retrieve information Used Hive to store the data and perform data cleaning steps for huge datasets Scraped and retrieved web data as JSON using Scrapy presented with Pandas library Automating Jenkins to create Docker Images and push to container repository Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Automated the existing scripts for performance calculations using NumPy Used Python Numpy Scipy Pandas to develop variety of models and algorithms for analytic purpose Processing cleansing and verifying the integrity of data used for analysis before ingestion Data mining optimization algorithms to analyze data on top of HadoopHive Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python React Automation Python 3x Scipy Neural network Kubernetes Flask Lambda Django 14 Angular ORM Elastic Search GitHub Linux Pandas Shell Scripting Lead Python Developer Nvidia INC Santa Clara CA October 2014 to October 2016 Responsibilities Developed views and templates with Python and FLASK view controller Templating language to create a userfriendly website interface Ensured high quality data collection and maintaining the integrity of the data Prediction of Time Series Financial Data using LSTM for Algorithmic Trading by Tensorflow Object Detection for Full Motion Video with TensorFlow Object Detection with Nvidia DIGITS Implemented a CNN neural network for detecting invasive animal species using thermal images Tensorflow Image creation using Generative Adversarial Networks in Tensorflow and Nvidia DIGITS Established DevOps protocols integrated collaborative Git and deploying fully tested production features Worked on rebranding the existing web pages to clients according to the type of deployment Used many regular expressions in order to match the pattern with the existing one Configuring and managing Openstack components such as keystone nova neutron glance swift Heat Implemented monitoring and established best practices around using elastic search Developed views and templates with DVC and template language to create a userfriendly web interface Developed and tested many features for dashboard using Python and Bootstrap Used Python Numpy Scipy Pandas ScikitLearn Seaborn and Spark 20 PySpark MLlib to develop variety of models and algorithms for analytic purposes Familiar with MongoDB clusters performance backup and recovery Worked on Migrating data from Django ORM to MySQL database with complete data integrity Implemented clientside Interface using React JS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Implemented Mock REST API using express framework in Node JS Experience in using ScikitLearn and Stats models in Python for Machine Learning and Data Mining Development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 3 Django 16 React Angular Docker Ansible XML MySQL microservices Pandas Scipy AJAX Flask Oracle SQL Server SQL JavaScript GITHub Python Developer Inpensa INC Edison NJ September 2011 to July 2014 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Experience in streaming the data between Kafka and other databases Experienced with databases using ORMsDOMs for integrating with MySQL PostgresSQL MongoDB Working with backend python automation CI pipelines Docker and cloud provisioningautomation Developing server based web application to determine patient journey using Flask Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Experience working with realtime streaming solutions using Kafka Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10 g and MongoDB Image manipulation backend services for real time use as RESTful API Automated the existing scripts for performance calculations using Numpy and SQL alchemy Performed debugging and troubleshooting the web applications using Git as a versioncontrolling tool to collaborate and coordinate with the team members Development of Python APIs to dump the structures in the Processor at the failure point for debugging Created a Single Page Application module using Angular JS to manage payee list for customers Developed AngularJs controllers services factories and custom directives Environment Python Django XMLchef Java AWS Kafka Angularjs CSSPostgreSQL MySQL JSON DHTML HTML JavaScript Shell Scripts agile Microservices Restfull UNIX and Windows Python Developer Cephalon Frazer PA March 2008 to August 2011 Responsibilities Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Experience in creating JavaScript for using DML operation with MongoDB Usage of advance features like in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Used Amazon Web Services AWS for improved efficiency of storage and fast access Created tables utilizing PyQtto display customer and policy information and add delete update customer records Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Developed Lambda scripts to automate ETL Jobs Used Python OS module on UNIX environment made job cloning and forking Handled all the client side validation using maven and Jenkins with python Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML chef Java Angularjs MySQL JSON DHTML Shell Scripts lambda agile Restfull UNIX and Windows Java Developer Equifax Atlanta GA May 2006 to February 2008 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL database Nodejs as the backend Development of Python APIs to dump the structures in the Processor at the failure point for debugging Environment C C HTML ORM CSS PLSQL Linux and Windows Python Linux HTML CSS Django Infomatica OOAOOD Education Bachelors Skills DJANGO 10 years PYTHON 10 years XML 8 years MYSQL 10 years MONGODB 10 years CertificationsLicenses Drivers License Additional Information Technical Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Srspan",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Sony",
        "Corp",
        "Miami",
        "FL",
        "Brief",
        "IT",
        "industry",
        "years",
        "role",
        "project",
        "backend",
        "Numpy",
        "Scipy",
        "analysis",
        "MVCs",
        "django",
        "version",
        "hands",
        "experience",
        "map",
        "algorithm",
        "Tensor",
        "flow",
        "NN",
        "building",
        "command",
        "python",
        "scripting",
        "python",
        "programming",
        "scratch",
        "segment",
        "project",
        "development",
        "Technical",
        "Summary",
        "Good",
        "experience",
        "Python",
        "applications",
        "technologies",
        "Python",
        "MVC",
        "Django",
        "Flask",
        "knowledge",
        "Python",
        "experience",
        "Python",
        "softwares",
        "tools",
        "libraries",
        "libraries",
        "Numpy",
        "Scipy",
        "PySide",
        "twitter",
        "Pickle",
        "Pandas",
        "MySQL",
        "database",
        "connectivity",
        "improvise",
        "software",
        "development",
        "process",
        "MVC",
        "architecture",
        "Django",
        "web",
        "applications",
        "OOP",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Proficient",
        "Web",
        "Services",
        "SOAP",
        "Python",
        "XML",
        "JSON",
        "understanding",
        "Design",
        "Patterns",
        "MVC",
        "Python",
        "Algorithms",
        "Python",
        "Data",
        "Structures",
        "knowledge",
        "NoSQL",
        "platform",
        "MongoDB",
        "Couch",
        "base",
        "WAMP",
        "LAMP",
        "Architecture",
        "use",
        "Linux",
        "Ubuntu",
        "SSH",
        "FlaskDjango",
        "understanding",
        "Bit",
        "Bucket",
        "GIT",
        "version",
        "control",
        "system",
        "knowledge",
        "REST",
        "API",
        "development",
        "Experience",
        "Agile",
        "SDLC",
        "methodologies",
        "problem",
        "skills",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "MVC",
        "frameworks",
        "Django",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "PHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "PHP",
        "Architecture",
        "Pythons",
        "modules",
        "Numpy",
        "expressions",
        "collections",
        "times",
        "OS",
        "modules",
        "applications",
        "Python",
        "Django",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Services",
        "events",
        "analysis",
        "Django",
        "client",
        "website",
        "DJANGO",
        "CMS",
        "system",
        "website",
        "Created",
        "Python",
        "Bash",
        "scripts",
        "increase",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "Django",
        "CMS",
        "promotion",
        "management",
        "system",
        "ability",
        "forms",
        "admin",
        "interface",
        "Part",
        "team",
        "REST",
        "APIs",
        "Python",
        "python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Sony",
        "Corp",
        "New",
        "York",
        "NY",
        "December",
        "Present",
        "Responsibilities",
        "data",
        "cleaning",
        "data",
        "quality",
        "consistency",
        "integrity",
        "Pandas",
        "NumPy",
        "linear",
        "models",
        "Poisson",
        "regression",
        "regressions",
        "Principal",
        "components",
        "analysis",
        "factor",
        "analysis",
        "analysis",
        "machine",
        "learning",
        "models",
        "support",
        "vector",
        "machine",
        "test",
        "automation",
        "framework",
        "python",
        "SeeTest",
        "APIs",
        "algorithms",
        "modeling",
        "problems",
        "Cluster",
        "analysis",
        "pandas",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "Scikitlearn",
        "Python",
        "machine",
        "learning",
        "Development",
        "automation",
        "Kubernetes",
        "Python",
        "Libraries",
        "test",
        "automation",
        "process",
        "graphs",
        "business",
        "Python",
        "matplot",
        "library",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Hive",
        "data",
        "data",
        "steps",
        "datasets",
        "web",
        "data",
        "JSON",
        "Scrapy",
        "Pandas",
        "library",
        "Automating",
        "Jenkins",
        "Docker",
        "Images",
        "repository",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "Python",
        "Numpy",
        "Scipy",
        "Pandas",
        "variety",
        "models",
        "algorithms",
        "purpose",
        "Processing",
        "cleansing",
        "integrity",
        "data",
        "analysis",
        "ingestion",
        "Data",
        "mining",
        "optimization",
        "data",
        "top",
        "HadoopHive",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Environment",
        "Python",
        "React",
        "Automation",
        "Python",
        "Scipy",
        "Neural",
        "network",
        "Kubernetes",
        "Flask",
        "Lambda",
        "Django",
        "Angular",
        "ORM",
        "Elastic",
        "Search",
        "GitHub",
        "Linux",
        "Pandas",
        "Shell",
        "Scripting",
        "Lead",
        "Python",
        "Developer",
        "Nvidia",
        "INC",
        "Santa",
        "Clara",
        "CA",
        "October",
        "October",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "FLASK",
        "controller",
        "Templating",
        "language",
        "website",
        "interface",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "Prediction",
        "Time",
        "Series",
        "Financial",
        "Data",
        "LSTM",
        "Algorithmic",
        "Trading",
        "Tensorflow",
        "Object",
        "Detection",
        "Motion",
        "Video",
        "TensorFlow",
        "Object",
        "Detection",
        "Nvidia",
        "DIGITS",
        "CNN",
        "network",
        "animal",
        "species",
        "images",
        "Tensorflow",
        "Image",
        "creation",
        "Generative",
        "Adversarial",
        "Networks",
        "Tensorflow",
        "Nvidia",
        "DIGITS",
        "DevOps",
        "protocols",
        "Git",
        "production",
        "features",
        "web",
        "pages",
        "clients",
        "type",
        "deployment",
        "expressions",
        "order",
        "pattern",
        "Configuring",
        "Openstack",
        "components",
        "keystone",
        "nova",
        "neutron",
        "glance",
        "swift",
        "Heat",
        "monitoring",
        "practices",
        "search",
        "views",
        "templates",
        "DVC",
        "template",
        "language",
        "web",
        "interface",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "Python",
        "Numpy",
        "Scipy",
        "Pandas",
        "ScikitLearn",
        "Seaborn",
        "Spark",
        "PySpark",
        "MLlib",
        "variety",
        "models",
        "algorithms",
        "purposes",
        "MongoDB",
        "clusters",
        "backup",
        "recovery",
        "Migrating",
        "data",
        "Django",
        "ORM",
        "MySQL",
        "database",
        "data",
        "integrity",
        "clientside",
        "Interface",
        "React",
        "JS",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQLdb",
        "package",
        "information",
        "Mock",
        "REST",
        "API",
        "framework",
        "Node",
        "JS",
        "Experience",
        "ScikitLearn",
        "Stats",
        "models",
        "Python",
        "Machine",
        "Learning",
        "Data",
        "Mining",
        "Development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Python",
        "Django",
        "React",
        "Angular",
        "Docker",
        "Ansible",
        "XML",
        "MySQL",
        "Pandas",
        "Scipy",
        "AJAX",
        "Flask",
        "Oracle",
        "SQL",
        "Server",
        "SQL",
        "JavaScript",
        "GITHub",
        "Python",
        "Developer",
        "Inpensa",
        "INC",
        "Edison",
        "NJ",
        "September",
        "July",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "REST",
        "microservices",
        "REST",
        "template",
        "APIs",
        "UI",
        "client",
        "Experience",
        "data",
        "Kafka",
        "databases",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "PostgresSQL",
        "MongoDB",
        "python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "server",
        "web",
        "application",
        "journey",
        "Flask",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "Numpy",
        "matplotlib",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Worked",
        "design",
        "Application",
        "Experience",
        "streaming",
        "solutions",
        "Kafka",
        "APIs",
        "schema",
        "Nodejs",
        "serverside",
        "web",
        "applications",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "Bootstrap",
        "frontend",
        "framework",
        "web",
        "development",
        "MySQL",
        "web",
        "application",
        "Python",
        "Django",
        "AWS",
        "J2EE",
        "Postgre",
        "SQL",
        "MySQL",
        "Oracle",
        "g",
        "Image",
        "manipulation",
        "backend",
        "services",
        "time",
        "use",
        "API",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "SQL",
        "alchemy",
        "Performed",
        "debugging",
        "web",
        "applications",
        "Git",
        "tool",
        "team",
        "members",
        "Development",
        "Python",
        "APIs",
        "structures",
        "Processor",
        "failure",
        "point",
        "Single",
        "Page",
        "Application",
        "module",
        "Angular",
        "JS",
        "payee",
        "list",
        "customers",
        "controllers",
        "services",
        "factories",
        "custom",
        "directives",
        "Environment",
        "Python",
        "Django",
        "XMLchef",
        "Java",
        "AWS",
        "Kafka",
        "Angularjs",
        "CSSPostgreSQL",
        "MySQL",
        "JSON",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Microservices",
        "Restfull",
        "UNIX",
        "Windows",
        "Python",
        "Developer",
        "Cephalon",
        "Frazer",
        "PA",
        "March",
        "August",
        "Responsibilities",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Experience",
        "JavaScript",
        "DML",
        "operation",
        "Usage",
        "advance",
        "features",
        "python",
        "information",
        "applications",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "tables",
        "PyQtto",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "jobs",
        "shell",
        "Developed",
        "Lambda",
        "scripts",
        "ETL",
        "Jobs",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "client",
        "side",
        "validation",
        "maven",
        "Jenkins",
        "python",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "Python",
        "programs",
        "block",
        "codes",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "data",
        "management",
        "system",
        "MySQL",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Environment",
        "Python",
        "Django",
        "XML",
        "chef",
        "Java",
        "Angularjs",
        "MySQL",
        "JSON",
        "DHTML",
        "Shell",
        "Scripts",
        "lambda",
        "Restfull",
        "UNIX",
        "Windows",
        "Java",
        "Developer",
        "Equifax",
        "Atlanta",
        "GA",
        "May",
        "February",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "REST",
        "microservices",
        "REST",
        "template",
        "APIs",
        "UI",
        "client",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Worked",
        "design",
        "Application",
        "APIs",
        "schema",
        "Nodejs",
        "serverside",
        "web",
        "applications",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "Bootstrap",
        "frontend",
        "framework",
        "web",
        "development",
        "MySQL",
        "database",
        "Nodejs",
        "Development",
        "Python",
        "APIs",
        "structures",
        "Processor",
        "failure",
        "point",
        "Environment",
        "C",
        "C",
        "HTML",
        "ORM",
        "CSS",
        "PLSQL",
        "Linux",
        "Windows",
        "Python",
        "Linux",
        "HTML",
        "CSS",
        "Django",
        "Infomatica",
        "Education",
        "Bachelors",
        "Skills",
        "DJANGO",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "MYSQL",
        "years",
        "MONGODB",
        "years",
        "CertificationsLicenses",
        "Drivers",
        "License",
        "Additional",
        "Information",
        "Technical",
        "Summary",
        "Good",
        "experience",
        "Python",
        "applications",
        "technologies",
        "Python",
        "MVC",
        "Django",
        "Flask",
        "knowledge",
        "Python",
        "experience",
        "Python",
        "softwares",
        "tools",
        "libraries",
        "libraries",
        "Numpy",
        "Scipy",
        "PySide",
        "twitter",
        "Pickle",
        "Pandas",
        "MySQL",
        "database",
        "connectivity",
        "improvise",
        "software",
        "development",
        "process",
        "MVC",
        "architecture",
        "Django",
        "web",
        "applications",
        "OOP",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Proficient",
        "Web",
        "Services",
        "SOAP",
        "Python",
        "XML",
        "JSON",
        "understanding",
        "Design",
        "Patterns",
        "MVC",
        "Python",
        "Algorithms",
        "Python",
        "Data",
        "Structures",
        "knowledge",
        "NoSQL",
        "platform",
        "MongoDB",
        "Couch",
        "base",
        "WAMP",
        "LAMP",
        "Architecture",
        "use",
        "Linux",
        "Ubuntu",
        "SSH",
        "FlaskDjango",
        "understanding",
        "Bit",
        "Bucket",
        "GIT",
        "version",
        "control",
        "system",
        "knowledge",
        "REST",
        "API",
        "development",
        "Experience",
        "Agile",
        "SDLC",
        "methodologies",
        "problem",
        "skills",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "MVC",
        "frameworks",
        "Django",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "PHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "PHP",
        "Architecture",
        "Pythons",
        "modules",
        "Numpy",
        "expressions",
        "collections",
        "times",
        "OS",
        "modules",
        "applications",
        "Python",
        "Django",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Services",
        "events",
        "analysis",
        "Django",
        "client",
        "website",
        "DJANGO",
        "CMS",
        "system",
        "website",
        "Created",
        "Python",
        "Bash",
        "scripts",
        "increase",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "Django",
        "CMS",
        "promotion",
        "management",
        "system",
        "ability",
        "forms",
        "admin",
        "interface",
        "Part",
        "team",
        "REST",
        "APIs",
        "Python",
        "python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:44:28.605223",
    "resume_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Sony Corp Miami FL Brief I am working in IT industry for more than 11 years and have been into lead role for two of my recent project I am good with backend and worked with Numpy Scipy for numerical analysis and for MVCs I have worked on django 1620 version I do have hands on experience in working on map reduce algorithm Tensor flow and NN building I have good command in the python scripting and python programming from scratch to go live I have worked on each segment of project development Technical Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Work Experience Sr Python Developer Sony Corp New York NY December 2016 to Present Responsibilities Generously practiced on data cleaning and ensured data quality consistency integrity using Pandas NumPy Generalized linear models Poisson regression and single and multiple linear regressions Principal components analysis common factor analysis and linear discriminate analysis Other machine learning models including support vector machine Developing test automation framework using python and SeeTest APIs Genetic algorithms and heuristic modeling for nondifferentiable problems Cluster analysis and unsupervised learning Used pandas Numpy Scipy Matplotlib Scikitlearn in Python for developing various machine learning algorithms Development of automation of Kubernetes clusters Used Python Libraries to write fully functioning test automation process Built various graphs for business decisionmaking using Python matplot library Worked on Python OpenStack APIs and used Numpy for Numerical analysis Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL package to retrieve information Used Hive to store the data and perform data cleaning steps for huge datasets Scraped and retrieved web data as JSON using Scrapy presented with Pandas library Automating Jenkins to create Docker Images and push to container repository Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Automated the existing scripts for performance calculations using NumPy Used Python Numpy Scipy Pandas to develop variety of models and algorithms for analytic purpose Processing cleansing and verifying the integrity of data used for analysis before ingestion Data mining optimization algorithms to analyze data on top of HadoopHive Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Environment Python React Automation Python 3x Scipy Neural network Kubernetes Flask Lambda Django 14 Angular ORM Elastic Search GitHub Linux Pandas Shell Scripting Lead Python Developer Nvidia INC Santa Clara CA October 2014 to October 2016 Responsibilities Developed views and templates with Python and FLASK view controller Templating language to create a userfriendly website interface Ensured high quality data collection and maintaining the integrity of the data Prediction of Time Series Financial Data using LSTM for Algorithmic Trading by Tensorflow Object Detection for Full Motion Video with TensorFlow Object Detection with Nvidia DIGITS Implemented a CNN neural network for detecting invasive animal species using thermal images Tensorflow Image creation using Generative Adversarial Networks in Tensorflow and Nvidia DIGITS Established DevOps protocols integrated collaborative Git and deploying fully tested production features Worked on rebranding the existing web pages to clients according to the type of deployment Used many regular expressions in order to match the pattern with the existing one Configuring and managing Openstack components such as keystone nova neutron glance swift Heat Implemented monitoring and established best practices around using elastic search Developed views and templates with DVC and template language to create a userfriendly web interface Developed and tested many features for dashboard using Python and Bootstrap Used Python Numpy Scipy Pandas ScikitLearn Seaborn and Spark 20 PySpark MLlib to develop variety of models and algorithms for analytic purposes Familiar with MongoDB clusters performance backup and recovery Worked on Migrating data from Django ORM to MySQL database with complete data integrity Implemented clientside Interface using React JS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Implemented Mock REST API using express framework in Node JS Experience in using ScikitLearn and Stats models in Python for Machine Learning and Data Mining Development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 3 Django 16 React Angular Docker Ansible XML MySQL microservices Pandas Scipy AJAX Flask Oracle SQL Server SQL JavaScript GITHub Python Developer Inpensa INC Edison NJ September 2011 to July 2014 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Experience in streaming the data between Kafka and other databases Experienced with databases using ORMsDOMs for integrating with MySQL PostgresSQL MongoDB Working with backend python automation CI pipelines Docker and cloud provisioningautomation Developing server based web application to determine patient journey using Flask Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Experience working with realtime streaming solutions using Kafka Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10g and MongoDB Image manipulation backend services for real time use as RESTful API Automated the existing scripts for performance calculations using Numpy and SQL alchemy Performed debugging and troubleshooting the web applications using Git as a versioncontrolling tool to collaborate and coordinate with the team members Development of Python APIs to dump the structures in the Processor at the failure point for debugging Created a Single Page Application module using Angular JS to manage payee list for customers Developed AngularJs controllers services factories and custom directives Environment Python Django XMLchef Java AWS Kafka Angularjs CSSPostgreSQL MySQL JSON DHTML HTML JavaScript Shell Scripts agile Microservices Restfull UNIX and Windows Python Developer Cephalon Frazer PA March 2008 to August 2011 Responsibilities Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Experience in creating JavaScript for using DML operation with MongoDB Usage of advance features like in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Used Amazon Web Services AWS for improved efficiency of storage and fast access Created tables utilizing PyQtto display customer and policy information and add delete update customer records Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Developed Lambda scripts to automate ETL Jobs Used Python OS module on UNIX environment made job cloning and forking Handled all the client side validation using maven and Jenkins with python Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML chef Java Angularjs MySQL JSON DHTML Shell Scripts lambda agile Restfull UNIX and Windows Java Developer Equifax Atlanta GA May 2006 to February 2008 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed local deployments in Kubernetes creating local cluster and deploying application containers Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Worked in design and developing Application leveraging MongoDB Developed internal APIs using nodejs and used MongoDB for fetching the schema Worked on Nodejs for developing serverside web applications Refactor PythonDjango modules to deliver certain format of data Used Bootstrap frontend framework for faster and easier web development with MySQL database Nodejs as the backend Development of Python APIs to dump the structures in the Processor at the failure point for debugging Environment C C HTML ORM CSS PLSQL Linux and Windows Python Linux HTML CSS Django Infomatica OOAOOD Education Bachelors Skills DJANGO 10 years PYTHON 10 years XML 8 years MYSQL 10 years MONGODB 10 years CertificationsLicenses Drivers License Additional Information Technical Summary Good experience in Python in creating scalable and robust applications along with other technologies Experienced in Python based MVC frameworks Django Flask Good knowledge in Python coding and JSON Skillful experience in Python by developing softwares using new tools libraries used libraries Numpy Scipy PySide twitter matplotlib Pickle Pandas dataframe MySQL dB for database connectivity to improvise software development process Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Proficient in developing Web Services SOAP RESTful in Python using XML JSON Solid understanding in Design Patterns MVC Python Algorithms Python Data Structures Good knowledge in NoSQL platform such as MongoDB and Couch base Experienced in WAMP and LAMP Architecture Extensive use of Linux Ubuntu SSH FlaskDjango Good understanding on Bit Bucket and GIT version control system Strong knowledge with REST API development Experience with Agile and SDLC methodologies Highly proficient in analytical problem solving skills Experienced with full software development lifecycle designing and architecting scalable platforms object oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL Python PHP Architecture Experienced in Pythons modules like Numpy regular expressions collections dates times and OS modules Experienced in developing webbased applications using Python Django Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Part of team implementing REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed",
    "unique_id": "c66086b4-2310-4a03-9a84-19e649696b1f"
}