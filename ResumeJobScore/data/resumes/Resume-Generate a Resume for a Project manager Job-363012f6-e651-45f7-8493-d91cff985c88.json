{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Aetna Around 6 years of extensive experience in system analysis design development and implementation of web based and clientserver application using Python 3x Django HTML5 CSS3 JavaScript AJAX Experienced in automating deployment to a distributed architecture with tools such as Chef Utilized the latest front end Technologies such as HTML5 and CSS3 for layouts Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Active Participation in full development life cycle requirements design architecture development testing Expertise in working with server side technologies including databases Restful API and MVC design patterns using Python Flask framework Experience in developing software applications for implementing Big Data environment Strong skills in developingdeploying RestfulSOAP Web Services using Jersey SOAP Expertise in implementing ObjectOriented technologies Web basedclientserverarchitecture service oriented architecture and Object RelationalMappings ORM Good working experience in processing large datasets with Spark using Scala and Pyspark Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience in using Version Control Systems like GIT SVN and CVS Good Experience in Linux Bash scripting and following PEP Guidelines in Python Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in installing configuring modifying testing and deploying applications with Apache Experienced in MVW frameworks like Django Angular JS Java Script JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services AWS Experience in Implementation of MVC architecture using Spring MVC and SOAP web service and SOAP UI Experienced in developing Web Services with Python programming language Experience with the uses of NoSQL platform such as MongoDB Experienced in WAMP Windows Apache MYSQL and Python and LAMP Linux Apache MySQL and Python Architecture Work Experience Sr Python Developer Aetna Hartford CT August 2016 to Present Responsibilities Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developed and tested many features for dashboard using Python 3x Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked as a Python developer for Data Mining and Trend Analysis in Operations Dashboard Project Data Designed and developed Python Django templates and UI components using HTML CSS JavaScript JQuery and JSON Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Creating data pipelines using Apache Spark a bigdata processing and computing framework Django Framework that was used in developing web applications to implement the model view control architecture Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Implemented machine learning algorithms in Spark and Python for segmentation of data Developed web clientserver using restful APIs Experienced in NoSQL technologies like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL database Understands the complex processing needs of big data and has experience developing codes and modules Automated JIRA processes using python and bash scripts ExportedImported data between different data sources using SQL Server Management Studio Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL  package Creating data pipelines using Apache Spark a bigdata processing and computing framework Designed code in Python to interact with diverse instances in Amazon Web Services AWS Implemented web applications in Flask and spring frameworks following MVC architecture Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Involved in the development ORM Queries Automated RabbitMQ cluster installations and configuration using PythonBash Developed tested and deployed Storify Business featureset in Nodejs wih Express and MongoDB backend incorporating APIs Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Thorough knowledge in various front end tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Built various graphs for business decisionmaking using Python matplotlib library Used Python library Beautiful Soup for web scrapping Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in development methodologies like Agile Scrum and Waterfall Work with team of developers on python applications for RISK management Python Developer Best Buy Seattle WA July 2014 to August 2016 Responsibilities Used Python and Django creating graphics XML processing data exchange and business logic implementation Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Engaged with multiple popular frameworks and technologies including Spring Hibernate REST and PostgreSQL Leveraged spark Pyspark to manipulate unstructured data and apply text mining on users table utilization data Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Created Python and Bash tools to increase efficiency of call center application system operations and data conversion scripts for API Integrations Experience in leading multiple efforts to build NoSQL platforms along with SOLR search platform for maximizing business value by combining data science with big data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB Web Log Analysis using Apache Spark PySpark Increased the speed of preexisting search indexes through DJango ORM optimizations Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Designed and managed API system deployment using fast http server and AWS architecture Helped create a hybridweb application with both an angularbased frontend that consumes a RESTful API as well as a MVCstyle back end Developed Django Python Apache bash scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Python Developer UBS Secaucus NJ January 2013 to July 2014 Responsibilities Involved in developing and implementation of the web application using Python Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users used Python and Django creating graphics XML processing data exchange and business logic implementation Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed dynamic and browser compatible pages using HTML5 CSS3 JQuery and JavaScript and Angular JS To provide automation used Configuration Management Tool Chef Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Worked on Element Tree XML API in python to parse XML documents and load the data in database Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a demo website running on a Nodejs using the Express framework Jade and Backbonejs with Mustachejs for front end MVCtemplating Used Django configuration to manage URLs and application parameters added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud also Learnt to deploy projects using Jenkins Utilized PyUnit the Python unit test framework for all Python applications Develop Informatica mapping SQL concurrent workflows and unix scripts to execute the DFL jobs Used HTML CSS JQuery JSON and Java script for front end applications Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment and used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Python Developer CenturyLink Monroe LA August 2011 to December 2012 Responsibilities Well versed with design and development of presentation layer for web applications using technologies like HTML CSS Bootstrap and JavaScript Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python and its familiar framework Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Worked on Django APIs for accessing the database Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Python Unit test library was used for the purpose of testing many programs on Python and other codes Develop programs to automate the testing of RAID controller firmware and utilities using Python 27 Java Bash script Windows command line AutoIt AutoHotKey Collect and analyze data from actual work and show the table or graphic on the webpage using MVC SQL HTML CSS BootStrap JQuery AJAX and Javascripts Performed different testing methods like unit testing Integration testing web application testing and selenium testing For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Implemented RESTful Web Services for the data transportation between multiple systems Built various graphs for business decisionmaking using Python Matplotlib library Worked on Jenkins continuous integration tool for deployment of project deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Skills DJANGO 7 years JAVASCRIPT 7 years JSON 7 years XML 7 years MYSQL 7 years Additional Information TECHNICAL SKILLS Cloud SaaS Experience Amazon Web Services AWS OpenstackPuppet Chef Ansible AWS CloudFormationAWS CloudFront Linux Versions Hypervisors Ubuntu Red Hat CentOS VM Ware KVM Development Stack Experience Frameworks Django Openstack Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting AWS Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP Markup HAML SASS LESS Web Servers Apache Source Control Github Bitbucket CVS Eclipse SVN Search Tools Lucene Solr ElasticSearch Deployment Jenkins Configuration Puppetchef",
    "entities": [
        "Implementation of MVC",
        "Python Flask",
        "ExportedImported",
        "CVS Good",
        "GUI",
        "Amazon Web Services AWS OpenstackPuppet Chef Ansible AWS CloudFormationAWS",
        "Nodejs",
        "Python 3x Bootstrap CSS",
        "Storify Business",
        "SOLR",
        "Backbonejs",
        "Amazon SQS",
        "LAMP Linux",
        "MVCstyle",
        "SQL Server Management Studio Wrote",
        "Design Development and Deployment Testing and Implementation",
        "Hadoop",
        "SOAP",
        "JavaScript Implemented",
        "XML",
        "Nodejs wih Express",
        "Shell",
        "Data Mining and Trend Analysis",
        "Apache Spark",
        "Amazon",
        "Python",
        "Configuration Management Tool Chef Integrate",
        "API Integrations Experience",
        "Django Views",
        "Amazon AWS S3",
        "Developed",
        "Jenkins",
        "Bash",
        "Created Git",
        "Developed Views",
        "Mustachejs",
        "Technologies",
        "HTML CSS JQuery JSON",
        "HTML5",
        "Develop",
        "Oracle PLSQL",
        "Flask",
        "ObjectOriented",
        "DFL",
        "API Integration Implemented",
        "RDS",
        "Angular JS",
        "MVC",
        "CloudFront Linux",
        "Spark",
        "GIT",
        "the SOA Service Oriented Architecture",
        "HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Python Unit",
        "API",
        "Sqoop",
        "Scala",
        "WAMP Windows Apache",
        "PythonDjango Worked",
        "Jenkins Utilized PyUnit",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "RestfulSOAP Web Services",
        "Postgres",
        "Python ORM Libraries",
        "SQL",
        "GitHub",
        "Spark Pyspark Creating",
        "Apache Experienced",
        "lPythonspan",
        "Python Developer UBS Secaucus NJ",
        "Jersey SOAP Expertise",
        "Amazon Web Services AWS Implemented",
        "Python 3x Django HTML5",
        "Big Data",
        "MVW",
        "GIT SVN",
        "Wrote",
        "SQLite",
        "hybridweb",
        "CRUD",
        "Python Developer CenturyLink Monroe LA",
        "Performed",
        "Additional Information TECHNICAL SKILLS Cloud",
        "PEP Guidelines",
        "Djangos",
        "UI",
        "HTML CSS JavaScript JQuery and JSON Designed Data Quality Framework",
        "Google Analytics",
        "Version Control Systems",
        "SVN",
        "VM Ware KVM Development Stack",
        "CSS",
        "REST",
        "RAID",
        "NoSQL",
        "Oracle SQLite PostgreSQL",
        "Integration",
        "SOAP UI Experienced",
        "Chef Utilized",
        "HTML CSS Bootstrap",
        "Bash Created"
    ],
    "experience": "Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Active Participation in full development life cycle requirements design architecture development testing Expertise in working with server side technologies including databases Restful API and MVC design patterns using Python Flask framework Experience in developing software applications for implementing Big Data environment Strong skills in developingdeploying RestfulSOAP Web Services using Jersey SOAP Expertise in implementing ObjectOriented technologies Web basedclientserverarchitecture service oriented architecture and Object RelationalMappings ORM Good working experience in processing large datasets with Spark using Scala and Pyspark Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience in using Version Control Systems like GIT SVN and CVS Good Experience in Linux Bash scripting and following PEP Guidelines in Python Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in installing configuring modifying testing and deploying applications with Apache Experienced in MVW frameworks like Django Angular JS Java Script JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services AWS Experience in Implementation of MVC architecture using Spring MVC and SOAP web service and SOAP UI Experienced in developing Web Services with Python programming language Experience with the uses of NoSQL platform such as MongoDB Experienced in WAMP Windows Apache MYSQL and Python and LAMP Linux Apache MySQL and Python Architecture Work Experience Sr Python Developer Aetna Hartford CT August 2016 to Present Responsibilities Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developed and tested many features for dashboard using Python 3x Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked as a Python developer for Data Mining and Trend Analysis in Operations Dashboard Project Data Designed and developed Python Django templates and UI components using HTML CSS JavaScript JQuery and JSON Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Creating data pipelines using Apache Spark a bigdata processing and computing framework Django Framework that was used in developing web applications to implement the model view control architecture Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Implemented machine learning algorithms in Spark and Python for segmentation of data Developed web clientserver using restful APIs Experienced in NoSQL technologies like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL database Understands the complex processing needs of big data and has experience developing codes and modules Automated JIRA processes using python and bash scripts ExportedImported data between different data sources using SQL Server Management Studio Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL   package Creating data pipelines using Apache Spark a bigdata processing and computing framework Designed code in Python to interact with diverse instances in Amazon Web Services AWS Implemented web applications in Flask and spring frameworks following MVC architecture Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Involved in the development ORM Queries Automated RabbitMQ cluster installations and configuration using PythonBash Developed tested and deployed Storify Business featureset in Nodejs wih Express and MongoDB backend incorporating APIs Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Thorough knowledge in various front end tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Built various graphs for business decisionmaking using Python matplotlib library Used Python library Beautiful Soup for web scrapping Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in development methodologies like Agile Scrum and Waterfall Work with team of developers on python applications for RISK management Python Developer Best Buy Seattle WA July 2014 to August 2016 Responsibilities Used Python and Django creating graphics XML processing data exchange and business logic implementation Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Engaged with multiple popular frameworks and technologies including Spring Hibernate REST and PostgreSQL Leveraged spark Pyspark to manipulate unstructured data and apply text mining on users table utilization data Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Created Python and Bash tools to increase efficiency of call center application system operations and data conversion scripts for API Integrations Experience in leading multiple efforts to build NoSQL platforms along with SOLR search platform for maximizing business value by combining data science with big data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB Web Log Analysis using Apache Spark PySpark Increased the speed of preexisting search indexes through DJango ORM optimizations Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Designed and managed API system deployment using fast http server and AWS architecture Helped create a hybridweb application with both an angularbased frontend that consumes a RESTful API as well as a MVCstyle back end Developed Django Python Apache bash scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Python Developer UBS Secaucus NJ January 2013 to July 2014 Responsibilities Involved in developing and implementation of the web application using Python Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users used Python and Django creating graphics XML processing data exchange and business logic implementation Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed dynamic and browser compatible pages using HTML5 CSS3 JQuery and JavaScript and Angular JS To provide automation used Configuration Management Tool Chef Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Worked on Element Tree XML API in python to parse XML documents and load the data in database Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a demo website running on a Nodejs using the Express framework Jade and Backbonejs with Mustachejs for front end MVCtemplating Used Django configuration to manage URLs and application parameters added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud also Learnt to deploy projects using Jenkins Utilized PyUnit the Python unit test framework for all Python applications Develop Informatica mapping SQL concurrent workflows and unix scripts to execute the DFL jobs Used HTML CSS JQuery JSON and Java script for front end applications Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment and used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Python Developer CenturyLink Monroe LA August 2011 to December 2012 Responsibilities Well versed with design and development of presentation layer for web applications using technologies like HTML CSS Bootstrap and JavaScript Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python and its familiar framework Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Worked on Django APIs for accessing the database Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Python Unit test library was used for the purpose of testing many programs on Python and other codes Develop programs to automate the testing of RAID controller firmware and utilities using Python 27 Java Bash script Windows command line AutoIt AutoHotKey Collect and analyze data from actual work and show the table or graphic on the webpage using MVC SQL HTML CSS BootStrap JQuery AJAX and Javascripts Performed different testing methods like unit testing Integration testing web application testing and selenium testing For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Implemented RESTful Web Services for the data transportation between multiple systems Built various graphs for business decisionmaking using Python Matplotlib library Worked on Jenkins continuous integration tool for deployment of project deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Skills DJANGO 7 years JAVASCRIPT 7 years JSON 7 years XML 7 years MYSQL 7 years Additional Information TECHNICAL SKILLS Cloud SaaS Experience Amazon Web Services AWS OpenstackPuppet Chef Ansible AWS CloudFormationAWS CloudFront Linux Versions Hypervisors Ubuntu Red Hat CentOS VM Ware KVM Development Stack Experience Frameworks Django Openstack Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting AWS Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP Markup HAML SASS LESS Web Servers Apache Source Control Github Bitbucket CVS Eclipse SVN Search Tools Lucene Solr ElasticSearch Deployment Jenkins Configuration Puppetchef",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Aetna",
        "years",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "Python",
        "Django",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "deployment",
        "architecture",
        "tools",
        "Chef",
        "end",
        "Technologies",
        "HTML5",
        "CSS3",
        "layouts",
        "experience",
        "Amazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Amazon",
        "SQS",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Active",
        "Participation",
        "development",
        "life",
        "cycle",
        "requirements",
        "design",
        "architecture",
        "development",
        "testing",
        "Expertise",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "Python",
        "Flask",
        "framework",
        "Experience",
        "software",
        "applications",
        "Big",
        "Data",
        "environment",
        "Strong",
        "skills",
        "Web",
        "Services",
        "Jersey",
        "SOAP",
        "Expertise",
        "ObjectOriented",
        "technologies",
        "Web",
        "basedclientserverarchitecture",
        "service",
        "architecture",
        "Object",
        "RelationalMappings",
        "ORM",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Pyspark",
        "methodologies",
        "quality",
        "deliverables",
        "ontime",
        "Experience",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "SVN",
        "CVS",
        "Good",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "testing",
        "applications",
        "Apache",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Experience",
        "Implementation",
        "MVC",
        "architecture",
        "Spring",
        "MVC",
        "SOAP",
        "web",
        "service",
        "SOAP",
        "UI",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "uses",
        "NoSQL",
        "platform",
        "MongoDB",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "Architecture",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Aetna",
        "Hartford",
        "CT",
        "August",
        "Present",
        "Responsibilities",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "business",
        "logic",
        "PythonDjango",
        "Worked",
        "Python",
        "developer",
        "Data",
        "Mining",
        "Trend",
        "Analysis",
        "Operations",
        "Dashboard",
        "Project",
        "Data",
        "Python",
        "Django",
        "UI",
        "components",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "JSON",
        "Designed",
        "Data",
        "Quality",
        "Framework",
        "schema",
        "validation",
        "data",
        "profiling",
        "Spark",
        "Pyspark",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "machine",
        "algorithms",
        "Spark",
        "Python",
        "segmentation",
        "data",
        "web",
        "clientserver",
        "APIs",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "database",
        "processing",
        "needs",
        "data",
        "experience",
        "codes",
        "modules",
        "JIRA",
        "processes",
        "python",
        "scripts",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "Designed",
        "code",
        "Python",
        "instances",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "web",
        "applications",
        "Flask",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "development",
        "ORM",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Developed",
        "Storify",
        "Business",
        "featureset",
        "Nodejs",
        "wih",
        "Express",
        "backend",
        "APIs",
        "Issues",
        "Realtime",
        "data",
        "RabbitMQ",
        "Postgres",
        "Cassandra",
        "middleware",
        "web",
        "services",
        "schema",
        "thousands",
        "users",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "graphs",
        "business",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "PostgresSQL",
        "data",
        "integrity",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Experience",
        "development",
        "methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Python",
        "Developer",
        "Best",
        "Buy",
        "Seattle",
        "WA",
        "July",
        "August",
        "Responsibilities",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "backend",
        "procedures",
        "triggers",
        "Oracle",
        "PLSQL",
        "database",
        "creation",
        "performance",
        "procedures",
        "query",
        "plan",
        "frameworks",
        "technologies",
        "Spring",
        "Hibernate",
        "REST",
        "PostgreSQL",
        "spark",
        "Pyspark",
        "data",
        "text",
        "mining",
        "users",
        "table",
        "utilization",
        "data",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "API",
        "Integrations",
        "Experience",
        "efforts",
        "platforms",
        "SOLR",
        "search",
        "platform",
        "business",
        "value",
        "data",
        "science",
        "data",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "Web",
        "Log",
        "Analysis",
        "Apache",
        "Spark",
        "PySpark",
        "speed",
        "search",
        "indexes",
        "DJango",
        "ORM",
        "optimizations",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "AWS",
        "architecture",
        "hybridweb",
        "application",
        "frontend",
        "API",
        "MVCstyle",
        "end",
        "Developed",
        "Django",
        "Python",
        "Apache",
        "bash",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "package",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Python",
        "Developer",
        "UBS",
        "Secaucus",
        "NJ",
        "January",
        "July",
        "Responsibilities",
        "implementation",
        "web",
        "application",
        "Python",
        "Worked",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "PythonDjango",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "Used",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "data",
        "analytics",
        "team",
        "implementation",
        "scripts",
        "Sqoop",
        "spark",
        "Hadoop",
        "batch",
        "data",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "dynamic",
        "browser",
        "pages",
        "HTML5",
        "CSS3",
        "JQuery",
        "JavaScript",
        "Angular",
        "JS",
        "automation",
        "Configuration",
        "Management",
        "Tool",
        "Chef",
        "pages",
        "JS",
        "jquery",
        "pages",
        "Worked",
        "Element",
        "Tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "part",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "team",
        "practices",
        "services",
        "REST",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "demo",
        "website",
        "Nodejs",
        "Express",
        "framework",
        "Jade",
        "Backbonejs",
        "Mustachejs",
        "end",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "projects",
        "Jenkins",
        "Utilized",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Develop",
        "Informatica",
        "mapping",
        "SQL",
        "workflows",
        "scripts",
        "DFL",
        "jobs",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Java",
        "script",
        "end",
        "applications",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "MySQL",
        "Native",
        "SQL",
        "development",
        "environment",
        "GitHub",
        "version",
        "control",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Python",
        "Developer",
        "CenturyLink",
        "Monroe",
        "LA",
        "August",
        "December",
        "Responsibilities",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Framework",
        "web",
        "applications",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "HTML",
        "Python",
        "framework",
        "Django",
        "Views",
        "Templates",
        "Python",
        "Bash",
        "scripting",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Worked",
        "Django",
        "APIs",
        "database",
        "Developed",
        "Views",
        "Templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "Website",
        "interface",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Python",
        "Unit",
        "test",
        "library",
        "purpose",
        "programs",
        "Python",
        "codes",
        "programs",
        "testing",
        "RAID",
        "controller",
        "firmware",
        "utilities",
        "Python",
        "Java",
        "Bash",
        "script",
        "Windows",
        "command",
        "line",
        "AutoIt",
        "AutoHotKey",
        "Collect",
        "data",
        "work",
        "table",
        "graphic",
        "webpage",
        "MVC",
        "SQL",
        "HTML",
        "CSS",
        "BootStrap",
        "JQuery",
        "AJAX",
        "Javascripts",
        "testing",
        "methods",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "manipulation",
        "data",
        "database",
        "queries",
        "SQL",
        "database",
        "MYSQL",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "graphs",
        "business",
        "Python",
        "Matplotlib",
        "library",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Git",
        "repository",
        "GitHub",
        "project",
        "Skills",
        "DJANGO",
        "years",
        "JAVASCRIPT",
        "years",
        "JSON",
        "years",
        "XML",
        "years",
        "MYSQL",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Cloud",
        "SaaS",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "OpenstackPuppet",
        "Chef",
        "Ansible",
        "AWS",
        "CloudFormationAWS",
        "CloudFront",
        "Linux",
        "Versions",
        "Hypervisors",
        "Ubuntu",
        "Red",
        "Hat",
        "CentOS",
        "VM",
        "Ware",
        "KVM",
        "Development",
        "Stack",
        "Experience",
        "Frameworks",
        "Django",
        "Openstack",
        "Databases",
        "MongoDB",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "Oracle",
        "JavaScript",
        "Frameworks",
        "Nodejs",
        "jQuery",
        "Backbonejs",
        "ExtJS",
        "Emberjs",
        "Rackspace",
        "Linux",
        "Red",
        "Hat",
        "Ubuntu",
        "CentOS",
        "API",
        "Integration",
        "JSON",
        "REST",
        "XML",
        "SOAP",
        "HAML",
        "Web",
        "Servers",
        "Apache",
        "Source",
        "Control",
        "Github",
        "Bitbucket",
        "CVS",
        "Eclipse",
        "SVN",
        "Search",
        "Tools",
        "Lucene",
        "Solr",
        "ElasticSearch",
        "Deployment",
        "Jenkins",
        "Configuration",
        "Puppetchef"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:50:45.888117",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Aetna Around 6 years of extensive experience in system analysis design development and implementation of web based and clientserver application using Python 3x Django HTML5 CSS3 JavaScript AJAX Experienced in automating deployment to a distributed architecture with tools such as Chef Utilized the latest front end Technologies such as HTML5 and CSS3 for layouts Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Active Participation in full development life cycle requirements design architecture development testing Expertise in working with server side technologies including databases Restful API and MVC design patterns using Python Flask framework Experience in developing software applications for implementing Big Data environment Strong skills in developingdeploying RestfulSOAP Web Services using Jersey SOAP Expertise in implementing ObjectOriented technologies Web basedclientserverarchitecture service oriented architecture and Object RelationalMappings ORM Good working experience in processing large datasets with Spark using Scala and Pyspark Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience in using Version Control Systems like GIT SVN and CVS Good Experience in Linux Bash scripting and following PEP Guidelines in Python Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in installing configuring modifying testing and deploying applications with Apache Experienced in MVW frameworks like Django Angular JS Java Script JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services AWS Experience in Implementation of MVC architecture using Spring MVC and SOAP web service and SOAP UI Experienced in developing Web Services with Python programming language Experience with the uses of NoSQL platform such as MongoDB Experienced in WAMP Windows Apache MYSQL and Python and LAMP Linux Apache MySQL and Python Architecture Work Experience Sr Python Developer Aetna Hartford CT August 2016 to Present Responsibilities Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developed and tested many features for dashboard using Python 3x Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked as a Python developer for Data Mining and Trend Analysis in Operations Dashboard Project Data Designed and developed Python Django templates and UI components using HTML CSS JavaScript JQuery and JSON Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Creating data pipelines using Apache Spark a bigdata processing and computing framework Django Framework that was used in developing web applications to implement the model view control architecture Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Implemented machine learning algorithms in Spark and Python for segmentation of data Developed web clientserver using restful APIs Experienced in NoSQL technologies like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL database Understands the complex processing needs of big data and has experience developing codes and modules Automated JIRA processes using python and bash scripts ExportedImported data between different data sources using SQL Server Management Studio Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Creating data pipelines using Apache Spark a bigdata processing and computing framework Designed code in Python to interact with diverse instances in Amazon Web Services AWS Implemented web applications in Flask and spring frameworks following MVC architecture Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Involved in the development ORM Queries Automated RabbitMQ cluster installations and configuration using PythonBash Developed tested and deployed Storify Business featureset in Nodejs wih Express and MongoDB backend incorporating APIs Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Thorough knowledge in various front end tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Built various graphs for business decisionmaking using Python matplotlib library Used Python library Beautiful Soup for web scrapping Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in development methodologies like Agile Scrum and Waterfall Work with team of developers on python applications for RISK management Python Developer Best Buy Seattle WA July 2014 to August 2016 Responsibilities Used Python and Django creating graphics XML processing data exchange and business logic implementation Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Engaged with multiple popular frameworks and technologies including Spring Hibernate REST and PostgreSQL Leveraged spark Pyspark to manipulate unstructured data and apply text mining on users table utilization data Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Created Python and Bash tools to increase efficiency of call center application system operations and data conversion scripts for API Integrations Experience in leading multiple efforts to build NoSQL platforms along with SOLR search platform for maximizing business value by combining data science with big data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on HTML5 CSS3 JavaScript Angular JS NodeJS Git REST API Mongo DB Web Log Analysis using Apache Spark PySpark Increased the speed of preexisting search indexes through DJango ORM optimizations Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Designed and managed API system deployment using fast http server and AWS architecture Helped create a hybridweb application with both an angularbased frontend that consumes a RESTful API as well as a MVCstyle back end Developed Django Python Apache bash scripting Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS JQuery JSON and Javascript for front end applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Python Developer UBS Secaucus NJ January 2013 to July 2014 Responsibilities Involved in developing and implementation of the web application using Python Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users used Python and Django creating graphics XML processing data exchange and business logic implementation Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Designed dynamic and browser compatible pages using HTML5 CSS3 JQuery and JavaScript and Angular JS To provide automation used Configuration Management Tool Chef Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Worked on Element Tree XML API in python to parse XML documents and load the data in database Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a demo website running on a Nodejs using the Express framework Jade and Backbonejs with Mustachejs for front end MVCtemplating Used Django configuration to manage URLs and application parameters added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud also Learnt to deploy projects using Jenkins Utilized PyUnit the Python unit test framework for all Python applications Develop Informatica mapping SQL concurrent workflows and unix scripts to execute the DFL jobs Used HTML CSS JQuery JSON and Java script for front end applications Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written queries in MySQL and Native SQL Worked in an agile development environment and used GitHub for version control Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Python Developer CenturyLink Monroe LA August 2011 to December 2012 Responsibilities Well versed with design and development of presentation layer for web applications using technologies like HTML CSS Bootstrap and JavaScript Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python and its familiar framework Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Worked on Django APIs for accessing the database Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Python Unit test library was used for the purpose of testing many programs on Python and other codes Develop programs to automate the testing of RAID controller firmware and utilities using Python 27 Java Bash script Windows command line AutoIt AutoHotKey Collect and analyze data from actual work and show the table or graphic on the webpage using MVC SQL HTML CSS BootStrap JQuery AJAX and Javascripts Performed different testing methods like unit testing Integration testing web application testing and selenium testing For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Implemented RESTful Web Services for the data transportation between multiple systems Built various graphs for business decisionmaking using Python Matplotlib library Worked on Jenkins continuous integration tool for deployment of project deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Skills DJANGO 7 years JAVASCRIPT 7 years JSON 7 years XML 7 years MYSQL 7 years Additional Information TECHNICAL SKILLS Cloud SaaS Experience Amazon Web Services AWS OpenstackPuppet Chef Ansible AWS CloudFormationAWS CloudFront Linux Versions Hypervisors Ubuntu Red Hat CentOS VM Ware KVM Development Stack Experience Frameworks Django Openstack Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting AWS Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP Markup HAML SASS LESS Web Servers Apache Source Control Github Bitbucket CVS Eclipse SVN Search Tools Lucene Solr ElasticSearch Deployment Jenkins Configuration Puppetchef",
    "unique_id": "363012f6-e651-45f7-8493-d91cff985c88"
}