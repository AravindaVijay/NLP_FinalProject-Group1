{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer NIKE Manassas VA 11 years of IT experience in Design Development Testing and Deployment of various applications using PythonDjango Experienced with full software development lifecycle objectoriented design objectoriented programming and database design Experienced in developing webbased applications using PythonDjango PHP C HTML DHTML CSS XML JavaScript and Angularjs Developed various shellscripts and pythonscripts to automate Spark jobs and hive scripts Extensive experience interacting with business users and working with BA team in requirements gathering Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications Django Flask and Pyramid Extensive experience with multiple technologies like Python 3427 Perl 51 C Shell Scripting core Java and C Experienced in WAMP Windows Apache MYSQL and Python and LAMP Linux Apache MySQL and Python Architecture Experience in implementing PEP8 coding standards Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and Working Knowledge of Pandas Numpy Scipy Experience in tuning and debuggingSpark application and using spark optimization techniques Proficient in writing unit testing code using UnitTestpytest and integrating the test code with the build process Good working experience in using version control systems Git and GitHub Good knowledge on front end frameworks like CSS Bootstrap Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Expertise in working with different databases like MySQL PostgreSQL Oracle and good knowledge in using NoSQL databases like Apache Cassandra MongoDB 2624 Good understanding of ObjectOriented Technologies and Relational Database Systems Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed Automation testing suite using Python and Robot Framework Sound experience in Core Java and ObjectOriented Programming using concepts like MultiThreading Exception Handling and Collections Performed data cleaning and feature selection using MLlib package in PySpark Fused them for messaging Experienced in installing configuring modifying testing and deploying applications with Apache Hands on experience with continuous integration and automation using Jenkins and version control tools such as Git SVN CVS and JIRA Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib SQLAlchemy pythontwitter Pandas data frame network urllib2 wxPython Good Knowledge of using IDE Tools like IDLE PyCharm Eclipse Net Beans PyStudio and Sublime Text Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Expertise in MVW frameworks like Django Angular JS Java Script jQuery and Nodejs Planning and Implementing Disaster Recovery and Fault for AWS services Setting up AWS Cloud watch and Custom Metrics for AWS services Created S3 buckets and managed policies using IAM roles for S3 buckets and used S3 bucket and Glacier for storing historical data Setting up AWS RDS AZFailover and Read replicas Automating Infrastructure using multiple AWS Cloud formation templates and updating the resources with the help of helper scripts Implementing AWS Cloud Front for the newly built websites Work Experience Sr Python Developer NIKE Manassas VA February 2016 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Developed dynamic web pages using python Django Frameworks Used Mongo DBNoSQL database for storing the information Extensively implemented the python libraries like Pandas Matplotlib Numpy to manipulate and visualize the data using interactive charts Create and implement data loading solutions using SSIS TSQL from our large pool of clients into our databases for data cleansing Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Features for dashboard were developed and tested using CSS AngularJS and Bootstrap Developed forms using HTML and performing client side validations using JavaScript JQuery and Bootstrap Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Hands on experience in SVN Git JIRA Bugzilla Cleansing data generated from weblogs with automated scripts in Python Developed Python Django application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Involved in analyzing Hadoop cluster using Hadoop Distributed file system HDFS in data analytics process including Ma Reduce HBase Hive etc Used SVN repository for software configuration management and version control Used JIRA for tracking and Updating Project issue Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Great hands on experience with Pyspark for using Spark libiries by using python scripting for data analysis Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Maintained technical documentation for resolved issues for future reference Used Python scripts to update content in the database and manipulate files Implementing customer data collection with PySparkHadoop analytics Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on development of SQL and stored procedures on MYSQL Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for front end applications Extensively used the advanced features of PLSQL Records Tables Object Types and Dynamic SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Amazon AWS S3 MySQL spark pyspark HTML ETL Python 27 PLSQL Django 18 HTML5 CSS XML MySQL MS SQL Server JavaScript AWS Linux Shell Scripting AJAX Sr Python Developer Cox Automotive Inc Atlanta GA February 2014 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Good working experience in processing large datasets with Spark using Scala and PySpark Strong experience in migration of existing on premises servers to AWS cloud using VM Import Export service and AWS CLI Involved in Unit testing and Integration testing Hands on experience in developing SPARK applications using Spark APIs like Spark core SparkStreaming Spark MLlib and Spark SQL and worked with different file formats such as Text Sequence files Avro ORC JSON and Parquette Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Part of RD team to build new analytics POCs using Apache Spark ScalaUsed Django framework for application development Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and PySpark Running Robot Framework on Python using the ipybot runner script Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that supportcomplex data structures first class functions by using PERL Experience in working on Freeform Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Framework using python Developed Spark scripts by using Scala shell commands as per the requirement Developed presentation layer components using ASPNET Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python 27 scipy Pandas SVN C Java JQuery MySQL Spark Scala Linux Eclipse Shell Scripting Angular JS HTML5CSS Red hat Linux Apache Python Developer Polaris Solutions New York NY May 2011 to December 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Enabled logging to export logs to cloud watch by creating cloud watch log groups and grant EC2 instance access to write the logs log groups using AWS IAM role Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Model View Control architecture is implemented using Django Framework to develop web applications Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Used REST microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed Application to access JSON and XML from Restful WebServices from consumer side using JavaScript and AngularJS Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Environment Python Django AWS Angular Js Jenkins Docker HTML5CSS XML MySQL JQuery JavaScript JSON Ajax Spark Scala Software Developer Ericsson December 2008 to April 2011 New jersey NJ Responsibilities Used HTML CSS AJAX JSON designed and developed the user interface of the website Wrapper developed in Python to run this application along with other applications Wrote python scripts to parse XML and JSON reports and load the information in database Handle UI and serverside programming Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy and SQL Alchemy Used security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Parsers written in Python for extracting useful data from the design data base Development of XMLs for several components which maintains data for several registers Development of data structures xml parsing using Python Used REST based micro services with REST template based on RESTful ANGULAR JSs and designed developed the UI for the client websites by using HTML CSS jQuery andReactjs Usage of advance features like pickleunpickle in python for sharing the information across the applications Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Creating Python based micro services and refactoringenhancing exiting services Involved in Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Configured an AWS Virtual Private Cloud VPC and Database subnet group for isolation of resources within AWS RDS For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Deployed the project into Heroku using GIT version control system Environment HTML CSS AJAX JSON XML JSON NumPy SQL Alchemy Perl AWS REST RESTful ANGULAR JSs HTML CSS jQuery MYSQL GIT Python Developer Mercedes Benz Credit Corporation Seattle WA March 2006 to April 2008 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Masters In Computer Engineering in Computer Engineering IIT KGP December 2000 Skills DJANGO 9 years HTML 10 years PYTHON 10 years SQL 5 years jQuery 6 years C Flask Javascript AWS Java Additional Information Skills PYTHON 8 YearsDJANGO 5 years HTML 7 years SQL 6 years WEB SERVICES 6 years jQuery 6 years AWS5Years",
    "entities": [
        "MLlib",
        "Python Flask",
        "Working Knowledge",
        "Flashvars",
        "PySpark Features",
        "SPARK",
        "New York",
        "UNIX",
        "Apache Hands",
        "Agile Software Methodology",
        "supportcomplex data",
        "Handle UI",
        "Developed Spark",
        "Work Experience Sr Python Developer",
        "REST JSON",
        "Object Diagrams",
        "CSS HTML",
        "LAMP Linux",
        "IBM",
        "Updating Project",
        "Amazon Web Services AWS",
        "Heroku",
        "Model View Control MVC",
        "RDD",
        "Hadoop",
        "XML",
        "Atlanta",
        "Restful WebServices",
        "PythonDjango PHP C",
        "JavaScript AWS Linux Shell Scripting AJAX Sr Python Developer Cox Automotive Inc",
        "Maintained",
        "Created S3",
        "Amazon",
        "Wrapper",
        "Python",
        "Create",
        "Amazon AWS S3",
        "Developed",
        "Jenkins",
        "Bash",
        "CSS Bootstrap",
        "AWS IAM role Implemented",
        "Quartz Performed",
        "Django",
        "Puppet",
        "Git",
        "NumPy",
        "PySpark Fused",
        "HTML CSS jQuery and Reactjs Designed",
        "Test Driven DevelopmentTDD",
        "RD",
        "Grid",
        "Parquette Developed ColdFusion Components",
        "Flask",
        "Bootstrap Developed",
        "Built",
        "Shell Scripting",
        "Design Development Testing and Deployment",
        "MySQL PostgreSQL Oracle",
        "HTML ETL",
        "RDS",
        "PEP8",
        "ObjectOriented Programming",
        "PyQt",
        "Computer Engineering IIT",
        "Spark",
        "GIT",
        "HTML CSS jQuery and Reactjs Developed",
        "Task Schedulers",
        "Jasper Reports Created Django",
        "IAM",
        "CF Objects Wrote",
        "Created",
        "AWS",
        "Scala",
        "WAMP Windows Apache",
        "Creating Python",
        "Coding",
        "Pyspark",
        "PySpark Running Robot Framework",
        "Bash Designed",
        "PLSQL Records Tables Object Types",
        "HTML",
        "SQL",
        "Provided GUI",
        "GitHub",
        "lPythonspan",
        "Relational Database Systems",
        "UnitTestpytest",
        "Anaconda",
        "Model View Control",
        "MVW",
        "IDE Tools",
        "Developed Automation",
        "matPlotLib Using",
        "MultiThreading Exception Handling",
        "Pandas",
        "Amazon Cloud Configured",
        "Datatables",
        "CRUD",
        "UML Rational Rose for Object",
        "Build",
        "Djangos",
        "Spark SQL",
        "Developed Application",
        "JavaScript",
        "API Integration Created",
        "UI",
        "SparkStreaming Spark",
        "PythonDjango Experienced",
        "AWS CLI Involved",
        "Google Analytics",
        "Development of data structures xml",
        "ASPNET Designed",
        "Custom Metrics",
        "Tableau Implementing Robot Framework",
        "SVN",
        "CSS",
        "CMS",
        "Nodejs Planning and Implementing Disaster Recovery and Fault for AWS services",
        "Pandas SVN C",
        "FPML Financial Products Markup Language",
        "ObjectOriented Technologies",
        "REST",
        "Data",
        "VM Import Export",
        "PHP",
        "NoSQL",
        "Developer Polaris Solutions",
        "EBS",
        "HTML CSS jQuery andReactjs Usage",
        "Developer Mercedes Benz Credit Corporation",
        "Bash Developed"
    ],
    "experience": "Experience in implementing PEP8 coding standards Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and Working Knowledge of Pandas Numpy Scipy Experience in tuning and debuggingSpark application and using spark optimization techniques Proficient in writing unit testing code using UnitTestpytest and integrating the test code with the build process Good working experience in using version control systems Git and GitHub Good knowledge on front end frameworks like CSS Bootstrap Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Expertise in working with different databases like MySQL PostgreSQL Oracle and good knowledge in using NoSQL databases like Apache Cassandra MongoDB 2624 Good understanding of ObjectOriented Technologies and Relational Database Systems Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed Automation testing suite using Python and Robot Framework Sound experience in Core Java and ObjectOriented Programming using concepts like MultiThreading Exception Handling and Collections Performed data cleaning and feature selection using MLlib package in PySpark Fused them for messaging Experienced in installing configuring modifying testing and deploying applications with Apache Hands on experience with continuous integration and automation using Jenkins and version control tools such as Git SVN CVS and JIRA Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib SQLAlchemy pythontwitter Pandas data frame network urllib2 wxPython Good Knowledge of using IDE Tools like IDLE PyCharm Eclipse Net Beans PyStudio and Sublime Text Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Expertise in MVW frameworks like Django Angular JS Java Script jQuery and Nodejs Planning and Implementing Disaster Recovery and Fault for AWS services Setting up AWS Cloud watch and Custom Metrics for AWS services Created S3 buckets and managed policies using IAM roles for S3 buckets and used S3 bucket and Glacier for storing historical data Setting up AWS RDS AZFailover and Read replicas Automating Infrastructure using multiple AWS Cloud formation templates and updating the resources with the help of helper scripts Implementing AWS Cloud Front for the newly built websites Work Experience Sr Python Developer NIKE Manassas VA February 2016 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Developed dynamic web pages using python Django Frameworks Used Mongo DBNoSQL database for storing the information Extensively implemented the python libraries like Pandas Matplotlib Numpy to manipulate and visualize the data using interactive charts Create and implement data loading solutions using SSIS TSQL from our large pool of clients into our databases for data cleansing Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Features for dashboard were developed and tested using CSS AngularJS and Bootstrap Developed forms using HTML and performing client side validations using JavaScript JQuery and Bootstrap Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Hands on experience in SVN Git JIRA Bugzilla Cleansing data generated from weblogs with automated scripts in Python Developed Python Django application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Involved in analyzing Hadoop cluster using Hadoop Distributed file system HDFS in data analytics process including Ma Reduce HBase Hive etc Used SVN repository for software configuration management and version control Used JIRA for tracking and Updating Project issue Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Great hands on experience with Pyspark for using Spark libiries by using python scripting for data analysis Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Maintained technical documentation for resolved issues for future reference Used Python scripts to update content in the database and manipulate files Implementing customer data collection with PySparkHadoop analytics Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on development of SQL and stored procedures on MYSQL Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for front end applications Extensively used the advanced features of PLSQL Records Tables Object Types and Dynamic SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Amazon AWS S3 MySQL spark pyspark HTML ETL Python 27 PLSQL Django 18 HTML5 CSS XML MySQL MS SQL Server JavaScript AWS Linux Shell Scripting AJAX Sr Python Developer Cox Automotive Inc Atlanta GA February 2014 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Good working experience in processing large datasets with Spark using Scala and PySpark Strong experience in migration of existing on premises servers to AWS cloud using VM Import Export service and AWS CLI Involved in Unit testing and Integration testing Hands on experience in developing SPARK applications using Spark APIs like Spark core SparkStreaming Spark MLlib and Spark SQL and worked with different file formats such as Text Sequence files Avro ORC JSON and Parquette Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Part of RD team to build new analytics POCs using Apache Spark ScalaUsed Django framework for application development Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and PySpark Running Robot Framework on Python using the ipybot runner script Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that supportcomplex data structures first class functions by using PERL Experience in working on Freeform Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Framework using python Developed Spark scripts by using Scala shell commands as per the requirement Developed presentation layer components using ASPNET Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python 27 scipy Pandas SVN C Java JQuery MySQL Spark Scala Linux Eclipse Shell Scripting Angular JS HTML5CSS Red hat Linux Apache Python Developer Polaris Solutions New York NY May 2011 to December 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Enabled logging to export logs to cloud watch by creating cloud watch log groups and grant EC2 instance access to write the logs log groups using AWS IAM role Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Model View Control architecture is implemented using Django Framework to develop web applications Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Used REST microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed Application to access JSON and XML from Restful WebServices from consumer side using JavaScript and AngularJS Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Environment Python Django AWS Angular Js Jenkins Docker HTML5CSS XML MySQL JQuery JavaScript JSON Ajax Spark Scala Software Developer Ericsson December 2008 to April 2011 New jersey NJ Responsibilities Used HTML CSS AJAX JSON designed and developed the user interface of the website Wrapper developed in Python to run this application along with other applications Wrote python scripts to parse XML and JSON reports and load the information in database Handle UI and serverside programming Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy and SQL Alchemy Used security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Parsers written in Python for extracting useful data from the design data base Development of XMLs for several components which maintains data for several registers Development of data structures xml parsing using Python Used REST based micro services with REST template based on RESTful ANGULAR JSs and designed developed the UI for the client websites by using HTML CSS jQuery andReactjs Usage of advance features like pickleunpickle in python for sharing the information across the applications Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Creating Python based micro services and refactoringenhancing exiting services Involved in Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Configured an AWS Virtual Private Cloud VPC and Database subnet group for isolation of resources within AWS RDS For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Deployed the project into Heroku using GIT version control system Environment HTML CSS AJAX JSON XML JSON NumPy SQL Alchemy Perl AWS REST RESTful ANGULAR JSs HTML CSS jQuery MYSQL GIT Python Developer Mercedes Benz Credit Corporation Seattle WA March 2006 to April 2008 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Masters In Computer Engineering in Computer Engineering IIT KGP December 2000 Skills DJANGO 9 years HTML 10 years PYTHON 10 years SQL 5 years jQuery 6 years C Flask Javascript AWS Java Additional Information Skills PYTHON 8 YearsDJANGO 5 years HTML 7 years SQL 6 years WEB SERVICES 6 years jQuery 6 years AWS5Years",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "NIKE",
        "Manassas",
        "VA",
        "years",
        "IT",
        "experience",
        "Design",
        "Development",
        "Testing",
        "Deployment",
        "applications",
        "PythonDjango",
        "software",
        "development",
        "lifecycle",
        "design",
        "programming",
        "database",
        "design",
        "applications",
        "PythonDjango",
        "PHP",
        "C",
        "HTML",
        "DHTML",
        "CSS",
        "XML",
        "JavaScript",
        "Angularjs",
        "shellscripts",
        "pythonscripts",
        "Spark",
        "jobs",
        "hive",
        "scripts",
        "experience",
        "business",
        "users",
        "BA",
        "team",
        "requirements",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Pyramid",
        "experience",
        "technologies",
        "Python",
        "Perl",
        "C",
        "Shell",
        "Scripting",
        "core",
        "Java",
        "C",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "Architecture",
        "Experience",
        "PEP8",
        "standards",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSS",
        "HTML",
        "framework",
        "Working",
        "Knowledge",
        "Pandas",
        "Numpy",
        "Scipy",
        "Experience",
        "tuning",
        "application",
        "spark",
        "optimization",
        "techniques",
        "Proficient",
        "unit",
        "testing",
        "code",
        "UnitTestpytest",
        "test",
        "code",
        "build",
        "process",
        "working",
        "experience",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "knowledge",
        "end",
        "frameworks",
        "CSS",
        "Bootstrap",
        "Scala",
        "HiveSQL",
        "queries",
        "RDD",
        "transformations",
        "Apache",
        "Spark",
        "Expertise",
        "databases",
        "MySQL",
        "PostgreSQL",
        "Oracle",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "MongoDB",
        "understanding",
        "ObjectOriented",
        "Technologies",
        "Relational",
        "Database",
        "Systems",
        "Experience",
        "Subqueries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Developed",
        "Automation",
        "testing",
        "suite",
        "Python",
        "Robot",
        "Framework",
        "Sound",
        "experience",
        "Core",
        "Java",
        "ObjectOriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Performed",
        "data",
        "cleaning",
        "feature",
        "selection",
        "MLlib",
        "package",
        "PySpark",
        "testing",
        "applications",
        "Apache",
        "Hands",
        "experience",
        "integration",
        "automation",
        "Jenkins",
        "version",
        "control",
        "tools",
        "Git",
        "SVN",
        "CVS",
        "JIRA",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "SQLAlchemy",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "wxPython",
        "Good",
        "Knowledge",
        "IDE",
        "Tools",
        "IDLE",
        "PyCharm",
        "Eclipse",
        "Net",
        "Beans",
        "PyStudio",
        "Sublime",
        "Text",
        "microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "jQuery",
        "Nodejs",
        "Planning",
        "Implementing",
        "Disaster",
        "Recovery",
        "Fault",
        "AWS",
        "services",
        "AWS",
        "Cloud",
        "Custom",
        "Metrics",
        "AWS",
        "services",
        "S3",
        "buckets",
        "policies",
        "IAM",
        "roles",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "Glacier",
        "data",
        "AWS",
        "RDS",
        "AZFailover",
        "Read",
        "replicas",
        "Automating",
        "Infrastructure",
        "AWS",
        "Cloud",
        "formation",
        "templates",
        "resources",
        "help",
        "helper",
        "scripts",
        "AWS",
        "Cloud",
        "Front",
        "websites",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "NIKE",
        "Manassas",
        "VA",
        "February",
        "Present",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "web",
        "pages",
        "python",
        "Django",
        "Frameworks",
        "Mongo",
        "DBNoSQL",
        "database",
        "information",
        "python",
        "libraries",
        "Pandas",
        "Matplotlib",
        "Numpy",
        "data",
        "charts",
        "data",
        "loading",
        "solutions",
        "SSIS",
        "TSQL",
        "pool",
        "clients",
        "databases",
        "data",
        "cleansing",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "PySpark",
        "Features",
        "dashboard",
        "CSS",
        "AngularJS",
        "Bootstrap",
        "forms",
        "HTML",
        "client",
        "side",
        "validations",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "REST",
        "microservices",
        "REST",
        "template",
        "APIs",
        "UI",
        "client",
        "websites",
        "HTML",
        "CSS",
        "jQuery",
        "Reactjs",
        "solutions",
        "Git",
        "GitHub",
        "microservice",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "Cleansing",
        "data",
        "weblogs",
        "scripts",
        "Python",
        "Developed",
        "Python",
        "Django",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "Used",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Hadoop",
        "cluster",
        "Hadoop",
        "file",
        "system",
        "HDFS",
        "data",
        "analytics",
        "process",
        "Ma",
        "Reduce",
        "HBase",
        "Hive",
        "SVN",
        "repository",
        "software",
        "configuration",
        "management",
        "version",
        "control",
        "JIRA",
        "tracking",
        "Project",
        "issue",
        "data",
        "structures",
        "directories",
        "tuples",
        "class",
        "inheritance",
        "algorithms",
        "networks",
        "hands",
        "experience",
        "Pyspark",
        "Spark",
        "libiries",
        "python",
        "scripting",
        "data",
        "analysis",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "documentation",
        "issues",
        "reference",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "customer",
        "data",
        "collection",
        "PySparkHadoop",
        "analytics",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Pandas",
        "library",
        "Analysis",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "end",
        "applications",
        "features",
        "PLSQL",
        "Records",
        "Tables",
        "Object",
        "Types",
        "SQL",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Responsible",
        "project",
        "JIRA",
        "Agile",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Amazon",
        "S3",
        "MySQL",
        "spark",
        "pyspark",
        "HTML",
        "ETL",
        "Python",
        "PLSQL",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "JavaScript",
        "Linux",
        "Shell",
        "Scripting",
        "AJAX",
        "Sr",
        "Python",
        "Developer",
        "Cox",
        "Automotive",
        "Inc",
        "Atlanta",
        "GA",
        "February",
        "January",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "structures",
        "UNIX",
        "application",
        "logic",
        "Python",
        "Apache",
        "Couchdb",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "PySpark",
        "Strong",
        "experience",
        "migration",
        "premises",
        "servers",
        "AWS",
        "cloud",
        "VM",
        "Import",
        "Export",
        "service",
        "AWS",
        "CLI",
        "Unit",
        "testing",
        "Integration",
        "Hands",
        "experience",
        "SPARK",
        "applications",
        "Spark",
        "APIs",
        "Spark",
        "core",
        "SparkStreaming",
        "Spark",
        "MLlib",
        "Spark",
        "SQL",
        "file",
        "formats",
        "Text",
        "Sequence",
        "Avro",
        "ORC",
        "JSON",
        "Parquette",
        "Developed",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Part",
        "RD",
        "team",
        "analytics",
        "POCs",
        "Apache",
        "Spark",
        "ScalaUsed",
        "Django",
        "framework",
        "application",
        "development",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "PySpark",
        "Running",
        "Robot",
        "Framework",
        "Python",
        "ipybot",
        "runner",
        "script",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "Graphical",
        "User",
        "Interface",
        "Testing",
        "API",
        "Testing",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "features",
        "data",
        "structures",
        "class",
        "functions",
        "PERL",
        "Experience",
        "Calculation",
        "Lasso",
        "Radial",
        "Selection",
        "Tableau",
        "Implementing",
        "Robot",
        "Framework",
        "python",
        "Developed",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "presentation",
        "layer",
        "components",
        "ASPNET",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "property",
        "list",
        "application",
        "python",
        "Using",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "data",
        "management",
        "system",
        "MySQL",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Environment",
        "Python",
        "Pandas",
        "SVN",
        "C",
        "Java",
        "JQuery",
        "MySQL",
        "Spark",
        "Scala",
        "Linux",
        "Eclipse",
        "Shell",
        "Scripting",
        "Angular",
        "JS",
        "HTML5CSS",
        "hat",
        "Linux",
        "Apache",
        "Python",
        "Developer",
        "Polaris",
        "Solutions",
        "New",
        "York",
        "NY",
        "May",
        "December",
        "Responsibilities",
        "Python",
        "framework",
        "Quartz",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "scale",
        "data",
        "processing",
        "trade",
        "position",
        "level",
        "information",
        "custom",
        "MapReduce",
        "engine",
        "export",
        "logs",
        "cloud",
        "watch",
        "cloud",
        "watch",
        "groups",
        "EC2",
        "instance",
        "access",
        "logs",
        "log",
        "groups",
        "AWS",
        "IAM",
        "role",
        "Task",
        "Schedulers",
        "scheduling",
        "job",
        "priority",
        "data",
        "mapreduce",
        "functions",
        "Grid",
        "time",
        "scripts",
        "sets",
        "data",
        "filtering",
        "data",
        "reports",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Python",
        "modules",
        "eg",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "modules",
        "XML",
        "trade",
        "data",
        "trade",
        "objects",
        "trade",
        "data",
        "outbound",
        "FPML",
        "Financial",
        "Products",
        "Markup",
        "Language",
        "DTCC",
        "repositories",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Framework",
        "web",
        "applications",
        "IBM",
        "DB2",
        "SQL",
        "procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "Conversions",
        "REST",
        "microservices",
        "REST",
        "template",
        "APIs",
        "UI",
        "client",
        "websites",
        "HTML",
        "CSS",
        "jQuery",
        "Reactjs",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "integration",
        "Jenkins",
        "deployment",
        "application",
        "automation",
        "engine",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Developed",
        "Application",
        "XML",
        "Restful",
        "WebServices",
        "consumer",
        "side",
        "JavaScript",
        "AngularJS",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "programming",
        "company",
        "product",
        "management",
        "Environment",
        "Python",
        "Django",
        "Angular",
        "Js",
        "Jenkins",
        "Docker",
        "HTML5CSS",
        "XML",
        "MySQL",
        "JQuery",
        "JavaScript",
        "JSON",
        "Ajax",
        "Spark",
        "Scala",
        "Software",
        "Developer",
        "Ericsson",
        "December",
        "April",
        "New",
        "jersey",
        "NJ",
        "Responsibilities",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "Wrapper",
        "Python",
        "application",
        "applications",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "Handle",
        "UI",
        "serverside",
        "programming",
        "Anaconda",
        "environment",
        "Wrote",
        "programs",
        "performance",
        "calculations",
        "NumPy",
        "SQL",
        "Alchemy",
        "security",
        "groups",
        "network",
        "ACLs",
        "internet",
        "gateways",
        "route",
        "tables",
        "zone",
        "organization",
        "AWS",
        "cloud",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Development",
        "XMLs",
        "components",
        "data",
        "registers",
        "Development",
        "data",
        "structures",
        "Python",
        "Used",
        "REST",
        "micro",
        "services",
        "REST",
        "template",
        "ANGULAR",
        "JSs",
        "UI",
        "client",
        "websites",
        "HTML",
        "CSS",
        "jQuery",
        "andReactjs",
        "Usage",
        "advance",
        "features",
        "pickleunpickle",
        "python",
        "information",
        "applications",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Python",
        "micro",
        "services",
        "exiting",
        "services",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "AWS",
        "Virtual",
        "Cloud",
        "VPC",
        "Database",
        "subnet",
        "group",
        "isolation",
        "resources",
        "AWS",
        "RDS",
        "manipulation",
        "data",
        "database",
        "queries",
        "SQL",
        "database",
        "MYSQL",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "Environment",
        "HTML",
        "CSS",
        "AJAX",
        "XML",
        "JSON",
        "NumPy",
        "SQL",
        "Alchemy",
        "Perl",
        "AWS",
        "ANGULAR",
        "JSs",
        "HTML",
        "CSS",
        "jQuery",
        "MYSQL",
        "GIT",
        "Python",
        "Developer",
        "Mercedes",
        "Benz",
        "Credit",
        "Corporation",
        "Seattle",
        "WA",
        "March",
        "April",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "BIG",
        "DATA",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Django",
        "APIs",
        "database",
        "access",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "backend",
        "client",
        "web",
        "application",
        "Python",
        "information",
        "XML",
        "files",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "XSD",
        "XSLT",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "CSS",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "Education",
        "Masters",
        "Computer",
        "Engineering",
        "Computer",
        "Engineering",
        "IIT",
        "KGP",
        "December",
        "Skills",
        "DJANGO",
        "years",
        "HTML",
        "years",
        "PYTHON",
        "years",
        "SQL",
        "years",
        "jQuery",
        "years",
        "C",
        "Flask",
        "Javascript",
        "Java",
        "Additional",
        "Information",
        "Skills",
        "PYTHON",
        "years",
        "HTML",
        "years",
        "SQL",
        "years",
        "WEB",
        "SERVICES",
        "years",
        "jQuery",
        "years",
        "AWS5Years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:30:52.020927",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer NIKE Manassas VA 11 years of IT experience in Design Development Testing and Deployment of various applications using PythonDjango Experienced with full software development lifecycle objectoriented design objectoriented programming and database design Experienced in developing webbased applications using PythonDjango PHP C HTML DHTML CSS XML JavaScript and Angularjs Developed various shellscripts and pythonscripts to automate Spark jobs and hive scripts Extensive experience interacting with business users and working with BA team in requirements gathering Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications Django Flask and Pyramid Extensive experience with multiple technologies like Python 3427 Perl 51 C Shell Scripting core Java and C Experienced in WAMP Windows Apache MYSQL and Python and LAMP Linux Apache MySQL and Python Architecture Experience in implementing PEP8 coding standards Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and Working Knowledge of Pandas Numpy Scipy Experience in tuning and debuggingSpark application and using spark optimization techniques Proficient in writing unit testing code using UnitTestpytest and integrating the test code with the build process Good working experience in using version control systems Git and GitHub Good knowledge on front end frameworks like CSS Bootstrap Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Expertise in working with different databases like MySQL PostgreSQL Oracle and good knowledge in using NoSQL databases like Apache Cassandra MongoDB 2624 Good understanding of ObjectOriented Technologies and Relational Database Systems Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed Automation testing suite using Python and Robot Framework Sound experience in Core Java and ObjectOriented Programming using concepts like MultiThreading Exception Handling and Collections Performed data cleaning and feature selection using MLlib package in PySpark Fused them for messaging Experienced in installing configuring modifying testing and deploying applications with Apache Hands on experience with continuous integration and automation using Jenkins and version control tools such as Git SVN CVS and JIRA Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib SQLAlchemy pythontwitter Pandas data frame network urllib2 wxPython Good Knowledge of using IDE Tools like IDLE PyCharm Eclipse Net Beans PyStudio and Sublime Text Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Expertise in MVW frameworks like Django Angular JS Java Script jQuery and Nodejs Planning and Implementing Disaster Recovery and Fault for AWS services Setting up AWS Cloud watch and Custom Metrics for AWS services Created S3 buckets and managed policies using IAM roles for S3 buckets and used S3 bucket and Glacier for storing historical data Setting up AWS RDS AZFailover and Read replicas Automating Infrastructure using multiple AWS Cloud formation templates and updating the resources with the help of helper scripts Implementing AWS Cloud Front for the newly built websites Work Experience Sr Python Developer NIKE Manassas VA February 2016 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create userfriendly website interface Developed dynamic web pages using python Django Frameworks Used Mongo DBNoSQL database for storing the information Extensively implemented the python libraries like Pandas Matplotlib Numpy to manipulate and visualize the data using interactive charts Create and implement data loading solutions using SSIS TSQL from our large pool of clients into our databases for data cleansing Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Features for dashboard were developed and tested using CSS AngularJS and Bootstrap Developed forms using HTML and performing client side validations using JavaScript JQuery and Bootstrap Used REST based microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Hands on experience in SVN Git JIRA Bugzilla Cleansing data generated from weblogs with automated scripts in Python Developed Python Django application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Involved in analyzing Hadoop cluster using Hadoop Distributed file system HDFS in data analytics process including Ma Reduce HBase Hive etc Used SVN repository for software configuration management and version control Used JIRA for tracking and Updating Project issue Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Great hands on experience with Pyspark for using Spark libiries by using python scripting for data analysis Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Maintained technical documentation for resolved issues for future reference Used Python scripts to update content in the database and manipulate files Implementing customer data collection with PySparkHadoop analytics Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on development of SQL and stored procedures on MYSQL Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for front end applications Extensively used the advanced features of PLSQL Records Tables Object Types and Dynamic SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Amazon AWS S3 MySQL spark pyspark HTML ETL Python 27 PLSQL Django 18 HTML5 CSS XML MySQL MS SQL Server JavaScript AWS Linux Shell Scripting AJAX Sr Python Developer Cox Automotive Inc Atlanta GA February 2014 to January 2016 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Good working experience in processing large datasets with Spark using Scala and PySpark Strong experience in migration of existing on premises servers to AWS cloud using VM Import Export service and AWS CLI Involved in Unit testing and Integration testing Hands on experience in developing SPARK applications using Spark APIs like Spark core SparkStreaming Spark MLlib and Spark SQL and worked with different file formats such as Text Sequence files Avro ORC JSON and Parquette Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Part of RD team to build new analytics POCs using Apache Spark ScalaUsed Django framework for application development Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and PySpark Running Robot Framework on Python using the ipybot runner script Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that supportcomplex data structures first class functions by using PERL Experience in working on Freeform Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Framework using python Developed Spark scripts by using Scala shell commands as per the requirement Developed presentation layer components using ASPNET Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all database mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python 27 scipy Pandas SVN C Java JQuery MySQL Spark Scala Linux Eclipse Shell Scripting Angular JS HTML5CSS Red hat Linux Apache Python Developer Polaris Solutions New York NY May 2011 to December 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Enabled logging to export logs to cloud watch by creating cloud watch log groups and grant EC2 instance access to write the logs log groups using AWS IAM role Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Model View Control architecture is implemented using Django Framework to develop web applications Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Used REST microservices with REST template based on RESTful APIs and designed developed the UI for the client websites by using HTML CSS jQuery and Reactjs Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed Application to access JSON and XML from Restful WebServices from consumer side using JavaScript and AngularJS Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Ensured high quality data collection and maintaining the integrity of the data Developed objectoriented programming to enhance company product management Environment Python Django AWS Angular Js Jenkins Docker HTML5CSS XML MySQL JQuery JavaScript JSON Ajax Spark Scala Software Developer Ericsson December 2008 to April 2011 New jersey NJ Responsibilities Used HTML CSS AJAX JSON designed and developed the user interface of the website Wrapper developed in Python to run this application along with other applications Wrote python scripts to parse XML and JSON reports and load the information in database Handle UI and serverside programming Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy and SQL Alchemy Used security groups network ACLs internet gateways and route tables to ensure a secure zone for organization in AWS public cloud Parsers written in Python for extracting useful data from the design data base Development of XMLs for several components which maintains data for several registers Development of data structures xml parsing using Python Used REST based micro services with REST template based on RESTful ANGULAR JSs and designed developed the UI for the client websites by using HTML CSS jQuery andReactjs Usage of advance features like pickleunpickle in python for sharing the information across the applications Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Creating Python based micro services and refactoringenhancing exiting services Involved in Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Configured an AWS Virtual Private Cloud VPC and Database subnet group for isolation of resources within AWS RDS For the manipulation of data from the database various queries using SQL were written and created a database using MYSQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Deployed the project into Heroku using GIT version control system Environment HTML CSS AJAX JSON XML JSON NumPy SQL Alchemy Perl AWS REST RESTful ANGULAR JSs HTML CSS jQuery MYSQL GIT Python Developer Mercedes Benz Credit Corporation Seattle WA March 2006 to April 2008 Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Masters In Computer Engineering in Computer Engineering IIT KGP December 2000 Skills DJANGO 9 years HTML 10 years PYTHON 10 years SQL 5 years jQuery 6 years C Flask Javascript AWS Java Additional Information Skills PYTHON 8 YearsDJANGO 5 years HTML 7 years SQL 6 years WEB SERVICES 6 years jQuery 6 years AWS5Years",
    "unique_id": "551ac788-5c7a-47fa-a343-9640d8df3462"
}