{
    "clean_data": "SR Python Developer SR span lPythonspan span lDeveloperspan Austin TX Overall 8 years of industrial experience as professional developer and has more than 4 years of experience in Designing Developing Deploying and maintaining web application based on Django Python platforms More than 2 years of experience in developing Web Applications using Django and Flask inclusive of experience in UI using JavaScript AngularJS and ReactRedux Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience SR Python Developer Q2 Ebanking Austin Texas Austin TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery AngularJs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer UPS Atlanta GA June 2015 to July 2017 Responsibilities Worked on predictive analytics usecases using R language Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and JQuery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack NumPy SciPy panda sand Matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy Matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJs Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features using Django HTML and TestDriven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django HTML5CSS PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM PyCharm Shell Scripting AngularJS JIRA Python Developer NIKE Salem OREGAN May 2013 to May 2015 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GItHUB Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Developed views and templates with python and Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML and DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservices and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Created UI Screens for initiation and validation Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer GENFARE Naperville IL August 2012 to April 2013 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Experience with advanced CSS concepts and building tablefree layouts Worked on frontend frameworks like CSS Bootstrap for development of Web applications Experienced in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Developed Reusable classes in the middleware using Hibernate Environment Python Django 17 HTML5 CSS3 Ruby JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git PYTHON DEVELOPER Eclature Technologies Hyderabad Telangana May 2011 to June 2012 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors Skills C Django Git Html Javascript",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "NLTK",
        "AJAX",
        "GUI",
        "Developer UPS",
        "C NET Develop",
        "ReactRedux",
        "SQLite Designing",
        "Developed Reusable",
        "Interfacing",
        "Working",
        "Design Patterns",
        "Front and Back end",
        "JSON",
        "Amazon Web Services AWS",
        "Panda",
        "Heroku",
        "Controller",
        "XML",
        "SOAP",
        "React",
        "POST",
        "Shell",
        "HBase",
        "SASAccess SAS SQL",
        "PyCharm Microsoft",
        "Apache Spark",
        "MySQL Database",
        "TX",
        "GitHub Bit Bucket",
        "Amazon",
        "HTML Created Business Logic",
        "Responsible for Design",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "Designed Docker",
        "CSS Bootstrap",
        "GItHUB Involved",
        "Django",
        "Shell Scripting AWS",
        "Developed Business Logic",
        "Python Libraries",
        "Git",
        "Django Websites Created",
        "Communicated",
        "Develop",
        "Used Query and Ajax",
        "XML Outputting",
        "API RESTful Web Service",
        "Created Data",
        "KeyValue",
        "Python Beautiful Soup",
        "Flask",
        "MVC Singleton",
        "SQL Queries",
        "Shell Scripting",
        "Spark Streaming",
        "HTML CSS JavaScript XML",
        "DOM",
        "RDS",
        "Views",
        "Spec Implemented",
        "DevTest",
        "PyQt",
        "MVC",
        "Flask SQL Alchemy",
        "Spark",
        "EndtoEnd",
        "Export Test",
        "jQuery Participated",
        "CSV",
        "HTML CSS",
        "API",
        "US",
        "HTML CSS JavaScript",
        "HTTP GET",
        "TestDriven Development TDD Increase",
        "Microsoft Visio Worked",
        "Created",
        "ASPNET MVC Validation",
        "AWS",
        "Sprints",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PIG",
        "Performed Unit",
        "SAS",
        "Hashicorps Nomad",
        "SQL",
        "GitHub",
        "Eclature Technologies Hyderabad",
        "Work Experience SR Python Developer",
        "Fiddler",
        "lPythonspan",
        "Scala Wrote",
        "SR Python Developer SR",
        "SQL Python",
        "jQuery MySQL PostgreSQL",
        "Wireshark",
        "Integration Testing GUI",
        "Hive",
        "Amazon AWS",
        "Handson",
        "Working on Big Data Integration and Analytics",
        "Pandas",
        "Agile Software Development",
        "ERDiagrams",
        "Performed",
        "Python Webservices",
        "Created UI",
        "NumPy SQL Alchemy",
        "unittest2",
        "Djangos",
        "Django Python",
        "JavaScript",
        "Python C Experienced",
        "UI",
        "Selenium",
        "WebApplication",
        "GIT Good",
        "XSD",
        "Version Control System",
        "CSS",
        "NodeJs Design",
        "Hadoop Spark",
        "the Global Shipping Team Created",
        "ObjectOriented Design",
        "JQuery Develop",
        "MapReduce",
        "PHP",
        "NoSQL",
        "Tableau",
        "Machine Learning",
        "PyTest",
        "Python Unit Test",
        "Python Created",
        "Python ScikitLearn Experience",
        "BIG DATA Created Business Logic"
    ],
    "experience": "Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience SR Python Developer Q2 Ebanking Austin Texas Austin TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery AngularJs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer UPS Atlanta GA June 2015 to July 2017 Responsibilities Worked on predictive analytics usecases using R language Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and JQuery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack NumPy SciPy panda sand Matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy Matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJs Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features using Django HTML and TestDriven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django HTML5CSS PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM PyCharm Shell Scripting AngularJS JIRA Python Developer NIKE Salem OREGAN May 2013 to May 2015 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GItHUB Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Developed views and templates with python and Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML and DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservices and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Created UI Screens for initiation and validation Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer GENFARE Naperville IL August 2012 to April 2013 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Experience with advanced CSS concepts and building tablefree layouts Worked on frontend frameworks like CSS Bootstrap for development of Web applications Experienced in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Developed Reusable classes in the middleware using Hibernate Environment Python Django 17 HTML5 CSS3 Ruby JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git PYTHON DEVELOPER Eclature Technologies Hyderabad Telangana May 2011 to June 2012 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors Skills C Django Git Html Javascript",
    "extracted_keywords": [
        "SR",
        "Python",
        "Developer",
        "SR",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Austin",
        "TX",
        "Overall",
        "years",
        "experience",
        "developer",
        "years",
        "experience",
        "Designing",
        "Developing",
        "Deploying",
        "web",
        "application",
        "Django",
        "Python",
        "years",
        "experience",
        "Web",
        "Applications",
        "Django",
        "Flask",
        "inclusive",
        "experience",
        "UI",
        "JavaScript",
        "AngularJS",
        "ReactRedux",
        "Experience",
        "application",
        "development",
        "PYTHON",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "jQuery",
        "MySQL",
        "PostgreSQL",
        "SQLite",
        "Designing",
        "fullstack",
        "applications",
        "platforms",
        "languages",
        "frameworks",
        "web",
        "app",
        "React",
        "Redux",
        "ES6",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "PyCharm",
        "Microsoft",
        "Visual",
        "Code",
        "knowledge",
        "ObjectOriented",
        "Design",
        "Programming",
        "concepts",
        "Experience",
        "Object",
        "Programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "Working",
        "Big",
        "Data",
        "Integration",
        "Analytics",
        "Hadoop",
        "Spark",
        "NoSQL",
        "HBase",
        "MongoDB",
        "Handson",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Experience",
        "Web",
        "Services",
        "REST",
        "API",
        "Python",
        "programming",
        "language",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "DJANGO",
        "knowledge",
        "Rest",
        "API",
        "JSON",
        "jQuery",
        "Angular",
        "JS",
        "Experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "knowledge",
        "Apache",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Web",
        "logic",
        "application",
        "servers",
        "Experience",
        "automation",
        "framework",
        "Shell",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "cloud",
        "platform",
        "EC2",
        "clouds",
        "VPCs",
        "Storage",
        "models",
        "EBS",
        "S3",
        "instance",
        "storage",
        "Elastic",
        "Load",
        "Balancers",
        "ELBs",
        "EBS",
        "volumes",
        "application",
        "files",
        "use",
        "EC2",
        "instances",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "pythonMySQL",
        "connector",
        "MySQL",
        "package",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "PERL",
        "script",
        "data",
        "text",
        "files",
        "web",
        "automation",
        "file",
        "formats",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "Sprints",
        "experience",
        "Python",
        "environment",
        "learner",
        "ability",
        "team",
        "US",
        "employer",
        "Work",
        "Experience",
        "SR",
        "Python",
        "Developer",
        "Q2",
        "Austin",
        "Texas",
        "Austin",
        "TX",
        "July",
        "Present",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "AngularJs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Delivery",
        "Pipeline",
        "Jenkins",
        "GitHub",
        "Docker",
        "container",
        "Environment",
        "Python",
        "Django",
        "Go",
        "language",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "UPS",
        "Atlanta",
        "GA",
        "June",
        "July",
        "Responsibilities",
        "analytics",
        "usecases",
        "R",
        "language",
        "Use",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "Added",
        "licensing",
        "feature",
        "products",
        "CCLEAR",
        "CSTOR",
        "scratch",
        "modules",
        "code",
        "runs",
        "html",
        "pages",
        "EULA",
        "End",
        "User",
        "License",
        "Agreement",
        "Developed",
        "micro",
        "APIS",
        "module",
        "results",
        "format",
        "Bottle",
        "framework",
        "development",
        "testing",
        "frameworks",
        "selenium",
        "web",
        "driver",
        "Automation",
        "Docker",
        "Container",
        "setup",
        "environment",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "POST",
        "requests",
        "HTML",
        "data",
        "website",
        "JIRA",
        "issue",
        "tracking",
        "bug",
        "tracking",
        "sprint",
        "confluence",
        "design",
        "documents",
        "Installed",
        "Hadoop",
        "Map",
        "HDFS",
        "AWS",
        "MapReduce",
        "jobs",
        "PIG",
        "Hive",
        "data",
        "Manage",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "WebApplication",
        "development",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "Develop",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "Generate",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "format",
        "Excel",
        "macros",
        "python",
        "libraries",
        "NumPy",
        "SQL",
        "Alchemy",
        "Matplotlib",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "manipulation",
        "retrieval",
        "data",
        "migration",
        "server",
        "Jira",
        "database",
        "Matching",
        "Fields",
        "Python",
        "scripts",
        "information",
        "Analyze",
        "Format",
        "data",
        "Machine",
        "Learning",
        "algorithm",
        "Python",
        "ScikitLearn",
        "Experience",
        "python",
        "Jupyter",
        "computing",
        "stack",
        "NumPy",
        "SciPy",
        "panda",
        "sand",
        "Matplotlib",
        "Perform",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "Numpy",
        "Matplotlib",
        "logs",
        "occurrence",
        "event",
        "Python",
        "page",
        "application",
        "Angular",
        "JS",
        "NodeJs",
        "Design",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Manage",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Use",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "Design",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Develop",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "implementation",
        "Apache",
        "Spark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plotlib",
        "library",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Export",
        "Test",
        "case",
        "Scripts",
        "selenium",
        "scripts",
        "Selenium",
        "environment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "website",
        "Python",
        "Beautiful",
        "Soup",
        "XML",
        "data",
        "JSONBSON",
        "Used",
        "NLTK",
        "StanfordNLP",
        "text",
        "data",
        "intelligence",
        "Querying",
        "data",
        "MongoDB",
        "input",
        "machine",
        "learning",
        "models",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Wrote",
        "UNIX",
        "shell",
        "scripting",
        "automation",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "Language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "features",
        "Django",
        "HTML",
        "TestDriven",
        "Development",
        "TDD",
        "Increase",
        "speed",
        "search",
        "indexes",
        "Django",
        "ORM",
        "optimizations",
        "Develop",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "PostgreSQL",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Jupyter",
        "Notebook",
        "VIM",
        "PyCharm",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Developer",
        "NIKE",
        "Salem",
        "OREGAN",
        "May",
        "May",
        "Responsibilities",
        "Django",
        "Database",
        "APIs",
        "database",
        "Query",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "order",
        "web",
        "solution",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "experience",
        "BIG",
        "DATA",
        "Business",
        "Logic",
        "python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GItHUB",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "companys",
        "platform",
        "DCAE",
        "python",
        "components",
        "Python",
        "libraries",
        "Click",
        "Pandas",
        "Matplotlib",
        "analysis",
        "manipulation",
        "data",
        "Click",
        "package",
        "command",
        "line",
        "interface",
        "Designed",
        "Docker",
        "proofofconcept",
        "Hashicorps",
        "Nomad",
        "Consul",
        "Consul",
        "Service",
        "Discovery",
        "KeyValue",
        "pair",
        "Wrote",
        "Python",
        "scripts",
        "files",
        "data",
        "Consul",
        "Python",
        "IDE",
        "Pycharm",
        "code",
        "unit",
        "test",
        "development",
        "Python",
        "bug",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Responsible",
        "Design",
        "maintenance",
        "databases",
        "Python",
        "Developed",
        "Python",
        "APIs",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "IDEA",
        "Development",
        "systems",
        "Python",
        "Created",
        "data",
        "access",
        "modules",
        "python",
        "Designed",
        "solutions",
        "Git",
        "GitHub",
        "microservices",
        "deployment",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wire",
        "shark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "GENFARE",
        "Naperville",
        "IL",
        "August",
        "April",
        "Responsibilities",
        "layers",
        "Front",
        "end",
        "Web",
        "Applications",
        "W3C",
        "XHTML",
        "HTML5",
        "PHP",
        "CSS3",
        "standards",
        "Python",
        "Django",
        "Payment",
        "Processing",
        "monitoring",
        "payments",
        "solutions",
        "software",
        "life",
        "cycle",
        "SDLC",
        "web",
        "application",
        "application",
        "Python",
        "Django",
        "EndtoEnd",
        "Web",
        "application",
        "development",
        "MVC",
        "architecture",
        "frontend",
        "CSS3",
        "HTML5",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "PyUnit",
        "Designed",
        "Database",
        "Model",
        "application",
        "tables",
        "Views",
        "procedures",
        "Implementation",
        "client",
        "side",
        "validations",
        "JQuery",
        "Angular",
        "JS",
        "ASPNET",
        "MVC",
        "Validation",
        "Controller",
        "level",
        "classes",
        "classes",
        "business",
        "logic",
        "C",
        "NET",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Drive",
        "Development",
        "BDD",
        "programming",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Experience",
        "CSS",
        "concepts",
        "tablefree",
        "layouts",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "APIs",
        "party",
        "data",
        "analysis",
        "representation",
        "data",
        "Pandas",
        "data",
        "Sort",
        "data",
        "histograms",
        "Python",
        "Scripts",
        "Excel",
        "CSV",
        "files",
        "Statistical",
        "Reports",
        "Pandas",
        "Statistical",
        "Analysis",
        "application",
        "Numpy",
        "math",
        "functionalities",
        "Experience",
        "Python",
        "Libraries",
        "HTTPLib2",
        "Urllib",
        "GitHub",
        "Version",
        "Control",
        "System",
        "project",
        "code",
        "Heroku",
        "Worked",
        "XML",
        "documents",
        "XML",
        "Schema",
        "definition",
        "XSD",
        "scripts",
        "data",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "JavaScript",
        "Dynamic",
        "Page",
        "Functionality",
        "popup",
        "screens",
        "user",
        "entry",
        "Developed",
        "Reusable",
        "classes",
        "middleware",
        "Hibernate",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS3",
        "Ruby",
        "JIRA",
        "TDD",
        "AJAX",
        "JQuery",
        "JavaScript",
        "MySQL",
        "Angular",
        "JS",
        "Linux",
        "Apache",
        "XML",
        "Git",
        "PYTHON",
        "DEVELOPER",
        "Eclature",
        "Technologies",
        "Hyderabad",
        "Telangana",
        "May",
        "June",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "code",
        "Python",
        "manipulate",
        "data",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "packages",
        "soup",
        "data",
        "writing",
        "data",
        "CSV",
        "file",
        "formats",
        "Python",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQL",
        "Alchemy",
        "reports",
        "application",
        "Tableau",
        "companys",
        "framework",
        "Python",
        "framework",
        "basement",
        "services",
        "development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "MongoDB",
        "Design",
        "environment",
        "MongoDB",
        "shards",
        "replica",
        "DevTest",
        "productions",
        "components",
        "Python",
        "Django",
        "framework",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "CherryPy",
        "Bootstrap",
        "jQuery",
        "Pythonbased",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "Experience",
        "applications",
        "Spark",
        "Scala",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "SDLC",
        "process",
        "tasks",
        "Ansible",
        "Extracting",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "sets",
        "PLSQL",
        "scripts",
        "data",
        "conversions",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "vendors",
        "queries",
        "meetings",
        "client",
        "project",
        "help",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "jQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Quality",
        "Centre",
        "Ansible",
        "PLSQL",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "Django",
        "Git",
        "Html",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:47:38.136196",
    "resume_data": "SR Python Developer SR span lPythonspan span lDeveloperspan Austin TX Overall 8 years of industrial experience as professional developer and has more than 4 years of experience in Designing Developing Deploying and maintaining web application based on Django Python platforms More than 2 years of experience in developing Web Applications using Django and Flask inclusive of experience in UI using JavaScript AngularJS and ReactRedux Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience SR Python Developer Q2 Ebanking Austin Texas Austin TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery AngularJs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer UPS Atlanta GA June 2015 to July 2017 Responsibilities Worked on predictive analytics usecases using R language Use Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and JQuery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack NumPy SciPy panda sand Matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy Matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJs Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features using Django HTML and TestDriven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django HTML5CSS PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM PyCharm Shell Scripting AngularJS JIRA Python Developer NIKE Salem OREGAN May 2013 to May 2015 Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GItHUB Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using python on Django Web Framework Developed views and templates with python and Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML and DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservices and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Created UI Screens for initiation and validation Environment Python Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer GENFARE Naperville IL August 2012 to April 2013 Responsibilities Involved in different layers such as Front and Back end Developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions Involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures Implementation of client side validations using JQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET Develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Experience with advanced CSS concepts and building tablefree layouts Worked on frontend frameworks like CSS Bootstrap for development of Web applications Experienced in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the third party data for the internal analysis and statistical representation of that data Worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Experience with Python Libraries such as HTTPLib2 Urllib Used GitHub for Version Control System and deployed the project code into Heroku Worked on XML documents based on XML Schema definition XSD with python scripts to load the data to database Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Developed Reusable classes in the middleware using Hibernate Environment Python Django 17 HTML5 CSS3 Ruby JIRA TDD AJAX JQuery JavaScript AWS MySQL Angular JS Linux Apache XML Git PYTHON DEVELOPER Eclature Technologies Hyderabad Telangana May 2011 to June 2012 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API and MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Education Bachelors Skills C Django Git Html Javascript",
    "unique_id": "f4690bbd-c6ce-4415-a7c2-2c6a51f30719"
}