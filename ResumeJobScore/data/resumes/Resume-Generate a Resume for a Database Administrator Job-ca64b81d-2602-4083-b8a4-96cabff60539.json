{
    "clean_data": "Systems Architect Systems Architect Systems Architect II AAC Frisco TX I have been designing and developing software since 1997 and have worked a variety of projects in a variety of industries I am interested in working with multiple development toolchains and mobile devices Authorized to work in the US for any employer Work Experience Systems Architect Balfour Taylor Publishing Dallas TX January 2014 to Present At Balfour I am responsible for designing and implementing a core services and systems that are used by multiple products lines of business and thousands of concurrent users Designed and developed a federated identity management system using Python Flask RabbitMQ and OpenStack Keystone Designed and implemented various ReST APIs and services with Python Flask and RabbitMQ Minor DevOps work deploying configuring and deploying services and applications in AWS and private cloud resources using Salt Bamboo and Fabric Collaborating to design and implement a datacenter and a data mart to normalize reporting and enable inhouse analytics Mentored jr Python Programmers and jr QA Resources Ported Legacy Java services to PythonFlask ReST APIs Designed and worked closely with outsource partners to monitor code quality and manage development of a large scale Image Repository Service Developed web based year book publishing system implemented as a SinglePage Web App SPA using AngularJS and Python Application Architect ZeOmega Frisco TX October 2011 to January 2014 I work with the application architecture and interface teams to refactor and enhance our products to enhance scaleability testability and reliability Lead effort to implement REST services for ZeOmegas first mobile application Developed prototypes for integrating existing Web Applications with RabbitMQ Developed inhouse testing and configuration tools using Django CherryPy and Apache Lead refactoring effort to move existing products from a monolithic to more component based architecture Designed and implemented a high performance session management package for Zope using PyMongo and MongoDB Worked with a penetrationsecurity consultant to identify and mitigate security flaws in our products Developed and currently leading a comprehensive security enhancement plan for ZeOmegas products based on best practices published by OWASP and others Developed a Python toolkit that enables ZeOmegas products to use multiple SSO technologies including SAML OAuth Occasionally support the sales team by participating in onsite and remote technical QA session with prospective customers Support customer implementation teams by participating in deepdive technical requirement discussion with customers Lead a small team of developers on SCRUMlike sprints Sr Software Developer ZeOmega Frisco TX August 2010 to August 2011 I worked with application interface and integration team to build and extend public APIs and integration points for ZeOmegas flagship product Jiva Designed and implemented an enhancements to ZeOmegas ETL engine Made major changes to the internal and external API of the python soap library soaplib to improve quality consistency testability and Zope integration Developed ZeOmegas XML and XSD toolchain to support new web service APIs Assisted with development of a WSRP support and integration in Python Prototyped and submitted development plan python integration with the telephony and presence platform Avaya ACE Designed and implemented SAML2 based single sign on SSO with lxml Designed and implemented an extensible generic Document Management System DMS adapter using Python that supports arbitrary DMS vendors as well as the CMIS specification Prepared training materials for the rest of the team for XML and Web Services Consultant Python Web Programmer ProfitOptix Grapevine TX March 2010 to May 2010 Enhanced an existing Python Web Application to integrate with Medicare and Medicaid Insurance providers Used soaplib to provide Web Services that enabled Health Care Providers to place and edit lens and frame prescriptions for patients Modified the existing Web Applications forms and pages to streamline the interface using the jQuery and Prototype Javascript libraries Built a data access layer for the soap based Web Services using SQLAlchemy Used agilescrum development methodologies by participating in Sprint Planning timed releases and daily Stand Up meetings Introduced unit tests and intergeneration tests to deal with a large undocumented codebase Consultant Django Python Programmer TheAccountGuidecom Seattle WA 2010 to 2010 2010 Refactored enhanced and maintained a single Django application that runs more than thirty production sites on a single application instance Developed several custom Administrator functions that enabled staff to handle customer requests Set up integration tests and unit test on existing code base to that reduced programmer and deployment errors Developed deployment automation using Fabric Simplified template logic by using custom Template Tags and custom Template Filters Implemented a payment processing module using PayPal Google Checkout and Chase Paymetech web services Enhanced the webs applications front end by using Google Maps and jQuery ConsultantProgrammer SciTech Frisco TX 2009 to 2009 2009 Developed membership sponsorship management software Designed a database for member management using PostgreSql Built a Management ThickSmart Client front end using PyQt and Python that allowed board members to track modify and email sponsors and members ConsultantProgrammer Ruttle Consulting Addison TX 2007 to 2007 2007 Developed a Neighborhood Walking program used by political consultants and volunteers for local elections Built a Thick Client Application using Python PyQt and SQL object that enabled users to import large volumes of data into a PostgreSql database Developed walking rules based on mined data Used Django to build a front end to a web application that allowed volunteers input their neighborhood walking results Used Unit Test and Continuous Integration to reduce errors and unexpected issues ConsultantProgrammer Wardog Studios San Diego CA 2006 to 2007 Back End Game Server Development using the Multiversenet platform Used Python C Stackless to script ingame events and actions Used Python to develop simple scripted behavior for nonplayer characters Used C to modify gameclient behavior and appearance Setup and managed a CentOS servers that ran the game server as well as the games MySql database server Setup and managed a SVN server for code and asset management Programmer US Auto Addison TX 2003 to 2006 Front and back end development of a production website using ASPnet Javascript C vbnet SQL server Website was used by independent insurance agents to generate quotes for potential customers manage their current customers as well as track and monitor their commissions Used C Crystal Reports and VB6 to develop next generation of Agent Auto Insurance quote engine This quote engine was used by both a Thick Client and ASPnet web sites Built a secure Payment system using SOAP C and MS SQL server The payment system was used by both a Thick Client and Web application Utilized Python to develop an internal auditing and reporting application used by insurance adjusters Was responsible for database design and maintenance with a MS SQL Server back end Developed client license monitoring software using C and active directory Introduced and maintained SVN scm and Track issue and task tracking Used Unit Test and TDD where appropriate for existing and new software Programmer EMC Mortgage Corp Las Colinas TX 2002 to 2003 Used C VB and MS SQL to develop next generation of ARM Mortgage servicing software Developed mailing automation software using Python and MS Office Maintained existing mortgage servicing software developed with COBOL Programmer Analyst Exolink Corp Lewisville TX 2001 to 2002 Full life cycle development of Business Market Rules applied to XML and EDI transactions using a Java based transaction message broker and Python scripting on Windows and Linux Built parsers using Python to parse formatted EDI and XML files into Flat File LayoutStructures Used PLSQL for reporting of transaction statistics and reconciliation of transaction discrepancies Responsible for test case development as well as performing regression and unit tests Process Engineer Texas Instruments Dallas TX 1991 to 2001 Maintained and supported a custom reporting system built using Visual Basic 6 and Java to communicate with mainframe databases via ADO Composed PERL and Python scripts for parsing and formatting of statistical and parametric data Supported internal group website using basic HTML Responsible for support of manufacturing processes of DSP and microprocessors by monitoring and improving CMP process performance and metrics Process Engineer Texas Instruments Chandler AZ 1997 to 1999 Designed and built a Relational Database System using MS Access Visual Basic and ADO for tracking process metrics such as MTBF and MTTR as well as process solutions Responsible for leading team based approaches to equipment installation and process qualifications Responsible for process development for new products on site at customer locations in North America Europe and Southeast Asia Education BS in Physics Arizona State University 1997 Additional Information SKILLS Programming Languages Python C Java Javascript HTML CSS XML SQL C and C Server Technologies SOAP ReST SQL Server MySQL PostgreSQL and Active Directory SCMs Git Mercurial SVN Libraries and Toolkits Django Flask soaplib JQuery Net Qt Win Forms ASPnet and Zope2 Operating Systems Windows Linux OS X",
    "entities": [
        "Python Flask",
        "Zope",
        "ConsultantProgrammer Wardog Studios",
        "Business Market Rules",
        "Assisted",
        "CMIS",
        "PostgreSql",
        "Process Engineer",
        "C Server Technologies SOAP ReST",
        "VB6",
        "Developed",
        "CMP",
        "Medicare",
        "PostgreSql Built a Management ThickSmart Client",
        "Work Experience Systems",
        "US",
        "Git Mercurial SVN Libraries",
        "Physics Arizona State University",
        "QA",
        "Dallas",
        "Python and MS Office Maintained",
        "EDI",
        "HTML Responsible",
        "Google Maps",
        "AWS",
        "ASPnet",
        "Windows",
        "Document Management System",
        "MTTR",
        "DSP",
        "Active Directory",
        "XSD",
        "Seattle",
        "SVN",
        "Medicaid Insurance",
        "Designed",
        "Python Prototyped",
        "Sprint Planning",
        "MTBF",
        "SQL",
        "REST",
        "XML",
        "Introduced",
        "Programmer EMC Mortgage Corp Las Colinas",
        "Visual",
        "DMS",
        "WSRP",
        "PayPal Google Checkout",
        "Chase Paymetech",
        "ZeOmegas",
        "Template Tags",
        "Programmer US Auto Addison",
        "Agent Auto Insurance",
        "TDD",
        "ADO",
        "DevOps",
        "OWASP",
        "Health Care Providers",
        "Setup",
        "Salt Bamboo and Fabric Collaborating",
        "QA Resources",
        "Image Repository Service Developed",
        "Python Application Architect",
        "Refactored",
        "PyQt",
        "TX",
        "ConsultantProgrammer Ruttle Consulting Addison",
        "ReST",
        "Flat File LayoutStructures",
        "MySql"
    ],
    "experience": "Experience Systems Architect Balfour Taylor Publishing Dallas TX January 2014 to Present At Balfour I am responsible for designing and implementing a core services and systems that are used by multiple products lines of business and thousands of concurrent users Designed and developed a federated identity management system using Python Flask RabbitMQ and OpenStack Keystone Designed and implemented various ReST APIs and services with Python Flask and RabbitMQ Minor DevOps work deploying configuring and deploying services and applications in AWS and private cloud resources using Salt Bamboo and Fabric Collaborating to design and implement a datacenter and a data mart to normalize reporting and enable inhouse analytics Mentored jr Python Programmers and jr QA Resources Ported Legacy Java services to PythonFlask ReST APIs Designed and worked closely with outsource partners to monitor code quality and manage development of a large scale Image Repository Service Developed web based year book publishing system implemented as a SinglePage Web App SPA using AngularJS and Python Application Architect ZeOmega Frisco TX October 2011 to January 2014 I work with the application architecture and interface teams to refactor and enhance our products to enhance scaleability testability and reliability Lead effort to implement REST services for ZeOmegas first mobile application Developed prototypes for integrating existing Web Applications with RabbitMQ Developed inhouse testing and configuration tools using Django CherryPy and Apache Lead refactoring effort to move existing products from a monolithic to more component based architecture Designed and implemented a high performance session management package for Zope using PyMongo and MongoDB Worked with a penetrationsecurity consultant to identify and mitigate security flaws in our products Developed and currently leading a comprehensive security enhancement plan for ZeOmegas products based on best practices published by OWASP and others Developed a Python toolkit that enables ZeOmegas products to use multiple SSO technologies including SAML OAuth Occasionally support the sales team by participating in onsite and remote technical QA session with prospective customers Support customer implementation teams by participating in deepdive technical requirement discussion with customers Lead a small team of developers on SCRUMlike sprints Sr Software Developer ZeOmega Frisco TX August 2010 to August 2011 I worked with application interface and integration team to build and extend public APIs and integration points for ZeOmegas flagship product Jiva Designed and implemented an enhancements to ZeOmegas ETL engine Made major changes to the internal and external API of the python soap library soaplib to improve quality consistency testability and Zope integration Developed ZeOmegas XML and XSD toolchain to support new web service APIs Assisted with development of a WSRP support and integration in Python Prototyped and submitted development plan python integration with the telephony and presence platform Avaya ACE Designed and implemented SAML2 based single sign on SSO with lxml Designed and implemented an extensible generic Document Management System DMS adapter using Python that supports arbitrary DMS vendors as well as the CMIS specification Prepared training materials for the rest of the team for XML and Web Services Consultant Python Web Programmer ProfitOptix Grapevine TX March 2010 to May 2010 Enhanced an existing Python Web Application to integrate with Medicare and Medicaid Insurance providers Used soaplib to provide Web Services that enabled Health Care Providers to place and edit lens and frame prescriptions for patients Modified the existing Web Applications forms and pages to streamline the interface using the jQuery and Prototype Javascript libraries Built a data access layer for the soap based Web Services using SQLAlchemy Used agilescrum development methodologies by participating in Sprint Planning timed releases and daily Stand Up meetings Introduced unit tests and intergeneration tests to deal with a large undocumented codebase Consultant Django Python Programmer TheAccountGuidecom Seattle WA 2010 to 2010 2010 Refactored enhanced and maintained a single Django application that runs more than thirty production sites on a single application instance Developed several custom Administrator functions that enabled staff to handle customer requests Set up integration tests and unit test on existing code base to that reduced programmer and deployment errors Developed deployment automation using Fabric Simplified template logic by using custom Template Tags and custom Template Filters Implemented a payment processing module using PayPal Google Checkout and Chase Paymetech web services Enhanced the webs applications front end by using Google Maps and jQuery ConsultantProgrammer SciTech Frisco TX 2009 to 2009 2009 Developed membership sponsorship management software Designed a database for member management using PostgreSql Built a Management ThickSmart Client front end using PyQt and Python that allowed board members to track modify and email sponsors and members ConsultantProgrammer Ruttle Consulting Addison TX 2007 to 2007 2007 Developed a Neighborhood Walking program used by political consultants and volunteers for local elections Built a Thick Client Application using Python PyQt and SQL object that enabled users to import large volumes of data into a PostgreSql database Developed walking rules based on mined data Used Django to build a front end to a web application that allowed volunteers input their neighborhood walking results Used Unit Test and Continuous Integration to reduce errors and unexpected issues ConsultantProgrammer Wardog Studios San Diego CA 2006 to 2007 Back End Game Server Development using the Multiversenet platform Used Python C Stackless to script ingame events and actions Used Python to develop simple scripted behavior for nonplayer characters Used C to modify gameclient behavior and appearance Setup and managed a CentOS servers that ran the game server as well as the games MySql database server Setup and managed a SVN server for code and asset management Programmer US Auto Addison TX 2003 to 2006 Front and back end development of a production website using ASPnet Javascript C vbnet SQL server Website was used by independent insurance agents to generate quotes for potential customers manage their current customers as well as track and monitor their commissions Used C Crystal Reports and VB6 to develop next generation of Agent Auto Insurance quote engine This quote engine was used by both a Thick Client and ASPnet web sites Built a secure Payment system using SOAP C and MS SQL server The payment system was used by both a Thick Client and Web application Utilized Python to develop an internal auditing and reporting application used by insurance adjusters Was responsible for database design and maintenance with a MS SQL Server back end Developed client license monitoring software using C and active directory Introduced and maintained SVN scm and Track issue and task tracking Used Unit Test and TDD where appropriate for existing and new software Programmer EMC Mortgage Corp Las Colinas TX 2002 to 2003 Used C VB and MS SQL to develop next generation of ARM Mortgage servicing software Developed mailing automation software using Python and MS Office Maintained existing mortgage servicing software developed with COBOL Programmer Analyst Exolink Corp Lewisville TX 2001 to 2002 Full life cycle development of Business Market Rules applied to XML and EDI transactions using a Java based transaction message broker and Python scripting on Windows and Linux Built parsers using Python to parse formatted EDI and XML files into Flat File LayoutStructures Used PLSQL for reporting of transaction statistics and reconciliation of transaction discrepancies Responsible for test case development as well as performing regression and unit tests Process Engineer Texas Instruments Dallas TX 1991 to 2001 Maintained and supported a custom reporting system built using Visual Basic 6 and Java to communicate with mainframe databases via ADO Composed PERL and Python scripts for parsing and formatting of statistical and parametric data Supported internal group website using basic HTML Responsible for support of manufacturing processes of DSP and microprocessors by monitoring and improving CMP process performance and metrics Process Engineer Texas Instruments Chandler AZ 1997 to 1999 Designed and built a Relational Database System using MS Access Visual Basic and ADO for tracking process metrics such as MTBF and MTTR as well as process solutions Responsible for leading team based approaches to equipment installation and process qualifications Responsible for process development for new products on site at customer locations in North America Europe and Southeast Asia Education BS in Physics Arizona State University 1997 Additional Information SKILLS Programming Languages Python C Java Javascript HTML CSS XML SQL C and C Server Technologies SOAP ReST SQL Server MySQL PostgreSQL and Active Directory SCMs Git Mercurial SVN Libraries and Toolkits Django Flask soaplib JQuery Net Qt Win Forms ASPnet and Zope2 Operating Systems Windows Linux OS X",
    "extracted_keywords": [
        "Systems",
        "Architect",
        "Systems",
        "Architect",
        "Systems",
        "Architect",
        "II",
        "AAC",
        "Frisco",
        "TX",
        "software",
        "variety",
        "projects",
        "variety",
        "industries",
        "development",
        "toolchains",
        "devices",
        "US",
        "employer",
        "Work",
        "Experience",
        "Systems",
        "Architect",
        "Balfour",
        "Taylor",
        "Publishing",
        "Dallas",
        "TX",
        "January",
        "Present",
        "Balfour",
        "core",
        "services",
        "systems",
        "products",
        "lines",
        "business",
        "thousands",
        "users",
        "identity",
        "management",
        "system",
        "Python",
        "Flask",
        "RabbitMQ",
        "OpenStack",
        "Keystone",
        "ReST",
        "APIs",
        "services",
        "Python",
        "Flask",
        "DevOps",
        "work",
        "configuring",
        "services",
        "applications",
        "AWS",
        "resources",
        "Salt",
        "Bamboo",
        "Fabric",
        "Collaborating",
        "datacenter",
        "data",
        "mart",
        "reporting",
        "inhouse",
        "analytics",
        "Mentored",
        "jr",
        "Python",
        "Programmers",
        "jr",
        "QA",
        "Resources",
        "Legacy",
        "Java",
        "services",
        "PythonFlask",
        "ReST",
        "APIs",
        "partners",
        "code",
        "quality",
        "development",
        "scale",
        "Image",
        "Repository",
        "Service",
        "Developed",
        "web",
        "year",
        "book",
        "publishing",
        "system",
        "SinglePage",
        "Web",
        "App",
        "SPA",
        "AngularJS",
        "Python",
        "Application",
        "Architect",
        "ZeOmega",
        "Frisco",
        "TX",
        "October",
        "January",
        "application",
        "architecture",
        "interface",
        "teams",
        "products",
        "scaleability",
        "testability",
        "reliability",
        "Lead",
        "effort",
        "REST",
        "services",
        "ZeOmegas",
        "application",
        "prototypes",
        "Web",
        "Applications",
        "RabbitMQ",
        "inhouse",
        "testing",
        "configuration",
        "tools",
        "Django",
        "CherryPy",
        "Apache",
        "Lead",
        "refactoring",
        "effort",
        "products",
        "component",
        "architecture",
        "performance",
        "session",
        "management",
        "package",
        "Zope",
        "PyMongo",
        "MongoDB",
        "penetrationsecurity",
        "consultant",
        "security",
        "flaws",
        "products",
        "security",
        "enhancement",
        "plan",
        "ZeOmegas",
        "products",
        "practices",
        "OWASP",
        "others",
        "Python",
        "toolkit",
        "ZeOmegas",
        "products",
        "SSO",
        "technologies",
        "SAML",
        "OAuth",
        "sales",
        "team",
        "QA",
        "session",
        "customers",
        "customer",
        "implementation",
        "teams",
        "requirement",
        "discussion",
        "customers",
        "team",
        "developers",
        "SCRUMlike",
        "sprints",
        "Sr",
        "Software",
        "Developer",
        "ZeOmega",
        "Frisco",
        "TX",
        "August",
        "August",
        "application",
        "interface",
        "integration",
        "team",
        "APIs",
        "integration",
        "points",
        "ZeOmegas",
        "flagship",
        "product",
        "Jiva",
        "enhancements",
        "ZeOmegas",
        "ETL",
        "engine",
        "changes",
        "API",
        "python",
        "soap",
        "library",
        "soaplib",
        "quality",
        "consistency",
        "testability",
        "Zope",
        "integration",
        "Developed",
        "ZeOmegas",
        "XML",
        "XSD",
        "toolchain",
        "web",
        "service",
        "APIs",
        "development",
        "WSRP",
        "support",
        "integration",
        "Python",
        "Prototyped",
        "development",
        "plan",
        "python",
        "integration",
        "telephony",
        "presence",
        "platform",
        "Avaya",
        "ACE",
        "SAML2",
        "sign",
        "SSO",
        "lxml",
        "Document",
        "Management",
        "System",
        "DMS",
        "adapter",
        "Python",
        "DMS",
        "vendors",
        "CMIS",
        "specification",
        "training",
        "materials",
        "rest",
        "team",
        "XML",
        "Web",
        "Services",
        "Consultant",
        "Python",
        "Web",
        "Programmer",
        "ProfitOptix",
        "Grapevine",
        "TX",
        "March",
        "May",
        "Python",
        "Web",
        "Application",
        "Medicare",
        "Medicaid",
        "Insurance",
        "providers",
        "soaplib",
        "Web",
        "Services",
        "Health",
        "Care",
        "Providers",
        "edit",
        "lens",
        "frame",
        "prescriptions",
        "patients",
        "Web",
        "Applications",
        "forms",
        "pages",
        "interface",
        "jQuery",
        "Prototype",
        "Javascript",
        "data",
        "access",
        "layer",
        "soap",
        "Web",
        "Services",
        "SQLAlchemy",
        "agilescrum",
        "development",
        "methodologies",
        "Sprint",
        "Planning",
        "releases",
        "meetings",
        "unit",
        "tests",
        "intergeneration",
        "tests",
        "codebase",
        "Consultant",
        "Django",
        "Python",
        "Programmer",
        "TheAccountGuidecom",
        "Seattle",
        "WA",
        "Django",
        "application",
        "production",
        "sites",
        "application",
        "instance",
        "custom",
        "Administrator",
        "functions",
        "staff",
        "customer",
        "requests",
        "integration",
        "tests",
        "unit",
        "test",
        "code",
        "base",
        "programmer",
        "deployment",
        "errors",
        "deployment",
        "automation",
        "Fabric",
        "Simplified",
        "template",
        "logic",
        "custom",
        "Template",
        "Tags",
        "custom",
        "Template",
        "Filters",
        "payment",
        "processing",
        "module",
        "PayPal",
        "Google",
        "Checkout",
        "Chase",
        "Paymetech",
        "web",
        "services",
        "webs",
        "applications",
        "end",
        "Google",
        "Maps",
        "jQuery",
        "ConsultantProgrammer",
        "SciTech",
        "Frisco",
        "TX",
        "membership",
        "sponsorship",
        "management",
        "software",
        "database",
        "member",
        "management",
        "PostgreSql",
        "Management",
        "ThickSmart",
        "Client",
        "front",
        "end",
        "PyQt",
        "Python",
        "board",
        "members",
        "email",
        "sponsors",
        "members",
        "ConsultantProgrammer",
        "Ruttle",
        "Consulting",
        "Addison",
        "TX",
        "Neighborhood",
        "program",
        "consultants",
        "volunteers",
        "elections",
        "Thick",
        "Client",
        "Application",
        "Python",
        "PyQt",
        "SQL",
        "object",
        "users",
        "volumes",
        "data",
        "PostgreSql",
        "database",
        "walking",
        "rules",
        "data",
        "Django",
        "end",
        "web",
        "application",
        "volunteers",
        "neighborhood",
        "walking",
        "results",
        "Unit",
        "Test",
        "Continuous",
        "Integration",
        "errors",
        "issues",
        "ConsultantProgrammer",
        "Wardog",
        "Studios",
        "San",
        "Diego",
        "CA",
        "End",
        "Game",
        "Server",
        "Development",
        "Multiversenet",
        "platform",
        "Python",
        "C",
        "Stackless",
        "script",
        "events",
        "actions",
        "Python",
        "behavior",
        "characters",
        "C",
        "gameclient",
        "behavior",
        "appearance",
        "Setup",
        "CentOS",
        "servers",
        "game",
        "server",
        "games",
        "MySql",
        "database",
        "server",
        "Setup",
        "SVN",
        "server",
        "code",
        "asset",
        "management",
        "Programmer",
        "US",
        "Auto",
        "Addison",
        "TX",
        "Front",
        "end",
        "development",
        "production",
        "website",
        "ASPnet",
        "Javascript",
        "C",
        "vbnet",
        "SQL",
        "server",
        "Website",
        "insurance",
        "agents",
        "quotes",
        "customers",
        "customers",
        "track",
        "commissions",
        "C",
        "Crystal",
        "Reports",
        "VB6",
        "generation",
        "Agent",
        "Auto",
        "Insurance",
        "quote",
        "engine",
        "Thick",
        "Client",
        "ASPnet",
        "web",
        "sites",
        "Payment",
        "system",
        "SOAP",
        "C",
        "MS",
        "SQL",
        "server",
        "payment",
        "system",
        "Thick",
        "Client",
        "Web",
        "application",
        "Python",
        "auditing",
        "reporting",
        "application",
        "insurance",
        "adjusters",
        "database",
        "design",
        "maintenance",
        "MS",
        "SQL",
        "Server",
        "end",
        "client",
        "license",
        "monitoring",
        "software",
        "C",
        "directory",
        "SVN",
        "scm",
        "Track",
        "issue",
        "task",
        "Unit",
        "Test",
        "TDD",
        "software",
        "Programmer",
        "EMC",
        "Mortgage",
        "Corp",
        "Las",
        "Colinas",
        "TX",
        "Used",
        "C",
        "VB",
        "MS",
        "SQL",
        "generation",
        "ARM",
        "Mortgage",
        "servicing",
        "software",
        "mailing",
        "automation",
        "software",
        "Python",
        "MS",
        "Office",
        "mortgage",
        "servicing",
        "software",
        "COBOL",
        "Programmer",
        "Analyst",
        "Exolink",
        "Corp",
        "Lewisville",
        "TX",
        "life",
        "cycle",
        "development",
        "Business",
        "Market",
        "Rules",
        "XML",
        "EDI",
        "transactions",
        "Java",
        "transaction",
        "message",
        "broker",
        "Python",
        "scripting",
        "Windows",
        "Linux",
        "parsers",
        "Python",
        "EDI",
        "XML",
        "files",
        "Flat",
        "File",
        "LayoutStructures",
        "PLSQL",
        "reporting",
        "transaction",
        "statistics",
        "reconciliation",
        "transaction",
        "discrepancies",
        "test",
        "case",
        "development",
        "regression",
        "unit",
        "Process",
        "Engineer",
        "Texas",
        "Instruments",
        "Dallas",
        "TX",
        "custom",
        "reporting",
        "system",
        "Visual",
        "Basic",
        "Java",
        "mainframe",
        "databases",
        "ADO",
        "Composed",
        "PERL",
        "Python",
        "scripts",
        "formatting",
        "data",
        "group",
        "website",
        "HTML",
        "support",
        "manufacturing",
        "processes",
        "DSP",
        "microprocessors",
        "CMP",
        "process",
        "performance",
        "metrics",
        "Process",
        "Engineer",
        "Texas",
        "Instruments",
        "Chandler",
        "AZ",
        "Relational",
        "Database",
        "System",
        "MS",
        "Access",
        "Visual",
        "Basic",
        "ADO",
        "process",
        "metrics",
        "MTBF",
        "MTTR",
        "process",
        "solutions",
        "team",
        "approaches",
        "equipment",
        "installation",
        "process",
        "qualifications",
        "process",
        "development",
        "products",
        "site",
        "customer",
        "locations",
        "North",
        "America",
        "Europe",
        "Southeast",
        "Asia",
        "Education",
        "BS",
        "Physics",
        "Arizona",
        "State",
        "University",
        "Information",
        "SKILLS",
        "Programming",
        "Languages",
        "Python",
        "C",
        "Java",
        "Javascript",
        "HTML",
        "CSS",
        "XML",
        "SQL",
        "C",
        "C",
        "Server",
        "Technologies",
        "SOAP",
        "ReST",
        "SQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "Active",
        "Directory",
        "SCMs",
        "Git",
        "Mercurial",
        "SVN",
        "Libraries",
        "Toolkits",
        "Django",
        "Flask",
        "soaplib",
        "JQuery",
        "Net",
        "Qt",
        "Win",
        "Forms",
        "ASPnet",
        "Zope2",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "OS",
        "X"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:54:32.141311",
    "resume_data": "Systems Architect Systems Architect Systems Architect II AAC Frisco TX I have been designing and developing software since 1997 and have worked a variety of projects in a variety of industries I am interested in working with multiple development toolchains and mobile devices Authorized to work in the US for any employer Work Experience Systems Architect Balfour Taylor Publishing Dallas TX January 2014 to Present At Balfour I am responsible for designing and implementing a core services and systems that are used by multiple products lines of business and thousands of concurrent users Designed and developed a federated identity management system using Python Flask RabbitMQ and OpenStack Keystone Designed and implemented various ReST APIs and services with Python Flask and RabbitMQ Minor DevOps work deploying configuring and deploying services and applications in AWS and private cloud resources using Salt Bamboo and Fabric Collaborating to design and implement a datacenter and a data mart to normalize reporting and enable inhouse analytics Mentored jr Python Programmers and jr QA Resources Ported Legacy Java services to PythonFlask ReST APIs Designed and worked closely with outsource partners to monitor code quality and manage development of a large scale Image Repository Service Developed web based year book publishing system implemented as a SinglePage Web App SPA using AngularJS and Python Application Architect ZeOmega Frisco TX October 2011 to January 2014 I work with the application architecture and interface teams to refactor and enhance our products to enhance scaleability testability and reliability Lead effort to implement REST services for ZeOmegas first mobile application Developed prototypes for integrating existing Web Applications with RabbitMQ Developed inhouse testing and configuration tools using Django CherryPy and Apache Lead refactoring effort to move existing products from a monolithic to more component based architecture Designed and implemented a high performance session management package for Zope using PyMongo and MongoDB Worked with a penetrationsecurity consultant to identify and mitigate security flaws in our products Developed and currently leading a comprehensive security enhancement plan for ZeOmegas products based on best practices published by OWASP and others Developed a Python toolkit that enables ZeOmegas products to use multiple SSO technologies including SAML OAuth Occasionally support the sales team by participating in onsite and remote technical QA session with prospective customers Support customer implementation teams by participating in deepdive technical requirement discussion with customers Lead a small team of developers on SCRUMlike sprints Sr Software Developer ZeOmega Frisco TX August 2010 to August 2011 I worked with application interface and integration team to build and extend public APIs and integration points for ZeOmegas flagship product Jiva Designed and implemented an enhancements to ZeOmegas ETL engine Made major changes to the internal and external API of the python soap library soaplib to improve quality consistency testability and Zope integration Developed ZeOmegas XML and XSD toolchain to support new web service APIs Assisted with development of a WSRP support and integration in Python Prototyped and submitted development plan python integration with the telephony and presence platform Avaya ACE Designed and implemented SAML2 based single sign on SSO with lxml Designed and implemented an extensible generic Document Management System DMS adapter using Python that supports arbitrary DMS vendors as well as the CMIS specification Prepared training materials for the rest of the team for XML and Web Services Consultant Python Web Programmer ProfitOptix Grapevine TX March 2010 to May 2010 Enhanced an existing Python Web Application to integrate with Medicare and Medicaid Insurance providers Used soaplib to provide Web Services that enabled Health Care Providers to place and edit lens and frame prescriptions for patients Modified the existing Web Applications forms and pages to streamline the interface using the jQuery and Prototype Javascript libraries Built a data access layer for the soap based Web Services using SQLAlchemy Used agilescrum development methodologies by participating in Sprint Planning timed releases and daily Stand Up meetings Introduced unit tests and intergeneration tests to deal with a large undocumented codebase Consultant Django Python Programmer TheAccountGuidecom Seattle WA 2010 to 2010 2010 Refactored enhanced and maintained a single Django application that runs more than thirty production sites on a single application instance Developed several custom Administrator functions that enabled staff to handle customer requests Set up integration tests and unit test on existing code base to that reduced programmer and deployment errors Developed deployment automation using Fabric Simplified template logic by using custom Template Tags and custom Template Filters Implemented a payment processing module using PayPal Google Checkout and Chase Paymetech web services Enhanced the webs applications front end by using Google Maps and jQuery ConsultantProgrammer SciTech Frisco TX 2009 to 2009 2009 Developed membership sponsorship management software Designed a database for member management using PostgreSql Built a Management ThickSmart Client front end using PyQt and Python that allowed board members to track modify and email sponsors and members ConsultantProgrammer Ruttle Consulting Addison TX 2007 to 2007 2007 Developed a Neighborhood Walking program used by political consultants and volunteers for local elections Built a Thick Client Application using Python PyQt and SQL object that enabled users to import large volumes of data into a PostgreSql database Developed walking rules based on mined data Used Django to build a front end to a web application that allowed volunteers input their neighborhood walking results Used Unit Test and Continuous Integration to reduce errors and unexpected issues ConsultantProgrammer Wardog Studios San Diego CA 2006 to 2007 Back End Game Server Development using the Multiversenet platform Used Python C Stackless to script ingame events and actions Used Python to develop simple scripted behavior for nonplayer characters Used C to modify gameclient behavior and appearance Setup and managed a CentOS servers that ran the game server as well as the games MySql database server Setup and managed a SVN server for code and asset management Programmer US Auto Addison TX 2003 to 2006 Front and back end development of a production website using ASPnet Javascript C vbnet SQL server Website was used by independent insurance agents to generate quotes for potential customers manage their current customers as well as track and monitor their commissions Used C Crystal Reports and VB6 to develop next generation of Agent Auto Insurance quote engine This quote engine was used by both a Thick Client and ASPnet web sites Built a secure Payment system using SOAP C and MS SQL server The payment system was used by both a Thick Client and Web application Utilized Python to develop an internal auditing and reporting application used by insurance adjusters Was responsible for database design and maintenance with a MS SQL Server back end Developed client license monitoring software using C and active directory Introduced and maintained SVN scm and Track issue and task tracking Used Unit Test and TDD where appropriate for existing and new software Programmer EMC Mortgage Corp Las Colinas TX 2002 to 2003 Used C VB and MS SQL to develop next generation of ARM Mortgage servicing software Developed mailing automation software using Python and MS Office Maintained existing mortgage servicing software developed with COBOL Programmer Analyst Exolink Corp Lewisville TX 2001 to 2002 Full life cycle development of Business Market Rules applied to XML and EDI transactions using a Java based transaction message broker and Python scripting on Windows and Linux Built parsers using Python to parse formatted EDI and XML files into Flat File LayoutStructures Used PLSQL for reporting of transaction statistics and reconciliation of transaction discrepancies Responsible for test case development as well as performing regression and unit tests Process Engineer Texas Instruments Dallas TX 1991 to 2001 Maintained and supported a custom reporting system built using Visual Basic 6 and Java to communicate with mainframe databases via ADO Composed PERL and Python scripts for parsing and formatting of statistical and parametric data Supported internal group website using basic HTML Responsible for support of manufacturing processes of DSP and microprocessors by monitoring and improving CMP process performance and metrics Process Engineer Texas Instruments Chandler AZ 1997 to 1999 Designed and built a Relational Database System using MS Access Visual Basic and ADO for tracking process metrics such as MTBF and MTTR as well as process solutions Responsible for leading team based approaches to equipment installation and process qualifications Responsible for process development for new products on site at customer locations in North America Europe and Southeast Asia Education BS in Physics Arizona State University 1997 Additional Information SKILLS Programming Languages Python C Java Javascript HTML CSS XML SQL C and C Server Technologies SOAP ReST SQL Server MySQL PostgreSQL and Active Directory SCMs Git Mercurial SVN Libraries and Toolkits Django Flask soaplib JQuery Net Qt Win Forms ASPnet and Zope2 Operating Systems Windows Linux OS X",
    "unique_id": "ca64b81d-2602-4083-b8a4-96cabff60539"
}