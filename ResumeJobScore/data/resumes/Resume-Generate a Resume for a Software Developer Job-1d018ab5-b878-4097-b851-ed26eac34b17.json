{
    "clean_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Optum Florham Park NJ Over 8 years of Professional IT experience in analysis design implementation and testing of Object Oriented Applications in ClientServer environments using JavaJ2EE Expert in Various Agile methodologies like SCRUM Test Driven DevelopmentTDD Incremental and Iteration methodology Pair Programming Agile Developmentand testing using SDLC Experienced in Core Java J2EE design patterns like Front Controller Singleton Factory Pattern Service Locator Business Delegate Data Access Object Session Faade and Value object pattern Worked on Java 18 features like functional interfaces lambda expressions and java stream API Strong programming skills with both core and advanced Java technologies including Java J2EE JSP JDBC Struts 2 Servlets JAXWS JAXRS Spring and Hibernate Expertise in serverside development with JDBC ServletsMVC architecture Java Beans XML Experienced in implementing IOCDependency Injection features through frameworks like Spring Core Spring Security Batch Spring BootEureka Netflix Spring cloud SpringAOP JDBC Used Spring Batch and Hibernate for creating batch jobs to read and write multiple formats of data Expertise in developing Web based Distributed and FrontEnd applications in a threetier architecture using Java J2EE HTML HTML5 Backbone JS Bootstrap Angular JS ReactAjax Node JS JSPCSS JavaBeans Worked with objectcentric framework like Hibernate and Databasecentric framework like iBATIS Worked with multiple Databases like MYSQL Oracle 10g11g PostgreSQL MongoDB Cassandra Proficient in using Unit testing along with Jasmine Karma Mockito TestNG Selenium Junit Experience in deploying applications on Application and web servers likes Web logic Web Sphere JBoss Glassfish and Web Servers like Apache Tomcat Experience in implementing SOA and Web Services using SOAP RESTFUL JAXWS AXIS WSDL Developed RESTFUL microservices using JAXRS JerseyFramework Spring Boot Experienced with web services testing and automating using SOAPUI and Postman Configured and maintained Jenkins to implement the CICD process and integrate the tool with Ant and Maven to schedule the builds Created Jobs for Builds and Deployments installed several plugins in Jenkins to support multiple build eco systems required for the implementation of projects Worked on Application Deployments Environment configuration using PuppetChef management tools Experience with version control using SVN GIT Bitbucket and error logging using Log4J Implementing SOAs using Web services with XML SOAP WSDL Apache Axis JAXWS and JAXRS Deployed Production ready Java applications using Elastic Beanstalk where it auto configures the capacity provisioning through Autoscaling load balancing application health monitoring and Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Elastic Search Configured AWS Identity and Access Management IAM Groups and Users login authentication Extensive hands on experience in fine tuning and scaling the applications in Pivotal Cloud Foundry Initiated Microservices application through Docker and Kubernetes cluster formation Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Optum Minnetonka MN May 2017 to Present The Integrated Eligibility is a Project which determines the eligibility of a person who can receive State Services like SNAPSupplemental Nutrition Assistance Program also known as Food Stamps TANFTemporary Assistance for Needy Families Medicaid etc who has little to no income The Agency Portal and Client Portal helps the state department to determine the eligibility of the person The Agency Portal will be accessed by State Agency workers to help the people to enroll in appropriate programs The Client Portal is for the users who can directly submit the application through online application Responsibilities Involved in analysis design implementation and testing phases of SDLC through Agile methodology Design and developed the application using framework Angular 4with HTML5 CSS3 and Typescript Developed UI components using Angular 4 dependency Injection Models data binding controllers Developedapplicationusing Java 8 to implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces foreach Used multithreaded environment to run processes asynchronously using future calls to access the data Used Spring SecurityforValidation and authentication on the Client side session fixation click jacking cross site request forgery Design and Development of business components using Spring IOC Spring Annotations dependency injection transaction management through Spring framework Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Used Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Configured Hibernate Cfgxml to facilitate connection pooling with Data Source and create POJOs to map with backend tables Implemented the associated business modules integration usingspringand Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 11g database Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Proficient at development of webbased application using Apache Tomcat JBOSS 70 Glassfish 40 Used JUnit Mockito for the unit and integration testing of various modules Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Resolved bugsdefects by coordinating with team members to assure a positive outcome using Jasper Using GIT for Source Control and Version Management and using log4j for logging Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins Implemented Micro Services based cloud Architecture on AWS platform for deployment Initiated Microservices application with Docker and Kubernetes cluster formation for the scalability of the application Designed new Strategies for optimizing all aspects of the CI release and deployment processes using latest container and virtualization techniques like Docker and Kubernetes Created the Docker containers and Docker consoles for managing the application life cycle Containerized Microservices by creating Docker images from Docker file collaborated with development support team to set up a continuous deployment environment using Docker Proficient in writing AWS Cloud Formation template to create customized VPC subnets NAT EC2 instances ELB Security groups S3 IAM Experience in automating the infrastructure and managing the application in AWS using web services Environment Angular 4 HTML5 CSS3 JavaScript jQuery AJAX JSON TypeScript Jenkins GIT SVN Rest log4j Hudson Spring MVC Spring boot Apache Kafka Docker JAXRS Junit Mockito Oracle SOAPUI Postman Ec2 AWS lambda Hibernate Oracle 12 MongoDB Sr Java Full Stack Developer Wells Fargo Co Charlotte NC December 2015 to April 2017 Online Access Module OAM is a web application that manages the user experience for secondary authentication OAM supports multiple authentication methods including Two Factor Authentication Advanced Access Security Questions and Out Of Wallet Authentication OAM Online access Module is a Wells Fargo Fraud Prevention Authentication application designed to provide the customers an ability to accesschange the credentials or to createenroll their credentials via by steps such as Identification authorization and verification via pin sent to PhoneEmail on account Responsibilities Understand the complete flow and found various gaps in current system Designed the new flow for faster creation of reports and posting Removed complex logics and built more stable and simple code logics Prepared User stories corresponding to the features taken from Backlog Comprehensive experience in using Nodejs and Spring Boot implementing RESTful web service Hosted and consumed RESTful Web services using JAXRS API with spring Boot Developed Micro services using RESTful web services to provide all the CRUD capabilities Used Executor Service framework to implement multithreading in programming to improve overall performance Responsible for implementing frontend features APIs internal tools and processes in Nodejs centered stack Extensively used npm tools like Gulp Grunt Web pack Built micro services for the delivery of Purchase Order module using Spring cloud Applied significant knowledge of industry trends and developments to improve service to our clients Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Used Multithreading extensively to improve the performance of the application Worked on Camelbased integration middleware solution for Provisioning Services by design and Implementation of business logic and data processing routes using Apache Camel Involved in capturing the business requirements design development and testing of the application Designed a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile tablet and desktop Used Cassandra NoSQL DB to store the data for few modules of the application Built Web pages that are more userinteractive using AJAX JQuery Developed a crossdevicebrowser web application for location sharing utilizing AngularJS JavaScript API Integrated the Java code API in JSP pages and responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 bootstrap and AngularJS Using AngularJS created Responsive Web Design and data manipulations in company standard format in UI Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Usage of Scala as a template engine to the frontend part of code Worked on AngularJS used its twoway data binding to achieve the feedback functionality from the user Configured Swagger for autogenerated documentation for all REST API calls Experienced in build deploy multi module applications using Maven ANT and CI servers like Jenkins Environment JAVAJ2EE HTML JSON XHTML JS AJAX JQUERY DOJO CSS3 JSP NodeJS AngularJS ReactJS JSFBootstrap XML XSLT XPATH MULE ESB AWS WebSphere SOAP REST Spring Framework Spring BootMicroservices JMS Maven Drools 5 Eclipse Jenkins JUnit MongoDB Mockito Star Team TDD Spring MVC EMMA JIRA Spring framework DI AOP Batch Hibernate Cassandra Docker Ant Coherence Rally Apache Camel Sr Java J2EE Federal Home Loan Bank Des Moines IA December 2014 to November 2015 A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Spring Framework for dependency injection integration of Hibernate using Spring ORM support development of RESTful web services to give JSON output Used Spring MVC front controller to handle requests from dispatcher servlet to handle incoming requests Configured Spring MVC from scratch using XML configurations namespace handling spring security set up and giving access to resource wrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections Developed the applications using SPRING framework including Spring Core Spring WS Spring MVC and Spring Integrations design pattern Used Hibernate in persistence layer hibernate mappings using Annotations HQL Criteria and Queries Involved in Design and Development of RESTful API Worked with SOAP UI JAXWS to create Web Services and consuming the existing services CreatedREST web services spring with Jackson Mappers exchange data using JSON data structure Used SVN for source Version Control resolving code conflicts and merging code base Deployed the application in Web Logic Application Server Developed Microservices to provide Rest APIs utilizing Spring MVC Strong experience in writing PLSQL queries and performance tuning Developed Unix Shell scripts to automate repetitive database processes Used Maven for dependency management build applications and deploy to the containers application servers and create versions in the repository Used JUnit for unit testing of the application and log4j for logging Environment Core Java Java 16 Spring Hibernate SVN Apache Eclipse 33 JNDI Log4j JUnit XML XSD AngularJS Nodejs JQuery HTML 5 bootstrap JavaScript Web Logic Application Server Oracle Windows XP REST API NetBeans UNIX Java Developer Valley National Bank Wayne NJ November 2013 to November 2014 Securities lending system provides a single centralized realtime system for borrowing and lending of securities like stocks Fixed Income Instrument Tbill and Tnotes Requests to borrow are routed to specified lenders and associated execution information is returned to the borrower without manual intervention Securities Lending System has Desktop Client for call center and website for international users User can specify time limit rebate rate collateral type delivery details maximum price and books Responsibilities Gathered user requirements followed by analysis and design Evaluated various technologies for the Client Developed HTML and JSP to present Client side GUI Involved in development of JavaScript code for Client Side Validations Involved in development of presentation components using Swings Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed dynamic content of presentation layer using JSP Develop userdefined tags using XML Used Struts Framework to implement J2EE design patterns MVC Developed Tested and Debugged the Java JSP and EJB components using Eclipse RCP Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Developed JSP as the view Servlets as Controller and EJB as model in the Struts Framework Worked on Web Logic application server to deploy JSP and EJB applications Created and implemented PLSQL stored procedures triggers Environment Core Java J2EE Swing EJB 21 JSP 20 Servlets 24 Struts HTML XML CORBA XSLT CSS Java Script Eclipse RCP PLSQL Weblogic81 Junior Java Developer Systems Services Limited May 2009 to August 2013 Responsibilities Involved in understanding and analyzing the requirements of the project Implemented server side programs by using Servlets and JSP Designed developed and User Interface using HTML JavaScript AJAX and CSS Used JavaScript to perform Client Side Validation Implemented using the MVC design pattern Used JDBC to interact with the underlying MySQL Database Deployed Applications on Apache Tomcat Server Involved in Unit testing for various components Used Log4J for any logging purposes during the development of the application Environment JAVA J2EE JSP SERVLETS JDBC HTML CSS JAVASCRIPT AJAX ECLIPSE JUNIT MVC APACHE TOMCAT AND MYSQL Education Bachelors Skills Java 9 years JavaScript 9 years MODEL VIEW CONTROLLER 9 years MODELVIEWCONTROLLER 9 years MVC 9 years Additional Information TECHNICAL SKILL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK  C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 JBoss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax jQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio Express JS JSON Swagger UI Bootstrap Google Web Toolkit GWTBackbone JS Ember JS Knockout JS AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Message Brokers Kafka RabbitMQ  TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Karma Jasmine Database Oracle 8i9i10g11G DB2 SQL Server 20052008 MySQL PostgreSQL Sybase MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Spring Hateos Spring Cloud Swagger UI Sleuth and Spring Zuul Feign Client",
    "entities": [
        "Responsive Web Design",
        "Hosted",
        "Used Executor Service",
        "WebStorm",
        "Nodejs",
        "HTML JavaScript AJAX",
        "NAT",
        "Menu",
        "Desktop Client",
        "Jasper Using GIT",
        "Applied",
        "IOCDependency Injection",
        "Jenkins Environment JAVAJ2EE HTML",
        "JTA",
        "ELB Security",
        "Annotations HQL Criteria",
        "MVC Spring",
        "IBM",
        "Queries Involved in Design and Development of RESTful API Worked",
        "Hibernate using Spring",
        "DI AOP Batch Hibernate Cassandra Docker Ant Coherence",
        "Continuous Integration CI",
        "the FHL Banks",
        "Controller",
        "XML",
        "Apache Camel Involved",
        "Test Driven DevelopmentTDD Incremental and Iteration methodology",
        "JAXWS",
        "Strategies",
        "Purchase Order",
        "JUnit",
        "JavaScript Web Logic Application Server Oracle Windows XP REST API NetBeans",
        "WebLogic",
        "Shell",
        "Mockito Star Team",
        "Implemented Objectrelation",
        "JavaJ2EE",
        "Spring Boot",
        "GUI Developed",
        "Data Source",
        "Object Oriented Applications",
        "Jenkins",
        "Version Control",
        "Jackson Mappers exchange",
        "Oracle 11",
        "Responsibilities Involved",
        "Socketio Express",
        "Provisioning Services",
        "Client",
        "Servlets",
        "Identification",
        "Hudson Spring",
        "Jenkins Implemented Micro Services",
        "Swings Extensively",
        "SOA",
        "PuppetChef",
        "Initiated Microservices",
        "Spring IOC Spring Annotations",
        "JSP",
        "Ember",
        "Java Developer Valley National Bank",
        "Backlog Comprehensive",
        "JSP Develop",
        "Wells Fargo Fraud Prevention Authentication",
        "SDLC",
        "FrontEnd",
        "Unmarshalling",
        "Boot Developed Micro",
        "Docker",
        "API Strong",
        "Kubernetes Created",
        "STS",
        "MVC",
        "Hystrix and Hystrix Dashboard",
        "EJB",
        "User Interface",
        "JUnit XML XSD",
        "Design and Development",
        "Spring Boot Micro Service",
        "Worked on Application Deployments Environment",
        "Developed Microservices",
        "API",
        "State Services",
        "US",
        "XML SOAP",
        "the Service Oriented Architecture Used Spring Framework",
        "SDLC Experienced",
        "IA",
        "Created",
        "AWS",
        "Usage of Scala",
        "Agile methodology Design",
        "Spring Data Proficient",
        "Injection Models",
        "Redis MLlib Version",
        "Present The Integrated Eligibility",
        "DNS",
        "Additional Information TECHNICAL SKILL JavaJ2EE Technologies Servlets JSP JSTL",
        "Postman Configured",
        "Securities Lending System",
        "JSPCSS",
        "Bootstrap",
        "Kubernetes",
        "Ant",
        "Fixed Income Instrument Tbill",
        "State Agency",
        "Spring Integrations",
        "CI",
        "CICD",
        "Tnotes",
        "Used Spring",
        "CRUD",
        "SNAPSupplemental Nutrition Assistance Program",
        "Maven",
        "XSLT",
        "lJavaspan",
        "Hibernate",
        "Jenkins Resolved",
        "JavaScript",
        "ANT",
        "UI",
        "WebSphere SOAP",
        "TOMCAT",
        "Clients",
        "AMI ELB CLI SNS RDS VPN NAT",
        "SVN",
        "Source Control",
        "CSS",
        "GUI Involved",
        "Swagger Configured Hibernate Cfgxml",
        "Des Moines",
        "REST",
        "Created Jobs for Builds",
        "Spring Zuul",
        "Front Controller Singleton Factory Pattern Service Locator Business Delegate Data Access Object Session Faade",
        "Application",
        "Version Management",
        "Amazon Web Services AWS Extensive",
        "Web Logic Application Server Developed Microservices",
        "Employed",
        "Value",
        "Microservice",
        "Developed Mongo DB Data Access Layer",
        "Hibernate Oracle",
        "OAM"
    ],
    "experience": "Experience in deploying applications on Application and web servers likes Web logic Web Sphere JBoss Glassfish and Web Servers like Apache Tomcat Experience in implementing SOA and Web Services using SOAP RESTFUL JAXWS AXIS WSDL Developed RESTFUL microservices using JAXRS JerseyFramework Spring Boot Experienced with web services testing and automating using SOAPUI and Postman Configured and maintained Jenkins to implement the CICD process and integrate the tool with Ant and Maven to schedule the builds Created Jobs for Builds and Deployments installed several plugins in Jenkins to support multiple build eco systems required for the implementation of projects Worked on Application Deployments Environment configuration using PuppetChef management tools Experience with version control using SVN GIT Bitbucket and error logging using Log4J Implementing SOAs using Web services with XML SOAP WSDL Apache Axis JAXWS and JAXRS Deployed Production ready Java applications using Elastic Beanstalk where it auto configures the capacity provisioning through Autoscaling load balancing application health monitoring and Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Elastic Search Configured AWS Identity and Access Management IAM Groups and Users login authentication Extensive hands on experience in fine tuning and scaling the applications in Pivotal Cloud Foundry Initiated Microservices application through Docker and Kubernetes cluster formation Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Optum Minnetonka MN May 2017 to Present The Integrated Eligibility is a Project which determines the eligibility of a person who can receive State Services like SNAPSupplemental Nutrition Assistance Program also known as Food Stamps TANFTemporary Assistance for Needy Families Medicaid etc who has little to no income The Agency Portal and Client Portal helps the state department to determine the eligibility of the person The Agency Portal will be accessed by State Agency workers to help the people to enroll in appropriate programs The Client Portal is for the users who can directly submit the application through online application Responsibilities Involved in analysis design implementation and testing phases of SDLC through Agile methodology Design and developed the application using framework Angular 4with HTML5 CSS3 and Typescript Developed UI components using Angular 4 dependency Injection Models data binding controllers Developedapplicationusing Java 8 to implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces foreach Used multithreaded environment to run processes asynchronously using future calls to access the data Used Spring SecurityforValidation and authentication on the Client side session fixation click jacking cross site request forgery Design and Development of business components using Spring IOC Spring Annotations dependency injection transaction management through Spring framework Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Used Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Configured Hibernate Cfgxml to facilitate connection pooling with Data Source and create POJOs to map with backend tables Implemented the associated business modules integration usingspringand Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 11 g database Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Proficient at development of webbased application using Apache Tomcat JBOSS 70 Glassfish 40 Used JUnit Mockito for the unit and integration testing of various modules Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Resolved bugsdefects by coordinating with team members to assure a positive outcome using Jasper Using GIT for Source Control and Version Management and using log4j for logging Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins Implemented Micro Services based cloud Architecture on AWS platform for deployment Initiated Microservices application with Docker and Kubernetes cluster formation for the scalability of the application Designed new Strategies for optimizing all aspects of the CI release and deployment processes using latest container and virtualization techniques like Docker and Kubernetes Created the Docker containers and Docker consoles for managing the application life cycle Containerized Microservices by creating Docker images from Docker file collaborated with development support team to set up a continuous deployment environment using Docker Proficient in writing AWS Cloud Formation template to create customized VPC subnets NAT EC2 instances ELB Security groups S3 IAM Experience in automating the infrastructure and managing the application in AWS using web services Environment Angular 4 HTML5 CSS3 JavaScript jQuery AJAX JSON TypeScript Jenkins GIT SVN Rest log4j Hudson Spring MVC Spring boot Apache Kafka Docker JAXRS Junit Mockito Oracle SOAPUI Postman Ec2 AWS lambda Hibernate Oracle 12 MongoDB Sr Java Full Stack Developer Wells Fargo Co Charlotte NC December 2015 to April 2017 Online Access Module OAM is a web application that manages the user experience for secondary authentication OAM supports multiple authentication methods including Two Factor Authentication Advanced Access Security Questions and Out Of Wallet Authentication OAM Online access Module is a Wells Fargo Fraud Prevention Authentication application designed to provide the customers an ability to accesschange the credentials or to createenroll their credentials via by steps such as Identification authorization and verification via pin sent to PhoneEmail on account Responsibilities Understand the complete flow and found various gaps in current system Designed the new flow for faster creation of reports and posting Removed complex logics and built more stable and simple code logics Prepared User stories corresponding to the features taken from Backlog Comprehensive experience in using Nodejs and Spring Boot implementing RESTful web service Hosted and consumed RESTful Web services using JAXRS API with spring Boot Developed Micro services using RESTful web services to provide all the CRUD capabilities Used Executor Service framework to implement multithreading in programming to improve overall performance Responsible for implementing frontend features APIs internal tools and processes in Nodejs centered stack Extensively used npm tools like Gulp Grunt Web pack Built micro services for the delivery of Purchase Order module using Spring cloud Applied significant knowledge of industry trends and developments to improve service to our clients Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Used Multithreading extensively to improve the performance of the application Worked on Camelbased integration middleware solution for Provisioning Services by design and Implementation of business logic and data processing routes using Apache Camel Involved in capturing the business requirements design development and testing of the application Designed a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile tablet and desktop Used Cassandra NoSQL DB to store the data for few modules of the application Built Web pages that are more userinteractive using AJAX JQuery Developed a crossdevicebrowser web application for location sharing utilizing AngularJS JavaScript API Integrated the Java code API in JSP pages and responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 bootstrap and AngularJS Using AngularJS created Responsive Web Design and data manipulations in company standard format in UI Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Usage of Scala as a template engine to the frontend part of code Worked on AngularJS used its twoway data binding to achieve the feedback functionality from the user Configured Swagger for autogenerated documentation for all REST API calls Experienced in build deploy multi module applications using Maven ANT and CI servers like Jenkins Environment JAVAJ2EE HTML JSON XHTML JS AJAX JQUERY DOJO CSS3 JSP NodeJS AngularJS ReactJS JSFBootstrap XML XSLT XPATH MULE ESB AWS WebSphere SOAP REST Spring Framework Spring BootMicroservices JMS Maven Drools 5 Eclipse Jenkins JUnit MongoDB Mockito Star Team TDD Spring MVC EMMA JIRA Spring framework DI AOP Batch Hibernate Cassandra Docker Ant Coherence Rally Apache Camel Sr Java J2EE Federal Home Loan Bank Des Moines IA December 2014 to November 2015 A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Spring Framework for dependency injection integration of Hibernate using Spring ORM support development of RESTful web services to give JSON output Used Spring MVC front controller to handle requests from dispatcher servlet to handle incoming requests Configured Spring MVC from scratch using XML configurations namespace handling spring security set up and giving access to resource wrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections Developed the applications using SPRING framework including Spring Core Spring WS Spring MVC and Spring Integrations design pattern Used Hibernate in persistence layer hibernate mappings using Annotations HQL Criteria and Queries Involved in Design and Development of RESTful API Worked with SOAP UI JAXWS to create Web Services and consuming the existing services CreatedREST web services spring with Jackson Mappers exchange data using JSON data structure Used SVN for source Version Control resolving code conflicts and merging code base Deployed the application in Web Logic Application Server Developed Microservices to provide Rest APIs utilizing Spring MVC Strong experience in writing PLSQL queries and performance tuning Developed Unix Shell scripts to automate repetitive database processes Used Maven for dependency management build applications and deploy to the containers application servers and create versions in the repository Used JUnit for unit testing of the application and log4j for logging Environment Core Java Java 16 Spring Hibernate SVN Apache Eclipse 33 JNDI Log4j JUnit XML XSD AngularJS Nodejs JQuery HTML 5 bootstrap JavaScript Web Logic Application Server Oracle Windows XP REST API NetBeans UNIX Java Developer Valley National Bank Wayne NJ November 2013 to November 2014 Securities lending system provides a single centralized realtime system for borrowing and lending of securities like stocks Fixed Income Instrument Tbill and Tnotes Requests to borrow are routed to specified lenders and associated execution information is returned to the borrower without manual intervention Securities Lending System has Desktop Client for call center and website for international users User can specify time limit rebate rate collateral type delivery details maximum price and books Responsibilities Gathered user requirements followed by analysis and design Evaluated various technologies for the Client Developed HTML and JSP to present Client side GUI Involved in development of JavaScript code for Client Side Validations Involved in development of presentation components using Swings Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed dynamic content of presentation layer using JSP Develop userdefined tags using XML Used Struts Framework to implement J2EE design patterns MVC Developed Tested and Debugged the Java JSP and EJB components using Eclipse RCP Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Developed JSP as the view Servlets as Controller and EJB as model in the Struts Framework Worked on Web Logic application server to deploy JSP and EJB applications Created and implemented PLSQL stored procedures triggers Environment Core Java J2EE Swing EJB 21 JSP 20 Servlets 24 Struts HTML XML CORBA XSLT CSS Java Script Eclipse RCP PLSQL Weblogic81 Junior Java Developer Systems Services Limited May 2009 to August 2013 Responsibilities Involved in understanding and analyzing the requirements of the project Implemented server side programs by using Servlets and JSP Designed developed and User Interface using HTML JavaScript AJAX and CSS Used JavaScript to perform Client Side Validation Implemented using the MVC design pattern Used JDBC to interact with the underlying MySQL Database Deployed Applications on Apache Tomcat Server Involved in Unit testing for various components Used Log4J for any logging purposes during the development of the application Environment JAVA J2EE JSP SERVLETS JDBC HTML CSS JAVASCRIPT AJAX ECLIPSE JUNIT MVC APACHE TOMCAT AND MYSQL Education Bachelors Skills Java 9 years JavaScript 9 years MODEL VIEW CONTROLLER 9 years MODELVIEWCONTROLLER 9 years MVC 9 years Additional Information TECHNICAL SKILL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK   C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 JBoss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax jQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio Express JS JSON Swagger UI Bootstrap Google Web Toolkit GWTBackbone JS Ember JS Knockout JS AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Message Brokers Kafka RabbitMQ   TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Karma Jasmine Database Oracle 8i9i10g11 G DB2 SQL Server 20052008 MySQL PostgreSQL Sybase MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Spring Hateos Spring Cloud Swagger UI Sleuth and Spring Zuul Feign Client",
    "extracted_keywords": [
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Sr",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Optum",
        "Florham",
        "Park",
        "NJ",
        "years",
        "Professional",
        "IT",
        "experience",
        "analysis",
        "design",
        "implementation",
        "testing",
        "Object",
        "Oriented",
        "Applications",
        "ClientServer",
        "environments",
        "JavaJ2EE",
        "Expert",
        "methodologies",
        "SCRUM",
        "Test",
        "DevelopmentTDD",
        "Incremental",
        "Iteration",
        "methodology",
        "Pair",
        "Programming",
        "Agile",
        "Developmentand",
        "testing",
        "SDLC",
        "Core",
        "Java",
        "J2EE",
        "design",
        "patterns",
        "Front",
        "Controller",
        "Singleton",
        "Factory",
        "Pattern",
        "Service",
        "Locator",
        "Business",
        "Delegate",
        "Data",
        "Access",
        "Object",
        "Session",
        "Faade",
        "Value",
        "object",
        "pattern",
        "Java",
        "features",
        "interfaces",
        "expressions",
        "stream",
        "API",
        "Strong",
        "programming",
        "skills",
        "core",
        "Java",
        "technologies",
        "Java",
        "J2EE",
        "JSP",
        "JDBC",
        "Struts",
        "JAXWS",
        "JAXRS",
        "Spring",
        "Hibernate",
        "Expertise",
        "serverside",
        "development",
        "JDBC",
        "ServletsMVC",
        "architecture",
        "Java",
        "Beans",
        "XML",
        "IOCDependency",
        "Injection",
        "features",
        "frameworks",
        "Spring",
        "Core",
        "Spring",
        "Security",
        "Batch",
        "Spring",
        "BootEureka",
        "Netflix",
        "Spring",
        "cloud",
        "JDBC",
        "Spring",
        "Batch",
        "Hibernate",
        "batch",
        "jobs",
        "formats",
        "data",
        "Expertise",
        "Web",
        "FrontEnd",
        "applications",
        "architecture",
        "Java",
        "J2EE",
        "HTML",
        "HTML5",
        "Backbone",
        "JS",
        "Bootstrap",
        "Angular",
        "JS",
        "ReactAjax",
        "Node",
        "JS",
        "JSPCSS",
        "JavaBeans",
        "framework",
        "Hibernate",
        "Databasecentric",
        "framework",
        "Databases",
        "MYSQL",
        "Oracle",
        "g",
        "PostgreSQL",
        "Cassandra",
        "Proficient",
        "Unit",
        "testing",
        "Jasmine",
        "Karma",
        "Mockito",
        "TestNG",
        "Selenium",
        "Junit",
        "Experience",
        "applications",
        "Application",
        "web",
        "servers",
        "Web",
        "logic",
        "Web",
        "Sphere",
        "JBoss",
        "Glassfish",
        "Web",
        "Servers",
        "Apache",
        "Tomcat",
        "Experience",
        "SOA",
        "Web",
        "Services",
        "SOAP",
        "RESTFUL",
        "JAXWS",
        "AXIS",
        "WSDL",
        "Developed",
        "RESTFUL",
        "microservices",
        "JAXRS",
        "JerseyFramework",
        "Spring",
        "Boot",
        "web",
        "services",
        "testing",
        "SOAPUI",
        "Postman",
        "Configured",
        "Jenkins",
        "CICD",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Created",
        "Jobs",
        "Builds",
        "Deployments",
        "plugins",
        "Jenkins",
        "build",
        "eco",
        "systems",
        "implementation",
        "projects",
        "Application",
        "Deployments",
        "Environment",
        "configuration",
        "PuppetChef",
        "management",
        "tools",
        "Experience",
        "version",
        "control",
        "SVN",
        "GIT",
        "Bitbucket",
        "error",
        "Log4J",
        "Implementing",
        "SOAs",
        "Web",
        "services",
        "XML",
        "SOAP",
        "WSDL",
        "Apache",
        "Axis",
        "JAXWS",
        "JAXRS",
        "Production",
        "Java",
        "applications",
        "Elastic",
        "Beanstalk",
        "auto",
        "capacity",
        "load",
        "balancing",
        "application",
        "health",
        "monitoring",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "experience",
        "services",
        "EC2",
        "VPC",
        "Cloud",
        "Watch",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "Amazon",
        "RDS",
        "Elastic",
        "Cache",
        "SNS",
        "SQS",
        "Elastic",
        "Search",
        "Configured",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Groups",
        "Users",
        "authentication",
        "hands",
        "experience",
        "tuning",
        "applications",
        "Cloud",
        "Foundry",
        "Initiated",
        "Microservices",
        "application",
        "Docker",
        "Kubernetes",
        "cluster",
        "formation",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Optum",
        "Minnetonka",
        "MN",
        "May",
        "Present",
        "Integrated",
        "Eligibility",
        "Project",
        "eligibility",
        "person",
        "State",
        "Services",
        "SNAPSupplemental",
        "Nutrition",
        "Assistance",
        "Program",
        "Food",
        "Stamps",
        "TANFTemporary",
        "Assistance",
        "Needy",
        "Families",
        "Medicaid",
        "income",
        "Agency",
        "Portal",
        "Client",
        "Portal",
        "state",
        "department",
        "eligibility",
        "person",
        "Agency",
        "Portal",
        "State",
        "Agency",
        "workers",
        "people",
        "programs",
        "Client",
        "Portal",
        "users",
        "application",
        "application",
        "Responsibilities",
        "analysis",
        "design",
        "implementation",
        "phases",
        "SDLC",
        "methodology",
        "Design",
        "application",
        "framework",
        "Angular",
        "4with",
        "HTML5",
        "CSS3",
        "Typescript",
        "UI",
        "components",
        "Angular",
        "dependency",
        "Injection",
        "Models",
        "data",
        "controllers",
        "Developedapplicationusing",
        "Java",
        "features",
        "lambdas",
        "Expressions",
        "Time",
        "API",
        "Streams",
        "interfaces",
        "collectors",
        "default",
        "methods",
        "type",
        "interfaces",
        "environment",
        "processes",
        "calls",
        "data",
        "Spring",
        "SecurityforValidation",
        "authentication",
        "Client",
        "side",
        "session",
        "fixation",
        "cross",
        "site",
        "request",
        "forgery",
        "Design",
        "Development",
        "business",
        "components",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "dependency",
        "injection",
        "transaction",
        "management",
        "Spring",
        "framework",
        "Developed",
        "Microservices",
        "Spring",
        "Eureka",
        "API",
        "routes",
        "cluster",
        "strategy",
        "Microservice",
        "cluster",
        "load",
        "API",
        "gateway",
        "Spring",
        "RestfulMicroservices",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "part",
        "Services",
        "Discovery",
        "Apache",
        "Axis",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "circuit",
        "breaker",
        "patterns",
        "time",
        "Clients",
        "email",
        "applications",
        "Hystrix",
        "Hystrix",
        "Dashboard",
        "Spring",
        "Boot",
        "Micro",
        "Service",
        "Applications",
        "Swagger",
        "UI",
        "APIS",
        "APIs",
        "Swagger",
        "Configured",
        "Hibernate",
        "Cfgxml",
        "connection",
        "Data",
        "Source",
        "POJOs",
        "tables",
        "business",
        "modules",
        "integration",
        "usingspringand",
        "Hibernate",
        "data",
        "mapping",
        "Objectrelation",
        "mapping",
        "Hibernate",
        "framework",
        "data",
        "Oracle",
        "g",
        "database",
        "Developed",
        "Mongo",
        "DB",
        "Data",
        "Access",
        "Layer",
        "Mongo",
        "Repository",
        "interface",
        "Spring",
        "Data",
        "Proficient",
        "development",
        "application",
        "Apache",
        "Tomcat",
        "JBOSS",
        "JUnit",
        "Mockito",
        "unit",
        "integration",
        "testing",
        "modules",
        "Maven",
        "scripts",
        "builds",
        "Maven",
        "integration",
        "servers",
        "Jenkins",
        "bugsdefects",
        "team",
        "members",
        "outcome",
        "Jasper",
        "GIT",
        "Source",
        "Control",
        "Version",
        "Management",
        "log4j",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "Implemented",
        "Micro",
        "Services",
        "cloud",
        "Architecture",
        "AWS",
        "platform",
        "deployment",
        "Initiated",
        "Microservices",
        "application",
        "Docker",
        "Kubernetes",
        "cluster",
        "formation",
        "scalability",
        "application",
        "Strategies",
        "aspects",
        "CI",
        "release",
        "deployment",
        "processes",
        "container",
        "virtualization",
        "techniques",
        "Docker",
        "Kubernetes",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Containerized",
        "Microservices",
        "Docker",
        "images",
        "Docker",
        "file",
        "development",
        "support",
        "team",
        "deployment",
        "environment",
        "Docker",
        "Proficient",
        "AWS",
        "Cloud",
        "Formation",
        "template",
        "subnets",
        "NAT",
        "EC2",
        "ELB",
        "Security",
        "groups",
        "S3",
        "IAM",
        "Experience",
        "infrastructure",
        "application",
        "AWS",
        "web",
        "services",
        "Environment",
        "Angular",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "JSON",
        "TypeScript",
        "Jenkins",
        "GIT",
        "SVN",
        "Rest",
        "log4j",
        "Hudson",
        "Spring",
        "MVC",
        "Spring",
        "boot",
        "Apache",
        "Kafka",
        "Docker",
        "JAXRS",
        "Junit",
        "Mockito",
        "Oracle",
        "SOAPUI",
        "Postman",
        "AWS",
        "Hibernate",
        "Oracle",
        "MongoDB",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "Co",
        "Charlotte",
        "NC",
        "December",
        "April",
        "Online",
        "Access",
        "Module",
        "OAM",
        "web",
        "application",
        "user",
        "experience",
        "authentication",
        "OAM",
        "authentication",
        "methods",
        "Factor",
        "Authentication",
        "Advanced",
        "Access",
        "Security",
        "Questions",
        "Wallet",
        "Authentication",
        "OAM",
        "Online",
        "access",
        "Module",
        "Wells",
        "Fargo",
        "Fraud",
        "Prevention",
        "Authentication",
        "application",
        "customers",
        "ability",
        "credentials",
        "credentials",
        "steps",
        "Identification",
        "authorization",
        "verification",
        "pin",
        "PhoneEmail",
        "account",
        "Responsibilities",
        "flow",
        "gaps",
        "system",
        "flow",
        "creation",
        "reports",
        "logics",
        "code",
        "logics",
        "Prepared",
        "User",
        "stories",
        "features",
        "Backlog",
        "Comprehensive",
        "experience",
        "Nodejs",
        "Spring",
        "Boot",
        "web",
        "service",
        "Hosted",
        "RESTful",
        "Web",
        "services",
        "JAXRS",
        "API",
        "spring",
        "Boot",
        "Developed",
        "Micro",
        "services",
        "web",
        "services",
        "CRUD",
        "capabilities",
        "Executor",
        "Service",
        "framework",
        "programming",
        "performance",
        "frontend",
        "APIs",
        "tools",
        "processes",
        "Nodejs",
        "stack",
        "npm",
        "tools",
        "Gulp",
        "Grunt",
        "Web",
        "pack",
        "micro",
        "services",
        "delivery",
        "Purchase",
        "Order",
        "module",
        "Spring",
        "cloud",
        "knowledge",
        "industry",
        "trends",
        "developments",
        "service",
        "clients",
        "Common",
        "UI",
        "layout",
        "Header",
        "Footer",
        "Menu",
        "JSF",
        "Facelets",
        "Multithreading",
        "performance",
        "application",
        "integration",
        "middleware",
        "solution",
        "Provisioning",
        "Services",
        "design",
        "Implementation",
        "business",
        "logic",
        "data",
        "processing",
        "routes",
        "Apache",
        "Camel",
        "business",
        "requirements",
        "development",
        "testing",
        "application",
        "website",
        "Bootstrap",
        "grid",
        "system",
        "contents",
        "devices",
        "tablet",
        "desktop",
        "Cassandra",
        "NoSQL",
        "DB",
        "data",
        "modules",
        "application",
        "Web",
        "pages",
        "AJAX",
        "JQuery",
        "crossdevicebrowser",
        "web",
        "application",
        "location",
        "sharing",
        "JavaScript",
        "API",
        "Java",
        "code",
        "API",
        "JSP",
        "pages",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "bootstrap",
        "AngularJS",
        "Responsive",
        "Web",
        "Design",
        "data",
        "manipulations",
        "company",
        "format",
        "UI",
        "Deployed",
        "Docker",
        "Spring",
        "REST",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Usage",
        "Scala",
        "template",
        "engine",
        "part",
        "code",
        "twoway",
        "data",
        "feedback",
        "functionality",
        "user",
        "Configured",
        "Swagger",
        "documentation",
        "REST",
        "API",
        "calls",
        "build",
        "module",
        "applications",
        "Maven",
        "ANT",
        "CI",
        "servers",
        "Jenkins",
        "Environment",
        "JAVAJ2EE",
        "HTML",
        "JSON",
        "XHTML",
        "JS",
        "AJAX",
        "JQUERY",
        "DOJO",
        "CSS3",
        "JSP",
        "NodeJS",
        "ReactJS",
        "JSFBootstrap",
        "XML",
        "XSLT",
        "XPATH",
        "MULE",
        "ESB",
        "AWS",
        "WebSphere",
        "SOAP",
        "REST",
        "Spring",
        "Framework",
        "Spring",
        "BootMicroservices",
        "JMS",
        "Maven",
        "Drools",
        "Eclipse",
        "Jenkins",
        "JUnit",
        "MongoDB",
        "Mockito",
        "Star",
        "Team",
        "TDD",
        "Spring",
        "MVC",
        "EMMA",
        "JIRA",
        "Spring",
        "framework",
        "DI",
        "AOP",
        "Batch",
        "Hibernate",
        "Cassandra",
        "Docker",
        "Ant",
        "Coherence",
        "Rally",
        "Apache",
        "Camel",
        "Sr",
        "Java",
        "J2EE",
        "Federal",
        "Home",
        "Loan",
        "Bank",
        "Des",
        "Moines",
        "IA",
        "December",
        "November",
        "benefit",
        "FHLB",
        "application",
        "access",
        "cost",
        "borrowings",
        "advances",
        "FHL",
        "Banks",
        "capital",
        "markets",
        "issuance",
        "discount",
        "notes",
        "term",
        "debt",
        "obligations",
        "COs",
        "Responsibilities",
        "J2EE",
        "application",
        "Service",
        "Oriented",
        "Architecture",
        "Spring",
        "Framework",
        "dependency",
        "injection",
        "integration",
        "Hibernate",
        "Spring",
        "ORM",
        "support",
        "development",
        "web",
        "services",
        "output",
        "Spring",
        "MVC",
        "front",
        "controller",
        "requests",
        "servlet",
        "requests",
        "Configured",
        "Spring",
        "MVC",
        "scratch",
        "XML",
        "configurations",
        "namespace",
        "spring",
        "security",
        "access",
        "resource",
        "code",
        "XML",
        "documents",
        "JAXB",
        "Marshalling",
        "Unmarshalling",
        "Spring",
        "Injections",
        "applications",
        "SPRING",
        "framework",
        "Spring",
        "Core",
        "Spring",
        "WS",
        "Spring",
        "MVC",
        "Spring",
        "Integrations",
        "design",
        "pattern",
        "Hibernate",
        "persistence",
        "layer",
        "hibernate",
        "mappings",
        "Annotations",
        "HQL",
        "Criteria",
        "Queries",
        "Design",
        "Development",
        "API",
        "SOAP",
        "UI",
        "JAXWS",
        "Web",
        "Services",
        "services",
        "CreatedREST",
        "web",
        "services",
        "spring",
        "Jackson",
        "Mappers",
        "exchange",
        "data",
        "data",
        "structure",
        "SVN",
        "source",
        "Version",
        "Control",
        "code",
        "conflicts",
        "code",
        "base",
        "application",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Developed",
        "Microservices",
        "Rest",
        "APIs",
        "Spring",
        "MVC",
        "Strong",
        "experience",
        "PLSQL",
        "queries",
        "performance",
        "Developed",
        "Unix",
        "Shell",
        "scripts",
        "database",
        "processes",
        "Maven",
        "dependency",
        "management",
        "build",
        "applications",
        "containers",
        "application",
        "servers",
        "versions",
        "repository",
        "JUnit",
        "unit",
        "testing",
        "application",
        "log4j",
        "Environment",
        "Core",
        "Java",
        "Java",
        "Spring",
        "Hibernate",
        "SVN",
        "Apache",
        "Eclipse",
        "JNDI",
        "Log4j",
        "JUnit",
        "XML",
        "XSD",
        "Nodejs",
        "JQuery",
        "HTML",
        "bootstrap",
        "JavaScript",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Oracle",
        "Windows",
        "XP",
        "REST",
        "API",
        "NetBeans",
        "UNIX",
        "Java",
        "Developer",
        "Valley",
        "National",
        "Bank",
        "Wayne",
        "NJ",
        "November",
        "November",
        "Securities",
        "lending",
        "system",
        "realtime",
        "system",
        "borrowing",
        "lending",
        "securities",
        "stocks",
        "Fixed",
        "Income",
        "Instrument",
        "Tbill",
        "Tnotes",
        "Requests",
        "lenders",
        "execution",
        "information",
        "borrower",
        "intervention",
        "Securities",
        "Lending",
        "System",
        "Desktop",
        "Client",
        "call",
        "center",
        "website",
        "users",
        "User",
        "time",
        "limit",
        "rebate",
        "rate",
        "type",
        "delivery",
        "details",
        "price",
        "books",
        "Responsibilities",
        "user",
        "requirements",
        "analysis",
        "technologies",
        "Client",
        "Developed",
        "HTML",
        "JSP",
        "Client",
        "side",
        "GUI",
        "development",
        "JavaScript",
        "code",
        "Client",
        "Side",
        "Validations",
        "development",
        "presentation",
        "components",
        "Swings",
        "XML",
        "documents",
        "XSLT",
        "CSS",
        "content",
        "HTML",
        "GUI",
        "content",
        "presentation",
        "layer",
        "JSP",
        "Develop",
        "tags",
        "XML",
        "Struts",
        "Framework",
        "J2EE",
        "design",
        "patterns",
        "MVC",
        "Developed",
        "Tested",
        "Java",
        "JSP",
        "EJB",
        "components",
        "Eclipse",
        "RCP",
        "Developed",
        "Enterprise",
        "Java",
        "Beans",
        "Entity",
        "Beans",
        "Session",
        "Beans",
        "Stateless",
        "State",
        "Full",
        "Session",
        "JSP",
        "view",
        "Servlets",
        "Controller",
        "EJB",
        "model",
        "Struts",
        "Framework",
        "Web",
        "Logic",
        "application",
        "server",
        "JSP",
        "EJB",
        "applications",
        "procedures",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "Swing",
        "EJB",
        "JSP",
        "Servlets",
        "Struts",
        "HTML",
        "XML",
        "XSLT",
        "CSS",
        "Java",
        "Script",
        "Eclipse",
        "RCP",
        "PLSQL",
        "Weblogic81",
        "Junior",
        "Java",
        "Developer",
        "Systems",
        "Services",
        "Limited",
        "May",
        "August",
        "Responsibilities",
        "understanding",
        "requirements",
        "project",
        "server",
        "side",
        "programs",
        "Servlets",
        "JSP",
        "User",
        "Interface",
        "HTML",
        "JavaScript",
        "AJAX",
        "CSS",
        "JavaScript",
        "Client",
        "Side",
        "Validation",
        "MVC",
        "design",
        "pattern",
        "JDBC",
        "MySQL",
        "Database",
        "Deployed",
        "Applications",
        "Apache",
        "Tomcat",
        "Server",
        "Unit",
        "testing",
        "components",
        "Log4J",
        "purposes",
        "development",
        "application",
        "Environment",
        "J2EE",
        "JSP",
        "SERVLETS",
        "JDBC",
        "HTML",
        "CSS",
        "JAVASCRIPT",
        "AJAX",
        "ECLIPSE",
        "JUNIT",
        "MVC",
        "APACHE",
        "TOMCAT",
        "MYSQL",
        "Education",
        "Bachelors",
        "Skills",
        "Java",
        "years",
        "JavaScript",
        "years",
        "MODEL",
        "VIEW",
        "years",
        "years",
        "MVC",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILL",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JSTL",
        "JDBC",
        "JMS",
        "JNDI",
        "RMI",
        "EJB",
        "JFCSwing",
        "AWT",
        "Applets",
        "Java",
        "Networking",
        "Programming",
        "Languages",
        "Java",
        "JDK",
        "C",
        "C",
        "SQL",
        "PLSQL",
        "Python",
        "Scala",
        "Golang",
        "ApplicationWeb",
        "Servers",
        "OracleBEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Tomcat",
        "Bug",
        "Jenkins",
        "Cucumber",
        "IDEs",
        "Eclipse",
        "Spring",
        "STS",
        "IntelliJ",
        "WebStorm",
        "NetBeans",
        "Web",
        "technologies",
        "HTML5",
        "CSS3",
        "XHTML",
        "JavaScriptES6",
        "TypeScript",
        "Ajax",
        "jQuery",
        "Angular",
        "Angular",
        "ReactJS",
        "NodeJS",
        "Socketio",
        "Express",
        "JS",
        "JSON",
        "Swagger",
        "UI",
        "Bootstrap",
        "Google",
        "Web",
        "Toolkit",
        "GWTBackbone",
        "JS",
        "Ember",
        "JS",
        "Knockout",
        "JS",
        "AWS",
        "Skills",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "IAM",
        "AMI",
        "ELB",
        "CLI",
        "SNS",
        "RDS",
        "VPN",
        "NAT",
        "GIT",
        "DNS",
        "Route53",
        "DBA",
        "Dynamo",
        "DB",
        "Web",
        "Services",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "SOAP",
        "REST",
        "SOAP",
        "UI",
        "Microservices",
        "Methodologies",
        "Agile",
        "Scrum",
        "RUP",
        "TDD",
        "SDLC",
        "Waterfall",
        "model",
        "Message",
        "Brokers",
        "Kafka",
        "TIBCO",
        "IBMMQ",
        "Testing",
        "technologiestools",
        "JUnit",
        "JMeter",
        "Protractor",
        "Mockito",
        "Karma",
        "Jasmine",
        "Database",
        "Oracle",
        "G",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "Sybase",
        "MongoDB",
        "Cassandra",
        "Big",
        "Data",
        "Tools",
        "Hadoop",
        "Spark",
        "MapReduce",
        "HDFS",
        "HBase",
        "Zookeeper",
        "Hive",
        "Sqoop",
        "Cassandra",
        "Flume",
        "Couchbase",
        "MongoDB",
        "Neo4J",
        "Redis",
        "MLlib",
        "Version",
        "Control",
        "CVS",
        "SVN",
        "Git",
        "Stash",
        "Bitbucket",
        "Build",
        "Tools",
        "ANT",
        "Maven",
        "Gradle",
        "Spring",
        "Tools",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Micro",
        "services",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Spring",
        "Hateos",
        "Spring",
        "Cloud",
        "Swagger",
        "UI",
        "Sleuth",
        "Spring",
        "Zuul",
        "Feign",
        "Client"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:47:49.304467",
    "resume_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Optum Florham Park NJ Over 8 years of Professional IT experience in analysis design implementation and testing of Object Oriented Applications in ClientServer environments using JavaJ2EE Expert in Various Agile methodologies like SCRUM Test Driven DevelopmentTDD Incremental and Iteration methodology Pair Programming Agile Developmentand testing using SDLC Experienced in Core Java J2EE design patterns like Front Controller Singleton Factory Pattern Service Locator Business Delegate Data Access Object Session Faade and Value object pattern Worked on Java 18 features like functional interfaces lambda expressions and java stream API Strong programming skills with both core and advanced Java technologies including Java J2EE JSP JDBC Struts 2 Servlets JAXWS JAXRS Spring and Hibernate Expertise in serverside development with JDBC ServletsMVC architecture Java Beans XML Experienced in implementing IOCDependency Injection features through frameworks like Spring Core Spring Security Batch Spring BootEureka Netflix Spring cloud SpringAOP JDBC Used Spring Batch and Hibernate for creating batch jobs to read and write multiple formats of data Expertise in developing Web based Distributed and FrontEnd applications in a threetier architecture using Java J2EE HTML HTML5 Backbone JS Bootstrap Angular JS ReactAjax Node JS JSPCSS JavaBeans Worked with objectcentric framework like Hibernate and Databasecentric framework like iBATIS Worked with multiple Databases like MYSQL Oracle 10g11g PostgreSQL MongoDB Cassandra Proficient in using Unit testing along with Jasmine Karma Mockito TestNG Selenium Junit Experience in deploying applications on Application and web servers likes Web logic Web Sphere JBoss Glassfish and Web Servers like Apache Tomcat Experience in implementing SOA and Web Services using SOAP RESTFUL JAXWS AXIS WSDL Developed RESTFUL microservices using JAXRS JerseyFramework Spring Boot Experienced with web services testing and automating using SOAPUI and Postman Configured and maintained Jenkins to implement the CICD process and integrate the tool with Ant and Maven to schedule the builds Created Jobs for Builds and Deployments installed several plugins in Jenkins to support multiple build eco systems required for the implementation of projects Worked on Application Deployments Environment configuration using PuppetChef management tools Experience with version control using SVN GIT Bitbucket and error logging using Log4J Implementing SOAs using Web services with XML SOAP WSDL Apache Axis JAXWS and JAXRS Deployed Production ready Java applications using Elastic Beanstalk where it auto configures the capacity provisioning through Autoscaling load balancing application health monitoring and Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache SNS SQS Elastic Search Configured AWS Identity and Access Management IAM Groups and Users login authentication Extensive hands on experience in fine tuning and scaling the applications in Pivotal Cloud Foundry Initiated Microservices application through Docker and Kubernetes cluster formation Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Optum Minnetonka MN May 2017 to Present The Integrated Eligibility is a Project which determines the eligibility of a person who can receive State Services like SNAPSupplemental Nutrition Assistance Program also known as Food Stamps TANFTemporary Assistance for Needy Families Medicaid etc who has little to no income The Agency Portal and Client Portal helps the state department to determine the eligibility of the person The Agency Portal will be accessed by State Agency workers to help the people to enroll in appropriate programs The Client Portal is for the users who can directly submit the application through online application Responsibilities Involved in analysis design implementation and testing phases of SDLC through Agile methodology Design and developed the application using framework Angular 4with HTML5 CSS3 and Typescript Developed UI components using Angular 4 dependency Injection Models data binding controllers Developedapplicationusing Java 8 to implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces foreach Used multithreaded environment to run processes asynchronously using future calls to access the data Used Spring SecurityforValidation and authentication on the Client side session fixation click jacking cross site request forgery Design and Development of business components using Spring IOC Spring Annotations dependency injection transaction management through Spring framework Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Used Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Configured Hibernate Cfgxml to facilitate connection pooling with Data Source and create POJOs to map with backend tables Implemented the associated business modules integration usingspringand Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 11g database Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Proficient at development of webbased application using Apache Tomcat JBOSS 70 Glassfish 40 Used JUnit Mockito for the unit and integration testing of various modules Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Resolved bugsdefects by coordinating with team members to assure a positive outcome using Jasper Using GIT for Source Control and Version Management and using log4j for logging Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins Implemented Micro Services based cloud Architecture on AWS platform for deployment Initiated Microservices application with Docker and Kubernetes cluster formation for the scalability of the application Designed new Strategies for optimizing all aspects of the CI release and deployment processes using latest container and virtualization techniques like Docker and Kubernetes Created the Docker containers and Docker consoles for managing the application life cycle Containerized Microservices by creating Docker images from Docker file collaborated with development support team to set up a continuous deployment environment using Docker Proficient in writing AWS Cloud Formation template to create customized VPC subnets NAT EC2 instances ELB Security groups S3 IAM Experience in automating the infrastructure and managing the application in AWS using web services Environment Angular 4 HTML5 CSS3 JavaScript jQuery AJAX JSON TypeScript Jenkins GIT SVN Rest log4j Hudson Spring MVC Spring boot Apache Kafka Docker JAXRS Junit Mockito Oracle SOAPUI Postman Ec2 AWS lambda Hibernate Oracle 12 MongoDB Sr Java Full Stack Developer Wells Fargo Co Charlotte NC December 2015 to April 2017 Online Access Module OAM is a web application that manages the user experience for secondary authentication OAM supports multiple authentication methods including Two Factor Authentication Advanced Access Security Questions and Out Of Wallet Authentication OAM Online access Module is a Wells Fargo Fraud Prevention Authentication application designed to provide the customers an ability to accesschange the credentials or to createenroll their credentials via by steps such as Identification authorization and verification via pin sent to PhoneEmail on account Responsibilities Understand the complete flow and found various gaps in current system Designed the new flow for faster creation of reports and posting Removed complex logics and built more stable and simple code logics Prepared User stories corresponding to the features taken from Backlog Comprehensive experience in using Nodejs and Spring Boot implementing RESTful web service Hosted and consumed RESTful Web services using JAXRS API with spring Boot Developed Micro services using RESTful web services to provide all the CRUD capabilities Used Executor Service framework to implement multithreading in programming to improve overall performance Responsible for implementing frontend features APIs internal tools and processes in Nodejs centered stack Extensively used npm tools like Gulp Grunt Web pack Built micro services for the delivery of Purchase Order module using Spring cloud Applied significant knowledge of industry trends and developments to improve service to our clients Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Used Multithreading extensively to improve the performance of the application Worked on Camelbased integration middleware solution for Provisioning Services by design and Implementation of business logic and data processing routes using Apache Camel Involved in capturing the business requirements design development and testing of the application Designed a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile tablet and desktop Used Cassandra NoSQL DB to store the data for few modules of the application Built Web pages that are more userinteractive using AJAX JQuery Developed a crossdevicebrowser web application for location sharing utilizing AngularJS JavaScript API Integrated the Java code API in JSP pages and responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 bootstrap and AngularJS Using AngularJS created Responsive Web Design and data manipulations in company standard format in UI Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Usage of Scala as a template engine to the frontend part of code Worked on AngularJS used its twoway data binding to achieve the feedback functionality from the user Configured Swagger for autogenerated documentation for all REST API calls Experienced in build deploy multi module applications using Maven ANT and CI servers like Jenkins Environment JAVAJ2EE HTML JSON XHTML JS AJAX JQUERY DOJO CSS3 JSP NodeJS AngularJS ReactJS JSFBootstrap XML XSLT XPATH MULE ESB AWS WebSphere SOAP REST Spring Framework Spring BootMicroservices JMS Maven Drools 5 Eclipse Jenkins JUnit MongoDB Mockito Star Team TDD Spring MVC EMMA JIRA Spring framework DI AOP Batch Hibernate Cassandra Docker Ant Coherence Rally Apache Camel Sr Java J2EE Federal Home Loan Bank Des Moines IA December 2014 to November 2015 A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Developed the J2EE application based on the Service Oriented Architecture Used Spring Framework for dependency injection integration of Hibernate using Spring ORM support development of RESTful web services to give JSON output Used Spring MVC front controller to handle requests from dispatcher servlet to handle incoming requests Configured Spring MVC from scratch using XML configurations namespace handling spring security set up and giving access to resource wrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections Developed the applications using SPRING framework including Spring Core Spring WS Spring MVC and Spring Integrations design pattern Used Hibernate in persistence layer hibernate mappings using Annotations HQL Criteria and Queries Involved in Design and Development of RESTful API Worked with SOAP UI JAXWS to create Web Services and consuming the existing services CreatedREST web services spring with Jackson Mappers exchange data using JSON data structure Used SVN for source Version Control resolving code conflicts and merging code base Deployed the application in Web Logic Application Server Developed Microservices to provide Rest APIs utilizing Spring MVC Strong experience in writing PLSQL queries and performance tuning Developed Unix Shell scripts to automate repetitive database processes Used Maven for dependency management build applications and deploy to the containers application servers and create versions in the repository Used JUnit for unit testing of the application and log4j for logging Environment Core Java Java 16 Spring Hibernate SVN Apache Eclipse 33 JNDI Log4j JUnit XML XSD AngularJS Nodejs JQuery HTML 5 bootstrap JavaScript Web Logic Application Server Oracle Windows XP REST API NetBeans UNIX Java Developer Valley National Bank Wayne NJ November 2013 to November 2014 Securities lending system provides a single centralized realtime system for borrowing and lending of securities like stocks Fixed Income Instrument Tbill and Tnotes Requests to borrow are routed to specified lenders and associated execution information is returned to the borrower without manual intervention Securities Lending System has Desktop Client for call center and website for international users User can specify time limit rebate rate collateral type delivery details maximum price and books Responsibilities Gathered user requirements followed by analysis and design Evaluated various technologies for the Client Developed HTML and JSP to present Client side GUI Involved in development of JavaScript code for Client Side Validations Involved in development of presentation components using Swings Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed dynamic content of presentation layer using JSP Develop userdefined tags using XML Used Struts Framework to implement J2EE design patterns MVC Developed Tested and Debugged the Java JSP and EJB components using Eclipse RCP Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Developed JSP as the view Servlets as Controller and EJB as model in the Struts Framework Worked on Web Logic application server to deploy JSP and EJB applications Created and implemented PLSQL stored procedures triggers Environment Core Java J2EE Swing EJB 21 JSP 20 Servlets 24 Struts HTML XML CORBA XSLT CSS Java Script Eclipse RCP PLSQL Weblogic81 Junior Java Developer Systems Services Limited May 2009 to August 2013 Responsibilities Involved in understanding and analyzing the requirements of the project Implemented server side programs by using Servlets and JSP Designed developed and User Interface using HTML JavaScript AJAX and CSS Used JavaScript to perform Client Side Validation Implemented using the MVC design pattern Used JDBC to interact with the underlying MySQL Database Deployed Applications on Apache Tomcat Server Involved in Unit testing for various components Used Log4J for any logging purposes during the development of the application Environment JAVA J2EE JSP SERVLETS JDBC HTML CSS JAVASCRIPT AJAX ECLIPSE JUNIT MVC APACHE TOMCAT AND MYSQL Education Bachelors Skills Java 9 years JavaScript 9 years MODEL VIEW CONTROLLER 9 years MODELVIEWCONTROLLER 9 years MVC 9 years Additional Information TECHNICAL SKILL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK 1415161718 C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 JBoss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax jQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio Express JS JSON Swagger UI Bootstrap Google Web Toolkit GWTBackbone JS Ember JS Knockout JS AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Message Brokers Kafka RabbitMQ ActiveMQ TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Karma Jasmine Database Oracle 8i9i10g11G DB2 SQL Server 20052008 MySQL PostgreSQL Sybase MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Spring Hateos Spring Cloud Swagger UI Sleuth and Spring Zuul Feign Client",
    "unique_id": "1d018ab5-b878-4097-b851-ed26eac34b17"
}