{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Farmers Insurance New York NY NY Work Experience Sr Java Developer Farmers Insurance Cleveland OH July 2017 to Present Description The application provides comprehensive information concerning various types of Insurance coverage offered by Farmers Insurance The website functionality was extended by providing the customers to login and performs online transactions like paying bills online and updating their insurance policy The website was redesigned to provide customized information for the end users Responsibilities Involved in all phases of Software Development Life Cycle SDLC including analysis design development and testing of the project Used SpringBoot to create standalone spring applications Used Eclipse Integrated Development Environment for coding debugging and testing the application modules Involved in developing of presentation layer for the application modules using AngularJS2 XHTML HTML5 jQuery AJAX and CSS Designed and developed Microservices business components using SpringBoot Knowledge in creation of Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 2 Implemented SpringBoot services in combination with Angular as front end to form a Microservice Oriented application AngularJS was used to parse the JSON file using the REST Web services Configured Spring based Microservices and Spring Boot Used ObjectRelational mapping tool Hibernate and JPA to achieve object to database table persistency Developed Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Configured SwaggerUI registered Micro service with Eureka server to monitor service health check from Spring Boot admin console Analyze and fix issues related to REST Web services and Application responses Implemented the backend services using SpringBoot Worked on developing REST Services to expose the processed data as a service Experience in working with NoSQL Mongo DB and Apache Cassandra Implemented Spring Security and Spring transactions in the applications Worked on Swagger REST with JSON to test data and Postman for testing the Web Services and Documentation of the Web API Experienced on spring framework applications like Spring Core Spring AOP Spring MVC Spring Batch Spring Security and SpringBoot and did integration to Micro services into existing system architecture Involved in the configuration of Spring Framework and Hibernate mapping tool Configured MQ Queues and Topics to publish messages to topics and consume published messages Worked with Docker to deploy Microservices in modern containers to increase Isolation Experience with Spring Ribbon and Kafka broker service to handle heavy traffic Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework Developed communication between different applications using MQ Series JMS and Spring Integration Configured and monitored numerous Cassandras NoSQL instances Deployment of micro services via AWS Beanstalk and Lambda Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Extensively followed Test Driven Development to implement application business logic work flow process and integration of application modules Followed Pair Programming to analysis design development Integration Testing and deploy the applications Used XML XSD XPath and JAXB for message transformations and mappings Extensively followed agile Scrum methodology and XP to implement the application modules Configured and used Hudson Jenkins tools for continues integration and build and deploy the applications Used Maven for building and deploying the web application into WebSphere and configuring the dependency plugins and resources Wrote JUnit test cases for each line of the application code and performed validation Environment JavaJ2ee JSP SpringBoot Hibernate SOAP REST JAXRS JMS MQ Series SQL PLSQL JAXB XML HTML5 CSS JavaScript jQuery AJAX JSON AngularJS Eclipse JBoss Maven Nexus AWS DB2 Kafka Cassandra Micro Services Autosys UML Agile XP Jenkins GitHub Stash JIRA Junit Log4j SOAPUI Unix shell Scripting Sr Java Developer JetBlue New York NY October 2016 to June 2017 Description JetBlue Airways Corporation stylized as jetBlue is an American lowcost airline headquartered in New York City The application is used by airlines customers and members to book the tickets check travel deals enroll to business programs and find vacation packages Responsibilities Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Implemented Micro Services using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka Server Used S3 buckets to manage document management and RDS to host database Experience with NoSQL databases like Cassandra and Mongo DB Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Optimized the full text search function by connecting to NoSQL DB like MongoDB and Elastic search Implemented MongoDB database concepts such as locking transactions indexes and replication Used Rabbit MQ queues for implementation of multithreaded synchronization processes using JMS queues for consumption requests Used Micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy micro services Involved in design and development of UI component using frameworks AngularJS JavaScript HTML CSS and Bootstrap Experienced in using Kafka as a distributed publishersubscriber messaging system Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST and added security to SOAP through WS Security Experience working in Kafka and Camel Used Spring Security for Authentication and authorization extensively Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Consumed REST based micro services with Rest Template based on RESTful APIs Used Docker for possible to production to the development environment to fast possible for interactive use Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs Created web services using Spring Rest Controller to return JSON to the frontend Developed serverside services using Java Spring Web Services SOAP RESTful WSDL JAXB JAXRPC Used SOAP UI tool for testing web services connectivity Used MAVEN building tool for creating EAR file to be deployed in the application servers it is also used for Dependency management of code in the application Used JIRA for bug tracking issue tracking and project management Involved in writing the test cases for the application using JUnit Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented Log4j tool to log the entire application Environment Java J2EE Servletfilters JSP JSTL Springboot Microservices Spring Security Angular JS Cassandra JavaScript HTML CSS and Bootstrap REST Pivotal Cloud Foundry AWS EC2 S3 Netflix Eureka Rabbit MQ Kafka SOAP RESTful NoSQL Mongo DB Elastic Search STS MAVEN JUnit Jenkins Log4j JIRA Docker Git Sr Java Developer Travel Click NY January 2016 to September 2016 Description TravelCLICK is the leading provider in developing hospitality tool kit for various hotels from various countries This hospitality tool kit contains the ecommerce solutions for the hotels to make reservations in their central booking reservation and to evaluate the each of the booking against all hotels in the market a product is designed called eTRAK application provides Hotel Brands their performance in various sales channels through which their inventory is sold sales channels on which performance is analyzed in eTRAK are GDS Voice Retail Airline Merchant Opaque Brand website Responsibilities Involved in writing Application workflow both for frontend and backend Created multilayered application framework using Java J2EE technologies Developed the RESTful web services by using Spring Framework and MVC pattern for Business logic that is reusable and that can be consumed for frontend applications Developed Multithread Application using with Thread Pool and Concurrent Executors Developed Business logic with the help of spring and Data Access was implemented by using Hibernate Handled the security and Authorization by Spring Security and OAuth authentication Protocol Implemented Persistence layer using Hibernate 43x to interact with the MySQL database Involved in developing Serverside EJB components and wrote session beans to perform the business logic Created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Designed and prepared custom tags on JSF layer and prepared framework classes for Managed Beans interacting with the Hibernate Used JPA and Hibernate with entity beans for interacting persistence layer for CRUD operations Utilized AWS Cloud platform and its features which include EBS EC2 SNS RDS Cloud Watch Cloud Trail EMR Lambda Cloud Formation Auto scaling Cloud Front S3 and Route 53 Worked with UI developers for building a portal for business application using technologies like Java HTML CSS JavaScript jQuery AngularJS Bootstrap Used Spring MVC components to implement business layer and Spring Boot for Microservices Involved in upgrade of the present Oracle data model to Cassandra data model Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement Used SAX and DOM parser for parsing XML documents and XSLT API to handle XML parsing in Object Oriented way Implemented Design patterns like DAO Singleton Factory Delegate and Front Controller Developed MicroServices based architecture to enable the application to be deployed on AWS Cloud Implemented complex UI logic using custommade Custom tags and existing JSF Custom tags and Expression Language in compliance with XHTML standards Collaborated with technical team members to integrate backend and frontend elements Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Environment Java 17 JDK Servlets JSP Spring 326 Struts 2316 HTML5 CSS3 Ajax JavaScript jQuery AngularJS NodeJS Cassandra JDBC Bootstrap 23x IntelliJ Hibernate 428 JUnit 411 RESTful Web Services Sr Java Developer Connexions Loyalty Group Richmond VA November 2014 to December 2015 Description The objective of system is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Followed Scrum Agile methodology for development of the application Involved in analyzing the requirements and participated in discussions with business analysts Involved in developing Hibernate DAO classes mapping files for persistence layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the middle tier using EJBs Stateless Session Bean Java Servlets Developed various helper classes needed following core java multithreaded programming and Collection classes Implement API Service using Apache Camel Developed cloud native microservices using Spring cloud and Spring Boot Design and develop new database using as relational database management system PostgreSQL Added user validations and user permissions by using the Nodejs Involved in writing HQL and SQL Queries for Oracle database Utilized custom logging framework for Mule ESB application Created and compiled XML Schema to generate Java Bean classes Patching the Linux servers on all the environments Prod PreProd and Testing of Customer Written the integration test to execute full systems using the Groovy Prepared automation scripts and developed PostgreSQL database architecture Used Selenium WebDriver to provide more flexibility in automating test cases Created REST Web Services for the management of data using JAXRS Used Tomcat Application server for live services Configure JIRA to set up a trusted communication between JIRA and Confluence Used Log4j to set up debugging and error information for production support Used Junit for unit testing and Jenkins for automated build and deploy process Involved in bug fixing during the System testing Joint System testing and User acceptance testing Environment Java J2EE Spring Hibernate JMS HTML5 CSS3 Nodejs JavaScript Java Bean jQuery JSP AJAX AngularJS Selenium Tomcat PostgreSQL Spring cloud Apache Camel JIRA Jenkins ESB Linux PLSQL ANT Log4j Git Maven JUnit Java Developer Selectsys December 2012 to September 2014 Description Health Care information system is a transaction processing system based on customer Relationship Management system It is developed to automate the entire process of treatment tracking and based on treatment status It automatically generates health reports Appointment notifications and Billing letters to client and work orders to concerned crew members Responsibilities Analysis design and development of Application based on J2EE using Spring and Hibernate Hibernate was used for Object Relational mapping with Oracle database Involved in developing the user interface using Struts Worked on the Web Services using SOAP and Restful web services Used SVN configuration management tool for code versioning and release log4j was used for unit testing and as logging frameworks Developed the UI Screens using JSP JavaScript HTML and Angular Where we perform the clientside validation Developed the classes for Unit Testing Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Developed custom tags for User Interface UI Experienced in using the agile methodology for developing application and Followed Agile Methodologies to implement code and have strong knowledge with development in Agile environment Experience in different Agile methodologies like Test Driven Development Scrum Environment Java Spring MVC Struts RESTful JSP JUnit Eclipse MS SQL server JDBC Java Script AngularJS CSS HTML Struts Hibernate Visual Source Safe VSS PUTTY Oracle 9i Agile Scrum Methodology Associate Java Developer UV Fortune IT Solutions June 2010 to November 2012 Description The project was designed to implement a web based front end system which can be used by the employees managers and higherlevel management having specific role permissions for effective processing of day to day business activities in the company like leave management project management and resource management etc Responsibilities Coordinated software system installation and monitor equipment functioning to ensure specifications are met Actively involved in project development and bug fixing for the project Worked closely with students helped in the deeper understanding of concepts Involved in requirement analysis and client interaction responsible for writing hibernate mapping XML Files HQL Worked closely with business analysts project managers and project leaders to analyze business requirements Used J2EE design patterns like Factory Singleton Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked in a fastpaced environment and meeting all the requirements Created applications involving JSP JavaScript jQuery and HTML Extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Creating technical specifications coding unit and system integration testing for the enhancements and conducted reviews with end users Created new database connection for MYSQL Developed the application using Spring MVC Framework by implementing controller and backend service classes Followed Java coding standards while developing the application Environment Eclipse MySQL Server JSP JavaScript jQuery Java C HTML5 and CSS3 Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Additional Information Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Technical Summary Languages JAVA C C SQL and PLSQL Web Technologies HTML JavaScript CSS Angular JS Angular 2 ReactJS AJAX XML XSLT Java Beans JMS J2EE Technologies Servlets JSP JSF EJB JMS JNDI Web Services JDBC SOAP RMI Methodology Agile Scrum RUP TDD OOAD SDLC Java Script Technology Angular JS Nodejs and ReactJS AppWeb servers Apache Tomcat Weblogic Apache camel WebSphere JBoss WAS 5x Grunt server Applications Frameworks Spring Spring Boot Hibernate Struts JSF Web services SOAP WSDL AXIS JAXWS REST JSON JAXRS JAXRPC UDDI Databases Oracle MySQL SQL Server DB2 MongoDB Cassandra XML XML XPATH XSLT XML SPY JAXB SAX DOM JAXP Tools ANT JUNIT Log4j JMETER TOAD Maven Rational Rose IDEs Eclipse My Eclipse NetBeans InteliJ Operating Systems Windows UNIX LINUX",
    "entities": [
        "Spring Bootbased",
        "Spring Framework",
        "Hibernate 428 JUnit 411",
        "Angular",
        "Created REST Web Services",
        "XP",
        "Developed Hibernate POJO Classes Hibernate Configuration",
        "GDS Voice Retail Airline Merchant Opaque Brand",
        "Component",
        "Dependency",
        "Used Eclipse Integrated Development Environment",
        "the Nodejs Involved",
        "Hotel Brands",
        "Developer Farmers Insurance",
        "Used Micro",
        "SAX DOM JAXP Tools ANT JUNIT Log4j JMETER TOAD",
        "JSON",
        "Followed Pair Programming",
        "Thread Pool and Concurrent Executors Developed Business",
        "Responsibilities Implemented",
        "Spring MVC Framework",
        "SOAP",
        "XML",
        "EAR",
        "Java Script Technology Angular JS Nodejs",
        "SpringBoot Worked",
        "OAuth",
        "WS Security",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "Angular 2 Implemented SpringBoot",
        "Used Selenium WebDriver",
        "Shell",
        "Oracle MySQL SQL Server",
        "Spring Boot",
        "WebSphere",
        "Maven Rational Rose IDEs Eclipse My Eclipse NetBeans",
        "XSLT API",
        "Developer Connexions Loyalty Group",
        "Developed",
        "Data Access",
        "Operating Systems Windows",
        "Java Spring Web Services SOAP RESTful WSDL",
        "Responsibilities Involved",
        "Cloud Implemented",
        "SpringBoot",
        "Restful",
        "SpringBoot Knowledge",
        "MQ",
        "Core",
        "Implemented Micro Services",
        "XSLT XML SPY",
        "the Web Services and Documentation of the Web API Experienced",
        "Apache Camel",
        "Mule ESB",
        "JSP",
        "Farmers Insurance",
        "Developed Multithread Application",
        "Micro",
        "Worked",
        "SQL Queries",
        "DOM",
        "Microservice Oriented",
        "RDS",
        "STS",
        "MVC",
        "Agile",
        "EJB",
        "GIT",
        "Deployment of micro services",
        "API",
        "JSP JSP Tag",
        "Created",
        "Selenium Tomcat PostgreSQL",
        "AWS",
        "Legacy Systems",
        "Oracle",
        "JSF",
        "SAX",
        "Netflix",
        "Object Oriented",
        "GitHub",
        "Test Driven Development",
        "MAVEN",
        "Test Driven Development Scrum Environment",
        "JDK Servlets",
        "Kafka Cassandra Micro Services",
        "Postman",
        "Description JetBlue Airways Corporation",
        "Typescript",
        "SQL Query Statements",
        "Camel Used Spring Security for Authentication",
        "Serverside",
        "Collection classes Implement API Service",
        "XHTML",
        "Isolation",
        "Joint System",
        "CRUD",
        "Backend",
        "the Web Services",
        "REST Services",
        "Maven",
        "Hibernate Mapping",
        "NoSQL Mongo DB Elastic",
        "lJavaspan",
        "Hibernate Hibernate",
        "New York City",
        "UI",
        "SVN",
        "JSF Custom",
        "WebSphere JBoss",
        "REST",
        "DAO Singleton Factory Delegate",
        "Hibernate DAO",
        "JAXRS Used Tomcat Application",
        "NoSQL",
        "Application",
        "Responsible for Continuous Integration CI",
        "MS SQL",
        "Software Development Life Cycle",
        "Factory Singleton Involved",
        "EBS",
        "Relationship Management",
        "Spring Framework and Hibernate",
        "CSS Designed",
        "Rest Template"
    ],
    "experience": "Experience Sr Java Developer Farmers Insurance Cleveland OH July 2017 to Present Description The application provides comprehensive information concerning various types of Insurance coverage offered by Farmers Insurance The website functionality was extended by providing the customers to login and performs online transactions like paying bills online and updating their insurance policy The website was redesigned to provide customized information for the end users Responsibilities Involved in all phases of Software Development Life Cycle SDLC including analysis design development and testing of the project Used SpringBoot to create standalone spring applications Used Eclipse Integrated Development Environment for coding debugging and testing the application modules Involved in developing of presentation layer for the application modules using AngularJS2 XHTML HTML5 jQuery AJAX and CSS Designed and developed Microservices business components using SpringBoot Knowledge in creation of Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 2 Implemented SpringBoot services in combination with Angular as front end to form a Microservice Oriented application AngularJS was used to parse the JSON file using the REST Web services Configured Spring based Microservices and Spring Boot Used ObjectRelational mapping tool Hibernate and JPA to achieve object to database table persistency Developed Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Configured SwaggerUI registered Micro service with Eureka server to monitor service health check from Spring Boot admin console Analyze and fix issues related to REST Web services and Application responses Implemented the backend services using SpringBoot Worked on developing REST Services to expose the processed data as a service Experience in working with NoSQL Mongo DB and Apache Cassandra Implemented Spring Security and Spring transactions in the applications Worked on Swagger REST with JSON to test data and Postman for testing the Web Services and Documentation of the Web API Experienced on spring framework applications like Spring Core Spring AOP Spring MVC Spring Batch Spring Security and SpringBoot and did integration to Micro services into existing system architecture Involved in the configuration of Spring Framework and Hibernate mapping tool Configured MQ Queues and Topics to publish messages to topics and consume published messages Worked with Docker to deploy Microservices in modern containers to increase Isolation Experience with Spring Ribbon and Kafka broker service to handle heavy traffic Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework Developed communication between different applications using MQ Series JMS and Spring Integration Configured and monitored numerous Cassandras NoSQL instances Deployment of micro services via AWS Beanstalk and Lambda Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Extensively followed Test Driven Development to implement application business logic work flow process and integration of application modules Followed Pair Programming to analysis design development Integration Testing and deploy the applications Used XML XSD XPath and JAXB for message transformations and mappings Extensively followed agile Scrum methodology and XP to implement the application modules Configured and used Hudson Jenkins tools for continues integration and build and deploy the applications Used Maven for building and deploying the web application into WebSphere and configuring the dependency plugins and resources Wrote JUnit test cases for each line of the application code and performed validation Environment JavaJ2ee JSP SpringBoot Hibernate SOAP REST JAXRS JMS MQ Series SQL PLSQL JAXB XML HTML5 CSS JavaScript jQuery AJAX JSON AngularJS Eclipse JBoss Maven Nexus AWS DB2 Kafka Cassandra Micro Services Autosys UML Agile XP Jenkins GitHub Stash JIRA Junit Log4j SOAPUI Unix shell Scripting Sr Java Developer JetBlue New York NY October 2016 to June 2017 Description JetBlue Airways Corporation stylized as jetBlue is an American lowcost airline headquartered in New York City The application is used by airlines customers and members to book the tickets check travel deals enroll to business programs and find vacation packages Responsibilities Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Implemented Micro Services using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka Server Used S3 buckets to manage document management and RDS to host database Experience with NoSQL databases like Cassandra and Mongo DB Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Optimized the full text search function by connecting to NoSQL DB like MongoDB and Elastic search Implemented MongoDB database concepts such as locking transactions indexes and replication Used Rabbit MQ queues for implementation of multithreaded synchronization processes using JMS queues for consumption requests Used Micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy micro services Involved in design and development of UI component using frameworks AngularJS JavaScript HTML CSS and Bootstrap Experienced in using Kafka as a distributed publishersubscriber messaging system Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST and added security to SOAP through WS Security Experience working in Kafka and Camel Used Spring Security for Authentication and authorization extensively Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Consumed REST based micro services with Rest Template based on RESTful APIs Used Docker for possible to production to the development environment to fast possible for interactive use Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs Created web services using Spring Rest Controller to return JSON to the frontend Developed serverside services using Java Spring Web Services SOAP RESTful WSDL JAXB JAXRPC Used SOAP UI tool for testing web services connectivity Used MAVEN building tool for creating EAR file to be deployed in the application servers it is also used for Dependency management of code in the application Used JIRA for bug tracking issue tracking and project management Involved in writing the test cases for the application using JUnit Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented Log4j tool to log the entire application Environment Java J2EE Servletfilters JSP JSTL Springboot Microservices Spring Security Angular JS Cassandra JavaScript HTML CSS and Bootstrap REST Pivotal Cloud Foundry AWS EC2 S3 Netflix Eureka Rabbit MQ Kafka SOAP RESTful NoSQL Mongo DB Elastic Search STS MAVEN JUnit Jenkins Log4j JIRA Docker Git Sr Java Developer Travel Click NY January 2016 to September 2016 Description TravelCLICK is the leading provider in developing hospitality tool kit for various hotels from various countries This hospitality tool kit contains the ecommerce solutions for the hotels to make reservations in their central booking reservation and to evaluate the each of the booking against all hotels in the market a product is designed called eTRAK application provides Hotel Brands their performance in various sales channels through which their inventory is sold sales channels on which performance is analyzed in eTRAK are GDS Voice Retail Airline Merchant Opaque Brand website Responsibilities Involved in writing Application workflow both for frontend and backend Created multilayered application framework using Java J2EE technologies Developed the RESTful web services by using Spring Framework and MVC pattern for Business logic that is reusable and that can be consumed for frontend applications Developed Multithread Application using with Thread Pool and Concurrent Executors Developed Business logic with the help of spring and Data Access was implemented by using Hibernate Handled the security and Authorization by Spring Security and OAuth authentication Protocol Implemented Persistence layer using Hibernate 43x to interact with the MySQL database Involved in developing Serverside EJB components and wrote session beans to perform the business logic Created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Designed and prepared custom tags on JSF layer and prepared framework classes for Managed Beans interacting with the Hibernate Used JPA and Hibernate with entity beans for interacting persistence layer for CRUD operations Utilized AWS Cloud platform and its features which include EBS EC2 SNS RDS Cloud Watch Cloud Trail EMR Lambda Cloud Formation Auto scaling Cloud Front S3 and Route 53 Worked with UI developers for building a portal for business application using technologies like Java HTML CSS JavaScript jQuery AngularJS Bootstrap Used Spring MVC components to implement business layer and Spring Boot for Microservices Involved in upgrade of the present Oracle data model to Cassandra data model Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement Used SAX and DOM parser for parsing XML documents and XSLT API to handle XML parsing in Object Oriented way Implemented Design patterns like DAO Singleton Factory Delegate and Front Controller Developed MicroServices based architecture to enable the application to be deployed on AWS Cloud Implemented complex UI logic using custommade Custom tags and existing JSF Custom tags and Expression Language in compliance with XHTML standards Collaborated with technical team members to integrate backend and frontend elements Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Environment Java 17 JDK Servlets JSP Spring 326 Struts 2316 HTML5 CSS3 Ajax JavaScript jQuery AngularJS NodeJS Cassandra JDBC Bootstrap 23x IntelliJ Hibernate 428 JUnit 411 RESTful Web Services Sr Java Developer Connexions Loyalty Group Richmond VA November 2014 to December 2015 Description The objective of system is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Followed Scrum Agile methodology for development of the application Involved in analyzing the requirements and participated in discussions with business analysts Involved in developing Hibernate DAO classes mapping files for persistence layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the middle tier using EJBs Stateless Session Bean Java Servlets Developed various helper classes needed following core java multithreaded programming and Collection classes Implement API Service using Apache Camel Developed cloud native microservices using Spring cloud and Spring Boot Design and develop new database using as relational database management system PostgreSQL Added user validations and user permissions by using the Nodejs Involved in writing HQL and SQL Queries for Oracle database Utilized custom logging framework for Mule ESB application Created and compiled XML Schema to generate Java Bean classes Patching the Linux servers on all the environments Prod PreProd and Testing of Customer Written the integration test to execute full systems using the Groovy Prepared automation scripts and developed PostgreSQL database architecture Used Selenium WebDriver to provide more flexibility in automating test cases Created REST Web Services for the management of data using JAXRS Used Tomcat Application server for live services Configure JIRA to set up a trusted communication between JIRA and Confluence Used Log4j to set up debugging and error information for production support Used Junit for unit testing and Jenkins for automated build and deploy process Involved in bug fixing during the System testing Joint System testing and User acceptance testing Environment Java J2EE Spring Hibernate JMS HTML5 CSS3 Nodejs JavaScript Java Bean jQuery JSP AJAX AngularJS Selenium Tomcat PostgreSQL Spring cloud Apache Camel JIRA Jenkins ESB Linux PLSQL ANT Log4j Git Maven JUnit Java Developer Selectsys December 2012 to September 2014 Description Health Care information system is a transaction processing system based on customer Relationship Management system It is developed to automate the entire process of treatment tracking and based on treatment status It automatically generates health reports Appointment notifications and Billing letters to client and work orders to concerned crew members Responsibilities Analysis design and development of Application based on J2EE using Spring and Hibernate Hibernate was used for Object Relational mapping with Oracle database Involved in developing the user interface using Struts Worked on the Web Services using SOAP and Restful web services Used SVN configuration management tool for code versioning and release log4j was used for unit testing and as logging frameworks Developed the UI Screens using JSP JavaScript HTML and Angular Where we perform the clientside validation Developed the classes for Unit Testing Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Developed custom tags for User Interface UI Experienced in using the agile methodology for developing application and Followed Agile Methodologies to implement code and have strong knowledge with development in Agile environment Experience in different Agile methodologies like Test Driven Development Scrum Environment Java Spring MVC Struts RESTful JSP JUnit Eclipse MS SQL server JDBC Java Script AngularJS CSS HTML Struts Hibernate Visual Source Safe VSS PUTTY Oracle 9i Agile Scrum Methodology Associate Java Developer UV Fortune IT Solutions June 2010 to November 2012 Description The project was designed to implement a web based front end system which can be used by the employees managers and higherlevel management having specific role permissions for effective processing of day to day business activities in the company like leave management project management and resource management etc Responsibilities Coordinated software system installation and monitor equipment functioning to ensure specifications are met Actively involved in project development and bug fixing for the project Worked closely with students helped in the deeper understanding of concepts Involved in requirement analysis and client interaction responsible for writing hibernate mapping XML Files HQL Worked closely with business analysts project managers and project leaders to analyze business requirements Used J2EE design patterns like Factory Singleton Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked in a fastpaced environment and meeting all the requirements Created applications involving JSP JavaScript jQuery and HTML Extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Creating technical specifications coding unit and system integration testing for the enhancements and conducted reviews with end users Created new database connection for MYSQL Developed the application using Spring MVC Framework by implementing controller and backend service classes Followed Java coding standards while developing the application Environment Eclipse MySQL Server JSP JavaScript jQuery Java C HTML5 and CSS3 Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Additional Information Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Technical Summary Languages JAVA C C SQL and PLSQL Web Technologies HTML JavaScript CSS Angular JS Angular 2 ReactJS AJAX XML XSLT Java Beans JMS J2EE Technologies Servlets JSP JSF EJB JMS JNDI Web Services JDBC SOAP RMI Methodology Agile Scrum RUP TDD OOAD SDLC Java Script Technology Angular JS Nodejs and ReactJS AppWeb servers Apache Tomcat Weblogic Apache camel WebSphere JBoss WAS 5x Grunt server Applications Frameworks Spring Spring Boot Hibernate Struts JSF Web services SOAP WSDL AXIS JAXWS REST JSON JAXRS JAXRPC UDDI Databases Oracle MySQL SQL Server DB2 MongoDB Cassandra XML XML XPATH XSLT XML SPY JAXB SAX DOM JAXP Tools ANT JUNIT Log4j JMETER TOAD Maven Rational Rose IDEs Eclipse My Eclipse NetBeans InteliJ Operating Systems Windows UNIX LINUX",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Farmers",
        "Insurance",
        "New",
        "York",
        "NY",
        "NY",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Farmers",
        "Insurance",
        "Cleveland",
        "OH",
        "July",
        "Present",
        "Description",
        "application",
        "information",
        "types",
        "Insurance",
        "coverage",
        "Farmers",
        "Insurance",
        "website",
        "functionality",
        "customers",
        "transactions",
        "bills",
        "insurance",
        "policy",
        "website",
        "information",
        "end",
        "users",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "analysis",
        "design",
        "development",
        "testing",
        "project",
        "SpringBoot",
        "spring",
        "applications",
        "Eclipse",
        "Integrated",
        "Development",
        "Environment",
        "application",
        "modules",
        "presentation",
        "layer",
        "application",
        "modules",
        "AngularJS2",
        "XHTML",
        "HTML5",
        "jQuery",
        "AJAX",
        "CSS",
        "Microservices",
        "business",
        "components",
        "SpringBoot",
        "Knowledge",
        "creation",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "Angular",
        "SpringBoot",
        "services",
        "combination",
        "Angular",
        "end",
        "Microservice",
        "application",
        "AngularJS",
        "file",
        "REST",
        "Web",
        "services",
        "Configured",
        "Spring",
        "Microservices",
        "Spring",
        "Boot",
        "mapping",
        "tool",
        "Hibernate",
        "JPA",
        "object",
        "database",
        "table",
        "persistency",
        "Developed",
        "Hibernate",
        "POJO",
        "Classes",
        "Hibernate",
        "Configuration",
        "file",
        "Hibernate",
        "Mapping",
        "files",
        "Configured",
        "SwaggerUI",
        "Micro",
        "service",
        "Eureka",
        "server",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "admin",
        "console",
        "Analyze",
        "issues",
        "REST",
        "Web",
        "services",
        "Application",
        "responses",
        "services",
        "SpringBoot",
        "Worked",
        "REST",
        "Services",
        "data",
        "service",
        "Experience",
        "NoSQL",
        "Mongo",
        "DB",
        "Apache",
        "Cassandra",
        "Spring",
        "Security",
        "Spring",
        "transactions",
        "applications",
        "Swagger",
        "REST",
        "JSON",
        "data",
        "Postman",
        "Web",
        "Services",
        "Documentation",
        "Web",
        "API",
        "spring",
        "framework",
        "applications",
        "Spring",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "SpringBoot",
        "integration",
        "Micro",
        "services",
        "system",
        "architecture",
        "configuration",
        "Spring",
        "Framework",
        "Hibernate",
        "mapping",
        "tool",
        "MQ",
        "Queues",
        "Topics",
        "messages",
        "topics",
        "messages",
        "Docker",
        "Microservices",
        "containers",
        "Isolation",
        "Experience",
        "Spring",
        "Ribbon",
        "Kafka",
        "broker",
        "service",
        "traffic",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Apache",
        "Camel",
        "Spring",
        "framework",
        "communication",
        "applications",
        "MQ",
        "Series",
        "JMS",
        "Spring",
        "Integration",
        "Configured",
        "Cassandras",
        "NoSQL",
        "Deployment",
        "micro",
        "services",
        "AWS",
        "Beanstalk",
        "Lambda",
        "DAOs",
        "data",
        "source",
        "Databases",
        "formats",
        "Kafka",
        "Streams",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "Test",
        "Driven",
        "Development",
        "application",
        "business",
        "logic",
        "work",
        "flow",
        "process",
        "integration",
        "application",
        "modules",
        "Pair",
        "Programming",
        "analysis",
        "design",
        "development",
        "Integration",
        "Testing",
        "applications",
        "XML",
        "XSD",
        "XPath",
        "JAXB",
        "message",
        "transformations",
        "mappings",
        "Scrum",
        "methodology",
        "XP",
        "application",
        "modules",
        "Hudson",
        "Jenkins",
        "tools",
        "integration",
        "applications",
        "Maven",
        "web",
        "application",
        "WebSphere",
        "dependency",
        "plugins",
        "resources",
        "Wrote",
        "JUnit",
        "test",
        "cases",
        "line",
        "application",
        "code",
        "validation",
        "Environment",
        "JavaJ2ee",
        "JSP",
        "SpringBoot",
        "Hibernate",
        "SOAP",
        "REST",
        "JAXRS",
        "JMS",
        "MQ",
        "Series",
        "SQL",
        "PLSQL",
        "XML",
        "HTML5",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "JSON",
        "Eclipse",
        "JBoss",
        "Maven",
        "Nexus",
        "AWS",
        "DB2",
        "Kafka",
        "Cassandra",
        "Micro",
        "Services",
        "Autosys",
        "UML",
        "Agile",
        "XP",
        "Jenkins",
        "GitHub",
        "Stash",
        "JIRA",
        "Junit",
        "Log4j",
        "SOAPUI",
        "Unix",
        "shell",
        "Scripting",
        "Sr",
        "Java",
        "Developer",
        "JetBlue",
        "New",
        "York",
        "NY",
        "October",
        "June",
        "Description",
        "JetBlue",
        "Airways",
        "Corporation",
        "jetBlue",
        "airline",
        "New",
        "York",
        "City",
        "application",
        "airlines",
        "customers",
        "members",
        "tickets",
        "travel",
        "deals",
        "business",
        "programs",
        "vacation",
        "packages",
        "Responsibilities",
        "business",
        "layer",
        "Core",
        "java",
        "Spring",
        "Beans",
        "dependency",
        "injection",
        "Spring",
        "annotations",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Microservices",
        "discovery",
        "Netflix",
        "Eureka",
        "Server",
        "S3",
        "buckets",
        "document",
        "management",
        "RDS",
        "database",
        "Experience",
        "databases",
        "Cassandra",
        "Mongo",
        "DB",
        "AMIs",
        "AWS",
        "EC2",
        "instances",
        "image",
        "functionality",
        "snapshot",
        "disaster",
        "recovery",
        "text",
        "search",
        "function",
        "NoSQL",
        "DB",
        "MongoDB",
        "search",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "Rabbit",
        "MQ",
        "queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "Micro",
        "service",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "MQ",
        "AWS",
        "test",
        "services",
        "design",
        "development",
        "UI",
        "component",
        "frameworks",
        "JavaScript",
        "HTML",
        "CSS",
        "Bootstrap",
        "Kafka",
        "publishersubscriber",
        "system",
        "implementation",
        "enterprise",
        "integration",
        "Web",
        "Services",
        "Legacy",
        "Systems",
        "SOAP",
        "REST",
        "security",
        "WS",
        "Security",
        "Experience",
        "Kafka",
        "Camel",
        "Spring",
        "Security",
        "Authentication",
        "authorization",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "GIT",
        "source",
        "control",
        "system",
        "Consumed",
        "REST",
        "micro",
        "services",
        "Rest",
        "Template",
        "APIs",
        "Docker",
        "development",
        "environment",
        "use",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "LINUX",
        "Shell",
        "scripts",
        "jobs",
        "web",
        "services",
        "Spring",
        "Rest",
        "Controller",
        "JSON",
        "frontend",
        "serverside",
        "services",
        "Java",
        "Spring",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "WSDL",
        "JAXB",
        "JAXRPC",
        "SOAP",
        "UI",
        "tool",
        "testing",
        "web",
        "services",
        "connectivity",
        "MAVEN",
        "building",
        "tool",
        "EAR",
        "file",
        "application",
        "servers",
        "Dependency",
        "management",
        "code",
        "application",
        "JIRA",
        "bug",
        "issue",
        "tracking",
        "project",
        "management",
        "test",
        "cases",
        "application",
        "JUnit",
        "GIT",
        "source",
        "control",
        "management",
        "speed",
        "advantage",
        "systems",
        "Log4j",
        "tool",
        "application",
        "Environment",
        "Java",
        "J2EE",
        "Servletfilters",
        "JSP",
        "JSTL",
        "Springboot",
        "Microservices",
        "Spring",
        "Security",
        "Angular",
        "JS",
        "Cassandra",
        "JavaScript",
        "HTML",
        "CSS",
        "Bootstrap",
        "REST",
        "Cloud",
        "Foundry",
        "EC2",
        "S3",
        "Netflix",
        "Eureka",
        "Rabbit",
        "MQ",
        "Kafka",
        "SOAP",
        "NoSQL",
        "Mongo",
        "DB",
        "Elastic",
        "Search",
        "STS",
        "MAVEN",
        "JUnit",
        "Jenkins",
        "Log4j",
        "JIRA",
        "Docker",
        "Git",
        "Sr",
        "Java",
        "Developer",
        "Travel",
        "Click",
        "NY",
        "January",
        "September",
        "Description",
        "TravelCLICK",
        "provider",
        "hospitality",
        "tool",
        "kit",
        "hotels",
        "countries",
        "hospitality",
        "tool",
        "kit",
        "ecommerce",
        "solutions",
        "hotels",
        "reservations",
        "booking",
        "reservation",
        "booking",
        "hotels",
        "market",
        "product",
        "eTRAK",
        "application",
        "Hotel",
        "Brands",
        "performance",
        "sales",
        "channels",
        "inventory",
        "sales",
        "channels",
        "performance",
        "eTRAK",
        "GDS",
        "Voice",
        "Retail",
        "Airline",
        "Merchant",
        "Opaque",
        "Brand",
        "website",
        "Responsibilities",
        "Application",
        "workflow",
        "frontend",
        "application",
        "framework",
        "Java",
        "J2EE",
        "technologies",
        "web",
        "services",
        "Spring",
        "Framework",
        "MVC",
        "pattern",
        "Business",
        "logic",
        "frontend",
        "applications",
        "Multithread",
        "Application",
        "Thread",
        "Pool",
        "Concurrent",
        "Executors",
        "Developed",
        "Business",
        "logic",
        "help",
        "spring",
        "Data",
        "Access",
        "Hibernate",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "authentication",
        "Protocol",
        "Persistence",
        "layer",
        "Hibernate",
        "43x",
        "MySQL",
        "database",
        "Serverside",
        "EJB",
        "components",
        "session",
        "beans",
        "business",
        "logic",
        "RFP",
        "microservice",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "custom",
        "tags",
        "JSF",
        "layer",
        "framework",
        "classes",
        "Managed",
        "Beans",
        "Hibernate",
        "JPA",
        "Hibernate",
        "entity",
        "beans",
        "persistence",
        "layer",
        "CRUD",
        "operations",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EBS",
        "EC2",
        "SNS",
        "RDS",
        "Cloud",
        "Cloud",
        "Trail",
        "EMR",
        "Lambda",
        "Cloud",
        "Formation",
        "Auto",
        "Cloud",
        "Front",
        "S3",
        "Route",
        "UI",
        "developers",
        "portal",
        "business",
        "application",
        "technologies",
        "Java",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Spring",
        "MVC",
        "components",
        "business",
        "layer",
        "Spring",
        "Boot",
        "Microservices",
        "upgrade",
        "Oracle",
        "data",
        "model",
        "Cassandra",
        "data",
        "model",
        "Development",
        "database",
        "interaction",
        "code",
        "JDBC",
        "API",
        "use",
        "SQL",
        "Query",
        "Statements",
        "statement",
        "SAX",
        "DOM",
        "parser",
        "XML",
        "documents",
        "XSLT",
        "API",
        "XML",
        "Object",
        "way",
        "Design",
        "patterns",
        "DAO",
        "Singleton",
        "Factory",
        "Delegate",
        "Front",
        "Controller",
        "Developed",
        "MicroServices",
        "architecture",
        "application",
        "AWS",
        "Cloud",
        "UI",
        "logic",
        "custommade",
        "Custom",
        "tags",
        "JSF",
        "Custom",
        "tags",
        "Expression",
        "Language",
        "compliance",
        "XHTML",
        "standards",
        "team",
        "members",
        "frontend",
        "elements",
        "Maven",
        "dependencies",
        "application",
        "SVN",
        "Subversion",
        "version",
        "control",
        "Environment",
        "Java",
        "JDK",
        "Servlets",
        "JSP",
        "Spring",
        "Struts",
        "HTML5",
        "CSS3",
        "Ajax",
        "JavaScript",
        "jQuery",
        "NodeJS",
        "Cassandra",
        "JDBC",
        "Bootstrap",
        "23x",
        "IntelliJ",
        "Hibernate",
        "JUnit",
        "RESTful",
        "Web",
        "Services",
        "Sr",
        "Java",
        "Developer",
        "Connexions",
        "Loyalty",
        "Group",
        "Richmond",
        "VA",
        "November",
        "December",
        "Description",
        "objective",
        "system",
        "framework",
        "place",
        "organization",
        "business",
        "users",
        "customer",
        "configurations",
        "customer",
        "product",
        "catalog",
        "product",
        "details",
        "development",
        "team",
        "Responsibilities",
        "Scrum",
        "methodology",
        "development",
        "application",
        "requirements",
        "discussions",
        "business",
        "analysts",
        "Hibernate",
        "DAO",
        "classes",
        "mapping",
        "files",
        "persistence",
        "layer",
        "user",
        "interface",
        "JSP",
        "JSP",
        "Tag",
        "libraries",
        "Struts",
        "Tag",
        "complexities",
        "application",
        "tier",
        "EJBs",
        "Stateless",
        "Session",
        "Bean",
        "Java",
        "Servlets",
        "helper",
        "classes",
        "core",
        "java",
        "programming",
        "Collection",
        "classes",
        "Implement",
        "API",
        "Service",
        "Apache",
        "Camel",
        "Developed",
        "microservices",
        "Spring",
        "cloud",
        "Spring",
        "Boot",
        "Design",
        "database",
        "database",
        "management",
        "system",
        "PostgreSQL",
        "user",
        "validations",
        "user",
        "permissions",
        "Nodejs",
        "HQL",
        "SQL",
        "Queries",
        "Oracle",
        "database",
        "custom",
        "framework",
        "Mule",
        "ESB",
        "application",
        "XML",
        "Schema",
        "Java",
        "Bean",
        "classes",
        "Linux",
        "servers",
        "environments",
        "Prod",
        "PreProd",
        "Testing",
        "Customer",
        "integration",
        "test",
        "systems",
        "Prepared",
        "automation",
        "scripts",
        "PostgreSQL",
        "database",
        "architecture",
        "Selenium",
        "WebDriver",
        "flexibility",
        "test",
        "cases",
        "REST",
        "Web",
        "Services",
        "management",
        "data",
        "JAXRS",
        "Used",
        "Tomcat",
        "Application",
        "server",
        "services",
        "Configure",
        "JIRA",
        "communication",
        "JIRA",
        "Confluence",
        "Log4j",
        "debugging",
        "error",
        "information",
        "production",
        "support",
        "Junit",
        "unit",
        "testing",
        "Jenkins",
        "build",
        "process",
        "bug",
        "System",
        "Joint",
        "System",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Hibernate",
        "JMS",
        "HTML5",
        "CSS3",
        "Nodejs",
        "JavaScript",
        "Java",
        "Bean",
        "jQuery",
        "JSP",
        "AJAX",
        "Selenium",
        "Tomcat",
        "PostgreSQL",
        "Spring",
        "cloud",
        "Apache",
        "Camel",
        "JIRA",
        "Jenkins",
        "ESB",
        "Linux",
        "PLSQL",
        "ANT",
        "Log4j",
        "Git",
        "Maven",
        "JUnit",
        "Java",
        "Developer",
        "Selectsys",
        "December",
        "September",
        "Description",
        "Health",
        "Care",
        "information",
        "system",
        "transaction",
        "processing",
        "system",
        "customer",
        "Relationship",
        "Management",
        "system",
        "process",
        "treatment",
        "tracking",
        "treatment",
        "status",
        "health",
        "Appointment",
        "notifications",
        "Billing",
        "letters",
        "client",
        "orders",
        "crew",
        "members",
        "Responsibilities",
        "Analysis",
        "design",
        "development",
        "Application",
        "J2EE",
        "Spring",
        "Hibernate",
        "Hibernate",
        "Object",
        "Relational",
        "mapping",
        "Oracle",
        "database",
        "user",
        "interface",
        "Struts",
        "Web",
        "Services",
        "SOAP",
        "web",
        "services",
        "SVN",
        "configuration",
        "management",
        "tool",
        "code",
        "versioning",
        "release",
        "log4j",
        "unit",
        "testing",
        "frameworks",
        "UI",
        "Screens",
        "JSP",
        "JavaScript",
        "HTML",
        "Angular",
        "validation",
        "classes",
        "Unit",
        "Testing",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "custom",
        "tags",
        "User",
        "Interface",
        "UI",
        "methodology",
        "application",
        "Agile",
        "Methodologies",
        "code",
        "knowledge",
        "development",
        "environment",
        "Experience",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "Scrum",
        "Environment",
        "Java",
        "Spring",
        "MVC",
        "Struts",
        "JSP",
        "JUnit",
        "Eclipse",
        "MS",
        "SQL",
        "server",
        "JDBC",
        "Java",
        "Script",
        "CSS",
        "HTML",
        "Struts",
        "Hibernate",
        "Visual",
        "Source",
        "Safe",
        "VSS",
        "PUTTY",
        "Oracle",
        "9i",
        "Agile",
        "Scrum",
        "Methodology",
        "Associate",
        "Java",
        "Developer",
        "UV",
        "Fortune",
        "IT",
        "Solutions",
        "June",
        "November",
        "Description",
        "project",
        "web",
        "end",
        "system",
        "employees",
        "managers",
        "higherlevel",
        "management",
        "role",
        "permissions",
        "processing",
        "day",
        "day",
        "business",
        "activities",
        "company",
        "management",
        "project",
        "management",
        "resource",
        "management",
        "software",
        "system",
        "installation",
        "monitor",
        "equipment",
        "specifications",
        "project",
        "development",
        "bug",
        "project",
        "students",
        "understanding",
        "concepts",
        "requirement",
        "analysis",
        "client",
        "interaction",
        "hibernate",
        "mapping",
        "XML",
        "Files",
        "HQL",
        "business",
        "analysts",
        "project",
        "managers",
        "project",
        "leaders",
        "business",
        "requirements",
        "J2EE",
        "design",
        "patterns",
        "Factory",
        "Singleton",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirement",
        "gathering",
        "analysis",
        "architecture",
        "design",
        "development",
        "environment",
        "requirements",
        "applications",
        "JSP",
        "JavaScript",
        "jQuery",
        "HTML",
        "collection",
        "classes",
        "Array",
        "List",
        "Hash",
        "Map",
        "Hash",
        "Table",
        "Hash",
        "Set",
        "specifications",
        "unit",
        "system",
        "integration",
        "testing",
        "enhancements",
        "reviews",
        "end",
        "users",
        "database",
        "connection",
        "MYSQL",
        "application",
        "Spring",
        "MVC",
        "Framework",
        "controller",
        "service",
        "classes",
        "Java",
        "standards",
        "application",
        "Environment",
        "Eclipse",
        "MySQL",
        "Server",
        "JSP",
        "JavaScript",
        "jQuery",
        "Java",
        "C",
        "HTML5",
        "CSS3",
        "Skills",
        "J2EE",
        "years",
        "years",
        "JAVASCRIPT",
        "years",
        "JSP",
        "years",
        "HTML",
        "years",
        "Additional",
        "Information",
        "Skills",
        "J2EE",
        "years",
        "years",
        "JAVASCRIPT",
        "years",
        "JSP",
        "years",
        "HTML",
        "years",
        "Technical",
        "Summary",
        "Languages",
        "C",
        "C",
        "SQL",
        "PLSQL",
        "Web",
        "Technologies",
        "HTML",
        "JavaScript",
        "CSS",
        "Angular",
        "JS",
        "Angular",
        "ReactJS",
        "AJAX",
        "XML",
        "XSLT",
        "Java",
        "Beans",
        "JMS",
        "J2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JSF",
        "EJB",
        "JMS",
        "JNDI",
        "Web",
        "Services",
        "JDBC",
        "SOAP",
        "RMI",
        "Methodology",
        "Agile",
        "Scrum",
        "RUP",
        "TDD",
        "SDLC",
        "Java",
        "Script",
        "Technology",
        "Angular",
        "JS",
        "Nodejs",
        "servers",
        "Apache",
        "Tomcat",
        "Weblogic",
        "Apache",
        "camel",
        "WebSphere",
        "JBoss",
        "Grunt",
        "server",
        "Applications",
        "Frameworks",
        "Spring",
        "Spring",
        "Boot",
        "Hibernate",
        "Struts",
        "JSF",
        "Web",
        "services",
        "WSDL",
        "AXIS",
        "JAXWS",
        "REST",
        "JSON",
        "JAXRS",
        "JAXRPC",
        "UDDI",
        "Oracle",
        "MySQL",
        "SQL",
        "Server",
        "DB2",
        "MongoDB",
        "Cassandra",
        "XML",
        "XML",
        "XPATH",
        "XSLT",
        "XML",
        "SPY",
        "JAXB",
        "SAX",
        "DOM",
        "JAXP",
        "Tools",
        "ANT",
        "JUNIT",
        "Log4j",
        "JMETER",
        "TOAD",
        "Maven",
        "Rational",
        "Rose",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "NetBeans",
        "InteliJ",
        "Operating",
        "Systems",
        "Windows",
        "UNIX",
        "LINUX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:41:22.809767",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Farmers Insurance New York NY NY Work Experience Sr Java Developer Farmers Insurance Cleveland OH July 2017 to Present Description The application provides comprehensive information concerning various types of Insurance coverage offered by Farmers Insurance The website functionality was extended by providing the customers to login and performs online transactions like paying bills online and updating their insurance policy The website was redesigned to provide customized information for the end users Responsibilities Involved in all phases of Software Development Life Cycle SDLC including analysis design development and testing of the project Used SpringBoot to create standalone spring applications Used Eclipse Integrated Development Environment for coding debugging and testing the application modules Involved in developing of presentation layer for the application modules using AngularJS2 XHTML HTML5 jQuery AJAX and CSS Designed and developed Microservices business components using SpringBoot Knowledge in creation of Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 2 Implemented SpringBoot services in combination with Angular as front end to form a Microservice Oriented application AngularJS was used to parse the JSON file using the REST Web services Configured Spring based Microservices and Spring Boot Used ObjectRelational mapping tool Hibernate and JPA to achieve object to database table persistency Developed Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Configured SwaggerUI registered Micro service with Eureka server to monitor service health check from Spring Boot admin console Analyze and fix issues related to REST Web services and Application responses Implemented the backend services using SpringBoot Worked on developing REST Services to expose the processed data as a service Experience in working with NoSQL Mongo DB and Apache Cassandra Implemented Spring Security and Spring transactions in the applications Worked on Swagger REST with JSON to test data and Postman for testing the Web Services and Documentation of the Web API Experienced on spring framework applications like Spring Core Spring AOP Spring MVC Spring Batch Spring Security and SpringBoot and did integration to Micro services into existing system architecture Involved in the configuration of Spring Framework and Hibernate mapping tool Configured MQ Queues and Topics to publish messages to topics and consume published messages Worked with Docker to deploy Microservices in modern containers to increase Isolation Experience with Spring Ribbon and Kafka broker service to handle heavy traffic Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework Developed communication between different applications using MQ Series JMS and Spring Integration Configured and monitored numerous Cassandras NoSQL instances Deployment of micro services via AWS Beanstalk and Lambda Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Extensively followed Test Driven Development to implement application business logic work flow process and integration of application modules Followed Pair Programming to analysis design development Integration Testing and deploy the applications Used XML XSD XPath and JAXB for message transformations and mappings Extensively followed agile Scrum methodology and XP to implement the application modules Configured and used Hudson Jenkins tools for continues integration and build and deploy the applications Used Maven for building and deploying the web application into WebSphere and configuring the dependency plugins and resources Wrote JUnit test cases for each line of the application code and performed validation Environment JavaJ2ee JSP SpringBoot Hibernate SOAP REST JAXRS JMS MQ Series SQL PLSQL JAXB XML HTML5 CSS JavaScript jQuery AJAX JSON AngularJS Eclipse JBoss Maven Nexus AWS DB2 Kafka Cassandra Micro Services Autosys UML Agile XP Jenkins GitHub Stash JIRA Junit Log4j SOAPUI Unix shell Scripting Sr Java Developer JetBlue New York NY October 2016 to June 2017 Description JetBlue Airways Corporation stylized as jetBlue is an American lowcost airline headquartered in New York City The application is used by airlines customers and members to book the tickets check travel deals enroll to business programs and find vacation packages Responsibilities Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Implemented Micro Services using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka Server Used S3 buckets to manage document management and RDS to host database Experience with NoSQL databases like Cassandra and Mongo DB Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Optimized the full text search function by connecting to NoSQL DB like MongoDB and Elastic search Implemented MongoDB database concepts such as locking transactions indexes and replication Used Rabbit MQ queues for implementation of multithreaded synchronization processes using JMS queues for consumption requests Used Micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy micro services Involved in design and development of UI component using frameworks AngularJS JavaScript HTML CSS and Bootstrap Experienced in using Kafka as a distributed publishersubscriber messaging system Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST and added security to SOAP through WS Security Experience working in Kafka and Camel Used Spring Security for Authentication and authorization extensively Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Consumed REST based micro services with Rest Template based on RESTful APIs Used Docker for possible to production to the development environment to fast possible for interactive use Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs Created web services using Spring Rest Controller to return JSON to the frontend Developed serverside services using Java Spring Web Services SOAP RESTful WSDL JAXB JAXRPC Used SOAP UI tool for testing web services connectivity Used MAVEN building tool for creating EAR file to be deployed in the application servers it is also used for Dependency management of code in the application Used JIRA for bug tracking issue tracking and project management Involved in writing the test cases for the application using JUnit Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented Log4j tool to log the entire application Environment Java J2EE Servletfilters JSP JSTL Springboot Microservices Spring Security Angular JS Cassandra JavaScript HTML CSS and Bootstrap REST Pivotal Cloud Foundry AWS EC2 S3 Netflix Eureka Rabbit MQ Kafka SOAP RESTful NoSQL Mongo DB Elastic Search STS MAVEN JUnit Jenkins Log4j JIRA Docker Git Sr Java Developer Travel Click NY January 2016 to September 2016 Description TravelCLICK is the leading provider in developing hospitality tool kit for various hotels from various countries This hospitality tool kit contains the ecommerce solutions for the hotels to make reservations in their central booking reservation and to evaluate the each of the booking against all hotels in the market a product is designed called eTRAK application provides Hotel Brands their performance in various sales channels through which their inventory is sold sales channels on which performance is analyzed in eTRAK are GDS Voice Retail Airline Merchant Opaque Brand website Responsibilities Involved in writing Application workflow both for frontend and backend Created multilayered application framework using Java J2EE technologies Developed the RESTful web services by using Spring Framework and MVC pattern for Business logic that is reusable and that can be consumed for frontend applications Developed Multithread Application using with Thread Pool and Concurrent Executors Developed Business logic with the help of spring and Data Access was implemented by using Hibernate Handled the security and Authorization by Spring Security and OAuth authentication Protocol Implemented Persistence layer using Hibernate 43x to interact with the MySQL database Involved in developing Serverside EJB components and wrote session beans to perform the business logic Created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices Designed and prepared custom tags on JSF layer and prepared framework classes for Managed Beans interacting with the Hibernate Used JPA and Hibernate with entity beans for interacting persistence layer for CRUD operations Utilized AWS Cloud platform and its features which include EBS EC2 SNS RDS Cloud Watch Cloud Trail EMR Lambda Cloud Formation Auto scaling Cloud Front S3 and Route 53 Worked with UI developers for building a portal for business application using technologies like Java HTML CSS JavaScript jQuery AngularJS Bootstrap Used Spring MVC components to implement business layer and Spring Boot for Microservices Involved in upgrade of the present Oracle data model to Cassandra data model Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement Used SAX and DOM parser for parsing XML documents and XSLT API to handle XML parsing in Object Oriented way Implemented Design patterns like DAO Singleton Factory Delegate and Front Controller Developed MicroServices based architecture to enable the application to be deployed on AWS Cloud Implemented complex UI logic using custommade Custom tags and existing JSF Custom tags and Expression Language in compliance with XHTML standards Collaborated with technical team members to integrate backend and frontend elements Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Environment Java 17 JDK Servlets JSP Spring 326 Struts 2316 HTML5 CSS3 Ajax JavaScript jQuery AngularJS NodeJS Cassandra JDBC Bootstrap 23x IntelliJ Hibernate 428 JUnit 411 RESTful Web Services Sr Java Developer Connexions Loyalty Group Richmond VA November 2014 to December 2015 Description The objective of system is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Followed Scrum Agile methodology for development of the application Involved in analyzing the requirements and participated in discussions with business analysts Involved in developing Hibernate DAO classes mapping files for persistence layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the middle tier using EJBs Stateless Session Bean Java Servlets Developed various helper classes needed following core java multithreaded programming and Collection classes Implement API Service using Apache Camel Developed cloud native microservices using Spring cloud and Spring Boot Design and develop new database using as relational database management system PostgreSQL Added user validations and user permissions by using the Nodejs Involved in writing HQL and SQL Queries for Oracle database Utilized custom logging framework for Mule ESB application Created and compiled XML Schema to generate Java Bean classes Patching the Linux servers on all the environments Prod PreProd and Testing of Customer Written the integration test to execute full systems using the Groovy Prepared automation scripts and developed PostgreSQL database architecture Used Selenium WebDriver to provide more flexibility in automating test cases Created REST Web Services for the management of data using JAXRS Used Tomcat Application server for live services Configure JIRA to set up a trusted communication between JIRA and Confluence Used Log4j to set up debugging and error information for production support Used Junit for unit testing and Jenkins for automated build and deploy process Involved in bug fixing during the System testing Joint System testing and User acceptance testing Environment Java J2EE Spring Hibernate JMS HTML5 CSS3 Nodejs JavaScript Java Bean jQuery JSP AJAX AngularJS Selenium Tomcat PostgreSQL Spring cloud Apache Camel JIRA Jenkins ESB Linux PLSQL ANT Log4j Git Maven JUnit Java Developer Selectsys December 2012 to September 2014 Description Health Care information system is a transaction processing system based on customer Relationship Management system It is developed to automate the entire process of treatment tracking and based on treatment status It automatically generates health reports Appointment notifications and Billing letters to client and work orders to concerned crew members Responsibilities Analysis design and development of Application based on J2EE using Spring and Hibernate Hibernate was used for Object Relational mapping with Oracle database Involved in developing the user interface using Struts Worked on the Web Services using SOAP and Restful web services Used SVN configuration management tool for code versioning and release log4j was used for unit testing and as logging frameworks Developed the UI Screens using JSP JavaScript HTML and Angular Where we perform the clientside validation Developed the classes for Unit Testing Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Developed custom tags for User Interface UI Experienced in using the agile methodology for developing application and Followed Agile Methodologies to implement code and have strong knowledge with development in Agile environment Experience in different Agile methodologies like Test Driven Development Scrum Environment Java Spring MVC Struts RESTful JSP JUnit Eclipse MS SQL server JDBC Java Script AngularJS CSS HTML Struts Hibernate Visual Source Safe VSS PUTTY Oracle 9i Agile Scrum Methodology Associate Java Developer UV Fortune IT Solutions June 2010 to November 2012 Description The project was designed to implement a web based front end system which can be used by the employees managers and higherlevel management having specific role permissions for effective processing of day to day business activities in the company like leave management project management and resource management etc Responsibilities Coordinated software system installation and monitor equipment functioning to ensure specifications are met Actively involved in project development and bug fixing for the project Worked closely with students helped in the deeper understanding of concepts Involved in requirement analysis and client interaction responsible for writing hibernate mapping XML Files HQL Worked closely with business analysts project managers and project leaders to analyze business requirements Used J2EE design patterns like Factory Singleton Involved in various phases of Software Development Life Cycle SDLC as requirement gathering modeling analysis architecture design and development Worked in a fastpaced environment and meeting all the requirements Created applications involving JSP JavaScript jQuery and HTML Extensively used various collection classes like Array List Hash Map Hash Table and Hash Set Creating technical specifications coding unit and system integration testing for the enhancements and conducted reviews with end users Created new database connection for MYSQL Developed the application using Spring MVC Framework by implementing controller and backend service classes Followed Java coding standards while developing the application Environment Eclipse MySQL Server JSP JavaScript jQuery Java C HTML5 and CSS3 Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Additional Information Skills J2EE 8 years JAVA 8 years JAVASCRIPT 8 years JSP 8 years HTML 5 years Technical Summary Languages JAVA C C SQL and PLSQL Web Technologies HTML JavaScript CSS Angular JS Angular 2 ReactJS AJAX XML XSLT Java Beans JMS J2EE Technologies Servlets JSP JSF EJB JMS JNDI Web Services JDBC SOAP RMI Methodology Agile Scrum RUP TDD OOAD SDLC Java Script Technology Angular JS Nodejs and ReactJS AppWeb servers Apache Tomcat Weblogic Apache camel WebSphere JBoss WAS 5x Grunt server Applications Frameworks Spring Spring Boot Hibernate Struts JSF Web services SOAP WSDL AXIS JAXWS REST JSON JAXRS JAXRPC UDDI Databases Oracle MySQL SQL Server DB2 MongoDB Cassandra XML XML XPATH XSLT XML SPY JAXB SAX DOM JAXP Tools ANT JUNIT Log4j JMETER TOAD Maven Rational Rose IDEs Eclipse My Eclipse NetBeans InteliJ Operating Systems Windows UNIX LINUX",
    "unique_id": "5cd5de2a-9bc3-4a08-9fd9-3d6aad5bea01"
}