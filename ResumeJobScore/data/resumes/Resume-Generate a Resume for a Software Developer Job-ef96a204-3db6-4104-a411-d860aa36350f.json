{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Intuit Inc Mountain View CA Having 7 years of IT involvement in all phases of Software Development Life Cycle SDLC such as Planning Analysis Design Implementation Testing and Maintenance of various ClientServer Applications Web Based applications using JAVAJ2EE technologies Well versed with complete Software Development Life Cycle SDLC using various methodologies like Agile Methodology Scrum XP Waterfall and followed Test Driven Development TDD Developed Webbased enterprise applications using JavaJ2EE Core Java Servlets JDBC Hibernate Web Services SOAP and REST and MVC Framework Struts Spring MVC Expertise in developing UI using JSP HTML5 CSS3 Java Script Bootstrap JQuery Ajax Angular5 Experience with Java 18 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise Hands on experience with different Spring framework modules like Spring Core Spring AOP Spring MVC Spring Batch Spring Security Spring Data and Spring Boot Experience in developing XML based Web Services SOAPWSDL using Top Down and Bottom Up approach and REST based services with JAXRS Jersey and Spring Integration Experience in developing the application with Service Oriented Architecture SOA and Micro Services Architecture Handson experience on various AWS Cloud services like EC2 Route53 EBS Auto Scaling VPC Cloud Formation S3 RDS Amazon Elastic Load Balancing IAM Cloud Watch and other services of the AWS infrastructure like Dynamo DB SQS and EMR focusing on highavailability fault tolerance and autoscaling Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Expert in Core Java with strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Proficient in implementing various Java design patterns like MVC Session Facade Data Access Object DAO Factory Singleton Data Transfer Object and Front Controller Knowledgeable with RDBMS concepts like writing SQL Queries Working experience of Relational DBMS like MySQL Oracle SQL PLSQL SQL Server MS SQL PostgreSQL DB2 and NoSQL DBMS like MongoDB Also has knowledge on Oracle Performance Tuning Expertise in designing POJO classes using Hibernate Annotations using JPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Jira Experience with application servers like Web Logic JBOSS Apache Tomcat and IBM Web Sphere Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Good Skills in using Dojo Components and integrating backend applications with AJAX driven web 20 frontend using OO JavaScript Framework Experienced in using Eureka Servers while deploying in EC2 Hands on experience with Netflix cloud and fallback technologies like Eureka and Hystrix Experience DOJO DOM manipulation Event Handlers Events Strong experience in database design using PLSQL to write tables Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries to retrieve data Unit testing with mocha chai Expertise in using various IDE tools like Spring Tool Suite VSC Eclipse and IntelliJ Proficient in Continuous Integration and Continuous Deployment tools like Jenkins Experience with Selenium JUnit and Mockito in developing test cases and Log4J in determining application functionality Experience working with version control tools like Git Hub Subversion SVN and CVS Good experience with JIRA in issue tracking Experience with build automation tools like Gradle ANT and Maven for builds and deployments to different environments Work Experience Java Full Stack Developer Intuit Inc Mountain View CA October 2018 to Present Intuit Inc is a business and Financial Software company that develops and sells financial accounting and tax preparation software and related services for small businesses accountants and individuals The company is headquartered in Mountain View California More than 95 of its revenues and earnings come from its activities within the United States Intuit produces TurboTax a consumer tax preparation application the small business accounting program QuickBooks professional tax solutions ProConnect Tax Online ProSeries and multiple payroll products Responsibilities Involved in analysis design and implementation and testing phases of SDLC through Agile Methodology Good working experience in web Designs which includes HTML5 XHTML CSS3 JavaScript jQuery XML Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed backend web services using Node JS and stored dependencies using NPM Developed UI components using Angular 2 dependency Injection Models data binding and controllers Strong Experience with core java technologies like MultiThreading Synchronization Exception Handling Java8 Stream API for Bulk Data Operations on Collections using both streams and parallel streams Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to springSpring Quartz for scheduling tasks to generate reports and emails to clients Developed Spring RestfulMicro services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed Micro services with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each micro service in a cluster can be load balanced and exposed through one API gateway Developed the Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Security Spring Integration Spring IOC Spring AOP Written highly referenced blog posts on Error Handling in Scala and Problems Scala Fixes Secured APIs by implementing OAuth 20 token based authenticationauthorization using Spring Security Deployed Docker contained Spring Boot Micro services in to AWS EC2 container service using AWS admin console and used Lambda EC2 Elastic Beanstalk Cloud Watch Cloud Formation IAM S3 RDS ElastiCache SNS Amazon messaging services SQS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Python based GUI components for the frontend functionality such as selection criteria Implemented the associated business modules integration using spring and Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 12cdatabase Extensively worked on Entity beans in the persistence layer interaction with Oracle DB Used Drools to handle complex business rules using Rule Sets and Rule Flows Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Implemented swagger in project for api design build document and consume RESTful Web services Implemented Microservices for distributing different responsibilities of the system into different services for enhancing cohesion and for reduce couplingLoad balancing among servers implemented by using SpringRibbon Developed several REST web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Developed the Application using design patternsSingleton Factory DAO DTO prototype andComposite View Used spring and Hibernate for implementing IOC AOP and ORM for back end tiers Built data pipeline using Pig and JavaScala Map Reduce to store onto HDFS Created and maintained documentation for launching HADOOP Clusters and executing Hive queriesPig Scripts Worked on creation of custom Docker container images tagging pushing images integration ofSpring boot Created the Docker containers and Docker consoles for managing the application life cycle Used Apache Maven as the software build tool and Log4J for logging errors and messages Created automation test scripts using Selenium WebDriver for multiple platforms and browsers testing Used Jenkins and pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Manage the configurations of multiple servers using Ansible Provisioned load balancer autoscaling group and launch configuration for mircoserviceusing Ansible Used Jenkins as a build tool for CICD Continuous Integration and continuous deployment process Used Drools Engine for writing Business Validation rules Using GIT for Source Control and Version Management Environment JAVA 8 Spring MVC Spring Boot Angular2 HTML5 CSS3 JQuery JSON Boo Hibernate Mongo DB Oracle 12c Hadoop Intellij IDEA JUNIT 44 RESTful web services Scala AWS DroolsDocker Spring Cloud Spring Security OAuth 20 Apache Kafka Selenium Jenkins JavaJ2EE Developer Netsmart Kansas City MO August 2016 to August 2018 Netsmart is healthcares largest human services and integrated care technology providerNetsmart serves more than 500000 users in more than 24000 organizations across all 50 states We were responsibleforwriting code to meet user interface specifications and also responsible for Designing developing deploying and supporting applications to meet user needs Responsibilities Analyzing the requirement document and preparing queries for clarification from client Involved in business requirement gathering and technical specifications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using Agile methodology Created a Frontend application using JSPs JSF Swing GWT and Spring MVC for registering and configured it to connect to database using Hibernate Implemented J2EE standards MVC architecture using Spring Framework Involved in developing application using SPRING framework like Spring ORM and Spring IOC Used object relational mapping using Spring with Hibernate Design and implementation of public facing websites on Amazon Web Services AWS Created Entity using JPA and Spring Data JPA for execute queries to the databases Effective use of Hibernate ORM tool in the business layer to create DAOs Worked with SQL Server enterprise database systems Created Stored procedures using PLSQL for data modification Using DML insert update delete in Oracle Implemented Servlets JSP and Ajax to design the user interface Developed Interactive web pages using AJAX JavaScript jQuery Interaction with Oracle database is implemented using Hibernate Developed custom Angular JS directives to build custom reusable components to use across the application pages Used EJBs Stateless Session beans to implement the business logic MDBs JMS for asynchronous communication internal and external to the system Wrote Web Services using SOAP for sending and getting data from the external interface Automation of Web Services Testing using SOAP UI 500 Created AngularJS controllers directives models for different modules in the frontend Involved in implementing the JMS Java messaging service for asynchronous communication Involved in using JMS Queues and JMS Topics for onetoone and onetomany communication in the application Backend application layer is implemented using EJB Enterprise Java Bean in WebLogic Application Server environment Deployment of application in Tomcat server Hands on experience in resolving issues in the production server Involved in procedures and functions modifications Configuration of manager role using Jenkins tool Involved in DB Design Environment J2EE Web Services Springs Hibernate XML XSD AngularJS AWS Oracle 10g Tomcat HTML CSS JSON jQuery AJAX JMS SOA Servlets JSP JAXWS Unix JavaJ2EE Developer Northwestern Mutual Life Insurance Milwaukee WI October 2015 to July 2016 Northwestern Mutual Life Insurance is a leading global provider of insurance annuities and employee benefit programs Through its subsidiaries and affiliates Northwestern mutual life insurance holds leading market SSUI CERT SYSTEM offer a full range of insurance and other financial product service details Responsibilities Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript JQuery and Angular JS Created distributed Oracle coherence domains configuration and system design based on oracle coherence Experience in building end to end web applications using MEAN stack with Angular1X 2 Developed userfriendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap Developed HTML5 Mobile application with Java Jenkins RBDMS Java Script JSON and RESTful web service Used Angular JS to create maintainable and testable single page application and Implemented twoway data binding and used ngfilters across the applications Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Developed the service layer a layer that acts a bridge between the presentation layer and data access layer with Spring Framework features like Spring JDBC and Spring ORM Used Apache camel integration for routing and transforming the data between two Applications using HTTP protocol Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Migrated legacy databases by using ETL tools Developed custom PLSQL packages for gaps found in the ETL tools Developed web service API methods using PLSQL SQLXML Involved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services Developed applications using Application Lifecycle Management to deliver reliable applications Developed persistence Layer using Hibernate to persist the data and to manage the data Worked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data insert and update the data from the database Developed Hibernate configuration files and queries and Implemented DAO classes Web Services were called using SOAP protocol WSDL descriptor file Created Stored Procedures functions views indexes and constraints triggers required SQL tuning to reduce the response time in the application Developed the JSON structure for the data transfer Configured development environment using WebSphere application server for developers integration testing Developed test cases for Unit testing using JUnit Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Used Spring Tool Suite STS for application development Environment Java J2EE HTML CSS JQuery AngularJS Spring IOC Spring MVC Spring AOP Spring Security Hibernate REST SOAP JAXRS JAXWS WSDL Pivotal Cloud Foundry PCF Oracle JUnit Maven Jenkins JIRA WebSphere Application Server and STS IDE Java Developer Target Minneapolis MN August 2014 to October 2015 This is an application developed with multiple web services used for tracking the status of a purchase order by accessing three different databases Order will be collectedplaced through another webbased application The OMS assign the order to the department Once order is placed in the webbased application from that moment user will be able to track the status using a track tool application In each step of the process different departments involved are using different tools and different database This track tool is designed and developed in such a way that it has robustness and flexibility to access all different DB used for tracking the status Responsibilities Involved in various stages of Software Development Life Cycle SDLC deliverables of the project using the Agile methodology Developed International Error Correction Screens using custom frontend forms using HTML CSS JavaScript JQuery and AJAX Gathered and clarified requirements with business analyst to feed into highlevel customization design development and installation phases Used Spring Framework for dependency injection for Action classes using Application Context XML file Involved in implementation of MVC pattern using JSP and Spring Controller Developed business objects using Spring IOC Spring MVC and Spring AOP Implemented MVC architecture using JSP Spring Hibernate and used Spring Framework to initialize managed beans and services Implemented SOA architecture with Web Services using SOAP JAXWS WSDL and XML Used Struts Framework Tag Libraries to implement J2EE design patterns MVC Developed user interface using JSP Struts published validation framework to support client side and Serverside validation Used Collections for Model classes in the DAO layer Data Access Object Involved in modifying some changes in DAO layer using Hibernate Created mappings among the relations and written SQL queries using Hibernate Implemented Concurrency Exception Handling and Collections whenever necessary Used Entity Beans to persist the data into IBM DB2 database like database access components Creating Schemas and Tables Used SQL to perform data mapping and backend testing also documented all the SQL queries for future testing purpose Created process flow for deploying application in Web Sphere application server Managed build reporting and documentation from the project information using Maven Tool and SVN for version control Used Jenkins for Continuous Integration Used JUnit for testing and used JIRA for tracking bugs Responsible for the dealing with the problem bug fixing and troubleshooting Environment Java J2EE HTML CSS JavaScript JQuery Ajax Spring Spring IOC Spring AOP Spring MVC Hibernate REST SOAP XML XSLT Eclipse PLSQL JUnit Maven Build Tool IBM DB2 JIRA Jenkins SVN and IBM Web Sphere Java Developer Global Logic Technologies May 2012 to June 2014 CCS is a pioneer project of Discover to transform all the processes involved in CALL CENTER services into webbased application to enable and enhance customer service representatives productivity and efficiency to help in achieving high level of competitive advantage in the market Responsibilities Involved in Documentation and Use case design using UML modeling include development of Class diagrams Sequence diagrams and Use Case Transaction diagrams Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Created userfriendly interface using HTML CSS JSP and JavaScript for clientside validation Designed the user interfaces using JSPs developed custom tags and used JSTL Implemented Multithreading and Collections in java code Used AJAX for dynamically updating the content Used Eclipse as IDE tool for creating Servlet JSP and XML Developed various java business classes for handling different functions Implemented Business processes such as user authentication Transfer of Service using Session EJBs The application was deployed on the JBoss Involved in build and deploying the application using ANT Wrote SQL for JDBC prepared statements to retrieve the data from database Developed PLSQL queries Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries Developed JUnit test cases for all the developed modules Used SVN as version control Monitored the logs using Log4j and fixed the problem Environment Java J2EE JSP Struts JNDI DB2 HTML CSS EJB XML DOM ANT AJAX JUnit Eclipse JBoss MYSQL LOG4J SVN Trainee Software Engineer Info Edge Solutions August 2011 to May 2012 The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Used Java Message Service JMS for reliable and asynchronous exchange of important information such as loan status report between the clients and the bank De cewsigned and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Environment J2EE Java Servlets JSP Struts MVC Framework Apache Tomcat Oracle JMS SQL HTML JDBC EJB Education Bachelors Skills architecture 7 years database 7 years Java 7 years Model View Controller 7 years MODELVIEWCONTROLLER 7 years",
    "entities": [
        "Spring Framework",
        "AJAX",
        "Used Java Message Service JMS",
        "Maven Tool",
        "GUI",
        "CVS Good",
        "ORM",
        "Angular1X 2 Developed",
        "Spring Data Used Hibernate",
        "Dojo Components",
        "the JBoss Involved",
        "java business",
        "Worked on Hibernate",
        "Kubernetes Created Pods",
        "Discover",
        "Responsibilities Involved in Documentation",
        "AMI",
        "IBM",
        "Application Context XML",
        "Ajax",
        "Rule Sets and Rule Flows Spring Boot Microservices",
        "XML",
        "SOAP",
        "OAuth",
        "Developed Spring RestfulMicro services",
        "JSP Struts",
        "JUnit",
        "Mountain View",
        "MVC Session Facade Data Access Object DAO Factory",
        "Implemented Objectrelation",
        "JavaJ2EE",
        "JIRA Jenkins SVN",
        "JAVAJ2EE",
        "Transfer of Service",
        "MultiThreading Synchronization Exception Handling",
        "WebSphere",
        "SQL Server",
        "Developed the Application",
        "HTML CSS JSP",
        "Wrote Web Services",
        "Developed",
        "DAO",
        "Oracle Relational",
        "JPA",
        "Jenkins",
        "Struts Framework Tag Libraries",
        "OO JavaScript Framework Experienced",
        "AWS S3",
        "Oracle DB Used Drools",
        "Data Access Object Involved",
        "Mockito",
        "Use Case Transaction",
        "Amazon Web Services AWS Created Entity",
        "Responsibilities Involved",
        "UML",
        "MVC Spring AOP Spring Security Hibernate",
        "OMS",
        "GITHUB Jenkins Jira",
        "the United States Intuit",
        "Present Intuit Inc",
        "Developed Hibernate",
        "Created Stored Procedures",
        "AWS Cloud",
        "Monitored",
        "HTML5",
        "Data Access Object DAO",
        "Lambda Expressions",
        "SOA",
        "Spring Security",
        "ANT Wrote",
        "Micro Services Architecture Handson",
        "JSP",
        "Selenium Jenkins JavaJ2EE Developer",
        "Hibernate Developed",
        "the Software Development Life Cycle",
        "Minneapolis",
        "CCS",
        "Software Development Lifecycle",
        "Built",
        "SDLC",
        "Hibernate Annotations",
        "Test Driven Development TDD Developed",
        "Implemented Microservices",
        "HTML CSS JavaScript JQuery",
        "Angular JS",
        "SQS Utilized AWS Lambda",
        "MVC",
        "Hibernate Implemented J2EE",
        "Interface",
        "STS",
        "Bootstrap Developed HTML5 Mobile",
        "Agile",
        "EJB",
        "Node JS",
        "CICD Continuous Integration",
        "Netsmart",
        "HTML CSS",
        "SQL Queries Working",
        "API",
        "Spring Data JPA",
        "Web Services",
        "Northwestern Mutual Life Insurance",
        "POJO",
        "Spring JDBC",
        "Created",
        "AWS",
        "TurboTax",
        "Scala",
        "Developed Interactive",
        "Developed International Error Correction",
        "Oracle",
        "Developed Micro",
        "Created the Docker",
        "Injection Models",
        "InspectionReview",
        "MVC Framework",
        "Planning Analysis Design Implementation Testing and Maintenance",
        "Netflix",
        "ProConnect Tax Online ProSeries",
        "SQL",
        "Spring Integration",
        "Bulk Data Operations on Collections",
        "GitHub",
        "Lambda Expressions Annotations Designed",
        "DML",
        "MVC Developed",
        "MVC Hibernate REST SOAP XML",
        "QuickBooks",
        "Micro Service Architecture",
        "HADOOP Clusters",
        "Problems Scala Fixes Secured",
        "XML Developed",
        "CALL CENTER",
        "HDFS Created",
        "SQL Query Statements",
        "Spring Eureka",
        "SPRING",
        "Oracle Implemented Servlets JSP",
        "Serverside",
        "Business Validation",
        "Responsibilities Technical",
        "JSF Swing GWT",
        "Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Proficient",
        "SQS",
        "ETL",
        "Financial Software",
        "Maven",
        "Hystrix",
        "Order",
        "Web Logic JBOSS Apache Tomcat",
        "Hibernate",
        "AJAX JavaScript jQuery Interaction",
        "JavaScript",
        "AJAX Gathered",
        "UI",
        "Spring AOP Implemented",
        "Continuous Integration",
        "JSP Spring Hibernate",
        "Selenium WebDriver",
        "Kubernetes Manage",
        "SVN",
        "Responsibilities Analyzing",
        "Source Control",
        "Hibernate Implemented Concurrency Exception Handling",
        "Tomcat",
        "REST",
        "Hibernate Created",
        "Application Lifecycle Management",
        "Created Stored",
        "java technologies",
        "Version Management",
        "Software Development Life Cycle",
        "WebLogic Application Server",
        "Developed Mongo DB Data Access Layer",
        "Spring Boot Micro",
        "Automation of Web Services Testing"
    ],
    "experience": "Experience with Java 18 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise Hands on experience with different Spring framework modules like Spring Core Spring AOP Spring MVC Spring Batch Spring Security Spring Data and Spring Boot Experience in developing XML based Web Services SOAPWSDL using Top Down and Bottom Up approach and REST based services with JAXRS Jersey and Spring Integration Experience in developing the application with Service Oriented Architecture SOA and Micro Services Architecture Handson experience on various AWS Cloud services like EC2 Route53 EBS Auto Scaling VPC Cloud Formation S3 RDS Amazon Elastic Load Balancing IAM Cloud Watch and other services of the AWS infrastructure like Dynamo DB SQS and EMR focusing on highavailability fault tolerance and autoscaling Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Expert in Core Java with strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Proficient in implementing various Java design patterns like MVC Session Facade Data Access Object DAO Factory Singleton Data Transfer Object and Front Controller Knowledgeable with RDBMS concepts like writing SQL Queries Working experience of Relational DBMS like MySQL Oracle SQL PLSQL SQL Server MS SQL PostgreSQL DB2 and NoSQL DBMS like MongoDB Also has knowledge on Oracle Performance Tuning Expertise in designing POJO classes using Hibernate Annotations using JPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Jira Experience with application servers like Web Logic JBOSS Apache Tomcat and IBM Web Sphere Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Good Skills in using Dojo Components and integrating backend applications with AJAX driven web 20 frontend using OO JavaScript Framework Experienced in using Eureka Servers while deploying in EC2 Hands on experience with Netflix cloud and fallback technologies like Eureka and Hystrix Experience DOJO DOM manipulation Event Handlers Events Strong experience in database design using PLSQL to write tables Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries to retrieve data Unit testing with mocha chai Expertise in using various IDE tools like Spring Tool Suite VSC Eclipse and IntelliJ Proficient in Continuous Integration and Continuous Deployment tools like Jenkins Experience with Selenium JUnit and Mockito in developing test cases and Log4J in determining application functionality Experience working with version control tools like Git Hub Subversion SVN and CVS Good experience with JIRA in issue tracking Experience with build automation tools like Gradle ANT and Maven for builds and deployments to different environments Work Experience Java Full Stack Developer Intuit Inc Mountain View CA October 2018 to Present Intuit Inc is a business and Financial Software company that develops and sells financial accounting and tax preparation software and related services for small businesses accountants and individuals The company is headquartered in Mountain View California More than 95 of its revenues and earnings come from its activities within the United States Intuit produces TurboTax a consumer tax preparation application the small business accounting program QuickBooks professional tax solutions ProConnect Tax Online ProSeries and multiple payroll products Responsibilities Involved in analysis design and implementation and testing phases of SDLC through Agile Methodology Good working experience in web Designs which includes HTML5 XHTML CSS3 JavaScript jQuery XML Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed backend web services using Node JS and stored dependencies using NPM Developed UI components using Angular 2 dependency Injection Models data binding and controllers Strong Experience with core java technologies like MultiThreading Synchronization Exception Handling Java8 Stream API for Bulk Data Operations on Collections using both streams and parallel streams Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to springSpring Quartz for scheduling tasks to generate reports and emails to clients Developed Spring RestfulMicro services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed Micro services with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each micro service in a cluster can be load balanced and exposed through one API gateway Developed the Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Security Spring Integration Spring IOC Spring AOP Written highly referenced blog posts on Error Handling in Scala and Problems Scala Fixes Secured APIs by implementing OAuth 20 token based authenticationauthorization using Spring Security Deployed Docker contained Spring Boot Micro services in to AWS EC2 container service using AWS admin console and used Lambda EC2 Elastic Beanstalk Cloud Watch Cloud Formation IAM S3 RDS ElastiCache SNS Amazon messaging services SQS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Python based GUI components for the frontend functionality such as selection criteria Implemented the associated business modules integration using spring and Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 12cdatabase Extensively worked on Entity beans in the persistence layer interaction with Oracle DB Used Drools to handle complex business rules using Rule Sets and Rule Flows Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Implemented swagger in project for api design build document and consume RESTful Web services Implemented Microservices for distributing different responsibilities of the system into different services for enhancing cohesion and for reduce couplingLoad balancing among servers implemented by using SpringRibbon Developed several REST web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Developed the Application using design patternsSingleton Factory DAO DTO prototype andComposite View Used spring and Hibernate for implementing IOC AOP and ORM for back end tiers Built data pipeline using Pig and JavaScala Map Reduce to store onto HDFS Created and maintained documentation for launching HADOOP Clusters and executing Hive queriesPig Scripts Worked on creation of custom Docker container images tagging pushing images integration ofSpring boot Created the Docker containers and Docker consoles for managing the application life cycle Used Apache Maven as the software build tool and Log4J for logging errors and messages Created automation test scripts using Selenium WebDriver for multiple platforms and browsers testing Used Jenkins and pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Manage the configurations of multiple servers using Ansible Provisioned load balancer autoscaling group and launch configuration for mircoserviceusing Ansible Used Jenkins as a build tool for CICD Continuous Integration and continuous deployment process Used Drools Engine for writing Business Validation rules Using GIT for Source Control and Version Management Environment JAVA 8 Spring MVC Spring Boot Angular2 HTML5 CSS3 JQuery JSON Boo Hibernate Mongo DB Oracle 12c Hadoop Intellij IDEA JUNIT 44 RESTful web services Scala AWS DroolsDocker Spring Cloud Spring Security OAuth 20 Apache Kafka Selenium Jenkins JavaJ2EE Developer Netsmart Kansas City MO August 2016 to August 2018 Netsmart is healthcares largest human services and integrated care technology providerNetsmart serves more than 500000 users in more than 24000 organizations across all 50 states We were responsibleforwriting code to meet user interface specifications and also responsible for Designing developing deploying and supporting applications to meet user needs Responsibilities Analyzing the requirement document and preparing queries for clarification from client Involved in business requirement gathering and technical specifications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using Agile methodology Created a Frontend application using JSPs JSF Swing GWT and Spring MVC for registering and configured it to connect to database using Hibernate Implemented J2EE standards MVC architecture using Spring Framework Involved in developing application using SPRING framework like Spring ORM and Spring IOC Used object relational mapping using Spring with Hibernate Design and implementation of public facing websites on Amazon Web Services AWS Created Entity using JPA and Spring Data JPA for execute queries to the databases Effective use of Hibernate ORM tool in the business layer to create DAOs Worked with SQL Server enterprise database systems Created Stored procedures using PLSQL for data modification Using DML insert update delete in Oracle Implemented Servlets JSP and Ajax to design the user interface Developed Interactive web pages using AJAX JavaScript jQuery Interaction with Oracle database is implemented using Hibernate Developed custom Angular JS directives to build custom reusable components to use across the application pages Used EJBs Stateless Session beans to implement the business logic MDBs JMS for asynchronous communication internal and external to the system Wrote Web Services using SOAP for sending and getting data from the external interface Automation of Web Services Testing using SOAP UI 500 Created AngularJS controllers directives models for different modules in the frontend Involved in implementing the JMS Java messaging service for asynchronous communication Involved in using JMS Queues and JMS Topics for onetoone and onetomany communication in the application Backend application layer is implemented using EJB Enterprise Java Bean in WebLogic Application Server environment Deployment of application in Tomcat server Hands on experience in resolving issues in the production server Involved in procedures and functions modifications Configuration of manager role using Jenkins tool Involved in DB Design Environment J2EE Web Services Springs Hibernate XML XSD AngularJS AWS Oracle 10 g Tomcat HTML CSS JSON jQuery AJAX JMS SOA Servlets JSP JAXWS Unix JavaJ2EE Developer Northwestern Mutual Life Insurance Milwaukee WI October 2015 to July 2016 Northwestern Mutual Life Insurance is a leading global provider of insurance annuities and employee benefit programs Through its subsidiaries and affiliates Northwestern mutual life insurance holds leading market SSUI CERT SYSTEM offer a full range of insurance and other financial product service details Responsibilities Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript JQuery and Angular JS Created distributed Oracle coherence domains configuration and system design based on oracle coherence Experience in building end to end web applications using MEAN stack with Angular1X 2 Developed userfriendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap Developed HTML5 Mobile application with Java Jenkins RBDMS Java Script JSON and RESTful web service Used Angular JS to create maintainable and testable single page application and Implemented twoway data binding and used ngfilters across the applications Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Developed the service layer a layer that acts a bridge between the presentation layer and data access layer with Spring Framework features like Spring JDBC and Spring ORM Used Apache camel integration for routing and transforming the data between two Applications using HTTP protocol Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Migrated legacy databases by using ETL tools Developed custom PLSQL packages for gaps found in the ETL tools Developed web service API methods using PLSQL SQLXML Involved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services Developed applications using Application Lifecycle Management to deliver reliable applications Developed persistence Layer using Hibernate to persist the data and to manage the data Worked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data insert and update the data from the database Developed Hibernate configuration files and queries and Implemented DAO classes Web Services were called using SOAP protocol WSDL descriptor file Created Stored Procedures functions views indexes and constraints triggers required SQL tuning to reduce the response time in the application Developed the JSON structure for the data transfer Configured development environment using WebSphere application server for developers integration testing Developed test cases for Unit testing using JUnit Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Used Spring Tool Suite STS for application development Environment Java J2EE HTML CSS JQuery AngularJS Spring IOC Spring MVC Spring AOP Spring Security Hibernate REST SOAP JAXRS JAXWS WSDL Pivotal Cloud Foundry PCF Oracle JUnit Maven Jenkins JIRA WebSphere Application Server and STS IDE Java Developer Target Minneapolis MN August 2014 to October 2015 This is an application developed with multiple web services used for tracking the status of a purchase order by accessing three different databases Order will be collectedplaced through another webbased application The OMS assign the order to the department Once order is placed in the webbased application from that moment user will be able to track the status using a track tool application In each step of the process different departments involved are using different tools and different database This track tool is designed and developed in such a way that it has robustness and flexibility to access all different DB used for tracking the status Responsibilities Involved in various stages of Software Development Life Cycle SDLC deliverables of the project using the Agile methodology Developed International Error Correction Screens using custom frontend forms using HTML CSS JavaScript JQuery and AJAX Gathered and clarified requirements with business analyst to feed into highlevel customization design development and installation phases Used Spring Framework for dependency injection for Action classes using Application Context XML file Involved in implementation of MVC pattern using JSP and Spring Controller Developed business objects using Spring IOC Spring MVC and Spring AOP Implemented MVC architecture using JSP Spring Hibernate and used Spring Framework to initialize managed beans and services Implemented SOA architecture with Web Services using SOAP JAXWS WSDL and XML Used Struts Framework Tag Libraries to implement J2EE design patterns MVC Developed user interface using JSP Struts published validation framework to support client side and Serverside validation Used Collections for Model classes in the DAO layer Data Access Object Involved in modifying some changes in DAO layer using Hibernate Created mappings among the relations and written SQL queries using Hibernate Implemented Concurrency Exception Handling and Collections whenever necessary Used Entity Beans to persist the data into IBM DB2 database like database access components Creating Schemas and Tables Used SQL to perform data mapping and backend testing also documented all the SQL queries for future testing purpose Created process flow for deploying application in Web Sphere application server Managed build reporting and documentation from the project information using Maven Tool and SVN for version control Used Jenkins for Continuous Integration Used JUnit for testing and used JIRA for tracking bugs Responsible for the dealing with the problem bug fixing and troubleshooting Environment Java J2EE HTML CSS JavaScript JQuery Ajax Spring Spring IOC Spring AOP Spring MVC Hibernate REST SOAP XML XSLT Eclipse PLSQL JUnit Maven Build Tool IBM DB2 JIRA Jenkins SVN and IBM Web Sphere Java Developer Global Logic Technologies May 2012 to June 2014 CCS is a pioneer project of Discover to transform all the processes involved in CALL CENTER services into webbased application to enable and enhance customer service representatives productivity and efficiency to help in achieving high level of competitive advantage in the market Responsibilities Involved in Documentation and Use case design using UML modeling include development of Class diagrams Sequence diagrams and Use Case Transaction diagrams Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Created userfriendly interface using HTML CSS JSP and JavaScript for clientside validation Designed the user interfaces using JSPs developed custom tags and used JSTL Implemented Multithreading and Collections in java code Used AJAX for dynamically updating the content Used Eclipse as IDE tool for creating Servlet JSP and XML Developed various java business classes for handling different functions Implemented Business processes such as user authentication Transfer of Service using Session EJBs The application was deployed on the JBoss Involved in build and deploying the application using ANT Wrote SQL for JDBC prepared statements to retrieve the data from database Developed PLSQL queries Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries Developed JUnit test cases for all the developed modules Used SVN as version control Monitored the logs using Log4j and fixed the problem Environment Java J2EE JSP Struts JNDI DB2 HTML CSS EJB XML DOM ANT AJAX JUnit Eclipse JBoss MYSQL LOG4J SVN Trainee Software Engineer Info Edge Solutions August 2011 to May 2012 The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Used Java Message Service JMS for reliable and asynchronous exchange of important information such as loan status report between the clients and the bank De cewsigned and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Environment J2EE Java Servlets JSP Struts MVC Framework Apache Tomcat Oracle JMS SQL HTML JDBC EJB Education Bachelors Skills architecture 7 years database 7 years Java 7 years Model View Controller 7 years MODELVIEWCONTROLLER 7 years",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Intuit",
        "Inc",
        "Mountain",
        "View",
        "CA",
        "years",
        "IT",
        "involvement",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Planning",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "ClientServer",
        "Applications",
        "Web",
        "applications",
        "JAVAJ2EE",
        "technologies",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodologies",
        "Agile",
        "Methodology",
        "Scrum",
        "XP",
        "Waterfall",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "enterprise",
        "applications",
        "JavaJ2EE",
        "Core",
        "Java",
        "Servlets",
        "JDBC",
        "Hibernate",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "MVC",
        "Framework",
        "Struts",
        "Spring",
        "MVC",
        "Expertise",
        "UI",
        "JSP",
        "HTML5",
        "CSS3",
        "Java",
        "Script",
        "Bootstrap",
        "JQuery",
        "Ajax",
        "Angular5",
        "Experience",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "inline",
        "function",
        "calls",
        "Interfaces",
        "code",
        "Hands",
        "experience",
        "Spring",
        "framework",
        "modules",
        "Spring",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "Spring",
        "Boot",
        "Experience",
        "XML",
        "Web",
        "Services",
        "SOAPWSDL",
        "Top",
        "Down",
        "Bottom",
        "approach",
        "REST",
        "services",
        "JAXRS",
        "Jersey",
        "Spring",
        "Integration",
        "Experience",
        "application",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Micro",
        "Services",
        "Architecture",
        "Handson",
        "experience",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "Route53",
        "EBS",
        "Auto",
        "Scaling",
        "VPC",
        "Cloud",
        "Formation",
        "S3",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Balancing",
        "IAM",
        "Cloud",
        "Watch",
        "services",
        "AWS",
        "infrastructure",
        "Dynamo",
        "DB",
        "SQS",
        "EMR",
        "highavailability",
        "fault",
        "tolerance",
        "Worked",
        "Java",
        "Streams",
        "API",
        "Streams",
        "API",
        "processing",
        "collections",
        "environment",
        "Expert",
        "Core",
        "Java",
        "understanding",
        "Garbage",
        "Collector",
        "Collections",
        "Multithreading",
        "Event",
        "Handling",
        "Exception",
        "Handling",
        "Generics",
        "Proficient",
        "Java",
        "design",
        "patterns",
        "MVC",
        "Session",
        "Facade",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Factory",
        "Singleton",
        "Data",
        "Transfer",
        "Object",
        "Front",
        "Controller",
        "Knowledgeable",
        "concepts",
        "SQL",
        "Queries",
        "Working",
        "experience",
        "Relational",
        "DBMS",
        "MySQL",
        "Oracle",
        "SQL",
        "PLSQL",
        "SQL",
        "Server",
        "MS",
        "SQL",
        "PostgreSQL",
        "DB2",
        "NoSQL",
        "DBMS",
        "MongoDB",
        "knowledge",
        "Oracle",
        "Performance",
        "Tuning",
        "Expertise",
        "POJO",
        "classes",
        "Hibernate",
        "Annotations",
        "JPA",
        "API",
        "Experience",
        "integration",
        "tools",
        "GITHUB",
        "Jenkins",
        "Jira",
        "Experience",
        "application",
        "servers",
        "Web",
        "Logic",
        "JBOSS",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "Sphere",
        "JMS",
        "information",
        "way",
        "enterprise",
        "Applications",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "war",
        "AMI",
        "jobs",
        "Jenkins",
        "master",
        "instance",
        "time",
        "deployment",
        "micro",
        "services",
        "Good",
        "Skills",
        "Dojo",
        "Components",
        "applications",
        "AJAX",
        "web",
        "frontend",
        "OO",
        "JavaScript",
        "Framework",
        "Eureka",
        "Servers",
        "EC2",
        "Hands",
        "experience",
        "Netflix",
        "cloud",
        "technologies",
        "Eureka",
        "Hystrix",
        "Experience",
        "DOJO",
        "DOM",
        "manipulation",
        "Event",
        "Handlers",
        "Events",
        "experience",
        "database",
        "design",
        "PLSQL",
        "tables",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Indexers",
        "proficiency",
        "queries",
        "data",
        "Unit",
        "testing",
        "mocha",
        "chai",
        "Expertise",
        "IDE",
        "tools",
        "Spring",
        "Tool",
        "Suite",
        "VSC",
        "Eclipse",
        "IntelliJ",
        "Proficient",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "tools",
        "Jenkins",
        "Experience",
        "Selenium",
        "JUnit",
        "Mockito",
        "test",
        "cases",
        "application",
        "functionality",
        "Experience",
        "version",
        "control",
        "tools",
        "Git",
        "Hub",
        "Subversion",
        "SVN",
        "CVS",
        "Good",
        "experience",
        "JIRA",
        "issue",
        "Experience",
        "build",
        "automation",
        "tools",
        "Gradle",
        "ANT",
        "Maven",
        "builds",
        "deployments",
        "environments",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Intuit",
        "Inc",
        "Mountain",
        "View",
        "CA",
        "October",
        "Present",
        "Intuit",
        "Inc",
        "business",
        "Financial",
        "Software",
        "company",
        "accounting",
        "tax",
        "preparation",
        "software",
        "services",
        "businesses",
        "accountants",
        "individuals",
        "company",
        "Mountain",
        "View",
        "California",
        "revenues",
        "earnings",
        "activities",
        "United",
        "States",
        "Intuit",
        "TurboTax",
        "consumer",
        "tax",
        "preparation",
        "application",
        "business",
        "accounting",
        "program",
        "QuickBooks",
        "tax",
        "solutions",
        "ProConnect",
        "Tax",
        "Online",
        "ProSeries",
        "payroll",
        "products",
        "Responsibilities",
        "analysis",
        "design",
        "implementation",
        "phases",
        "SDLC",
        "Agile",
        "Methodology",
        "Good",
        "working",
        "experience",
        "web",
        "Designs",
        "HTML5",
        "XHTML",
        "CSS3",
        "JavaScript",
        "jQuery",
        "XML",
        "Developed",
        "Applications",
        "Angular",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "Annotations",
        "custom",
        "singlepage",
        "Web",
        "Application",
        "end",
        "Angular",
        "web",
        "services",
        "Node",
        "JS",
        "dependencies",
        "NPM",
        "UI",
        "components",
        "Angular",
        "dependency",
        "Injection",
        "Models",
        "data",
        "Experience",
        "core",
        "technologies",
        "MultiThreading",
        "Synchronization",
        "Exception",
        "Handling",
        "Java8",
        "Stream",
        "API",
        "Bulk",
        "Data",
        "Operations",
        "Collections",
        "streams",
        "streams",
        "Spring",
        "Inheritance",
        "Autowiring",
        "Core",
        "Container",
        "Security",
        "AOP",
        "ORM",
        "modules",
        "part",
        "migration",
        "EJB",
        "Quartz",
        "scheduling",
        "tasks",
        "reports",
        "emails",
        "clients",
        "Spring",
        "RestfulMicro",
        "services",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "part",
        "Services",
        "Discovery",
        "Apache",
        "Axis",
        "Developed",
        "Micro",
        "services",
        "Spring",
        "Eureka",
        "API",
        "routes",
        "cluster",
        "strategy",
        "micro",
        "service",
        "cluster",
        "load",
        "API",
        "gateway",
        "Spring",
        "Features",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Integration",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "blog",
        "posts",
        "Error",
        "Handling",
        "Scala",
        "Problems",
        "Scala",
        "Fixes",
        "APIs",
        "OAuth",
        "token",
        "authenticationauthorization",
        "Spring",
        "Security",
        "Deployed",
        "Docker",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "Lambda",
        "EC2",
        "Elastic",
        "Beanstalk",
        "Cloud",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "RDS",
        "ElastiCache",
        "SNS",
        "Amazon",
        "services",
        "SQS",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "Lambda",
        "functions",
        "Mongo",
        "DB",
        "Data",
        "Access",
        "Layer",
        "Mongo",
        "Repository",
        "interface",
        "Spring",
        "Data",
        "Hibernate",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "business",
        "modules",
        "integration",
        "spring",
        "Hibernate",
        "data",
        "mapping",
        "Objectrelation",
        "mapping",
        "Hibernate",
        "framework",
        "data",
        "Oracle",
        "Entity",
        "beans",
        "persistence",
        "layer",
        "interaction",
        "Oracle",
        "DB",
        "Used",
        "Drools",
        "business",
        "rules",
        "Rule",
        "Sets",
        "Rule",
        "Spring",
        "Boot",
        "Microservices",
        "microservice",
        "architecture",
        "REST",
        "Apache",
        "Kafka",
        "swagger",
        "project",
        "api",
        "design",
        "build",
        "document",
        "Web",
        "services",
        "Microservices",
        "responsibilities",
        "system",
        "services",
        "cohesion",
        "couplingLoad",
        "servers",
        "SpringRibbon",
        "Developed",
        "REST",
        "web",
        "services",
        "XML",
        "JSON",
        "tasks",
        "web",
        "applications",
        "Application",
        "design",
        "patternsSingleton",
        "Factory",
        "DAO",
        "DTO",
        "prototype",
        "andComposite",
        "View",
        "spring",
        "Hibernate",
        "IOC",
        "AOP",
        "ORM",
        "end",
        "tiers",
        "data",
        "pipeline",
        "Pig",
        "JavaScala",
        "Map",
        "Reduce",
        "HDFS",
        "documentation",
        "HADOOP",
        "Clusters",
        "Hive",
        "queriesPig",
        "Scripts",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "integration",
        "boot",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Apache",
        "Maven",
        "software",
        "tool",
        "errors",
        "messages",
        "automation",
        "test",
        "scripts",
        "Selenium",
        "WebDriver",
        "platforms",
        "browsers",
        "Jenkins",
        "pipelines",
        "micro",
        "services",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Manage",
        "configurations",
        "servers",
        "Ansible",
        "load",
        "balancer",
        "group",
        "configuration",
        "Ansible",
        "Used",
        "Jenkins",
        "build",
        "tool",
        "CICD",
        "Continuous",
        "Integration",
        "deployment",
        "process",
        "Drools",
        "Engine",
        "Business",
        "Validation",
        "rules",
        "GIT",
        "Source",
        "Control",
        "Version",
        "Management",
        "Environment",
        "JAVA",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Angular2",
        "HTML5",
        "CSS3",
        "JQuery",
        "JSON",
        "Boo",
        "Hibernate",
        "Mongo",
        "DB",
        "Oracle",
        "12c",
        "Hadoop",
        "Intellij",
        "IDEA",
        "JUNIT",
        "web",
        "services",
        "Scala",
        "AWS",
        "DroolsDocker",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "OAuth",
        "Apache",
        "Kafka",
        "Selenium",
        "Jenkins",
        "JavaJ2EE",
        "Developer",
        "Netsmart",
        "Kansas",
        "City",
        "MO",
        "August",
        "August",
        "Netsmart",
        "healthcares",
        "services",
        "care",
        "technology",
        "providerNetsmart",
        "users",
        "organizations",
        "states",
        "code",
        "user",
        "interface",
        "specifications",
        "Designing",
        "applications",
        "user",
        "Responsibilities",
        "requirement",
        "document",
        "queries",
        "clarification",
        "client",
        "business",
        "requirement",
        "gathering",
        "specifications",
        "analysis",
        "design",
        "development",
        "testing",
        "phases",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "methodology",
        "Frontend",
        "application",
        "JSPs",
        "JSF",
        "Swing",
        "GWT",
        "Spring",
        "MVC",
        "database",
        "Hibernate",
        "J2EE",
        "standards",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "application",
        "SPRING",
        "framework",
        "Spring",
        "ORM",
        "Spring",
        "IOC",
        "object",
        "mapping",
        "Spring",
        "Hibernate",
        "Design",
        "implementation",
        "websites",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Entity",
        "JPA",
        "Spring",
        "Data",
        "JPA",
        "execute",
        "queries",
        "databases",
        "use",
        "Hibernate",
        "ORM",
        "tool",
        "business",
        "layer",
        "DAOs",
        "SQL",
        "Server",
        "enterprise",
        "database",
        "systems",
        "procedures",
        "PLSQL",
        "data",
        "modification",
        "DML",
        "update",
        "delete",
        "Oracle",
        "Servlets",
        "JSP",
        "Ajax",
        "user",
        "interface",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "AJAX",
        "JavaScript",
        "jQuery",
        "Interaction",
        "Oracle",
        "database",
        "Hibernate",
        "custom",
        "Angular",
        "JS",
        "directives",
        "custom",
        "components",
        "application",
        "pages",
        "EJBs",
        "Stateless",
        "Session",
        "beans",
        "business",
        "logic",
        "JMS",
        "communication",
        "system",
        "Wrote",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "Automation",
        "Web",
        "Services",
        "Testing",
        "SOAP",
        "UI",
        "directives",
        "models",
        "modules",
        "frontend",
        "JMS",
        "Java",
        "service",
        "communication",
        "JMS",
        "Queues",
        "JMS",
        "Topics",
        "onetoone",
        "communication",
        "application",
        "Backend",
        "application",
        "layer",
        "EJB",
        "Enterprise",
        "Java",
        "Bean",
        "WebLogic",
        "Application",
        "Server",
        "environment",
        "Deployment",
        "application",
        "Tomcat",
        "server",
        "Hands",
        "experience",
        "issues",
        "production",
        "server",
        "procedures",
        "functions",
        "modifications",
        "Configuration",
        "manager",
        "role",
        "Jenkins",
        "tool",
        "DB",
        "Design",
        "Environment",
        "J2EE",
        "Web",
        "Services",
        "Springs",
        "Hibernate",
        "XML",
        "XSD",
        "AWS",
        "Oracle",
        "g",
        "Tomcat",
        "HTML",
        "CSS",
        "JSON",
        "jQuery",
        "AJAX",
        "JMS",
        "SOA",
        "Servlets",
        "JSP",
        "JAXWS",
        "Unix",
        "JavaJ2EE",
        "Developer",
        "Northwestern",
        "Mutual",
        "Life",
        "Insurance",
        "Milwaukee",
        "WI",
        "October",
        "July",
        "Northwestern",
        "Mutual",
        "Life",
        "Insurance",
        "provider",
        "insurance",
        "annuities",
        "employee",
        "benefit",
        "programs",
        "subsidiaries",
        "affiliates",
        "Northwestern",
        "life",
        "insurance",
        "market",
        "SSUI",
        "CERT",
        "SYSTEM",
        "range",
        "insurance",
        "product",
        "service",
        "details",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "viewcontroller",
        "components",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "Created",
        "Oracle",
        "coherence",
        "configuration",
        "system",
        "design",
        "oracle",
        "coherence",
        "Experience",
        "building",
        "end",
        "end",
        "web",
        "applications",
        "MEAN",
        "interface",
        "module",
        "login",
        "system",
        "JS",
        "Bootstrap",
        "Developed",
        "HTML5",
        "Mobile",
        "application",
        "Java",
        "Jenkins",
        "RBDMS",
        "Java",
        "Script",
        "JSON",
        "web",
        "service",
        "Angular",
        "JS",
        "page",
        "application",
        "twoway",
        "data",
        "ngfilters",
        "applications",
        "Web",
        "service",
        "modules",
        "SOA",
        "architecture",
        "SOAP",
        "RESTful",
        "Services",
        "service",
        "layer",
        "layer",
        "bridge",
        "presentation",
        "layer",
        "data",
        "access",
        "layer",
        "Spring",
        "Framework",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "Apache",
        "camel",
        "integration",
        "data",
        "Applications",
        "HTTP",
        "protocol",
        "Spring",
        "MVC",
        "Design",
        "Pattern",
        "UI",
        "data",
        "request",
        "response",
        "Dependency",
        "Injection",
        "IOC",
        "feature",
        "Spring",
        "Framework",
        "beans",
        "User",
        "Interface",
        "AOP",
        "Logging",
        "Developed",
        "Oracle",
        "PLSQL",
        "packages",
        "procedures",
        "data",
        "warehouse",
        "loan",
        "information",
        "systems",
        "platforms",
        "legacy",
        "databases",
        "ETL",
        "tools",
        "custom",
        "PLSQL",
        "packages",
        "gaps",
        "ETL",
        "tools",
        "web",
        "service",
        "API",
        "methods",
        "PLSQL",
        "SQLXML",
        "application",
        "Micro",
        "Service",
        "Architecture",
        "Developed",
        "Micro",
        "services",
        "Cloud",
        "Foundry",
        "platform",
        "build",
        "Spring",
        "Boot",
        "Services",
        "applications",
        "Application",
        "Lifecycle",
        "Management",
        "applications",
        "persistence",
        "Layer",
        "Hibernate",
        "data",
        "data",
        "Hibernate",
        "Java",
        "database",
        "SQL",
        "data",
        "data",
        "database",
        "Developed",
        "Hibernate",
        "configuration",
        "files",
        "queries",
        "Implemented",
        "DAO",
        "classes",
        "Web",
        "Services",
        "SOAP",
        "protocol",
        "WSDL",
        "descriptor",
        "file",
        "Stored",
        "Procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "SQL",
        "response",
        "time",
        "application",
        "structure",
        "data",
        "transfer",
        "Configured",
        "development",
        "environment",
        "WebSphere",
        "application",
        "server",
        "developers",
        "integration",
        "test",
        "cases",
        "Unit",
        "testing",
        "JUnit",
        "Used",
        "Jenkins",
        "Maven",
        "builds",
        "deployments",
        "track",
        "issues",
        "tasks",
        "individuals",
        "JIRA",
        "system",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "application",
        "development",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "JQuery",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Hibernate",
        "REST",
        "JAXRS",
        "JAXWS",
        "WSDL",
        "Cloud",
        "Foundry",
        "PCF",
        "Oracle",
        "JUnit",
        "Maven",
        "Jenkins",
        "JIRA",
        "WebSphere",
        "Application",
        "Server",
        "STS",
        "IDE",
        "Java",
        "Developer",
        "Target",
        "Minneapolis",
        "MN",
        "August",
        "October",
        "application",
        "web",
        "services",
        "status",
        "purchase",
        "order",
        "databases",
        "Order",
        "application",
        "OMS",
        "order",
        "department",
        "order",
        "application",
        "moment",
        "user",
        "status",
        "track",
        "tool",
        "application",
        "step",
        "process",
        "departments",
        "tools",
        "database",
        "track",
        "tool",
        "way",
        "robustness",
        "flexibility",
        "DB",
        "status",
        "Responsibilities",
        "stages",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "deliverables",
        "project",
        "methodology",
        "International",
        "Error",
        "Correction",
        "Screens",
        "custom",
        "frontend",
        "forms",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Gathered",
        "requirements",
        "business",
        "analyst",
        "highlevel",
        "customization",
        "design",
        "development",
        "installation",
        "phases",
        "Spring",
        "Framework",
        "dependency",
        "injection",
        "Action",
        "classes",
        "Application",
        "Context",
        "XML",
        "file",
        "implementation",
        "MVC",
        "pattern",
        "JSP",
        "Spring",
        "Controller",
        "business",
        "objects",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "MVC",
        "architecture",
        "JSP",
        "Spring",
        "Hibernate",
        "Spring",
        "Framework",
        "beans",
        "services",
        "SOA",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "JAXWS",
        "WSDL",
        "XML",
        "Struts",
        "Framework",
        "Tag",
        "Libraries",
        "J2EE",
        "design",
        "patterns",
        "MVC",
        "Developed",
        "user",
        "interface",
        "JSP",
        "Struts",
        "validation",
        "framework",
        "client",
        "side",
        "Serverside",
        "validation",
        "Collections",
        "Model",
        "classes",
        "DAO",
        "layer",
        "Data",
        "Access",
        "Object",
        "changes",
        "DAO",
        "layer",
        "Hibernate",
        "Created",
        "mappings",
        "relations",
        "SQL",
        "Hibernate",
        "Implemented",
        "Concurrency",
        "Exception",
        "Handling",
        "Collections",
        "Entity",
        "Beans",
        "data",
        "IBM",
        "DB2",
        "database",
        "database",
        "access",
        "components",
        "Schemas",
        "Tables",
        "SQL",
        "data",
        "mapping",
        "testing",
        "SQL",
        "testing",
        "purpose",
        "process",
        "flow",
        "application",
        "Web",
        "Sphere",
        "application",
        "server",
        "reporting",
        "documentation",
        "project",
        "information",
        "Maven",
        "Tool",
        "SVN",
        "version",
        "control",
        "Jenkins",
        "Continuous",
        "Integration",
        "JUnit",
        "testing",
        "JIRA",
        "bugs",
        "dealing",
        "problem",
        "bug",
        "fixing",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Ajax",
        "Spring",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Hibernate",
        "REST",
        "SOAP",
        "XML",
        "XSLT",
        "Eclipse",
        "PLSQL",
        "JUnit",
        "Maven",
        "Build",
        "Tool",
        "IBM",
        "DB2",
        "JIRA",
        "Jenkins",
        "SVN",
        "IBM",
        "Web",
        "Sphere",
        "Java",
        "Developer",
        "Global",
        "Logic",
        "Technologies",
        "May",
        "June",
        "CCS",
        "pioneer",
        "project",
        "Discover",
        "processes",
        "CALL",
        "CENTER",
        "services",
        "application",
        "customer",
        "service",
        "representatives",
        "productivity",
        "efficiency",
        "level",
        "advantage",
        "market",
        "Responsibilities",
        "Documentation",
        "Use",
        "case",
        "design",
        "UML",
        "modeling",
        "development",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "Use",
        "Case",
        "Transaction",
        "diagrams",
        "application",
        "Struts",
        "Framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "interface",
        "HTML",
        "CSS",
        "JSP",
        "JavaScript",
        "validation",
        "user",
        "interfaces",
        "JSPs",
        "custom",
        "tags",
        "JSTL",
        "Multithreading",
        "Collections",
        "java",
        "code",
        "AJAX",
        "content",
        "Eclipse",
        "IDE",
        "tool",
        "JSP",
        "XML",
        "business",
        "classes",
        "functions",
        "Business",
        "processes",
        "user",
        "authentication",
        "Transfer",
        "Service",
        "Session",
        "EJBs",
        "application",
        "JBoss",
        "build",
        "application",
        "ANT",
        "Wrote",
        "SQL",
        "JDBC",
        "statements",
        "data",
        "database",
        "Developed",
        "PLSQL",
        "Triggers",
        "Stored",
        "Procedures",
        "integrity",
        "data",
        "SQL",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "modules",
        "SVN",
        "version",
        "control",
        "logs",
        "Log4j",
        "problem",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "Struts",
        "JNDI",
        "DB2",
        "HTML",
        "CSS",
        "EJB",
        "XML",
        "DOM",
        "ANT",
        "AJAX",
        "JUnit",
        "Eclipse",
        "JBoss",
        "MYSQL",
        "LOG4J",
        "SVN",
        "Trainee",
        "Software",
        "Engineer",
        "Info",
        "Edge",
        "Solutions",
        "August",
        "May",
        "object",
        "project",
        "frame",
        "work",
        "life",
        "cycle",
        "cost",
        "product",
        "warranty",
        "project",
        "aim",
        "warranty",
        "analysis",
        "warranty",
        "claims",
        "data",
        "trends",
        "feedback",
        "product",
        "version",
        "Responsibilities",
        "responsibilities",
        "level",
        "architecture",
        "development",
        "Design",
        "architecture",
        "J2EE",
        "MVC",
        "framework",
        "interfaces",
        "HTML",
        "JSP",
        "pages",
        "Struts",
        "Presentation",
        "View",
        "Developed",
        "Servlets",
        "JBoss",
        "J2EE",
        "design",
        "patterns",
        "Data",
        "Access",
        "Object",
        "DAO",
        "business",
        "tier",
        "integration",
        "Tier",
        "layer",
        "project",
        "Java",
        "Message",
        "Service",
        "JMS",
        "exchange",
        "information",
        "loan",
        "status",
        "report",
        "clients",
        "bank",
        "De",
        "Message",
        "beans",
        "messages",
        "Java",
        "message",
        "queue",
        "CMP",
        "entity",
        "beans",
        "persistence",
        "business",
        "logic",
        "implementation",
        "Development",
        "database",
        "interaction",
        "code",
        "JDBC",
        "API",
        "use",
        "SQL",
        "Query",
        "Statements",
        "statement",
        "InspectionReview",
        "quality",
        "deliverables",
        "Design",
        "Documents",
        "SQL",
        "Scripts",
        "procedures",
        "SQL",
        "Loader",
        "reference",
        "data",
        "Environment",
        "J2EE",
        "Java",
        "Servlets",
        "JSP",
        "Struts",
        "MVC",
        "Framework",
        "Apache",
        "Tomcat",
        "Oracle",
        "JMS",
        "SQL",
        "HTML",
        "JDBC",
        "EJB",
        "Education",
        "Bachelors",
        "Skills",
        "architecture",
        "years",
        "database",
        "years",
        "Java",
        "years",
        "Model",
        "View",
        "Controller",
        "years",
        "MODELVIEWCONTROLLER",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:52:42.120876",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Intuit Inc Mountain View CA Having 7 years of IT involvement in all phases of Software Development Life Cycle SDLC such as Planning Analysis Design Implementation Testing and Maintenance of various ClientServer Applications Web Based applications using JAVAJ2EE technologies Well versed with complete Software Development Life Cycle SDLC using various methodologies like Agile Methodology Scrum XP Waterfall and followed Test Driven Development TDD Developed Webbased enterprise applications using JavaJ2EE Core Java Servlets JDBC Hibernate Web Services SOAP and REST and MVC Framework Struts Spring MVC Expertise in developing UI using JSP HTML5 CSS3 Java Script Bootstrap JQuery Ajax Angular5 Experience with Java 18 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise Hands on experience with different Spring framework modules like Spring Core Spring AOP Spring MVC Spring Batch Spring Security Spring Data and Spring Boot Experience in developing XML based Web Services SOAPWSDL using Top Down and Bottom Up approach and REST based services with JAXRS Jersey and Spring Integration Experience in developing the application with Service Oriented Architecture SOA and Micro Services Architecture Handson experience on various AWS Cloud services like EC2 Route53 EBS Auto Scaling VPC Cloud Formation S3 RDS Amazon Elastic Load Balancing IAM Cloud Watch and other services of the AWS infrastructure like Dynamo DB SQS and EMR focusing on highavailability fault tolerance and autoscaling Worked with Java 18 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment Expert in Core Java with strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Proficient in implementing various Java design patterns like MVC Session Facade Data Access Object DAO Factory Singleton Data Transfer Object and Front Controller Knowledgeable with RDBMS concepts like writing SQL Queries Working experience of Relational DBMS like MySQL Oracle SQL PLSQL SQL Server MS SQL PostgreSQL DB2 and NoSQL DBMS like MongoDB Also has knowledge on Oracle Performance Tuning Expertise in designing POJO classes using Hibernate Annotations using JPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Jira Experience with application servers like Web Logic JBOSS Apache Tomcat and IBM Web Sphere Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Good Skills in using Dojo Components and integrating backend applications with AJAX driven web 20 frontend using OO JavaScript Framework Experienced in using Eureka Servers while deploying in EC2 Hands on experience with Netflix cloud and fallback technologies like Eureka and Hystrix Experience DOJO DOM manipulation Event Handlers Events Strong experience in database design using PLSQL to write tables Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries to retrieve data Unit testing with mocha chai Expertise in using various IDE tools like Spring Tool Suite VSC Eclipse and IntelliJ Proficient in Continuous Integration and Continuous Deployment tools like Jenkins Experience with Selenium JUnit and Mockito in developing test cases and Log4J in determining application functionality Experience working with version control tools like Git Hub Subversion SVN and CVS Good experience with JIRA in issue tracking Experience with build automation tools like Gradle ANT and Maven for builds and deployments to different environments Work Experience Java Full Stack Developer Intuit Inc Mountain View CA October 2018 to Present Intuit Inc is a business and Financial Software company that develops and sells financial accounting and tax preparation software and related services for small businesses accountants and individuals The company is headquartered in Mountain View California More than 95 of its revenues and earnings come from its activities within the United States Intuit produces TurboTax a consumer tax preparation application the small business accounting program QuickBooks professional tax solutions ProConnect Tax Online ProSeries and multiple payroll products Responsibilities Involved in analysis design and implementation and testing phases of SDLC through Agile Methodology Good working experience in web Designs which includes HTML5 XHTML CSS3 JavaScript jQuery XML Developed Applications using Angular 2 Java 8 and new features of java Lambda Expressions Annotations Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed backend web services using Node JS and stored dependencies using NPM Developed UI components using Angular 2 dependency Injection Models data binding and controllers Strong Experience with core java technologies like MultiThreading Synchronization Exception Handling Java8 Stream API for Bulk Data Operations on Collections using both streams and parallel streams Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to springSpring Quartz for scheduling tasks to generate reports and emails to clients Developed Spring RestfulMicro services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed Micro services with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each micro service in a cluster can be load balanced and exposed through one API gateway Developed the Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Security Spring Integration Spring IOC Spring AOP Written highly referenced blog posts on Error Handling in Scala and Problems Scala Fixes Secured APIs by implementing OAuth 20 token based authenticationauthorization using Spring Security Deployed Docker contained Spring Boot Micro services in to AWS EC2 container service using AWS admin console and used Lambda EC2 Elastic Beanstalk Cloud Watch Cloud Formation IAM S3 RDS ElastiCache SNS Amazon messaging services SQS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Python based GUI components for the frontend functionality such as selection criteria Implemented the associated business modules integration using spring and Hibernate data mapping Implemented Objectrelation mapping using Hibernate framework to fetch the data from Oracle 12cdatabase Extensively worked on Entity beans in the persistence layer interaction with Oracle DB Used Drools to handle complex business rules using Rule Sets and Rule Flows Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Implemented swagger in project for api design build document and consume RESTful Web services Implemented Microservices for distributing different responsibilities of the system into different services for enhancing cohesion and for reduce couplingLoad balancing among servers implemented by using SpringRibbon Developed several REST web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Developed the Application using design patternsSingleton Factory DAO DTO prototype andComposite View Used spring and Hibernate for implementing IOC AOP and ORM for back end tiers Built data pipeline using Pig and JavaScala Map Reduce to store onto HDFS Created and maintained documentation for launching HADOOP Clusters and executing Hive queriesPig Scripts Worked on creation of custom Docker container images tagging pushing images integration ofSpring boot Created the Docker containers and Docker consoles for managing the application life cycle Used Apache Maven as the software build tool and Log4J for logging errors and messages Created automation test scripts using Selenium WebDriver for multiple platforms and browsers testing Used Jenkins and pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Manage the configurations of multiple servers using Ansible Provisioned load balancer autoscaling group and launch configuration for mircoserviceusing Ansible Used Jenkins as a build tool for CICD Continuous Integration and continuous deployment process Used Drools Engine for writing Business Validation rules Using GIT for Source Control and Version Management Environment JAVA 8 Spring MVC Spring Boot Angular2 HTML5 CSS3 JQuery JSON Boo Hibernate Mongo DB Oracle 12c Hadoop Intellij IDEA JUNIT 44 RESTful web services Scala AWS DroolsDocker Spring Cloud Spring Security OAuth 20 Apache Kafka Selenium Jenkins JavaJ2EE Developer Netsmart Kansas City MO August 2016 to August 2018 Netsmart is healthcares largest human services and integrated care technology providerNetsmart serves more than 500000 users in more than 24000 organizations across all 50 states We were responsibleforwriting code to meet user interface specifications and also responsible for Designing developing deploying and supporting applications to meet user needs Responsibilities Analyzing the requirement document and preparing queries for clarification from client Involved in business requirement gathering and technical specifications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using Agile methodology Created a Frontend application using JSPs JSF Swing GWT and Spring MVC for registering and configured it to connect to database using Hibernate Implemented J2EE standards MVC architecture using Spring Framework Involved in developing application using SPRING framework like Spring ORM and Spring IOC Used object relational mapping using Spring with Hibernate Design and implementation of public facing websites on Amazon Web Services AWS Created Entity using JPA and Spring Data JPA for execute queries to the databases Effective use of Hibernate ORM tool in the business layer to create DAOs Worked with SQL Server enterprise database systems Created Stored procedures using PLSQL for data modification Using DML insert update delete in Oracle Implemented Servlets JSP and Ajax to design the user interface Developed Interactive web pages using AJAX JavaScript jQuery Interaction with Oracle database is implemented using Hibernate Developed custom Angular JS directives to build custom reusable components to use across the application pages Used EJBs Stateless Session beans to implement the business logic MDBs JMS for asynchronous communication internal and external to the system Wrote Web Services using SOAP for sending and getting data from the external interface Automation of Web Services Testing using SOAP UI 500 Created AngularJS controllers directives models for different modules in the frontend Involved in implementing the JMS Java messaging service for asynchronous communication Involved in using JMS Queues and JMS Topics for onetoone and onetomany communication in the application Backend application layer is implemented using EJB Enterprise Java Bean in WebLogic Application Server environment Deployment of application in Tomcat server Hands on experience in resolving issues in the production server Involved in procedures and functions modifications Configuration of manager role using Jenkins tool Involved in DB Design Environment J2EE Web Services Springs Hibernate XML XSD AngularJS AWS Oracle 10g Tomcat HTML CSS JSON jQuery AJAX JMS SOA Servlets JSP JAXWS Unix JavaJ2EE Developer Northwestern Mutual Life Insurance Milwaukee WI October 2015 to July 2016 Northwestern Mutual Life Insurance is a leading global provider of insurance annuities and employee benefit programs Through its subsidiaries and affiliates Northwestern mutual life insurance holds leading market SSUI CERT SYSTEM offer a full range of insurance and other financial product service details Responsibilities Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript JQuery and Angular JS Created distributed Oracle coherence domains configuration and system design based on oracle coherence Experience in building end to end web applications using MEAN stack with Angular1X 2 Developed userfriendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap Developed HTML5 Mobile application with Java Jenkins RBDMS Java Script JSON and RESTful web service Used Angular JS to create maintainable and testable single page application and Implemented twoway data binding and used ngfilters across the applications Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Developed the service layer a layer that acts a bridge between the presentation layer and data access layer with Spring Framework features like Spring JDBC and Spring ORM Used Apache camel integration for routing and transforming the data between two Applications using HTTP protocol Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Migrated legacy databases by using ETL tools Developed custom PLSQL packages for gaps found in the ETL tools Developed web service API methods using PLSQL SQLXML Involved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services Developed applications using Application Lifecycle Management to deliver reliable applications Developed persistence Layer using Hibernate to persist the data and to manage the data Worked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data insert and update the data from the database Developed Hibernate configuration files and queries and Implemented DAO classes Web Services were called using SOAP protocol WSDL descriptor file Created Stored Procedures functions views indexes and constraints triggers required SQL tuning to reduce the response time in the application Developed the JSON structure for the data transfer Configured development environment using WebSphere application server for developers integration testing Developed test cases for Unit testing using JUnit Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Used Spring Tool Suite STS for application development Environment Java J2EE HTML CSS JQuery AngularJS Spring IOC Spring MVC Spring AOP Spring Security Hibernate REST SOAP JAXRS JAXWS WSDL Pivotal Cloud Foundry PCF Oracle JUnit Maven Jenkins JIRA WebSphere Application Server and STS IDE Java Developer Target Minneapolis MN August 2014 to October 2015 This is an application developed with multiple web services used for tracking the status of a purchase order by accessing three different databases Order will be collectedplaced through another webbased application The OMS assign the order to the department Once order is placed in the webbased application from that moment user will be able to track the status using a track tool application In each step of the process different departments involved are using different tools and different database This track tool is designed and developed in such a way that it has robustness and flexibility to access all different DB used for tracking the status Responsibilities Involved in various stages of Software Development Life Cycle SDLC deliverables of the project using the Agile methodology Developed International Error Correction Screens using custom frontend forms using HTML CSS JavaScript JQuery and AJAX Gathered and clarified requirements with business analyst to feed into highlevel customization design development and installation phases Used Spring Framework for dependency injection for Action classes using Application Context XML file Involved in implementation of MVC pattern using JSP and Spring Controller Developed business objects using Spring IOC Spring MVC and Spring AOP Implemented MVC architecture using JSP Spring Hibernate and used Spring Framework to initialize managed beans and services Implemented SOA architecture with Web Services using SOAP JAXWS WSDL and XML Used Struts Framework Tag Libraries to implement J2EE design patterns MVC Developed user interface using JSP Struts published validation framework to support client side and Serverside validation Used Collections for Model classes in the DAO layer Data Access Object Involved in modifying some changes in DAO layer using Hibernate Created mappings among the relations and written SQL queries using Hibernate Implemented Concurrency Exception Handling and Collections whenever necessary Used Entity Beans to persist the data into IBM DB2 database like database access components Creating Schemas and Tables Used SQL to perform data mapping and backend testing also documented all the SQL queries for future testing purpose Created process flow for deploying application in Web Sphere application server Managed build reporting and documentation from the project information using Maven Tool and SVN for version control Used Jenkins for Continuous Integration Used JUnit for testing and used JIRA for tracking bugs Responsible for the dealing with the problem bug fixing and troubleshooting Environment Java J2EE HTML CSS JavaScript JQuery Ajax Spring Spring IOC Spring AOP Spring MVC Hibernate REST SOAP XML XSLT Eclipse PLSQL JUnit Maven Build Tool IBM DB2 JIRA Jenkins SVN and IBM Web Sphere Java Developer Global Logic Technologies May 2012 to June 2014 CCS is a pioneer project of Discover to transform all the processes involved in CALL CENTER services into webbased application to enable and enhance customer service representatives productivity and efficiency to help in achieving high level of competitive advantage in the market Responsibilities Involved in Documentation and Use case design using UML modeling include development of Class diagrams Sequence diagrams and Use Case Transaction diagrams Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Created userfriendly interface using HTML CSS JSP and JavaScript for clientside validation Designed the user interfaces using JSPs developed custom tags and used JSTL Implemented Multithreading and Collections in java code Used AJAX for dynamically updating the content Used Eclipse as IDE tool for creating Servlet JSP and XML Developed various java business classes for handling different functions Implemented Business processes such as user authentication Transfer of Service using Session EJBs The application was deployed on the JBoss Involved in build and deploying the application using ANT Wrote SQL for JDBC prepared statements to retrieve the data from database Developed PLSQL queries Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries Developed JUnit test cases for all the developed modules Used SVN as version control Monitored the logs using Log4j and fixed the problem Environment Java J2EE JSP Struts JNDI DB2 HTML CSS EJB XML DOM ANT AJAX JUnit Eclipse JBoss MYSQL LOG4J SVN Trainee Software Engineer Info Edge Solutions August 2011 to May 2012 The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Used Java Message Service JMS for reliable and asynchronous exchange of important information such as loan status report between the clients and the bank De cewsigned and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Environment J2EE Java Servlets JSP Struts MVC Framework Apache Tomcat Oracle JMS SQL HTML JDBC EJB Education Bachelors Skills architecture 7 years database 7 years Java 7 years Model View Controller 7 years MODELVIEWCONTROLLER 7 years",
    "unique_id": "ef96a204-3db6-4104-a411-d860aa36350f"
}