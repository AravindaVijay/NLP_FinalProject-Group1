{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Quicken Loans San Carlos CA 11 years of experience as a Web Application Developer and coding with analytical programming using Python Django Flask Experienced in Python modules such as numpy matplotlib etc for generating complex graphical data creation of histograms etc Used Python scripts to update the content in database and manipulate files Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Having diverse professional experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud Python and IT industry Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy  BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experienced as a User InterfaceFront End Developer in developing applications using HTML HTML5 CSS CSS3 JavaScript DHTML DOM XHTML jQuery AngularJS and AJAX Expert in UI development technologies such as JavaScript CSS3 HTML5 GWT Experience working with JavaScript MVC frameworks Backbonejs and AngularJS Experience developing highly interactive web applications utilizing JavaScript HTML5 CSS JSONAngularJS and Bootstrap and integrating Restful APIs Experience in developing both front end and back end applications using Java J2EE HTML HTML5 CSS CSS3JavaScript Angularjs React JS Spring MVC Spring Hibernate Cloud Applications NodeJS SAAS RWD DOM Gulp Python jQuery and Ajax Implemented Presentation layer using CSS Framework ReactJS Wireframing and HTML5 Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Work Experience Senior Python Developer Quicken Loans San Carlos CA August 2017 to Present Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python GoLang PyQuery HTML5 CSS3 Angular js Shell Scripting JSON Rest Apache Web Server Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Senior Python Developer Morgan Stanley Philadelphia PA April 2015 to July 2017 Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Senior Python Developer General Electric Co Boston MA 2013 to March 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python Django HTML5 CSS XML MySQL MongoDB JavaScript Angular JS jQuery CSS Bootstrap Rabbit MQ Celery TSQL JavaScript Eclipse Git GitHub Linux Radis Shell Scripting Senior Python Developer Novartis Cambridge MA April 2011 to October 2013 Responsibilities Designed Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Build SQL queries for performing various CRUD operations like create update read and delete Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript jQuery AngularJS Bootstrap and JSON Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes Performed different testing methods like unit testing Integration testing web application testing and selenium testing Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX NoSql MongoDB MySQL SOAP REST JQuery Python Developer Verizon New York NY June 2009 to March 2011 Responsibilities Django Framework was used in developing web applications to implement the model view control architecture Created entire application using Python Django MySQL and Linux Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas library for statistics Analysis Numpy for Numerical analysis Managed large datasets using Panda data frames and MySQL Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python Django CSS HTML JavaScript JQuery webbapp AJAX MYSQL Linux Heroku GIT urllib urllib2 OracleDB PostgreSQL and VMWare API Python Developer American Express New York NY March 2007 to May 2009 Responsibilities Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Built a new CI pipeline and performed testing and deployment automation with Docker Jenkins and Puppet Redesigned and redeployed the Nagios implementation Nodes automatically addedremoved themselves via Puppet Used AJAX for transmitting JSON data objects between frontend and controllers and wrote Python scripts to parse XML and JSON documents and load the data in database Implemented RESTful WebServices for sending and receiving the data between multiple systems Implemented business logic using Python and used HTML CSS JavaScript and Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Extensively worked on developing UI components using Angular JS and JSON to interact Restful web services Designed and developed data management system using PostgreSQL and MySQL Set up and maintain CI infrastructure to streamline build process unit tests functional tests integration tests and artifacts deployments Developed build and deployment scripts using Ant and Maven as build tools in Jenkins to move from one environment to other environments Extensively worked on Application servers like WebLogic and Apache Tomcat Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Developed many features for dashboard using Ruby on Rails Bootstrap CSS and JavaScript J2EE Used SVC version control system for maintain version of code Used agile methodology Environment Python Django Jenkins Apache XML MySQL MongoDB REST CSS SASS AJAX HTML Shell scripting Sublime XHTML SVC Education Master of Science in Computer Science Boston University Bachelors Skills DJANGO 10 years JAVASCRIPT 10 years PYTHON 10 years MYSQL 10 years AJAX 10 years Additional Information TECHNICAL SKILLS Languages Python Ruby Scala JavaScript Java CC Frameworks Django pyramid Flask Spring Hibernate AngularJS Database MYSQL PostgreSQL MS SQL MongoDB SQLite Oracle Tools and Version Control GIT SVN CVS DIMENSIONS LAMP WAMP SVN SSH Software Management GIT SVN Maven Gradle CVS AWS Web Technologies HTML5 CSS3 JavaScript XML Servlet JSP JSON AJAX SAAS Operating Systems Windows Macintosh Linux IDEstools PhpStrom Notepad Sublime NetBeans Eclipse Web Services REST SOAP WSDL JavaScript Library JQuery Angular JS Bootstrap BackboneJS NodeJS VueJS EmberJS Application Servers XAMPP WAMP Lamp Apache Tomcat Server",
    "entities": [
        "AJAX",
        "Python Django Flask Experienced",
        "Test Driven Development TDD",
        "GUI",
        "jQuery Worked",
        "Nodejs",
        "Agile Software Methodology",
        "JS Bootstrap",
        "SVC",
        "webapp2",
        "Interfacing",
        "Working",
        "Science in Computer Science Boston University",
        "Backbonejs",
        "MVC Spring",
        "LAMP Linux",
        "Amazon Web Services AWS",
        "Node Package",
        "Panda",
        "Nagios",
        "Sublime XHTML SVC Education",
        "Developed User Interface",
        "Express",
        "XML",
        "Spring IoC",
        "Puppet Used AJAX",
        "WebLogic",
        "DevOps",
        "Shell",
        "Automated",
        "Amazon",
        "Python C",
        "Python",
        "Amazon AWS S3",
        "Mongo",
        "Developed",
        "Jenkins",
        "User InterfaceFront End Developer",
        "Version Control",
        "Utilized",
        "Python Unit",
        "Shell Scripting AWS",
        "MultiThreading",
        "HTML CSS JavaScript jQuery AngularJS",
        "Django Websites Created",
        "PythonPHP",
        "HTML5",
        "Develop",
        "AGILE",
        "API RESTful Web Service",
        "Created Data",
        "Built",
        "VMWare API",
        "Docker",
        "HTML CSS JavaScript XML",
        "GitHub Developed",
        "PHP Experienced",
        "RDS",
        "Views",
        "Django PostgreSQL",
        "Oracle Tools",
        "Developed Ruby Python",
        "PyQt",
        "HTML CSS JavaScript JQuery",
        "MVC",
        "Flask SQL Alchemy",
        "Redux",
        "Node JS",
        "jQuery Experienced",
        "Python on Django",
        "Python Django AJAX HTML5",
        "API",
        "HTML CSS JavaScript",
        "QA",
        "Present Responsibilities Designed",
        "Additional Information TECHNICAL SKILLS Languages Python Ruby",
        "Created",
        "AWS",
        "CSS Framework",
        "Django PostgreSQL Designed",
        "WAMP Windows Apache",
        "Bash Designed",
        "Backup and Restore",
        "Used Ruby and Ajax",
        "SQL",
        "American Express",
        "Development of Isomorphic",
        "Django Oracle DB PostgreSQL",
        "Bootstrap",
        "lPythonspan",
        "Python Django",
        "Git Collect",
        "Jenkins Ansible",
        "Administrators",
        "Maven Gradle",
        "Ant",
        "CI",
        "Python OOP Worked",
        "Amazon AWS",
        "TestDriven",
        "Used Django Framework",
        "Bash Managed",
        "Pandas",
        "Restful APIs Experience",
        "CRUD",
        "Maven",
        "Performed",
        "Python Develop",
        "UI",
        "WAMP SVN SSH Software Management",
        "Amazon Web Services Cloud Python",
        "CSS",
        "Numpy SQL Alchemy AWS Senior Python Developer Morgan Stanley Philadelphia",
        "jQuery",
        "Boston",
        "REST",
        "Mesos Used",
        "JS Spring",
        "TDD",
        "HTML HTML5 CSS",
        "Python Flask PHP Django XML JSON",
        "Application",
        "Integration",
        "JQuery",
        "Python and Django Proficient",
        "Implemented RESTful WebServices"
    ],
    "experience": "Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Having diverse professional experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud Python and IT industry Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy   BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experienced as a User InterfaceFront End Developer in developing applications using HTML HTML5 CSS CSS3 JavaScript DHTML DOM XHTML jQuery AngularJS and AJAX Expert in UI development technologies such as JavaScript CSS3 HTML5 GWT Experience working with JavaScript MVC frameworks Backbonejs and AngularJS Experience developing highly interactive web applications utilizing JavaScript HTML5 CSS JSONAngularJS and Bootstrap and integrating Restful APIs Experience in developing both front end and back end applications using Java J2EE HTML HTML5 CSS CSS3JavaScript Angularjs React JS Spring MVC Spring Hibernate Cloud Applications NodeJS SAAS RWD DOM Gulp Python jQuery and Ajax Implemented Presentation layer using CSS Framework ReactJS Wireframing and HTML5 Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Work Experience Senior Python Developer Quicken Loans San Carlos CA August 2017 to Present Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python GoLang PyQuery HTML5 CSS3 Angular js Shell Scripting JSON Rest Apache Web Server Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Senior Python Developer Morgan Stanley Philadelphia PA April 2015 to July 2017 Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Senior Python Developer General Electric Co Boston MA 2013 to March 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python Django HTML5 CSS XML MySQL MongoDB JavaScript Angular JS jQuery CSS Bootstrap Rabbit MQ Celery TSQL JavaScript Eclipse Git GitHub Linux Radis Shell Scripting Senior Python Developer Novartis Cambridge MA April 2011 to October 2013 Responsibilities Designed Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Build SQL queries for performing various CRUD operations like create update read and delete Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript jQuery AngularJS Bootstrap and JSON Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes Performed different testing methods like unit testing Integration testing web application testing and selenium testing Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX NoSql MongoDB MySQL SOAP REST JQuery Python Developer Verizon New York NY June 2009 to March 2011 Responsibilities Django Framework was used in developing web applications to implement the model view control architecture Created entire application using Python Django MySQL and Linux Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas library for statistics Analysis Numpy for Numerical analysis Managed large datasets using Panda data frames and MySQL Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python Django CSS HTML JavaScript JQuery webbapp AJAX MYSQL Linux Heroku GIT urllib urllib2 OracleDB PostgreSQL and VMWare API Python Developer American Express New York NY March 2007 to May 2009 Responsibilities Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Built a new CI pipeline and performed testing and deployment automation with Docker Jenkins and Puppet Redesigned and redeployed the Nagios implementation Nodes automatically addedremoved themselves via Puppet Used AJAX for transmitting JSON data objects between frontend and controllers and wrote Python scripts to parse XML and JSON documents and load the data in database Implemented RESTful WebServices for sending and receiving the data between multiple systems Implemented business logic using Python and used HTML CSS JavaScript and Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Extensively worked on developing UI components using Angular JS and JSON to interact Restful web services Designed and developed data management system using PostgreSQL and MySQL Set up and maintain CI infrastructure to streamline build process unit tests functional tests integration tests and artifacts deployments Developed build and deployment scripts using Ant and Maven as build tools in Jenkins to move from one environment to other environments Extensively worked on Application servers like WebLogic and Apache Tomcat Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Developed many features for dashboard using Ruby on Rails Bootstrap CSS and JavaScript J2EE Used SVC version control system for maintain version of code Used agile methodology Environment Python Django Jenkins Apache XML MySQL MongoDB REST CSS SASS AJAX HTML Shell scripting Sublime XHTML SVC Education Master of Science in Computer Science Boston University Bachelors Skills DJANGO 10 years JAVASCRIPT 10 years PYTHON 10 years MYSQL 10 years AJAX 10 years Additional Information TECHNICAL SKILLS Languages Python Ruby Scala JavaScript Java CC Frameworks Django pyramid Flask Spring Hibernate AngularJS Database MYSQL PostgreSQL MS SQL MongoDB SQLite Oracle Tools and Version Control GIT SVN CVS DIMENSIONS LAMP WAMP SVN SSH Software Management GIT SVN Maven Gradle CVS AWS Web Technologies HTML5 CSS3 JavaScript XML Servlet JSP JSON AJAX SAAS Operating Systems Windows Macintosh Linux IDEstools PhpStrom Notepad Sublime NetBeans Eclipse Web Services REST SOAP WSDL JavaScript Library JQuery Angular JS Bootstrap BackboneJS NodeJS VueJS EmberJS Application Servers XAMPP WAMP Lamp Apache Tomcat Server",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "Quicken",
        "Loans",
        "San",
        "Carlos",
        "CA",
        "years",
        "experience",
        "Web",
        "Application",
        "Developer",
        "programming",
        "Python",
        "Django",
        "Flask",
        "Python",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Experience",
        "Object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "experience",
        "Architecting",
        "implementation",
        "Amazon",
        "Web",
        "Services",
        "Cloud",
        "Python",
        "IT",
        "industry",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "Reportlab",
        "Numpy",
        "SciPy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "expertise",
        "development",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Dojo",
        "HTML",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "python",
        "packages",
        "Numpy",
        "BeautifulSoup",
        "Pickle",
        "PySide",
        "SciPy",
        "wxPython",
        "PyTables",
        "knowledge",
        "spring",
        "Hibernate",
        "RDBMS",
        "Web",
        "XML",
        "AntMaven",
        "HTML",
        "Python",
        "Shell",
        "Scripting",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Proficient",
        "development",
        "experience",
        "Python",
        "Django",
        "AJAX",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "Angular2",
        "JS",
        "Node",
        "JS",
        "Express",
        "JS",
        "applications",
        "Python",
        "Flask",
        "PHP",
        "Django",
        "CSS",
        "HTML",
        "HTML5",
        "JavaScript",
        "AngularJS",
        "jQuery",
        "User",
        "InterfaceFront",
        "End",
        "Developer",
        "applications",
        "HTML",
        "HTML5",
        "CSS",
        "CSS3",
        "JavaScript",
        "DHTML",
        "DOM",
        "XHTML",
        "jQuery",
        "AngularJS",
        "AJAX",
        "Expert",
        "UI",
        "development",
        "technologies",
        "JavaScript",
        "CSS3",
        "HTML5",
        "GWT",
        "Experience",
        "JavaScript",
        "MVC",
        "frameworks",
        "Backbonejs",
        "Experience",
        "web",
        "applications",
        "JavaScript",
        "HTML5",
        "CSS",
        "JSONAngularJS",
        "Bootstrap",
        "APIs",
        "Experience",
        "end",
        "end",
        "applications",
        "Java",
        "J2EE",
        "HTML",
        "HTML5",
        "CSS",
        "CSS3JavaScript",
        "Angularjs",
        "React",
        "JS",
        "Spring",
        "MVC",
        "Spring",
        "Hibernate",
        "Cloud",
        "Applications",
        "NodeJS",
        "RWD",
        "DOM",
        "Gulp",
        "Python",
        "jQuery",
        "Ajax",
        "Presentation",
        "layer",
        "CSS",
        "Framework",
        "ReactJS",
        "Wireframing",
        "HTML5",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Quicken",
        "Loans",
        "San",
        "Carlos",
        "CA",
        "August",
        "Present",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Build",
        "Cassandra",
        "CRUD",
        "operations",
        "update",
        "read",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Environment",
        "Python",
        "GoLang",
        "PyQuery",
        "HTML5",
        "CSS3",
        "Angular",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Celery",
        "Flash",
        "SQL",
        "UNIX",
        "Windows",
        "PostgreSQL",
        "python",
        "libraries",
        "Numpy",
        "SQL",
        "Alchemy",
        "Senior",
        "Python",
        "Developer",
        "Morgan",
        "Stanley",
        "Philadelphia",
        "PA",
        "April",
        "July",
        "Responsibilities",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "server",
        "side",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "matplotlib",
        "Scipy",
        "NumPy",
        "Nodejs",
        "backend",
        "client",
        "web",
        "application",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "client",
        "web",
        "application",
        "Working",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Python",
        "stock",
        "APIs",
        "Design",
        "web",
        "applications",
        "Python",
        "Develop",
        "applications",
        "database",
        "pymongo",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Ruby",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "PostgreSQLMYSQL",
        "features",
        "table",
        "types",
        "oracle",
        "indexing",
        "Backup",
        "Restore",
        "experience",
        "PostgreSQL",
        "MYSQL",
        "database",
        "backups",
        "point",
        "time",
        "recovery",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Djangos",
        "ORM",
        "model",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Environment",
        "Python",
        "Django",
        "Tableau",
        "soup",
        "HTML5",
        "CSSCSS3",
        "Bootstrap",
        "XML",
        "JSON",
        "JavaScript",
        "JQuery",
        "PostgreSQL",
        "Flask",
        "SciPy",
        "Pandas",
        "Numpy",
        "Backbone",
        "JS",
        "Restful",
        "Web",
        "services",
        "Apache",
        "Linux",
        "Git",
        "Amazon",
        "s3",
        "Jenkins",
        "MySQL",
        "Mongo",
        "DB",
        "TSQL",
        "Eclipse",
        "Senior",
        "Python",
        "Developer",
        "General",
        "Electric",
        "Co",
        "Boston",
        "MA",
        "March",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Build",
        "Cassandra",
        "CRUD",
        "operations",
        "update",
        "read",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "MongoDB",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "Bootstrap",
        "Rabbit",
        "MQ",
        "Celery",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Radis",
        "Shell",
        "Scripting",
        "Senior",
        "Python",
        "Developer",
        "Novartis",
        "Cambridge",
        "MA",
        "April",
        "October",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angularjs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Designed",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "Postgre",
        "SQL",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Created",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Python",
        "Unit",
        "test",
        "library",
        "purpose",
        "programs",
        "Python",
        "codes",
        "testing",
        "methods",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "Environment",
        "Python",
        "Django",
        "Go",
        "language",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "NoSql",
        "MongoDB",
        "MySQL",
        "SOAP",
        "REST",
        "JQuery",
        "Python",
        "Developer",
        "Verizon",
        "New",
        "York",
        "NY",
        "June",
        "March",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JQuery",
        "libraries",
        "client",
        "side",
        "JavaScript",
        "manipulations",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "OracleDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "datasets",
        "Panda",
        "data",
        "frames",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "sqlalchemy",
        "Interacted",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "AJAX",
        "MYSQL",
        "Linux",
        "Heroku",
        "GIT",
        "urllib2",
        "OracleDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Python",
        "Developer",
        "American",
        "Express",
        "New",
        "York",
        "NY",
        "March",
        "May",
        "Responsibilities",
        "Python",
        "Django",
        "Pyramid",
        "frameworks",
        "applications",
        "programming",
        "frontend",
        "functionality",
        "JavaScript",
        "Ajax",
        "AngularJS",
        "technologies",
        "CI",
        "pipeline",
        "testing",
        "deployment",
        "automation",
        "Docker",
        "Jenkins",
        "Puppet",
        "Nagios",
        "implementation",
        "Nodes",
        "Puppet",
        "Used",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "WebServices",
        "data",
        "systems",
        "business",
        "logic",
        "Python",
        "HTML",
        "CSS",
        "JavaScript",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IoC",
        "creation",
        "Hibernate",
        "mapping",
        "files",
        "generation",
        "database",
        "schema",
        "CRUD",
        "operations",
        "applications",
        "MVT",
        "Model",
        "View",
        "Template",
        "architecture",
        "Django",
        "framework",
        "Python",
        "code",
        "reviews",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "UI",
        "components",
        "JS",
        "JSON",
        "web",
        "services",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "MySQL",
        "CI",
        "infrastructure",
        "build",
        "process",
        "unit",
        "tests",
        "integration",
        "tests",
        "deployments",
        "build",
        "deployment",
        "scripts",
        "Ant",
        "Maven",
        "build",
        "tools",
        "Jenkins",
        "environment",
        "environments",
        "Application",
        "servers",
        "WebLogic",
        "Apache",
        "Tomcat",
        "Ajax",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "TCPIP",
        "network",
        "interface",
        "routes",
        "hostnames",
        "features",
        "dashboard",
        "Ruby",
        "Rails",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "J2EE",
        "SVC",
        "version",
        "control",
        "system",
        "version",
        "code",
        "methodology",
        "Environment",
        "Python",
        "Django",
        "Jenkins",
        "Apache",
        "XML",
        "MySQL",
        "MongoDB",
        "REST",
        "CSS",
        "SASS",
        "AJAX",
        "HTML",
        "Shell",
        "Sublime",
        "XHTML",
        "SVC",
        "Education",
        "Master",
        "Science",
        "Computer",
        "Science",
        "Boston",
        "University",
        "Bachelors",
        "Skills",
        "DJANGO",
        "years",
        "JAVASCRIPT",
        "years",
        "PYTHON",
        "years",
        "MYSQL",
        "years",
        "AJAX",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "Python",
        "Ruby",
        "Scala",
        "JavaScript",
        "Java",
        "CC",
        "Frameworks",
        "Django",
        "Flask",
        "Spring",
        "Hibernate",
        "Database",
        "MYSQL",
        "PostgreSQL",
        "MS",
        "SQL",
        "Oracle",
        "Tools",
        "Version",
        "Control",
        "GIT",
        "SVN",
        "CVS",
        "DIMENSIONS",
        "LAMP",
        "WAMP",
        "SVN",
        "SSH",
        "Software",
        "Management",
        "GIT",
        "SVN",
        "Maven",
        "Gradle",
        "CVS",
        "AWS",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "XML",
        "Servlet",
        "JSP",
        "JSON",
        "AJAX",
        "Operating",
        "Systems",
        "Windows",
        "Macintosh",
        "Linux",
        "IDEstools",
        "PhpStrom",
        "Notepad",
        "Sublime",
        "NetBeans",
        "Eclipse",
        "Web",
        "Services",
        "REST",
        "SOAP",
        "WSDL",
        "JavaScript",
        "Library",
        "JQuery",
        "Angular",
        "JS",
        "Bootstrap",
        "NodeJS",
        "VueJS",
        "EmberJS",
        "Application",
        "Servers",
        "XAMPP",
        "WAMP",
        "Lamp",
        "Apache",
        "Tomcat",
        "Server"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:44:04.680607",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Quicken Loans San Carlos CA 11 years of experience as a Web Application Developer and coding with analytical programming using Python Django Flask Experienced in Python modules such as numpy matplotlib etc for generating complex graphical data creation of histograms etc Used Python scripts to update the content in database and manipulate files Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Having diverse professional experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud Python and IT industry Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy MatPlotLib BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experienced as a User InterfaceFront End Developer in developing applications using HTML HTML5 CSS CSS3 JavaScript DHTML DOM XHTML jQuery AngularJS and AJAX Expert in UI development technologies such as JavaScript CSS3 HTML5 GWT Experience working with JavaScript MVC frameworks Backbonejs and AngularJS Experience developing highly interactive web applications utilizing JavaScript HTML5 CSS JSONAngularJS and Bootstrap and integrating Restful APIs Experience in developing both front end and back end applications using Java J2EE HTML HTML5 CSS CSS3JavaScript Angularjs React JS Spring MVC Spring Hibernate Cloud Applications NodeJS SAAS RWD DOM Gulp Python jQuery and Ajax Implemented Presentation layer using CSS Framework ReactJS Wireframing and HTML5 Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Work Experience Senior Python Developer Quicken Loans San Carlos CA August 2017 to Present Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python GoLang PyQuery HTML5 CSS3 Angular js Shell Scripting JSON Rest Apache Web Server Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Senior Python Developer Morgan Stanley Philadelphia PA April 2015 to July 2017 Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau soup HTML5 CSSCSS3 Bootstrap XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Apache Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse Senior Python Developer General Electric Co Boston MA 2013 to March 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python Django HTML5 CSS XML MySQL MongoDB JavaScript Angular JS jQuery CSS Bootstrap Rabbit MQ Celery TSQL JavaScript Eclipse Git GitHub Linux Radis Shell Scripting Senior Python Developer Novartis Cambridge MA April 2011 to October 2013 Responsibilities Designed Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS and RDS to host staticmedia files and the database into Amazon Cloud Used PyQuery for selecting DOM elements when parsing HTML Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote Python scripts to parse JSON documents and load the data in database Build SQL queries for performing various CRUD operations like create update read and delete Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript jQuery AngularJS Bootstrap and JSON Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes Performed different testing methods like unit testing Integration testing web application testing and selenium testing Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Environment Python Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML CSS AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX NoSql MongoDB MySQL SOAP REST JQuery Python Developer Verizon New York NY June 2009 to March 2011 Responsibilities Django Framework was used in developing web applications to implement the model view control architecture Created entire application using Python Django MySQL and Linux Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Used JQuery libraries for all client side JavaScript manipulations Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Lock mechanisms were implemented and the functionality of multithreading has been used Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas library for statistics Analysis Numpy for Numerical analysis Managed large datasets using Panda data frames and MySQL Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sqlalchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python Django CSS HTML JavaScript JQuery webbapp AJAX MYSQL Linux Heroku GIT urllib urllib2 OracleDB PostgreSQL and VMWare API Python Developer American Express New York NY March 2007 to May 2009 Responsibilities Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Built a new CI pipeline and performed testing and deployment automation with Docker Jenkins and Puppet Redesigned and redeployed the Nagios implementation Nodes automatically addedremoved themselves via Puppet Used AJAX for transmitting JSON data objects between frontend and controllers and wrote Python scripts to parse XML and JSON documents and load the data in database Implemented RESTful WebServices for sending and receiving the data between multiple systems Implemented business logic using Python and used HTML CSS JavaScript and Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript Extensively worked on developing UI components using Angular JS and JSON to interact Restful web services Designed and developed data management system using PostgreSQL and MySQL Set up and maintain CI infrastructure to streamline build process unit tests functional tests integration tests and artifacts deployments Developed build and deployment scripts using Ant and Maven as build tools in Jenkins to move from one environment to other environments Extensively worked on Application servers like WebLogic and Apache Tomcat Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Developed many features for dashboard using Ruby on Rails Bootstrap CSS and JavaScript J2EE Used SVC version control system for maintain version of code Used agile methodology Environment Python Django Jenkins Apache XML MySQL MongoDB REST CSS SASS AJAX HTML Shell scripting Sublime XHTML SVC Education Master of Science in Computer Science Boston University Bachelors Skills DJANGO 10 years JAVASCRIPT 10 years PYTHON 10 years MYSQL 10 years AJAX 10 years Additional Information TECHNICAL SKILLS Languages Python Ruby Scala JavaScript Java CC Frameworks Django pyramid Flask Spring Hibernate AngularJS Database MYSQL PostgreSQL MS SQL MongoDB SQLite Oracle Tools and Version Control GIT SVN CVS DIMENSIONS LAMP WAMP SVN SSH Software Management GIT SVN Maven Gradle CVS AWS Web Technologies HTML5 CSS3 JavaScript XML Servlet JSP JSON AJAX SAAS Operating Systems Windows Macintosh Linux IDEstools PhpStrom Notepad Sublime NetBeans Eclipse Web Services REST SOAP WSDL JavaScript Library JQuery Angular JS Bootstrap BackboneJS NodeJS VueJS EmberJS Application Servers XAMPP WAMP Lamp Apache Tomcat Server",
    "unique_id": "d4381ebb-b52a-4c83-b8ad-10025c8234df"
}