{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Verizon Wireless Bakersfield CA Around 5 years of experience in full software development life cycle including requirement analysis design coding testing debugging and maintenance Experience in developing Front End components UI using JSP JSF Primefaces JSTL JavaScript JQuery AJAX AngularJS Angular 2 Angular 4 NodeJS HTML5 CSS3SaSSLESS and Bootstrap for projects based on java platform Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Experience building cloud native app with Spring Framework and Spring Boot Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native micro services using Spring cloud and Spring Boot Extensive working experience on migrating the large enterprise systems into Cloud Native Architecture model Experienced in developing micro services using Java Spring Boot and Golang with Docker deployments Hands on experience in the implementation of Core Java SE 8 concepts like Streams API Lambda functions Generics Time API Functional Interfaces Multithreading Transaction Management Exception Handling and Collection API Built the Docker images using Docker Tool and pushed the images to Dockyard Repository and deployed the payload using JSON files in different AWS Environments using Jenkins Expertise in spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP IBM BPM Java J2EE Servlets EJB JPA Websphere Commerce Hibernate Spring Framework Jasper Reports Server Extjs JSP JMS Struts XML Eclipse NetBeans Jquery Visual Source Safe CVS SVN JDBC JNDI ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Webflow Spring Data JPA JSF ICEfaces HTML5 and Java Scripts Experience in JUnit Mockito Spock TestNg for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Verizon Wireless Bakersfield CA Full Stack Java Developer July 2018 Present Responsibilities Used Java8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Used code Code Development Tools Eclipse Intellij Visual Studio Code Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied Angularjs to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Developing LTSS application using JAVA 8 Spring 50 Rules BPMN Angular Java script 4 HTML 50 CSS Mongo Db PLSQL Tomcat Web Server Docker WebLogic AS Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Building and Deploying the application using the Continues integration CI tools like Bitbucket bamboo and JIRA and also using Tomcat server Working on next generation of services API Spring Boot Swagger Rest Apigee Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Cucumber Enabled swagger for all micros services to publish the contracts Worked on Securing WebSphere Portal with LDAP and DB2 WebSphere with LDAP Used Oracle database for SQL PLSQL scripts stored procedures functions and triggers Developed the application using Oracle DB for storing data to the server Build and configure WebSphere Portal components including navigation menu and content view portlets Involved in deploying the ESL portal application on IBM Websphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to uploadpost filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using JQuery Angularjs Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Involved OAuth 20 configuration for authentication authorization Developed Pig Scripts Pig UDF and Hive Scripts Hive UDFs to analyze HDFS data Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Ribbon Hystrix Zuul Edge proxy and Monitoring and centralized log analyses ELK Used Junit Cucumber for Spring Protractor for Angular Mocha and Chai for React Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Involved in using React JS components Forms Events Keys Router Animations and Flux concept Worked on Angular 2040 Components ngModules Services observablepromises Directive and Pipes Worked on React JS components forms events routers and Redux asynchronous functions Designed and developed asynchronous RESTful Microservices using Spring boot Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite To integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel Worked with Karma Jasmine Mocha and Chau testing frameworks to perform unit testing Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Successfully deployed and compiled many of the applications using Web Sphere Application Server Web Logic Application Server Nginx proxy webserver JBoss and Apache Tomcat Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented continuous deployment system with Jenkins CodeDeploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB Angularjs Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular 2 to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container Amazon Seattle Washington Full Stack Java Developer January 2016 to June 2017 Responsibilities Client Communication on a daily basis to discuss on sprint stories and project status Responsible for creating efficient design and developing User Interaction screens using HTML 5 CSS3 JavaScript Bootstrap Reactjs Redux MongoDB Implemented Hibernate ORM tool integration with Spring MVC to interact with back end persistence system Oracle Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Worked on collection API Multithreading and Java 8 Features and other Java Concepts Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Created Angular2 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the events decorators Defined new validations through AngularJS for the form field validation implemented through HTML5 Implemented Angular Router to enable navigation from one view to the next as agent performs application tasks Used IBM WebSphere Studio Application Developer WSAD as the IDE for writing code Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs and Redux Used various predefined components from NPM Node Package Manager and redux library to create user interaction screens Used React JS components Forms Events Keys Router Animations and Flux concept for page creation Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Wrote code for consuming a Restful Web service with AngularJS And created dynamic and interactive Data visualizations with D3 charts and AngularJS Used ReactDraggable to develop the Drag and Drop functionality Used React JS for templating for faster compilation and developing reusable components Utilized React for its efficient data flow architecture to create a lightweight and render efficient web app that searched projects via the GitHub API through keywords Worked with Express JS for development of RESTful web services and middleware configurations Strong experience with Axios AJAX to pull the data from the REST API and issued HTTP requests to interact with REST endpoints Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Developed single application to render dynamically based on the JSON from the Node JS server Used configuration file and Node JS at backend to interact with MongoDB using Mongoose connector Developed NodeJS Readable and Writable streams to process the data from the external source of the application Developed the application as a Spring Boot App to get range of nonfunctional features Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Worked on CrossBrowser Compatibility and tested each every web application on popular web browsers such as Internet Explorer Firefox Safari Opera and Chrome Extensively used Git for version controlling and regularly pushed the code to GitHub Worked on NoSQL database MongoDB and developed custom MongoDB applications as per the client specification Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Apache Kafka to build data pipeline for developing producers and customers Used Chai Mocha and Gulp for developing test cases for unit integration and functional testing Interacted with Testing Team Scrum Masters and Business Analysts for fixing of Issues BNY Mellon New York India FULLSTACK Java DEVELOPER September 2013 to December 2015 Responsibilities Developed the Service Oriented Architecture application using Spring MVC and AngularJS as User Interface view Client Communication on a daily basis to discuss on sprint stories and project status Responsible for ensuring the pattern consistency across all pages Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 jQuery AJAX and JSON Used Quick build and Jenkins for the CICD of different applications Extensively used Java 18 features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Angular JS to develop a single page application Design and Develop user interfaces using flex in eclipse Created two way binding Angular JS components and provide access to the serverside through Backbones API from Backbone Model and Backbone Collection Developed Single Container Applications by writing the code in AngularJS Created TypeScript reusable components and services to consume REST APIs using Component based architecture provided by angular 2 Built SPA with loading multiple views using route services using Angular and NodeJS Existing JavaScript code conversion into MVC pattern using Angular JS framework Responsible for all clientside UI Validation and implementing Business logic based on user selection using jQuery jQuery UI and Angular JS Integrated the Java code API in JSP Pages Used Hibernate EH Cache technique for the critical objects in the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using Hibernate Session Manager functionality to provide independent database connectivity Integrated Hibernate with Spring STS to interact with database security JSP tags to provide UI level spring security Developed Restful web services using ApacheCXF which would be available for other local OSGI bundles Used IBM MQ for the integration of components Developed of SOAP Web services using Apache Axis to extract client related data from databases Built REST API endpoints for various concepts using JAX RS API Ensured timely Sprint Delivery with no Spillover tasks Stored the external stream of data into Apache Cassandra for building real time analytics dashboard using Google Charts API with Angular JS components Work Experience Full Stack Java Developer Verizon Wireless Bakersfield CA April 2018 to Present Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native microservices using Spring cloud and Spring Boot Worked on backend services with Golang and accomplished essential unit test designed and developed the Golang backend for the next version of adsGO Full Stack Java Developer Amazon Seattle WA January 2016 to June 2017 Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations Designed a web application to query raw JSON files for Data Analysis Team Developed the frontend by Html CSS JavaScript backend by Golang and Apache Drill Java DEVELOPER FULLSTACK September 2013 to December 2015 Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Hands on experience with build tools like ANT Maven Gradle and logging tools like Log4J Education Bachelors in btech RGPV Indore Madhya Pradesh Skills Angular Java Node Python Javascript Angularjs React XML SQL HTML Linux jQuery Java 8 AWS Python AngularJS Reactjs Nodejs JavaScript MAVEN MVC Hibernate HTML5 CSS3 Spring SPRINGBOOT Spring cloud UML Wireframes Microservices JSON jquery Soap Rest UI Testing Kafka Scala Spring MVC Cloud Foundry ORMSQS SNS CICD RDS EC2 Redshift mysql RESTful oRACLE sql nosql Ajax Kubernetes GCP Backbonejs Mongo DB JenkinsS3 EBS VPC ELB RDS APICloud Watch IBM FrameworkStruts JUnit test case Golang Apache Drill Web services JSP JSF and XML IBM WebSphere MQ SESSNS SPA Multithreading Express backend D3 frontend Apache Tomcat 4x and WebLogic WebSphere servers MEAN MERN Elastic SOLR",
    "entities": [
        "ExtJS",
        "Spring Framework",
        "Backbone Model",
        "Backbone JS Hands",
        "Angular",
        "IDE",
        "ESL",
        "JavaScript Bootstrap Reactjs",
        "New York",
        "UML Wireframes Microservices JSON",
        "Ajax Kubernetes GCP",
        "Nodejs",
        "J2EE XML",
        "UI Validation",
        "ISOMORPHIC",
        "Component",
        "Building",
        "AWS Environments",
        "SOLR",
        "HTTP",
        "Elastic Container Services",
        "IBM",
        "Ajax",
        "XML",
        "OAuth",
        "BRMS ILOG JRules",
        "Integrated Hibernate",
        "jQuery jQuery UI",
        "JavaJ2EE",
        "Amazon",
        "ReactRouter",
        "Spring Boot",
        "Multithreading Express",
        "Data Analysis Team Developed",
        "ELK",
        "Cloudera Hadoop",
        "XML IBM",
        "WebSphere",
        "Developed",
        "DAO",
        "AWS Docker",
        "LDAP",
        "JPA",
        "AWS S3",
        "User Interaction",
        "BNY Mellon",
        "Jenkins CodeDeploy Ops Works",
        "Restful",
        "native micro services",
        "Angular JS framework Responsible",
        "Java Spring Boot",
        "JavaScript Involved",
        "JSP",
        "Dockyard Repository",
        "Maven Used Microservices",
        "HTML5 Implemented Angular Router",
        "Google Charts API",
        "JSPView",
        "Websphere Commerce",
        "API services Successfully",
        "SQL Server Configured",
        "Docker",
        "DB Used SOA Integration",
        "WebSphere Portal",
        "Used IBM WebSphere Studio Application Developer WSAD",
        "MVC",
        "Agile",
        "IBM FrameworkStruts JUnit",
        "Node JS",
        "Interacted with Testing Team Scrum Masters and Business Analysts",
        "GitHub Worked",
        "Data Integration Service Functional Integration Service",
        "ANT Maven Gradle",
        "API",
        "WebLogic WebSphere",
        "MVC Spring Cache Spring Integration Spring Boot",
        "Created",
        "CA",
        "Coded",
        "Singleton",
        "Developed of SOAP",
        "Chau",
        "Oracle DB",
        "Spring Declarative Transaction Management Worked",
        "Utilized React",
        "Netflix Zuul Api Gateway",
        "Seattle",
        "Construction of UI",
        "React JS",
        "Used Orchestration container Kubernetes",
        "Hystrix Circuit Breaker",
        "Backbone JS",
        "java",
        "Oozie",
        "ReactDraggable",
        "SQL",
        "Hive Involved",
        "UDF",
        "Amazon Web Services",
        "Kubernetes Cluster Installed Kafka",
        "Bootstrap",
        "NPM",
        "Continues",
        "Software Development",
        "JavaScript Unit",
        "JUnit Mockito Spock",
        "Web Sphere Application",
        "CICD",
        "Golang",
        "NPM Node Package",
        "Business Customers",
        "ReactNative Application",
        "JAVA",
        "Present Strong",
        "India",
        "Build",
        "lJavaspan",
        "JavaScript",
        "Front End",
        "UI",
        "ELK Building",
        "Used IBM Integration Bus IIB",
        "J2EE Software",
        "SVN",
        "Eureka Ribbon Hystrix Zuul Edge",
        "java platform Extensive",
        "Restful Web Services",
        "Tomcat",
        "IBM Websphere",
        "REST",
        "Oracle Used Jenkins",
        "Drop",
        "Created TypeScript",
        "NoSQL",
        "Amazon web Services AWS",
        "Html CSS JavaScript",
        "Monitoring",
        "Single Page Application",
        "Developed NodeJS Readable and Writable",
        "HTML CSS Bootstrap",
        "Node"
    ],
    "experience": "Experience in developing Front End components UI using JSP JSF Primefaces JSTL JavaScript JQuery AJAX AngularJS Angular 2 Angular 4 NodeJS HTML5 CSS3SaSSLESS and Bootstrap for projects based on java platform Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Experience building cloud native app with Spring Framework and Spring Boot Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native micro services using Spring cloud and Spring Boot Extensive working experience on migrating the large enterprise systems into Cloud Native Architecture model Experienced in developing micro services using Java Spring Boot and Golang with Docker deployments Hands on experience in the implementation of Core Java SE 8 concepts like Streams API Lambda functions Generics Time API Functional Interfaces Multithreading Transaction Management Exception Handling and Collection API Built the Docker images using Docker Tool and pushed the images to Dockyard Repository and deployed the payload using JSON files in different AWS Environments using Jenkins Expertise in spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP IBM BPM Java J2EE Servlets EJB JPA Websphere Commerce Hibernate Spring Framework Jasper Reports Server Extjs JSP JMS Struts XML Eclipse NetBeans Jquery Visual Source Safe CVS SVN JDBC JNDI ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Webflow Spring Data JPA JSF ICEfaces HTML5 and Java Scripts Experience in JUnit Mockito Spock TestNg for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Verizon Wireless Bakersfield CA Full Stack Java Developer July 2018 Present Responsibilities Used Java8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Used code Code Development Tools Eclipse Intellij Visual Studio Code Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied Angularjs to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Developing LTSS application using JAVA 8 Spring 50 Rules BPMN Angular Java script 4 HTML 50 CSS Mongo Db PLSQL Tomcat Web Server Docker WebLogic AS Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Building and Deploying the application using the Continues integration CI tools like Bitbucket bamboo and JIRA and also using Tomcat server Working on next generation of services API Spring Boot Swagger Rest Apigee Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Cucumber Enabled swagger for all micros services to publish the contracts Worked on Securing WebSphere Portal with LDAP and DB2 WebSphere with LDAP Used Oracle database for SQL PLSQL scripts stored procedures functions and triggers Developed the application using Oracle DB for storing data to the server Build and configure WebSphere Portal components including navigation menu and content view portlets Involved in deploying the ESL portal application on IBM Websphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to uploadpost filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using JQuery Angularjs Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Involved OAuth 20 configuration for authentication authorization Developed Pig Scripts Pig UDF and Hive Scripts Hive UDFs to analyze HDFS data Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Ribbon Hystrix Zuul Edge proxy and Monitoring and centralized log analyses ELK Used Junit Cucumber for Spring Protractor for Angular Mocha and Chai for React Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Involved in using React JS components Forms Events Keys Router Animations and Flux concept Worked on Angular 2040 Components ngModules Services observablepromises Directive and Pipes Worked on React JS components forms events routers and Redux asynchronous functions Designed and developed asynchronous RESTful Microservices using Spring boot Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite To integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel Worked with Karma Jasmine Mocha and Chau testing frameworks to perform unit testing Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Successfully deployed and compiled many of the applications using Web Sphere Application Server Web Logic Application Server Nginx proxy webserver JBoss and Apache Tomcat Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented continuous deployment system with Jenkins CodeDeploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB Angularjs Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular 2 to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container Amazon Seattle Washington Full Stack Java Developer January 2016 to June 2017 Responsibilities Client Communication on a daily basis to discuss on sprint stories and project status Responsible for creating efficient design and developing User Interaction screens using HTML 5 CSS3 JavaScript Bootstrap Reactjs Redux MongoDB Implemented Hibernate ORM tool integration with Spring MVC to interact with back end persistence system Oracle Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Worked on collection API Multithreading and Java 8 Features and other Java Concepts Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Created Angular2 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the events decorators Defined new validations through AngularJS for the form field validation implemented through HTML5 Implemented Angular Router to enable navigation from one view to the next as agent performs application tasks Used IBM WebSphere Studio Application Developer WSAD as the IDE for writing code Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs and Redux Used various predefined components from NPM Node Package Manager and redux library to create user interaction screens Used React JS components Forms Events Keys Router Animations and Flux concept for page creation Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Wrote code for consuming a Restful Web service with AngularJS And created dynamic and interactive Data visualizations with D3 charts and AngularJS Used ReactDraggable to develop the Drag and Drop functionality Used React JS for templating for faster compilation and developing reusable components Utilized React for its efficient data flow architecture to create a lightweight and render efficient web app that searched projects via the GitHub API through keywords Worked with Express JS for development of RESTful web services and middleware configurations Strong experience with Axios AJAX to pull the data from the REST API and issued HTTP requests to interact with REST endpoints Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Developed single application to render dynamically based on the JSON from the Node JS server Used configuration file and Node JS at backend to interact with MongoDB using Mongoose connector Developed NodeJS Readable and Writable streams to process the data from the external source of the application Developed the application as a Spring Boot App to get range of nonfunctional features Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Worked on CrossBrowser Compatibility and tested each every web application on popular web browsers such as Internet Explorer Firefox Safari Opera and Chrome Extensively used Git for version controlling and regularly pushed the code to GitHub Worked on NoSQL database MongoDB and developed custom MongoDB applications as per the client specification Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Apache Kafka to build data pipeline for developing producers and customers Used Chai Mocha and Gulp for developing test cases for unit integration and functional testing Interacted with Testing Team Scrum Masters and Business Analysts for fixing of Issues BNY Mellon New York India FULLSTACK Java DEVELOPER September 2013 to December 2015 Responsibilities Developed the Service Oriented Architecture application using Spring MVC and AngularJS as User Interface view Client Communication on a daily basis to discuss on sprint stories and project status Responsible for ensuring the pattern consistency across all pages Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 jQuery AJAX and JSON Used Quick build and Jenkins for the CICD of different applications Extensively used Java 18 features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Angular JS to develop a single page application Design and Develop user interfaces using flex in eclipse Created two way binding Angular JS components and provide access to the serverside through Backbones API from Backbone Model and Backbone Collection Developed Single Container Applications by writing the code in AngularJS Created TypeScript reusable components and services to consume REST APIs using Component based architecture provided by angular 2 Built SPA with loading multiple views using route services using Angular and NodeJS Existing JavaScript code conversion into MVC pattern using Angular JS framework Responsible for all clientside UI Validation and implementing Business logic based on user selection using jQuery jQuery UI and Angular JS Integrated the Java code API in JSP Pages Used Hibernate EH Cache technique for the critical objects in the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using Hibernate Session Manager functionality to provide independent database connectivity Integrated Hibernate with Spring STS to interact with database security JSP tags to provide UI level spring security Developed Restful web services using ApacheCXF which would be available for other local OSGI bundles Used IBM MQ for the integration of components Developed of SOAP Web services using Apache Axis to extract client related data from databases Built REST API endpoints for various concepts using JAX RS API Ensured timely Sprint Delivery with no Spillover tasks Stored the external stream of data into Apache Cassandra for building real time analytics dashboard using Google Charts API with Angular JS components Work Experience Full Stack Java Developer Verizon Wireless Bakersfield CA April 2018 to Present Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native microservices using Spring cloud and Spring Boot Worked on backend services with Golang and accomplished essential unit test designed and developed the Golang backend for the next version of adsGO Full Stack Java Developer Amazon Seattle WA January 2016 to June 2017 Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations Designed a web application to query raw JSON files for Data Analysis Team Developed the frontend by Html CSS JavaScript backend by Golang and Apache Drill Java DEVELOPER FULLSTACK September 2013 to December 2015 Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Hands on experience with build tools like ANT Maven Gradle and logging tools like Log4J Education Bachelors in btech RGPV Indore Madhya Pradesh Skills Angular Java Node Python Javascript Angularjs React XML SQL HTML Linux jQuery Java 8 AWS Python AngularJS Reactjs Nodejs JavaScript MAVEN MVC Hibernate HTML5 CSS3 Spring SPRINGBOOT Spring cloud UML Wireframes Microservices JSON jquery Soap Rest UI Testing Kafka Scala Spring MVC Cloud Foundry ORMSQS SNS CICD RDS EC2 Redshift mysql RESTful oRACLE sql nosql Ajax Kubernetes GCP Backbonejs Mongo DB JenkinsS3 EBS VPC ELB RDS APICloud Watch IBM FrameworkStruts JUnit test case Golang Apache Drill Web services JSP JSF and XML IBM WebSphere MQ SESSNS SPA Multithreading Express backend D3 frontend Apache Tomcat 4x and WebLogic WebSphere servers MEAN MERN Elastic SOLR",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Verizon",
        "Wireless",
        "Bakersfield",
        "CA",
        "years",
        "experience",
        "software",
        "development",
        "life",
        "cycle",
        "requirement",
        "analysis",
        "design",
        "testing",
        "debugging",
        "maintenance",
        "Experience",
        "Front",
        "End",
        "components",
        "UI",
        "JSP",
        "JSF",
        "Primefaces",
        "JSTL",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Angular",
        "Angular",
        "NodeJS",
        "HTML5",
        "CSS3SaSSLESS",
        "Bootstrap",
        "projects",
        "platform",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "Front",
        "Experience",
        "cloud",
        "app",
        "Spring",
        "Framework",
        "Spring",
        "Boot",
        "features",
        "Hibernate",
        "Struts",
        "Spring",
        "framework",
        "projects",
        "MVC",
        "architecture",
        "native",
        "micro",
        "services",
        "Spring",
        "cloud",
        "Spring",
        "Boot",
        "working",
        "experience",
        "enterprise",
        "systems",
        "Cloud",
        "Native",
        "Architecture",
        "model",
        "micro",
        "services",
        "Java",
        "Spring",
        "Boot",
        "Golang",
        "Docker",
        "deployments",
        "Hands",
        "experience",
        "implementation",
        "Core",
        "Java",
        "SE",
        "concepts",
        "Streams",
        "API",
        "Lambda",
        "functions",
        "Generics",
        "Time",
        "API",
        "Functional",
        "Interfaces",
        "Multithreading",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Collection",
        "API",
        "Docker",
        "images",
        "Docker",
        "Tool",
        "images",
        "Dockyard",
        "Repository",
        "payload",
        "files",
        "AWS",
        "Environments",
        "Jenkins",
        "Expertise",
        "spring",
        "framework",
        "Spring",
        "IoC",
        "Spring",
        "DAO",
        "support",
        "Spring",
        "ORM",
        "Spring",
        "Microservices",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Spring",
        "MVC",
        "Spring",
        "Cache",
        "Spring",
        "Integration",
        "Spring",
        "Boot",
        "Spring",
        "REST",
        "Expertise",
        "applications",
        "Restful",
        "Web",
        "Services",
        "SOAP",
        "IBM",
        "BPM",
        "Java",
        "J2EE",
        "Servlets",
        "EJB",
        "JPA",
        "Websphere",
        "Commerce",
        "Hibernate",
        "Spring",
        "Framework",
        "Jasper",
        "Reports",
        "Server",
        "Extjs",
        "JSP",
        "JMS",
        "Struts",
        "XML",
        "Eclipse",
        "NetBeans",
        "Jquery",
        "Visual",
        "Source",
        "Safe",
        "CVS",
        "SVN",
        "JDBC",
        "JNDI",
        "ANT",
        "Maven",
        "IReport",
        "Apache",
        "Tiles",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Webflow",
        "Spring",
        "Data",
        "JPA",
        "JSF",
        "ICEfaces",
        "HTML5",
        "Java",
        "Scripts",
        "Experience",
        "JUnit",
        "Mockito",
        "Spock",
        "TestNg",
        "unit",
        "testing",
        "Selenium",
        "Web",
        "Driver",
        "Cucumber",
        "Behavior",
        "Driven",
        "Development",
        "testing",
        "Integration",
        "testing",
        "Verizon",
        "Wireless",
        "Bakersfield",
        "CA",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "July",
        "Present",
        "Responsibilities",
        "Java8",
        "features",
        "code",
        "Lambda",
        "expressions",
        "resource",
        "classes",
        "documents",
        "database",
        "code",
        "Code",
        "Development",
        "Tools",
        "Eclipse",
        "Intellij",
        "Visual",
        "Studio",
        "Code",
        "design",
        "development",
        "J2SE",
        "J2EE",
        "Software",
        "developer",
        "platform",
        "development",
        "processes",
        "Software",
        "Development",
        "life",
        "cycle",
        "SDLC",
        "Implementation",
        "markup",
        "project",
        "HTML",
        "CSS",
        "Bootstrap",
        "modules",
        "application",
        "Angularjs",
        "user",
        "interface",
        "API",
        "calls",
        "data",
        "IBM",
        "Integration",
        "Bus",
        "IIB",
        "TSQL",
        "procedures",
        "Java",
        "component",
        "custom",
        "business",
        "logic",
        "LTSS",
        "application",
        "JAVA",
        "Spring",
        "Rules",
        "BPMN",
        "Angular",
        "Java",
        "script",
        "HTML",
        "CSS",
        "Mongo",
        "Db",
        "PLSQL",
        "Tomcat",
        "Web",
        "Server",
        "Docker",
        "WebLogic",
        "Create",
        "Maven",
        "pomxml",
        "files",
        "Jenkins",
        "CI",
        "build",
        "engineers",
        "Building",
        "application",
        "Continues",
        "integration",
        "CI",
        "tools",
        "Bitbucket",
        "bamboo",
        "JIRA",
        "Tomcat",
        "server",
        "generation",
        "services",
        "API",
        "Spring",
        "Boot",
        "Swagger",
        "Rest",
        "Apigee",
        "Developing",
        "Applications",
        "JavaJ2EE",
        "technologies",
        "Cassandra",
        "Java",
        "Junit",
        "Cucumber",
        "swagger",
        "micros",
        "services",
        "contracts",
        "Securing",
        "WebSphere",
        "Portal",
        "LDAP",
        "DB2",
        "WebSphere",
        "LDAP",
        "Oracle",
        "database",
        "SQL",
        "PLSQL",
        "procedures",
        "functions",
        "triggers",
        "application",
        "Oracle",
        "DB",
        "data",
        "server",
        "Build",
        "configure",
        "WebSphere",
        "Portal",
        "components",
        "navigation",
        "menu",
        "content",
        "view",
        "portlets",
        "ESL",
        "application",
        "IBM",
        "Websphere",
        "server",
        "SAML",
        "SSO",
        "login",
        "web",
        "service",
        "OAuth",
        "user",
        "application",
        "job",
        "dependencies",
        "workflow",
        "Oozie",
        "resource",
        "management",
        "YARN",
        "NPM",
        "package",
        "manager",
        "tools",
        "templates",
        "directives",
        "Angular",
        "filesimages",
        "AWS",
        "S3",
        "browser",
        "Frontend",
        "NPM",
        "package",
        "AWSSDK",
        "JPA",
        "Hibernate",
        "mapping",
        "persistence",
        "data",
        "DAO",
        "classes",
        "data",
        "access",
        "component",
        "JPA",
        "tool",
        "entities",
        "database",
        "serverside",
        "web",
        "applications",
        "Nodejs",
        "Construction",
        "UI",
        "JQuery",
        "Angularjs",
        "Ext",
        "JS",
        "ReactJS",
        "Bootstrap",
        "JavaScript",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "NodeJS",
        "ReactJS",
        "UI",
        "controls",
        "APIs",
        "ExtJS",
        "framework",
        "components",
        "Web",
        "JavaScript",
        "library",
        "ExtJS",
        "ReactRouter",
        "application",
        "Single",
        "Page",
        "Application",
        "Spark",
        "API",
        "Cloudera",
        "Hadoop",
        "YARN",
        "analytics",
        "data",
        "Hive",
        "Involved",
        "OAuth",
        "configuration",
        "authentication",
        "authorization",
        "Developed",
        "Pig",
        "Scripts",
        "Pig",
        "UDF",
        "Hive",
        "Scripts",
        "Hive",
        "UDFs",
        "HDFS",
        "data",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Eureka",
        "Ribbon",
        "Hystrix",
        "Zuul",
        "Edge",
        "proxy",
        "Monitoring",
        "log",
        "ELK",
        "Junit",
        "Cucumber",
        "Spring",
        "Protractor",
        "Angular",
        "Mocha",
        "Chai",
        "React",
        "Deployment",
        "Automation",
        "microservices",
        "image",
        "Docker",
        "registry",
        "Kubernetes",
        "Cluster",
        "Installed",
        "Kafka",
        "manager",
        "consumer",
        "logs",
        "Kafka",
        "Metrics",
        "topics",
        "Partitions",
        "analytics",
        "purpose",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "Angular",
        "Components",
        "ngModules",
        "Services",
        "Directive",
        "Pipes",
        "React",
        "JS",
        "components",
        "forms",
        "events",
        "routers",
        "Redux",
        "functions",
        "Microservices",
        "Spring",
        "boot",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Eureka",
        "Service",
        "Discovery",
        "Server",
        "Ribbon",
        "Dynamic",
        "Routing",
        "Load",
        "Balancer",
        "Hystrix",
        "Circuit",
        "Breaker",
        "Zuul",
        "Edge",
        "proxy",
        "Monitoring",
        "log",
        "ELK",
        "Building",
        "dashboard",
        "applications",
        "visualization",
        "analytics",
        "Apache",
        "Web",
        "servers",
        "Elastic",
        "Search",
        "Logstash",
        "Kibana",
        "ELK",
        "D3JS",
        "Grafana",
        "Splunk",
        "Graphite",
        "enterprise",
        "application",
        "technologies",
        "JVM",
        "environment",
        "integration",
        "tools",
        "Spring",
        "Integration",
        "Mule",
        "ESB",
        "Apache",
        "CXF",
        "Apache",
        "Kafka",
        "Apache",
        "Camel",
        "Worked",
        "Karma",
        "Jasmine",
        "Mocha",
        "Chau",
        "testing",
        "frameworks",
        "unit",
        "testing",
        "Orchestration",
        "container",
        "Kubernetes",
        "load",
        "tasks",
        "computer",
        "cluster",
        "load",
        "balancers",
        "API",
        "services",
        "applications",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Nginx",
        "proxy",
        "webserver",
        "JBoss",
        "Apache",
        "Tomcat",
        "version",
        "control",
        "software",
        "SVN",
        "GIT",
        "GIT",
        "LAB",
        "CVS",
        "Big",
        "Bucket",
        "code",
        "repositories",
        "deployment",
        "system",
        "Jenkins",
        "CodeDeploy",
        "Ops",
        "Works",
        "Packer",
        "deployment",
        "Java",
        "Applications",
        "Spring",
        "MVC",
        "framework",
        "interactions",
        "JSPView",
        "layer",
        "design",
        "patterns",
        "J2EE",
        "XML",
        "technology",
        "transactions",
        "Spring",
        "Declarative",
        "Transaction",
        "Management",
        "JAXB",
        "SAXP",
        "XML",
        "Schema",
        "data",
        "XML",
        "format",
        "data",
        "XML",
        "format",
        "database",
        "development",
        "components",
        "Hibernate",
        "Spring",
        "data",
        "DB",
        "SOA",
        "Integration",
        "service",
        "Data",
        "Integration",
        "Service",
        "Functional",
        "Integration",
        "Service",
        "SOAPUI",
        "testing",
        "inspection",
        "invocation",
        "Spring",
        "Web",
        "services",
        "components",
        "architecture",
        "core",
        "Java",
        "design",
        "patterns",
        "factory",
        "method",
        "factory",
        "pattern",
        "Singleton",
        "Applications",
        "REST",
        "Web",
        "services",
        "decision",
        "services",
        "BRMS",
        "JRules",
        "framework",
        "search",
        "system",
        "MongoDB",
        "Angularjs",
        "Java",
        "Servlets",
        "JUnit",
        "Maven",
        "Microservices",
        "protocols",
        "HTTP",
        "REST",
        "SOAP",
        "application",
        "Amazon",
        "web",
        "Services",
        "AWS",
        "Cloud",
        "Computing",
        "EC2",
        "Elastic",
        "Container",
        "Services",
        "ECS",
        "instances",
        "Angular",
        "custom",
        "components",
        "application",
        "pages",
        "Project",
        "migration",
        "cloud",
        "environment",
        "AWS",
        "Docker",
        "container",
        "Amazon",
        "Seattle",
        "Washington",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "January",
        "June",
        "Responsibilities",
        "Client",
        "Communication",
        "basis",
        "sprint",
        "stories",
        "project",
        "status",
        "design",
        "User",
        "Interaction",
        "screens",
        "HTML",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "Reactjs",
        "Redux",
        "Hibernate",
        "ORM",
        "tool",
        "integration",
        "Spring",
        "MVC",
        "end",
        "persistence",
        "system",
        "Oracle",
        "Jenkins",
        "CICD",
        "applications",
        "Jenkins",
        "script",
        "automation",
        "build",
        "jobs",
        "collection",
        "API",
        "Multithreading",
        "Java",
        "Features",
        "Java",
        "Concepts",
        "React",
        "JS",
        "Virtual",
        "Dom",
        "React",
        "views",
        "components",
        "components",
        "custom",
        "HTML",
        "tags",
        "Angular2",
        "components",
        "Interpolation",
        "input",
        "variables",
        "Bootstrapping",
        "NgFor",
        "NgIf",
        "Router",
        "Outlet",
        "events",
        "decorators",
        "validations",
        "form",
        "field",
        "validation",
        "HTML5",
        "Angular",
        "Router",
        "navigation",
        "view",
        "agent",
        "application",
        "tasks",
        "IBM",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "WSAD",
        "IDE",
        "code",
        "Redux",
        "Framework",
        "architecture",
        "Reducers",
        "Containers",
        "Saga",
        "data",
        "ReactNative",
        "Application",
        "Reducers",
        "Actions",
        "Store",
        "State",
        "Tree",
        "design",
        "ISOMORPHIC",
        "website",
        "Tablets",
        "users",
        "Reactjs",
        "Redux",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "redux",
        "library",
        "user",
        "interaction",
        "screens",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "page",
        "creation",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "redux",
        "library",
        "Wrote",
        "code",
        "Restful",
        "Web",
        "service",
        "Data",
        "visualizations",
        "D3",
        "charts",
        "AngularJS",
        "ReactDraggable",
        "Drag",
        "Drop",
        "functionality",
        "React",
        "JS",
        "compilation",
        "components",
        "React",
        "data",
        "flow",
        "architecture",
        "lightweight",
        "web",
        "app",
        "projects",
        "GitHub",
        "API",
        "keywords",
        "Express",
        "JS",
        "development",
        "web",
        "services",
        "middleware",
        "configurations",
        "experience",
        "Axios",
        "AJAX",
        "data",
        "REST",
        "API",
        "HTTP",
        "requests",
        "REST",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "Node",
        "JS",
        "application",
        "JSON",
        "Node",
        "JS",
        "server",
        "configuration",
        "file",
        "Node",
        "JS",
        "backend",
        "MongoDB",
        "Mongoose",
        "connector",
        "NodeJS",
        "Writable",
        "streams",
        "data",
        "source",
        "application",
        "application",
        "Spring",
        "Boot",
        "App",
        "range",
        "features",
        "JMS",
        "SPRING",
        "BOOT",
        "instance",
        "MQ",
        "Deployed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Spring",
        "CloudNetflix",
        "OSS",
        "Stack",
        "Ribbon",
        "load",
        "Netflix",
        "Zuul",
        "Api",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "CrossBrowser",
        "Compatibility",
        "web",
        "application",
        "web",
        "browsers",
        "Internet",
        "Explorer",
        "Firefox",
        "Safari",
        "Opera",
        "Chrome",
        "Git",
        "version",
        "code",
        "GitHub",
        "NoSQL",
        "database",
        "MongoDB",
        "custom",
        "MongoDB",
        "applications",
        "client",
        "specification",
        "Configured",
        "mongoconnector",
        "pipeline",
        "MongoDB",
        "cluster",
        "synchronize",
        "sources",
        "Elastic",
        "Search",
        "MongoDB",
        "cluster",
        "Apache",
        "Kafka",
        "data",
        "pipeline",
        "producers",
        "customers",
        "Chai",
        "Mocha",
        "Gulp",
        "test",
        "cases",
        "unit",
        "integration",
        "testing",
        "Testing",
        "Team",
        "Scrum",
        "Masters",
        "Business",
        "Analysts",
        "Issues",
        "BNY",
        "Mellon",
        "New",
        "York",
        "India",
        "FULLSTACK",
        "Java",
        "DEVELOPER",
        "September",
        "December",
        "Responsibilities",
        "Service",
        "Oriented",
        "Architecture",
        "application",
        "Spring",
        "MVC",
        "AngularJS",
        "User",
        "Interface",
        "Client",
        "Communication",
        "basis",
        "sprint",
        "stories",
        "project",
        "status",
        "pattern",
        "consistency",
        "pages",
        "design",
        "User",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3",
        "jQuery",
        "AJAX",
        "JSON",
        "Quick",
        "build",
        "Jenkins",
        "CICD",
        "applications",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "Angular",
        "JS",
        "page",
        "application",
        "Design",
        "Develop",
        "user",
        "interfaces",
        "eclipse",
        "way",
        "JS",
        "components",
        "access",
        "serverside",
        "Backbones",
        "API",
        "Backbone",
        "Model",
        "Backbone",
        "Collection",
        "Developed",
        "Single",
        "Container",
        "Applications",
        "code",
        "Created",
        "TypeScript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "SPA",
        "loading",
        "views",
        "route",
        "services",
        "Angular",
        "NodeJS",
        "Existing",
        "JavaScript",
        "code",
        "conversion",
        "MVC",
        "pattern",
        "Angular",
        "JS",
        "framework",
        "UI",
        "Validation",
        "Business",
        "logic",
        "user",
        "selection",
        "jQuery",
        "jQuery",
        "UI",
        "Angular",
        "JS",
        "Integrated",
        "Java",
        "code",
        "API",
        "JSP",
        "Pages",
        "Used",
        "Hibernate",
        "EH",
        "Cache",
        "technique",
        "objects",
        "application",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Configured",
        "data",
        "source",
        "Hibernate",
        "Session",
        "Manager",
        "functionality",
        "database",
        "connectivity",
        "Integrated",
        "Hibernate",
        "Spring",
        "STS",
        "database",
        "security",
        "JSP",
        "tags",
        "UI",
        "level",
        "spring",
        "security",
        "Developed",
        "Restful",
        "web",
        "services",
        "ApacheCXF",
        "OSGI",
        "bundles",
        "IBM",
        "MQ",
        "integration",
        "components",
        "SOAP",
        "Web",
        "services",
        "Apache",
        "Axis",
        "client",
        "data",
        "databases",
        "REST",
        "API",
        "endpoints",
        "concepts",
        "JAX",
        "RS",
        "API",
        "Sprint",
        "Delivery",
        "Spillover",
        "tasks",
        "stream",
        "data",
        "Apache",
        "Cassandra",
        "time",
        "analytics",
        "dashboard",
        "Google",
        "Charts",
        "API",
        "Angular",
        "JS",
        "components",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Verizon",
        "Wireless",
        "Bakersfield",
        "CA",
        "April",
        "Present",
        "knowledge",
        "JavaScript",
        "Unit",
        "testing",
        "Jasmin",
        "Karma",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Backbone",
        "JS",
        "features",
        "Hibernate",
        "Struts",
        "Spring",
        "framework",
        "projects",
        "MVC",
        "architecture",
        "microservices",
        "Spring",
        "cloud",
        "Spring",
        "Boot",
        "services",
        "Golang",
        "unit",
        "test",
        "Golang",
        "backend",
        "version",
        "adsGO",
        "Stack",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "January",
        "June",
        "development",
        "components",
        "teams",
        "directives",
        "grid",
        "pagination",
        "validations",
        "web",
        "application",
        "files",
        "Data",
        "Analysis",
        "Team",
        "frontend",
        "Html",
        "CSS",
        "JavaScript",
        "backend",
        "Golang",
        "Apache",
        "Drill",
        "Java",
        "DEVELOPER",
        "FULLSTACK",
        "September",
        "December",
        "knowledge",
        "JavaScript",
        "Unit",
        "testing",
        "Jasmin",
        "Karma",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Backbone",
        "JS",
        "Hands",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Gradle",
        "tools",
        "Education",
        "Bachelors",
        "btech",
        "RGPV",
        "Indore",
        "Madhya",
        "Pradesh",
        "Skills",
        "Angular",
        "Java",
        "Node",
        "Python",
        "Javascript",
        "Angularjs",
        "React",
        "XML",
        "SQL",
        "HTML",
        "Linux",
        "jQuery",
        "Java",
        "AWS",
        "Python",
        "Reactjs",
        "Nodejs",
        "JavaScript",
        "MAVEN",
        "MVC",
        "Hibernate",
        "HTML5",
        "CSS3",
        "Spring",
        "SPRINGBOOT",
        "Spring",
        "cloud",
        "UML",
        "Wireframes",
        "Microservices",
        "jquery",
        "Soap",
        "Rest",
        "UI",
        "Testing",
        "Kafka",
        "Scala",
        "Spring",
        "MVC",
        "Cloud",
        "Foundry",
        "SNS",
        "CICD",
        "RDS",
        "EC2",
        "Redshift",
        "mysql",
        "nosql",
        "Ajax",
        "Kubernetes",
        "GCP",
        "Backbonejs",
        "Mongo",
        "DB",
        "EBS",
        "VPC",
        "ELB",
        "RDS",
        "APICloud",
        "Watch",
        "IBM",
        "FrameworkStruts",
        "JUnit",
        "test",
        "case",
        "Golang",
        "Apache",
        "Drill",
        "Web",
        "services",
        "JSP",
        "JSF",
        "XML",
        "IBM",
        "WebSphere",
        "MQ",
        "SESSNS",
        "SPA",
        "Multithreading",
        "Express",
        "backend",
        "D3",
        "Apache",
        "Tomcat",
        "4x",
        "WebLogic",
        "WebSphere",
        "servers",
        "MERN",
        "Elastic",
        "SOLR"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:38:04.124010",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Verizon Wireless Bakersfield CA Around 5 years of experience in full software development life cycle including requirement analysis design coding testing debugging and maintenance Experience in developing Front End components UI using JSP JSF Primefaces JSTL JavaScript JQuery AJAX AngularJS Angular 2 Angular 4 NodeJS HTML5 CSS3SaSSLESS and Bootstrap for projects based on java platform Extensive experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Experience building cloud native app with Spring Framework and Spring Boot Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native micro services using Spring cloud and Spring Boot Extensive working experience on migrating the large enterprise systems into Cloud Native Architecture model Experienced in developing micro services using Java Spring Boot and Golang with Docker deployments Hands on experience in the implementation of Core Java SE 8 concepts like Streams API Lambda functions Generics Time API Functional Interfaces Multithreading Transaction Management Exception Handling and Collection API Built the Docker images using Docker Tool and pushed the images to Dockyard Repository and deployed the payload using JSON files in different AWS Environments using Jenkins Expertise in spring framework including Spring IoC Spring DAO support Spring ORM Spring Microservices Spring AOP Spring Security Spring MVC Spring Cache Spring Integration Spring Boot and Spring REST Expertise in Developing applications using Restful Web Services SOAP IBM BPM Java J2EE Servlets EJB JPA Websphere Commerce Hibernate Spring Framework Jasper Reports Server Extjs JSP JMS Struts XML Eclipse NetBeans Jquery Visual Source Safe CVS SVN JDBC JNDI ANT Maven IReport Apache Tiles Spring Batch Spring Security Spring Webflow Spring Data JPA JSF ICEfaces HTML5 and Java Scripts Experience in JUnit Mockito Spock TestNg for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Verizon Wireless Bakersfield CA Full Stack Java Developer July 2018 Present Responsibilities Used Java8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Used code Code Development Tools Eclipse Intellij Visual Studio Code Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied Angularjs to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Developing LTSS application using JAVA 8 Spring 50 Rules BPMN Angular Java script 4 HTML 50 CSS Mongo Db PLSQL Tomcat Web Server Docker WebLogic AS Create Maven pomxml files and integrated with Jenkins CI worked closely with build engineers Building and Deploying the application using the Continues integration CI tools like Bitbucket bamboo and JIRA and also using Tomcat server Working on next generation of services API Spring Boot Swagger Rest Apigee Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Cucumber Enabled swagger for all micros services to publish the contracts Worked on Securing WebSphere Portal with LDAP and DB2 WebSphere with LDAP Used Oracle database for SQL PLSQL scripts stored procedures functions and triggers Developed the application using Oracle DB for storing data to the server Build and configure WebSphere Portal components including navigation menu and content view portlets Involved in deploying the ESL portal application on IBM Websphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to uploadpost filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using JQuery Angularjs Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Involved OAuth 20 configuration for authentication authorization Developed Pig Scripts Pig UDF and Hive Scripts Hive UDFs to analyze HDFS data Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Ribbon Hystrix Zuul Edge proxy and Monitoring and centralized log analyses ELK Used Junit Cucumber for Spring Protractor for Angular Mocha and Chai for React Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Involved in using React JS components Forms Events Keys Router Animations and Flux concept Worked on Angular 2040 Components ngModules Services observablepromises Directive and Pipes Worked on React JS components forms events routers and Redux asynchronous functions Designed and developed asynchronous RESTful Microservices using Spring boot Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite To integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel Worked with Karma Jasmine Mocha and Chau testing frameworks to perform unit testing Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Successfully deployed and compiled many of the applications using Web Sphere Application Server Web Logic Application Server Nginx proxy webserver JBoss and Apache Tomcat Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented continuous deployment system with Jenkins CodeDeploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB Angularjs Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular 2 to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container Amazon Seattle Washington Full Stack Java Developer January 2016 to June 2017 Responsibilities Client Communication on a daily basis to discuss on sprint stories and project status Responsible for creating efficient design and developing User Interaction screens using HTML 5 CSS3 JavaScript Bootstrap Reactjs Redux MongoDB Implemented Hibernate ORM tool integration with Spring MVC to interact with back end persistence system Oracle Used Jenkins for the CICD of different applications and wrote Jenkins groovy script for automation of build jobs Worked on collection API Multithreading and Java 8 Features and other Java Concepts Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Created Angular2 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the events decorators Defined new validations through AngularJS for the form field validation implemented through HTML5 Implemented Angular Router to enable navigation from one view to the next as agent performs application tasks Used IBM WebSphere Studio Application Developer WSAD as the IDE for writing code Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs and Redux Used various predefined components from NPM Node Package Manager and redux library to create user interaction screens Used React JS components Forms Events Keys Router Animations and Flux concept for page creation Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Wrote code for consuming a Restful Web service with AngularJS And created dynamic and interactive Data visualizations with D3 charts and AngularJS Used ReactDraggable to develop the Drag and Drop functionality Used React JS for templating for faster compilation and developing reusable components Utilized React for its efficient data flow architecture to create a lightweight and render efficient web app that searched projects via the GitHub API through keywords Worked with Express JS for development of RESTful web services and middleware configurations Strong experience with Axios AJAX to pull the data from the REST API and issued HTTP requests to interact with REST endpoints Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Developed single application to render dynamically based on the JSON from the Node JS server Used configuration file and Node JS at backend to interact with MongoDB using Mongoose connector Developed NodeJS Readable and Writable streams to process the data from the external source of the application Developed the application as a Spring Boot App to get range of nonfunctional features Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Worked on CrossBrowser Compatibility and tested each every web application on popular web browsers such as Internet Explorer Firefox Safari Opera and Chrome Extensively used Git for version controlling and regularly pushed the code to GitHub Worked on NoSQL database MongoDB and developed custom MongoDB applications as per the client specification Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Apache Kafka to build data pipeline for developing producers and customers Used Chai Mocha and Gulp for developing test cases for unit integration and functional testing Interacted with Testing Team Scrum Masters and Business Analysts for fixing of Issues BNY Mellon New York India FULLSTACK Java DEVELOPER September 2013 to December 2015 Responsibilities Developed the Service Oriented Architecture application using Spring MVC and AngularJS as User Interface view Client Communication on a daily basis to discuss on sprint stories and project status Responsible for ensuring the pattern consistency across all pages Responsible for creating efficient design and developing User Interaction screens using HTML5 CSS3 jQuery AJAX and JSON Used Quick build and Jenkins for the CICD of different applications Extensively used Java 18 features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Angular JS to develop a single page application Design and Develop user interfaces using flex in eclipse Created two way binding Angular JS components and provide access to the serverside through Backbones API from Backbone Model and Backbone Collection Developed Single Container Applications by writing the code in AngularJS Created TypeScript reusable components and services to consume REST APIs using Component based architecture provided by angular 2 Built SPA with loading multiple views using route services using Angular and NodeJS Existing JavaScript code conversion into MVC pattern using Angular JS framework Responsible for all clientside UI Validation and implementing Business logic based on user selection using jQuery jQuery UI and Angular JS Integrated the Java code API in JSP Pages Used Hibernate EH Cache technique for the critical objects in the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using Hibernate Session Manager functionality to provide independent database connectivity Integrated Hibernate with Spring STS to interact with database security JSP tags to provide UI level spring security Developed Restful web services using ApacheCXF which would be available for other local OSGI bundles Used IBM MQ for the integration of components Developed of SOAP Web services using Apache Axis to extract client related data from databases Built REST API endpoints for various concepts using JAX RS API Ensured timely Sprint Delivery with no Spillover tasks Stored the external stream of data into Apache Cassandra for building real time analytics dashboard using Google Charts API with Angular JS components Work Experience Full Stack Java Developer Verizon Wireless Bakersfield CA April 2018 to Present Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Extensively utilized the features provided by Hibernate Struts and Spring framework in various projects for MVC architecture and develop cloud native microservices using Spring cloud and Spring Boot Worked on backend services with Golang and accomplished essential unit test designed and developed the Golang backend for the next version of adsGO Full Stack Java Developer Amazon Seattle WA January 2016 to June 2017 Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations Designed a web application to query raw JSON files for Data Analysis Team Developed the frontend by Html CSS JavaScript backend by Golang and Apache Drill Java DEVELOPER FULLSTACK September 2013 to December 2015 Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS Hands on experience with build tools like ANT Maven Gradle and logging tools like Log4J Education Bachelors in btech RGPV Indore Madhya Pradesh Skills Angular Java Node Python Javascript Angularjs React XML SQL HTML Linux jQuery Java 8 AWS Python AngularJS Reactjs Nodejs JavaScript MAVEN MVC Hibernate HTML5 CSS3 Spring SPRINGBOOT Spring cloud UML Wireframes Microservices JSON jquery Soap Rest UI Testing Kafka Scala Spring MVC Cloud Foundry ORMSQS SNS CICD RDS EC2 Redshift mysql RESTful oRACLE sql nosql Ajax Kubernetes GCP Backbonejs Mongo DB JenkinsS3 EBS VPC ELB RDS APICloud Watch IBM FrameworkStruts JUnit test case Golang Apache Drill Web services JSP JSF and XML IBM WebSphere MQ SESSNS SPA Multithreading Express backend D3 frontend Apache Tomcat 4x and WebLogic WebSphere servers MEAN MERN Elastic SOLR",
    "unique_id": "7b288db5-0a14-4dff-b149-c6f7523dd750"
}