{
    "clean_data": "Full Stack Python Developer Full Stack span lPythonspan span lDeveloperspan Full Stack Python Developer SOAP REST Work Experience Full Stack Python Developer SOAP REST November 2018 to Present with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Full Stack Python Developer JP Morgan Chase co November 2018 to present Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Working with AWS is the interesting part of it putty is used launching the Instance hands on Azure Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience in deployment automation and related tooling Terraform AWS Cloud Formation or similar Worked on deployment on AWS EC2 instance with Postgres RDS and S3 file storage Worked as C Application developer for Credit RiskAddon project involved in the coding and testing phase Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Scripting in PowerShell and Python Experience with systems and IT operations monitoring operations is involved Using Service to manage tickets as well as building backend automation Handling tools such as GITHUB Urban Code Deployment SVN Jenkins and Maven Dockers Automating the tasks using Ansible playbooks Shell scripting and Python Provisioned and patched servers regularly using Ansible Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations created various modules and Manifests in Ansible to automate various applications Implemented code to perform CURD operations on Mongo DB using MongoDB module Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used Agile methodology for developing application Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations Developed Processes Tools Automation for Jenkins based Software for Build system and delivering SW Builds Developed a Nifi Workflow to pick up the data from SFTP server and send that to Kafka broker Loaded DStream data into Spark RDD and did inmemory data computation to generate output response Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Created Python and Bash tools to increase efficiency of call center application system using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Python Developer Barclays July 2012 to December 2016 Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution databases security groups and application configuration Perform S3 buckets creation policies and IAM rolebased policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Deploy applications on AWS by using Elastic Beanstalk Migrated applications to the AWS cloud Using Django evolution and manual SQL modifications I was involved to modify Django models while retaining all data while site was in production mode Worked closely with designer tightly integrating Flash into the CMS with in the Django models Also created XML with Django to be used by the Flash Involved in maintaining and editing Python scripts for application deployment automation Created AWS Route53 to route traffic between different regions Deployed cloud stack using AWS OpsWorks Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed software in C ProC using MQ series API to establish communication between Clients and AMEX servers By using pandas and NumPy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Used Cloud Front to deliver content from AWS edge locations to users allowing for further reduction of load on frontend server Using AWS SDK built tools that automated AWS server provisioning automated application deployments and implemented basic failover between regions Wrote python script that uses Front Arena API to update additional information such as client code and fund code on portfolios and trades Involved in the Design development test deploy and maintenance of the website Wrote Python scripts to parse XML documents and load the data in database Responsible for debugging the project monitored on JIRA Agile Designed and created backend data access modules using PLSQL stored procedures and Oracle Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Analyzing errors and exceptions using putty logs UNIX etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Responsible for debugging and troubleshooting the web application Utilized Agile process and JIRA issue management to track sprint cycles Developed tested and debugged software tools utilized by clients and internal customers Education MTech University of North Texas 2018 Additional Information Skills CSS HTML JavaScript jQuery Python Python Scripting TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C R Perl Ruby Scripting languages CSS JavaScript AJAX Python Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Databases Oracle My SQL query languages PLSQL MongoDB IDEs Tools Eclipse Toad Sublime text Spyder Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT P",
    "entities": [
        "C Application",
        "WebSphere",
        "Data ImportExport",
        "Pandas",
        "GITHUB Urban Code Deployment SVN Jenkins",
        "API Integration Responsible",
        "ETL",
        "CRUD",
        "AWS Simple Storage Service S3",
        "Developed",
        "Bash",
        "Developed Processes Tools Automation for Jenkins",
        "Leveraged AWS",
        "IAM",
        "Jython",
        "Dynatrace",
        "Created Python",
        "Customer",
        "Django",
        "Python Provisioned",
        "AWS",
        "AMEX",
        "JavaScript",
        "Windows",
        "Java Script JSP CSS",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Microsoft",
        "Oracle Created",
        "Life Cycles",
        "Implemented TFS Build Archival",
        "Credit RiskAddon",
        "Created AWS Route53",
        "Education MTech University of North Texas 2018",
        "Postgres RDS",
        "S3 Implemented",
        "CMS",
        "WebSphere MQ Series Administrations",
        "Terraform AWS Cloud Formation",
        "Linux",
        "Microsoft Excel Super",
        "MQ series API",
        "SQL",
        "DStream",
        "SOAP",
        "Spark RDD",
        "PowerShell",
        "XML",
        "lPythonspan",
        "Utilized Agile",
        "JIRA",
        "Software Development Life Cycle SDLC",
        "RDS",
        "Shell",
        "ELB CloudFront",
        "Maven Dockers Automating",
        "Angular JS",
        "the Flash Involved",
        "Agile"
    ],
    "experience": "Experience Full Stack Python Developer SOAP REST November 2018 to Present with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Full Stack Python Developer JP Morgan Chase co November 2018 to present Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Working with AWS is the interesting part of it putty is used launching the Instance hands on Azure Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience in deployment automation and related tooling Terraform AWS Cloud Formation or similar Worked on deployment on AWS EC2 instance with Postgres RDS and S3 file storage Worked as C Application developer for Credit RiskAddon project involved in the coding and testing phase Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Scripting in PowerShell and Python Experience with systems and IT operations monitoring operations is involved Using Service to manage tickets as well as building backend automation Handling tools such as GITHUB Urban Code Deployment SVN Jenkins and Maven Dockers Automating the tasks using Ansible playbooks Shell scripting and Python Provisioned and patched servers regularly using Ansible Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations created various modules and Manifests in Ansible to automate various applications Implemented code to perform CURD operations on Mongo DB using MongoDB module Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used Agile methodology for developing application Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations Developed Processes Tools Automation for Jenkins based Software for Build system and delivering SW Builds Developed a Nifi Workflow to pick up the data from SFTP server and send that to Kafka broker Loaded DStream data into Spark RDD and did inmemory data computation to generate output response Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Created Python and Bash tools to increase efficiency of call center application system using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Python Developer Barclays July 2012 to December 2016 Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution databases security groups and application configuration Perform S3 buckets creation policies and IAM rolebased policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Deploy applications on AWS by using Elastic Beanstalk Migrated applications to the AWS cloud Using Django evolution and manual SQL modifications I was involved to modify Django models while retaining all data while site was in production mode Worked closely with designer tightly integrating Flash into the CMS with in the Django models Also created XML with Django to be used by the Flash Involved in maintaining and editing Python scripts for application deployment automation Created AWS Route53 to route traffic between different regions Deployed cloud stack using AWS OpsWorks Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed software in C ProC using MQ series API to establish communication between Clients and AMEX servers By using pandas and NumPy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Used Cloud Front to deliver content from AWS edge locations to users allowing for further reduction of load on frontend server Using AWS SDK built tools that automated AWS server provisioning automated application deployments and implemented basic failover between regions Wrote python script that uses Front Arena API to update additional information such as client code and fund code on portfolios and trades Involved in the Design development test deploy and maintenance of the website Wrote Python scripts to parse XML documents and load the data in database Responsible for debugging the project monitored on JIRA Agile Designed and created backend data access modules using PLSQL stored procedures and Oracle Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Analyzing errors and exceptions using putty logs UNIX etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Responsible for debugging and troubleshooting the web application Utilized Agile process and JIRA issue management to track sprint cycles Developed tested and debugged software tools utilized by clients and internal customers Education MTech University of North Texas 2018 Additional Information Skills CSS HTML JavaScript jQuery Python Python Scripting TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C R Perl Ruby Scripting languages CSS JavaScript AJAX Python Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Databases Oracle My SQL query languages PLSQL MongoDB IDEs Tools Eclipse Toad Sublime text Spyder Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT P",
    "extracted_keywords": [
        "Stack",
        "Python",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "SOAP",
        "REST",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "SOAP",
        "REST",
        "November",
        "Present",
        "SOAPXML",
        "format",
        "messages",
        "Experience",
        "building",
        "web",
        "services",
        "SOAP",
        "REST",
        "API",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "co",
        "November",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "auto",
        "scaling",
        "systems",
        "load",
        "servers",
        "TFS",
        "Build",
        "Archival",
        "AWS",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Life",
        "Cycles",
        "files",
        "S3",
        "cloud",
        "alarm",
        "Ec2",
        "instances",
        "AWS",
        "part",
        "Instance",
        "hands",
        "Azure",
        "Developed",
        "Python",
        "ETL",
        "scripts",
        "data",
        "web",
        "sites",
        "load",
        "data",
        "MySQL",
        "DB",
        "Experience",
        "deployment",
        "automation",
        "tooling",
        "Terraform",
        "AWS",
        "Cloud",
        "Formation",
        "Worked",
        "deployment",
        "AWS",
        "EC2",
        "instance",
        "Postgres",
        "RDS",
        "S3",
        "file",
        "storage",
        "C",
        "Application",
        "developer",
        "Credit",
        "RiskAddon",
        "project",
        "testing",
        "phase",
        "modules",
        "Python",
        "MongoDB",
        "PyMongo",
        "CRUD",
        "operations",
        "Scripting",
        "PowerShell",
        "Python",
        "Experience",
        "systems",
        "IT",
        "operations",
        "operations",
        "Service",
        "tickets",
        "automation",
        "Handling",
        "tools",
        "GITHUB",
        "Urban",
        "Code",
        "Deployment",
        "SVN",
        "Jenkins",
        "Maven",
        "Dockers",
        "tasks",
        "playbooks",
        "Shell",
        "scripting",
        "Python",
        "servers",
        "Ansible",
        "Experience",
        "Playbooks",
        "Ansible",
        "preproduction",
        "environments",
        "middleware",
        "installations",
        "modules",
        "Manifests",
        "Ansible",
        "applications",
        "code",
        "CURD",
        "operations",
        "Mongo",
        "DB",
        "module",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "Administer",
        "WebSphere",
        "Message",
        "Broker",
        "WebSphere",
        "MQ",
        "Series",
        "Administrations",
        "Windows",
        "Linux",
        "environment",
        "Experience",
        "Playbooks",
        "Ansible",
        "preproduction",
        "environments",
        "middleware",
        "installations",
        "Developed",
        "Processes",
        "Tools",
        "Automation",
        "Jenkins",
        "Software",
        "Build",
        "system",
        "SW",
        "Builds",
        "Nifi",
        "Workflow",
        "data",
        "server",
        "Kafka",
        "broker",
        "Loaded",
        "DStream",
        "data",
        "Spark",
        "RDD",
        "data",
        "computation",
        "output",
        "response",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Integrated",
        "pages",
        "JS",
        "jquery",
        "pages",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "Java",
        "Script",
        "JSP",
        "CSS",
        "issues",
        "Python",
        "code",
        "code",
        "enhancements",
        "code",
        "python",
        "libraries",
        "Jython",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Python",
        "Developer",
        "Barclays",
        "July",
        "December",
        "Created",
        "Python",
        "scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "CloudFront",
        "distribution",
        "security",
        "groups",
        "application",
        "configuration",
        "Perform",
        "S3",
        "creation",
        "policies",
        "IAM",
        "policies",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "auto",
        "scaling",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "web",
        "pages",
        "HTML5CSS3",
        "Bootstrap",
        "XMLJSON",
        "REST",
        "web",
        "Deploy",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "applications",
        "AWS",
        "cloud",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "designer",
        "Flash",
        "CMS",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Python",
        "scripts",
        "application",
        "deployment",
        "automation",
        "AWS",
        "Route53",
        "traffic",
        "regions",
        "cloud",
        "stack",
        "AWS",
        "OpsWorks",
        "APIs",
        "thirdparty",
        "data",
        "analysis",
        "representation",
        "data",
        "Pandas",
        "data",
        "Sort",
        "data",
        "histograms",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "software",
        "C",
        "ProC",
        "MQ",
        "series",
        "API",
        "communication",
        "Clients",
        "AMEX",
        "servers",
        "pandas",
        "NumPy",
        "libraries",
        "scripts",
        "ETL",
        "operations",
        "CSV",
        "JSON",
        "types",
        "files",
        "file",
        "types",
        "database",
        "consumption",
        "Cloud",
        "Front",
        "content",
        "AWS",
        "edge",
        "locations",
        "users",
        "reduction",
        "load",
        "frontend",
        "server",
        "AWS",
        "SDK",
        "tools",
        "AWS",
        "server",
        "application",
        "deployments",
        "failover",
        "regions",
        "Wrote",
        "python",
        "script",
        "Front",
        "Arena",
        "API",
        "information",
        "client",
        "code",
        "fund",
        "code",
        "portfolios",
        "trades",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "project",
        "JIRA",
        "Agile",
        "Designed",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "data",
        "charts",
        "Customer",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "loadendurance",
        "tests",
        "Vugen",
        "ALM",
        "controller",
        "server",
        "monitoring",
        "analysis",
        "Dynatrace",
        "UNIX",
        "putty",
        "SQL",
        "logs",
        "tools",
        "performance",
        "errors",
        "exceptions",
        "putty",
        "logs",
        "UNIX",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "SQL",
        "MongoDB",
        "NoSQL",
        "campaign",
        "errors",
        "web",
        "application",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "software",
        "tools",
        "clients",
        "customers",
        "Education",
        "MTech",
        "University",
        "North",
        "Texas",
        "Additional",
        "Information",
        "Skills",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Python",
        "Python",
        "Scripting",
        "TECHNICAL",
        "SKILLS",
        "Operating",
        "systems",
        "Windows",
        "Linux",
        "Ubuntu",
        "Languages",
        "Java",
        "C",
        "C",
        "R",
        "Perl",
        "Ruby",
        "Scripting",
        "CSS",
        "JavaScript",
        "AJAX",
        "Python",
        "Script",
        "jQuery",
        "PHP",
        "Shell",
        "Scripting",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "NodeXL",
        "MVC3",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Oracle",
        "SQL",
        "query",
        "PLSQL",
        "MongoDB",
        "IDEs",
        "Tools",
        "Eclipse",
        "Toad",
        "Sublime",
        "text",
        "Spyder",
        "Methodologies",
        "tools",
        "Programming",
        "UML",
        "Agile",
        "Scrum",
        "MS",
        "office",
        "tools",
        "Microsoft",
        "Excel",
        "Super",
        "user",
        "Microsoft",
        "word",
        "Microsoft",
        "PowerPoint",
        "PPT",
        "P"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:09:24.534950",
    "resume_data": "Full Stack Python Developer Full Stack span lPythonspan span lDeveloperspan Full Stack Python Developer SOAP REST Work Experience Full Stack Python Developer SOAP REST November 2018 to Present with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Full Stack Python Developer JP Morgan Chase co November 2018 to present Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Working with AWS is the interesting part of it putty is used launching the Instance hands on Azure Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience in deployment automation and related tooling Terraform AWS Cloud Formation or similar Worked on deployment on AWS EC2 instance with Postgres RDS and S3 file storage Worked as C Application developer for Credit RiskAddon project involved in the coding and testing phase Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Scripting in PowerShell and Python Experience with systems and IT operations monitoring operations is involved Using Service to manage tickets as well as building backend automation Handling tools such as GITHUB Urban Code Deployment SVN Jenkins and Maven Dockers Automating the tasks using Ansible playbooks Shell scripting and Python Provisioned and patched servers regularly using Ansible Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations created various modules and Manifests in Ansible to automate various applications Implemented code to perform CURD operations on Mongo DB using MongoDB module Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used Agile methodology for developing application Administer WebSphere Message Broker and WebSphere MQ Series Administrations in Windows and Linux environment Experience writing Playbooks using Ansible to provision several preproduction environments and several proprietary middleware installations Developed Processes Tools Automation for Jenkins based Software for Build system and delivering SW Builds Developed a Nifi Workflow to pick up the data from SFTP server and send that to Kafka broker Loaded DStream data into Spark RDD and did inmemory data computation to generate output response Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Created Python and Bash tools to increase efficiency of call center application system using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Python Developer Barclays July 2012 to December 2016 Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution databases security groups and application configuration Perform S3 buckets creation policies and IAM rolebased policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Deploy applications on AWS by using Elastic Beanstalk Migrated applications to the AWS cloud Using Django evolution and manual SQL modifications I was involved to modify Django models while retaining all data while site was in production mode Worked closely with designer tightly integrating Flash into the CMS with in the Django models Also created XML with Django to be used by the Flash Involved in maintaining and editing Python scripts for application deployment automation Created AWS Route53 to route traffic between different regions Deployed cloud stack using AWS OpsWorks Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Developed software in C ProC using MQ series API to establish communication between Clients and AMEX servers By using pandas and NumPy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Used Cloud Front to deliver content from AWS edge locations to users allowing for further reduction of load on frontend server Using AWS SDK built tools that automated AWS server provisioning automated application deployments and implemented basic failover between regions Wrote python script that uses Front Arena API to update additional information such as client code and fund code on portfolios and trades Involved in the Design development test deploy and maintenance of the website Wrote Python scripts to parse XML documents and load the data in database Responsible for debugging the project monitored on JIRA Agile Designed and created backend data access modules using PLSQL stored procedures and Oracle Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Analyzing errors and exceptions using putty logs UNIX etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Responsible for debugging and troubleshooting the web application Utilized Agile process and JIRA issue management to track sprint cycles Developed tested and debugged software tools utilized by clients and internal customers Education MTech University of North Texas 2018 Additional Information Skills CSS HTML JavaScript jQuery Python Python Scripting TECHNICAL SKILLS Operating systems Windows Linux Ubuntu Languages Java C C R Perl Ruby Scripting languages CSS JavaScript AJAX Python Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET NodeXL MVC3 Markup languages HTML XML JSON Databases Oracle My SQL query languages PLSQL MongoDB IDEs Tools Eclipse Toad Sublime text Spyder Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPT P",
    "unique_id": "71c49fb5-0a75-48f7-be00-67c50205a5ca"
}