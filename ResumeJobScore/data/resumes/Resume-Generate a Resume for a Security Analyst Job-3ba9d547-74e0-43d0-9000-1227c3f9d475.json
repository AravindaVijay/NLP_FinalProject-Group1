{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Starmount Life Baton Rouge LA Work Eperience Java Developer Starmount Life Baton Rouge LA October 2018 to Present Description Starmount Life Insurance Company is part of the Unum Group We offer consumer driven insurance solutions in group dental and vision products With a customized approach to valuable coverage options that promote physical and financial wellness we help our members to protect their tomorrows by planning today Responsibilities Involved in all phases of Software Development Life Cycle SDLC including analysis design development and testing of the project Used Spring Boot to create standalone spring applications Used Eclipse Integrated Development Environment for coding debugging and testing the application modules Involved in developing of presentation layer for the application modules using Angular JS2 XHTML HTML5 JQuery AJAX and CSS Designed and developed Microservices business components using Spring Boot Knowledge in creation of Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 2 Implemented Spring Boot services in combination with Angular as front end to form a Microservice Oriented application Angular JS was used to parse the JSON file using the REST Web services Configured Spring based Microservices and Spring Boot Used ObjectRelational mapping tool Hibernate and JPA to achieve object to database table persistency Developed Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Configured SwaggerUI registered Micro service with Eureka server to monitor service health check from Spring Boot admin console Analyze and fi issues related to REST Web services and Application responses Implemented the backend services using SpringBoot Worked on developing REST Services to epose the processed data as a service Eperience in working with NoSQL Mongo DB and Apache Cassandra Implemented Spring Security and Spring transactions in the applications Worked on Swagger REST with JSON to test data and Postman for testing the Web Services and Documentation of the Web API Eperienced on spring framework applications like Spring Core Spring AOP Spring MVC Spring Batch Spring Security and Spring Boot and did integration to Micro services into eisting system architecture Involved in the configuration of Spring Framework and Hibernate mapping tool Configured MQ Queues and Topics to publish messages to topics and consume published messages Worked with Docker to deploy Microservices in modern containers to increase Isolation Eperience with Spring Ribbon and Kafka broker service to handle heavy traffic Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework Developed communication between different applications using MQ Series JMS and Spring Integration Configured and monitored numerous Cassandras NoSQL instances Deployment of micro services via AWS Beanstalk and Lambda Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Etensively followed Test Driven Development to implement application business logic work flow process and integration of application modules Followed Pair Programming to analysis design development Integration Testing and deploy the applications Used XML XSD XPath and JAXB for message transformations and mappings Etensively followed agile Scrum methodology and XP to implement the application modules Configured and used Hudson Jenkins tools for continues integration and build and deploy the applications Used Maven for building and deploying the web application into WebSphere and configuring the dependency plugins and resources Wrote JUnit test cases for each line of the application code and performed validation Environment JavaJ2ee JSP SpringBoot Hibernate SOAP REST JAXRS JMS MQ Series SQL PLSQL JAXB XML HTML5 CSS JavaScript jQuery AJAX JSON AngularJS Eclipse JBoss Maven Neus AWS DB2 Kafka Cassandra Micro Services Autosys UML Agile XP Jenkins GitHub Stash JIRA Junit Log4j SOAPUI Uni shell Scripting Java Developer ATT California June 2014 to October 2018 Description ATT Inc is an American multinational conglomerate holding company It is the worlds largest telecommunications company the second largest provider of mobile telephone services and the largest provider of fied telephone services in the United States through ATT Communications Responsibilities Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Implemented Micro Services using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netfli Eureka Server Used S3 buckets to manage document management and RDS to host database Eperience with NoSQL databases like Cassandra and Mongo DB Created customized AMIs based on already eisting AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Optimized the full tet search function by connecting to NoSQL DB like MongoDB and Elastic search Implemented MongoDB database concepts such as locking transactions indees and replication Used Rabbit MQ queues for implementation of multithreaded synchronization processes using JMS queues for consumption requests Used Micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy micro services Involved in design and development of UI component using frameworks AngularJS JavaScript HTML CSS and Bootstrap Eperienced in using Kafka as a distributed publishersubscriber messaging system Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST and added security to SOAP through WS Security Eperience working in Kafka and Camel Used Spring Security for Authentication and authorization etensively Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Consumed REST based micro services with Rest Template based on RESTful APIs Used Docker for possible to production to the development environment to fast possible for interactive use Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs Created web services using Spring Rest Controller to return JSON to the frontend Developed serverside services using Java Spring Web Services SOAP RESTful WSDL JAXB JAXRPC Used SOAP UI tool for testing web services connectivity Environment Java J2EE Servletfilters JSP JSTL Springboot Microservices Spring Security Angular JS Cassandra JavaScript HTML CSS and Bootstrap REST Pivotal Cloud Foundry AWS EC2 S3 Netfli Eureka Rabbit MQ Kafka SOAP RESTful NoSQL Mongo DB Elastic Search STS MAVEN JUnit Jenkins Log4j JIRA Docker Git Java Developer BBVA Compass Plano TX March 2010 to June 2014 Description BBVA Compass Banking is one of the lists of largest banks in the United States As part of project my role is to develop web applications to meet the mortgage needs of client loan deposits Multi Loan deposits and Teller Referral Responsibilities Involved in gathering and analyzing business requirements and converting them into technical specifications Developed Class Diagrams Sequence Diagrams as part of Module Design Documentation Agile delivery of software using practices of short iterations scrum Involved in developing distributed transactional secure and portable applications based on Java technology using EJB technology Implemented the presentation layer using Spring framework Developed the JavaScript for ClientSide Validation Used Struts framework to develop the application based on a MVC design pattern Developed the User Interface using JSTL Custom Tag libraries HTMLXHTML JavaScript and CSS Used JDBC for database connectivity to SQL Server Java API including JDBC JAXP JDOM to query patent data from database and transfer the data into various formats SOAP has been used as a protocol to send request and response in form of XML messages WSDL has been used to epose the web services using Apache Ais Used J2EE design patterns like Service Locator Data Access Objects Factory pattern MVC and Singleton Pattern Created and consumed SOAPRestful Web Services The RESTful web services have been used to retrieve and update the data which is populated Implemented persistence layer using Hibernate that use the POJOs to represent the persistence database tables These POJOs are serialized Java Classes that would not have the business processes Implemented Hibernate using the Spring Framework Created the session Factory DAO and the hibernate transactions was implemented using spring framework Refactored the code to migrate from Hibernate2 version to Hibernate3  Ie moved from ml mapping to annotations Created LDAP services for user authentication and authorization Involve in JUnit Testing debugging and bug fiing Worked on Multithreading Participated in the discussion with business eperts to understand the business requirements and mold them into technical requirements toward development Designed UML diagrams using Rational Rose Built the functionality for the front end JSPs to take the data from the model as an XML and using XSLT to convert the XSL to HTML Prepared Test Cases for Integration Testing Used Java Message Service JMS for reliable and asynchronous echange of important information such as Loan and Teller application Designed and developed Message driven beans that consumed the messages from the Java message queue Deployed components to the development environment system test environment and UAT environment Used simple Maven projects and Maven Archetypes projects for developing applications and provided JAR files for UI application use Test Driven Development approach was used and was involved in writing many unit and integration test cases Environment Java JavaScript Spring 31 Hibernate 31 Struts 13 JSTL Custom Tag libraries HTML XHTML CSS JDBC JAXP JDOM PLSQL JMS Junit Rational Rose Maven Eclipse IDE SVN MySQLJBoss application server Education Bachelors",
    "entities": [
        "Spring Bootbased",
        "Angular",
        "XP",
        "Developed Hibernate POJO Classes Hibernate Configuration",
        "Description ATT Inc",
        "Component",
        "Used Eclipse Integrated Development Environment",
        "HTML Prepared Test Cases for Integration Testing Used",
        "Used Micro",
        "JSON",
        "Followed Pair Programming",
        "JAR",
        "SOAP",
        "XML",
        "SpringBoot Worked",
        "JUnit",
        "ATT Communications Responsibilities Implemented",
        "Shell",
        "TX",
        "Spring Boot",
        "WebSphere",
        "Singleton Pattern Created",
        "Multi Loan",
        "Java Spring Web Services SOAP RESTful WSDL",
        "Responsibilities Involved",
        "UML",
        "the Web Services and Documentation of the Web API Eperienced",
        "MQ",
        "Core",
        "Implemented Micro Services",
        "Apache Camel",
        "Micro",
        "the Unum Group",
        "RDS",
        "Refactored",
        "Hibernate3  Ie",
        "SOAPRestful Web Services",
        "STS",
        "MVC",
        "EJB",
        "GIT",
        "Deployment of micro services",
        "Created",
        "AWS",
        "Spring Ribbon",
        "Legacy Systems",
        "Implemented Hibernate",
        "California",
        "SQL",
        "GitHub",
        "Test Driven Development",
        "Module Design Documentation",
        "Isolation Eperience",
        "Kafka Cassandra Micro Services",
        "the United States",
        "Postman",
        "Typescript",
        "Camel Used Spring Security for Authentication",
        "Netfli",
        "Created LDAP",
        "REST Services",
        "Maven",
        "Hibernate Mapping",
        "NoSQL Mongo DB Elastic",
        "lJavaspan",
        "XSLT",
        "Loan",
        "XSL",
        "UI",
        "LA",
        "Java Developer Starmount Life Baton Rouge",
        "Angular 2 Implemented",
        "SVN",
        "Present Description Starmount Life Insurance Company",
        "Locator Data Access Objects Factory",
        "the Spring Framework Created",
        "Maven Archetypes",
        "REST",
        "Teller Referral Responsibilities Involved",
        "NoSQL",
        "WS Security Eperience",
        "Responsible for Continuous Integration CI",
        "Software Development Life Cycle",
        "Spring Framework and Hibernate",
        "CSS Designed",
        "Rest Template"
    ],
    "experience": "Education Bachelors",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Starmount",
        "Life",
        "Baton",
        "Rouge",
        "LA",
        "Work",
        "Eperience",
        "Java",
        "Developer",
        "Starmount",
        "Life",
        "Baton",
        "Rouge",
        "LA",
        "October",
        "Present",
        "Description",
        "Starmount",
        "Life",
        "Insurance",
        "Company",
        "part",
        "Unum",
        "Group",
        "consumer",
        "insurance",
        "solutions",
        "group",
        "vision",
        "products",
        "approach",
        "coverage",
        "options",
        "wellness",
        "members",
        "tomorrows",
        "today",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "analysis",
        "design",
        "development",
        "testing",
        "project",
        "Spring",
        "Boot",
        "spring",
        "applications",
        "Eclipse",
        "Integrated",
        "Development",
        "Environment",
        "application",
        "modules",
        "presentation",
        "layer",
        "application",
        "modules",
        "Angular",
        "JS2",
        "XHTML",
        "HTML5",
        "JQuery",
        "AJAX",
        "CSS",
        "Microservices",
        "business",
        "components",
        "Spring",
        "Boot",
        "Knowledge",
        "creation",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "Angular",
        "Spring",
        "Boot",
        "services",
        "combination",
        "Angular",
        "end",
        "Microservice",
        "application",
        "Angular",
        "JS",
        "file",
        "REST",
        "Web",
        "services",
        "Configured",
        "Spring",
        "Microservices",
        "Spring",
        "Boot",
        "mapping",
        "tool",
        "Hibernate",
        "JPA",
        "object",
        "database",
        "table",
        "persistency",
        "Developed",
        "Hibernate",
        "POJO",
        "Classes",
        "Hibernate",
        "Configuration",
        "file",
        "Hibernate",
        "Mapping",
        "files",
        "Configured",
        "SwaggerUI",
        "Micro",
        "service",
        "Eureka",
        "server",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "admin",
        "console",
        "Analyze",
        "fi",
        "issues",
        "REST",
        "Web",
        "services",
        "Application",
        "responses",
        "services",
        "SpringBoot",
        "Worked",
        "REST",
        "Services",
        "data",
        "service",
        "Eperience",
        "NoSQL",
        "Mongo",
        "DB",
        "Apache",
        "Cassandra",
        "Spring",
        "Security",
        "Spring",
        "transactions",
        "applications",
        "Swagger",
        "REST",
        "JSON",
        "data",
        "Postman",
        "Web",
        "Services",
        "Documentation",
        "Web",
        "API",
        "spring",
        "framework",
        "applications",
        "Spring",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "integration",
        "Micro",
        "services",
        "system",
        "architecture",
        "configuration",
        "Spring",
        "Framework",
        "Hibernate",
        "mapping",
        "tool",
        "MQ",
        "Queues",
        "Topics",
        "messages",
        "topics",
        "messages",
        "Docker",
        "Microservices",
        "containers",
        "Isolation",
        "Eperience",
        "Spring",
        "Ribbon",
        "Kafka",
        "broker",
        "service",
        "traffic",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Apache",
        "Camel",
        "Spring",
        "framework",
        "communication",
        "applications",
        "MQ",
        "Series",
        "JMS",
        "Spring",
        "Integration",
        "Configured",
        "Cassandras",
        "NoSQL",
        "Deployment",
        "micro",
        "services",
        "AWS",
        "Beanstalk",
        "Lambda",
        "DAOs",
        "data",
        "source",
        "Databases",
        "formats",
        "Kafka",
        "Streams",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "Test",
        "Driven",
        "Development",
        "application",
        "business",
        "logic",
        "work",
        "flow",
        "process",
        "integration",
        "application",
        "modules",
        "Pair",
        "Programming",
        "analysis",
        "design",
        "development",
        "Integration",
        "Testing",
        "applications",
        "XML",
        "XSD",
        "XPath",
        "JAXB",
        "message",
        "transformations",
        "mappings",
        "Scrum",
        "methodology",
        "XP",
        "application",
        "modules",
        "Hudson",
        "Jenkins",
        "tools",
        "integration",
        "applications",
        "Maven",
        "web",
        "application",
        "WebSphere",
        "dependency",
        "plugins",
        "resources",
        "Wrote",
        "JUnit",
        "test",
        "cases",
        "line",
        "application",
        "code",
        "validation",
        "Environment",
        "JavaJ2ee",
        "JSP",
        "SpringBoot",
        "Hibernate",
        "SOAP",
        "REST",
        "JAXRS",
        "JMS",
        "MQ",
        "Series",
        "SQL",
        "PLSQL",
        "XML",
        "HTML5",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "JSON",
        "Eclipse",
        "JBoss",
        "Maven",
        "Neus",
        "AWS",
        "DB2",
        "Kafka",
        "Cassandra",
        "Micro",
        "Services",
        "Autosys",
        "UML",
        "Agile",
        "XP",
        "Jenkins",
        "GitHub",
        "Stash",
        "JIRA",
        "Junit",
        "Log4j",
        "SOAPUI",
        "Uni",
        "shell",
        "Scripting",
        "Java",
        "Developer",
        "ATT",
        "California",
        "June",
        "October",
        "Description",
        "ATT",
        "Inc",
        "conglomerate",
        "company",
        "worlds",
        "telecommunications",
        "company",
        "provider",
        "telephone",
        "services",
        "provider",
        "telephone",
        "services",
        "United",
        "States",
        "ATT",
        "Communications",
        "Responsibilities",
        "business",
        "layer",
        "Core",
        "java",
        "Spring",
        "Beans",
        "dependency",
        "injection",
        "Spring",
        "annotations",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Microservices",
        "discovery",
        "Netfli",
        "Eureka",
        "Server",
        "S3",
        "buckets",
        "document",
        "management",
        "RDS",
        "database",
        "Eperience",
        "databases",
        "Cassandra",
        "Mongo",
        "DB",
        "AMIs",
        "AWS",
        "EC2",
        "instances",
        "image",
        "functionality",
        "snapshot",
        "disaster",
        "recovery",
        "tet",
        "search",
        "function",
        "NoSQL",
        "DB",
        "MongoDB",
        "search",
        "database",
        "concepts",
        "transactions",
        "indees",
        "replication",
        "Rabbit",
        "MQ",
        "queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "Micro",
        "service",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "MQ",
        "AWS",
        "test",
        "services",
        "design",
        "development",
        "UI",
        "component",
        "frameworks",
        "JavaScript",
        "HTML",
        "CSS",
        "Bootstrap",
        "Eperienced",
        "Kafka",
        "publishersubscriber",
        "system",
        "implementation",
        "enterprise",
        "integration",
        "Web",
        "Services",
        "Legacy",
        "Systems",
        "SOAP",
        "REST",
        "security",
        "WS",
        "Security",
        "Eperience",
        "Kafka",
        "Camel",
        "Spring",
        "Security",
        "Authentication",
        "authorization",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "GIT",
        "source",
        "control",
        "system",
        "Consumed",
        "REST",
        "micro",
        "services",
        "Rest",
        "Template",
        "APIs",
        "Docker",
        "development",
        "environment",
        "use",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "LINUX",
        "Shell",
        "scripts",
        "jobs",
        "web",
        "services",
        "Spring",
        "Rest",
        "Controller",
        "JSON",
        "frontend",
        "serverside",
        "services",
        "Java",
        "Spring",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "WSDL",
        "JAXB",
        "JAXRPC",
        "SOAP",
        "UI",
        "tool",
        "testing",
        "web",
        "services",
        "connectivity",
        "Environment",
        "Java",
        "J2EE",
        "Servletfilters",
        "JSP",
        "JSTL",
        "Springboot",
        "Microservices",
        "Spring",
        "Security",
        "Angular",
        "JS",
        "Cassandra",
        "JavaScript",
        "HTML",
        "CSS",
        "Bootstrap",
        "REST",
        "Cloud",
        "Foundry",
        "EC2",
        "S3",
        "Netfli",
        "Eureka",
        "Rabbit",
        "MQ",
        "Kafka",
        "SOAP",
        "NoSQL",
        "Mongo",
        "DB",
        "Elastic",
        "Search",
        "STS",
        "MAVEN",
        "JUnit",
        "Jenkins",
        "Log4j",
        "JIRA",
        "Docker",
        "Git",
        "Java",
        "Developer",
        "Compass",
        "Plano",
        "TX",
        "March",
        "June",
        "Description",
        "BBVA",
        "Compass",
        "Banking",
        "lists",
        "banks",
        "United",
        "States",
        "part",
        "project",
        "role",
        "web",
        "applications",
        "mortgage",
        "needs",
        "client",
        "loan",
        "deposits",
        "Multi",
        "Loan",
        "deposits",
        "Teller",
        "Referral",
        "Responsibilities",
        "business",
        "requirements",
        "specifications",
        "Developed",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "part",
        "Module",
        "Design",
        "Documentation",
        "Agile",
        "delivery",
        "software",
        "practices",
        "iterations",
        "applications",
        "Java",
        "technology",
        "EJB",
        "technology",
        "presentation",
        "layer",
        "Spring",
        "framework",
        "JavaScript",
        "ClientSide",
        "Validation",
        "Used",
        "Struts",
        "framework",
        "application",
        "MVC",
        "design",
        "pattern",
        "User",
        "Interface",
        "JSTL",
        "Custom",
        "Tag",
        "HTMLXHTML",
        "JavaScript",
        "CSS",
        "JDBC",
        "database",
        "connectivity",
        "SQL",
        "Server",
        "Java",
        "API",
        "JDBC",
        "JAXP",
        "JDOM",
        "patent",
        "data",
        "database",
        "data",
        "formats",
        "SOAP",
        "protocol",
        "request",
        "response",
        "form",
        "XML",
        "messages",
        "WSDL",
        "web",
        "services",
        "Apache",
        "Ais",
        "J2EE",
        "design",
        "patterns",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Factory",
        "pattern",
        "MVC",
        "Singleton",
        "Pattern",
        "SOAPRestful",
        "Web",
        "Services",
        "web",
        "services",
        "data",
        "persistence",
        "layer",
        "Hibernate",
        "POJOs",
        "persistence",
        "database",
        "POJOs",
        "Java",
        "Classes",
        "business",
        "processes",
        "Hibernate",
        "Spring",
        "Framework",
        "session",
        "Factory",
        "DAO",
        "hibernate",
        "transactions",
        "spring",
        "framework",
        "code",
        "Hibernate2",
        "version",
        "Hibernate3",
        "Ie",
        "ml",
        "mapping",
        "annotations",
        "LDAP",
        "services",
        "user",
        "authentication",
        "authorization",
        "Involve",
        "JUnit",
        "Testing",
        "debugging",
        "bug",
        "Multithreading",
        "Participated",
        "discussion",
        "business",
        "eperts",
        "business",
        "requirements",
        "requirements",
        "development",
        "UML",
        "diagrams",
        "Rational",
        "Rose",
        "functionality",
        "end",
        "JSPs",
        "data",
        "model",
        "XML",
        "XSLT",
        "XSL",
        "HTML",
        "Prepared",
        "Test",
        "Cases",
        "Integration",
        "Testing",
        "Java",
        "Message",
        "Service",
        "JMS",
        "echange",
        "information",
        "Loan",
        "Teller",
        "application",
        "Message",
        "beans",
        "messages",
        "Java",
        "message",
        "queue",
        "components",
        "development",
        "environment",
        "system",
        "test",
        "environment",
        "environment",
        "Maven",
        "projects",
        "Maven",
        "Archetypes",
        "projects",
        "applications",
        "JAR",
        "files",
        "UI",
        "application",
        "use",
        "Test",
        "Driven",
        "Development",
        "approach",
        "unit",
        "integration",
        "test",
        "cases",
        "Environment",
        "Java",
        "JavaScript",
        "Spring",
        "Hibernate",
        "Struts",
        "JSTL",
        "Custom",
        "Tag",
        "HTML",
        "XHTML",
        "CSS",
        "JDBC",
        "JAXP",
        "JDOM",
        "PLSQL",
        "JMS",
        "Junit",
        "Rational",
        "Rose",
        "Maven",
        "Eclipse",
        "IDE",
        "SVN",
        "MySQLJBoss",
        "application",
        "server",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:22:23.964975",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Starmount Life Baton Rouge LA Work Experience Java Developer Starmount Life Baton Rouge LA October 2018 to Present Description Starmount Life Insurance Company is part of the Unum Group We offer consumer driven insurance solutions in group dental and vision products With a customized approach to valuable coverage options that promote physical and financial wellness we help our members to protect their tomorrows by planning today Responsibilities Involved in all phases of Software Development Life Cycle SDLC including analysis design development and testing of the project Used Spring Boot to create standalone spring applications Used Eclipse Integrated Development Environment for coding debugging and testing the application modules Involved in developing of presentation layer for the application modules using Angular JS2 XHTML HTML5 JQuery AJAX and CSS Designed and developed Microservices business components using Spring Boot Knowledge in creation of Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 2 Implemented Spring Boot services in combination with Angular as front end to form a Microservice Oriented application Angular JS was used to parse the JSON file using the REST Web services Configured Spring based Microservices and Spring Boot Used ObjectRelational mapping tool Hibernate and JPA to achieve object to database table persistency Developed Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Configured SwaggerUI registered Micro service with Eureka server to monitor service health check from Spring Boot admin console Analyze and fix issues related to REST Web services and Application responses Implemented the backend services using SpringBoot Worked on developing REST Services to expose the processed data as a service Experience in working with NoSQL Mongo DB and Apache Cassandra Implemented Spring Security and Spring transactions in the applications Worked on Swagger REST with JSON to test data and Postman for testing the Web Services and Documentation of the Web API Experienced on spring framework applications like Spring Core Spring AOP Spring MVC Spring Batch Spring Security and Spring Boot and did integration to Micro services into existing system architecture Involved in the configuration of Spring Framework and Hibernate mapping tool Configured MQ Queues and Topics to publish messages to topics and consume published messages Worked with Docker to deploy Microservices in modern containers to increase Isolation Experience with Spring Ribbon and Kafka broker service to handle heavy traffic Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework Developed communication between different applications using MQ Series JMS and Spring Integration Configured and monitored numerous Cassandras NoSQL instances Deployment of micro services via AWS Beanstalk and Lambda Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Extensively followed Test Driven Development to implement application business logic work flow process and integration of application modules Followed Pair Programming to analysis design development Integration Testing and deploy the applications Used XML XSD XPath and JAXB for message transformations and mappings Extensively followed agile Scrum methodology and XP to implement the application modules Configured and used Hudson Jenkins tools for continues integration and build and deploy the applications Used Maven for building and deploying the web application into WebSphere and configuring the dependency plugins and resources Wrote JUnit test cases for each line of the application code and performed validation Environment JavaJ2ee JSP SpringBoot Hibernate SOAP REST JAXRS JMS MQ Series SQL PLSQL JAXB XML HTML5 CSS JavaScript jQuery AJAX JSON AngularJS Eclipse JBoss Maven Nexus AWS DB2 Kafka Cassandra Micro Services Autosys UML Agile XP Jenkins GitHub Stash JIRA Junit Log4j SOAPUI Unix shell Scripting Java Developer ATT California June 2014 to October 2018 Description ATT Inc is an American multinational conglomerate holding company It is the worlds largest telecommunications company the second largest provider of mobile telephone services and the largest provider of fixed telephone services in the United States through ATT Communications Responsibilities Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Implemented Micro Services using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka Server Used S3 buckets to manage document management and RDS to host database Experience with NoSQL databases like Cassandra and Mongo DB Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Optimized the full text search function by connecting to NoSQL DB like MongoDB and Elastic search Implemented MongoDB database concepts such as locking transactions indexes and replication Used Rabbit MQ queues for implementation of multithreaded synchronization processes using JMS queues for consumption requests Used Micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy micro services Involved in design and development of UI component using frameworks AngularJS JavaScript HTML CSS and Bootstrap Experienced in using Kafka as a distributed publishersubscriber messaging system Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST and added security to SOAP through WS Security Experience working in Kafka and Camel Used Spring Security for Authentication and authorization extensively Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Consumed REST based micro services with Rest Template based on RESTful APIs Used Docker for possible to production to the development environment to fast possible for interactive use Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs Created web services using Spring Rest Controller to return JSON to the frontend Developed serverside services using Java Spring Web Services SOAP RESTful WSDL JAXB JAXRPC Used SOAP UI tool for testing web services connectivity Environment Java J2EE Servletfilters JSP JSTL Springboot Microservices Spring Security Angular JS Cassandra JavaScript HTML CSS and Bootstrap REST Pivotal Cloud Foundry AWS EC2 S3 Netflix Eureka Rabbit MQ Kafka SOAP RESTful NoSQL Mongo DB Elastic Search STS MAVEN JUnit Jenkins Log4j JIRA Docker Git Java Developer BBVA Compass Plano TX March 2010 to June 2014 Description BBVA Compass Banking is one of the lists of largest banks in the United States As part of project my role is to develop web applications to meet the mortgage needs of client loan deposits Multi Loan deposits and Teller Referral Responsibilities Involved in gathering and analyzing business requirements and converting them into technical specifications Developed Class Diagrams Sequence Diagrams as part of Module Design Documentation Agile delivery of software using practices of short iterations scrum Involved in developing distributed transactional secure and portable applications based on Java technology using EJB technology Implemented the presentation layer using Spring framework Developed the JavaScript for ClientSide Validation Used Struts framework to develop the application based on a MVC design pattern Developed the User Interface using JSTL Custom Tag libraries HTMLXHTML JavaScript and CSS Used JDBC for database connectivity to SQL Server Java API including JDBC JAXP JDOM to query patent data from database and transfer the data into various formats SOAP has been used as a protocol to send request and response in form of XML messages WSDL has been used to expose the web services using Apache Axis Used J2EE design patterns like Service Locator Data Access Objects Factory pattern MVC and Singleton Pattern Created and consumed SOAPRestful Web Services The RESTful web services have been used to retrieve and update the data which is populated Implemented persistence layer using Hibernate that use the POJOs to represent the persistence database tables These POJOs are serialized Java Classes that would not have the business processes Implemented Hibernate using the Spring Framework Created the session Factory DAO and the hibernate transactions was implemented using spring framework Refactored the code to migrate from Hibernate2x version to Hibernate3 x Ie moved from xml mapping to annotations Created LDAP services for user authentication and authorization Involve in JUnit Testing debugging and bug fixing Worked on Multithreading Participated in the discussion with business experts to understand the business requirements and mold them into technical requirements toward development Designed UML diagrams using Rational Rose Built the functionality for the front end JSPs to take the data from the model as an XML and using XSLT to convert the XSL to HTML Prepared Test Cases for Integration Testing Used Java Message Service JMS for reliable and asynchronous exchange of important information such as Loan and Teller application Designed and developed Message driven beans that consumed the messages from the Java message queue Deployed components to the development environment system test environment and UAT environment Used simple Maven projects and Maven Archetypes projects for developing applications and provided JAR files for UI application use Test Driven Development approach was used and was involved in writing many unit and integration test cases Environment Java JavaScript Spring 31 Hibernate 31 Struts 13 JSTL Custom Tag libraries HTML XHTML CSS JDBC JAXP JDOM PLSQL JMS Junit Rational Rose Maven Eclipse IDE SVN MySQLJBoss application server Education Bachelors",
    "unique_id": "3ba9d547-74e0-43d0-9000-1227c3f9d475"
}