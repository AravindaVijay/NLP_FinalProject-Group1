{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Microsoft Corporation Tampa FL 4 years of work experience as a JavaJ2EE programmer developing applications using Servlets JSP JSTL EJB Struts spring JSF Java Beans JDBC JMS Hibernate and MVC architecture Worked on full Software Development Life Cycle SDLC which includes requirements analysis modeling design architecture development integration documentation testing and deployment Expertise in developing applications using Spring framework like Spring IOC Spring AOP Spring MVC Spring Data JPA Spring Data MongoDB Spring Security Spring Boot Spring Cloud etc Strong knowledge of Core Java technologies multithreading exception handling collection functional programming lambdas streams IO etc Used a Microservices architecture with Spring Bootbased services interacting through a REST Expertise in writing queries triggers sequence and stored procedures in major RDBMS including Oracle DB2 SQL Server and My SQL Outstanding knowledge of developing and consuming RESTful web services using JAXRS Jersey Spring Web MVC etc Experienced with developing SOAP web service and SOAP clients using JAX WS Spring WS WSDL JAXB Apache AXIS Experience in 3tier and Microservices architecture applications using Spring Boot AWS Rabbit MQ Kafka Zookeeper Cassandra My SQL Restful Web Services Familiar with various aspects of microservice architecture such as configuration server service registry or discovery server load balancing circuit breaker API gateway utilizing Netflix OSS such as Eureka Hystrix Ribbon Zuul Netflix Config Server etc Solid hands on with the implementation of application layer security for RESTful APIs using JWT Spring Security Extensive involvement in Frontend Web Application Development utilizing HTML CSS Bootstrap JavaScript Servlets JSP jQuery and AngularJS Experience with various build and CICD tools such as Maven Gradle Jenkins etc Used Git GitHub Bitbucket CVS and Subversion for version control Working knowledge with cloud computing such as AWS EC2 and microservice container deployment in Docker Extensively worked in Agile environment with the Project Management tools like TFS Confluence and Jira Great experience with logging and tracing application events and defects in various environment Involved in the frontend development using JSPs jQuery HTML AJAX CSS and JavaScript Experience in the functional usage and deployment of applications in JBoss Web Logic Web Sphere and Apache Tomcat Server Launched and configured Amazon EC2 AWS Cloud Servers using AMIs Linux and configuring the servers for specified applications Extensive experience in building the data layer using OR mapping technology such as Hibernate 30 Automated infrastructure in AWS using amazon web services Deploy Chef to completely provision and manage AWS EC2 instances volumes and S3 Work Experience Sr Java Developer Microsoft Corporation Tampa FL June 2018 to Present Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Resolving defects write unit tests using Junit and customize framework Maintained Interface compatibility and concurrency in the project using Java 8 new features like default static methods and Concurrency API Using Java 8 Method References feature to point to methods by their names and used functional Interfaces Implemented functionality like searching filtering sorting validating using Angular JS and Java Script Developing CICD tools Jenkins for fast paced robust application development environment Developed entity attribute descriptions definitions for data models and design database schema objects Implemented AJAX functionality using jQuery JSON and XML Modifying current database by adding tables altering referential integrity and relationships to support the control system Using Maven to compile the application build WAR files and deployment on the server Wrote clientside validations for DOJO and XML files which checks for the valid values for the different events that are being logged Implemented the backend business layers using Spring Beans and Web services Implementing and building web services in Docker Using Hibernate Framework for object relational mapping and persistence Using Spring Web MVC framework for implementation in the web application Used AngularJS 40 and BackboneJS for clientside validation Performed PLSQL code review and modification for the development of new requirements Involved in the development of frontend of the applications using HTML CSS Bootstrap and JavaScript frameworks Actively participating in code reviews scrums sprint planning reviews and retrospective meetings Applied CRUD operations on MySQL using JPA and JDBC to maintain user information Design tables views for various SQL queries stored procedures and functions Working with production support and operations teams to resolve production issues in a timely and efficient manner Wrote user stories in JIRA as per requirements and migrating the existed APIs into Spring Boot Spring Data and Spring Cloud technologies Integrated existing performance tools with Jenkins for CICD as part of DevOps Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Analyzed the Maven dependency management in the base code to annotate the dependencies on to Spring Boot application into Gradle for Micro Services Developed UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Responsible for setting up Angular framework for UI development Used Angular for DOM Manipulation Filters and Directives Developed Micro Services using Spring BOOT in various frame works to develop Spring Cloud for distributed systems and used for building or deploying and Spring Security for authorization and authentication support Using AWS Cloud Watch to monitor the application and to store the logging information Java Developer ATT Dallas TX October 2017 to May 2018 Responsibilities Implemented business logic data exchange and created graphics using JAVA struts and Spring MVC Used JAVA struts and Spring MVC to interface with the jQuery UI Bootstrap and manage the storage and deletion of content Developed the Web Based Rich Internet Application RIA using J2EE Spring framework and MacromediaAdobe Flex Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Worked on JSON for storing and exchanging information between browsers and Rest APIs and even worked on JSON data format for asynchronous browserserver communications Developed the web pages Java JavaScript jQuery backbone handlebar Mock ax Ember and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Used Nodejs as a proxy to interact with Rest services and interacting with Database Involved in writing application level code to interact with APIs Web Services using AJAX JSON and XML Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Developed Spring Boot based microservices in Docker and Amazon EC2 container using Jenkins Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Developed application using JavaScript AngularJS for frontend JPA RESTful web services MySQL for Backend and deployed in AWS Developed single page application by using AngularJs and ReactJS Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed Spring Integration application using Camel as route builder Spring Batch Spring JMS Spring JDBC Core AOP JPA JTA and Gradle as building tool Developed the webservices and analysis of SOAP envelope using SOAPUI Created Rest web services using JAXRS Hibernate framework Configured action mapping in XML for each logical request that may be submitted Seed Hibernate as Object Relational OR Mapping Tool for the backend data Used DOJO toolkit to construct Ajax requests and build dynamic web pages using JSP HTML5 and JavaScript Angular JS Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Worked with Angular JS to interact with a web service to render the page from data returned from the service Responsible for using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Developed softwares for AWS in Java 7 using Spring Framework MySQL AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented Kafka in java 8 along with Kafka stream topology Live stream events will be stored in MySQL and Cassandra through Kafka stream topology Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Used Axioms AJAX request to data from backend based on user interface input and post updated data back to backend Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Tested for Node JS is done using Mocha and chai and for spring boot used Mockito Junit mock MVC and thereby achieving Test Driven Development TDD Responsible for Scaled Agile Framework Methodology implementation and practices Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Java Developer Accenture Pune Maharashtra July 2014 to December 2016 Responsibilities Implemented Singleton factory design pattern DAO design Patterns based on the application requirements and Worked with SQL and NoSQL queries to interact with the MongoDB database Involved in the development and testing of web application and integration projects using Object Oriented technologies such as Java Struts JSP JDBC Spring Framework Java Used AngularJS to implement rich functionality in various pages form validation grid search sort pagination multiselection tagsinput advanced directives authentication serverside proxy unit tests cloud integration slide pages users switch etc Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Did Written test cases and done Unit testing execution with JASMINE and KARMA Selecting the appropriate AWS service based on compute data or security requirements Worked in Integration of Amazon Web Services AWS with other applications infrastructure Developed the web application using HTML CSS AJAX JSP JavaScript jQuery Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Developed the different components of the application such as JSP Servlets DAO and Used Sub Version SVN for version control Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Developed additional UI Components and implemented an asynchronous AJAX jQuery based rich client to improve customer experience Used Modules for the Frontend are integrated to Backend using Hibernate framework Built ANT scripts for automated deployment and for the build operation of the entire application Developed web pages using HTML5CSS and JavaScript Angular JS Developed many JSP pages used Dojo in JavaScript Library jQuery UI for clientside validation Implemented different machine learning techniques in Scala using Scala machine learning library and created POC using Spark SQL libraries Implemented SOA to develop Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed drag and drop document editing using React Js Used JSP HTML on front end and Servlets as front controllers and JavaScript for ClientSide validations Developed the application by implementing MVC Architecture using Spring MVC where servlets for Handling HTTP requests Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Performed Continuous Integration with Jenkins and Docker for build ship to run distributed applications Used java 8 streams lambdas and other functional programming concepts to implement good coding standards Installed configured and administrated NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL database Cassandra Implemented Spring Boot to create a CRUD backend for our Reactfronted application and automated test scenarios by writing java code and using selenium framework for cucumber testing Worked on MySQL database knowledge on writing CRUD queries and joint queries Followed Test Driven Development as well written JUnit test cases using JUnit and Mockito frameworks Involved in Unit Testing and BugFixing and achieved the maximum code coverage using JUNIT test cases Created the screens in JSP and written all Java scripts to perform the clientside validations Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Designed and developed Micro Services using MEAN Stack nodejs Mongo  Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Used the most popular streaming tool KAFKA to load the data on Hadoop File system and move the same data to MongoDB NoSQL database Education Bachelors in CS in CS Mumbai University Mumbai Maharashtra 2015 Masters New Jersey Institute of Technology Skills Javascript MySQL PHP CertificationsLicenses AWS Certified Developer 2018",
    "entities": [
        "Micro Services",
        "jQuery JSON",
        "Spring Controllers",
        "Spring Bootbased",
        "SOAPUI Created Rest",
        "Analysis Design Development System Testing",
        "Data Access Objects Worked",
        "Reactfronted",
        "AWS EC2 Analyzed",
        "AWS Developed",
        "Building",
        "the Development of Spring Framework Controllers",
        "Created Stacks",
        "ELB AutoScaling SNS SQS",
        "AJAX JSON",
        "Working",
        "Test Driven Development TDD Responsible",
        "CS",
        "CS Mumbai University",
        "Node JS Angular",
        "Mock ax Ember",
        "Camel",
        "SOAP",
        "XML",
        "Database Involved",
        "JIRA",
        "HTML CSS AJAX",
        "JUnit",
        "JavaJ2EE",
        "Amazon",
        "Spring Boot",
        "TX",
        "Gradle for Micro Services",
        "Hadoop File",
        "Oracle SQL Queries",
        "BugFixing",
        "AWS Infrastructure",
        "Dojo",
        "Dallas",
        "Followed Test Driven Development",
        "Mockito",
        "Directives Developed Micro Services",
        "Servlets",
        "Oracle DB2 SQL Server",
        "Jenkins Used Microservices",
        "Spring Security",
        "JSP",
        "Front Controller MVC Business Delegate Data",
        "Worked",
        "Applied CRUD",
        "Masters New Jersey Institute of Technology",
        "Docker",
        "AWS Console",
        "MVC",
        "java code",
        "Node JS",
        "Present Responsibilities Actively",
        "API",
        "Used SQL Server",
        "Created",
        "AWS",
        "API Integration Worked",
        "Frontend Web Application Development",
        "Scala",
        "Used Sub Version",
        "JavaScript Micro",
        "Interfaces Implemented",
        "Netflix",
        "the jQuery UI Bootstrap",
        "Performed Continuous Integration",
        "JAXRS Hibernate",
        "SQL",
        "the Project Management",
        "Amazon Web Services",
        "DevOps Responsible",
        "MVC Architecture",
        "Docker Using Hibernate Framework",
        "Worked in Integration",
        "J2EE Spring",
        "Developed Spring Integration",
        "CICD",
        "JUNIT",
        "UI Components",
        "JSP HTML5",
        "MEAN Stack nodejs Mongo  Neo4J",
        "CRUD",
        "JAVA",
        "Mockito Junit",
        "Maven",
        "Responsibilities Implemented Singleton",
        "Performed",
        "JASMINE",
        "lJavaspan",
        "Spark SQL",
        "Cisco",
        "JavaScript",
        "ANT",
        "JSP Servlets",
        "Backbonejs React",
        "jQuery HTML AJAX CSS",
        "SVN",
        "JWT Spring Security Extensive",
        "AWS Stack",
        "ATT",
        "Hibernate 30",
        "Maintained Interface",
        "Mongoose Connector",
        "REST",
        "Backend using Hibernate",
        "Spring RestfulMicroservices",
        "NoSQL",
        "Eureka Hystrix Ribbon Zuul",
        "AWS Cloud Services",
        "HTML CSS Bootstrap JavaScript Servlets",
        "DOJO",
        "KAFKA",
        "HTML CSS Bootstrap"
    ],
    "experience": "Experience in 3tier and Microservices architecture applications using Spring Boot AWS Rabbit MQ Kafka Zookeeper Cassandra My SQL Restful Web Services Familiar with various aspects of microservice architecture such as configuration server service registry or discovery server load balancing circuit breaker API gateway utilizing Netflix OSS such as Eureka Hystrix Ribbon Zuul Netflix Config Server etc Solid hands on with the implementation of application layer security for RESTful APIs using JWT Spring Security Extensive involvement in Frontend Web Application Development utilizing HTML CSS Bootstrap JavaScript Servlets JSP jQuery and AngularJS Experience with various build and CICD tools such as Maven Gradle Jenkins etc Used Git GitHub Bitbucket CVS and Subversion for version control Working knowledge with cloud computing such as AWS EC2 and microservice container deployment in Docker Extensively worked in Agile environment with the Project Management tools like TFS Confluence and Jira Great experience with logging and tracing application events and defects in various environment Involved in the frontend development using JSPs jQuery HTML AJAX CSS and JavaScript Experience in the functional usage and deployment of applications in JBoss Web Logic Web Sphere and Apache Tomcat Server Launched and configured Amazon EC2 AWS Cloud Servers using AMIs Linux and configuring the servers for specified applications Extensive experience in building the data layer using OR mapping technology such as Hibernate 30 Automated infrastructure in AWS using amazon web services Deploy Chef to completely provision and manage AWS EC2 instances volumes and S3 Work Experience Sr Java Developer Microsoft Corporation Tampa FL June 2018 to Present Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Resolving defects write unit tests using Junit and customize framework Maintained Interface compatibility and concurrency in the project using Java 8 new features like default static methods and Concurrency API Using Java 8 Method References feature to point to methods by their names and used functional Interfaces Implemented functionality like searching filtering sorting validating using Angular JS and Java Script Developing CICD tools Jenkins for fast paced robust application development environment Developed entity attribute descriptions definitions for data models and design database schema objects Implemented AJAX functionality using jQuery JSON and XML Modifying current database by adding tables altering referential integrity and relationships to support the control system Using Maven to compile the application build WAR files and deployment on the server Wrote clientside validations for DOJO and XML files which checks for the valid values for the different events that are being logged Implemented the backend business layers using Spring Beans and Web services Implementing and building web services in Docker Using Hibernate Framework for object relational mapping and persistence Using Spring Web MVC framework for implementation in the web application Used AngularJS 40 and BackboneJS for clientside validation Performed PLSQL code review and modification for the development of new requirements Involved in the development of frontend of the applications using HTML CSS Bootstrap and JavaScript frameworks Actively participating in code reviews scrums sprint planning reviews and retrospective meetings Applied CRUD operations on MySQL using JPA and JDBC to maintain user information Design tables views for various SQL queries stored procedures and functions Working with production support and operations teams to resolve production issues in a timely and efficient manner Wrote user stories in JIRA as per requirements and migrating the existed APIs into Spring Boot Spring Data and Spring Cloud technologies Integrated existing performance tools with Jenkins for CICD as part of DevOps Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Analyzed the Maven dependency management in the base code to annotate the dependencies on to Spring Boot application into Gradle for Micro Services Developed UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Responsible for setting up Angular framework for UI development Used Angular for DOM Manipulation Filters and Directives Developed Micro Services using Spring BOOT in various frame works to develop Spring Cloud for distributed systems and used for building or deploying and Spring Security for authorization and authentication support Using AWS Cloud Watch to monitor the application and to store the logging information Java Developer ATT Dallas TX October 2017 to May 2018 Responsibilities Implemented business logic data exchange and created graphics using JAVA struts and Spring MVC Used JAVA struts and Spring MVC to interface with the jQuery UI Bootstrap and manage the storage and deletion of content Developed the Web Based Rich Internet Application RIA using J2EE Spring framework and MacromediaAdobe Flex Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Worked on JSON for storing and exchanging information between browsers and Rest APIs and even worked on JSON data format for asynchronous browserserver communications Developed the web pages Java JavaScript jQuery backbone handlebar Mock ax Ember and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Used Nodejs as a proxy to interact with Rest services and interacting with Database Involved in writing application level code to interact with APIs Web Services using AJAX JSON and XML Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Developed Spring Boot based microservices in Docker and Amazon EC2 container using Jenkins Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Developed application using JavaScript AngularJS for frontend JPA RESTful web services MySQL for Backend and deployed in AWS Developed single page application by using AngularJs and ReactJS Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed Spring Integration application using Camel as route builder Spring Batch Spring JMS Spring JDBC Core AOP JPA JTA and Gradle as building tool Developed the webservices and analysis of SOAP envelope using SOAPUI Created Rest web services using JAXRS Hibernate framework Configured action mapping in XML for each logical request that may be submitted Seed Hibernate as Object Relational OR Mapping Tool for the backend data Used DOJO toolkit to construct Ajax requests and build dynamic web pages using JSP HTML5 and JavaScript Angular JS Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Worked with Angular JS to interact with a web service to render the page from data returned from the service Responsible for using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Developed softwares for AWS in Java 7 using Spring Framework MySQL AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented Kafka in java 8 along with Kafka stream topology Live stream events will be stored in MySQL and Cassandra through Kafka stream topology Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Used Axioms AJAX request to data from backend based on user interface input and post updated data back to backend Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Tested for Node JS is done using Mocha and chai and for spring boot used Mockito Junit mock MVC and thereby achieving Test Driven Development TDD Responsible for Scaled Agile Framework Methodology implementation and practices Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Java Developer Accenture Pune Maharashtra July 2014 to December 2016 Responsibilities Implemented Singleton factory design pattern DAO design Patterns based on the application requirements and Worked with SQL and NoSQL queries to interact with the MongoDB database Involved in the development and testing of web application and integration projects using Object Oriented technologies such as Java Struts JSP JDBC Spring Framework Java Used AngularJS to implement rich functionality in various pages form validation grid search sort pagination multiselection tagsinput advanced directives authentication serverside proxy unit tests cloud integration slide pages users switch etc Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Did Written test cases and done Unit testing execution with JASMINE and KARMA Selecting the appropriate AWS service based on compute data or security requirements Worked in Integration of Amazon Web Services AWS with other applications infrastructure Developed the web application using HTML CSS AJAX JSP JavaScript jQuery Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Developed the different components of the application such as JSP Servlets DAO and Used Sub Version SVN for version control Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Developed additional UI Components and implemented an asynchronous AJAX jQuery based rich client to improve customer experience Used Modules for the Frontend are integrated to Backend using Hibernate framework Built ANT scripts for automated deployment and for the build operation of the entire application Developed web pages using HTML5CSS and JavaScript Angular JS Developed many JSP pages used Dojo in JavaScript Library jQuery UI for clientside validation Implemented different machine learning techniques in Scala using Scala machine learning library and created POC using Spark SQL libraries Implemented SOA to develop Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed drag and drop document editing using React Js Used JSP HTML on front end and Servlets as front controllers and JavaScript for ClientSide validations Developed the application by implementing MVC Architecture using Spring MVC where servlets for Handling HTTP requests Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Performed Continuous Integration with Jenkins and Docker for build ship to run distributed applications Used java 8 streams lambdas and other functional programming concepts to implement good coding standards Installed configured and administrated NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL database Cassandra Implemented Spring Boot to create a CRUD backend for our Reactfronted application and automated test scenarios by writing java code and using selenium framework for cucumber testing Worked on MySQL database knowledge on writing CRUD queries and joint queries Followed Test Driven Development as well written JUnit test cases using JUnit and Mockito frameworks Involved in Unit Testing and BugFixing and achieved the maximum code coverage using JUNIT test cases Created the screens in JSP and written all Java scripts to perform the clientside validations Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Designed and developed Micro Services using MEAN Stack nodejs Mongo   Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Used the most popular streaming tool KAFKA to load the data on Hadoop File system and move the same data to MongoDB NoSQL database Education Bachelors in CS in CS Mumbai University Mumbai Maharashtra 2015 Masters New Jersey Institute of Technology Skills Javascript MySQL PHP CertificationsLicenses AWS Certified Developer 2018",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Microsoft",
        "Corporation",
        "Tampa",
        "FL",
        "years",
        "work",
        "experience",
        "JavaJ2EE",
        "programmer",
        "applications",
        "Servlets",
        "JSP",
        "JSTL",
        "EJB",
        "Struts",
        "spring",
        "JSF",
        "Java",
        "Beans",
        "JDBC",
        "JMS",
        "Hibernate",
        "MVC",
        "architecture",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "architecture",
        "development",
        "integration",
        "documentation",
        "testing",
        "deployment",
        "Expertise",
        "applications",
        "Spring",
        "framework",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Data",
        "JPA",
        "Spring",
        "Data",
        "MongoDB",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "knowledge",
        "Core",
        "Java",
        "technologies",
        "exception",
        "collection",
        "programming",
        "lambdas",
        "IO",
        "Microservices",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "Expertise",
        "queries",
        "sequence",
        "procedures",
        "RDBMS",
        "Oracle",
        "DB2",
        "SQL",
        "Server",
        "SQL",
        "Outstanding",
        "knowledge",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "Spring",
        "Web",
        "MVC",
        "SOAP",
        "web",
        "service",
        "clients",
        "JAX",
        "WS",
        "Spring",
        "WS",
        "WSDL",
        "JAXB",
        "Apache",
        "AXIS",
        "Experience",
        "3tier",
        "Microservices",
        "architecture",
        "applications",
        "Spring",
        "Boot",
        "AWS",
        "Rabbit",
        "MQ",
        "Kafka",
        "Zookeeper",
        "Cassandra",
        "SQL",
        "Restful",
        "Web",
        "Services",
        "Familiar",
        "aspects",
        "microservice",
        "architecture",
        "configuration",
        "server",
        "service",
        "registry",
        "discovery",
        "server",
        "load",
        "circuit",
        "breaker",
        "API",
        "gateway",
        "Netflix",
        "OSS",
        "Eureka",
        "Hystrix",
        "Ribbon",
        "Zuul",
        "Netflix",
        "Config",
        "Server",
        "hands",
        "implementation",
        "application",
        "layer",
        "security",
        "APIs",
        "JWT",
        "Spring",
        "Security",
        "involvement",
        "Frontend",
        "Web",
        "Application",
        "Development",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Servlets",
        "JSP",
        "jQuery",
        "AngularJS",
        "Experience",
        "build",
        "CICD",
        "tools",
        "Maven",
        "Gradle",
        "Jenkins",
        "Git",
        "GitHub",
        "Bitbucket",
        "CVS",
        "Subversion",
        "version",
        "control",
        "Working",
        "knowledge",
        "cloud",
        "computing",
        "AWS",
        "EC2",
        "microservice",
        "container",
        "deployment",
        "Docker",
        "environment",
        "Project",
        "Management",
        "tools",
        "TFS",
        "Confluence",
        "Jira",
        "Great",
        "experience",
        "application",
        "events",
        "defects",
        "environment",
        "frontend",
        "development",
        "JSPs",
        "jQuery",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Experience",
        "usage",
        "deployment",
        "applications",
        "JBoss",
        "Web",
        "Logic",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "Server",
        "Amazon",
        "EC2",
        "AWS",
        "Cloud",
        "Servers",
        "AMIs",
        "Linux",
        "servers",
        "applications",
        "experience",
        "data",
        "layer",
        "OR",
        "mapping",
        "technology",
        "Hibernate",
        "Automated",
        "infrastructure",
        "AWS",
        "amazon",
        "web",
        "services",
        "Deploy",
        "Chef",
        "AWS",
        "EC2",
        "volumes",
        "S3",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Microsoft",
        "Corporation",
        "Tampa",
        "FL",
        "June",
        "Present",
        "Responsibilities",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Resolving",
        "defects",
        "unit",
        "tests",
        "Junit",
        "customize",
        "framework",
        "Interface",
        "compatibility",
        "concurrency",
        "project",
        "Java",
        "features",
        "default",
        "methods",
        "Concurrency",
        "API",
        "Java",
        "Method",
        "References",
        "methods",
        "names",
        "Interfaces",
        "functionality",
        "Angular",
        "JS",
        "Java",
        "Script",
        "Developing",
        "CICD",
        "tools",
        "Jenkins",
        "application",
        "development",
        "environment",
        "entity",
        "attribute",
        "descriptions",
        "definitions",
        "data",
        "models",
        "design",
        "database",
        "schema",
        "AJAX",
        "functionality",
        "jQuery",
        "JSON",
        "XML",
        "Modifying",
        "database",
        "tables",
        "integrity",
        "relationships",
        "control",
        "system",
        "Maven",
        "application",
        "WAR",
        "files",
        "deployment",
        "server",
        "Wrote",
        "validations",
        "DOJO",
        "XML",
        "files",
        "values",
        "events",
        "business",
        "layers",
        "Spring",
        "Beans",
        "Web",
        "services",
        "building",
        "web",
        "services",
        "Docker",
        "Hibernate",
        "Framework",
        "mapping",
        "persistence",
        "Spring",
        "Web",
        "MVC",
        "framework",
        "implementation",
        "web",
        "application",
        "BackboneJS",
        "validation",
        "Performed",
        "PLSQL",
        "code",
        "review",
        "modification",
        "development",
        "requirements",
        "development",
        "frontend",
        "applications",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "frameworks",
        "code",
        "reviews",
        "scrums",
        "sprint",
        "planning",
        "reviews",
        "meetings",
        "CRUD",
        "operations",
        "MySQL",
        "JPA",
        "JDBC",
        "user",
        "information",
        "Design",
        "tables",
        "views",
        "SQL",
        "queries",
        "procedures",
        "functions",
        "production",
        "support",
        "operations",
        "teams",
        "production",
        "issues",
        "manner",
        "Wrote",
        "user",
        "stories",
        "JIRA",
        "requirements",
        "APIs",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "Spring",
        "Cloud",
        "performance",
        "tools",
        "Jenkins",
        "CICD",
        "part",
        "DevOps",
        "Responsible",
        "AWS",
        "Cloud",
        "Services",
        "infrastructure",
        "AWS",
        "Stack",
        "database",
        "setup",
        "maintenance",
        "AWS",
        "EC2",
        "Maven",
        "dependency",
        "management",
        "base",
        "code",
        "dependencies",
        "Spring",
        "Boot",
        "application",
        "Gradle",
        "Micro",
        "Services",
        "UI",
        "automation",
        "Node",
        "JS",
        "Angular",
        "Ext",
        "JS",
        "web",
        "applications",
        "Selenium",
        "Web",
        "Driver",
        "JavaScript",
        "Micro",
        "services",
        "Spring",
        "boot",
        "Spring",
        "cloud",
        "framework",
        "UI",
        "development",
        "Angular",
        "DOM",
        "Manipulation",
        "Filters",
        "Directives",
        "Developed",
        "Micro",
        "Services",
        "Spring",
        "BOOT",
        "frame",
        "Spring",
        "Cloud",
        "systems",
        "deploying",
        "Spring",
        "Security",
        "authorization",
        "authentication",
        "support",
        "AWS",
        "Cloud",
        "application",
        "information",
        "Java",
        "Developer",
        "ATT",
        "Dallas",
        "TX",
        "October",
        "May",
        "Responsibilities",
        "business",
        "logic",
        "data",
        "exchange",
        "graphics",
        "JAVA",
        "struts",
        "Spring",
        "MVC",
        "struts",
        "Spring",
        "MVC",
        "jQuery",
        "UI",
        "Bootstrap",
        "storage",
        "deletion",
        "content",
        "Web",
        "Rich",
        "Internet",
        "Application",
        "RIA",
        "J2EE",
        "Spring",
        "framework",
        "MacromediaAdobe",
        "Flex",
        "Docker",
        "Container",
        "application",
        "cloud",
        "Docker",
        "collaboration",
        "innovation",
        "JSON",
        "information",
        "browsers",
        "Rest",
        "APIs",
        "data",
        "format",
        "communications",
        "web",
        "pages",
        "Java",
        "JavaScript",
        "jQuery",
        "backbone",
        "handlebar",
        "ax",
        "Ember",
        "J2EE",
        "technology",
        "framework",
        "Spring",
        "MVC",
        "JDBC",
        "Hibernate",
        "Web",
        "Services",
        "J2EE",
        "design",
        "patterns",
        "Eclipse",
        "Nodejs",
        "proxy",
        "Rest",
        "services",
        "Database",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "XML",
        "Developing",
        "Applications",
        "JavaJ2EE",
        "technologies",
        "Cassandra",
        "Java",
        "Junit",
        "Developed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "Amazon",
        "EC2",
        "container",
        "Jenkins",
        "Used",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Spring",
        "Boot",
        "Karma",
        "test",
        "runner",
        "Jasmine",
        "test",
        "framework",
        "tool",
        "testing",
        "application",
        "application",
        "JavaScript",
        "AngularJS",
        "frontend",
        "JPA",
        "RESTful",
        "web",
        "services",
        "MySQL",
        "Backend",
        "AWS",
        "page",
        "application",
        "AngularJs",
        "ReactJS",
        "Created",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "AWS",
        "Infrastructure",
        "resources",
        "AWS",
        "Lambda",
        "code",
        "AWS",
        "RabbitMQ",
        "Queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "Developed",
        "Spring",
        "Integration",
        "application",
        "Camel",
        "route",
        "builder",
        "Spring",
        "Batch",
        "Spring",
        "JMS",
        "Spring",
        "JDBC",
        "Core",
        "AOP",
        "JPA",
        "JTA",
        "Gradle",
        "building",
        "tool",
        "webservices",
        "analysis",
        "envelope",
        "SOAPUI",
        "Created",
        "Rest",
        "web",
        "services",
        "JAXRS",
        "Hibernate",
        "framework",
        "action",
        "mapping",
        "XML",
        "request",
        "Seed",
        "Hibernate",
        "Object",
        "Relational",
        "OR",
        "Mapping",
        "Tool",
        "data",
        "toolkit",
        "requests",
        "web",
        "pages",
        "JSP",
        "HTML5",
        "JavaScript",
        "Angular",
        "JS",
        "version",
        "control",
        "software",
        "SVN",
        "GIT",
        "GIT",
        "LAB",
        "CVS",
        "Big",
        "Bucket",
        "code",
        "repositories",
        "Managed",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "bucket",
        "ELB",
        "AutoScaling",
        "SNS",
        "SQS",
        "AMI",
        "IAM",
        "DynamoDB",
        "Elasticsearch",
        "Virtual",
        "Cloud",
        "VPC",
        "AWS",
        "Console",
        "API",
        "Integration",
        "design",
        "management",
        "configuration",
        "troubleshooting",
        "production",
        "environments",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Apache",
        "HadoopHBase",
        "Couchbase",
        "JS",
        "web",
        "service",
        "page",
        "data",
        "service",
        "JavaScript",
        "Web",
        "application",
        "libraries",
        "Backbonejs",
        "React",
        "JS",
        "Ember",
        "JS",
        "Requirejs",
        "Knockout",
        "Angularjs",
        "bootstrap",
        "Google",
        "Web",
        "Toolkit",
        "softwares",
        "AWS",
        "Java",
        "Spring",
        "Framework",
        "MySQL",
        "AWS",
        "Aurora",
        "Lambda",
        "API",
        "Gateway",
        "S3",
        "SNS",
        "SQS",
        "EC2",
        "EBS",
        "Akamai",
        "WAF",
        "web",
        "application",
        "firewall",
        "Apache",
        "Tomcat",
        "web",
        "server",
        "Kafka",
        "Kafka",
        "stream",
        "topology",
        "stream",
        "events",
        "MySQL",
        "Cassandra",
        "Kafka",
        "stream",
        "topology",
        "design",
        "patterns",
        "Front",
        "Controller",
        "MVC",
        "Business",
        "Delegate",
        "Data",
        "Transfer",
        "Objects",
        "Data",
        "Access",
        "Building",
        "application",
        "platforms",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "source",
        "technologies",
        "engineering",
        "practices",
        "CICD",
        "Axioms",
        "AJAX",
        "request",
        "data",
        "backend",
        "user",
        "interface",
        "input",
        "data",
        "JWT",
        "JSON",
        "Web",
        "Tokens",
        "tokens",
        "claims",
        "application",
        "authentication",
        "services",
        "Node",
        "JS",
        "Mocha",
        "chai",
        "spring",
        "boot",
        "Mockito",
        "Junit",
        "MVC",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Responsible",
        "Scaled",
        "Agile",
        "Framework",
        "Methodology",
        "implementation",
        "practices",
        "design",
        "management",
        "configuration",
        "troubleshooting",
        "production",
        "environments",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Apache",
        "HadoopHBase",
        "Couchbase",
        "Java",
        "Developer",
        "Accenture",
        "Pune",
        "Maharashtra",
        "July",
        "December",
        "Responsibilities",
        "Singleton",
        "factory",
        "design",
        "pattern",
        "DAO",
        "design",
        "Patterns",
        "application",
        "requirements",
        "SQL",
        "NoSQL",
        "database",
        "development",
        "testing",
        "web",
        "application",
        "integration",
        "projects",
        "Object",
        "technologies",
        "Java",
        "Struts",
        "JSP",
        "JDBC",
        "Spring",
        "Framework",
        "Java",
        "functionality",
        "pages",
        "validation",
        "grid",
        "search",
        "sort",
        "pagination",
        "multiselection",
        "directives",
        "authentication",
        "serverside",
        "proxy",
        "unit",
        "cloud",
        "integration",
        "slide",
        "pages",
        "users",
        "stream",
        "system",
        "top",
        "Apache",
        "Kafka",
        "stream",
        "size",
        "test",
        "cases",
        "Unit",
        "testing",
        "execution",
        "JASMINE",
        "KARMA",
        "Selecting",
        "AWS",
        "service",
        "compute",
        "data",
        "security",
        "requirements",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "infrastructure",
        "web",
        "application",
        "HTML",
        "CSS",
        "AJAX",
        "JSP",
        "JavaScript",
        "jQuery",
        "Developed",
        "Mean",
        "Stack",
        "scratch",
        "Mongo",
        "DB",
        "server",
        "Mongoose",
        "Connector",
        "setup",
        "Express",
        "JS",
        "server",
        "development",
        "components",
        "application",
        "JSP",
        "Servlets",
        "DAO",
        "Sub",
        "Version",
        "SVN",
        "version",
        "control",
        "Development",
        "Spring",
        "Framework",
        "Controllers",
        "Controller",
        "request",
        "response",
        "paradigm",
        "Spring",
        "Controllers",
        "SpringMVC",
        "UI",
        "Components",
        "AJAX",
        "jQuery",
        "client",
        "customer",
        "experience",
        "Modules",
        "Frontend",
        "Backend",
        "Hibernate",
        "framework",
        "ANT",
        "scripts",
        "deployment",
        "build",
        "operation",
        "application",
        "web",
        "pages",
        "HTML5CSS",
        "JavaScript",
        "Angular",
        "JS",
        "JSP",
        "pages",
        "Dojo",
        "JavaScript",
        "Library",
        "jQuery",
        "UI",
        "validation",
        "machine",
        "techniques",
        "Scala",
        "Scala",
        "machine",
        "library",
        "POC",
        "Spark",
        "SQL",
        "libraries",
        "SOA",
        "Spring",
        "RestfulMicroservices",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "part",
        "Services",
        "Discovery",
        "Apache",
        "Axis",
        "drag",
        "document",
        "editing",
        "React",
        "Js",
        "JSP",
        "HTML",
        "end",
        "Servlets",
        "controllers",
        "JavaScript",
        "ClientSide",
        "validations",
        "application",
        "MVC",
        "Architecture",
        "Spring",
        "MVC",
        "servlets",
        "HTTP",
        "requests",
        "Oracle",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "sequences",
        "builtin",
        "functions",
        "data",
        "databases",
        "Performed",
        "Continuous",
        "Integration",
        "Jenkins",
        "Docker",
        "build",
        "ship",
        "applications",
        "streams",
        "lambdas",
        "programming",
        "concepts",
        "standards",
        "Installed",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "architecture",
        "stack",
        "data",
        "access",
        "NoSQL",
        "database",
        "Cassandra",
        "Spring",
        "Boot",
        "CRUD",
        "backend",
        "application",
        "test",
        "scenarios",
        "code",
        "selenium",
        "framework",
        "cucumber",
        "testing",
        "MySQL",
        "database",
        "knowledge",
        "CRUD",
        "queries",
        "queries",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "frameworks",
        "Unit",
        "Testing",
        "BugFixing",
        "code",
        "coverage",
        "JUNIT",
        "test",
        "cases",
        "screens",
        "JSP",
        "Java",
        "scripts",
        "validations",
        "SQL",
        "Server",
        "data",
        "database",
        "Levels",
        "SQL",
        "queries",
        "JDBC",
        "interactions",
        "data",
        "sources",
        "Kafka",
        "data",
        "Hadoop",
        "File",
        "system",
        "data",
        "MongoDB",
        "database",
        "Micro",
        "Services",
        "MEAN",
        "Stack",
        "Mongo",
        "Neo4J",
        "search",
        "Cisco",
        "Cloud",
        "OpenStack",
        "Platform",
        "design",
        "management",
        "configuration",
        "troubleshooting",
        "production",
        "environments",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Apache",
        "HadoopHBase",
        "Couchbase",
        "streaming",
        "tool",
        "KAFKA",
        "data",
        "Hadoop",
        "File",
        "system",
        "data",
        "MongoDB",
        "NoSQL",
        "database",
        "Education",
        "Bachelors",
        "CS",
        "CS",
        "Mumbai",
        "University",
        "Mumbai",
        "Maharashtra",
        "Masters",
        "New",
        "Jersey",
        "Institute",
        "Technology",
        "Skills",
        "Javascript",
        "MySQL",
        "PHP",
        "CertificationsLicenses",
        "AWS",
        "Developer"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:15:38.849349",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Microsoft Corporation Tampa FL 4 years of work experience as a JavaJ2EE programmer developing applications using Servlets JSP JSTL EJB Struts spring JSF Java Beans JDBC JMS Hibernate and MVC architecture Worked on full Software Development Life Cycle SDLC which includes requirements analysis modeling design architecture development integration documentation testing and deployment Expertise in developing applications using Spring framework like Spring IOC Spring AOP Spring MVC Spring Data JPA Spring Data MongoDB Spring Security Spring Boot Spring Cloud etc Strong knowledge of Core Java technologies multithreading exception handling collection functional programming lambdas streams IO etc Used a Microservices architecture with Spring Bootbased services interacting through a REST Expertise in writing queries triggers sequence and stored procedures in major RDBMS including Oracle DB2 SQL Server and My SQL Outstanding knowledge of developing and consuming RESTful web services using JAXRS Jersey Spring Web MVC etc Experienced with developing SOAP web service and SOAP clients using JAX WS Spring WS WSDL JAXB Apache AXIS Experience in 3tier and Microservices architecture applications using Spring Boot AWS Rabbit MQ Kafka Zookeeper Cassandra My SQL Restful Web Services Familiar with various aspects of microservice architecture such as configuration server service registry or discovery server load balancing circuit breaker API gateway utilizing Netflix OSS such as Eureka Hystrix Ribbon Zuul Netflix Config Server etc Solid hands on with the implementation of application layer security for RESTful APIs using JWT Spring Security Extensive involvement in Frontend Web Application Development utilizing HTML CSS Bootstrap JavaScript Servlets JSP jQuery and AngularJS Experience with various build and CICD tools such as Maven Gradle Jenkins etc Used Git GitHub Bitbucket CVS and Subversion for version control Working knowledge with cloud computing such as AWS EC2 and microservice container deployment in Docker Extensively worked in Agile environment with the Project Management tools like TFS Confluence and Jira Great experience with logging and tracing application events and defects in various environment Involved in the frontend development using JSPs jQuery HTML AJAX CSS and JavaScript Experience in the functional usage and deployment of applications in JBoss Web Logic Web Sphere and Apache Tomcat Server Launched and configured Amazon EC2 AWS Cloud Servers using AMIs Linux and configuring the servers for specified applications Extensive experience in building the data layer using OR mapping technology such as Hibernate 30 Automated infrastructure in AWS using amazon web services Deploy Chef to completely provision and manage AWS EC2 instances volumes and S3 Work Experience Sr Java Developer Microsoft Corporation Tampa FL June 2018 to Present Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Resolving defects write unit tests using Junit and customize framework Maintained Interface compatibility and concurrency in the project using Java 8 new features like default static methods and Concurrency API Using Java 8 Method References feature to point to methods by their names and used functional Interfaces Implemented functionality like searching filtering sorting validating using Angular JS and Java Script Developing CICD tools Jenkins for fast paced robust application development environment Developed entity attribute descriptions definitions for data models and design database schema objects Implemented AJAX functionality using jQuery JSON and XML Modifying current database by adding tables altering referential integrity and relationships to support the control system Using Maven to compile the application build WAR files and deployment on the server Wrote clientside validations for DOJO and XML files which checks for the valid values for the different events that are being logged Implemented the backend business layers using Spring Beans and Web services Implementing and building web services in Docker Using Hibernate Framework for object relational mapping and persistence Using Spring Web MVC framework for implementation in the web application Used AngularJS 40 and BackboneJS for clientside validation Performed PLSQL code review and modification for the development of new requirements Involved in the development of frontend of the applications using HTML CSS Bootstrap and JavaScript frameworks Actively participating in code reviews scrums sprint planning reviews and retrospective meetings Applied CRUD operations on MySQL using JPA and JDBC to maintain user information Design tables views for various SQL queries stored procedures and functions Working with production support and operations teams to resolve production issues in a timely and efficient manner Wrote user stories in JIRA as per requirements and migrating the existed APIs into Spring Boot Spring Data and Spring Cloud technologies Integrated existing performance tools with Jenkins for CICD as part of DevOps Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Analyzed the Maven dependency management in the base code to annotate the dependencies on to Spring Boot application into Gradle for Micro Services Developed UI automation for Node JS Angular and Ext JS based web applications using Selenium Web Driver developed in JavaScript Micro services have been built using Spring boot Spring cloud Responsible for setting up Angular framework for UI development Used Angular for DOM Manipulation Filters and Directives Developed Micro Services using Spring BOOT in various frame works to develop Spring Cloud for distributed systems and used for building or deploying and Spring Security for authorization and authentication support Using AWS Cloud Watch to monitor the application and to store the logging information Java Developer ATT Dallas TX October 2017 to May 2018 Responsibilities Implemented business logic data exchange and created graphics using JAVA struts and Spring MVC Used JAVA struts and Spring MVC to interface with the jQuery UI Bootstrap and manage the storage and deletion of content Developed the Web Based Rich Internet Application RIA using J2EE Spring framework and MacromediaAdobe Flex Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Worked on JSON for storing and exchanging information between browsers and Rest APIs and even worked on JSON data format for asynchronous browserserver communications Developed the web pages Java JavaScript jQuery backbone handlebar Mock ax Ember and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Used Nodejs as a proxy to interact with Rest services and interacting with Database Involved in writing application level code to interact with APIs Web Services using AJAX JSON and XML Developing Applications using latest JavaJ2EE technologies such as Cassandra Java 8 Junit Developed Spring Boot based microservices in Docker and Amazon EC2 container using Jenkins Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Developed application using JavaScript AngularJS for frontend JPA RESTful web services MySQL for Backend and deployed in AWS Developed single page application by using AngularJs and ReactJS Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Used RabbitMQ Queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed Spring Integration application using Camel as route builder Spring Batch Spring JMS Spring JDBC Core AOP JPA JTA and Gradle as building tool Developed the webservices and analysis of SOAP envelope using SOAPUI Created Rest web services using JAXRS Hibernate framework Configured action mapping in XML for each logical request that may be submitted Seed Hibernate as Object Relational OR Mapping Tool for the backend data Used DOJO toolkit to construct Ajax requests and build dynamic web pages using JSP HTML5 and JavaScript Angular JS Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elasticsearch Virtual Private Cloud VPC through AWS Console and API Integration Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Worked with Angular JS to interact with a web service to render the page from data returned from the service Responsible for using various JavaScript Web application related libraries such as Backbonejs React JS Ember JS Requirejs Knockout Angularjs 20 bootstrap and Google Web Toolkit Developed softwares for AWS in Java 7 using Spring Framework MySQL AWS Aurora Lambda API Gateway S3 SNS SQS DynamoDB EC2 EBS Akamai WAF web application firewall and Apache Tomcat web server Implemented Kafka in java 8 along with Kafka stream topology Live stream events will be stored in MySQL and Cassandra through Kafka stream topology Implemented design patterns like Front Controller MVC Business Delegate Data Transfer Objects and Data Access Objects Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Used Axioms AJAX request to data from backend based on user interface input and post updated data back to backend Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Tested for Node JS is done using Mocha and chai and for spring boot used Mockito Junit mock MVC and thereby achieving Test Driven Development TDD Responsible for Scaled Agile Framework Methodology implementation and practices Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Java Developer Accenture Pune Maharashtra July 2014 to December 2016 Responsibilities Implemented Singleton factory design pattern DAO design Patterns based on the application requirements and Worked with SQL and NoSQL queries to interact with the MongoDB database Involved in the development and testing of web application and integration projects using Object Oriented technologies such as Java Struts JSP JDBC Spring Framework Java Used AngularJS to implement rich functionality in various pages form validation grid search sort pagination multiselection tagsinput advanced directives authentication serverside proxy unit tests cloud integration slide pages users switch etc Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Did Written test cases and done Unit testing execution with JASMINE and KARMA Selecting the appropriate AWS service based on compute data or security requirements Worked in Integration of Amazon Web Services AWS with other applications infrastructure Developed the web application using HTML CSS AJAX JSP JavaScript jQuery Developed Mean Stack from scratch including Mongo DB server Mongoose Connector setup and Express JS server development Developed the different components of the application such as JSP Servlets DAO and Used Sub Version SVN for version control Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Developed additional UI Components and implemented an asynchronous AJAX jQuery based rich client to improve customer experience Used Modules for the Frontend are integrated to Backend using Hibernate framework Built ANT scripts for automated deployment and for the build operation of the entire application Developed web pages using HTML5CSS and JavaScript Angular JS Developed many JSP pages used Dojo in JavaScript Library jQuery UI for clientside validation Implemented different machine learning techniques in Scala using Scala machine learning library and created POC using Spark SQL libraries Implemented SOA to develop Spring RestfulMicroservices and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Developed drag and drop document editing using React Js Used JSP HTML on front end and Servlets as front controllers and JavaScript for ClientSide validations Developed the application by implementing MVC Architecture using Spring MVC where servlets for Handling HTTP requests Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Performed Continuous Integration with Jenkins and Docker for build ship to run distributed applications Used java 8 streams lambdas and other functional programming concepts to implement good coding standards Installed configured and administrated NoSQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with NoSQL database Cassandra Implemented Spring Boot to create a CRUD backend for our Reactfronted application and automated test scenarios by writing java code and using selenium framework for cucumber testing Worked on MySQL database knowledge on writing CRUD queries and joint queries Followed Test Driven Development as well written JUnit test cases using JUnit and Mockito frameworks Involved in Unit Testing and BugFixing and achieved the maximum code coverage using JUNIT test cases Created the screens in JSP and written all Java scripts to perform the clientside validations Used SQL Server to access data in the database at different Levels responsible for implementing SQL queries and managing JDBC interactions with data sources Used Kafka to load the data on Hadoop File system and move the same data to MongoDB database Designed and developed Micro Services using MEAN Stack nodejs Mongo dB Neo4J Elastic search on Cisco Private Cloud OpenStack Platform Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Used the most popular streaming tool KAFKA to load the data on Hadoop File system and move the same data to MongoDB NoSQL database Education Bachelors in CS in CS Mumbai University Mumbai Maharashtra 2015 Masters New Jersey Institute of Technology Skills Javascript MySQL PHP CertificationsLicenses AWS Certified Developer 2018",
    "unique_id": "45d136e0-ecc6-4d21-9523-0e213c4cbe49"
}