{
    "clean_data": "Senior Android Developer Senior Android span lDeveloperspan Edison NJ 10 years of experience working in the Computers and Information Technology field Experience working with the Android environment with more than 10 deployed apps in the Play Store Worked with Product Management Delivery teams and Project Management to translate requirements into tasks for deliverables Experience with network programming and consuming third party APIs Collaborated with Software Engineers for the design and development of backend services Experience working a significant consumer app that is currently available in the marketplace Expertise of advanced software engineering concepts objectoriented design hypermedia device management seminative HTML5 technologies and memory management Experience with embedded local storage solutions such as SQLite Monitored triaged and assessed the Android apps performance bugs and defects Familiarity with agileiterative development methodologies XP SCRUM etc Technology lover that naturally stays uptodate on relevant new developments Selfmotivated productive and works well even withwithout formal structure Ability to debug and fix complex issues Realworld experience is building very large scale high availability applications Experience with modern scripting languages Python Ruby etc Solid background in OOP and knowledge of software design patternsbest practices Experience prototyping mobile experiences Experience working onsite and offsite teams and management Expertise or familiarity with welldesigned user interfaces Experience building high volume consuming facing applications at massive scale Selfmotivated proactive and works well within a formal structure Experience with image manipulation and animation including techniques like alpha blending Exceptional communication project management and organizational skills with the ability to build positive relationships with boards and stakeholders senior executives all levels of staff and clients Set up the continuous integration servers using Jenkins and Codeship Experienced in the development process for nonphone and tablet Android Frameworks Android Wear Smart TV developing and Android Auto testing Utilized multiple ORMs like ORMLite and GreenDAO to set up the database lookups and creation Strong familiarity using Google Cloud Services and Google APIs like Location Google Maps Google Custom Search Google Analytics Worked in an Agile environment with strong SCRUM and pair programming fundamentals Google Play Store certified publisher building ASO campaigns and keyword lookups Tested an early implementation of Firebase as a straightforward and realtime Mobile Backend Created the initial setup of multiple continuous integration servers to help the build creation process Travis Jenkins CircleCI Experienced writing design and architecture documents for mobile and web applications Experienced with Android 40 Wearables Holo interface 50 Material design ART 60 Runtime permissions Standby mode Currently previewing changes in Android N like multiwindow support and the drag and drop behavior Conducted business and technical Knowledge Transfer sessions for new recruits Coordinated efforts with different background professionals such as system analyst graphic designers developers and technical documenters Used Fragments diverse layouts animations Material Design components Compound Views and Custom Views to fulfill user interface requirements Managed the decisionmaking process of critical situations with different variables taken into account Have implemented customized HTTP clients to consume a Web Resource with Retrofit Volley OkHTTP and the native HttpURLConnection Led various teams from early steps in the requirement gathering process to the designing of final builds Used different emulators including BlueStacks Genymotion and the Android Studio builtin Skilled working with SOAP and RESTful web services using Retrofit Volley and OkHttp Selfmotivated goaloriented and able to work without supervision Authorized to work in the US for any employer Work Experience Senior Android Developer San Francisco CA US April 2017 to Present Responsibilities Developed features for the Fitbit Social Adventure project which include the capability to view a participants progress across a map and a capability to participate with friends to see who can finish an Adventure first Implemented a LeaderboardFinishers screen which displays the ranking of the participants and a countdown bar which displays a live countdown until the race finishes Developed code to dynamically alter the display of Views in the screen based upon factors such as when a participant has finished a race or a race has finished Used ObjectAnimator to animate the progress of a participants Avatars as they move across the Adventure Map The Object Animator would redraw the participants Avatar every frame update Implemented new Social Adventure challenge tiles by creating custom RecyclerView Adapters Used GreenDao to persist data across all Activity and Fragment lifecycles Updated utility classes to provide additional capabilities including to verify if an Adventure has completed and to distinguish between Social Adventures and Solo Adventures Resolved bug fixes which included verifying data inputs are nonnull verifying Activities and Fragments are visible when returning from callbacks using Intent flags such as SINGLETOP so that only one Activity in a task is created and modifying RecyclerView Adapter classes to create custom LayoutManagers Used static inner classes to avoid memory leaks Implemented LoaderManagers to asynchronously load data and to integrate with an Activitys or Fragments lifecycle Developed a custom RecyclerView to provide a more fluid UX when being used with an AppToolbarLayout Developed software using the Agile method including engaging in biweekly Sprints and estimation of Story Points for backlog items Senior Android Developer Cisco San Jose CA US October 2016 to March 2017 Responsibilities A login page that utilized Cisco Single Sign On to authenticate users before accessing protected resources via web URLs Utilized a custom class that extended from the WebView class that observed redirection of URLs when a resource required authentication prior to being accessed Observed a SSO cookie that was set when authentication was established successfully Utilized a class that implemented the JavascriptInterface annotation to store retrieved JSON content via the custom WebView class A customizable UI that was based upon the content of the retrieved JSON data that contained information about the state of Cisco application servers including whether they were Up or Down JSON data was hierarchical with several attributes which could be customized by a separate JSON file to display specific attributes such the UpDown status Date Time of the latest staus hostnames of the Application server hosts etc A background service that periodically pulled data from the web URL and sent refreshed data to the UI page appropriately via a bound connection Implementation of Google Cloud Messaging with the app to register for and receive Push Notifications that contained similar hierarchical JSON data pertinent to a set of application servers with the Down and a single Up status when a previously Down server had been restored Registered to a specific topic to receive Push Notifications so that all devices with app could receive the same Push Notifications Utilized the Android 3rd party libraries RxJava IcePick Butterknife and Retrofit Utilized RecyclerViews and RecyclerView Adapters SwipeRefreshLayouts and background Services Extended the InstanceIDListenerService and GCMListenerService to receive GCM Push Notifications Used APIs from different SDK levels to support backward compatibility Identification of issues during the test cycles Unified designers and developers in the redesign of the UI screen with compound views Added Push Notification features with Google Cloud Messaging and Firebase Cloud Messaging Used the location API Maps View GoogleView and Google Maps Used the SQLiteOpenHelper to connect with the local database and perform CRUD operations Worked with the testing team and used developer testing tools like JUnit Robolectric Espresso Included Retrofit with RxJava to make asynchronous HTTP requests in an anonymous callback Utilized Git version control tool as the source control management system Generated a custom behavior in multiple screens included in the CoordinatorLayout to hide the Toolbar and the Floating Action Button on the user scroll Android Architect Mooresville NC US June 2015 to October 2016 Responsibilities Implemented binding services from activities and the use of communication with services using Java threading for background processes and sync adapters Obtained the requirements through the setting of interviews with the customer Added several animations and transitions without of the box features and third party libraries Communicated with RESTful web services using Retrofit OkHTTP and Jackson Proposed a frontend architecture using the Model View ViewModel design pattern Implemented the best practices for Android mobile development with their main components Activities Services Content Providers and Broadcast Receivers Tied mobile client applications to critical serverside APIs Introduced the Google Maps API integration with the application Integrated Offline support offers you have on hand when you have no signal Built and maintained common code libraries used in phones tablets TVs smart watches and automobiles Participated in the decisionmaking process for selecting the appropriate technologies for the project based on requirements and the users needs Used JustInMind prototyping tool for the first mock for the navigation approval Created custom animations and transitions to improve the user experience Made a distinction between development and production versions of the app each with their distinct credentials and settings in the backend using Urban Airship Ability to manage competing priorities in a complex environment and maintain high productivity Used the View Pager Indicator to provide feedback to the user about the background processing status Implemented IcePick when building references to track them in an easier way and avoid memory leaks Implementation of various user interface components such as WebView ListView ImageView TextView to display the data for the application Identification of issues during the test cycles Used Chart Boost library to help track issues and market trends Configured multiple analytic tools to get valuable information on a postinstall state Crashlytics Mixpanel Flurry Answers Solid understanding of data models and data access architecture and optimization Designed and developed the Android app as simple as possible for quick user adoption Used Itext to generate pdf files from a controller Familiarity with the Android tool ecosystem for development testing debugging and performance benchmarking Senior Android Developer Delta Air Lines Atlanta GA US November 2013 to June 2015 Responsibilities Used Spongy Castle to encrypt sensible data Served as a technical lead within the company to develop the technology stack Built a custom lock screen widget for allowing the user stop play and forward music Used Loopj for asynchronous callbacks together with the Loading Everywhere library Developed custom and compound views to match UIUX specifications Used multiple ORMs like ORMLite and GreenDAO to set up databases and cache information to be used in nonetwork environments Implemented List View using the view Holder pattern to improve the performance Proficiency in Java Worked with JDK Collections Generics Networking Core Java Understands Java concurrency memory management Created a compact Content Provider implementation to handle caching between network connections in the final build Coordinated the implementation of Volley in the HTTP requests inside the application Responsible for the design implementation and test phases of the application Use of SQLite database schema to persistent data storage for every schedule Added support for Google Nexus Player and Amazon Fire TV Modified the navigation and replaced activities with Fragments Generated documentation for detail design including wireframing using JustInMind prototyping tool Created innovative solutions in media streaming and mobile user experience Solid understanding of Android app development life cycle including Google Play and Amazon App Store compliance policies and submissions requirements Introduced the Push Notifications through Urban Airship Extensive use of support libraries to ensure backward compatibility with older Android versions Experience with continuous integration tools like Jenkins or Travis CI and automated testing frameworks such as Espresso Mentored junior developer on best practices for coding Created custom views to present data as it was needed Designed tweaks to the look and feel using Model design Integrated Java Guava Libraries for string processing concurrency libraries IO functions Used GitHub private repositories with standard Workflows as a Version Control Software Senior Android Developer Instacart San Francisco CA US March 2013 to November 2013 Responsibilities Used persistent data on the device to store information already loaded for future use Guide decisions on architecture and technical strategy Implemented the Google YouTube API for playing videos Used ListView and adapters to load data onto lists at runtime Thrive working in a fast paced agile environment constantly learning Implemented RESTful call to receive JSON based response and parsed to display data to the user Mentored Junior Android Developers during the development cycle and process Utilized Git version control tool as source control management system Designed the UIUX of the application using animations and transitions Worked with SCRUM methodology to have a prototype to show every two weeks Experience in working with Video Static content and advertising Enhanced the UIUX to follow the guidelines provided by Googles Material Design Implemented ListViews for loading most of the catalogs Setup jaCoCo to check my code coverage of new code Tested the UI with Espresso and Beta Testing with Crashlytics Independently developed and expanded native mobile applications for Android platforms according to specifications handled by a design team or the clients Integrated Retrofit to consume RESTful web services GET POST DELETE PUT Have participated in innovation design and architecture of the apps Used Google GSON to parse JSON files Designed and implemented userfacing features in our mobile applications Performed peer reviews on colleagues code to ensure consistent standards Providing assistance to code merges builds deployments and ensuring production stability Senior Android Developer Old NavySan Francisco CA August 2012 to March 2013 Responsibilities Attended the meetings with the clients to know more about business and requirements Helped to manage the versions of the application through subversion best practices Experience using Source Control Git SVN Mercurial Utilized Git version control tool as source control management system Participated and conducted SCRUM meetings to review project progress Use of SQLite database schema to persistent data Developed graphic interface and UI for some activities Creates wireframes using Adobe Photoshop Ensure excellent form factor integration by creating multipanel activities with Fragments Used Pending Intents to handle database updates after a boot was completed Worked with JUnit to complete all test cases Created the SQLite helper for the local storage of the application Reused some of the earlier versions of the application code Experience building custom API solutions for external parties to tie into Designed the application with an MVP approach setting up all the interfaces and the decoupling of the classes Use of Hudson as continuous integration tool scheduling the application Developed Custom Views and Compound Views Worked with AsyncTask for multithreading and services with AsyncTask for longer running asynchronous tasks Solid background in OOP and knowledge of software design patternsbest practices Considerable experience debugging and profiling Android applications Designed the UIUX of the application using Custom Views and List Views Development of quality code using cuttingedge techniques tools and utilities Designed Widgets for the purpose of keeping track of tasks and reporting object completed updating your stats Integrated JUnit to complete all test cases Senior Android Developer NationwideColumbus OH January 2010 to August 2012 Responsibilities Technology lover that naturally stays uptodate on relevant new developments Coordinate team of software engineers to complete required tasks Designed the URIs needed to access and modify the exported Content Provider items Part of an effort to standardize code for the client side of RESTful Web Services Used enhancement for multidevice compatibility Made use of RESTfull calls to get de data to be shown on the application Implement transition between activities UIUX design and wireframing with multiple tools including Balsamiq Mockups Implemented ACRA API to handle error reporting Composed the program using Java with Eclipse and the Android Development Tool Managed code review sessions to always have high quality reusable simple documented code Implemented services to run on the back to handle HTTP calls Worked with the Google Maps API integration with the application Peer reviewed code using Agile Software development Implemented Parcelable to the classes for easier bundle transportation Kept abreast of industry trends and technologies being prepared to apply them quickly Cultivate an environment of excellence through code design code reviews Constructed the user interface by using list view custom view compound view and various layouts Wrote unit tests for the functionality of the application Implemented Robolectric to speed up unit testing Android Developer Abercrombie Fitch New Albany OH US February 2009 to January 2010 Responsibilities Worked with Content Providers to connect with and consume Android Contacts The program was developed in Java using the Eclipse IDE and the Android Development Tool ADT Created robust automated unitfunctional test suites and deployment scripts Worked with the UIUX specialist to design a user experience for the application Developed several Compound Views and Custom Views Proven abilities to work closely and effectively with engineering and nonengineering teams Joined a team of 4 Android Java developers Worked with asynchronous processes with AsyncTask Services and Loaders Worked with asynchronous requests to the server with Volley library Tuned components for high performance and scalability using techniques such as caching code optimization and efficient memory management Constantly perform and manage code reviews Participated in the full lifecycle development process from product definition Chaired the integration with the Facebook API inside the application Programmed the locale to support different languages Used of support libraries to ensure backward compatibility with older OS versions Used Crashlytics to track user behavior and obtain mobile analytics A sound understanding of HTTP and RESTstyle web services Implemented the Android System Bar Tint library for translucent status and navigation bars Experience interacting with RESTful API and data formats like JSON XML etc Utilized SVN as source control management system Used JodaTime to provide a quality replacement for Java date and time classes Created the content provider logic to load the information with an Observer Pattern in the UI thread using Loaders Involved in testing and testing design for the application after each sprint Software Developer Abercrombie FitchNew Albany OH US October 2007 to February 2009 Responsibilities Created a new system to control de versions of a different process as a precursor of Subversion Created solution architecture for new mobile applications and mobile application enhancements Generated background checks to verify users identity and improve the security of the system Developed an ecommerce web project for clients in the US Used PHP to connection to the MySQL database Participated in the software support for endusers Web services implementation RESTful implementation with a Java front end Education Bachelor of Computer Science in Computer Science New Mexico State University Bachelor of Computer Science in Computer Science Pellissippi Community College Skills ANDROID MVP CORDOVA DOJO FIREBASE Additional Information Technical Skills FloatingActionButton OkHTTP JUnit Spork Google Analytics SOAP Android Auto Retrofit MVP ProGuard Glide AndroidAnnotations Libphonenumber Broadcast Receivers Cipher ZXing Chromecast Robotium JobScheduler Eclipse Android Wear Firebase EventBus Cordova JIRA Content Resolvers Push Notifications Git Lollipop Ion GSON LeakCanary Fragments REST AsyncTask Volley SmartTV Maven Espresso Dependency Injection Android Studio Subversion Facebook SDK Certificate Pinning animations CoordinatorLayout Protobuf RxJava Otto Dagger Hugo Loaders Answers Sugar Google Cloud Messaging Runtime permissions GreenDAO Kickflip Parse MonkeyRunner GcmNetworkManager ProgressBar NFC Fresco ORMLite Jenkins IBM Mainframe AIX OS iOS PovRay JSON Dojo Python C Mac OS Windows SharePoint ArcGIS Windows Server C Remedy SQLite AES Encryption Java SQL Linux OS CSS Scheme Pandas GGPlot HTML5 Bash Linux JavaScript",
    "entities": [
        "Loading Everywhere",
        "Volley",
        "Integrated Retrofit",
        "an Observer Pattern",
        "the Model View ViewModel",
        "Social Adventures",
        "Android",
        "Guide",
        "AIX",
        "Obtained",
        "HTTP",
        "Loaders Involved",
        "the Android Development Tool ADT Created",
        "Android Auto",
        "FloatingActionButton",
        "Google",
        "JDK Collections Generics Networking",
        "SQLite Monitored",
        "SOAP",
        "Atlanta",
        "Holder",
        "Amazon Fire TV Modified",
        "Coordinate",
        "LeaderboardFinishers",
        "JUnit",
        "Utilized Git",
        "Responsibilities Created",
        "WebView ListView ImageView TextView",
        "Google Maps Used",
        "Toolbar",
        "JUnit Robolectric Espresso Included Retrofit",
        "Widgets",
        "Developed",
        "NC",
        "Utilized",
        "Android Contacts",
        "Android N",
        "San Francisco",
        "Agile Software",
        "New Albany",
        "Adobe Photoshop Ensure",
        "Communicated",
        "HTML5",
        "San Jose",
        "Realworld",
        "Custom Views",
        "Google Cloud Services",
        "Built",
        "Implemented Robolectric",
        "ProgressBar",
        "Integrated JUnit",
        "Balsamiq Mockups Implemented",
        "SQLiteOpenHelper",
        "Views",
        "Libphonenumber Broadcast Receivers",
        "Material Design",
        "Mobile Backend Created",
        "the Android Development Tool Managed",
        "Location Google Maps Google Custom Search Google Analytics Worked",
        "Agile",
        "CoordinatorLayout",
        "Implemented LoaderManagers",
        "API",
        "US",
        "Delta Air Lines",
        "RecyclerView",
        "Broadcast Receivers Tied",
        "Created",
        "MVP",
        "RxJava IcePick Butterknife and Retrofit Utilized RecyclerViews",
        "OOP",
        "Implemented",
        "Sprints",
        "Coordinated",
        "Cisco Single Sign",
        "Project Management",
        "Workflows",
        "RxJava",
        "UIUX",
        "WebView",
        "GitHub",
        "the Computers and Information Technology",
        "Collaborated with Software Engineers",
        "Created the SQLite",
        "Subversion Created",
        "Implemented IcePick",
        "Adventure",
        "Social Adventure",
        "Avatars",
        "Retrofit Volley",
        "Mentored Junior Android Developers",
        "List Views Development",
        "Version Control Software",
        "OkHTTP",
        "Android Studio",
        "RESTfull",
        "DOJO FIREBASE Additional Information Technical Skills",
        "CRUD",
        "BlueStacks Genymotion",
        "Googles Material Design Implemented ListViews",
        "Story Points",
        "Cisco",
        "OkHttp Selfmotivated",
        "UI",
        "RESTful Web Services Used",
        "Video Static",
        "Google Nexus Player",
        "LayoutManagers Used",
        "Firebase",
        "Activitys",
        "the Floating Action Button",
        "Responsibilities Technology",
        "Python Ruby etc Solid",
        "UpDown",
        "the Android System Bar Tint",
        "Edison NJ",
        "SDK",
        "Introduced the Push Notifications through Urban Airship Extensive",
        "Google Cloud Messaging",
        "Fragments Generated",
        "Model",
        "JavascriptInterface",
        "ASO",
        "Google GSON",
        "PHP",
        "Application",
        "Setup",
        "the Fitbit Social Adventure",
        "Activities Services Content Providers",
        "Maven Espresso Dependency",
        "RecyclerView Adapters SwipeRefreshLayouts",
        "AsyncTask Services"
    ],
    "experience": "Experience working with the Android environment with more than 10 deployed apps in the Play Store Worked with Product Management Delivery teams and Project Management to translate requirements into tasks for deliverables Experience with network programming and consuming third party APIs Collaborated with Software Engineers for the design and development of backend services Experience working a significant consumer app that is currently available in the marketplace Expertise of advanced software engineering concepts objectoriented design hypermedia device management seminative HTML5 technologies and memory management Experience with embedded local storage solutions such as SQLite Monitored triaged and assessed the Android apps performance bugs and defects Familiarity with agileiterative development methodologies XP SCRUM etc Technology lover that naturally stays uptodate on relevant new developments Selfmotivated productive and works well even withwithout formal structure Ability to debug and fix complex issues Realworld experience is building very large scale high availability applications Experience with modern scripting languages Python Ruby etc Solid background in OOP and knowledge of software design patternsbest practices Experience prototyping mobile experiences Experience working onsite and offsite teams and management Expertise or familiarity with welldesigned user interfaces Experience building high volume consuming facing applications at massive scale Selfmotivated proactive and works well within a formal structure Experience with image manipulation and animation including techniques like alpha blending Exceptional communication project management and organizational skills with the ability to build positive relationships with boards and stakeholders senior executives all levels of staff and clients Set up the continuous integration servers using Jenkins and Codeship Experienced in the development process for nonphone and tablet Android Frameworks Android Wear Smart TV developing and Android Auto testing Utilized multiple ORMs like ORMLite and GreenDAO to set up the database lookups and creation Strong familiarity using Google Cloud Services and Google APIs like Location Google Maps Google Custom Search Google Analytics Worked in an Agile environment with strong SCRUM and pair programming fundamentals Google Play Store certified publisher building ASO campaigns and keyword lookups Tested an early implementation of Firebase as a straightforward and realtime Mobile Backend Created the initial setup of multiple continuous integration servers to help the build creation process Travis Jenkins CircleCI Experienced writing design and architecture documents for mobile and web applications Experienced with Android 40 Wearables Holo interface 50 Material design ART 60 Runtime permissions Standby mode Currently previewing changes in Android N like multiwindow support and the drag and drop behavior Conducted business and technical Knowledge Transfer sessions for new recruits Coordinated efforts with different background professionals such as system analyst graphic designers developers and technical documenters Used Fragments diverse layouts animations Material Design components Compound Views and Custom Views to fulfill user interface requirements Managed the decisionmaking process of critical situations with different variables taken into account Have implemented customized HTTP clients to consume a Web Resource with Retrofit Volley OkHTTP and the native HttpURLConnection Led various teams from early steps in the requirement gathering process to the designing of final builds Used different emulators including BlueStacks Genymotion and the Android Studio builtin Skilled working with SOAP and RESTful web services using Retrofit Volley and OkHttp Selfmotivated goaloriented and able to work without supervision Authorized to work in the US for any employer Work Experience Senior Android Developer San Francisco CA US April 2017 to Present Responsibilities Developed features for the Fitbit Social Adventure project which include the capability to view a participants progress across a map and a capability to participate with friends to see who can finish an Adventure first Implemented a LeaderboardFinishers screen which displays the ranking of the participants and a countdown bar which displays a live countdown until the race finishes Developed code to dynamically alter the display of Views in the screen based upon factors such as when a participant has finished a race or a race has finished Used ObjectAnimator to animate the progress of a participants Avatars as they move across the Adventure Map The Object Animator would redraw the participants Avatar every frame update Implemented new Social Adventure challenge tiles by creating custom RecyclerView Adapters Used GreenDao to persist data across all Activity and Fragment lifecycles Updated utility classes to provide additional capabilities including to verify if an Adventure has completed and to distinguish between Social Adventures and Solo Adventures Resolved bug fixes which included verifying data inputs are nonnull verifying Activities and Fragments are visible when returning from callbacks using Intent flags such as SINGLETOP so that only one Activity in a task is created and modifying RecyclerView Adapter classes to create custom LayoutManagers Used static inner classes to avoid memory leaks Implemented LoaderManagers to asynchronously load data and to integrate with an Activitys or Fragments lifecycle Developed a custom RecyclerView to provide a more fluid UX when being used with an AppToolbarLayout Developed software using the Agile method including engaging in biweekly Sprints and estimation of Story Points for backlog items Senior Android Developer Cisco San Jose CA US October 2016 to March 2017 Responsibilities A login page that utilized Cisco Single Sign On to authenticate users before accessing protected resources via web URLs Utilized a custom class that extended from the WebView class that observed redirection of URLs when a resource required authentication prior to being accessed Observed a SSO cookie that was set when authentication was established successfully Utilized a class that implemented the JavascriptInterface annotation to store retrieved JSON content via the custom WebView class A customizable UI that was based upon the content of the retrieved JSON data that contained information about the state of Cisco application servers including whether they were Up or Down JSON data was hierarchical with several attributes which could be customized by a separate JSON file to display specific attributes such the UpDown status Date Time of the latest staus hostnames of the Application server hosts etc A background service that periodically pulled data from the web URL and sent refreshed data to the UI page appropriately via a bound connection Implementation of Google Cloud Messaging with the app to register for and receive Push Notifications that contained similar hierarchical JSON data pertinent to a set of application servers with the Down and a single Up status when a previously Down server had been restored Registered to a specific topic to receive Push Notifications so that all devices with app could receive the same Push Notifications Utilized the Android 3rd party libraries RxJava IcePick Butterknife and Retrofit Utilized RecyclerViews and RecyclerView Adapters SwipeRefreshLayouts and background Services Extended the InstanceIDListenerService and GCMListenerService to receive GCM Push Notifications Used APIs from different SDK levels to support backward compatibility Identification of issues during the test cycles Unified designers and developers in the redesign of the UI screen with compound views Added Push Notification features with Google Cloud Messaging and Firebase Cloud Messaging Used the location API Maps View GoogleView and Google Maps Used the SQLiteOpenHelper to connect with the local database and perform CRUD operations Worked with the testing team and used developer testing tools like JUnit Robolectric Espresso Included Retrofit with RxJava to make asynchronous HTTP requests in an anonymous callback Utilized Git version control tool as the source control management system Generated a custom behavior in multiple screens included in the CoordinatorLayout to hide the Toolbar and the Floating Action Button on the user scroll Android Architect Mooresville NC US June 2015 to October 2016 Responsibilities Implemented binding services from activities and the use of communication with services using Java threading for background processes and sync adapters Obtained the requirements through the setting of interviews with the customer Added several animations and transitions without of the box features and third party libraries Communicated with RESTful web services using Retrofit OkHTTP and Jackson Proposed a frontend architecture using the Model View ViewModel design pattern Implemented the best practices for Android mobile development with their main components Activities Services Content Providers and Broadcast Receivers Tied mobile client applications to critical serverside APIs Introduced the Google Maps API integration with the application Integrated Offline support offers you have on hand when you have no signal Built and maintained common code libraries used in phones tablets TVs smart watches and automobiles Participated in the decisionmaking process for selecting the appropriate technologies for the project based on requirements and the users needs Used JustInMind prototyping tool for the first mock for the navigation approval Created custom animations and transitions to improve the user experience Made a distinction between development and production versions of the app each with their distinct credentials and settings in the backend using Urban Airship Ability to manage competing priorities in a complex environment and maintain high productivity Used the View Pager Indicator to provide feedback to the user about the background processing status Implemented IcePick when building references to track them in an easier way and avoid memory leaks Implementation of various user interface components such as WebView ListView ImageView TextView to display the data for the application Identification of issues during the test cycles Used Chart Boost library to help track issues and market trends Configured multiple analytic tools to get valuable information on a postinstall state Crashlytics Mixpanel Flurry Answers Solid understanding of data models and data access architecture and optimization Designed and developed the Android app as simple as possible for quick user adoption Used Itext to generate pdf files from a controller Familiarity with the Android tool ecosystem for development testing debugging and performance benchmarking Senior Android Developer Delta Air Lines Atlanta GA US November 2013 to June 2015 Responsibilities Used Spongy Castle to encrypt sensible data Served as a technical lead within the company to develop the technology stack Built a custom lock screen widget for allowing the user stop play and forward music Used Loopj for asynchronous callbacks together with the Loading Everywhere library Developed custom and compound views to match UIUX specifications Used multiple ORMs like ORMLite and GreenDAO to set up databases and cache information to be used in nonetwork environments Implemented List View using the view Holder pattern to improve the performance Proficiency in Java Worked with JDK Collections Generics Networking Core Java Understands Java concurrency memory management Created a compact Content Provider implementation to handle caching between network connections in the final build Coordinated the implementation of Volley in the HTTP requests inside the application Responsible for the design implementation and test phases of the application Use of SQLite database schema to persistent data storage for every schedule Added support for Google Nexus Player and Amazon Fire TV Modified the navigation and replaced activities with Fragments Generated documentation for detail design including wireframing using JustInMind prototyping tool Created innovative solutions in media streaming and mobile user experience Solid understanding of Android app development life cycle including Google Play and Amazon App Store compliance policies and submissions requirements Introduced the Push Notifications through Urban Airship Extensive use of support libraries to ensure backward compatibility with older Android versions Experience with continuous integration tools like Jenkins or Travis CI and automated testing frameworks such as Espresso Mentored junior developer on best practices for coding Created custom views to present data as it was needed Designed tweaks to the look and feel using Model design Integrated Java Guava Libraries for string processing concurrency libraries IO functions Used GitHub private repositories with standard Workflows as a Version Control Software Senior Android Developer Instacart San Francisco CA US March 2013 to November 2013 Responsibilities Used persistent data on the device to store information already loaded for future use Guide decisions on architecture and technical strategy Implemented the Google YouTube API for playing videos Used ListView and adapters to load data onto lists at runtime Thrive working in a fast paced agile environment constantly learning Implemented RESTful call to receive JSON based response and parsed to display data to the user Mentored Junior Android Developers during the development cycle and process Utilized Git version control tool as source control management system Designed the UIUX of the application using animations and transitions Worked with SCRUM methodology to have a prototype to show every two weeks Experience in working with Video Static content and advertising Enhanced the UIUX to follow the guidelines provided by Googles Material Design Implemented ListViews for loading most of the catalogs Setup jaCoCo to check my code coverage of new code Tested the UI with Espresso and Beta Testing with Crashlytics Independently developed and expanded native mobile applications for Android platforms according to specifications handled by a design team or the clients Integrated Retrofit to consume RESTful web services GET POST DELETE PUT Have participated in innovation design and architecture of the apps Used Google GSON to parse JSON files Designed and implemented userfacing features in our mobile applications Performed peer reviews on colleagues code to ensure consistent standards Providing assistance to code merges builds deployments and ensuring production stability Senior Android Developer Old NavySan Francisco CA August 2012 to March 2013 Responsibilities Attended the meetings with the clients to know more about business and requirements Helped to manage the versions of the application through subversion best practices Experience using Source Control Git SVN Mercurial Utilized Git version control tool as source control management system Participated and conducted SCRUM meetings to review project progress Use of SQLite database schema to persistent data Developed graphic interface and UI for some activities Creates wireframes using Adobe Photoshop Ensure excellent form factor integration by creating multipanel activities with Fragments Used Pending Intents to handle database updates after a boot was completed Worked with JUnit to complete all test cases Created the SQLite helper for the local storage of the application Reused some of the earlier versions of the application code Experience building custom API solutions for external parties to tie into Designed the application with an MVP approach setting up all the interfaces and the decoupling of the classes Use of Hudson as continuous integration tool scheduling the application Developed Custom Views and Compound Views Worked with AsyncTask for multithreading and services with AsyncTask for longer running asynchronous tasks Solid background in OOP and knowledge of software design patternsbest practices Considerable experience debugging and profiling Android applications Designed the UIUX of the application using Custom Views and List Views Development of quality code using cuttingedge techniques tools and utilities Designed Widgets for the purpose of keeping track of tasks and reporting object completed updating your stats Integrated JUnit to complete all test cases Senior Android Developer NationwideColumbus OH January 2010 to August 2012 Responsibilities Technology lover that naturally stays uptodate on relevant new developments Coordinate team of software engineers to complete required tasks Designed the URIs needed to access and modify the exported Content Provider items Part of an effort to standardize code for the client side of RESTful Web Services Used enhancement for multidevice compatibility Made use of RESTfull calls to get de data to be shown on the application Implement transition between activities UIUX design and wireframing with multiple tools including Balsamiq Mockups Implemented ACRA API to handle error reporting Composed the program using Java with Eclipse and the Android Development Tool Managed code review sessions to always have high quality reusable simple documented code Implemented services to run on the back to handle HTTP calls Worked with the Google Maps API integration with the application Peer reviewed code using Agile Software development Implemented Parcelable to the classes for easier bundle transportation Kept abreast of industry trends and technologies being prepared to apply them quickly Cultivate an environment of excellence through code design code reviews Constructed the user interface by using list view custom view compound view and various layouts Wrote unit tests for the functionality of the application Implemented Robolectric to speed up unit testing Android Developer Abercrombie Fitch New Albany OH US February 2009 to January 2010 Responsibilities Worked with Content Providers to connect with and consume Android Contacts The program was developed in Java using the Eclipse IDE and the Android Development Tool ADT Created robust automated unitfunctional test suites and deployment scripts Worked with the UIUX specialist to design a user experience for the application Developed several Compound Views and Custom Views Proven abilities to work closely and effectively with engineering and nonengineering teams Joined a team of 4 Android Java developers Worked with asynchronous processes with AsyncTask Services and Loaders Worked with asynchronous requests to the server with Volley library Tuned components for high performance and scalability using techniques such as caching code optimization and efficient memory management Constantly perform and manage code reviews Participated in the full lifecycle development process from product definition Chaired the integration with the Facebook API inside the application Programmed the locale to support different languages Used of support libraries to ensure backward compatibility with older OS versions Used Crashlytics to track user behavior and obtain mobile analytics A sound understanding of HTTP and RESTstyle web services Implemented the Android System Bar Tint library for translucent status and navigation bars Experience interacting with RESTful API and data formats like JSON XML etc Utilized SVN as source control management system Used JodaTime to provide a quality replacement for Java date and time classes Created the content provider logic to load the information with an Observer Pattern in the UI thread using Loaders Involved in testing and testing design for the application after each sprint Software Developer Abercrombie FitchNew Albany OH US October 2007 to February 2009 Responsibilities Created a new system to control de versions of a different process as a precursor of Subversion Created solution architecture for new mobile applications and mobile application enhancements Generated background checks to verify users identity and improve the security of the system Developed an ecommerce web project for clients in the US Used PHP to connection to the MySQL database Participated in the software support for endusers Web services implementation RESTful implementation with a Java front end Education Bachelor of Computer Science in Computer Science New Mexico State University Bachelor of Computer Science in Computer Science Pellissippi Community College Skills ANDROID MVP CORDOVA DOJO FIREBASE Additional Information Technical Skills FloatingActionButton OkHTTP JUnit Spork Google Analytics SOAP Android Auto Retrofit MVP ProGuard Glide AndroidAnnotations Libphonenumber Broadcast Receivers Cipher ZXing Chromecast Robotium JobScheduler Eclipse Android Wear Firebase EventBus Cordova JIRA Content Resolvers Push Notifications Git Lollipop Ion GSON LeakCanary Fragments REST AsyncTask Volley SmartTV Maven Espresso Dependency Injection Android Studio Subversion Facebook SDK Certificate Pinning animations CoordinatorLayout Protobuf RxJava Otto Dagger Hugo Loaders Answers Sugar Google Cloud Messaging Runtime permissions GreenDAO Kickflip Parse MonkeyRunner GcmNetworkManager ProgressBar NFC Fresco ORMLite Jenkins IBM Mainframe AIX OS iOS PovRay JSON Dojo Python C Mac OS Windows SharePoint ArcGIS Windows Server C Remedy SQLite AES Encryption Java SQL Linux OS CSS Scheme Pandas GGPlot HTML5 Bash Linux JavaScript",
    "extracted_keywords": [
        "Senior",
        "Android",
        "Developer",
        "Senior",
        "Android",
        "span",
        "lDeveloperspan",
        "Edison",
        "NJ",
        "years",
        "experience",
        "Computers",
        "Information",
        "Technology",
        "field",
        "Experience",
        "Android",
        "environment",
        "apps",
        "Play",
        "Store",
        "Product",
        "Management",
        "Delivery",
        "teams",
        "Project",
        "Management",
        "requirements",
        "tasks",
        "deliverables",
        "Experience",
        "network",
        "programming",
        "party",
        "APIs",
        "Software",
        "Engineers",
        "design",
        "development",
        "services",
        "Experience",
        "consumer",
        "app",
        "marketplace",
        "Expertise",
        "software",
        "engineering",
        "concepts",
        "design",
        "hypermedia",
        "device",
        "management",
        "seminative",
        "HTML5",
        "technologies",
        "memory",
        "management",
        "Experience",
        "storage",
        "solutions",
        "SQLite",
        "Monitored",
        "triaged",
        "Android",
        "apps",
        "performance",
        "bugs",
        "Familiarity",
        "development",
        "methodologies",
        "XP",
        "SCRUM",
        "Technology",
        "lover",
        "developments",
        "structure",
        "Ability",
        "issues",
        "Realworld",
        "experience",
        "scale",
        "availability",
        "applications",
        "Experience",
        "scripting",
        "languages",
        "Python",
        "Ruby",
        "background",
        "OOP",
        "knowledge",
        "software",
        "design",
        "patternsbest",
        "practices",
        "experiences",
        "Experience",
        "teams",
        "management",
        "Expertise",
        "familiarity",
        "user",
        "interfaces",
        "Experience",
        "volume",
        "facing",
        "applications",
        "scale",
        "Selfmotivated",
        "proactive",
        "structure",
        "Experience",
        "image",
        "manipulation",
        "animation",
        "techniques",
        "alpha",
        "communication",
        "project",
        "management",
        "skills",
        "ability",
        "relationships",
        "boards",
        "stakeholders",
        "executives",
        "levels",
        "staff",
        "clients",
        "integration",
        "servers",
        "Jenkins",
        "Codeship",
        "development",
        "process",
        "nonphone",
        "Android",
        "Frameworks",
        "Android",
        "Smart",
        "TV",
        "Android",
        "Auto",
        "testing",
        "ORMs",
        "ORMLite",
        "GreenDAO",
        "database",
        "lookups",
        "creation",
        "familiarity",
        "Google",
        "Cloud",
        "Services",
        "Google",
        "APIs",
        "Location",
        "Google",
        "Maps",
        "Google",
        "Custom",
        "Search",
        "Google",
        "Analytics",
        "environment",
        "SCRUM",
        "pair",
        "programming",
        "fundamentals",
        "Google",
        "Play",
        "Store",
        "publisher",
        "ASO",
        "campaigns",
        "keyword",
        "lookups",
        "implementation",
        "Firebase",
        "Mobile",
        "Backend",
        "setup",
        "integration",
        "servers",
        "build",
        "creation",
        "process",
        "Travis",
        "Jenkins",
        "CircleCI",
        "design",
        "architecture",
        "documents",
        "web",
        "applications",
        "Android",
        "Wearables",
        "Holo",
        "Material",
        "design",
        "ART",
        "Runtime",
        "permissions",
        "Standby",
        "mode",
        "changes",
        "Android",
        "N",
        "multiwindow",
        "support",
        "drag",
        "behavior",
        "business",
        "Knowledge",
        "Transfer",
        "sessions",
        "recruits",
        "efforts",
        "background",
        "professionals",
        "system",
        "analyst",
        "graphic",
        "designers",
        "developers",
        "documenters",
        "Fragments",
        "layouts",
        "animations",
        "Material",
        "Design",
        "components",
        "Compound",
        "Views",
        "Custom",
        "Views",
        "user",
        "interface",
        "requirements",
        "process",
        "situations",
        "variables",
        "account",
        "HTTP",
        "clients",
        "Web",
        "Resource",
        "Retrofit",
        "Volley",
        "OkHTTP",
        "teams",
        "steps",
        "requirement",
        "gathering",
        "process",
        "designing",
        "builds",
        "emulators",
        "BlueStacks",
        "Genymotion",
        "Android",
        "Studio",
        "working",
        "SOAP",
        "web",
        "services",
        "Retrofit",
        "Volley",
        "OkHttp",
        "Selfmotivated",
        "supervision",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Android",
        "Developer",
        "San",
        "Francisco",
        "CA",
        "US",
        "April",
        "Present",
        "Responsibilities",
        "features",
        "Fitbit",
        "Social",
        "Adventure",
        "project",
        "capability",
        "participants",
        "map",
        "capability",
        "friends",
        "Adventure",
        "LeaderboardFinishers",
        "screen",
        "ranking",
        "participants",
        "countdown",
        "bar",
        "countdown",
        "race",
        "code",
        "display",
        "Views",
        "screen",
        "factors",
        "participant",
        "race",
        "race",
        "ObjectAnimator",
        "progress",
        "participants",
        "Avatars",
        "Adventure",
        "Map",
        "Object",
        "Animator",
        "participants",
        "Avatar",
        "frame",
        "update",
        "Social",
        "Adventure",
        "challenge",
        "tiles",
        "custom",
        "RecyclerView",
        "Adapters",
        "GreenDao",
        "data",
        "Activity",
        "Fragment",
        "lifecycles",
        "utility",
        "classes",
        "capabilities",
        "Adventure",
        "Social",
        "Adventures",
        "Solo",
        "Adventures",
        "bug",
        "fixes",
        "verifying",
        "data",
        "inputs",
        "nonnull",
        "Activities",
        "Fragments",
        "callbacks",
        "Intent",
        "flags",
        "SINGLETOP",
        "Activity",
        "task",
        "RecyclerView",
        "Adapter",
        "classes",
        "custom",
        "LayoutManagers",
        "classes",
        "memory",
        "leaks",
        "LoaderManagers",
        "data",
        "Activitys",
        "Fragments",
        "lifecycle",
        "custom",
        "RecyclerView",
        "UX",
        "software",
        "method",
        "Sprints",
        "estimation",
        "Story",
        "Points",
        "backlog",
        "items",
        "Senior",
        "Android",
        "Developer",
        "Cisco",
        "San",
        "Jose",
        "CA",
        "US",
        "October",
        "March",
        "Responsibilities",
        "login",
        "page",
        "Cisco",
        "Single",
        "Sign",
        "users",
        "resources",
        "web",
        "URLs",
        "custom",
        "class",
        "WebView",
        "class",
        "redirection",
        "URLs",
        "resource",
        "authentication",
        "Observed",
        "SSO",
        "cookie",
        "authentication",
        "class",
        "JavascriptInterface",
        "annotation",
        "JSON",
        "content",
        "custom",
        "WebView",
        "class",
        "A",
        "UI",
        "content",
        "JSON",
        "data",
        "information",
        "state",
        "Cisco",
        "application",
        "servers",
        "data",
        "attributes",
        "file",
        "attributes",
        "UpDown",
        "status",
        "Date",
        "Time",
        "staus",
        "hostnames",
        "Application",
        "server",
        "hosts",
        "background",
        "service",
        "data",
        "web",
        "URL",
        "data",
        "UI",
        "page",
        "connection",
        "Implementation",
        "Google",
        "Cloud",
        "app",
        "Push",
        "Notifications",
        "data",
        "set",
        "application",
        "servers",
        "Down",
        "Up",
        "status",
        "server",
        "Registered",
        "topic",
        "Push",
        "Notifications",
        "devices",
        "app",
        "Push",
        "Notifications",
        "Android",
        "3rd",
        "party",
        "RxJava",
        "IcePick",
        "Butterknife",
        "Retrofit",
        "RecyclerViews",
        "RecyclerView",
        "Adapters",
        "SwipeRefreshLayouts",
        "background",
        "Services",
        "GCMListenerService",
        "GCM",
        "Push",
        "Notifications",
        "APIs",
        "SDK",
        "levels",
        "compatibility",
        "Identification",
        "issues",
        "test",
        "cycles",
        "designers",
        "developers",
        "redesign",
        "UI",
        "screen",
        "compound",
        "views",
        "Push",
        "Notification",
        "features",
        "Google",
        "Cloud",
        "Messaging",
        "Firebase",
        "Cloud",
        "location",
        "API",
        "Maps",
        "View",
        "GoogleView",
        "Google",
        "Maps",
        "SQLiteOpenHelper",
        "database",
        "CRUD",
        "operations",
        "testing",
        "team",
        "developer",
        "testing",
        "tools",
        "JUnit",
        "Robolectric",
        "Espresso",
        "Retrofit",
        "RxJava",
        "HTTP",
        "requests",
        "callback",
        "Git",
        "version",
        "control",
        "tool",
        "source",
        "control",
        "management",
        "system",
        "custom",
        "behavior",
        "screens",
        "CoordinatorLayout",
        "Toolbar",
        "Action",
        "Button",
        "user",
        "scroll",
        "Android",
        "Architect",
        "Mooresville",
        "NC",
        "US",
        "June",
        "October",
        "Responsibilities",
        "services",
        "activities",
        "use",
        "communication",
        "services",
        "Java",
        "threading",
        "background",
        "processes",
        "sync",
        "adapters",
        "requirements",
        "setting",
        "interviews",
        "customer",
        "animations",
        "transitions",
        "box",
        "features",
        "party",
        "web",
        "services",
        "Retrofit",
        "OkHTTP",
        "Jackson",
        "frontend",
        "architecture",
        "Model",
        "View",
        "ViewModel",
        "design",
        "pattern",
        "practices",
        "Android",
        "development",
        "components",
        "Activities",
        "Services",
        "Content",
        "Providers",
        "Broadcast",
        "Receivers",
        "client",
        "applications",
        "serverside",
        "APIs",
        "Google",
        "Maps",
        "API",
        "integration",
        "application",
        "Integrated",
        "Offline",
        "support",
        "hand",
        "signal",
        "code",
        "libraries",
        "phones",
        "TVs",
        "watches",
        "automobiles",
        "process",
        "technologies",
        "project",
        "requirements",
        "users",
        "tool",
        "mock",
        "navigation",
        "approval",
        "custom",
        "animations",
        "transitions",
        "user",
        "experience",
        "distinction",
        "development",
        "production",
        "versions",
        "app",
        "credentials",
        "settings",
        "backend",
        "Urban",
        "Airship",
        "Ability",
        "priorities",
        "environment",
        "productivity",
        "View",
        "Pager",
        "Indicator",
        "feedback",
        "user",
        "background",
        "processing",
        "status",
        "IcePick",
        "references",
        "way",
        "memory",
        "leaks",
        "Implementation",
        "user",
        "interface",
        "components",
        "WebView",
        "ListView",
        "ImageView",
        "TextView",
        "data",
        "application",
        "Identification",
        "issues",
        "test",
        "cycles",
        "Chart",
        "library",
        "issues",
        "market",
        "trends",
        "tools",
        "information",
        "state",
        "Crashlytics",
        "Mixpanel",
        "Flurry",
        "Answers",
        "understanding",
        "data",
        "models",
        "data",
        "access",
        "architecture",
        "optimization",
        "Android",
        "app",
        "user",
        "adoption",
        "Itext",
        "pdf",
        "files",
        "controller",
        "Familiarity",
        "Android",
        "tool",
        "ecosystem",
        "development",
        "testing",
        "debugging",
        "performance",
        "Senior",
        "Android",
        "Developer",
        "Delta",
        "Air",
        "Lines",
        "Atlanta",
        "GA",
        "US",
        "November",
        "June",
        "Responsibilities",
        "Spongy",
        "Castle",
        "data",
        "lead",
        "company",
        "technology",
        "stack",
        "custom",
        "lock",
        "screen",
        "widget",
        "user",
        "music",
        "Loopj",
        "callbacks",
        "Loading",
        "Everywhere",
        "library",
        "custom",
        "compound",
        "views",
        "UIUX",
        "specifications",
        "ORMs",
        "ORMLite",
        "GreenDAO",
        "databases",
        "cache",
        "information",
        "nonetwork",
        "environments",
        "List",
        "View",
        "view",
        "Holder",
        "pattern",
        "performance",
        "Proficiency",
        "Java",
        "Worked",
        "JDK",
        "Collections",
        "Generics",
        "Networking",
        "Core",
        "Java",
        "Understands",
        "Java",
        "concurrency",
        "memory",
        "management",
        "Content",
        "Provider",
        "implementation",
        "network",
        "connections",
        "build",
        "Coordinated",
        "implementation",
        "Volley",
        "HTTP",
        "requests",
        "application",
        "design",
        "implementation",
        "test",
        "phases",
        "application",
        "Use",
        "database",
        "schema",
        "data",
        "storage",
        "schedule",
        "support",
        "Google",
        "Nexus",
        "Player",
        "Amazon",
        "Fire",
        "TV",
        "Modified",
        "navigation",
        "activities",
        "Fragments",
        "documentation",
        "detail",
        "design",
        "JustInMind",
        "tool",
        "solutions",
        "media",
        "streaming",
        "user",
        "experience",
        "understanding",
        "Android",
        "app",
        "development",
        "life",
        "cycle",
        "Google",
        "Play",
        "Amazon",
        "App",
        "Store",
        "compliance",
        "policies",
        "submissions",
        "requirements",
        "Push",
        "Notifications",
        "Urban",
        "Airship",
        "use",
        "support",
        "libraries",
        "compatibility",
        "versions",
        "integration",
        "tools",
        "Jenkins",
        "Travis",
        "CI",
        "testing",
        "frameworks",
        "Espresso",
        "Mentored",
        "developer",
        "practices",
        "custom",
        "views",
        "data",
        "tweaks",
        "look",
        "Model",
        "design",
        "Integrated",
        "Java",
        "Guava",
        "string",
        "processing",
        "concurrency",
        "IO",
        "functions",
        "repositories",
        "Workflows",
        "Version",
        "Control",
        "Software",
        "Senior",
        "Android",
        "Developer",
        "Instacart",
        "San",
        "Francisco",
        "CA",
        "US",
        "March",
        "November",
        "Responsibilities",
        "data",
        "device",
        "information",
        "use",
        "Guide",
        "decisions",
        "architecture",
        "strategy",
        "Google",
        "YouTube",
        "API",
        "videos",
        "ListView",
        "adapters",
        "data",
        "lists",
        "runtime",
        "Thrive",
        "environment",
        "call",
        "JSON",
        "response",
        "data",
        "user",
        "Mentored",
        "Junior",
        "Android",
        "Developers",
        "development",
        "cycle",
        "process",
        "Git",
        "version",
        "control",
        "tool",
        "source",
        "control",
        "management",
        "system",
        "UIUX",
        "application",
        "animations",
        "transitions",
        "SCRUM",
        "methodology",
        "prototype",
        "weeks",
        "Experience",
        "Video",
        "Static",
        "content",
        "advertising",
        "UIUX",
        "guidelines",
        "Googles",
        "Material",
        "Design",
        "ListViews",
        "catalogs",
        "Setup",
        "jaCoCo",
        "code",
        "coverage",
        "code",
        "UI",
        "Espresso",
        "Beta",
        "Testing",
        "Crashlytics",
        "applications",
        "Android",
        "platforms",
        "specifications",
        "design",
        "team",
        "clients",
        "Integrated",
        "Retrofit",
        "web",
        "services",
        "POST",
        "DELETE",
        "PUT",
        "innovation",
        "design",
        "architecture",
        "apps",
        "Google",
        "GSON",
        "files",
        "features",
        "applications",
        "peer",
        "reviews",
        "colleagues",
        "code",
        "standards",
        "assistance",
        "code",
        "merges",
        "deployments",
        "production",
        "stability",
        "Senior",
        "Android",
        "Developer",
        "Old",
        "NavySan",
        "Francisco",
        "CA",
        "August",
        "March",
        "Responsibilities",
        "meetings",
        "clients",
        "business",
        "requirements",
        "versions",
        "application",
        "subversion",
        "practices",
        "Experience",
        "Source",
        "Control",
        "Git",
        "SVN",
        "Mercurial",
        "Git",
        "version",
        "control",
        "tool",
        "source",
        "control",
        "management",
        "system",
        "SCRUM",
        "meetings",
        "project",
        "progress",
        "Use",
        "database",
        "schema",
        "data",
        "interface",
        "UI",
        "activities",
        "wireframes",
        "Adobe",
        "Photoshop",
        "form",
        "factor",
        "integration",
        "multipanel",
        "activities",
        "Fragments",
        "Intents",
        "database",
        "updates",
        "boot",
        "JUnit",
        "test",
        "cases",
        "helper",
        "storage",
        "application",
        "versions",
        "application",
        "code",
        "Experience",
        "building",
        "custom",
        "API",
        "solutions",
        "parties",
        "Designed",
        "application",
        "MVP",
        "approach",
        "interfaces",
        "decoupling",
        "classes",
        "Use",
        "Hudson",
        "integration",
        "tool",
        "application",
        "Custom",
        "Views",
        "Compound",
        "Views",
        "AsyncTask",
        "services",
        "AsyncTask",
        "tasks",
        "background",
        "OOP",
        "knowledge",
        "software",
        "design",
        "patternsbest",
        "practices",
        "experience",
        "debugging",
        "Android",
        "applications",
        "UIUX",
        "application",
        "Custom",
        "Views",
        "List",
        "Views",
        "Development",
        "quality",
        "code",
        "cuttingedge",
        "techniques",
        "tools",
        "utilities",
        "Widgets",
        "purpose",
        "track",
        "tasks",
        "object",
        "stats",
        "Integrated",
        "JUnit",
        "test",
        "cases",
        "Senior",
        "Android",
        "Developer",
        "NationwideColumbus",
        "OH",
        "January",
        "August",
        "Responsibilities",
        "Technology",
        "lover",
        "developments",
        "Coordinate",
        "team",
        "software",
        "engineers",
        "tasks",
        "URIs",
        "Content",
        "Provider",
        "items",
        "Part",
        "effort",
        "code",
        "client",
        "side",
        "Web",
        "Services",
        "enhancement",
        "compatibility",
        "use",
        "RESTfull",
        "calls",
        "data",
        "application",
        "Implement",
        "transition",
        "activities",
        "UIUX",
        "tools",
        "Balsamiq",
        "Mockups",
        "ACRA",
        "API",
        "error",
        "program",
        "Java",
        "Eclipse",
        "Android",
        "Development",
        "Tool",
        "Managed",
        "code",
        "review",
        "sessions",
        "quality",
        "code",
        "services",
        "back",
        "HTTP",
        "calls",
        "Google",
        "Maps",
        "API",
        "integration",
        "application",
        "Peer",
        "code",
        "Agile",
        "Software",
        "development",
        "classes",
        "bundle",
        "transportation",
        "abreast",
        "industry",
        "trends",
        "technologies",
        "environment",
        "excellence",
        "code",
        "design",
        "code",
        "reviews",
        "user",
        "interface",
        "list",
        "view",
        "custom",
        "view",
        "compound",
        "view",
        "layouts",
        "Wrote",
        "unit",
        "functionality",
        "application",
        "Robolectric",
        "unit",
        "Android",
        "Developer",
        "Abercrombie",
        "New",
        "Albany",
        "OH",
        "US",
        "February",
        "January",
        "Responsibilities",
        "Content",
        "Providers",
        "Android",
        "Contacts",
        "program",
        "Java",
        "Eclipse",
        "IDE",
        "Android",
        "Development",
        "Tool",
        "ADT",
        "test",
        "suites",
        "deployment",
        "scripts",
        "UIUX",
        "specialist",
        "user",
        "experience",
        "application",
        "Compound",
        "Views",
        "Custom",
        "Views",
        "Proven",
        "abilities",
        "engineering",
        "nonengineering",
        "teams",
        "team",
        "Android",
        "Java",
        "developers",
        "processes",
        "AsyncTask",
        "Services",
        "Loaders",
        "requests",
        "server",
        "Volley",
        "library",
        "components",
        "performance",
        "scalability",
        "techniques",
        "code",
        "optimization",
        "memory",
        "management",
        "code",
        "reviews",
        "lifecycle",
        "development",
        "process",
        "product",
        "definition",
        "integration",
        "Facebook",
        "API",
        "application",
        "locale",
        "languages",
        "support",
        "libraries",
        "compatibility",
        "OS",
        "versions",
        "Crashlytics",
        "user",
        "behavior",
        "analytics",
        "understanding",
        "HTTP",
        "RESTstyle",
        "web",
        "services",
        "Android",
        "System",
        "Bar",
        "Tint",
        "library",
        "status",
        "navigation",
        "bars",
        "Experience",
        "API",
        "data",
        "formats",
        "XML",
        "SVN",
        "source",
        "control",
        "management",
        "system",
        "JodaTime",
        "quality",
        "replacement",
        "Java",
        "date",
        "time",
        "classes",
        "content",
        "provider",
        "logic",
        "information",
        "Observer",
        "Pattern",
        "UI",
        "thread",
        "Loaders",
        "testing",
        "testing",
        "design",
        "application",
        "sprint",
        "Software",
        "Developer",
        "Abercrombie",
        "FitchNew",
        "Albany",
        "OH",
        "US",
        "October",
        "February",
        "Responsibilities",
        "system",
        "versions",
        "process",
        "precursor",
        "Subversion",
        "Created",
        "solution",
        "architecture",
        "applications",
        "application",
        "enhancements",
        "background",
        "checks",
        "users",
        "identity",
        "security",
        "system",
        "ecommerce",
        "web",
        "project",
        "clients",
        "US",
        "PHP",
        "connection",
        "MySQL",
        "database",
        "software",
        "support",
        "endusers",
        "Web",
        "services",
        "implementation",
        "implementation",
        "Java",
        "front",
        "end",
        "Education",
        "Bachelor",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "New",
        "Mexico",
        "State",
        "University",
        "Bachelor",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "Pellissippi",
        "Community",
        "College",
        "Skills",
        "ANDROID",
        "MVP",
        "CORDOVA",
        "DOJO",
        "FIREBASE",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "FloatingActionButton",
        "OkHTTP",
        "JUnit",
        "Spork",
        "Google",
        "Analytics",
        "SOAP",
        "Android",
        "Auto",
        "Retrofit",
        "MVP",
        "ProGuard",
        "Glide",
        "AndroidAnnotations",
        "Libphonenumber",
        "Broadcast",
        "Receivers",
        "Cipher",
        "ZXing",
        "Chromecast",
        "Robotium",
        "JobScheduler",
        "Eclipse",
        "Android",
        "Wear",
        "Firebase",
        "EventBus",
        "Cordova",
        "JIRA",
        "Content",
        "Resolvers",
        "Notifications",
        "Git",
        "Lollipop",
        "Ion",
        "GSON",
        "LeakCanary",
        "Fragments",
        "REST",
        "AsyncTask",
        "Volley",
        "SmartTV",
        "Maven",
        "Espresso",
        "Dependency",
        "Injection",
        "Android",
        "Studio",
        "Subversion",
        "Facebook",
        "SDK",
        "Certificate",
        "Pinning",
        "animations",
        "CoordinatorLayout",
        "Protobuf",
        "RxJava",
        "Otto",
        "Dagger",
        "Hugo",
        "Loaders",
        "Answers",
        "Sugar",
        "Google",
        "Cloud",
        "Runtime",
        "permissions",
        "GreenDAO",
        "Kickflip",
        "Parse",
        "MonkeyRunner",
        "GcmNetworkManager",
        "ProgressBar",
        "NFC",
        "Fresco",
        "ORMLite",
        "Jenkins",
        "IBM",
        "Mainframe",
        "AIX",
        "iOS",
        "PovRay",
        "JSON",
        "Dojo",
        "Python",
        "C",
        "Mac",
        "OS",
        "Windows",
        "SharePoint",
        "ArcGIS",
        "Windows",
        "Server",
        "C",
        "Remedy",
        "SQLite",
        "AES",
        "Encryption",
        "Java",
        "SQL",
        "Linux",
        "CSS",
        "Scheme",
        "Pandas",
        "GGPlot",
        "HTML5",
        "Bash",
        "Linux",
        "JavaScript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:58:17.610593",
    "resume_data": "Senior Android Developer Senior Android span lDeveloperspan Edison NJ 10 years of experience working in the Computers and Information Technology field Experience working with the Android environment with more than 10 deployed apps in the Play Store Worked with Product Management Delivery teams and Project Management to translate requirements into tasks for deliverables Experience with network programming and consuming third party APIs Collaborated with Software Engineers for the design and development of backend services Experience working a significant consumer app that is currently available in the marketplace Expertise of advanced software engineering concepts objectoriented design hypermedia device management seminative HTML5 technologies and memory management Experience with embedded local storage solutions such as SQLite Monitored triaged and assessed the Android apps performance bugs and defects Familiarity with agileiterative development methodologies XP SCRUM etc Technology lover that naturally stays uptodate on relevant new developments Selfmotivated productive and works well even withwithout formal structure Ability to debug and fix complex issues Realworld experience is building very large scale high availability applications Experience with modern scripting languages Python Ruby etc Solid background in OOP and knowledge of software design patternsbest practices Experience prototyping mobile experiences Experience working onsite and offsite teams and management Expertise or familiarity with welldesigned user interfaces Experience building high volume consuming facing applications at massive scale Selfmotivated proactive and works well within a formal structure Experience with image manipulation and animation including techniques like alpha blending Exceptional communication project management and organizational skills with the ability to build positive relationships with boards and stakeholders senior executives all levels of staff and clients Set up the continuous integration servers using Jenkins and Codeship Experienced in the development process for nonphone and tablet Android Frameworks Android Wear Smart TV developing and Android Auto testing Utilized multiple ORMs like ORMLite and GreenDAO to set up the database lookups and creation Strong familiarity using Google Cloud Services and Google APIs like Location Google Maps Google Custom Search Google Analytics Worked in an Agile environment with strong SCRUM and pair programming fundamentals Google Play Store certified publisher building ASO campaigns and keyword lookups Tested an early implementation of Firebase as a straightforward and realtime Mobile Backend Created the initial setup of multiple continuous integration servers to help the build creation process Travis Jenkins CircleCI Experienced writing design and architecture documents for mobile and web applications Experienced with Android 40 Wearables Holo interface 50 Material design ART 60 Runtime permissions Standby mode Currently previewing changes in Android N like multiwindow support and the drag and drop behavior Conducted business and technical Knowledge Transfer sessions for new recruits Coordinated efforts with different background professionals such as system analyst graphic designers developers and technical documenters Used Fragments diverse layouts animations Material Design components Compound Views and Custom Views to fulfill user interface requirements Managed the decisionmaking process of critical situations with different variables taken into account Have implemented customized HTTP clients to consume a Web Resource with Retrofit Volley OkHTTP and the native HttpURLConnection Led various teams from early steps in the requirement gathering process to the designing of final builds Used different emulators including BlueStacks Genymotion and the Android Studio builtin Skilled working with SOAP and RESTful web services using Retrofit Volley and OkHttp Selfmotivated goaloriented and able to work without supervision Authorized to work in the US for any employer Work Experience Senior Android Developer San Francisco CA US April 2017 to Present Responsibilities Developed features for the Fitbit Social Adventure project which include the capability to view a participants progress across a map and a capability to participate with friends to see who can finish an Adventure first Implemented a LeaderboardFinishers screen which displays the ranking of the participants and a countdown bar which displays a live countdown until the race finishes Developed code to dynamically alter the display of Views in the screen based upon factors such as when a participant has finished a race or a race has finished Used ObjectAnimator to animate the progress of a participants Avatars as they move across the Adventure Map The Object Animator would redraw the participants Avatar every frame update Implemented new Social Adventure challenge tiles by creating custom RecyclerView Adapters Used GreenDao to persist data across all Activity and Fragment lifecycles Updated utility classes to provide additional capabilities including to verify if an Adventure has completed and to distinguish between Social Adventures and Solo Adventures Resolved bug fixes which included verifying data inputs are nonnull verifying Activities and Fragments are visible when returning from callbacks using Intent flags such as SINGLETOP so that only one Activity in a task is created and modifying RecyclerView Adapter classes to create custom LayoutManagers Used static inner classes to avoid memory leaks Implemented LoaderManagers to asynchronously load data and to integrate with an Activitys or Fragments lifecycle Developed a custom RecyclerView to provide a more fluid UX when being used with an AppToolbarLayout Developed software using the Agile method including engaging in biweekly Sprints and estimation of Story Points for backlog items Senior Android Developer Cisco San Jose CA US October 2016 to March 2017 Responsibilities A login page that utilized Cisco Single Sign On to authenticate users before accessing protected resources via web URLs Utilized a custom class that extended from the WebView class that observed redirection of URLs when a resource required authentication prior to being accessed Observed a SSO cookie that was set when authentication was established successfully Utilized a class that implemented the JavascriptInterface annotation to store retrieved JSON content via the custom WebView class A customizable UI that was based upon the content of the retrieved JSON data that contained information about the state of Cisco application servers including whether they were Up or Down JSON data was hierarchical with several attributes which could be customized by a separate JSON file to display specific attributes such the UpDown status Date Time of the latest staus hostnames of the Application server hosts etc A background service that periodically pulled data from the web URL and sent refreshed data to the UI page appropriately via a bound connection Implementation of Google Cloud Messaging with the app to register for and receive Push Notifications that contained similar hierarchical JSON data pertinent to a set of application servers with the Down and a single Up status when a previously Down server had been restored Registered to a specific topic to receive Push Notifications so that all devices with app could receive the same Push Notifications Utilized the Android 3rd party libraries RxJava IcePick Butterknife and Retrofit Utilized RecyclerViews and RecyclerView Adapters SwipeRefreshLayouts and background Services Extended the InstanceIDListenerService and GCMListenerService to receive GCM Push Notifications Used APIs from different SDK levels to support backward compatibility Identification of issues during the test cycles Unified designers and developers in the redesign of the UI screen with compound views Added Push Notification features with Google Cloud Messaging and Firebase Cloud Messaging Used the location API Maps View GoogleView and Google Maps Used the SQLiteOpenHelper to connect with the local database and perform CRUD operations Worked with the testing team and used developer testing tools like JUnit Robolectric Espresso Included Retrofit with RxJava to make asynchronous HTTP requests in an anonymous callback Utilized Git version control tool as the source control management system Generated a custom behavior in multiple screens included in the CoordinatorLayout to hide the Toolbar and the Floating Action Button on the user scroll Android Architect Mooresville NC US June 2015 to October 2016 Responsibilities Implemented binding services from activities and the use of communication with services using Java threading for background processes and sync adapters Obtained the requirements through the setting of interviews with the customer Added several animations and transitions without of the box features and third party libraries Communicated with RESTful web services using Retrofit OkHTTP and Jackson Proposed a frontend architecture using the Model View ViewModel design pattern Implemented the best practices for Android mobile development with their main components Activities Services Content Providers and Broadcast Receivers Tied mobile client applications to critical serverside APIs Introduced the Google Maps API integration with the application Integrated Offline support offers you have on hand when you have no signal Built and maintained common code libraries used in phones tablets TVs smart watches and automobiles Participated in the decisionmaking process for selecting the appropriate technologies for the project based on requirements and the users needs Used JustInMind prototyping tool for the first mock for the navigation approval Created custom animations and transitions to improve the user experience Made a distinction between development and production versions of the app each with their distinct credentials and settings in the backend using Urban Airship Ability to manage competing priorities in a complex environment and maintain high productivity Used the View Pager Indicator to provide feedback to the user about the background processing status Implemented IcePick when building references to track them in an easier way and avoid memory leaks Implementation of various user interface components such as WebView ListView ImageView TextView to display the data for the application Identification of issues during the test cycles Used Chart Boost library to help track issues and market trends Configured multiple analytic tools to get valuable information on a postinstall state Crashlytics Mixpanel Flurry Answers Solid understanding of data models and data access architecture and optimization Designed and developed the Android app as simple as possible for quick user adoption Used Itext to generate pdf files from a controller Familiarity with the Android tool ecosystem for development testing debugging and performance benchmarking Senior Android Developer Delta Air Lines Atlanta GA US November 2013 to June 2015 Responsibilities Used Spongy Castle to encrypt sensible data Served as a technical lead within the company to develop the technology stack Built a custom lock screen widget for allowing the user stop play and forward music Used Loopj for asynchronous callbacks together with the Loading Everywhere library Developed custom and compound views to match UIUX specifications Used multiple ORMs like ORMLite and GreenDAO to set up databases and cache information to be used in nonetwork environments Implemented List View using the view Holder pattern to improve the performance Proficiency in Java Worked with JDK Collections Generics Networking Core Java Understands Java concurrency memory management Created a compact Content Provider implementation to handle caching between network connections in the final build Coordinated the implementation of Volley in the HTTP requests inside the application Responsible for the design implementation and test phases of the application Use of SQLite database schema to persistent data storage for every schedule Added support for Google Nexus Player and Amazon Fire TV Modified the navigation and replaced activities with Fragments Generated documentation for detail design including wireframing using JustInMind prototyping tool Created innovative solutions in media streaming and mobile user experience Solid understanding of Android app development life cycle including Google Play and Amazon App Store compliance policies and submissions requirements Introduced the Push Notifications through Urban Airship Extensive use of support libraries to ensure backward compatibility with older Android versions Experience with continuous integration tools like Jenkins or Travis CI and automated testing frameworks such as Espresso Mentored junior developer on best practices for coding Created custom views to present data as it was needed Designed tweaks to the look and feel using Model design Integrated Java Guava Libraries for string processing concurrency libraries IO functions Used GitHub private repositories with standard Workflows as a Version Control Software Senior Android Developer Instacart San Francisco CA US March 2013 to November 2013 Responsibilities Used persistent data on the device to store information already loaded for future use Guide decisions on architecture and technical strategy Implemented the Google YouTube API for playing videos Used ListView and adapters to load data onto lists at runtime Thrive working in a fast paced agile environment constantly learning Implemented RESTful call to receive JSON based response and parsed to display data to the user Mentored Junior Android Developers during the development cycle and process Utilized Git version control tool as source control management system Designed the UIUX of the application using animations and transitions Worked with SCRUM methodology to have a prototype to show every two weeks Experience in working with Video Static content and advertising Enhanced the UIUX to follow the guidelines provided by Googles Material Design Implemented ListViews for loading most of the catalogs Setup jaCoCo to check my code coverage of new code Tested the UI with Espresso and Beta Testing with Crashlytics Independently developed and expanded native mobile applications for Android platforms according to specifications handled by a design team or the clients Integrated Retrofit to consume RESTful web services GET POST DELETE PUT Have participated in innovation design and architecture of the apps Used Google GSON to parse JSON files Designed and implemented userfacing features in our mobile applications Performed peer reviews on colleagues code to ensure consistent standards Providing assistance to code merges builds deployments and ensuring production stability Senior Android Developer Old NavySan Francisco CA August 2012 to March 2013 Responsibilities Attended the meetings with the clients to know more about business and requirements Helped to manage the versions of the application through subversion best practices Experience using Source Control Git SVN Mercurial Utilized Git version control tool as source control management system Participated and conducted SCRUM meetings to review project progress Use of SQLite database schema to persistent data Developed graphic interface and UI for some activities Creates wireframes using Adobe Photoshop Ensure excellent form factor integration by creating multipanel activities with Fragments Used Pending Intents to handle database updates after a boot was completed Worked with JUnit to complete all test cases Created the SQLite helper for the local storage of the application Reused some of the earlier versions of the application code Experience building custom API solutions for external parties to tie into Designed the application with an MVP approach setting up all the interfaces and the decoupling of the classes Use of Hudson as continuous integration tool scheduling the application Developed Custom Views and Compound Views Worked with AsyncTask for multithreading and services with AsyncTask for longer running asynchronous tasks Solid background in OOP and knowledge of software design patternsbest practices Considerable experience debugging and profiling Android applications Designed the UIUX of the application using Custom Views and List Views Development of quality code using cuttingedge techniques tools and utilities Designed Widgets for the purpose of keeping track of tasks and reporting object completed updating your stats Integrated JUnit to complete all test cases Senior Android Developer NationwideColumbus OH January 2010 to August 2012 Responsibilities Technology lover that naturally stays uptodate on relevant new developments Coordinate team of software engineers to complete required tasks Designed the URIs needed to access and modify the exported Content Provider items Part of an effort to standardize code for the client side of RESTful Web Services Used enhancement for multidevice compatibility Made use of RESTfull calls to get de data to be shown on the application Implement transition between activities UIUX design and wireframing with multiple tools including Balsamiq Mockups Implemented ACRA API to handle error reporting Composed the program using Java with Eclipse and the Android Development Tool Managed code review sessions to always have high quality reusable simple documented code Implemented services to run on the back to handle HTTP calls Worked with the Google Maps API integration with the application Peer reviewed code using Agile Software development Implemented Parcelable to the classes for easier bundle transportation Kept abreast of industry trends and technologies being prepared to apply them quickly Cultivate an environment of excellence through code design code reviews Constructed the user interface by using list view custom view compound view and various layouts Wrote unit tests for the functionality of the application Implemented Robolectric to speed up unit testing Android Developer Abercrombie Fitch New Albany OH US February 2009 to January 2010 Responsibilities Worked with Content Providers to connect with and consume Android Contacts The program was developed in Java using the Eclipse IDE and the Android Development Tool ADT Created robust automated unitfunctional test suites and deployment scripts Worked with the UIUX specialist to design a user experience for the application Developed several Compound Views and Custom Views Proven abilities to work closely and effectively with engineering and nonengineering teams Joined a team of 4 Android Java developers Worked with asynchronous processes with AsyncTask Services and Loaders Worked with asynchronous requests to the server with Volley library Tuned components for high performance and scalability using techniques such as caching code optimization and efficient memory management Constantly perform and manage code reviews Participated in the full lifecycle development process from product definition Chaired the integration with the Facebook API inside the application Programmed the locale to support different languages Used of support libraries to ensure backward compatibility with older OS versions Used Crashlytics to track user behavior and obtain mobile analytics A sound understanding of HTTP and RESTstyle web services Implemented the Android System Bar Tint library for translucent status and navigation bars Experience interacting with RESTful API and data formats like JSON XML etc Utilized SVN as source control management system Used JodaTime to provide a quality replacement for Java date and time classes Created the content provider logic to load the information with an Observer Pattern in the UI thread using Loaders Involved in testing and testing design for the application after each sprint Software Developer Abercrombie FitchNew Albany OH US October 2007 to February 2009 Responsibilities Created a new system to control de versions of a different process as a precursor of Subversion Created solution architecture for new mobile applications and mobile application enhancements Generated background checks to verify users identity and improve the security of the system Developed an ecommerce web project for clients in the US Used PHP to connection to the MySQL database Participated in the software support for endusers Web services implementation RESTful implementation with a Java front end Education Bachelor of Computer Science in Computer Science New Mexico State University Bachelor of Computer Science in Computer Science Pellissippi Community College Skills ANDROID MVP CORDOVA DOJO FIREBASE Additional Information Technical Skills FloatingActionButton OkHTTP JUnit Spork Google Analytics SOAP Android Auto Retrofit MVP ProGuard Glide AndroidAnnotations Libphonenumber Broadcast Receivers Cipher ZXing Chromecast Robotium JobScheduler Eclipse Android Wear Firebase EventBus Cordova JIRA Content Resolvers Push Notifications Git Lollipop Ion GSON LeakCanary Fragments REST AsyncTask Volley SmartTV Maven Espresso Dependency Injection Android Studio Subversion Facebook SDK Certificate Pinning animations CoordinatorLayout Protobuf RxJava Otto Dagger Hugo Loaders Answers Sugar Google Cloud Messaging Runtime permissions GreenDAO Kickflip Parse MonkeyRunner GcmNetworkManager ProgressBar NFC Fresco ORMLite Jenkins IBM Mainframe AIX OS iOS PovRay JSON Dojo Python C Mac OS Windows SharePoint ArcGIS Windows Server C Remedy SQLite AES Encryption Java SQL Linux OS CSS Scheme Pandas GGPlot HTML5 Bash Linux JavaScript",
    "unique_id": "9a3d05aa-7c8d-47fa-8bcd-d35cd1eed16c"
}