{
    "clean_data": "Python Engineer span lPythonspan Engineer Python Engineer Twitter San Fracisco San Francisco CA Around 6 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecturebased enterprise application software in Python as Data Engineer Python Developer and on various domains Work Experience Python Engineer Twitter San Fracisco CA April 2018 to Present Worked on fully automating the tests on pytest for the midmarket consumer backup products Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST API Worked on virtualization tools used for supporting and hosting OIM Components such as Oracle Virtual Box VMware Workstation Oracle VM Server and VMware vSphere Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Involved in implementing serverside technologies with REST API and MVC design patterns in node JS and Django framework Created a custom Puppet module skeleton to use same structure across all Puppet modules Worked with Windows Server and Linux Operating Systems Windows Server20082012 RHEL SLES or Ubuntu Worked in version control systems using CVS SVN and Git Github and issue tracking tools like Jira and BugZilla Built a new CICD pipeline Testing and deployment automation with Docker Jenkins and Ansible Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Utilized Git version control to coordinate teamdevelopment Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Involved in implementing serverside technologies with restful API and MVC design patterns in node JS and Django framework Create Jenkins pipeline jobs for Puppet release process for module deployment using agile methodology for Puppet development Involved in writing and debugging code automate testing deploying microservices like Docker and production server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven Worked on Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Worked on Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Python Developer Stow company Holland MI May 2016 to June 2017 Key Accomplishments Python Developer Citibank Financial New York NY February 2015 to April 2016 Key Accomplishments Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented build stage to build the MicroService architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Created Puppet manifests and modules to automate system operations Created monitors alarms and notifications for EC2 hosts using Cloud Watch Deployed and monitored scalable infrastructure on AWS and managing the infrastructure environment with Puppet Developed flask Restful API endpoints for accessing through UI and uploading ETL data Developed Python based microservice to extract the data from system of records into Enterprise Data warehousing Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 spring 2 Ajax for the frontend Developed complex mappings to load data from Source System Oracle and flat files to Teradata as well as worked with Teradata utilities like BTEQ Fast Load and Multi Load Developed another microservice to extract AML data from Enterprise Data warehousing and push to external systems in JSON format Worked in an Agile development team to deliver an end to end continuous integration continuous delivery product in an open source environment using tools like VSTS Implemented SQL Alchemy which is a python library for complete access over SQL Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database REST APIs Worked on pythonbased test frameworks and testdriven development with automation tools Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Analyzed report requirements and developing the reports by writing Teradata SQL Queries and using MS Excel Power Point and UNIX Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Involved in Docker container deploying microservices and scaling the deployment using Kubernetes and developed Chat Ops interfaces with slack and Kubernetes on GKE Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Software Developer StarbucksSeattle August 2013 to December 2014 Key Accomplishments Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Created Docker images using Spotify Maven Plugin for deployment of microservices Creation of REST API Web services for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Deployment of cloud infrastructure and automation solutions OpenstackvMwareKVM Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Deployed and maintained infrastructure using Chef cookbooks and recipes deployed and managed cloudbased application environments running on Openstack Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Provided input on the future execution of the Cloud based environments with a strong emphasis on automation security Implemented a continuous integration environment using Bamboo in which unit tests and end to end tests were automated to be run after checking in to any repository from any developer Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Used XML for dynamic display of options in select box and description on web page Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Masters Skills ython NumPy Pandas SQLAlchemy Linux shellscriptingGit and Gerrit CICD automation Chef Puppet Ansible Fabric Docker and LXC VMWare and VirtualBox Jenkins REST API Automation GitHub Asana Jira REST GraphQLSpark AWS Lamda AWS Serverless conceptsGoogle Azure IAM AWS Glue Terraform Vagrant SQLDatabase 5 years Java Javascript Angular Node React",
    "entities": [
        "VSTS Implemented SQL Alchemy",
        "Continuous Deployment Application Server",
        "AJAX",
        "Enterprise Data",
        "New York",
        "Relational",
        "Implemented Docker",
        "Maven Worked",
        "Libraries",
        "VirtualBox Jenkins REST API Automation",
        "LXC VMWare",
        "Kubernetes Created Pods",
        "Engineer",
        "JSON",
        "Kubernetes Installed",
        "CVS SVN",
        "Amazon Web Services AWS",
        "XML",
        "Developed Chef Cookbooks",
        "NodeJS",
        "Analysis Design Development Implementation and Testing",
        "Utilized Git",
        "Oracle OCCI API Used Python Libraries Pandas",
        "Automated",
        "node JS",
        "Apache Spark",
        "MicroService",
        "GitHub Projects",
        "OIM Components",
        "Python",
        "Migrations Network",
        "UserAcceptance",
        "Migration of API",
        "Python Developer Stow",
        "Python REST API Frame",
        "San Francisco",
        "Puppet Developed",
        "Puppet",
        "Django Websites Created",
        "Bash Involved",
        "HTML5",
        "REST API",
        "Windows Server",
        "mat PlotLib Responsible",
        "Images",
        "Develop",
        "Linux",
        "Data Extraction Transformation",
        "VMWare API",
        "Shell Scripting",
        "Source System Oracle",
        "Docker",
        "BTEQ Fast Load",
        "PEP8",
        "Jenkins CICD",
        "Create Jenkins",
        "HTML CSS JavaScript JQuery",
        "MVC",
        "Linux Operating Systems",
        "GIT",
        "Git Implemented",
        "Python on Django",
        "log analytics full text search",
        "AML",
        "Holland",
        "API",
        "Sybase",
        "Present Worked",
        "AWS",
        "Scala",
        "Oracle",
        "Python ORM Libraries",
        "GitHub",
        "Django Oracle DB PostgreSQL",
        "Creation of REST API Web",
        "Kubernetes",
        "Administrators",
        "Created Puppet",
        "SSH",
        "CICD",
        "Subversion Created Docker",
        "Quartz",
        "Amazon AWS",
        "Pandas",
        "ETL",
        "CRUD",
        "Python Django Worked on Dockers RabbitMQ",
        "Build",
        "Performed",
        "DCL",
        "Spotify Maven Plugin",
        "Logstash",
        "UI",
        "MS Excel Power Point",
        "Oracle Virtual Box VMware Workstation Oracle VM Server",
        "XSD",
        "SVN",
        "AWS Lambda and CloudWatch Involved",
        "Teradata SQL Queries",
        "TDD",
        "Tableau",
        "Puppet development Involved",
        "Gerrit CICD",
        "Application",
        "JQuery",
        "Overlook"
    ],
    "experience": "Experience Python Engineer Twitter San Fracisco CA April 2018 to Present Worked on fully automating the tests on pytest for the midmarket consumer backup products Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST API Worked on virtualization tools used for supporting and hosting OIM Components such as Oracle Virtual Box VMware Workstation Oracle VM Server and VMware vSphere Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Involved in implementing serverside technologies with REST API and MVC design patterns in node JS and Django framework Created a custom Puppet module skeleton to use same structure across all Puppet modules Worked with Windows Server and Linux Operating Systems Windows Server20082012 RHEL SLES or Ubuntu Worked in version control systems using CVS SVN and Git Github and issue tracking tools like Jira and BugZilla Built a new CICD pipeline Testing and deployment automation with Docker Jenkins and Ansible Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Utilized Git version control to coordinate teamdevelopment Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Involved in implementing serverside technologies with restful API and MVC design patterns in node JS and Django framework Create Jenkins pipeline jobs for Puppet release process for module deployment using agile methodology for Puppet development Involved in writing and debugging code automate testing deploying microservices like Docker and production server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven Worked on Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Worked on Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Python Developer Stow company Holland MI May 2016 to June 2017 Key Accomplishments Python Developer Citibank Financial New York NY February 2015 to April 2016 Key Accomplishments Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented build stage to build the MicroService architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Created Puppet manifests and modules to automate system operations Created monitors alarms and notifications for EC2 hosts using Cloud Watch Deployed and monitored scalable infrastructure on AWS and managing the infrastructure environment with Puppet Developed flask Restful API endpoints for accessing through UI and uploading ETL data Developed Python based microservice to extract the data from system of records into Enterprise Data warehousing Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 spring 2 Ajax for the frontend Developed complex mappings to load data from Source System Oracle and flat files to Teradata as well as worked with Teradata utilities like BTEQ Fast Load and Multi Load Developed another microservice to extract AML data from Enterprise Data warehousing and push to external systems in JSON format Worked in an Agile development team to deliver an end to end continuous integration continuous delivery product in an open source environment using tools like VSTS Implemented SQL Alchemy which is a python library for complete access over SQL Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database REST APIs Worked on pythonbased test frameworks and testdriven development with automation tools Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Analyzed report requirements and developing the reports by writing Teradata SQL Queries and using MS Excel Power Point and UNIX Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Involved in Docker container deploying microservices and scaling the deployment using Kubernetes and developed Chat Ops interfaces with slack and Kubernetes on GKE Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Software Developer StarbucksSeattle August 2013 to December 2014 Key Accomplishments Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Created Docker images using Spotify Maven Plugin for deployment of microservices Creation of REST API Web services for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Deployment of cloud infrastructure and automation solutions OpenstackvMwareKVM Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Deployed and maintained infrastructure using Chef cookbooks and recipes deployed and managed cloudbased application environments running on Openstack Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Provided input on the future execution of the Cloud based environments with a strong emphasis on automation security Implemented a continuous integration environment using Bamboo in which unit tests and end to end tests were automated to be run after checking in to any repository from any developer Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Used XML for dynamic display of options in select box and description on web page Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Masters Skills ython NumPy Pandas SQLAlchemy Linux shellscriptingGit and Gerrit CICD automation Chef Puppet Ansible Fabric Docker and LXC VMWare and VirtualBox Jenkins REST API Automation GitHub Asana Jira REST GraphQLSpark AWS Lamda AWS Serverless conceptsGoogle Azure IAM AWS Glue Terraform Vagrant SQLDatabase 5 years Java Javascript Angular Node React",
    "extracted_keywords": [
        "Python",
        "Engineer",
        "span",
        "lPythonspan",
        "Engineer",
        "Python",
        "Engineer",
        "Twitter",
        "San",
        "Fracisco",
        "San",
        "Francisco",
        "CA",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "standalone",
        "enterprise",
        "application",
        "software",
        "Python",
        "Data",
        "Engineer",
        "Python",
        "Developer",
        "domains",
        "Work",
        "Experience",
        "Python",
        "Engineer",
        "Twitter",
        "San",
        "Fracisco",
        "CA",
        "April",
        "Present",
        "tests",
        "midmarket",
        "consumer",
        "backup",
        "products",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "Worked",
        "CRUD",
        "applications",
        "MERN",
        "stack",
        "MongoDB",
        "ExpressJS",
        "ReactJS",
        "NodeJS",
        "REST",
        "API",
        "virtualization",
        "tools",
        "OIM",
        "Components",
        "Oracle",
        "Virtual",
        "Box",
        "VMware",
        "Workstation",
        "Oracle",
        "VM",
        "Server",
        "VMware",
        "vSphere",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "change",
        "requests",
        "user",
        "server",
        "configuration",
        "kernel",
        "software",
        "installation",
        "OS",
        "Linux",
        "VMs",
        "Puppet",
        "projects",
        "requirement",
        "Developed",
        "Chef",
        "Cookbooks",
        "Apache",
        "Tomcat",
        "Jenkins",
        "deployment",
        "automation",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "monitoring",
        "playbooks",
        "Integrated",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "nodes",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "Dev",
        "Servers",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Used",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "serverside",
        "technologies",
        "REST",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "framework",
        "custom",
        "Puppet",
        "module",
        "skeleton",
        "structure",
        "Puppet",
        "modules",
        "Windows",
        "Server",
        "Linux",
        "Operating",
        "Systems",
        "Windows",
        "Server20082012",
        "RHEL",
        "SLES",
        "Ubuntu",
        "version",
        "control",
        "systems",
        "CVS",
        "SVN",
        "Git",
        "Github",
        "tracking",
        "tools",
        "Jira",
        "BugZilla",
        "CICD",
        "pipeline",
        "Testing",
        "deployment",
        "automation",
        "Docker",
        "Jenkins",
        "Ansible",
        "Test",
        "development",
        "TDD",
        "development",
        "platform",
        "Quartz",
        "subversion",
        "StoryJiraSprint",
        "development",
        "testing",
        "signoff",
        "Git",
        "version",
        "control",
        "teamdevelopment",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "framework",
        "Create",
        "Jenkins",
        "pipeline",
        "jobs",
        "Puppet",
        "release",
        "process",
        "module",
        "deployment",
        "methodology",
        "Puppet",
        "development",
        "code",
        "automate",
        "testing",
        "deploying",
        "microservices",
        "Docker",
        "production",
        "server",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Worked",
        "Open",
        "VMS",
        "Unix",
        "SOLARIS",
        "Linux",
        "NT",
        "systems",
        "Performed",
        "system",
        "functions",
        "software",
        "NT",
        "Unix",
        "Alphaservers",
        "Superior",
        "Troubleshooting",
        "support",
        "abilities",
        "Migrations",
        "Network",
        "connectivity",
        "Security",
        "Database",
        "applications",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Python",
        "Developer",
        "Stow",
        "company",
        "Holland",
        "MI",
        "May",
        "June",
        "Key",
        "Accomplishments",
        "Python",
        "Developer",
        "Citibank",
        "Financial",
        "New",
        "York",
        "NY",
        "February",
        "April",
        "Key",
        "Accomplishments",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Python",
        "wxPython",
        "numPY",
        "Pandas",
        "Twisted",
        "mat",
        "PlotLib",
        "Responsible",
        "operating",
        "system",
        "Linux",
        "DCL",
        "programs",
        "Python",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "build",
        "stage",
        "MicroService",
        "architecture",
        "Docker",
        "container",
        "image",
        "Docker",
        "registry",
        "Images",
        "custom",
        "use",
        "Puppet",
        "manifests",
        "modules",
        "system",
        "operations",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "Deployed",
        "infrastructure",
        "AWS",
        "infrastructure",
        "environment",
        "Puppet",
        "Developed",
        "flask",
        "API",
        "endpoints",
        "UI",
        "ETL",
        "data",
        "Python",
        "microservice",
        "data",
        "system",
        "records",
        "Enterprise",
        "Data",
        "warehousing",
        "Application",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "spring",
        "frontend",
        "mappings",
        "data",
        "Source",
        "System",
        "Oracle",
        "files",
        "Teradata",
        "Teradata",
        "utilities",
        "BTEQ",
        "Fast",
        "Load",
        "Multi",
        "Load",
        "microservice",
        "AML",
        "data",
        "Enterprise",
        "Data",
        "warehousing",
        "systems",
        "format",
        "Agile",
        "development",
        "team",
        "end",
        "integration",
        "delivery",
        "product",
        "source",
        "environment",
        "tools",
        "VSTS",
        "SQL",
        "Alchemy",
        "library",
        "access",
        "SQL",
        "Pandas",
        "library",
        "Analysis",
        "Pandas",
        "library",
        "reshaping",
        "pivoting",
        "data",
        "sets",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Installed",
        "AWS",
        "server",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "database",
        "objects",
        "Django",
        "Database",
        "REST",
        "APIs",
        "test",
        "frameworks",
        "testdriven",
        "development",
        "automation",
        "tools",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "Deployed",
        "mircoservices2",
        "AWS",
        "environments",
        "Ansible",
        "Playbooks",
        "load",
        "balancer",
        "group",
        "configuration",
        "microservice",
        "Ansible",
        "Analyzed",
        "report",
        "requirements",
        "reports",
        "Teradata",
        "SQL",
        "Queries",
        "MS",
        "Excel",
        "Power",
        "Point",
        "UNIX",
        "Provisioned",
        "servers",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "code",
        "ingestion",
        "formats",
        "JSON",
        "CSV",
        "Logstash",
        "search",
        "Kibana",
        "dashboard",
        "clients",
        "Docker",
        "container",
        "deploying",
        "microservices",
        "deployment",
        "Kubernetes",
        "Chat",
        "Ops",
        "interfaces",
        "slack",
        "Kubernetes",
        "GKE",
        "core",
        "repository",
        "SUBVERSION",
        "GIT",
        "Managed",
        "GitHub",
        "Projects",
        "SVN",
        "GitHub",
        "history",
        "Cloud",
        "Trail",
        "TESSA",
        "Cloud",
        "Passage",
        "Check",
        "Marx",
        "Qualys",
        "Scan",
        "tools",
        "AWS",
        "security",
        "Software",
        "Developer",
        "StarbucksSeattle",
        "August",
        "December",
        "Key",
        "Accomplishments",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "DTDs",
        "XSD",
        "schemas",
        "XML",
        "processing",
        "design",
        "mechanism",
        "exceptions",
        "errors",
        "Log4j",
        "tool",
        "Tortoise",
        "SVN",
        "versioncontrol",
        "client",
        "Subversion",
        "Created",
        "Docker",
        "images",
        "Spotify",
        "Maven",
        "Plugin",
        "deployment",
        "microservices",
        "Creation",
        "REST",
        "API",
        "Web",
        "services",
        "management",
        "data",
        "Apache",
        "CXF",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modeling",
        "data",
        "import",
        "export",
        "Deployment",
        "cloud",
        "infrastructure",
        "automation",
        "solutions",
        "frontend",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "framework",
        "UI",
        "AJAX",
        "behaviour",
        "Deployed",
        "infrastructure",
        "Chef",
        "cookbooks",
        "recipes",
        "application",
        "environments",
        "Openstack",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "input",
        "execution",
        "Cloud",
        "environments",
        "emphasis",
        "automation",
        "security",
        "integration",
        "environment",
        "Bamboo",
        "unit",
        "end",
        "tests",
        "repository",
        "developer",
        "Docker",
        "containers",
        "images",
        "applications",
        "provision",
        "slaves",
        "Jenkins",
        "CICD",
        "pipelines",
        "XML",
        "display",
        "options",
        "box",
        "description",
        "web",
        "page",
        "role",
        "database",
        "migration",
        "projects",
        "Oracle",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "software",
        "pip",
        "command",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "pythontwitter",
        "Celery",
        "matplotlib",
        "Pandas",
        "dataframe",
        "PEP8",
        "convention",
        "Migration",
        "API",
        "code",
        "Sybase",
        "Oracle",
        "Overlook",
        "migration",
        "activity",
        "PLSQL",
        "programs",
        "application",
        "Python",
        "Django",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "Libraries",
        "Sybase",
        "APIs",
        "Oracle",
        "API",
        "Python",
        "Pandas",
        "NumPy",
        "SQL",
        "Tableau",
        "data",
        "database",
        "status",
        "reports",
        "dashboards",
        "Education",
        "Masters",
        "Skills",
        "ython",
        "NumPy",
        "Pandas",
        "SQLAlchemy",
        "Linux",
        "shellscriptingGit",
        "Gerrit",
        "CICD",
        "automation",
        "Chef",
        "Puppet",
        "Ansible",
        "Fabric",
        "Docker",
        "LXC",
        "VMWare",
        "VirtualBox",
        "Jenkins",
        "REST",
        "API",
        "Automation",
        "GitHub",
        "Asana",
        "Jira",
        "REST",
        "AWS",
        "AWS",
        "Serverless",
        "conceptsGoogle",
        "Azure",
        "IAM",
        "AWS",
        "Glue",
        "Terraform",
        "Vagrant",
        "SQLDatabase",
        "years",
        "Java",
        "Javascript",
        "Angular",
        "Node",
        "React"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:11:22.166173",
    "resume_data": "Python Engineer span lPythonspan Engineer Python Engineer Twitter San Fracisco San Francisco CA Around 6 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecturebased enterprise application software in Python as Data Engineer Python Developer and on various domains Work Experience Python Engineer Twitter San Fracisco CA April 2018 to Present Worked on fully automating the tests on pytest for the midmarket consumer backup products Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST API Worked on virtualization tools used for supporting and hosting OIM Components such as Oracle Virtual Box VMware Workstation Oracle VM Server and VMware vSphere Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in Implementing change requests raised by user for server configuration kernel tuning software installation and OS hardening Managing Linux VMs using Puppet as per some projects requirement Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Involved in implementing serverside technologies with REST API and MVC design patterns in node JS and Django framework Created a custom Puppet module skeleton to use same structure across all Puppet modules Worked with Windows Server and Linux Operating Systems Windows Server20082012 RHEL SLES or Ubuntu Worked in version control systems using CVS SVN and Git Github and issue tracking tools like Jira and BugZilla Built a new CICD pipeline Testing and deployment automation with Docker Jenkins and Ansible Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Utilized Git version control to coordinate teamdevelopment Knowledge about setting up Python REST API Frame work using Django Experience in working with Python ORM Libraries including Django ORM Involved in implementing serverside technologies with restful API and MVC design patterns in node JS and Django framework Create Jenkins pipeline jobs for Puppet release process for module deployment using agile methodology for Puppet development Involved in writing and debugging code automate testing deploying microservices like Docker and production server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven Worked on Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Worked on Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Python Developer Stow company Holland MI May 2016 to June 2017 Key Accomplishments Python Developer Citibank Financial New York NY February 2015 to April 2016 Key Accomplishments Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented build stage to build the MicroService architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Created Puppet manifests and modules to automate system operations Created monitors alarms and notifications for EC2 hosts using Cloud Watch Deployed and monitored scalable infrastructure on AWS and managing the infrastructure environment with Puppet Developed flask Restful API endpoints for accessing through UI and uploading ETL data Developed Python based microservice to extract the data from system of records into Enterprise Data warehousing Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 spring 2 Ajax for the frontend Developed complex mappings to load data from Source System Oracle and flat files to Teradata as well as worked with Teradata utilities like BTEQ Fast Load and Multi Load Developed another microservice to extract AML data from Enterprise Data warehousing and push to external systems in JSON format Worked in an Agile development team to deliver an end to end continuous integration continuous delivery product in an open source environment using tools like VSTS Implemented SQL Alchemy which is a python library for complete access over SQL Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database REST APIs Worked on pythonbased test frameworks and testdriven development with automation tools Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Analyzed report requirements and developing the reports by writing Teradata SQL Queries and using MS Excel Power Point and UNIX Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Involved in Docker container deploying microservices and scaling the deployment using Kubernetes and developed Chat Ops interfaces with slack and Kubernetes on GKE Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Software Developer StarbucksSeattle August 2013 to December 2014 Key Accomplishments Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Created Docker images using Spotify Maven Plugin for deployment of microservices Creation of REST API Web services for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Deployment of cloud infrastructure and automation solutions OpenstackvMwareKVM Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used JQuery framework for UI centric AJAX behaviour Deployed and maintained infrastructure using Chef cookbooks and recipes deployed and managed cloudbased application environments running on Openstack Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Provided input on the future execution of the Cloud based environments with a strong emphasis on automation security Implemented a continuous integration environment using Bamboo in which unit tests and end to end tests were automated to be run after checking in to any repository from any developer Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Used XML for dynamic display of options in select box and description on web page Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Masters Skills ython NumPy Pandas SQLAlchemy Linux shellscriptingGit and Gerrit CICD automation Chef Puppet Ansible Fabric Docker and LXC VMWare and VirtualBox Jenkins REST API Automation GitHub Asana Jira REST GraphQLSpark AWS Lamda AWS Serverless conceptsGoogle Azure IAM AWS Glue Terraform Vagrant SQLDatabase 5 years Java Javascript Angular Node React",
    "unique_id": "59785a42-e073-40f4-9f0c-f072f210d61d"
}