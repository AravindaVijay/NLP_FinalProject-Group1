{
    "clean_data": "Sr Python Web Developer Sr span lPythonspan Web span lDeveloperspan Sr Python Web Developer Jefferson Bank New York NY Around 9 years of experience in IT technologies Experience in analysis design implementation and testing of scalable high available high performance Strong leadership skills Creative Web DeveloperWeb DesignerGraphic Designer with over 6 years of professional experience Hands on experience in developing business processes and system solutions utilizing prototype development system development and deployment 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Proficient in building Web User Interface UI using HTMLHTML DHTML XHTML AngularJS CSSCSS3 and JavaScript Nodejs Backbonejs React Nodejs D3 jQuery that follows W3C Web Standards and are browser compatible Experience with full software development lifecycle object oriented programming database design and agile methodologies Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS JavaScript jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Experience with JavaEE including JSPs Servlets Web Services SOAP and REST and Tomcat Experience with software development tools such as Eclipse Netbeans Subversion Git Ant and Maven Expertise on Peer Code Review Unit testing and Integration testing Strong TDD test driven development and continuous integration experience using JUnit Extensive experience in Version control systems using TFS CVS and SVN Possess excellent communication skills along with dedication and commitment for work Quick learner possess problem solving skills and strong team player Authorized to work in the US for any employer Work Experience Sr Python Web Developer Jefferson Bank San Antonio TX October 2015 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success RESPONSIBILITIES Wrote Java Programs for onetoone comparison of data obtained from different sources Extensive coding knowledge in developing UI for enterprise web applications using HTML Java Script XML AJAX adhering to enterprise UI Standards Developed crytpocurrency exchange system in Python using Google App Engine and Amazon AWS Developed Perl programs to send email alerts and error logs in the event of process failures Involved in the design and development phases of Rational Unified Process RUP Delivered projects in Smart Analytics portfolio using Big Data technologies like Hadoop Sqoop Hive Pentaho Involved researching optimum solutions for a given Big Data problem using Hadoop Apache Spark and other related technologies Architected the Big Data as Service project and implemented a system architecture using Amazon API and Puppet scripts to auto deploy Hadoop clusters through website Developed a project in Python using Client and Worker methodologies Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Implemented Python scripts to import raw data from web into PostgreSQL database Work directly with developers to design and code Designate using python Wrote python scripts to parse XML documents and load the data in database Used Struts action forms and developed Action Classes which act as the navigation controller in Struts Developed the application under J2EE Architecture using Spring Struts Hibernate Servlets Weblogic Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Implemented the templatebased categorization of presentation content using StrutsTiles MVC implementation using Struts framework Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Rewrite existing PythonDjango modules to deliver certain format of data Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Analysis the logs data and filter required columns by logstash configuration and send it to elasticsearch Design the Elasticsearch configuration files based on number of hosts available naming the cluster and node accordingly Customize the display in the necessary UI framework using PHPJSP jQuery JavaScript Angular JS elasticsearch Vendor Implementation and maintenance of logging infrastructure based on Application Insights NLogElasticsearch and Kibana Set up ElasticSearch Logstash and Kibana based logging infrastructure for entire application stack Develop frontend web applications using AngularJS framework construct HTML5 video widgets Leading Frameworks Team like Angularjs backbonejs bootstrapjs JMVC D3js and Projects UI Designing Team Providing a responsive AJAXdriven design using JavaScript libraries such as jQuery AngularJS and Bootstrapjs Using Subversion for version control Employed Hibernate to create the persistence layer and to make the transactions to the backend Used AJAX for highly intensive user operations Developed Web Services using SOAP Worked on parsing the XML files using DOMSAX parsers Involved in Unit Testing of Various Modules based on the Test Cases Setting the development environment on eclipse Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring data JPA Experience with SQL and basic CRUD operations Developed JSP pages for presentation layer UI using Struts with client side validations using Struts Validator framework JavaScript Comprehensive experience in designing and developing applications using UML with Rational Rose Developed the Servlets for processing the data on the server Involved in the deployment of WebService EndPoints using Apache CXF Created Realtime Reporting systems and dashboards using Adobe Flex xml MySQL and Perl Used WebLogic for design development and deployment of applications Mentoring of junior members for Agile Scrum process Junit testing Designed and modified User Interfaces using JSP JavaScript CSS and jQuery Made SDLC recommendations and implemented Flex xml development best practices Accessed and manipulated the Oracle 10g database environment by writing SQL queries in the oracle sql developer for testing purpose Prepare JavaJ2EE development structure for Eclipse maven Jetty Involved in coding for JUnit Test cases Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH SHELL SCRIPT ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPM SERVLET UNIX LINUX ORACLE JDBC ECLIPSE TOMCAT CRUD JSP JUNIT JQUERY JIRA MAVEN ITEXT WEBLOGIC SVN UML AGILE SCRUM Sr Python Web Developer Infinity Insurance New York NY August 2013 to September 2015 Project Infinity Auto installment payment app and getting agent quote Description Infinity Auto mobile app is for making the mobile online payment for the user through the mobile app It also allows the user for getting agent quote And the user can know the policy information ID cards coverage and discounts information RESPONSIBILITIES Involved in preparing the mockups using HTML DHTML XHTML CSS and JavaScript Involved in making the components to XHTML compliance Responsibilities include analysis of these various applications designing of the enterprise applications coordination with client and offshore team meetings with business users functional and technical guide to the offshore team project management Built website and database system for in house programmed in Python through Django streamline framework Build the Optiv Managed Security Services service delivery portal from ground up using Angular NodeJS NginX Configureoptimize web server performance including ApacheNginx MySQL Memcache Vanish Redis and Magento optimzation Deployed the project on Nginx web Server using Virtualenv for creating virtual environment and uwsgi for dynamic calling python script Implemented MVC architecture by developing struts framework Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Developed a prototype of a MASHUP where back end is JAXRS Jersey REST webservice and front end is UI developed using Bootstrapjs Angularjs Developed application as Enterprise JavaScript using AngularJs NodeJs Websockets Jasmine Worked on the modernization of a legacy and outsourced UI Technologies used were Backbonejs Angularjs Emberjs Canjs and Jquery Designed and modified User Interfaces using JSP DOM Backbone Emberjs Angularjs Developed Drewgle for Big Data a java based search engine for searching metadata of various Hadoop objects Built a scalable distributed data solution using Hadoop Played a key role in installation and configuration of the various Hadoop ecosystem tools such as Sqoop Flume Pig and Hbase Expanded proficiencies in Django Mezzanine HTML5 Python and Javascript Developing a set of dashboards in Splunk 6 by leveraging Underscore D3 JqueryUI Backbone and Django Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Struts Validator framework is used to do client side validation Developed reporting application using nodejs javascript jQuerydatatables MongoDB and ElasticSearch Maintained and supported Ntier Restful Webservice used for flight searches This webservice was built using NoSql Couchbase ElasticSearch Designed backend system Logging Framework using Play Framework Apache Kafka ElasticSearch Used Java Servlets JSPs AJAX XML HTML and CSS for developing the Web component application Implemented the spring dependency injection of the Database helper instance to the action objects Used AJAX DOJO Java script Spring and GWT to create interactive user interface Part of team implementing REST APIs in Python Flask and SQLAlchemy for management of data center resources on which OpenStack cluster is deployed Python and PHP web application development using the SQLAlchemy Experience in dimensionally modeling relational data sources DMR using Cognos 8 Framework Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Deployment automation and Job Orchestration through Bash Scripts Fabric PythonCapistranoRuby Puppet Ansible Wrote Action classes Business Objects and Service classes Created Realtime Reporting systems and dashboards using Adobe Flex MySQL and Perl Involved in developing custom taglibs JSP Servlets EJBs Portlets and DB2 stored procedures Used Apache to build projects which assisted in testing and produce reports on projects Wrote JMS classes to communicate with MQ series deployed at Credit Card Issuing Used SQL statements and procedures to fetch the data from the database Deployed and configured portlets in WebSphere Portal Server Installed configured and maintained Websphere server and DB2 Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked with various version control tools like CVS Clear Case and Subversion SVN Core developer of the application infrastructure using GWT as the frontend Used ObjectRelational mapping Hibernate framework as the persistence layer for interacting with DB2 Developed the Web Based Rich Internet Application RIA using Adobe Flex Used Subversion for version control and created automated build scripts Deployed the application on to Websphere application server Implemented Web services by applying SOA concepts in conjunction with SOAP Developed EJB components Session Beans Entity beans using EJB design patterns to business and data process Use of multiple tools including Apache POI iText and JFreeChart Involved in user interface development using JSTL Worked on Hibernate objectrelational mapping according to database schema Prepare JavaJ2EE development structure for Maven JSP interfaces were developed Custom tags were used Responsible for modifying existing DB2 stored procedures and writing SQL queries as per requirement Involved in coding for JUnit Test cases Developed the Servlets for processing the data on the server Used Dojo for the client side development and validations Experience with SQL and basic CRUD operations Used Hibernate annotations to avoid writing a mapping file Involved in the deployment of WebService EndPoints using Apache CXF Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH LINUX JSON ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPMNOSQL SCALA CLOUD AWS OPEN STACK JAVAJ2EE STRUT JQUERY AJAX EXTJS JAVASCRIPT ORACLE CRUDE PLSQL JDBC REST ECLIPSE WEBLOGIC CLEARCASE JUNIT AGILE UML JSPS JSTL SERVELTS MAVEN ILOG WEB20 SOA Python UI Developer ATT Dallas TX June 2011 to July 2013 RESPONSIBILITIES Designed Graphical User Interface GUI for various WebPages using AJAX HTML CSS JSF JQuery and JavaScript MVC architecture is implemented by struts framework Configured the strutsconfigxml Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed API using Hibernate to interact with the Oracle database Developed a controller Servlet that dispatches request to appropriate Action Classes Implemented Different Design patterns like singleton factory and J2EE design patterns like Business delegate session faade Value object and DAO design patterns Used Spring Frameworks IOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Use of multiple tools including Apache POI iText and JFreeChart Used Struts tag libraries in the JSP pages Extensively worked on Spring Bean wiring Spring DAO and Spring AOP modules Used join point and advice Spring AOP modules for cross cutting concerns and IOC for dependency injection Used Java Persistence API JPA and Hibernate for performing the Database Transactions Using JPA for designing and creating the entities and establishing the relation between the entities in a persisted way for EJB Involved in developing EJBS for the business logic using Session facade pattern and deploying them in Apache tomcat Wrote complex Database PLSQL Statement and Did PLSQL tuning for the performance of the Database Involved in Developing Web Application with Full Software Development life Cycle SDLC from Design to Deployment using agile methodologies Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked extensively on the Oracle database Used JMS API for asynchronous communication by putting the messages in the Message queue Consumed Web Services WSDL SOAP UDDI from third party for authorizing payments tofrom customers Architect and design for new Application as J2EE Web application and Oracle ADF Generated PDF reports using iText Developed webbased customer management software using JSF Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Setting the development environment on eclipse Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications Exposed Survey API to other applications in DOE using Apache Axis2 Created the domains application servers and load balancers using Weblogic 90 Used Web 20 to scrape the event data from various web sites Integrated with Apache Tomcat Expert in the enterprise implementation of Oracle Enterprise Content Management solutions Specialized in UCM Portal and SOA implementation Page design and development using Oracle BPM Layout and design the overall architecture and migration approaches using Oracle ADF Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Participated in the offshore development team meeting Designed extensive additions to existing Java Web Application utilizing Service Oriented Architecture SOA techniques Involved in implementing JQuery for providing interactive user interfaces Environment JAVA JSP SERVLET EJB HTML CSS SPRING JAVASCRIPT HIBERNATE JQUERY STRUTS DESIGN PATTERNS AGILE HTML JMS XML ECLIPSE ITEXT APACHE ORACLE ECM STRUTS WEBSERVICE SOAP ILOG WEB20 ORACLE BPM JSF WSDL APACHE AXIS2 APACHE TOMCAT SERVER SOA PLSQL ORACLE10G UML WEBLOGIC RATIONAL ROSE JUNIT Java UI Developer CONIFER Health Solutions Frisco TX April 2009 to May 2011 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs RESPONSIBILITIES Responsible for the design and development of the framework The system is designed using J2EE technologies based on MVC architecture The Views are programmed using struts JSP pages Model is a combination of EJBs and Java classes and Controllers are Servlets Developed user interface using JSP JQuery and AJAX to speed the application Writing the java script and designing the JSP GUI frame work Involved in designing the user interfaces using JSP Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Extensively worked on springs framework Used JDBC for database connectivity with MySQL Server Implement the presentation layer GUI based on open source framework involving Servlets JSP JSTL JSF CSS HTML JavaScript and Beans Designed Interactive GUIs using Java Applets and Swing Developed Servlets and Worked extensively on Sql Worked with MySQL for MySQL SQLYog and Workbench Implementation of Spring IOC container Spring JDBC template Spring Exception Strategy and AOP XML messages are used to communicate between web services that are written using SOAP and WSDL Created different database objects Stored Procedures Functions and Triggers for the backend MS SQL server Involved in debugging the product using Eclipse and JIRA Bug Tracking Used Ibatis to populate the data from the Database Involved in creating unit testing of various layers using junit and created automated test scripts for integration testing using Selenium Created war files deployed on Tomcat using ANT deployment tool Performed Java web application development using J2EE and Netbeans Expertise in employing Water Fall Model and best practices for software development Maintenance of data in different Oracle Databases and environments using TOAD Built CVS and XML file loaders and splitters for financial data Used Clear Case for source Version Control Working Closely with EMC Documentum to implement Engineering Design Storage Repository and Project Document Management Tested with the Junit Test Cases for both Professional and Institutional Claims Coordinated with QA team to ensure the quality of application Environment PYTHON DJANGO JAVA SERVLET EJB HTML CSS STRUTS JMS JDBC HIBERNATE SPRING JAVA SCRIPT AJAX UML ECLIPSE WEBLOGIC SOAP SELENIUM JBOSS ANT JQUERY NETBEANS JSP EJB WSDL TOAD WATER FALL MODEL IBATIS EMC DOCUMENTUM WEB SERVICES HTML XML MS SQL SERVER2005 MY SQL CVS JIRA CLEARQUEST SWING CLEARCASE JUNIT Software Developer GE Transportation Atlanta GA May 2007 to March 2009 RESPONSIBILITIES Wrote multithreaded programs to measure system performance Worked on GUI internationalization using JSP and Core Java Used Mercurial to keep track of versioning of the source code Worked on bug fixing Used JDBC APIs for database connectivity and data retrieval Developing HardwareStoreMarketercom site using ASPNet Strong Database programming using NET ADO with MS SQL Server 2000 MS Access and Oracle backend Extensively used Stored Procedures Functions and Triggers in Microsoft SQL Server Worked on various client websites that used Struts 2 framework Hibernate and OGNL Wrote test cases using JUnit testing framework and configured applications on Weblogic Server Involved in debugging the product using Eclipse 36 and JIRA Bug Tracking Involved in writing stored procedures view userdefined functions and triggers in SQL Server database for Reports module Simulation was developed using C Implemented realtime patient prescription history verification system using C Oracle PLSQL Used Visual Source Safe for source control Manipulated data and performed data preparation using TSO ISPF and SPF system utilities Developed and implemented Legacy system programs by using COBOL DB2 CICS JCL JAVA Wrote stored procedures in Oracle PLSQL for data entry and retrieval Extracted and modified data from VSAM files for PDF reports Automate nightly batch processing and job alerts using REXX Responsible for migrating Websphere server from v61 to v80 and migrating IBM CICS Transaction J2EE to communicate legacy COBOL based mainframe implementations Designed and developed Message Flows and Message Sets and other service component to expose Mainframe applications to enterprise J2EE applications Environment CORE JAVA JSP HTML CSS JUNIT MERCURIAL ECLIPSE NET JIRA JDBC STRUTS HIBERNATE VISUAL SOURCE SAFE WEBLOGIC ORACLE 11G OGNL C C LINUX MS SQL SERVER COBOL FILEAID REXX ISPF MAINFRAME CICS IMS VSAM JCL Education SCJP University of Denver",
    "entities": [
        "SQL Server Integration Service",
        "UCM Portal",
        "Flashvars",
        "Used Hibernate",
        "Projects UI Designing Team",
        "Bootstrapjs Using Subversion",
        "iText Developed",
        "Apache Axis2 Created",
        "AJAX",
        "Action Classes Implemented Different Design",
        "GUI",
        "ORMsDOMs",
        "New York",
        "Action Classes",
        "Specialized",
        "Application Insights NLogElasticsearch",
        "REST JSON",
        "User Interfaces",
        "MS Access",
        "MVTMVC",
        "CICS IMS VSAM JCL Education",
        "OpenStack",
        "IBM",
        "CVS",
        "Quick",
        "DeveloperWeb",
        "TOMCAT CRUD JSP JUNIT",
        "Google App Engine",
        "Hadoop",
        "Vendor Implementation",
        "XML",
        "JavaScript Implemented",
        "Hadoop Played",
        "SOAP",
        "Atlanta",
        "WebLogic",
        "Strong Database",
        "JUnit",
        "SQL Server Analysis Service",
        "Shell",
        "API Integration Used Celery",
        "Database PLSQL Statement",
        "jQuerydatatables MongoDB",
        "TX",
        "TSO",
        "Cognos 8 Framework Design",
        "SSIS",
        "the Database Involved",
        "Architect",
        "Python",
        "SQL Server",
        "DOMSAX",
        "BOWER NODEJS NPMNOSQL SCALA CLOUD AWS",
        "Nodejs Designed",
        "Developed",
        "Celery Analysis",
        "Leading Frameworks Team",
        "Reports module Simulation",
        "Bash",
        "Design to Deployment",
        "Dallas",
        "Created Python",
        "Django",
        "the Texas Hill Country Through",
        "CSSCSS3",
        "UML",
        "Servlets Web Services SOAP",
        "the Junit Test Cases",
        "Client",
        "JUnit Test cases Environment HTML CSS",
        "Magento",
        "ElasticSearch",
        "JavaScript Deployment",
        "J2EE Architecture",
        "ORACLE",
        "the Flash Struts Validator",
        "Workbench Implementation of Spring IOC",
        "the Database Transactions Using",
        "AJAX HTML CSS JSF JQuery",
        "HTML5",
        "SOA",
        "StrutsTiles MVC",
        "San Antonio",
        "Developed Web Services",
        "JUnit Extensive",
        "JavaScript Involved",
        "Created Data",
        "JSP",
        "JSP HTMLDHTML CSS",
        "HTMLHTML DHTML",
        "Oracle PLSQL",
        "JUnit Test",
        "Flask",
        "AJAX XML",
        "Built",
        "Worked",
        "Version",
        "Automate",
        "IOC",
        "Portlets",
        "Bank",
        "JDBC MySQL Python Successfully",
        "WebSphere Portal",
        "Views",
        "Created a",
        "MS",
        "GE Transportation",
        "PyQt",
        "Weblogic Server Involved",
        "MVC",
        "Session Beans Entity",
        "Amazon API",
        "PythonDjango",
        "Credit Card Issuing Used",
        "TFS CVS",
        "EJB",
        "NET",
        "the Test Cases Setting the development environment",
        "MS SQL Server",
        "CRUD Scaffolding",
        "API",
        "DMR",
        "US",
        "Implemented Python",
        "BOWER NODEJS NPM",
        "Oracle BPM Layout",
        "QA",
        "PDF",
        "Created",
        "CVS Clear Case and Subversion",
        "Server",
        "AngularJs NodeJs",
        "Websphere",
        "Nodejs Experienced",
        "Oracle ADF Installed",
        "Jefferson Bank",
        "SQL",
        "WebPages",
        "JSF Implemented",
        "Amazon AWS Developed Perl",
        "GitHub",
        "Present Jefferson Bank",
        "Prepare JavaJ2EE",
        "Job Orchestration",
        "Version Control Working Closely",
        "REXX Responsible",
        "lPythonspan",
        "Nginx",
        "Hadoop Apache Spark",
        "MQ series",
        "Administrators",
        "VSAM",
        "Hadoop Sqoop Hive Pentaho Involved",
        "UML Design",
        "RESTAPI",
        "the Flash Created PHPMySQL",
        "EJBS",
        "Analysis Design Development Testing Customization Bug",
        "Big Data",
        "Oracle Enterprise Content Management",
        "MVW",
        "Amazon AWS",
        "Apache CXF Created",
        "Using Django",
        "XHTML",
        "MySQL Server Implement",
        "Maven JSP",
        "SQLite",
        "Swing Developed Servlets",
        "JavaScript Comprehensive",
        "CRUD",
        "GWT Spring",
        "MASHUP",
        "Build",
        "University of Denver",
        "Performed",
        "Stored Procedures Functions",
        "PEP Guidelines",
        "Architected the Big Data as Service",
        "WebService EndPoints",
        "GWT",
        "JavaScript",
        "Django Python",
        "Servlets Developed",
        "UI",
        "Description Infinity Auto",
        "Angular NodeJS NginX Configureoptimize",
        "JSP Servlets",
        "Microsoft",
        "Created Business Logic",
        "DOE",
        "Selenium Created",
        "EMC Documentum",
        "Ntier Restful Webservice",
        "CSS",
        "CMS",
        "ATT",
        "JavaEE",
        "Apache CXF Environment HTML CSS",
        "Web Developer Infinity Insurance New York",
        "jQuery",
        "Tomcat",
        "ASPNET",
        "REST",
        "SVN Possess",
        "Oracle ADF Generated",
        "SPF",
        "Conifer Health",
        "UI Technologies",
        "Rational Unified Process RUP Delivered",
        "HTMLCSSJS",
        "Smart Analytics",
        "Model",
        "PHP",
        "Project Infinity Auto",
        "Virtualenv",
        "Application",
        "HTMLCSSjQuery",
        "JavaScript Nodejs Backbonejs React Nodejs",
        "EJB Involved",
        "JQuery",
        "Value",
        "Oracle Databases",
        "HTML Angular JS Bootstrap",
        "Node",
        "NoSql Couchbase ElasticSearch"
    ],
    "experience": "Experience in analysis design implementation and testing of scalable high available high performance Strong leadership skills Creative Web DeveloperWeb DesignerGraphic Designer with over 6 years of professional experience Hands on experience in developing business processes and system solutions utilizing prototype development system development and deployment 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Proficient in building Web User Interface UI using HTMLHTML DHTML XHTML AngularJS CSSCSS3 and JavaScript Nodejs Backbonejs React Nodejs D3 jQuery that follows W3C Web Standards and are browser compatible Experience with full software development lifecycle object oriented programming database design and agile methodologies Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS JavaScript jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Experience with JavaEE including JSPs Servlets Web Services SOAP and REST and Tomcat Experience with software development tools such as Eclipse Netbeans Subversion Git Ant and Maven Expertise on Peer Code Review Unit testing and Integration testing Strong TDD test driven development and continuous integration experience using JUnit Extensive experience in Version control systems using TFS CVS and SVN Possess excellent communication skills along with dedication and commitment for work Quick learner possess problem solving skills and strong team player Authorized to work in the US for any employer Work Experience Sr Python Web Developer Jefferson Bank San Antonio TX October 2015 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success RESPONSIBILITIES Wrote Java Programs for onetoone comparison of data obtained from different sources Extensive coding knowledge in developing UI for enterprise web applications using HTML Java Script XML AJAX adhering to enterprise UI Standards Developed crytpocurrency exchange system in Python using Google App Engine and Amazon AWS Developed Perl programs to send email alerts and error logs in the event of process failures Involved in the design and development phases of Rational Unified Process RUP Delivered projects in Smart Analytics portfolio using Big Data technologies like Hadoop Sqoop Hive Pentaho Involved researching optimum solutions for a given Big Data problem using Hadoop Apache Spark and other related technologies Architected the Big Data as Service project and implemented a system architecture using Amazon API and Puppet scripts to auto deploy Hadoop clusters through website Developed a project in Python using Client and Worker methodologies Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Implemented Python scripts to import raw data from web into PostgreSQL database Work directly with developers to design and code Designate using python Wrote python scripts to parse XML documents and load the data in database Used Struts action forms and developed Action Classes which act as the navigation controller in Struts Developed the application under J2EE Architecture using Spring Struts Hibernate Servlets Weblogic Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Implemented the templatebased categorization of presentation content using StrutsTiles MVC implementation using Struts framework Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Rewrite existing PythonDjango modules to deliver certain format of data Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Analysis the logs data and filter required columns by logstash configuration and send it to elasticsearch Design the Elasticsearch configuration files based on number of hosts available naming the cluster and node accordingly Customize the display in the necessary UI framework using PHPJSP jQuery JavaScript Angular JS elasticsearch Vendor Implementation and maintenance of logging infrastructure based on Application Insights NLogElasticsearch and Kibana Set up ElasticSearch Logstash and Kibana based logging infrastructure for entire application stack Develop frontend web applications using AngularJS framework construct HTML5 video widgets Leading Frameworks Team like Angularjs backbonejs bootstrapjs JMVC D3js and Projects UI Designing Team Providing a responsive AJAXdriven design using JavaScript libraries such as jQuery AngularJS and Bootstrapjs Using Subversion for version control Employed Hibernate to create the persistence layer and to make the transactions to the backend Used AJAX for highly intensive user operations Developed Web Services using SOAP Worked on parsing the XML files using DOMSAX parsers Involved in Unit Testing of Various Modules based on the Test Cases Setting the development environment on eclipse Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring data JPA Experience with SQL and basic CRUD operations Developed JSP pages for presentation layer UI using Struts with client side validations using Struts Validator framework JavaScript Comprehensive experience in designing and developing applications using UML with Rational Rose Developed the Servlets for processing the data on the server Involved in the deployment of WebService EndPoints using Apache CXF Created Realtime Reporting systems and dashboards using Adobe Flex xml MySQL and Perl Used WebLogic for design development and deployment of applications Mentoring of junior members for Agile Scrum process Junit testing Designed and modified User Interfaces using JSP JavaScript CSS and jQuery Made SDLC recommendations and implemented Flex xml development best practices Accessed and manipulated the Oracle 10 g database environment by writing SQL queries in the oracle sql developer for testing purpose Prepare JavaJ2EE development structure for Eclipse maven Jetty Involved in coding for JUnit Test cases Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH SHELL SCRIPT ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPM SERVLET UNIX LINUX ORACLE JDBC ECLIPSE TOMCAT CRUD JSP JUNIT JQUERY JIRA MAVEN ITEXT WEBLOGIC SVN UML AGILE SCRUM Sr Python Web Developer Infinity Insurance New York NY August 2013 to September 2015 Project Infinity Auto installment payment app and getting agent quote Description Infinity Auto mobile app is for making the mobile online payment for the user through the mobile app It also allows the user for getting agent quote And the user can know the policy information ID cards coverage and discounts information RESPONSIBILITIES Involved in preparing the mockups using HTML DHTML XHTML CSS and JavaScript Involved in making the components to XHTML compliance Responsibilities include analysis of these various applications designing of the enterprise applications coordination with client and offshore team meetings with business users functional and technical guide to the offshore team project management Built website and database system for in house programmed in Python through Django streamline framework Build the Optiv Managed Security Services service delivery portal from ground up using Angular NodeJS NginX Configureoptimize web server performance including ApacheNginx MySQL Memcache Vanish Redis and Magento optimzation Deployed the project on Nginx web Server using Virtualenv for creating virtual environment and uwsgi for dynamic calling python script Implemented MVC architecture by developing struts framework Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Developed a prototype of a MASHUP where back end is JAXRS Jersey REST webservice and front end is UI developed using Bootstrapjs Angularjs Developed application as Enterprise JavaScript using AngularJs NodeJs Websockets Jasmine Worked on the modernization of a legacy and outsourced UI Technologies used were Backbonejs Angularjs Emberjs Canjs and Jquery Designed and modified User Interfaces using JSP DOM Backbone Emberjs Angularjs Developed Drewgle for Big Data a java based search engine for searching metadata of various Hadoop objects Built a scalable distributed data solution using Hadoop Played a key role in installation and configuration of the various Hadoop ecosystem tools such as Sqoop Flume Pig and Hbase Expanded proficiencies in Django Mezzanine HTML5 Python and Javascript Developing a set of dashboards in Splunk 6 by leveraging Underscore D3 JqueryUI Backbone and Django Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Struts Validator framework is used to do client side validation Developed reporting application using nodejs javascript jQuerydatatables MongoDB and ElasticSearch Maintained and supported Ntier Restful Webservice used for flight searches This webservice was built using NoSql Couchbase ElasticSearch Designed backend system Logging Framework using Play Framework Apache Kafka ElasticSearch Used Java Servlets JSPs AJAX XML HTML and CSS for developing the Web component application Implemented the spring dependency injection of the Database helper instance to the action objects Used AJAX DOJO Java script Spring and GWT to create interactive user interface Part of team implementing REST APIs in Python Flask and SQLAlchemy for management of data center resources on which OpenStack cluster is deployed Python and PHP web application development using the SQLAlchemy Experience in dimensionally modeling relational data sources DMR using Cognos 8 Framework Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Deployment automation and Job Orchestration through Bash Scripts Fabric PythonCapistranoRuby Puppet Ansible Wrote Action classes Business Objects and Service classes Created Realtime Reporting systems and dashboards using Adobe Flex MySQL and Perl Involved in developing custom taglibs JSP Servlets EJBs Portlets and DB2 stored procedures Used Apache to build projects which assisted in testing and produce reports on projects Wrote JMS classes to communicate with MQ series deployed at Credit Card Issuing Used SQL statements and procedures to fetch the data from the database Deployed and configured portlets in WebSphere Portal Server Installed configured and maintained Websphere server and DB2 Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked with various version control tools like CVS Clear Case and Subversion SVN Core developer of the application infrastructure using GWT as the frontend Used ObjectRelational mapping Hibernate framework as the persistence layer for interacting with DB2 Developed the Web Based Rich Internet Application RIA using Adobe Flex Used Subversion for version control and created automated build scripts Deployed the application on to Websphere application server Implemented Web services by applying SOA concepts in conjunction with SOAP Developed EJB components Session Beans Entity beans using EJB design patterns to business and data process Use of multiple tools including Apache POI iText and JFreeChart Involved in user interface development using JSTL Worked on Hibernate objectrelational mapping according to database schema Prepare JavaJ2EE development structure for Maven JSP interfaces were developed Custom tags were used Responsible for modifying existing DB2 stored procedures and writing SQL queries as per requirement Involved in coding for JUnit Test cases Developed the Servlets for processing the data on the server Used Dojo for the client side development and validations Experience with SQL and basic CRUD operations Used Hibernate annotations to avoid writing a mapping file Involved in the deployment of WebService EndPoints using Apache CXF Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH LINUX JSON ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPMNOSQL SCALA CLOUD AWS OPEN STACK JAVAJ2EE STRUT JQUERY AJAX EXTJS JAVASCRIPT ORACLE CRUDE PLSQL JDBC REST ECLIPSE WEBLOGIC CLEARCASE JUNIT AGILE UML JSPS JSTL SERVELTS MAVEN ILOG WEB20 SOA Python UI Developer ATT Dallas TX June 2011 to July 2013 RESPONSIBILITIES Designed Graphical User Interface GUI for various WebPages using AJAX HTML CSS JSF JQuery and JavaScript MVC architecture is implemented by struts framework Configured the strutsconfigxml Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed API using Hibernate to interact with the Oracle database Developed a controller Servlet that dispatches request to appropriate Action Classes Implemented Different Design patterns like singleton factory and J2EE design patterns like Business delegate session faade Value object and DAO design patterns Used Spring Frameworks IOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Use of multiple tools including Apache POI iText and JFreeChart Used Struts tag libraries in the JSP pages Extensively worked on Spring Bean wiring Spring DAO and Spring AOP modules Used join point and advice Spring AOP modules for cross cutting concerns and IOC for dependency injection Used Java Persistence API JPA and Hibernate for performing the Database Transactions Using JPA for designing and creating the entities and establishing the relation between the entities in a persisted way for EJB Involved in developing EJBS for the business logic using Session facade pattern and deploying them in Apache tomcat Wrote complex Database PLSQL Statement and Did PLSQL tuning for the performance of the Database Involved in Developing Web Application with Full Software Development life Cycle SDLC from Design to Deployment using agile methodologies Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked extensively on the Oracle database Used JMS API for asynchronous communication by putting the messages in the Message queue Consumed Web Services WSDL SOAP UDDI from third party for authorizing payments tofrom customers Architect and design for new Application as J2EE Web application and Oracle ADF Generated PDF reports using iText Developed webbased customer management software using JSF Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Setting the development environment on eclipse Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications Exposed Survey API to other applications in DOE using Apache Axis2 Created the domains application servers and load balancers using Weblogic 90 Used Web 20 to scrape the event data from various web sites Integrated with Apache Tomcat Expert in the enterprise implementation of Oracle Enterprise Content Management solutions Specialized in UCM Portal and SOA implementation Page design and development using Oracle BPM Layout and design the overall architecture and migration approaches using Oracle ADF Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Participated in the offshore development team meeting Designed extensive additions to existing Java Web Application utilizing Service Oriented Architecture SOA techniques Involved in implementing JQuery for providing interactive user interfaces Environment JAVA JSP SERVLET EJB HTML CSS SPRING JAVASCRIPT HIBERNATE JQUERY STRUTS DESIGN PATTERNS AGILE HTML JMS XML ECLIPSE ITEXT APACHE ORACLE ECM STRUTS WEBSERVICE SOAP ILOG WEB20 ORACLE BPM JSF WSDL APACHE AXIS2 APACHE TOMCAT SERVER SOA PLSQL ORACLE10 G UML WEBLOGIC RATIONAL ROSE JUNIT Java UI Developer CONIFER Health Solutions Frisco TX April 2009 to May 2011 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs RESPONSIBILITIES Responsible for the design and development of the framework The system is designed using J2EE technologies based on MVC architecture The Views are programmed using struts JSP pages Model is a combination of EJBs and Java classes and Controllers are Servlets Developed user interface using JSP JQuery and AJAX to speed the application Writing the java script and designing the JSP GUI frame work Involved in designing the user interfaces using JSP Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Extensively worked on springs framework Used JDBC for database connectivity with MySQL Server Implement the presentation layer GUI based on open source framework involving Servlets JSP JSTL JSF CSS HTML JavaScript and Beans Designed Interactive GUIs using Java Applets and Swing Developed Servlets and Worked extensively on Sql Worked with MySQL for MySQL SQLYog and Workbench Implementation of Spring IOC container Spring JDBC template Spring Exception Strategy and AOP XML messages are used to communicate between web services that are written using SOAP and WSDL Created different database objects Stored Procedures Functions and Triggers for the backend MS SQL server Involved in debugging the product using Eclipse and JIRA Bug Tracking Used Ibatis to populate the data from the Database Involved in creating unit testing of various layers using junit and created automated test scripts for integration testing using Selenium Created war files deployed on Tomcat using ANT deployment tool Performed Java web application development using J2EE and Netbeans Expertise in employing Water Fall Model and best practices for software development Maintenance of data in different Oracle Databases and environments using TOAD Built CVS and XML file loaders and splitters for financial data Used Clear Case for source Version Control Working Closely with EMC Documentum to implement Engineering Design Storage Repository and Project Document Management Tested with the Junit Test Cases for both Professional and Institutional Claims Coordinated with QA team to ensure the quality of application Environment PYTHON DJANGO JAVA SERVLET EJB HTML CSS STRUTS JMS JDBC HIBERNATE SPRING JAVA SCRIPT AJAX UML ECLIPSE WEBLOGIC SOAP SELENIUM JBOSS ANT JQUERY NETBEANS JSP EJB WSDL TOAD WATER FALL MODEL IBATIS EMC DOCUMENTUM WEB SERVICES HTML XML MS SQL SERVER2005 MY SQL CVS JIRA CLEARQUEST SWING CLEARCASE JUNIT Software Developer GE Transportation Atlanta GA May 2007 to March 2009 RESPONSIBILITIES Wrote multithreaded programs to measure system performance Worked on GUI internationalization using JSP and Core Java Used Mercurial to keep track of versioning of the source code Worked on bug fixing Used JDBC APIs for database connectivity and data retrieval Developing HardwareStoreMarketercom site using ASPNet Strong Database programming using NET ADO with MS SQL Server 2000 MS Access and Oracle backend Extensively used Stored Procedures Functions and Triggers in Microsoft SQL Server Worked on various client websites that used Struts 2 framework Hibernate and OGNL Wrote test cases using JUnit testing framework and configured applications on Weblogic Server Involved in debugging the product using Eclipse 36 and JIRA Bug Tracking Involved in writing stored procedures view userdefined functions and triggers in SQL Server database for Reports module Simulation was developed using C Implemented realtime patient prescription history verification system using C Oracle PLSQL Used Visual Source Safe for source control Manipulated data and performed data preparation using TSO ISPF and SPF system utilities Developed and implemented Legacy system programs by using COBOL DB2 CICS JCL JAVA Wrote stored procedures in Oracle PLSQL for data entry and retrieval Extracted and modified data from VSAM files for PDF reports Automate nightly batch processing and job alerts using REXX Responsible for migrating Websphere server from v61 to v80 and migrating IBM CICS Transaction J2EE to communicate legacy COBOL based mainframe implementations Designed and developed Message Flows and Message Sets and other service component to expose Mainframe applications to enterprise J2EE applications Environment CORE JAVA JSP HTML CSS JUNIT MERCURIAL ECLIPSE NET JIRA JDBC STRUTS HIBERNATE VISUAL SOURCE SAFE WEBLOGIC ORACLE 11 G OGNL C C LINUX MS SQL SERVER COBOL FILEAID REXX ISPF MAINFRAME CICS IMS VSAM JCL Education SCJP University of Denver",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Web",
        "Developer",
        "Sr",
        "lPythonspan",
        "Web",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Web",
        "Developer",
        "Jefferson",
        "Bank",
        "New",
        "York",
        "NY",
        "years",
        "experience",
        "IT",
        "Experience",
        "analysis",
        "design",
        "implementation",
        "testing",
        "performance",
        "leadership",
        "Web",
        "DeveloperWeb",
        "DesignerGraphic",
        "Designer",
        "years",
        "experience",
        "Hands",
        "experience",
        "business",
        "processes",
        "system",
        "solutions",
        "prototype",
        "development",
        "system",
        "development",
        "deployment",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "domains",
        "Web",
        "User",
        "Interface",
        "UI",
        "DHTML",
        "XHTML",
        "AngularJS",
        "CSSCSS3",
        "JavaScript",
        "Nodejs",
        "Backbonejs",
        "React",
        "Nodejs",
        "D3",
        "jQuery",
        "W3C",
        "Web",
        "Standards",
        "browser",
        "Experience",
        "software",
        "development",
        "lifecycle",
        "programming",
        "database",
        "design",
        "methodologies",
        "Experience",
        "applications",
        "Python",
        "Django",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "Angular",
        "JS",
        "Bootstrap",
        "JS",
        "Node",
        "JS",
        "CSS",
        "JavaScript",
        "AJAX",
        "JSP",
        "JDBC",
        "XML",
        "XSLT",
        "Python",
        "Django",
        "Good",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "Webapp2",
        "spring",
        "web",
        "application",
        "frameworks",
        "Experience",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "MVC",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Nodejs",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "PythonAndNodejs",
        "Angularjs",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "data",
        "SQL",
        "Server",
        "Integration",
        "Service",
        "SSIS",
        "SQL",
        "Server",
        "Analysis",
        "Service",
        "SSAS",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "Neo4J",
        "MongoDB",
        "Cassandra",
        "SQLite",
        "custom",
        "queries",
        "database",
        "connectors",
        "Expertise",
        "database",
        "connections",
        "Java",
        "Python",
        "packages",
        "JDBC",
        "MySQL",
        "Python",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "Postgres",
        "SQL",
        "data",
        "integrity",
        "Experience",
        "JavaEE",
        "JSPs",
        "Servlets",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Tomcat",
        "Experience",
        "software",
        "development",
        "tools",
        "Eclipse",
        "Netbeans",
        "Subversion",
        "Git",
        "Ant",
        "Maven",
        "Expertise",
        "Peer",
        "Code",
        "Review",
        "Unit",
        "testing",
        "Integration",
        "Strong",
        "TDD",
        "test",
        "development",
        "integration",
        "experience",
        "JUnit",
        "experience",
        "Version",
        "control",
        "systems",
        "TFS",
        "CVS",
        "SVN",
        "Possess",
        "communication",
        "skills",
        "dedication",
        "commitment",
        "work",
        "Quick",
        "learner",
        "possess",
        "problem",
        "skills",
        "team",
        "player",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Web",
        "Developer",
        "Jefferson",
        "Bank",
        "San",
        "Antonio",
        "TX",
        "October",
        "Present",
        "Jefferson",
        "Bank",
        "bank",
        "communities",
        "San",
        "Antonio",
        "areas",
        "Texas",
        "Hill",
        "Country",
        "years",
        "Jefferson",
        "Bank",
        "team",
        "family",
        "individuals",
        "Bank",
        "success",
        "RESPONSIBILITIES",
        "Java",
        "Programs",
        "comparison",
        "data",
        "sources",
        "knowledge",
        "UI",
        "enterprise",
        "web",
        "applications",
        "HTML",
        "Java",
        "Script",
        "XML",
        "AJAX",
        "enterprise",
        "UI",
        "Standards",
        "crytpocurrency",
        "exchange",
        "system",
        "Python",
        "Google",
        "App",
        "Engine",
        "Amazon",
        "AWS",
        "Developed",
        "Perl",
        "programs",
        "email",
        "alerts",
        "error",
        "logs",
        "event",
        "process",
        "failures",
        "design",
        "development",
        "phases",
        "Rational",
        "Unified",
        "Process",
        "RUP",
        "Delivered",
        "projects",
        "Smart",
        "Analytics",
        "portfolio",
        "Big",
        "Data",
        "technologies",
        "Hadoop",
        "Sqoop",
        "Hive",
        "Pentaho",
        "solutions",
        "Big",
        "Data",
        "problem",
        "Hadoop",
        "Apache",
        "Spark",
        "technologies",
        "Big",
        "Data",
        "Service",
        "project",
        "system",
        "architecture",
        "Amazon",
        "API",
        "Puppet",
        "scripts",
        "auto",
        "deploy",
        "Hadoop",
        "clusters",
        "website",
        "project",
        "Python",
        "Client",
        "Worker",
        "methodologies",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "Django",
        "framework",
        "Clinical",
        "Trial",
        "Data",
        "sources",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "Nodejs",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "JSON",
        "REST",
        "Web",
        "services",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "GitHub",
        "version",
        "control",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "Python",
        "scripts",
        "data",
        "web",
        "PostgreSQL",
        "database",
        "Work",
        "developers",
        "code",
        "Designate",
        "python",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Struts",
        "action",
        "forms",
        "Action",
        "Classes",
        "navigation",
        "controller",
        "Struts",
        "application",
        "J2EE",
        "Architecture",
        "Spring",
        "Struts",
        "Hibernate",
        "Servlets",
        "Weblogic",
        "Design",
        "architectural",
        "deployment",
        "frontend",
        "presentation",
        "layer",
        "logic",
        "sites",
        "JSP",
        "HTMLDHTML",
        "CSS",
        "JavaScript",
        "categorization",
        "presentation",
        "content",
        "StrutsTiles",
        "MVC",
        "implementation",
        "Struts",
        "framework",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "ASPNET",
        "C",
        "Flask",
        "Python",
        "PHP",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "application",
        "Python",
        "Django",
        "technologies",
        "Tastypie",
        "Backbonejs",
        "Celery",
        "Analysis",
        "logs",
        "data",
        "filter",
        "columns",
        "logstash",
        "configuration",
        "Design",
        "Elasticsearch",
        "configuration",
        "files",
        "number",
        "hosts",
        "cluster",
        "node",
        "display",
        "UI",
        "framework",
        "PHPJSP",
        "jQuery",
        "JavaScript",
        "Angular",
        "JS",
        "elasticsearch",
        "Vendor",
        "Implementation",
        "maintenance",
        "infrastructure",
        "Application",
        "Insights",
        "NLogElasticsearch",
        "Kibana",
        "Set",
        "ElasticSearch",
        "Logstash",
        "Kibana",
        "infrastructure",
        "application",
        "stack",
        "Develop",
        "frontend",
        "web",
        "applications",
        "framework",
        "HTML5",
        "video",
        "widgets",
        "Frameworks",
        "Team",
        "Angularjs",
        "backbonejs",
        "bootstrapjs",
        "JMVC",
        "D3js",
        "Projects",
        "UI",
        "Designing",
        "Team",
        "design",
        "JavaScript",
        "libraries",
        "jQuery",
        "AngularJS",
        "Bootstrapjs",
        "Using",
        "Subversion",
        "version",
        "control",
        "Employed",
        "Hibernate",
        "persistence",
        "layer",
        "transactions",
        "Used",
        "AJAX",
        "user",
        "operations",
        "Developed",
        "Web",
        "Services",
        "SOAP",
        "Worked",
        "XML",
        "files",
        "DOMSAX",
        "parsers",
        "Unit",
        "Testing",
        "Various",
        "Modules",
        "Test",
        "Cases",
        "development",
        "environment",
        "eclipse",
        "component",
        "CRUD",
        "Scaffolding",
        "projects",
        "companys",
        "IT",
        "team",
        "GWT",
        "Spring",
        "data",
        "JPA",
        "Experience",
        "SQL",
        "CRUD",
        "operations",
        "JSP",
        "pages",
        "presentation",
        "layer",
        "UI",
        "Struts",
        "client",
        "side",
        "validations",
        "Struts",
        "Validator",
        "framework",
        "JavaScript",
        "Comprehensive",
        "experience",
        "applications",
        "UML",
        "Rational",
        "Rose",
        "Servlets",
        "data",
        "server",
        "deployment",
        "WebService",
        "EndPoints",
        "Apache",
        "CXF",
        "Realtime",
        "Reporting",
        "systems",
        "dashboards",
        "Adobe",
        "Flex",
        "xml",
        "MySQL",
        "Perl",
        "WebLogic",
        "design",
        "development",
        "deployment",
        "applications",
        "Mentoring",
        "members",
        "Agile",
        "Scrum",
        "process",
        "Junit",
        "testing",
        "User",
        "Interfaces",
        "JSP",
        "JavaScript",
        "CSS",
        "jQuery",
        "SDLC",
        "recommendations",
        "Flex",
        "xml",
        "development",
        "practices",
        "Oracle",
        "g",
        "database",
        "environment",
        "SQL",
        "queries",
        "oracle",
        "sql",
        "developer",
        "testing",
        "purpose",
        "Prepare",
        "JavaJ2EE",
        "development",
        "structure",
        "Eclipse",
        "Jetty",
        "JUnit",
        "Test",
        "cases",
        "Environment",
        "HTML",
        "CSS",
        "PYTHON",
        "DJANGO",
        "FLASK",
        "NOSQL",
        "SQLALCHEMY",
        "BIG",
        "DATA",
        "HADOOP",
        "ELASTICSEARCH",
        "SQOOP",
        "FLUME",
        "PIG",
        "HBASE",
        "JSON",
        "POSTGRESQL",
        "REST",
        "API",
        "BASH",
        "SHELL",
        "ANGULARJS",
        "BOOTSTRAP",
        "DESIGN",
        "GRUNT",
        "BOWER",
        "NODEJS",
        "NPM",
        "SERVLET",
        "UNIX",
        "LINUX",
        "ORACLE",
        "JDBC",
        "ECLIPSE",
        "TOMCAT",
        "CRUD",
        "JSP",
        "JUNIT",
        "JQUERY",
        "JIRA",
        "MAVEN",
        "ITEXT",
        "WEBLOGIC",
        "UML",
        "AGILE",
        "SCRUM",
        "Sr",
        "Python",
        "Web",
        "Developer",
        "Infinity",
        "Insurance",
        "New",
        "York",
        "NY",
        "August",
        "September",
        "Project",
        "Infinity",
        "Auto",
        "installment",
        "payment",
        "app",
        "agent",
        "Description",
        "Infinity",
        "Auto",
        "app",
        "payment",
        "user",
        "app",
        "user",
        "agent",
        "user",
        "policy",
        "information",
        "ID",
        "cards",
        "coverage",
        "information",
        "RESPONSIBILITIES",
        "mockups",
        "HTML",
        "DHTML",
        "XHTML",
        "CSS",
        "JavaScript",
        "components",
        "compliance",
        "Responsibilities",
        "analysis",
        "applications",
        "designing",
        "enterprise",
        "applications",
        "coordination",
        "client",
        "team",
        "meetings",
        "business",
        "users",
        "guide",
        "team",
        "project",
        "management",
        "website",
        "database",
        "system",
        "house",
        "Python",
        "Django",
        "framework",
        "Build",
        "Optiv",
        "Managed",
        "Security",
        "Services",
        "service",
        "delivery",
        "portal",
        "ground",
        "Angular",
        "NodeJS",
        "NginX",
        "Configureoptimize",
        "web",
        "server",
        "performance",
        "ApacheNginx",
        "MySQL",
        "Memcache",
        "Vanish",
        "Redis",
        "Magento",
        "optimzation",
        "project",
        "Nginx",
        "web",
        "Server",
        "Virtualenv",
        "environment",
        "uwsgi",
        "calling",
        "python",
        "script",
        "MVC",
        "architecture",
        "struts",
        "framework",
        "application",
        "Python",
        "Django",
        "technologies",
        "Tastypie",
        "Backbonejs",
        "Celery",
        "prototype",
        "MASHUP",
        "end",
        "JAXRS",
        "Jersey",
        "REST",
        "webservice",
        "end",
        "UI",
        "Bootstrapjs",
        "Angularjs",
        "application",
        "Enterprise",
        "JavaScript",
        "AngularJs",
        "Websockets",
        "Jasmine",
        "Worked",
        "modernization",
        "legacy",
        "UI",
        "Technologies",
        "Backbonejs",
        "Angularjs",
        "Emberjs",
        "Canjs",
        "Jquery",
        "Designed",
        "User",
        "Interfaces",
        "JSP",
        "DOM",
        "Backbone",
        "Emberjs",
        "Angularjs",
        "Developed",
        "Drewgle",
        "Big",
        "Data",
        "search",
        "engine",
        "metadata",
        "Hadoop",
        "data",
        "solution",
        "Hadoop",
        "Played",
        "role",
        "installation",
        "configuration",
        "Hadoop",
        "ecosystem",
        "tools",
        "Sqoop",
        "Flume",
        "Pig",
        "Hbase",
        "proficiencies",
        "Django",
        "Mezzanine",
        "HTML5",
        "Python",
        "Javascript",
        "set",
        "dashboards",
        "Splunk",
        "Underscore",
        "D3",
        "JqueryUI",
        "Backbone",
        "Django",
        "django_evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Struts",
        "Validator",
        "framework",
        "client",
        "side",
        "validation",
        "reporting",
        "application",
        "javascript",
        "jQuerydatatables",
        "MongoDB",
        "ElasticSearch",
        "Ntier",
        "Restful",
        "Webservice",
        "flight",
        "searches",
        "webservice",
        "NoSql",
        "Couchbase",
        "ElasticSearch",
        "backend",
        "system",
        "Logging",
        "Framework",
        "Play",
        "Framework",
        "Apache",
        "Kafka",
        "ElasticSearch",
        "Java",
        "Servlets",
        "JSPs",
        "XML",
        "HTML",
        "CSS",
        "Web",
        "component",
        "application",
        "spring",
        "dependency",
        "injection",
        "Database",
        "helper",
        "instance",
        "action",
        "AJAX",
        "DOJO",
        "Java",
        "script",
        "Spring",
        "GWT",
        "user",
        "interface",
        "Part",
        "team",
        "REST",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "cluster",
        "Python",
        "PHP",
        "web",
        "application",
        "development",
        "SQLAlchemy",
        "Experience",
        "data",
        "sources",
        "DMR",
        "Cognos",
        "Framework",
        "Design",
        "architectural",
        "deployment",
        "frontend",
        "presentation",
        "layer",
        "logic",
        "sites",
        "JSP",
        "HTMLDHTML",
        "CSS",
        "JavaScript",
        "Deployment",
        "automation",
        "Job",
        "Orchestration",
        "Bash",
        "Scripts",
        "Fabric",
        "PythonCapistranoRuby",
        "Puppet",
        "Ansible",
        "Wrote",
        "Action",
        "classes",
        "Business",
        "Objects",
        "Service",
        "classes",
        "Realtime",
        "Reporting",
        "systems",
        "dashboards",
        "Adobe",
        "Flex",
        "MySQL",
        "Perl",
        "custom",
        "taglibs",
        "JSP",
        "Servlets",
        "EJBs",
        "Portlets",
        "DB2",
        "procedures",
        "Apache",
        "projects",
        "testing",
        "reports",
        "projects",
        "Wrote",
        "JMS",
        "MQ",
        "series",
        "Credit",
        "Card",
        "Issuing",
        "SQL",
        "statements",
        "procedures",
        "data",
        "database",
        "portlets",
        "WebSphere",
        "Portal",
        "Server",
        "Installed",
        "Websphere",
        "server",
        "DB2",
        "Created",
        "detail",
        "design",
        "documents",
        "UML",
        "Design",
        "diagrams",
        "table",
        "information",
        "object",
        "model",
        "developer",
        "version",
        "control",
        "tools",
        "CVS",
        "Clear",
        "Case",
        "Subversion",
        "SVN",
        "Core",
        "developer",
        "application",
        "infrastructure",
        "GWT",
        "frontend",
        "mapping",
        "Hibernate",
        "framework",
        "persistence",
        "layer",
        "DB2",
        "Web",
        "Rich",
        "Internet",
        "Application",
        "RIA",
        "Adobe",
        "Flex",
        "Subversion",
        "version",
        "control",
        "build",
        "scripts",
        "application",
        "Websphere",
        "application",
        "server",
        "Web",
        "services",
        "SOA",
        "concepts",
        "conjunction",
        "SOAP",
        "Developed",
        "EJB",
        "components",
        "Session",
        "Beans",
        "Entity",
        "beans",
        "EJB",
        "design",
        "patterns",
        "business",
        "data",
        "process",
        "Use",
        "tools",
        "Apache",
        "POI",
        "iText",
        "JFreeChart",
        "user",
        "interface",
        "development",
        "JSTL",
        "Worked",
        "Hibernate",
        "mapping",
        "database",
        "schema",
        "Prepare",
        "JavaJ2EE",
        "development",
        "structure",
        "Maven",
        "JSP",
        "interfaces",
        "Custom",
        "tags",
        "DB2",
        "procedures",
        "SQL",
        "queries",
        "requirement",
        "JUnit",
        "Test",
        "cases",
        "Servlets",
        "data",
        "server",
        "Dojo",
        "client",
        "side",
        "development",
        "Experience",
        "SQL",
        "CRUD",
        "operations",
        "Hibernate",
        "annotations",
        "mapping",
        "file",
        "deployment",
        "WebService",
        "EndPoints",
        "Apache",
        "CXF",
        "Environment",
        "HTML",
        "CSS",
        "PYTHON",
        "DJANGO",
        "FLASK",
        "NOSQL",
        "SQLALCHEMY",
        "BIG",
        "DATA",
        "HADOOP",
        "ELASTICSEARCH",
        "SQOOP",
        "FLUME",
        "PIG",
        "HBASE",
        "JSON",
        "POSTGRESQL",
        "REST",
        "API",
        "BASH",
        "LINUX",
        "JSON",
        "ANGULARJS",
        "BOOTSTRAP",
        "DESIGN",
        "GRUNT",
        "BOWER",
        "NODEJS",
        "NPMNOSQL",
        "SCALA",
        "CLOUD",
        "STACK",
        "JAVAJ2EE",
        "STRUT",
        "JQUERY",
        "AJAX",
        "EXTJS",
        "JAVASCRIPT",
        "ORACLE",
        "CRUDE",
        "PLSQL",
        "JDBC",
        "REST",
        "WEBLOGIC",
        "CLEARCASE",
        "JUNIT",
        "AGILE",
        "UML",
        "JSPS",
        "SERVELTS",
        "MAVEN",
        "WEB20",
        "SOA",
        "Python",
        "UI",
        "Developer",
        "ATT",
        "Dallas",
        "TX",
        "June",
        "July",
        "RESPONSIBILITIES",
        "Graphical",
        "User",
        "Interface",
        "GUI",
        "WebPages",
        "AJAX",
        "HTML",
        "CSS",
        "JSF",
        "JQuery",
        "JavaScript",
        "MVC",
        "architecture",
        "struts",
        "framework",
        "Configured",
        "strutsconfigxml",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "RESTAPI",
        "API",
        "Hibernate",
        "Oracle",
        "database",
        "controller",
        "Servlet",
        "request",
        "Action",
        "Classes",
        "Different",
        "Design",
        "patterns",
        "singleton",
        "factory",
        "J2EE",
        "design",
        "patterns",
        "Business",
        "delegate",
        "session",
        "faade",
        "Value",
        "object",
        "DAO",
        "design",
        "patterns",
        "Spring",
        "Frameworks",
        "IOC",
        "Dependency",
        "Injection",
        "Service",
        "Object",
        "Service",
        "Locator",
        "Design",
        "Pattern",
        "Action",
        "Classes",
        "Use",
        "tools",
        "Apache",
        "POI",
        "iText",
        "JFreeChart",
        "Struts",
        "tag",
        "JSP",
        "pages",
        "Spring",
        "Bean",
        "wiring",
        "Spring",
        "DAO",
        "Spring",
        "AOP",
        "modules",
        "join",
        "point",
        "advice",
        "Spring",
        "AOP",
        "modules",
        "cross",
        "concerns",
        "IOC",
        "dependency",
        "injection",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "Hibernate",
        "Database",
        "Transactions",
        "JPA",
        "entities",
        "relation",
        "entities",
        "way",
        "EJB",
        "EJBS",
        "business",
        "logic",
        "Session",
        "facade",
        "pattern",
        "Apache",
        "tomcat",
        "Wrote",
        "Database",
        "PLSQL",
        "Statement",
        "PLSQL",
        "performance",
        "Database",
        "Web",
        "Application",
        "Full",
        "Software",
        "Development",
        "life",
        "Cycle",
        "SDLC",
        "Design",
        "Deployment",
        "methodologies",
        "detail",
        "design",
        "documents",
        "UML",
        "Design",
        "diagrams",
        "table",
        "information",
        "object",
        "model",
        "developer",
        "Oracle",
        "database",
        "JMS",
        "API",
        "communication",
        "messages",
        "Message",
        "queue",
        "Consumed",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "UDDI",
        "party",
        "payments",
        "customers",
        "Application",
        "J2EE",
        "Web",
        "application",
        "Oracle",
        "ADF",
        "PDF",
        "reports",
        "iText",
        "Developed",
        "customer",
        "management",
        "software",
        "JSF",
        "SOA",
        "architecture",
        "web",
        "services",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "development",
        "environment",
        "eclipse",
        "operations",
        "calculation",
        "purpose",
        "python",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "Survey",
        "API",
        "applications",
        "DOE",
        "Apache",
        "Axis2",
        "domains",
        "application",
        "servers",
        "load",
        "balancers",
        "Weblogic",
        "Web",
        "event",
        "data",
        "web",
        "sites",
        "Apache",
        "Tomcat",
        "Expert",
        "enterprise",
        "implementation",
        "Oracle",
        "Enterprise",
        "Content",
        "Management",
        "solutions",
        "Specialized",
        "UCM",
        "Portal",
        "SOA",
        "implementation",
        "Page",
        "design",
        "development",
        "Oracle",
        "BPM",
        "Layout",
        "architecture",
        "migration",
        "approaches",
        "Oracle",
        "ADF",
        "Installed",
        "multiserver",
        "ILOG",
        "environment",
        "architecture",
        "client",
        "administrators",
        "development",
        "team",
        "meeting",
        "additions",
        "Java",
        "Web",
        "Application",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "techniques",
        "JQuery",
        "user",
        "interfaces",
        "Environment",
        "JSP",
        "SERVLET",
        "EJB",
        "HTML",
        "CSS",
        "SPRING",
        "JAVASCRIPT",
        "HIBERNATE",
        "JQUERY",
        "STRUTS",
        "PATTERNS",
        "AGILE",
        "HTML",
        "JMS",
        "XML",
        "APACHE",
        "ORACLE",
        "ECM",
        "STRUTS",
        "WEBSERVICE",
        "SOAP",
        "WEB20",
        "ORACLE",
        "BPM",
        "JSF",
        "WSDL",
        "APACHE",
        "AXIS2",
        "APACHE",
        "TOMCAT",
        "SERVER",
        "SOA",
        "PLSQL",
        "G",
        "UML",
        "WEBLOGIC",
        "RATIONAL",
        "ROSE",
        "JUNIT",
        "Java",
        "UI",
        "Developer",
        "CONIFER",
        "Health",
        "Solutions",
        "Frisco",
        "TX",
        "April",
        "May",
        "Conifer",
        "Health",
        "Solutions",
        "healthcare",
        "services",
        "company",
        "clients",
        "performance",
        "Conifer",
        "Health",
        "organizations",
        "transition",
        "volume",
        "care",
        "consumer",
        "healthcare",
        "experience",
        "quality",
        "access",
        "healthcare",
        "control",
        "costs",
        "RESPONSIBILITIES",
        "design",
        "development",
        "framework",
        "system",
        "J2EE",
        "technologies",
        "MVC",
        "architecture",
        "Views",
        "struts",
        "JSP",
        "pages",
        "Model",
        "combination",
        "EJBs",
        "Java",
        "classes",
        "Controllers",
        "Servlets",
        "user",
        "interface",
        "JSP",
        "JQuery",
        "AJAX",
        "application",
        "script",
        "JSP",
        "GUI",
        "frame",
        "work",
        "user",
        "interfaces",
        "JSP",
        "JQuery",
        "frontend",
        "components",
        "Javascript",
        "functions",
        "dynamism",
        "web",
        "pages",
        "client",
        "side",
        "springs",
        "framework",
        "JDBC",
        "database",
        "connectivity",
        "MySQL",
        "Server",
        "Implement",
        "presentation",
        "layer",
        "GUI",
        "source",
        "framework",
        "Servlets",
        "JSP",
        "JSTL",
        "JSF",
        "CSS",
        "HTML",
        "JavaScript",
        "Beans",
        "GUIs",
        "Java",
        "Applets",
        "Swing",
        "Developed",
        "Servlets",
        "Sql",
        "MySQL",
        "MySQL",
        "SQLYog",
        "Workbench",
        "Implementation",
        "Spring",
        "IOC",
        "container",
        "Spring",
        "JDBC",
        "template",
        "Spring",
        "Exception",
        "Strategy",
        "AOP",
        "XML",
        "messages",
        "web",
        "services",
        "SOAP",
        "WSDL",
        "database",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "MS",
        "SQL",
        "server",
        "product",
        "Eclipse",
        "JIRA",
        "Bug",
        "Tracking",
        "Ibatis",
        "data",
        "Database",
        "unit",
        "testing",
        "layers",
        "junit",
        "test",
        "scripts",
        "integration",
        "testing",
        "Selenium",
        "war",
        "files",
        "Tomcat",
        "ANT",
        "deployment",
        "tool",
        "Performed",
        "Java",
        "web",
        "application",
        "development",
        "J2EE",
        "Netbeans",
        "Expertise",
        "Water",
        "Fall",
        "Model",
        "practices",
        "software",
        "development",
        "Maintenance",
        "data",
        "Oracle",
        "Databases",
        "environments",
        "TOAD",
        "Built",
        "CVS",
        "XML",
        "file",
        "loaders",
        "splitters",
        "data",
        "Clear",
        "Case",
        "source",
        "Version",
        "Control",
        "Working",
        "EMC",
        "Documentum",
        "Engineering",
        "Design",
        "Storage",
        "Repository",
        "Project",
        "Document",
        "Management",
        "Junit",
        "Test",
        "Cases",
        "Professional",
        "Institutional",
        "Claims",
        "QA",
        "team",
        "quality",
        "application",
        "Environment",
        "PYTHON",
        "DJANGO",
        "SERVLET",
        "EJB",
        "HTML",
        "CSS",
        "STRUTS",
        "JMS",
        "JDBC",
        "HIBERNATE",
        "SPRING",
        "JAVA",
        "SCRIPT",
        "UML",
        "WEBLOGIC",
        "SOAP",
        "SELENIUM",
        "JBOSS",
        "ANT",
        "JQUERY",
        "NETBEANS",
        "JSP",
        "EJB",
        "WSDL",
        "TOAD",
        "WATER",
        "FALL",
        "MODEL",
        "IBATIS",
        "EMC",
        "DOCUMENTUM",
        "WEB",
        "SERVICES",
        "HTML",
        "XML",
        "MS",
        "SQL",
        "SERVER2005",
        "MY",
        "SQL",
        "CVS",
        "JIRA",
        "CLEARQUEST",
        "SWING",
        "CLEARCASE",
        "JUNIT",
        "Software",
        "Developer",
        "GE",
        "Transportation",
        "Atlanta",
        "GA",
        "May",
        "March",
        "RESPONSIBILITIES",
        "programs",
        "system",
        "performance",
        "GUI",
        "internationalization",
        "JSP",
        "Core",
        "Java",
        "Mercurial",
        "track",
        "versioning",
        "source",
        "code",
        "bug",
        "JDBC",
        "APIs",
        "database",
        "connectivity",
        "data",
        "retrieval",
        "HardwareStoreMarketercom",
        "site",
        "ASPNet",
        "Strong",
        "Database",
        "programming",
        "NET",
        "ADO",
        "MS",
        "SQL",
        "Server",
        "MS",
        "Access",
        "Oracle",
        "backend",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Microsoft",
        "SQL",
        "Server",
        "client",
        "websites",
        "Struts",
        "framework",
        "Hibernate",
        "OGNL",
        "Wrote",
        "test",
        "cases",
        "JUnit",
        "testing",
        "framework",
        "applications",
        "Weblogic",
        "Server",
        "product",
        "Eclipse",
        "JIRA",
        "Bug",
        "Tracking",
        "procedures",
        "functions",
        "triggers",
        "SQL",
        "Server",
        "database",
        "Reports",
        "module",
        "Simulation",
        "C",
        "prescription",
        "history",
        "verification",
        "system",
        "C",
        "Oracle",
        "PLSQL",
        "Visual",
        "Source",
        "Safe",
        "source",
        "control",
        "Manipulated",
        "data",
        "data",
        "preparation",
        "TSO",
        "ISPF",
        "SPF",
        "system",
        "utilities",
        "Legacy",
        "system",
        "programs",
        "COBOL",
        "DB2",
        "CICS",
        "JCL",
        "procedures",
        "Oracle",
        "PLSQL",
        "data",
        "entry",
        "retrieval",
        "data",
        "files",
        "PDF",
        "reports",
        "Automate",
        "batch",
        "processing",
        "job",
        "alerts",
        "REXX",
        "Websphere",
        "server",
        "v61",
        "v80",
        "IBM",
        "CICS",
        "Transaction",
        "J2EE",
        "legacy",
        "COBOL",
        "mainframe",
        "implementations",
        "Message",
        "Flows",
        "Message",
        "Sets",
        "service",
        "component",
        "Mainframe",
        "applications",
        "enterprise",
        "J2EE",
        "applications",
        "Environment",
        "CORE",
        "JSP",
        "HTML",
        "CSS",
        "JUNIT",
        "MERCURIAL",
        "ECLIPSE",
        "NET",
        "JIRA",
        "JDBC",
        "STRUTS",
        "HIBERNATE",
        "VISUAL",
        "SOURCE",
        "SAFE",
        "WEBLOGIC",
        "G",
        "OGNL",
        "C",
        "C",
        "LINUX",
        "MS",
        "SQL",
        "SERVER",
        "COBOL",
        "FILEAID",
        "REXX",
        "ISPF",
        "MAINFRAME",
        "CICS",
        "IMS",
        "VSAM",
        "JCL",
        "Education",
        "SCJP",
        "University",
        "Denver"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:08:05.964681",
    "resume_data": "Sr Python Web Developer Sr span lPythonspan Web span lDeveloperspan Sr Python Web Developer Jefferson Bank New York NY Around 9 years of experience in IT technologies Experience in analysis design implementation and testing of scalable high available high performance Strong leadership skills Creative Web DeveloperWeb DesignerGraphic Designer with over 6 years of professional experience Hands on experience in developing business processes and system solutions utilizing prototype development system development and deployment 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Proficient in building Web User Interface UI using HTMLHTML DHTML XHTML AngularJS CSSCSS3 and JavaScript Nodejs Backbonejs React Nodejs D3 jQuery that follows W3C Web Standards and are browser compatible Experience with full software development lifecycle object oriented programming database design and agile methodologies Experience in developing webbased applications using Python 2726 Django 1413 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Good Experience with Django a highlevel Python Web framework Experienced in MVC frameworks like Django Angular JS JavaScript jQuery and Nodejs Experienced in web applications development using Django Python Flask PythonAndNodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Using Django evolution and manual SQL modifications could modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Experience with JavaEE including JSPs Servlets Web Services SOAP and REST and Tomcat Experience with software development tools such as Eclipse Netbeans Subversion Git Ant and Maven Expertise on Peer Code Review Unit testing and Integration testing Strong TDD test driven development and continuous integration experience using JUnit Extensive experience in Version control systems using TFS CVS and SVN Possess excellent communication skills along with dedication and commitment for work Quick learner possess problem solving skills and strong team player Authorized to work in the US for any employer Work Experience Sr Python Web Developer Jefferson Bank San Antonio TX October 2015 to Present Jefferson Bank is a familyowned bank serving communities in San Antonio and surrounding areas in the Texas Hill Country Through the years Jefferson Bank has created an elite team of highly skilled family oriented and civicminded individuals who contribute to the Bank continuing success RESPONSIBILITIES Wrote Java Programs for onetoone comparison of data obtained from different sources Extensive coding knowledge in developing UI for enterprise web applications using HTML Java Script XML AJAX adhering to enterprise UI Standards Developed crytpocurrency exchange system in Python using Google App Engine and Amazon AWS Developed Perl programs to send email alerts and error logs in the event of process failures Involved in the design and development phases of Rational Unified Process RUP Delivered projects in Smart Analytics portfolio using Big Data technologies like Hadoop Sqoop Hive Pentaho Involved researching optimum solutions for a given Big Data problem using Hadoop Apache Spark and other related technologies Architected the Big Data as Service project and implemented a system architecture using Amazon API and Puppet scripts to auto deploy Hadoop clusters through website Developed a project in Python using Client and Worker methodologies Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Developed monitoring and notification tools using Python Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Created Business Logic using Python to create Planning and Tracking functions Used Django for framework for accessing various Clinical Trial Data from various sources Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Involved in MVW frameworks like Django Angularjs Java Script and Nodejs Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented navigation rules for the application and page outcomes written controllers using annotations Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Worked with JSON based REST Web services Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used GitHub for version control Worked on MongoDB database concepts such as locking transactions indexes replication schema design Implemented Python scripts to import raw data from web into PostgreSQL database Work directly with developers to design and code Designate using python Wrote python scripts to parse XML documents and load the data in database Used Struts action forms and developed Action Classes which act as the navigation controller in Struts Developed the application under J2EE Architecture using Spring Struts Hibernate Servlets Weblogic Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Implemented the templatebased categorization of presentation content using StrutsTiles MVC implementation using Struts framework Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Rewrite existing PythonDjango modules to deliver certain format of data Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Analysis the logs data and filter required columns by logstash configuration and send it to elasticsearch Design the Elasticsearch configuration files based on number of hosts available naming the cluster and node accordingly Customize the display in the necessary UI framework using PHPJSP jQuery JavaScript Angular JS elasticsearch Vendor Implementation and maintenance of logging infrastructure based on Application Insights NLogElasticsearch and Kibana Set up ElasticSearch Logstash and Kibana based logging infrastructure for entire application stack Develop frontend web applications using AngularJS framework construct HTML5 video widgets Leading Frameworks Team like Angularjs backbonejs bootstrapjs JMVC D3js and Projects UI Designing Team Providing a responsive AJAXdriven design using JavaScript libraries such as jQuery AngularJS and Bootstrapjs Using Subversion for version control Employed Hibernate to create the persistence layer and to make the transactions to the backend Used AJAX for highly intensive user operations Developed Web Services using SOAP Worked on parsing the XML files using DOMSAX parsers Involved in Unit Testing of Various Modules based on the Test Cases Setting the development environment on eclipse Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring data JPA Experience with SQL and basic CRUD operations Developed JSP pages for presentation layer UI using Struts with client side validations using Struts Validator framework JavaScript Comprehensive experience in designing and developing applications using UML with Rational Rose Developed the Servlets for processing the data on the server Involved in the deployment of WebService EndPoints using Apache CXF Created Realtime Reporting systems and dashboards using Adobe Flex xml MySQL and Perl Used WebLogic for design development and deployment of applications Mentoring of junior members for Agile Scrum process Junit testing Designed and modified User Interfaces using JSP JavaScript CSS and jQuery Made SDLC recommendations and implemented Flex xml development best practices Accessed and manipulated the Oracle 10g database environment by writing SQL queries in the oracle sql developer for testing purpose Prepare JavaJ2EE development structure for Eclipse maven Jetty Involved in coding for JUnit Test cases Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH SHELL SCRIPT ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPM SERVLET UNIX LINUX ORACLE JDBC ECLIPSE TOMCAT CRUD JSP JUNIT JQUERY JIRA MAVEN ITEXT WEBLOGIC SVN UML AGILE SCRUM Sr Python Web Developer Infinity Insurance New York NY August 2013 to September 2015 Project Infinity Auto installment payment app and getting agent quote Description Infinity Auto mobile app is for making the mobile online payment for the user through the mobile app It also allows the user for getting agent quote And the user can know the policy information ID cards coverage and discounts information RESPONSIBILITIES Involved in preparing the mockups using HTML DHTML XHTML CSS and JavaScript Involved in making the components to XHTML compliance Responsibilities include analysis of these various applications designing of the enterprise applications coordination with client and offshore team meetings with business users functional and technical guide to the offshore team project management Built website and database system for in house programmed in Python through Django streamline framework Build the Optiv Managed Security Services service delivery portal from ground up using Angular NodeJS NginX Configureoptimize web server performance including ApacheNginx MySQL Memcache Vanish Redis and Magento optimzation Deployed the project on Nginx web Server using Virtualenv for creating virtual environment and uwsgi for dynamic calling python script Implemented MVC architecture by developing struts framework Built main application in Python Django leveraging technologies such as Tastypie Backbonejs and Celery Developed a prototype of a MASHUP where back end is JAXRS Jersey REST webservice and front end is UI developed using Bootstrapjs Angularjs Developed application as Enterprise JavaScript using AngularJs NodeJs Websockets Jasmine Worked on the modernization of a legacy and outsourced UI Technologies used were Backbonejs Angularjs Emberjs Canjs and Jquery Designed and modified User Interfaces using JSP DOM Backbone Emberjs Angularjs Developed Drewgle for Big Data a java based search engine for searching metadata of various Hadoop objects Built a scalable distributed data solution using Hadoop Played a key role in installation and configuration of the various Hadoop ecosystem tools such as Sqoop Flume Pig and Hbase Expanded proficiencies in Django Mezzanine HTML5 Python and Javascript Developing a set of dashboards in Splunk 6 by leveraging Underscore D3 JqueryUI Backbone and Django Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Struts Validator framework is used to do client side validation Developed reporting application using nodejs javascript jQuerydatatables MongoDB and ElasticSearch Maintained and supported Ntier Restful Webservice used for flight searches This webservice was built using NoSql Couchbase ElasticSearch Designed backend system Logging Framework using Play Framework Apache Kafka ElasticSearch Used Java Servlets JSPs AJAX XML HTML and CSS for developing the Web component application Implemented the spring dependency injection of the Database helper instance to the action objects Used AJAX DOJO Java script Spring and GWT to create interactive user interface Part of team implementing REST APIs in Python Flask and SQLAlchemy for management of data center resources on which OpenStack cluster is deployed Python and PHP web application development using the SQLAlchemy Experience in dimensionally modeling relational data sources DMR using Cognos 8 Framework Design architectural develop and deployment of frontend and presentation layer logic of sites using JSP HTMLDHTML CSS and JavaScript Deployment automation and Job Orchestration through Bash Scripts Fabric PythonCapistranoRuby Puppet Ansible Wrote Action classes Business Objects and Service classes Created Realtime Reporting systems and dashboards using Adobe Flex MySQL and Perl Involved in developing custom taglibs JSP Servlets EJBs Portlets and DB2 stored procedures Used Apache to build projects which assisted in testing and produce reports on projects Wrote JMS classes to communicate with MQ series deployed at Credit Card Issuing Used SQL statements and procedures to fetch the data from the database Deployed and configured portlets in WebSphere Portal Server Installed configured and maintained Websphere server and DB2 Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked with various version control tools like CVS Clear Case and Subversion SVN Core developer of the application infrastructure using GWT as the frontend Used ObjectRelational mapping Hibernate framework as the persistence layer for interacting with DB2 Developed the Web Based Rich Internet Application RIA using Adobe Flex Used Subversion for version control and created automated build scripts Deployed the application on to Websphere application server Implemented Web services by applying SOA concepts in conjunction with SOAP Developed EJB components Session Beans Entity beans using EJB design patterns to business and data process Use of multiple tools including Apache POI iText and JFreeChart Involved in user interface development using JSTL Worked on Hibernate objectrelational mapping according to database schema Prepare JavaJ2EE development structure for Maven JSP interfaces were developed Custom tags were used Responsible for modifying existing DB2 stored procedures and writing SQL queries as per requirement Involved in coding for JUnit Test cases Developed the Servlets for processing the data on the server Used Dojo for the client side development and validations Experience with SQL and basic CRUD operations Used Hibernate annotations to avoid writing a mapping file Involved in the deployment of WebService EndPoints using Apache CXF Environment HTML CSS PYTHON DJANGO FLASK NOSQL SQLALCHEMY BIG DATA HADOOP ELASTICSEARCH SQOOP FLUME PIG HBASE JSON MONGODB POSTGRESQL REST API BASH LINUX JSON ANGULARJS BOOTSTRAP RESPONSIVE DESIGN GRUNT BOWER NODEJS NPMNOSQL SCALA CLOUD AWS OPEN STACK JAVAJ2EE STRUT JQUERY AJAX EXTJS JAVASCRIPT ORACLE CRUDE PLSQL JDBC REST ECLIPSE WEBLOGIC CLEARCASE JUNIT AGILE UML JSPS JSTL SERVELTS MAVEN ILOG WEB20 SOA Python UI Developer ATT Dallas TX June 2011 to July 2013 RESPONSIBILITIES Designed Graphical User Interface GUI for various WebPages using AJAX HTML CSS JSF JQuery and JavaScript MVC architecture is implemented by struts framework Configured the strutsconfigxml Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed API using Hibernate to interact with the Oracle database Developed a controller Servlet that dispatches request to appropriate Action Classes Implemented Different Design patterns like singleton factory and J2EE design patterns like Business delegate session faade Value object and DAO design patterns Used Spring Frameworks IOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Use of multiple tools including Apache POI iText and JFreeChart Used Struts tag libraries in the JSP pages Extensively worked on Spring Bean wiring Spring DAO and Spring AOP modules Used join point and advice Spring AOP modules for cross cutting concerns and IOC for dependency injection Used Java Persistence API JPA and Hibernate for performing the Database Transactions Using JPA for designing and creating the entities and establishing the relation between the entities in a persisted way for EJB Involved in developing EJBS for the business logic using Session facade pattern and deploying them in Apache tomcat Wrote complex Database PLSQL Statement and Did PLSQL tuning for the performance of the Database Involved in Developing Web Application with Full Software Development life Cycle SDLC from Design to Deployment using agile methodologies Created detail design documents which has the UML Design diagrams table information object model etc which are required for the developer Worked extensively on the Oracle database Used JMS API for asynchronous communication by putting the messages in the Message queue Consumed Web Services WSDL SOAP UDDI from third party for authorizing payments tofrom customers Architect and design for new Application as J2EE Web application and Oracle ADF Generated PDF reports using iText Developed webbased customer management software using JSF Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Setting the development environment on eclipse Carried out various mathematical operations for calculation purpose using python libraries Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications Exposed Survey API to other applications in DOE using Apache Axis2 Created the domains application servers and load balancers using Weblogic 90 Used Web 20 to scrape the event data from various web sites Integrated with Apache Tomcat Expert in the enterprise implementation of Oracle Enterprise Content Management solutions Specialized in UCM Portal and SOA implementation Page design and development using Oracle BPM Layout and design the overall architecture and migration approaches using Oracle ADF Installed and configured a multiserver clustered ILOG environment Documented architecture and trained client administrators Participated in the offshore development team meeting Designed extensive additions to existing Java Web Application utilizing Service Oriented Architecture SOA techniques Involved in implementing JQuery for providing interactive user interfaces Environment JAVA JSP SERVLET EJB HTML CSS SPRING JAVASCRIPT HIBERNATE JQUERY STRUTS DESIGN PATTERNS AGILE HTML JMS XML ECLIPSE ITEXT APACHE ORACLE ECM STRUTS WEBSERVICE SOAP ILOG WEB20 ORACLE BPM JSF WSDL APACHE AXIS2 APACHE TOMCAT SERVER SOA PLSQL ORACLE10G UML WEBLOGIC RATIONAL ROSE JUNIT Java UI Developer CONIFER Health Solutions Frisco TX April 2009 to May 2011 Conifer Health Solutions is a healthcare services company partnering with more than 800 clients to strengthen their financial and clinical performance Conifer Health helps organizations transition from volume to valuebased care enhance the consumer and patient healthcare experience and improve quality access to healthcare and control costs RESPONSIBILITIES Responsible for the design and development of the framework The system is designed using J2EE technologies based on MVC architecture The Views are programmed using struts JSP pages Model is a combination of EJBs and Java classes and Controllers are Servlets Developed user interface using JSP JQuery and AJAX to speed the application Writing the java script and designing the JSP GUI frame work Involved in designing the user interfaces using JSP Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Extensively worked on springs framework Used JDBC for database connectivity with MySQL Server Implement the presentation layer GUI based on open source framework involving Servlets JSP JSTL JSF CSS HTML JavaScript and Beans Designed Interactive GUIs using Java Applets and Swing Developed Servlets and Worked extensively on Sql Worked with MySQL for MySQL SQLYog and Workbench Implementation of Spring IOC container Spring JDBC template Spring Exception Strategy and AOP XML messages are used to communicate between web services that are written using SOAP and WSDL Created different database objects Stored Procedures Functions and Triggers for the backend MS SQL server Involved in debugging the product using Eclipse and JIRA Bug Tracking Used Ibatis to populate the data from the Database Involved in creating unit testing of various layers using junit and created automated test scripts for integration testing using Selenium Created war files deployed on Tomcat using ANT deployment tool Performed Java web application development using J2EE and Netbeans Expertise in employing Water Fall Model and best practices for software development Maintenance of data in different Oracle Databases and environments using TOAD Built CVS and XML file loaders and splitters for financial data Used Clear Case for source Version Control Working Closely with EMC Documentum to implement Engineering Design Storage Repository and Project Document Management Tested with the Junit Test Cases for both Professional and Institutional Claims Coordinated with QA team to ensure the quality of application Environment PYTHON DJANGO JAVA SERVLET EJB HTML CSS STRUTS JMS JDBC HIBERNATE SPRING JAVA SCRIPT AJAX UML ECLIPSE WEBLOGIC SOAP SELENIUM JBOSS ANT JQUERY NETBEANS JSP EJB WSDL TOAD WATER FALL MODEL IBATIS EMC DOCUMENTUM WEB SERVICES HTML XML MS SQL SERVER2005 MY SQL CVS JIRA CLEARQUEST SWING CLEARCASE JUNIT Software Developer GE Transportation Atlanta GA May 2007 to March 2009 RESPONSIBILITIES Wrote multithreaded programs to measure system performance Worked on GUI internationalization using JSP and Core Java Used Mercurial to keep track of versioning of the source code Worked on bug fixing Used JDBC APIs for database connectivity and data retrieval Developing HardwareStoreMarketercom site using ASPNet Strong Database programming using NET ADO with MS SQL Server 2000 MS Access and Oracle backend Extensively used Stored Procedures Functions and Triggers in Microsoft SQL Server Worked on various client websites that used Struts 2 framework Hibernate and OGNL Wrote test cases using JUnit testing framework and configured applications on Weblogic Server Involved in debugging the product using Eclipse 36 and JIRA Bug Tracking Involved in writing stored procedures view userdefined functions and triggers in SQL Server database for Reports module Simulation was developed using C Implemented realtime patient prescription history verification system using C Oracle PLSQL Used Visual Source Safe for source control Manipulated data and performed data preparation using TSO ISPF and SPF system utilities Developed and implemented Legacy system programs by using COBOL DB2 CICS JCL JAVA Wrote stored procedures in Oracle PLSQL for data entry and retrieval Extracted and modified data from VSAM files for PDF reports Automate nightly batch processing and job alerts using REXX Responsible for migrating Websphere server from v61 to v80 and migrating IBM CICS Transaction J2EE to communicate legacy COBOL based mainframe implementations Designed and developed Message Flows and Message Sets and other service component to expose Mainframe applications to enterprise J2EE applications Environment CORE JAVA JSP HTML CSS JUNIT MERCURIAL ECLIPSE NET JIRA JDBC STRUTS HIBERNATE VISUAL SOURCE SAFE WEBLOGIC ORACLE 11G OGNL C C LINUX MS SQL SERVER COBOL FILEAID REXX ISPF MAINFRAME CICS IMS VSAM JCL Education SCJP University of Denver",
    "unique_id": "55e1f58d-0ea5-41c5-8c7f-200b43a022f6"
}