{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer AMAZON Miami FL 7 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecturebased enterprise application software in Python on various domains Expertise in implementing ObjectOriented technologies Web based clientserver architecture service oriented architecture and Object Relational Mappings ORM Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and JQuery Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pandas dataframe SQLAlchemy networkx numpy scipy urllib2 Pychart Highcharts PySide SciPy PyTables to drive improvements throughout entire SDLC Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata  PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in the US for any employer Work Experience Sr Python Developer AMAZON Seattle WA December 2017 to Present Responsibilities Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Extracted data from the database using SASAccess SAS SQL procedures and create SAS data sets Responsible for Data Backups Restores and Recovery using tapesys software Used python packages cx_oracle pyodbc and MySQL dB for working with Oracle sql server and MySQL DB respectively Code conventions pushed for PEP8 and Pylint compliance Analyzing the data in existing PIP schema Modifying data using SASBASE SAS MACROS Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Worked on migration of Splunk to AWScloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Configured Elastic Load Balancer and Auto scaling to design cost effective fault tolerant and highly available systems Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Placed data into JSON files using Python to test Django websites Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Implemented SOAPRESTful web services in JSON format Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST based API Wrote python scripts using Boto3 to automatically spin up the instances in AWS EC2 and OPS Works stacks and integrated with Auto scaling to automatically spin up the servers with configured AMIs Developing python programs by using boto3 sdk to implement security by using AWS Cognito service Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Used ReactJS to create Controllers to handle events triggered by clients and send request to server Maintained states in the stores and dispatched the actions using redux Developed Docker images to support Development and Testing Teams and their pipelines and distributed images like Jenkins Selenium JMeter and ElasticSearch Kibana and Logstash ELK and handled the containerized deployment using Kubernetes Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Worked with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used SQL Alchemy as Object Relational Mapper ORM for writing ORM queries 2 Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Built application interface and web scrapping scripts using OO designing UML modeling and dynamic data structures Implemented discretization and binning data wrangling cleaning transforming merging and reshaping data frames Determined optimal business logic implementations applying best design patterns Increased speed and memory efficiency by implementing code migration to convert python code to CC using Cython Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Used TKinter to implement GUI for the user to create modify and view reports based on client data Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Worked on Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer Starbucks Seattle WA October 2014 to September 2017 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Worked with Python libraries requests pythonldap suds pexpect pip subprocess Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented SQL Alchemy which is a python library for complete access over SQL Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface 3 Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn NLTK in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression Used Django configuration to manage URLs and application parameters Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on pythonbased test frameworks and test driven development with automation tools Worked with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mirco service using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created cloud service using AWS managed Virtual machines and websites using AWSEC2 ELB Autoscaling Lambda Developed installer scripts using Pythonboto3 for various products to be hosted on Application Servers Written Python utilities and scripts to automate tasks in AWS using boto3 and AWS SDK Automated backups using AWS SDK boto3 to transfer data into S3 buckets Writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Designed Automated the process of installation and configuration of secure DataStax Enterprise Cassandra cluster using puppet Configured internode communication between Cassandra nodes and client using SSL encryption Docker container deploying micro services and scaling the deployment using Kubernetes Developed Chat Ops interfaces with slack and Kubernetes on GKE Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for on boarding Application teams to build and deploy there code using Git Hub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API 4 Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Worked with migration to Amazon web Services AWS Python Developer Twitter San Francisco CA December 2012 to May 2014 Responsibilities Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Responsible for entire data migration from Sybase ASE server to Oracle Migration of API code written for Sybase to Oracle Debug the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions using Firefox and IE Developer Tool bar for IE Developed web applications in Django Frameworks model view control MVC architecture Creation of REST Webservices for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Designed and Developed the inputoutput data formats in XSD for the WSDL files and accordingly implementing services using Apache AXIS2 Used NetBeans IDE to develop the application Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Implemented the MVC architecture using Apache Struts Framework Experience in Python open stack APIs Worked with Rational ClearCase to provide sophisticated version control workspace management and parallel development support Build and maintained a Selenium Regression test suite Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Wrote Python code using Ansible Python API to automate cloud deployment process Managed Web applications configuration files users file systems and packages using Ansible Built various graphs using Matplotlib package which helped in taking business decisions Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on automation using the Python scripting language Git on Cygwin32 and XML Worked on monitoring tools like Nagios Zabbix AWS Cloud Watch to health check the various deployed resources and services Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Executed asynchronous tasks with help of Celery and RabbitMQ Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate 5 Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Worked on resulting reports of the application and Tableau reports and involved in modifying data using SASBASE SAS MACROS Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors in computer science Delhi Technical University May 2012 Skills Javascript HTML 5 Git CSS MySQL jQuery",
    "entities": [
        "DAO Added",
        "Continuous Deployment Application Server",
        "ASE",
        "AJAX",
        "GUI",
        "PyCharm PyScripter PyStudio",
        "ORM",
        "OO",
        "Relational",
        "Implemented Docker",
        "Spark Streaming Implemented",
        "API Wrote",
        "UNIX",
        "Libraries",
        "DataStax Enterprise Cassandra",
        "COMSOL Multiphysics",
        "REST JSON",
        "Working",
        "Object Diagrams",
        "JSON",
        "Implemented TFS Build Archival",
        "Identity Compute Image Service Block Storage Networking Neutron",
        "Worked on Jenkins",
        "Developed Hadoop",
        "Git Implemented SQL Alchemy",
        "Subversion Responsible",
        "Hadoop",
        "Kubernetes Spinnaker Docker Terraform Consul",
        "XML",
        "MAC",
        "Functional",
        "J2EE Design",
        "Maintained",
        "NodeJS",
        "Analysis Design Development Implementation and Testing",
        "Shell",
        "SQL Developed",
        "CC",
        "Oracle OCCI API Used Python Libraries Pandas",
        "HBase",
        "SASAccess SAS SQL",
        "HNM",
        "Apache Spark",
        "Amazon",
        "GitHub Projects",
        "ELK",
        "UserAcceptance",
        "Python",
        "Migrations Network",
        "AWS Lambda and CloudWatch Built Elastic",
        "Migration of API",
        "AWSEC2 ELB Autoscaling Lambda Developed",
        "Amazon AWS S3",
        "Upgrade Backup Restore DNS LDAP",
        "Bash",
        "HDFS Hive Leveraged AWS",
        "REST SOAP",
        "MATLAB",
        "Installed",
        "Delhi Technical University",
        "NOVA",
        "PyWebkitGtk",
        "Created Python",
        "Amazon web Services AWS Python Developer",
        "San Francisco",
        "RAD",
        "Hadoop MapReduce",
        "UML",
        "Git",
        "ANSIBLE",
        "Creation of REST Webservices",
        "AWS Cloud",
        "urllib2 Pychart",
        "Django Websites Created",
        "Life Cycles",
        "Bash Involved",
        "Develop",
        "OPS Works",
        "S3 Implemented",
        "Firebug",
        "Created Data",
        "Data Extraction Transformation",
        "Flask",
        "ObjectOriented",
        "Shell Scripting",
        "AWS SDK boto3",
        "DOM",
        "RDS",
        "PEP8",
        "Jenkins CICD",
        "SSL",
        "Views",
        "Celery",
        "PyQt",
        "HTML CSS JavaScript JQuery",
        "MVC",
        "Oracle Migration of API",
        "Redux",
        "Developed Python Mapper",
        "GIT",
        "DOM Functions",
        "Python on Django",
        "log analytics full text search",
        "the SOA Service Oriented Architecture",
        "WSGI",
        "API",
        "US",
        "Terraform",
        "Sybase",
        "Selenium Regression",
        "Python Developer Starbucks Seattle",
        "AWScloud",
        "API Integration Worked",
        "AWS",
        "Implemented",
        "Sqlite3",
        "Jenkins Provisioned",
        "Oracle",
        "Ansible Puppet Chef",
        "SAS",
        "Responsible for Data Backups Restores and Recovery",
        "GitHub",
        "Fiddler",
        "lPythonspan",
        "Kubernetes",
        "Packer Terraform Kubernetes AWS GCP Responsible",
        "PI Services",
        "SaltStack Experienced",
        "SSH",
        "Wireshark",
        "Pylint",
        "CICD",
        "Created Restful",
        "Amazon AWS",
        "Virtual",
        "Pandas",
        "Work Experience Sr Python Developer AMAZON Seattle",
        "AWS Simple Storage Service S3",
        "MACROS Created",
        "CRUD",
        "Python Django Worked on Dockers RabbitMQ",
        "EJB Servlets Hibernate 5 Developed",
        "UML Rational Rose for Object",
        "Maven",
        "Build",
        "Performed",
        "Created UI",
        "Djangos",
        "Logstash",
        "the Silent Circle Management System SCMC",
        "Selenium",
        "Python Package",
        "Spark shark Streams",
        "IE Developer Tool",
        "Kafka System",
        "XSD",
        "Nodes",
        "SVN",
        "Kubernetes Log",
        "REST",
        "NetBeans",
        "Tableau",
        "GKE Working",
        "HTML5CSS3",
        "Application",
        "PIP",
        "EBS",
        "IE Developed",
        "Object Relational Mappings ORM Experienced",
        "JQuery",
        "JSON Responsible for Configuring",
        "Overlook",
        "PythonTornado",
        "Development and Testing Teams"
    ],
    "experience": "Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata   PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in the US for any employer Work Experience Sr Python Developer AMAZON Seattle WA December 2017 to Present Responsibilities Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Extracted data from the database using SASAccess SAS SQL procedures and create SAS data sets Responsible for Data Backups Restores and Recovery using tapesys software Used python packages cx_oracle pyodbc and MySQL dB for working with Oracle sql server and MySQL DB respectively Code conventions pushed for PEP8 and Pylint compliance Analyzing the data in existing PIP schema Modifying data using SASBASE SAS MACROS Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Worked on migration of Splunk to AWScloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Configured Elastic Load Balancer and Auto scaling to design cost effective fault tolerant and highly available systems Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Placed data into JSON files using Python to test Django websites Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Implemented SOAPRESTful web services in JSON format Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST based API Wrote python scripts using Boto3 to automatically spin up the instances in AWS EC2 and OPS Works stacks and integrated with Auto scaling to automatically spin up the servers with configured AMIs Developing python programs by using boto3 sdk to implement security by using AWS Cognito service Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Used ReactJS to create Controllers to handle events triggered by clients and send request to server Maintained states in the stores and dispatched the actions using redux Developed Docker images to support Development and Testing Teams and their pipelines and distributed images like Jenkins Selenium JMeter and ElasticSearch Kibana and Logstash ELK and handled the containerized deployment using Kubernetes Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Worked with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used SQL Alchemy as Object Relational Mapper ORM for writing ORM queries 2 Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Built application interface and web scrapping scripts using OO designing UML modeling and dynamic data structures Implemented discretization and binning data wrangling cleaning transforming merging and reshaping data frames Determined optimal business logic implementations applying best design patterns Increased speed and memory efficiency by implementing code migration to convert python code to CC using Cython Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Used TKinter to implement GUI for the user to create modify and view reports based on client data Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Worked on Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer Starbucks Seattle WA October 2014 to September 2017 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Worked with Python libraries requests pythonldap suds pexpect pip subprocess Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented SQL Alchemy which is a python library for complete access over SQL Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface 3 Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn NLTK in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression Used Django configuration to manage URLs and application parameters Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on pythonbased test frameworks and test driven development with automation tools Worked with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mirco service using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created cloud service using AWS managed Virtual machines and websites using AWSEC2 ELB Autoscaling Lambda Developed installer scripts using Pythonboto3 for various products to be hosted on Application Servers Written Python utilities and scripts to automate tasks in AWS using boto3 and AWS SDK Automated backups using AWS SDK boto3 to transfer data into S3 buckets Writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Designed Automated the process of installation and configuration of secure DataStax Enterprise Cassandra cluster using puppet Configured internode communication between Cassandra nodes and client using SSL encryption Docker container deploying micro services and scaling the deployment using Kubernetes Developed Chat Ops interfaces with slack and Kubernetes on GKE Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for on boarding Application teams to build and deploy there code using Git Hub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API 4 Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Worked with migration to Amazon web Services AWS Python Developer Twitter San Francisco CA December 2012 to May 2014 Responsibilities Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Responsible for entire data migration from Sybase ASE server to Oracle Migration of API code written for Sybase to Oracle Debug the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions using Firefox and IE Developer Tool bar for IE Developed web applications in Django Frameworks model view control MVC architecture Creation of REST Webservices for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Designed and Developed the inputoutput data formats in XSD for the WSDL files and accordingly implementing services using Apache AXIS2 Used NetBeans IDE to develop the application Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Implemented the MVC architecture using Apache Struts Framework Experience in Python open stack APIs Worked with Rational ClearCase to provide sophisticated version control workspace management and parallel development support Build and maintained a Selenium Regression test suite Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Wrote Python code using Ansible Python API to automate cloud deployment process Managed Web applications configuration files users file systems and packages using Ansible Built various graphs using Matplotlib package which helped in taking business decisions Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on automation using the Python scripting language Git on Cygwin32 and XML Worked on monitoring tools like Nagios Zabbix AWS Cloud Watch to health check the various deployed resources and services Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Executed asynchronous tasks with help of Celery and RabbitMQ Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate 5 Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Worked on resulting reports of the application and Tableau reports and involved in modifying data using SASBASE SAS MACROS Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors in computer science Delhi Technical University May 2012 Skills Javascript HTML 5 Git CSS MySQL jQuery",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "AMAZON",
        "Miami",
        "FL",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "standalone",
        "enterprise",
        "application",
        "software",
        "Python",
        "domains",
        "Expertise",
        "ObjectOriented",
        "technologies",
        "Web",
        "clientserver",
        "architecture",
        "service",
        "architecture",
        "Object",
        "Relational",
        "Mappings",
        "ORM",
        "Webbased",
        "Applications",
        "Python",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "experience",
        "Python",
        "tools",
        "developments",
        "Beautiful",
        "Soup",
        "Jasy",
        "Scipy",
        "matplotlib",
        "Pickle",
        "PySide",
        "Pandas",
        "SQLAlchemy",
        "networkx",
        "numpy",
        "urllib2",
        "Pychart",
        "Highcharts",
        "PySide",
        "SciPy",
        "PyTables",
        "improvements",
        "SDLC",
        "Experience",
        "Open",
        "VMS",
        "Unix",
        "SOLARIS",
        "Linux",
        "NT",
        "systems",
        "Performed",
        "system",
        "functions",
        "software",
        "NT",
        "Unix",
        "Alphaservers",
        "Expertise",
        "serverside",
        "technologies",
        "Restful",
        "APL",
        "MVC",
        "design",
        "patterns",
        "Experience",
        "stack",
        "services",
        "Identity",
        "Compute",
        "Image",
        "Service",
        "Block",
        "Storage",
        "Networking",
        "Neutron",
        "Keystone",
        "Superior",
        "Troubleshooting",
        "support",
        "abilities",
        "Migrations",
        "Network",
        "connectivity",
        "Security",
        "Database",
        "applications",
        "Experience",
        "party",
        "tools",
        "Telerik",
        "DevExpress",
        "kendo",
        "Controls",
        "applications",
        "Docker",
        "Vagrant",
        "JSON",
        "REST",
        "SOAP",
        "Amazon",
        "Web",
        "Services",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "NT",
        "XP",
        "Vista",
        "UNIX",
        "MAC",
        "OS",
        "X",
        "Experience",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "Route53",
        "Cloud",
        "Watch",
        "Security",
        "Groups",
        "Cloud",
        "Trail",
        "IAM",
        "Cloud",
        "Front",
        "Snowball",
        "RDS",
        "Glacier",
        "Experience",
        "automationconfiguration",
        "management",
        "tools",
        "Puppet",
        "Chef",
        "SaltStack",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Expertise",
        "PIP",
        "community",
        "Python",
        "Package",
        "Manager",
        "BDD",
        "tool",
        "Python",
        "Expertise",
        "GUI",
        "Jytho",
        "PyQt",
        "PyWebkitGtk",
        "Elasticsearch",
        "Log",
        "stash",
        "Kibana",
        "ELK",
        "Expertise",
        "Crypto",
        "Blockchain",
        "Bitcoin",
        "Monaro",
        "Bitcoin",
        "Cash",
        "Ecommerce",
        "platform",
        "Python",
        "Flask",
        "backend",
        "JinjaJavaScript",
        "frontend",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Seattle",
        "WA",
        "December",
        "Present",
        "Responsibilities",
        "services",
        "NOVA",
        "SWIFT",
        "KEYSTONE",
        "NEUTRON",
        "CINDER",
        "GLANCE",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "DAO",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Developed",
        "Kafka",
        "producer",
        "consumers",
        "HBase",
        "Spark",
        "shark",
        "Streams",
        "Hadoop",
        "MapReduce",
        "jobs",
        "components",
        "HDFS",
        "Hive",
        "Leveraged",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "auto",
        "scaling",
        "systems",
        "load",
        "servers",
        "TFS",
        "Build",
        "Archival",
        "AWS",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Life",
        "Cycles",
        "files",
        "S3",
        "cloud",
        "alarm",
        "instances",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "Engine",
        "Docker",
        "HUB",
        "Docker",
        "Images",
        "Docker",
        "Compose",
        "images",
        "installations",
        "domain",
        "configurations",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "Data",
        "Backups",
        "Restores",
        "Recovery",
        "tapesys",
        "software",
        "python",
        "packages",
        "cx_oracle",
        "pyodbc",
        "MySQL",
        "Oracle",
        "sql",
        "server",
        "MySQL",
        "DB",
        "Code",
        "conventions",
        "PEP8",
        "Pylint",
        "compliance",
        "data",
        "PIP",
        "schema",
        "Modifying",
        "data",
        "SASBASE",
        "SAS",
        "MACROS",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Elasticsearch",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "migration",
        "Splunk",
        "AWScloud",
        "instances",
        "Splunk",
        "forwarder",
        "deployment",
        "configuration",
        "maintenance",
        "UNIX",
        "Windows",
        "platforms",
        "Configured",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "design",
        "cost",
        "fault",
        "systems",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "strings",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "web",
        "services",
        "format",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "search",
        "stash",
        "Kibana",
        "ELK",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "function",
        "CRUD",
        "applications",
        "MERN",
        "stack",
        "MongoDB",
        "ExpressJS",
        "ReactJS",
        "NodeJS",
        "REST",
        "API",
        "python",
        "scripts",
        "Boto3",
        "instances",
        "AWS",
        "EC2",
        "OPS",
        "Works",
        "stacks",
        "Auto",
        "scaling",
        "servers",
        "AMIs",
        "programs",
        "sdk",
        "security",
        "AWS",
        "Cognito",
        "service",
        "Python",
        "Boto3",
        "automation",
        "Ansible",
        "Terraform",
        "tasks",
        "EBS",
        "volumes",
        "AMIs",
        "scheduling",
        "Lambda",
        "functions",
        "AWS",
        "tasks",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "states",
        "stores",
        "actions",
        "redux",
        "Developed",
        "Docker",
        "images",
        "Development",
        "Testing",
        "Teams",
        "pipelines",
        "images",
        "Jenkins",
        "Selenium",
        "JMeter",
        "ElasticSearch",
        "Kibana",
        "Logstash",
        "ELK",
        "deployment",
        "Kubernetes",
        "Log",
        "monitoring",
        "representations",
        "logs",
        "ELK",
        "stack",
        "Implement",
        "CICD",
        "tools",
        "Upgrade",
        "Backup",
        "Restore",
        "DNS",
        "LDAP",
        "SSL",
        "setup",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "Dev",
        "Centre",
        "Data",
        "stax",
        "Ops",
        "center",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Elasticsearch",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "monitoring",
        "playbooks",
        "Integrated",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "nodes",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "Dev",
        "Servers",
        "SQL",
        "Alchemy",
        "Object",
        "Relational",
        "Mapper",
        "ORM",
        "ORM",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "part",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "team",
        "practices",
        "services",
        "REST",
        "application",
        "interface",
        "web",
        "scripts",
        "OO",
        "UML",
        "modeling",
        "data",
        "structures",
        "discretization",
        "data",
        "cleaning",
        "data",
        "frames",
        "business",
        "logic",
        "implementations",
        "design",
        "patterns",
        "speed",
        "memory",
        "efficiency",
        "code",
        "migration",
        "python",
        "code",
        "CC",
        "Cython",
        "Written",
        "Salt",
        "scripts",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "Beats",
        "stack",
        "Python",
        "web",
        "framework",
        "emphasis",
        "simplicity",
        "flexibility",
        "extensibility",
        "components",
        "reinvents",
        "wheels",
        "WSGI",
        "templating",
        "forms",
        "data",
        "events",
        "SQL",
        "Alchemy",
        "Storm",
        "CouchDB",
        "OpenID",
        "App",
        "Engine",
        "jQuery",
        "Validated",
        "BI",
        "Support",
        "events",
        "events",
        "HNM",
        "Kafka",
        "events",
        "Kafka",
        "Mesos",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "RAD",
        "Static",
        "web",
        "services",
        "services",
        "business",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "COMSOL",
        "Multiphysics",
        "model",
        "MATLAB",
        "user",
        "interface",
        "case",
        "studies",
        "plots",
        "data",
        "processing",
        "TKinter",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "web",
        "application",
        "Cloud",
        "platform",
        "engineering",
        "Kubernetes",
        "Spinnaker",
        "Docker",
        "Terraform",
        "Consul",
        "drone",
        "Jenkins",
        "Chef",
        "Kitchen",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "nodes",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "Dev",
        "Servers",
        "Pandas",
        "library",
        "Analysis",
        "Pandas",
        "library",
        "reshaping",
        "pivoting",
        "data",
        "sets",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "Python",
        "Developer",
        "Starbucks",
        "Seattle",
        "WA",
        "October",
        "September",
        "Responsibilities",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Python",
        "wxPython",
        "numPY",
        "Pandas",
        "Twisted",
        "mat",
        "PlotLib",
        "Python",
        "requests",
        "suds",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "SQL",
        "Alchemy",
        "library",
        "access",
        "SQL",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Pandas",
        "library",
        "Analysis",
        "Pandas",
        "library",
        "reshaping",
        "pivoting",
        "data",
        "crossbrowserplatform",
        "ReactJs",
        "nodeJs",
        "JQuery",
        "AJAX",
        "HTML5CSS3",
        "design",
        "specs",
        "page",
        "layout",
        "code",
        "standards",
        "UI",
        "scratch",
        "ReactJs",
        "Pandas",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Scikitlearn",
        "NLTK",
        "Python",
        "machine",
        "algorithms",
        "machine",
        "learning",
        "algorithms",
        "regression",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "AWS",
        "server",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "database",
        "objects",
        "Django",
        "Database",
        "APIs",
        "test",
        "frameworks",
        "test",
        "development",
        "automation",
        "tools",
        "time",
        "streaming",
        "application",
        "batch",
        "style",
        "scale",
        "computing",
        "applications",
        "tools",
        "Spark",
        "Streaming",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "web",
        "application",
        "configurations",
        "servers",
        "Ansible",
        "Deployed",
        "mircoservices2",
        "AWS",
        "environments",
        "Ansible",
        "Playbooks",
        "load",
        "balancer",
        "group",
        "configuration",
        "mirco",
        "service",
        "Ansible",
        "Used",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "cloud",
        "service",
        "AWS",
        "machines",
        "websites",
        "AWSEC2",
        "ELB",
        "Autoscaling",
        "Lambda",
        "installer",
        "scripts",
        "Pythonboto3",
        "products",
        "Application",
        "Servers",
        "Written",
        "Python",
        "utilities",
        "scripts",
        "tasks",
        "AWS",
        "boto3",
        "AWS",
        "SDK",
        "Automated",
        "backups",
        "AWS",
        "SDK",
        "data",
        "S3",
        "buckets",
        "playbooks",
        "applications",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Provisioned",
        "servers",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "role",
        "Zabbixagent",
        "CICD",
        "pipeline",
        "Ansible",
        "infrastructures",
        "version",
        "control",
        "Ansible",
        "document",
        "application",
        "dependencies",
        "version",
        "control",
        "Develop",
        "python",
        "code",
        "ingestion",
        "formats",
        "JSON",
        "CSV",
        "Logstash",
        "search",
        "Kibana",
        "dashboard",
        "clients",
        "ELK",
        "clusters",
        "Elasticsearch",
        "Logstash",
        "Graphite",
        "Kibana",
        "Kafka",
        "zookeeper",
        "Design",
        "build",
        "ELK",
        "Elasticsearch",
        "Logstash",
        "graphite",
        "Kibana",
        "cluster",
        "logging",
        "search",
        "functionalities",
        "App",
        "process",
        "installation",
        "configuration",
        "DataStax",
        "Enterprise",
        "Cassandra",
        "cluster",
        "puppet",
        "communication",
        "Cassandra",
        "nodes",
        "client",
        "SSL",
        "encryption",
        "Docker",
        "container",
        "deploying",
        "micro",
        "services",
        "deployment",
        "Kubernetes",
        "Developed",
        "Chat",
        "Ops",
        "interfaces",
        "slack",
        "Kubernetes",
        "GKE",
        "Working",
        "Spinnaker",
        "platform",
        "MultiCloud",
        "Continuous",
        "Delivery",
        "Bake",
        "Test",
        "DeployContainer",
        "Pipelines",
        "Packer",
        "Terraform",
        "Kubernetes",
        "AWS",
        "boarding",
        "Application",
        "teams",
        "code",
        "Git",
        "Hub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "core",
        "repository",
        "SUBVERSION",
        "GIT",
        "Managed",
        "GitHub",
        "Projects",
        "SVN",
        "GitHub",
        "history",
        "Cloud",
        "Trail",
        "TESSA",
        "Cloud",
        "Passage",
        "Check",
        "Marx",
        "Qualys",
        "Scan",
        "tools",
        "AWS",
        "security",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "Performed",
        "web",
        "testing",
        "automation",
        "selenium",
        "API",
        "Redux",
        "list",
        "reducers",
        "functions",
        "store",
        "method",
        "PI",
        "Services",
        "JavaScript",
        "Bootstrap",
        "GIT",
        "JSON",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "Written",
        "Salt",
        "scripts",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "Beats",
        "Performed",
        "parameterization",
        "test",
        "scripts",
        "Selenium",
        "application",
        "sets",
        "data",
        "Contributed",
        "Automation",
        "Framework",
        "Java",
        "Selenium",
        "Web",
        "Driver",
        "Testing",
        "automation",
        "test",
        "cases",
        "automation",
        "script",
        "bugs",
        "migration",
        "Amazon",
        "web",
        "Services",
        "AWS",
        "Python",
        "Developer",
        "Twitter",
        "San",
        "Francisco",
        "CA",
        "December",
        "May",
        "Responsibilities",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "DTDs",
        "XSD",
        "schemas",
        "XML",
        "processing",
        "design",
        "mechanism",
        "exceptions",
        "errors",
        "Log4j",
        "tool",
        "Tortoise",
        "SVN",
        "versioncontrol",
        "client",
        "Subversion",
        "Responsible",
        "data",
        "migration",
        "Sybase",
        "ASE",
        "server",
        "Oracle",
        "Migration",
        "API",
        "code",
        "Sybase",
        "Oracle",
        "Debug",
        "application",
        "Firebug",
        "documents",
        "Nodes",
        "DOM",
        "DOM",
        "Functions",
        "Firefox",
        "IE",
        "Developer",
        "Tool",
        "bar",
        "IE",
        "Developed",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Creation",
        "REST",
        "Webservices",
        "management",
        "data",
        "Apache",
        "CXF",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modeling",
        "data",
        "import",
        "export",
        "ReactJS",
        "code",
        "reusability",
        "Bootstrap",
        "Used",
        "Redux",
        "architecture",
        "process",
        "Actions",
        "data",
        "formats",
        "XSD",
        "WSDL",
        "files",
        "services",
        "Apache",
        "AXIS2",
        "NetBeans",
        "IDE",
        "application",
        "Docker",
        "containers",
        "images",
        "applications",
        "provision",
        "slaves",
        "Jenkins",
        "CICD",
        "pipelines",
        "Developed",
        "Hadoop",
        "integrations",
        "data",
        "ingestion",
        "data",
        "mapping",
        "data",
        "processing",
        "XML",
        "display",
        "options",
        "box",
        "description",
        "web",
        "page",
        "MVC",
        "architecture",
        "Apache",
        "Struts",
        "Framework",
        "Experience",
        "Python",
        "stack",
        "APIs",
        "Rational",
        "ClearCase",
        "version",
        "control",
        "workspace",
        "management",
        "development",
        "support",
        "Build",
        "Selenium",
        "Regression",
        "test",
        "suite",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "Wrote",
        "Python",
        "code",
        "Ansible",
        "Python",
        "API",
        "deployment",
        "process",
        "Managed",
        "Web",
        "applications",
        "configuration",
        "files",
        "users",
        "file",
        "systems",
        "packages",
        "Ansible",
        "graphs",
        "Matplotlib",
        "package",
        "business",
        "decisions",
        "APIs",
        "functionalities",
        "application",
        "API",
        "parties",
        "automation",
        "Python",
        "scripting",
        "language",
        "Git",
        "Cygwin32",
        "XML",
        "tools",
        "Nagios",
        "Zabbix",
        "Cloud",
        "health",
        "resources",
        "services",
        "role",
        "database",
        "migration",
        "projects",
        "Oracle",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "understanding",
        "knowledge",
        "Hadoop",
        "file",
        "system",
        "data",
        "modelling",
        "architecture",
        "design",
        "principles",
        "Developed",
        "Python",
        "Mapper",
        "Reducer",
        "scripts",
        "Hadoop",
        "streaming",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "tasks",
        "help",
        "Celery",
        "experience",
        "Core",
        "Java",
        "J2EE",
        "features",
        "Java",
        "JDBC",
        "Spring",
        "Struts",
        "EJB",
        "Servlets",
        "Hibernate",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "interface",
        "MVC",
        "architecture",
        "reports",
        "application",
        "Tableau",
        "data",
        "SASBASE",
        "SAS",
        "MACROS",
        "software",
        "pip",
        "command",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "pythontwitter",
        "Celery",
        "matplotlib",
        "Pandas",
        "dataframe",
        "PEP8",
        "convention",
        "Migration",
        "API",
        "code",
        "Sybase",
        "Oracle",
        "Overlook",
        "migration",
        "activity",
        "PLSQL",
        "programs",
        "application",
        "Python",
        "Django",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "Libraries",
        "Sybase",
        "APIs",
        "Oracle",
        "API",
        "Python",
        "Pandas",
        "NumPy",
        "SQL",
        "Tableau",
        "data",
        "database",
        "status",
        "reports",
        "dashboards",
        "Education",
        "Bachelors",
        "computer",
        "science",
        "Delhi",
        "Technical",
        "University",
        "May",
        "Skills",
        "Javascript",
        "HTML",
        "Git",
        "CSS",
        "MySQL",
        "jQuery"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:19:39.036472",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer AMAZON Miami FL 7 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecturebased enterprise application software in Python on various domains Expertise in implementing ObjectOriented technologies Web based clientserver architecture service oriented architecture and Object Relational Mappings ORM Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and JQuery Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pandas dataframe SQLAlchemy networkx numpy scipy urllib2 Pychart Highcharts PySide SciPy PyTables to drive improvements throughout entire SDLC Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Experience in using third party tools like Telerik DevExpress and kendo Controls and worked containerizing applications using Docker and Vagrant and familiar with JSON based REST SOAP and Amazon Web Services Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata PyGUI PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in the US for any employer Work Experience Sr Python Developer AMAZON Seattle WA December 2017 to Present Responsibilities Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3 Implemented cloud watch for setting alarm for monitoring the Ec2 instances Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Extracted data from the database using SASAccess SAS SQL procedures and create SAS data sets Responsible for Data Backups Restores and Recovery using tapesys software Used python packages cx_oracle pyodbc and MySQL dB for working with Oracle sql server and MySQL DB respectively Code conventions pushed for PEP8 and Pylint compliance Analyzing the data in existing PIP schema Modifying data using SASBASE SAS MACROS Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Worked on migration of Splunk to AWScloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Configured Elastic Load Balancer and Auto scaling to design cost effective fault tolerant and highly available systems Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Placed data into JSON files using Python to test Django websites Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Implemented SOAPRESTful web services in JSON format Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ExpressJS ReactJS and NodeJS and REST based API Wrote python scripts using Boto3 to automatically spin up the instances in AWS EC2 and OPS Works stacks and integrated with Auto scaling to automatically spin up the servers with configured AMIs Developing python programs by using boto3 sdk to implement security by using AWS Cognito service Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Used ReactJS to create Controllers to handle events triggered by clients and send request to server Maintained states in the stores and dispatched the actions using redux Developed Docker images to support Development and Testing Teams and their pipelines and distributed images like Jenkins Selenium JMeter and ElasticSearch Kibana and Logstash ELK and handled the containerized deployment using Kubernetes Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Worked with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used SQL Alchemy as Object Relational Mapper ORM for writing ORM queries 2 Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA Service Oriented Architecture team enforcing best practices for services REST and SOAP Built application interface and web scrapping scripts using OO designing UML modeling and dynamic data structures Implemented discretization and binning data wrangling cleaning transforming merging and reshaping data frames Determined optimal business logic implementations applying best design patterns Increased speed and memory efficiency by implementing code migration to convert python code to CC using Cython Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Programmatically controlled the COMSOL Multiphysics model in the MATLAB graphical user interface to perform case studies and customize plots and data processing Used TKinter to implement GUI for the user to create modify and view reports based on client data Used Python Library Beautiful Soup for web Scrapping Responsible for debugging and troubleshooting the web application Worked on Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer Starbucks Seattle WA October 2014 to September 2017 Responsibilities Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Utilized Python libraries wxPython numPY Pandas Twisted and mat PlotLib Worked with Python libraries requests pythonldap suds pexpect pip subprocess Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Implemented SQL Alchemy which is a python library for complete access over SQL Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface 3 Used Pandas library for statistical Analysis Pandas library was used for flexible reshaping and pivoting of data sets Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn NLTK in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression Used Django configuration to manage URLs and application parameters Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Accessed database objects using Django Database APIs Worked on pythonbased test frameworks and test driven development with automation tools Worked with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for mirco service using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created cloud service using AWS managed Virtual machines and websites using AWSEC2 ELB Autoscaling Lambda Developed installer scripts using Pythonboto3 for various products to be hosted on Application Servers Written Python utilities and scripts to automate tasks in AWS using boto3 and AWS SDK Automated backups using AWS SDK boto3 to transfer data into S3 buckets Writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Designed Automated the process of installation and configuration of secure DataStax Enterprise Cassandra cluster using puppet Configured internode communication between Cassandra nodes and client using SSL encryption Docker container deploying micro services and scaling the deployment using Kubernetes Developed Chat Ops interfaces with slack and Kubernetes on GKE Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for on boarding Application teams to build and deploy there code using Git Hub Jenkins Nexus and Ansible Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used Cloud Trail TESSA Cloud Passage Check Marx Qualys Scan tools for AWS security and scanning Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created monitors alarms and notifications for EC2 hosts using Cloud Watch Performed web testing automation using selenium API 4 Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing Automation Framework that uses Java Selenium Web Driver and Testing Wrote automation test cases and fixing automation script bugs Worked with migration to Amazon web Services AWS Python Developer Twitter San Francisco CA December 2012 to May 2014 Responsibilities Worked on developing Web Services using SOAP WSDL and developing DTDs XSD schemas for XML parsing processing and design Implemented logging mechanism to capture exceptions and errors using Log4j tool Used Tortoise SVN as a versioncontrol client for Subversion Responsible for entire data migration from Sybase ASE server to Oracle Migration of API code written for Sybase to Oracle Debug the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions using Firefox and IE Developer Tool bar for IE Developed web applications in Django Frameworks model view control MVC architecture Creation of REST Webservices for the management of data using Apache CXF Worked on Python to place data into JSON files for testing Django Websites Created scripts for data modeling and data import and export Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Designed and Developed the inputoutput data formats in XSD for the WSDL files and accordingly implementing services using Apache AXIS2 Used NetBeans IDE to develop the application Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Developed Hadoop integrations for data ingestion data mapping and data processing Used XML for dynamic display of options in select box and description on web page Implemented the MVC architecture using Apache Struts Framework Experience in Python open stack APIs Worked with Rational ClearCase to provide sophisticated version control workspace management and parallel development support Build and maintained a Selenium Regression test suite Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Wrote Python code using Ansible Python API to automate cloud deployment process Managed Web applications configuration files users file systems and packages using Ansible Built various graphs using Matplotlib package which helped in taking business decisions Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on automation using the Python scripting language Git on Cygwin32 and XML Worked on monitoring tools like Nagios Zabbix AWS Cloud Watch to health check the various deployed resources and services Involved and played a leading role in database migration projects from Oracle to MongoDB Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Involved in writing application level code to interact with APIs Web Services using JSON and involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Executed asynchronous tasks with help of Celery and RabbitMQ Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate 5 Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Worked on resulting reports of the application and Tableau reports and involved in modifying data using SASBASE SAS MACROS Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PLSQL programs Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors in computer science Delhi Technical University May 2012 Skills Javascript HTML 5 Git CSS MySQL jQuery",
    "unique_id": "69fe163c-e618-4028-8dac-4728db7ac5ff"
}