{
    "clean_data": "Sr JavaJ2EE Developer Sr span lJavaspanJ2EE span lDeveloperspan Sr JavaJ2EE Developer Intermountain Healthcare Edison NJ Over 10 years of industrial experience in web application development objectoriented programming design development using Java and J2EE Technologies Experience in developing applications using Java JSP Servlets JDBC Struts Spring framework Spring JDBC Spring MVC Spring Boot Hibernate Hands on experience in Atlassian tools JIRA Confluence Expertise in clientside design and validations using HTML 45 XHTML Bootstrap Java Script JSP JQuery AJAX Angular JS React JS Experienced in writing Components Pipes and Services to separate concern and handle different situations by using Angular2 and Worked on Angular4 Enhancements Experience of JUNIT and Mackito Understanding of Jasmine and Karma Frameworks Extensive experience in Deploying Application in Web Servers such as Web Logic IBM Web Sphere JBOSS and Apache Tomcat Web Server and used Jenkins Good Experience in using Build tools like Maven Ant and Log4J Good at using IDEs like Eclipse Spring Tools Suite and Visual Studio Code Experience using Postman and SoapUI Worked on design patterns and industry best practices such as MVC Factory and singleton Hands on experience of exposing and consuming web services using SOAP REST JAXRPC JAXWS and also in Apache Camel Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Experience using Node JS for nonblocking design operation for serverside code Angular4 for developing UI components Expertise in Object Oriented and Concurrent programming using JavaJ2EE technologies Strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Expertise in designing POJO classes using Hibernate Annotations using EJBJPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Nexus Jira and SonarQube Working experience of control version SCM tools like GIT SVN CVS and Clear Case Experience in writing SQL PLSQL queries Stored Procedures for accessing and managing databases such as Oracle11g10g9i8i SQL Server MySQL and DB2 and knowledge of NoSQL database like MongoDB Cassandra Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Database authentication and PreAuthentication Strong experience with MongoDB and migrations from SQL relational databases to NoSQL databases like MongoDB and Cassandra Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Experience in AWS EC2 EC2 Container ServicesDocker VPC with Security Groups S3 IAM SNS Lambda Route53 Cloud Formation CloudWatch Services DevOps tools and Microservice architecture Ability to work in tight schedules and efficient in meeting deadlines Good experience in developing applications using Agile Scrum waterfall methodology Very good at Using Version One and JIRA agile project Management Tools Very good at understanding the stories Good at estimating the time Ability to deliver the stories on time Involved in all different phases of SDLC including Strategic Systems Planning Designing Programming Testing Documentation and Presentation to clients and preparing customer specifications as part of software technical requirements and Customer support Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Developer Intermountain Healthcare Salt Lake City UT September 2018 to Present Description Help2 Clinical Desktop CD is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the IHC Clinical Data Repository CDR Users can review as well as update or enter new data through CD Many clinicians use CD daily for accessing patient data which aids in making important clinical decisions CD is mainly composed of a shell or core and various modules running inside of the shell Responsibilities Developed web GUI involving HTML Node JS Java Script under MVC architecture Defined and developed the applications presentation layer using HTML CSS and JQuery Scripting Designed and implemented front end applications using Adobe Dreamweaver Designed and developed the UI using JSP Spring Servlets HTML CSS and JavaScript JQuery Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code Implemented various design patterns like Singleton DAO Factory pattern etc Successfully implemented Auto CompleteSuggest functionality using Ajax JQuery Web Service call and JSON Used Custom Tag libraries for XML parsing and XSL transformations Used Filenet for Content Management and for streamlining Business Processes Involved in the development of web application using Spring MVC architecture Configured Bean properties using setter injection and Implanted JSP for the presentation layer Developed Message based systems using JMS API and Message Driven Beans EJB 30 Configured Hibernate for storing objects in the DB2 database retrieving objects querying objects and persisting relationships between objects Experience with basic WebSphere Administration like JMS Data Source Configurations Listener port configurations JVM Property Configuration Certificates Configuration deploying EARs into various environments through Admin Console Hudson etc Written Web Services JAXWS for external system via SOAPHTTP call Implemented REST Web Services for other applications to communicate Worked on UNIX LINUX to move the project into production environment Implemented logging mechanism using Log4j Framework Used Log4j framework to logtrack application Used Maven automated build scripts to compile and package the application and implemented Log4j Used JUnit for unit testing of the application Rational Clear Case for Version Control Deployed EAR files using the build tools in the Web Logic application server Environment Ajax Jquery FileNet Java 15 JSP Servlets Core Java Spring Swing Hibernate JSF HTML CSS JavaScript NodeJs UNIX Jms Web Services SOAP WAS 61 DB2 XML IBM WebSphere 61 Rational Clear Case Log 4j Jr Java Developer US Bank Portland OR August 2016 to September 2018 Description The application is used to track the assets of a company right from the day of purchase to the day when it is either sold or scrapped The depreciation of an asset for a particular period can be taken in the form of a report All the relational transactions like Invoice Sales Loan Lease Insurance policy issued assets etc are also maintained in this application Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML Jquery and Java script Implemented the modules using ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed value object mainly used to wrap the data and pass across the layers Developed business logic using Stateless session beans for calculating asset depreciation on Straight line and written down value approaches Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Designed database Queries for updating insertion and retrieval of asset information and rates Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries Created java classes to communicate with database using JDBC Accessed stored procedures and functions using JDBC Callable statements Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Environment Java 14 Servlets JSP EJB J2EE 14 STRUTS XML XSLT Java Script Oracle 8i SQL PLSQL Ms Visio Eclipse JDBC Win CVS Windows 2003 Server Sr Java Full Stack Developer Macys Inc San Francisco CA July 2014 to August 2016 Description This application supports all the Macys experiments set up and analytics and deployed in Heroku server Developing a portal where they can access all the Clients and their business using SSO application Integrated with different applications like Billing Book of Business and quote and Ordering ID cards Responsibilities Implemented innovative systems for data collection storage and management of customer orders Designed and developed transactional and analytical data structures Implemented REST based web services for the communication between web applications Following safe agile methodology adopted to fast paced development environment where focusing on frequent deployments to production Working in different environments developed different components services Working on developing Spring Boot Micro services and consuming other Micro services Experience deploying and maintaining multicontainer applications through Docker Implemented RESTful Web Services using Micro Services and JSON Used Angular JS and Node JS to structure JavaScript code in an MVC model ModelViewController Worked on developing Microservices using Spring Boot and Spring Cloud were developed test and documented scalable and highquality business applications according to business requirements Used Spring core annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices Extensively Used Jenkins as Continuous Integration tool to deploy Spring Boot Micro services to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy update the applications Working Knowledge on creating reusable UI components using Angular4 Developed stored procedures and queries to work with millions of records in SQL Server database environment Extensively used PLSQL to write complex queries and stored procedures on customer detail database Built dynamically generated dropdown lists using JavaScript Ajax jQuery and Angular4 Used Pivotal Cloud FoundryPCF for developing RESTful APIs in the spring boot framework Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Used Java 18Lambdas to make anonymous inline function calls and used Streams to work effectively with collection objects array operations and Enhanced concurrency methods Developing single page web application using JavaScript framework Angular Extensively used Atlassian tools like Bit bucket Bamboo Jira and Confluence for CICD Working knowledge on React and Clientside validation Implemented clientside Interface using Node JS and used for creating reusable UI components Used Docker for creating Docker images for launching containers on AWS EC2 Experience working on multiple AWS instances Used Spark Streaming to perform necessary transformations and actions for building the model which gets data from Kafka and persists into Cassandra Designed built and deployed a multitude application utilizing almost all of the AWS stack Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Working with No SQL Database Mongo DB where consolidated data from different sources using HadoopSpark Involved in PROD activities regular intervals Environment Java 8 HTML5 CSS3 java script Bootstrap JQuery Angular4 gulp web pack React JS Jest Micro Services Node JS Spring boot 15x Mongo DB Pivotal Cloud Foundry Eclipse Postman Kafka AWS Docker Visual Studio Atom Sr Java Full Stack Developer Blackhawk Network Pleasanton CA June 2012 to July 2014 Description The SetIt is an Admin tool which is mainly used to install plans for the several clients with the specific work order SetIt integrates several applications internally It feeds multiple applications and uses the data served by few applications It also uses multiple databases SETIT OLTP and OMNI SetIt is a key internal application of the organization It is a web application developed in java that readsstores data on an oracle data base It captures the plan data that is eventually extracted to other plan maintenance applications Responsibilities Implemented the Struts MVC framework JSPServlets for designing and developing the user interface and AJAX is used for asynchronous server calls Developed and enhanced middleware components using Collections Generics Object Serialization and Multithreading Followed agile methodology for the project development Used Java multithreaded API for processing large number of index files Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Implemented the Spring AOP Aspect Oriented Programming for Logging declarative transaction Management creating and applying transaction advices and configuring the joint points Developed SOAP web services using JAXWS Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Autoscaling groups Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Implemented security in SOAP web services using axis Experience with Developing Web API using Node JS and hosted on multiple load balanced API instances Built springbased Java and Scala micro services to support enterprise web application Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Developed microservices with Spring Eureka to retrieve API routes for the entire cluster Developed shell scripts for running the batch programs using cron job Developed PLSQL packages procedures and functions Used Angular JS Node JS and Bootstrap in effective web design Setup the continuous Integration CI process and continuous deployment CD jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Developed web GUI involving HTML Node JS Java Script under MVC architecture Experience in Integration of Amazon Web Services AWS with other applications infrastructure Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Developed EJS access layer and components using JPAHibernate frameworks for object persistence to Derby database for mock domain and in Oracle for real domains Created BSON Data and stored as documents comprising documents data types and conversions in MongoDB Composed and executed Mongo DB scripts to insert and update NoSQL database and reporting Prepared SQLPLSQL scripts and Stored Procedures to implement design get it finetuned from DBAs if needed Designed and implemented Unit Testing using JUNIT Framework Used Rational Clear Case Explorer for creatingmanaging views and delivering the code of Integration stream on daily basis Used IBM Rational Clear Quest to keep track of the defects and activities Responsible for updating the defects status in a daily based QA status meeting Environment J2EE Spring Struts PLSQL Eclipse JMS HTML AJAX JAXWS JavaScript JSP Servlets Node JS JSON MongoDB UNIX SOAP Clear Case AWS Pivotal Cloud Foundry Scala Micro Services Oracle 11g MVC Shell Scripts CSS Window Jr JavaJ2EE Developer New York State Division of Criminal Justice Services Albany NY May 2011 to June 2012 Description The Project describes the Admission Discharge Transfer ADT module of the patients The primary function of the ADT module is to admit the patient in a hospital allocate the appropriate room and define the tariff applicable to the patient It also updates the current room status by interacting with the other modules of his like Billing Maintenance and Wards etc The system captures all demographic details of the patient insurance details basic clinical conditions etc Responsibilities Used agile methodology to develop the application Responsible for maintaining the code quality coding and implementation standards by code reviews Created MVC architecture built on struts framework Provided services to third party clients through Restful architecture Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Integrated log4j for logging the messages at debug and error level Used Web logic workshop Eclipse IDE to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java Oracle SQL Eclipse log4j Maven REST SVN JavaUI Developer BCBS Chicago IL April 2009 to May 2011 Responsibilities Involved in Analysis development testing integration and deployment of the web services Involved in Agile methodology to get updated with team Involved in development of User Interface using HTML5 CSSCSS3 JavaScript jQuery and JSON Used spring framework to implement the MVC design pattern Used hibernate to map the domain elements and Criteria API named query for querying Hibernate has been used as the ORM framework to persist the data and Hibernate xml mapping has been used to map the java objects to Database tables Developed the REST web service using Spring IOC to provide user a way to run the job and generate daily status report on loans Implemented business logic in Middle Tier using pluggable components which were specified in the customized xml documents using Spring framework Developed ORM persistence layer using JPA Hibernate framework Worked on advanced Hibernate associations with multiple levels of Caching lazy loading Extensively involved in developing and consuming Restful webservices using JAXRS Used WebLogic to deploy the changes and to test on local machine Committed the code changes to SVN using Tortoise SVN Environment Java Struts Spring IOC Spring MVC Oracle Hibernate JavaScript jQuery Web Logic SQL HTML CSS XML Agile Restful Web services ANT Junit SQL Developer JMS Eclipse Log4j JNDI SOAP WSDL CVS Log4j JAXB Eclipse Rational Rose JUnit Oracle 10g Education Bachelors Skills database 10 years Eclipse 9 years Java 10 years SQL 9 years testing 9 years Additional Information TECHNICAL SKILLS Programming Languages C C Java 678 HTML JavaScript SQL and PLSQL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking ApplicationWeb Servers OracleBEA WebLogic 8191 IBM WebSphere 51606170 JBoss Tomcat 502860 Frameworks Struts 2x1x Spring 4x3x Hibernate 4x3x JSF 1220 iBatis IDEs Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Web Technologies HTML5 XHTML DHTML CSS3 JavaScript AJAX jQuery NodeJS ReactJS AngularJS ExtJS Bootstrap Servlets JSPs JNDI JMS XML XSLT XSD JSF Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB AXIS Messaging Tools Rabbit MQ Apache Kafka Apache Spark JMS Cloud environments Azure AWS Netflix Eureka Mesos Version Control Tools GIT CVS SVN Rational Clear Case Testing technologiestools Junit Jasmine Karma Selenium Soap UI Database Servers Oracle 10g11g12C SQL server 16 MySQL 57 DB2 111 Build tools ANT Log4j Jenkins 2x Gradle and Drools",
    "entities": [
        "Micro Services",
        "Working Knowledge",
        "PROD",
        "AJAX",
        "GUI",
        "ORM",
        "ADT",
        "UNIX",
        "Responsibilities Implemented the Struts",
        "OMNI SetIt",
        "Albany",
        "Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Expertise",
        "Spring IOC",
        "AMI",
        "Working",
        "Integration of Amazon Web Services AWS",
        "IBM",
        "Used IBM Rational Clear Quest",
        "JMS Data Source Configurations Listener",
        "Heroku",
        "Derby",
        "ExtJS Bootstrap Servlets",
        "Responsibilities Implemented",
        "Admin Console Hudson",
        "GITHUB Jenkins Nexus Jira",
        "XML",
        "SSO",
        "Stateless",
        "WebLogic",
        "JUnit",
        "DevOps",
        "JSP Wrote",
        "Hibernate Annotations Integrated",
        "Billing Book of Business",
        "Apache Spark",
        "WebSphere Administration",
        "JavaJ2EE",
        "Additional Information TECHNICAL SKILLS Programming Languages C C",
        "Spring Boot",
        "Business Processes Involved",
        "SQL Server",
        "React JS Jest Micro Services",
        "Tortoise",
        "Scala micro services",
        "Developed",
        "WebSphere 61 Rational",
        "Jenkins",
        "JVM Property Configuration Certificates Configuration",
        "Strategic Systems Planning Designing Programming Testing Documentation",
        "Spring MVC",
        "San Francisco",
        "SetIt",
        "Restful",
        "the IHC Clinical Data Repository CDR Users",
        "MVC Factory",
        "HTML5",
        "Develop",
        "Straight",
        "Spring Security",
        "Control Tools",
        "JSP",
        "Micro",
        "Sr JavaJ2EE Developer Sr span lJavaspanJ2EE span lDeveloperspan Sr JavaJ2EE Developer Intermountain Healthcare Edison NJ",
        "Admin",
        "Invoice Sales Loan Lease Insurance",
        "JPAHibernate",
        "GIT SVN CVS",
        "Hibernate Annotations",
        "Docker",
        "SOAPHTTP",
        "Oracle Database",
        "MVC",
        "Interface",
        "Agile",
        "EJB",
        "JAXWS Implemented AWS",
        "User Interface",
        "Worked on Angular4 Enhancements",
        "Node JS",
        "HTML CSS",
        "Collections Generics Object Serialization",
        "API",
        "US",
        "MVC Spring Boot Hibernate Hands",
        "QA",
        "POJO",
        "Types",
        "Scala Micro Services",
        "Drools",
        "Created",
        "AWS",
        "Oracle",
        "JAXWS JAXRPC JAXRS JAXP JAXB AXIS Messaging Tools Rabbit",
        "Lake City",
        "Singleton",
        "PreAuthentication Strong",
        "Created BSON Data",
        "Integration CI",
        "Apache",
        "Mesos Version",
        "Description",
        "java",
        "MVC Framework IOC Inversion",
        "SQL",
        "J2EE Technologies Experience",
        "GitHub",
        "OLTP",
        "Portland",
        "Bootstrap",
        "Spring Security Implemented",
        "Created MVC",
        "Java Developer US Bank",
        "JUNIT",
        "Spring Eureka",
        "JSP Spring Servlets HTML CSS",
        "Committed",
        "Visual Studio",
        "Developed SOAP",
        "Billing Maintenance and Wards",
        "SCM",
        "HadoopSpark Involved",
        "Servlet",
        "Build",
        "Maven",
        "EJBJPA API Experience",
        "Ajax JQuery Web Service",
        "JavaScript",
        "Developed Dispatch Action",
        "UI",
        "Deploying Application",
        "Continuous Integration",
        "SVN",
        "Pivotal Cloud Foundry PCF",
        "SonarQube Working",
        "REST",
        "NetBeans",
        "Oracle Hibernate",
        "NoSQL",
        "No SQL Database Mongo DB",
        "Microservice",
        "Work Experience Sr JavaJ2EE Developer Intermountain Healthcare",
        "Spring Boot Micro",
        "New York State Division of Criminal Justice Services"
    ],
    "experience": "Experience in developing applications using Java JSP Servlets JDBC Struts Spring framework Spring JDBC Spring MVC Spring Boot Hibernate Hands on experience in Atlassian tools JIRA Confluence Expertise in clientside design and validations using HTML 45 XHTML Bootstrap Java Script JSP JQuery AJAX Angular JS React JS Experienced in writing Components Pipes and Services to separate concern and handle different situations by using Angular2 and Worked on Angular4 Enhancements Experience of JUNIT and Mackito Understanding of Jasmine and Karma Frameworks Extensive experience in Deploying Application in Web Servers such as Web Logic IBM Web Sphere JBOSS and Apache Tomcat Web Server and used Jenkins Good Experience in using Build tools like Maven Ant and Log4J Good at using IDEs like Eclipse Spring Tools Suite and Visual Studio Code Experience using Postman and SoapUI Worked on design patterns and industry best practices such as MVC Factory and singleton Hands on experience of exposing and consuming web services using SOAP REST JAXRPC JAXWS and also in Apache Camel Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Experience using Node JS for nonblocking design operation for serverside code Angular4 for developing UI components Expertise in Object Oriented and Concurrent programming using JavaJ2EE technologies Strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Expertise in designing POJO classes using Hibernate Annotations using EJBJPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Nexus Jira and SonarQube Working experience of control version SCM tools like GIT SVN CVS and Clear Case Experience in writing SQL PLSQL queries Stored Procedures for accessing and managing databases such as Oracle11g10g9i8i SQL Server MySQL and DB2 and knowledge of NoSQL database like MongoDB Cassandra Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Database authentication and PreAuthentication Strong experience with MongoDB and migrations from SQL relational databases to NoSQL databases like MongoDB and Cassandra Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Experience in AWS EC2 EC2 Container ServicesDocker VPC with Security Groups S3 IAM SNS Lambda Route53 Cloud Formation CloudWatch Services DevOps tools and Microservice architecture Ability to work in tight schedules and efficient in meeting deadlines Good experience in developing applications using Agile Scrum waterfall methodology Very good at Using Version One and JIRA agile project Management Tools Very good at understanding the stories Good at estimating the time Ability to deliver the stories on time Involved in all different phases of SDLC including Strategic Systems Planning Designing Programming Testing Documentation and Presentation to clients and preparing customer specifications as part of software technical requirements and Customer support Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Developer Intermountain Healthcare Salt Lake City UT September 2018 to Present Description Help2 Clinical Desktop CD is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the IHC Clinical Data Repository CDR Users can review as well as update or enter new data through CD Many clinicians use CD daily for accessing patient data which aids in making important clinical decisions CD is mainly composed of a shell or core and various modules running inside of the shell Responsibilities Developed web GUI involving HTML Node JS Java Script under MVC architecture Defined and developed the applications presentation layer using HTML CSS and JQuery Scripting Designed and implemented front end applications using Adobe Dreamweaver Designed and developed the UI using JSP Spring Servlets HTML CSS and JavaScript JQuery Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code Implemented various design patterns like Singleton DAO Factory pattern etc Successfully implemented Auto CompleteSuggest functionality using Ajax JQuery Web Service call and JSON Used Custom Tag libraries for XML parsing and XSL transformations Used Filenet for Content Management and for streamlining Business Processes Involved in the development of web application using Spring MVC architecture Configured Bean properties using setter injection and Implanted JSP for the presentation layer Developed Message based systems using JMS API and Message Driven Beans EJB 30 Configured Hibernate for storing objects in the DB2 database retrieving objects querying objects and persisting relationships between objects Experience with basic WebSphere Administration like JMS Data Source Configurations Listener port configurations JVM Property Configuration Certificates Configuration deploying EARs into various environments through Admin Console Hudson etc Written Web Services JAXWS for external system via SOAPHTTP call Implemented REST Web Services for other applications to communicate Worked on UNIX LINUX to move the project into production environment Implemented logging mechanism using Log4j Framework Used Log4j framework to logtrack application Used Maven automated build scripts to compile and package the application and implemented Log4j Used JUnit for unit testing of the application Rational Clear Case for Version Control Deployed EAR files using the build tools in the Web Logic application server Environment Ajax Jquery FileNet Java 15 JSP Servlets Core Java Spring Swing Hibernate JSF HTML CSS JavaScript NodeJs UNIX Jms Web Services SOAP WAS 61 DB2 XML IBM WebSphere 61 Rational Clear Case Log 4j Jr Java Developer US Bank Portland OR August 2016 to September 2018 Description The application is used to track the assets of a company right from the day of purchase to the day when it is either sold or scrapped The depreciation of an asset for a particular period can be taken in the form of a report All the relational transactions like Invoice Sales Loan Lease Insurance policy issued assets etc are also maintained in this application Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML Jquery and Java script Implemented the modules using ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed value object mainly used to wrap the data and pass across the layers Developed business logic using Stateless session beans for calculating asset depreciation on Straight line and written down value approaches Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Designed database Queries for updating insertion and retrieval of asset information and rates Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries Created java classes to communicate with database using JDBC Accessed stored procedures and functions using JDBC Callable statements Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Environment Java 14 Servlets JSP EJB J2EE 14 STRUTS XML XSLT Java Script Oracle 8i SQL PLSQL Ms Visio Eclipse JDBC Win CVS Windows 2003 Server Sr Java Full Stack Developer Macys Inc San Francisco CA July 2014 to August 2016 Description This application supports all the Macys experiments set up and analytics and deployed in Heroku server Developing a portal where they can access all the Clients and their business using SSO application Integrated with different applications like Billing Book of Business and quote and Ordering ID cards Responsibilities Implemented innovative systems for data collection storage and management of customer orders Designed and developed transactional and analytical data structures Implemented REST based web services for the communication between web applications Following safe agile methodology adopted to fast paced development environment where focusing on frequent deployments to production Working in different environments developed different components services Working on developing Spring Boot Micro services and consuming other Micro services Experience deploying and maintaining multicontainer applications through Docker Implemented RESTful Web Services using Micro Services and JSON Used Angular JS and Node JS to structure JavaScript code in an MVC model ModelViewController Worked on developing Microservices using Spring Boot and Spring Cloud were developed test and documented scalable and highquality business applications according to business requirements Used Spring core annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices Extensively Used Jenkins as Continuous Integration tool to deploy Spring Boot Micro services to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy update the applications Working Knowledge on creating reusable UI components using Angular4 Developed stored procedures and queries to work with millions of records in SQL Server database environment Extensively used PLSQL to write complex queries and stored procedures on customer detail database Built dynamically generated dropdown lists using JavaScript Ajax jQuery and Angular4 Used Pivotal Cloud FoundryPCF for developing RESTful APIs in the spring boot framework Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Used Java 18Lambdas to make anonymous inline function calls and used Streams to work effectively with collection objects array operations and Enhanced concurrency methods Developing single page web application using JavaScript framework Angular Extensively used Atlassian tools like Bit bucket Bamboo Jira and Confluence for CICD Working knowledge on React and Clientside validation Implemented clientside Interface using Node JS and used for creating reusable UI components Used Docker for creating Docker images for launching containers on AWS EC2 Experience working on multiple AWS instances Used Spark Streaming to perform necessary transformations and actions for building the model which gets data from Kafka and persists into Cassandra Designed built and deployed a multitude application utilizing almost all of the AWS stack Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Working with No SQL Database Mongo DB where consolidated data from different sources using HadoopSpark Involved in PROD activities regular intervals Environment Java 8 HTML5 CSS3 java script Bootstrap JQuery Angular4 gulp web pack React JS Jest Micro Services Node JS Spring boot 15x Mongo DB Pivotal Cloud Foundry Eclipse Postman Kafka AWS Docker Visual Studio Atom Sr Java Full Stack Developer Blackhawk Network Pleasanton CA June 2012 to July 2014 Description The SetIt is an Admin tool which is mainly used to install plans for the several clients with the specific work order SetIt integrates several applications internally It feeds multiple applications and uses the data served by few applications It also uses multiple databases SETIT OLTP and OMNI SetIt is a key internal application of the organization It is a web application developed in java that readsstores data on an oracle data base It captures the plan data that is eventually extracted to other plan maintenance applications Responsibilities Implemented the Struts MVC framework JSPServlets for designing and developing the user interface and AJAX is used for asynchronous server calls Developed and enhanced middleware components using Collections Generics Object Serialization and Multithreading Followed agile methodology for the project development Used Java multithreaded API for processing large number of index files Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Implemented the Spring AOP Aspect Oriented Programming for Logging declarative transaction Management creating and applying transaction advices and configuring the joint points Developed SOAP web services using JAXWS Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Autoscaling groups Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Implemented security in SOAP web services using axis Experience with Developing Web API using Node JS and hosted on multiple load balanced API instances Built springbased Java and Scala micro services to support enterprise web application Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Developed microservices with Spring Eureka to retrieve API routes for the entire cluster Developed shell scripts for running the batch programs using cron job Developed PLSQL packages procedures and functions Used Angular JS Node JS and Bootstrap in effective web design Setup the continuous Integration CI process and continuous deployment CD jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Developed web GUI involving HTML Node JS Java Script under MVC architecture Experience in Integration of Amazon Web Services AWS with other applications infrastructure Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Developed EJS access layer and components using JPAHibernate frameworks for object persistence to Derby database for mock domain and in Oracle for real domains Created BSON Data and stored as documents comprising documents data types and conversions in MongoDB Composed and executed Mongo DB scripts to insert and update NoSQL database and reporting Prepared SQLPLSQL scripts and Stored Procedures to implement design get it finetuned from DBAs if needed Designed and implemented Unit Testing using JUNIT Framework Used Rational Clear Case Explorer for creatingmanaging views and delivering the code of Integration stream on daily basis Used IBM Rational Clear Quest to keep track of the defects and activities Responsible for updating the defects status in a daily based QA status meeting Environment J2EE Spring Struts PLSQL Eclipse JMS HTML AJAX JAXWS JavaScript JSP Servlets Node JS JSON MongoDB UNIX SOAP Clear Case AWS Pivotal Cloud Foundry Scala Micro Services Oracle 11 g MVC Shell Scripts CSS Window Jr JavaJ2EE Developer New York State Division of Criminal Justice Services Albany NY May 2011 to June 2012 Description The Project describes the Admission Discharge Transfer ADT module of the patients The primary function of the ADT module is to admit the patient in a hospital allocate the appropriate room and define the tariff applicable to the patient It also updates the current room status by interacting with the other modules of his like Billing Maintenance and Wards etc The system captures all demographic details of the patient insurance details basic clinical conditions etc Responsibilities Used agile methodology to develop the application Responsible for maintaining the code quality coding and implementation standards by code reviews Created MVC architecture built on struts framework Provided services to third party clients through Restful architecture Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Integrated log4j for logging the messages at debug and error level Used Web logic workshop Eclipse IDE to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java Oracle SQL Eclipse log4j Maven REST SVN JavaUI Developer BCBS Chicago IL April 2009 to May 2011 Responsibilities Involved in Analysis development testing integration and deployment of the web services Involved in Agile methodology to get updated with team Involved in development of User Interface using HTML5 CSSCSS3 JavaScript jQuery and JSON Used spring framework to implement the MVC design pattern Used hibernate to map the domain elements and Criteria API named query for querying Hibernate has been used as the ORM framework to persist the data and Hibernate xml mapping has been used to map the java objects to Database tables Developed the REST web service using Spring IOC to provide user a way to run the job and generate daily status report on loans Implemented business logic in Middle Tier using pluggable components which were specified in the customized xml documents using Spring framework Developed ORM persistence layer using JPA Hibernate framework Worked on advanced Hibernate associations with multiple levels of Caching lazy loading Extensively involved in developing and consuming Restful webservices using JAXRS Used WebLogic to deploy the changes and to test on local machine Committed the code changes to SVN using Tortoise SVN Environment Java Struts Spring IOC Spring MVC Oracle Hibernate JavaScript jQuery Web Logic SQL HTML CSS XML Agile Restful Web services ANT Junit SQL Developer JMS Eclipse Log4j JNDI SOAP WSDL CVS Log4j JAXB Eclipse Rational Rose JUnit Oracle 10 g Education Bachelors Skills database 10 years Eclipse 9 years Java 10 years SQL 9 years testing 9 years Additional Information TECHNICAL SKILLS Programming Languages C C Java 678 HTML JavaScript SQL and PLSQL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking ApplicationWeb Servers OracleBEA WebLogic 8191 IBM WebSphere 51606170 JBoss Tomcat 502860 Frameworks Struts 2x1x Spring 4x3x Hibernate 4x3x JSF 1220 iBatis IDEs Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Web Technologies HTML5 XHTML DHTML CSS3 JavaScript AJAX jQuery NodeJS ReactJS AngularJS ExtJS Bootstrap Servlets JSPs JNDI JMS XML XSLT XSD JSF Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB AXIS Messaging Tools Rabbit MQ Apache Kafka Apache Spark JMS Cloud environments Azure AWS Netflix Eureka Mesos Version Control Tools GIT CVS SVN Rational Clear Case Testing technologiestools Junit Jasmine Karma Selenium Soap UI Database Servers Oracle 10g11g12C SQL server 16 MySQL 57 DB2 111 Build tools ANT Log4j Jenkins 2x Gradle and Drools",
    "extracted_keywords": [
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Sr",
        "span",
        "lJavaspanJ2EE",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Intermountain",
        "Healthcare",
        "Edison",
        "NJ",
        "years",
        "experience",
        "web",
        "application",
        "development",
        "programming",
        "design",
        "development",
        "Java",
        "J2EE",
        "Technologies",
        "Experience",
        "applications",
        "Java",
        "JSP",
        "Servlets",
        "JDBC",
        "Struts",
        "Spring",
        "framework",
        "Spring",
        "JDBC",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Hibernate",
        "Hands",
        "experience",
        "tools",
        "JIRA",
        "Confluence",
        "Expertise",
        "design",
        "validations",
        "HTML",
        "XHTML",
        "Bootstrap",
        "Java",
        "Script",
        "JSP",
        "JQuery",
        "AJAX",
        "JS",
        "React",
        "JS",
        "Components",
        "Pipes",
        "Services",
        "concern",
        "situations",
        "Angular2",
        "Angular4",
        "Enhancements",
        "Experience",
        "JUNIT",
        "Mackito",
        "Understanding",
        "Jasmine",
        "Karma",
        "Frameworks",
        "experience",
        "Deploying",
        "Application",
        "Web",
        "Servers",
        "Web",
        "Logic",
        "IBM",
        "Web",
        "Sphere",
        "JBOSS",
        "Apache",
        "Tomcat",
        "Web",
        "Server",
        "Jenkins",
        "Good",
        "Experience",
        "Build",
        "tools",
        "Maven",
        "Ant",
        "IDEs",
        "Eclipse",
        "Spring",
        "Tools",
        "Suite",
        "Visual",
        "Studio",
        "Code",
        "Experience",
        "Postman",
        "SoapUI",
        "design",
        "patterns",
        "industry",
        "practices",
        "MVC",
        "Factory",
        "singleton",
        "Hands",
        "experience",
        "web",
        "services",
        "SOAP",
        "REST",
        "JAXRPC",
        "JAXWS",
        "Apache",
        "Camel",
        "Understanding",
        "data",
        "technologies",
        "Apache",
        "Hive",
        "Kafka",
        "Hadoop",
        "Apache",
        "Spark",
        "Experience",
        "Node",
        "JS",
        "design",
        "operation",
        "serverside",
        "code",
        "Angular4",
        "UI",
        "components",
        "Expertise",
        "Object",
        "Oriented",
        "programming",
        "JavaJ2EE",
        "technologies",
        "understanding",
        "Garbage",
        "Collector",
        "Collections",
        "Multithreading",
        "Event",
        "Handling",
        "Exception",
        "Handling",
        "Generics",
        "Expertise",
        "POJO",
        "classes",
        "Hibernate",
        "Annotations",
        "EJBJPA",
        "API",
        "Experience",
        "integration",
        "tools",
        "GITHUB",
        "Jenkins",
        "Nexus",
        "Jira",
        "SonarQube",
        "Working",
        "experience",
        "control",
        "version",
        "SCM",
        "tools",
        "GIT",
        "SVN",
        "CVS",
        "Clear",
        "Case",
        "Experience",
        "SQL",
        "PLSQL",
        "Procedures",
        "databases",
        "SQL",
        "Server",
        "MySQL",
        "DB2",
        "knowledge",
        "NoSQL",
        "database",
        "MongoDB",
        "Cassandra",
        "phases",
        "security",
        "implementation",
        "Spring",
        "Security",
        "system",
        "types",
        "authentications",
        "LDAP",
        "authentication",
        "Database",
        "authentication",
        "PreAuthentication",
        "Strong",
        "experience",
        "MongoDB",
        "migrations",
        "SQL",
        "databases",
        "databases",
        "MongoDB",
        "Cassandra",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "war",
        "AMI",
        "jobs",
        "Jenkins",
        "master",
        "instance",
        "time",
        "deployment",
        "micro",
        "services",
        "Experience",
        "AWS",
        "EC2",
        "EC2",
        "Container",
        "ServicesDocker",
        "VPC",
        "Security",
        "Groups",
        "S3",
        "IAM",
        "SNS",
        "Lambda",
        "Route53",
        "Cloud",
        "Formation",
        "CloudWatch",
        "Services",
        "DevOps",
        "tools",
        "Microservice",
        "architecture",
        "Ability",
        "schedules",
        "meeting",
        "deadlines",
        "experience",
        "applications",
        "Agile",
        "Scrum",
        "waterfall",
        "methodology",
        "Version",
        "JIRA",
        "project",
        "Management",
        "Tools",
        "stories",
        "time",
        "Ability",
        "stories",
        "time",
        "phases",
        "SDLC",
        "Strategic",
        "Systems",
        "Planning",
        "Designing",
        "Programming",
        "Testing",
        "Documentation",
        "Presentation",
        "clients",
        "customer",
        "specifications",
        "part",
        "software",
        "requirements",
        "Customer",
        "support",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Intermountain",
        "Healthcare",
        "Salt",
        "Lake",
        "City",
        "UT",
        "September",
        "Present",
        "Description",
        "Help2",
        "Clinical",
        "Desktop",
        "CD",
        "web",
        "application",
        "J2EE",
        "architecture",
        "access",
        "outpatient",
        "data",
        "IHC",
        "Clinical",
        "Data",
        "Repository",
        "CDR",
        "Users",
        "update",
        "data",
        "CD",
        "clinicians",
        "CD",
        "data",
        "decisions",
        "CD",
        "shell",
        "core",
        "modules",
        "shell",
        "Responsibilities",
        "web",
        "GUI",
        "HTML",
        "Node",
        "JS",
        "Java",
        "Script",
        "MVC",
        "architecture",
        "applications",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JQuery",
        "Scripting",
        "end",
        "applications",
        "Adobe",
        "Dreamweaver",
        "UI",
        "JSP",
        "Spring",
        "Servlets",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Spring",
        "MVC",
        "Framework",
        "IOC",
        "Inversion",
        "Control",
        "design",
        "pattern",
        "relationships",
        "application",
        "components",
        "application",
        "configuration",
        "dependency",
        "specification",
        "application",
        "code",
        "design",
        "patterns",
        "Singleton",
        "DAO",
        "Factory",
        "pattern",
        "Auto",
        "CompleteSuggest",
        "functionality",
        "Ajax",
        "JQuery",
        "Web",
        "Service",
        "call",
        "JSON",
        "Custom",
        "Tag",
        "XML",
        "XSL",
        "transformations",
        "Filenet",
        "Content",
        "Management",
        "Business",
        "Processes",
        "development",
        "web",
        "application",
        "Spring",
        "MVC",
        "architecture",
        "Configured",
        "Bean",
        "properties",
        "setter",
        "injection",
        "JSP",
        "presentation",
        "layer",
        "Developed",
        "Message",
        "systems",
        "JMS",
        "API",
        "Message",
        "Driven",
        "Beans",
        "EJB",
        "Configured",
        "Hibernate",
        "objects",
        "DB2",
        "database",
        "objects",
        "objects",
        "relationships",
        "Experience",
        "WebSphere",
        "Administration",
        "JMS",
        "Data",
        "Source",
        "Configurations",
        "Listener",
        "port",
        "JVM",
        "Property",
        "Configuration",
        "Certificates",
        "Configuration",
        "EARs",
        "environments",
        "Admin",
        "Console",
        "Hudson",
        "Written",
        "Web",
        "Services",
        "JAXWS",
        "system",
        "SOAPHTTP",
        "REST",
        "Web",
        "Services",
        "applications",
        "Worked",
        "UNIX",
        "LINUX",
        "project",
        "production",
        "environment",
        "mechanism",
        "Log4j",
        "Framework",
        "Log4j",
        "framework",
        "application",
        "Maven",
        "build",
        "scripts",
        "compile",
        "application",
        "Log4j",
        "JUnit",
        "unit",
        "testing",
        "application",
        "Rational",
        "Clear",
        "Case",
        "Version",
        "Control",
        "Deployed",
        "EAR",
        "files",
        "build",
        "tools",
        "Web",
        "Logic",
        "application",
        "server",
        "Environment",
        "Ajax",
        "Jquery",
        "FileNet",
        "Java",
        "JSP",
        "Servlets",
        "Core",
        "Java",
        "Spring",
        "Swing",
        "Hibernate",
        "JSF",
        "HTML",
        "CSS",
        "JavaScript",
        "UNIX",
        "Jms",
        "Web",
        "Services",
        "SOAP",
        "DB2",
        "XML",
        "IBM",
        "WebSphere",
        "Rational",
        "Clear",
        "Case",
        "Log",
        "4j",
        "Jr",
        "Java",
        "Developer",
        "US",
        "Bank",
        "Portland",
        "OR",
        "August",
        "September",
        "Description",
        "application",
        "assets",
        "company",
        "day",
        "purchase",
        "day",
        "depreciation",
        "asset",
        "period",
        "form",
        "report",
        "transactions",
        "Invoice",
        "Sales",
        "Loan",
        "Lease",
        "Insurance",
        "policy",
        "assets",
        "application",
        "Responsibilities",
        "requirements",
        "business",
        "data",
        "user",
        "requirements",
        "GUI",
        "interface",
        "Web",
        "pages",
        "HTML",
        "Jquery",
        "Java",
        "script",
        "modules",
        "ModelViewController",
        "MVC",
        "design",
        "pattern",
        "Develop",
        "GUI",
        "changes",
        "JSP",
        "HTML",
        "client",
        "validations",
        "Java",
        "script",
        "Java",
        "beans",
        "helper",
        "classes",
        "Servlets",
        "UI",
        "JSP",
        "controller",
        "Servlet",
        "requests",
        "classes",
        "Dispatch",
        "Action",
        "classes",
        "business",
        "methods",
        "value",
        "object",
        "data",
        "layers",
        "business",
        "logic",
        "Stateless",
        "session",
        "beans",
        "asset",
        "depreciation",
        "line",
        "value",
        "approaches",
        "tables",
        "views",
        "Types",
        "join",
        "queries",
        "procedures",
        "functions",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "database",
        "insertion",
        "retrieval",
        "asset",
        "information",
        "rates",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Designing",
        "Database",
        "Schema",
        "SQL",
        "queries",
        "classes",
        "database",
        "JDBC",
        "procedures",
        "functions",
        "JDBC",
        "statements",
        "unit",
        "testing",
        "troubleshooting",
        "Modifying",
        "programs",
        "enhancements",
        "bugs",
        "bugs",
        "defects",
        "application",
        "Environment",
        "Java",
        "Servlets",
        "JSP",
        "EJB",
        "J2EE",
        "STRUTS",
        "XML",
        "XSLT",
        "Java",
        "Script",
        "Oracle",
        "SQL",
        "PLSQL",
        "Ms",
        "Visio",
        "Eclipse",
        "JDBC",
        "Win",
        "CVS",
        "Windows",
        "Server",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Macys",
        "Inc",
        "San",
        "Francisco",
        "CA",
        "July",
        "August",
        "Description",
        "application",
        "Macys",
        "experiments",
        "analytics",
        "Heroku",
        "server",
        "portal",
        "Clients",
        "business",
        "SSO",
        "application",
        "applications",
        "Billing",
        "Book",
        "Business",
        "quote",
        "ID",
        "cards",
        "Responsibilities",
        "systems",
        "data",
        "collection",
        "storage",
        "management",
        "customer",
        "orders",
        "data",
        "structures",
        "REST",
        "web",
        "services",
        "communication",
        "web",
        "applications",
        "methodology",
        "development",
        "environment",
        "deployments",
        "production",
        "Working",
        "environments",
        "components",
        "services",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "Micro",
        "services",
        "Experience",
        "multicontainer",
        "applications",
        "Docker",
        "RESTful",
        "Web",
        "Services",
        "Micro",
        "Services",
        "JSON",
        "Angular",
        "JS",
        "Node",
        "JS",
        "JavaScript",
        "code",
        "MVC",
        "model",
        "ModelViewController",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "test",
        "highquality",
        "business",
        "applications",
        "business",
        "requirements",
        "Spring",
        "core",
        "annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "microservices",
        "Jenkins",
        "Continuous",
        "Integration",
        "tool",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "Cloud",
        "Foundry",
        "PCF",
        "build",
        "pack",
        "Cloud",
        "Foundry",
        "deploy",
        "update",
        "applications",
        "Working",
        "Knowledge",
        "UI",
        "components",
        "Angular4",
        "Developed",
        "procedures",
        "queries",
        "millions",
        "records",
        "SQL",
        "Server",
        "database",
        "environment",
        "PLSQL",
        "queries",
        "procedures",
        "customer",
        "detail",
        "database",
        "lists",
        "JavaScript",
        "Ajax",
        "jQuery",
        "Angular4",
        "Cloud",
        "FoundryPCF",
        "APIs",
        "spring",
        "boot",
        "framework",
        "unit",
        "testing",
        "troubleshooting",
        "Modifying",
        "programs",
        "enhancements",
        "Java",
        "18Lambdas",
        "inline",
        "function",
        "calls",
        "Streams",
        "collection",
        "objects",
        "array",
        "operations",
        "concurrency",
        "methods",
        "page",
        "web",
        "application",
        "JavaScript",
        "framework",
        "Angular",
        "Extensively",
        "tools",
        "Bit",
        "bucket",
        "Bamboo",
        "Jira",
        "Confluence",
        "CICD",
        "Working",
        "knowledge",
        "React",
        "validation",
        "clientside",
        "Interface",
        "Node",
        "JS",
        "UI",
        "components",
        "Docker",
        "Docker",
        "images",
        "containers",
        "AWS",
        "EC2",
        "Experience",
        "AWS",
        "instances",
        "Spark",
        "Streaming",
        "transformations",
        "actions",
        "model",
        "data",
        "Kafka",
        "Cassandra",
        "multitude",
        "application",
        "AWS",
        "stack",
        "EC2",
        "MongoDB",
        "highavailability",
        "fault",
        "tolerance",
        "Working",
        "SQL",
        "Database",
        "Mongo",
        "DB",
        "data",
        "sources",
        "HadoopSpark",
        "activities",
        "intervals",
        "Environment",
        "Java",
        "HTML5",
        "CSS3",
        "java",
        "script",
        "Bootstrap",
        "JQuery",
        "Angular4",
        "gulp",
        "web",
        "pack",
        "React",
        "JS",
        "Jest",
        "Micro",
        "Services",
        "Node",
        "JS",
        "Spring",
        "boot",
        "15x",
        "Mongo",
        "DB",
        "Cloud",
        "Foundry",
        "Eclipse",
        "Postman",
        "Kafka",
        "AWS",
        "Docker",
        "Visual",
        "Studio",
        "Atom",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Blackhawk",
        "Network",
        "Pleasanton",
        "CA",
        "June",
        "July",
        "Description",
        "SetIt",
        "Admin",
        "tool",
        "plans",
        "clients",
        "work",
        "order",
        "SetIt",
        "applications",
        "applications",
        "data",
        "applications",
        "databases",
        "SETIT",
        "OLTP",
        "OMNI",
        "SetIt",
        "application",
        "organization",
        "web",
        "application",
        "data",
        "oracle",
        "data",
        "base",
        "plan",
        "data",
        "plan",
        "maintenance",
        "applications",
        "Responsibilities",
        "Struts",
        "MVC",
        "framework",
        "JSPServlets",
        "user",
        "interface",
        "AJAX",
        "server",
        "calls",
        "middleware",
        "components",
        "Collections",
        "Generics",
        "Object",
        "Serialization",
        "Multithreading",
        "methodology",
        "project",
        "development",
        "Java",
        "API",
        "number",
        "index",
        "files",
        "Spring",
        "framework",
        "Spring",
        "coreIoC",
        "Spring",
        "AOP",
        "Spring",
        "ORM",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "features",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "Aspect",
        "Programming",
        "transaction",
        "Management",
        "transaction",
        "advices",
        "points",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "groups",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Docker",
        "container",
        "AmazonEC2",
        "container",
        "AWS",
        "admin",
        "console",
        "security",
        "SOAP",
        "web",
        "services",
        "Experience",
        "Web",
        "API",
        "Node",
        "JS",
        "load",
        "API",
        "instances",
        "Java",
        "Scala",
        "micro",
        "services",
        "enterprise",
        "web",
        "application",
        "Deployed",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Docker",
        "container",
        "AmazonEC2",
        "container",
        "AWS",
        "admin",
        "console",
        "microservices",
        "Spring",
        "Eureka",
        "API",
        "routes",
        "cluster",
        "shell",
        "scripts",
        "batch",
        "programs",
        "cron",
        "job",
        "PLSQL",
        "procedures",
        "functions",
        "JS",
        "Node",
        "JS",
        "Bootstrap",
        "web",
        "design",
        "Setup",
        "Integration",
        "CI",
        "process",
        "CD",
        "jobs",
        "Jenkins",
        "master",
        "instance",
        "time",
        "deployment",
        "micro",
        "services",
        "web",
        "GUI",
        "HTML",
        "Node",
        "JS",
        "Java",
        "Script",
        "MVC",
        "architecture",
        "Experience",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "infrastructure",
        "Cloud",
        "Foundry",
        "access",
        "controls",
        "roles",
        "permissions",
        "users",
        "spaces",
        "access",
        "Developed",
        "EJS",
        "access",
        "layer",
        "components",
        "JPAHibernate",
        "frameworks",
        "persistence",
        "Derby",
        "database",
        "domain",
        "Oracle",
        "domains",
        "BSON",
        "Data",
        "documents",
        "documents",
        "data",
        "types",
        "conversions",
        "MongoDB",
        "Mongo",
        "DB",
        "scripts",
        "NoSQL",
        "database",
        "SQLPLSQL",
        "scripts",
        "Stored",
        "Procedures",
        "design",
        "DBAs",
        "Unit",
        "Testing",
        "JUNIT",
        "Framework",
        "Rational",
        "Clear",
        "Case",
        "Explorer",
        "views",
        "code",
        "Integration",
        "stream",
        "basis",
        "IBM",
        "Rational",
        "Clear",
        "Quest",
        "track",
        "defects",
        "activities",
        "defects",
        "status",
        "QA",
        "status",
        "meeting",
        "Environment",
        "J2EE",
        "Spring",
        "Struts",
        "PLSQL",
        "Eclipse",
        "JMS",
        "HTML",
        "AJAX",
        "JAXWS",
        "JavaScript",
        "JSP",
        "Servlets",
        "Node",
        "JS",
        "JSON",
        "UNIX",
        "Clear",
        "Case",
        "AWS",
        "Cloud",
        "Foundry",
        "Scala",
        "Micro",
        "Services",
        "Oracle",
        "g",
        "MVC",
        "Shell",
        "Scripts",
        "CSS",
        "Window",
        "Jr",
        "JavaJ2EE",
        "Developer",
        "New",
        "York",
        "State",
        "Division",
        "Criminal",
        "Justice",
        "Services",
        "Albany",
        "NY",
        "May",
        "June",
        "Description",
        "Project",
        "Admission",
        "Discharge",
        "Transfer",
        "ADT",
        "module",
        "patients",
        "function",
        "ADT",
        "module",
        "patient",
        "hospital",
        "room",
        "tariff",
        "patient",
        "room",
        "status",
        "modules",
        "Billing",
        "Maintenance",
        "Wards",
        "system",
        "details",
        "insurance",
        "details",
        "conditions",
        "Responsibilities",
        "methodology",
        "application",
        "code",
        "quality",
        "coding",
        "implementation",
        "standards",
        "code",
        "reviews",
        "Created",
        "MVC",
        "architecture",
        "struts",
        "framework",
        "services",
        "party",
        "clients",
        "architecture",
        "Oracle",
        "Database",
        "data",
        "persistence",
        "mechanism",
        "Hibernate",
        "ORM",
        "Mapping",
        "database",
        "model",
        "persistence",
        "objects",
        "Hibernate",
        "Annotations",
        "Integrated",
        "log4j",
        "messages",
        "debug",
        "error",
        "level",
        "Web",
        "logic",
        "workshop",
        "Eclipse",
        "IDE",
        "application",
        "SVN",
        "version",
        "controller",
        "code",
        "versions",
        "Maven",
        "tool",
        "application",
        "Environment",
        "Java",
        "Oracle",
        "SQL",
        "Eclipse",
        "log4j",
        "Maven",
        "REST",
        "SVN",
        "JavaUI",
        "Developer",
        "BCBS",
        "Chicago",
        "IL",
        "April",
        "May",
        "Responsibilities",
        "Analysis",
        "development",
        "testing",
        "integration",
        "deployment",
        "web",
        "services",
        "methodology",
        "team",
        "development",
        "User",
        "Interface",
        "HTML5",
        "CSSCSS3",
        "JavaScript",
        "jQuery",
        "JSON",
        "spring",
        "framework",
        "MVC",
        "design",
        "pattern",
        "hibernate",
        "domain",
        "elements",
        "Criteria",
        "API",
        "query",
        "Hibernate",
        "ORM",
        "framework",
        "data",
        "Hibernate",
        "xml",
        "mapping",
        "objects",
        "Database",
        "tables",
        "REST",
        "web",
        "service",
        "Spring",
        "IOC",
        "user",
        "way",
        "job",
        "status",
        "report",
        "loans",
        "business",
        "logic",
        "Middle",
        "Tier",
        "components",
        "xml",
        "documents",
        "Spring",
        "framework",
        "ORM",
        "persistence",
        "layer",
        "JPA",
        "Hibernate",
        "framework",
        "Hibernate",
        "associations",
        "levels",
        "loading",
        "webservices",
        "JAXRS",
        "WebLogic",
        "changes",
        "machine",
        "code",
        "changes",
        "SVN",
        "Tortoise",
        "SVN",
        "Environment",
        "Java",
        "Struts",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Oracle",
        "Hibernate",
        "JavaScript",
        "jQuery",
        "Web",
        "Logic",
        "SQL",
        "HTML",
        "CSS",
        "XML",
        "Agile",
        "Restful",
        "Web",
        "services",
        "ANT",
        "Junit",
        "SQL",
        "Developer",
        "JMS",
        "Eclipse",
        "Log4j",
        "JNDI",
        "SOAP",
        "WSDL",
        "CVS",
        "Log4j",
        "JAXB",
        "Eclipse",
        "Rational",
        "Rose",
        "JUnit",
        "Oracle",
        "g",
        "Education",
        "Bachelors",
        "Skills",
        "database",
        "years",
        "Eclipse",
        "years",
        "Java",
        "years",
        "SQL",
        "years",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "C",
        "C",
        "Java",
        "HTML",
        "JavaScript",
        "SQL",
        "PLSQL",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JSTL",
        "JDBC",
        "JMS",
        "JNDI",
        "RMI",
        "EJB",
        "JFCSwing",
        "AWT",
        "Applets",
        "Java",
        "Networking",
        "ApplicationWeb",
        "Servers",
        "OracleBEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Tomcat",
        "Frameworks",
        "Struts",
        "2x1x",
        "Spring",
        "4x3x",
        "Hibernate",
        "4x3x",
        "JSF",
        "iBatis",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "IDEA",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Web",
        "Technologies",
        "HTML5",
        "DHTML",
        "CSS3",
        "JavaScript",
        "AJAX",
        "jQuery",
        "NodeJS",
        "ReactJS",
        "ExtJS",
        "Bootstrap",
        "Servlets",
        "JSPs",
        "JNDI",
        "JMS",
        "XML",
        "XSLT",
        "XSD",
        "JSF",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "JAXP",
        "JAXB",
        "Messaging",
        "Tools",
        "Rabbit",
        "MQ",
        "Apache",
        "Kafka",
        "Apache",
        "Spark",
        "JMS",
        "Cloud",
        "AWS",
        "Netflix",
        "Eureka",
        "Mesos",
        "Version",
        "Control",
        "Tools",
        "GIT",
        "CVS",
        "SVN",
        "Rational",
        "Clear",
        "Case",
        "Testing",
        "Junit",
        "Jasmine",
        "Karma",
        "Selenium",
        "Soap",
        "UI",
        "Database",
        "Servers",
        "Oracle",
        "10g11g12C",
        "SQL",
        "server",
        "MySQL",
        "DB2",
        "Build",
        "tools",
        "ANT",
        "Log4j",
        "Jenkins",
        "2x",
        "Gradle",
        "Drools"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:32:29.879538",
    "resume_data": "Sr JavaJ2EE Developer Sr span lJavaspanJ2EE span lDeveloperspan Sr JavaJ2EE Developer Intermountain Healthcare Edison NJ Over 10 years of industrial experience in web application development objectoriented programming design development using Java and J2EE Technologies Experience in developing applications using Java JSP Servlets JDBC Struts Spring framework Spring JDBC Spring MVC Spring Boot Hibernate Hands on experience in Atlassian tools JIRA Confluence Expertise in clientside design and validations using HTML 45 XHTML Bootstrap Java Script JSP JQuery AJAX Angular JS React JS Experienced in writing Components Pipes and Services to separate concern and handle different situations by using Angular2 and Worked on Angular4 Enhancements Experience of JUNIT and Mackito Understanding of Jasmine and Karma Frameworks Extensive experience in Deploying Application in Web Servers such as Web Logic IBM Web Sphere JBOSS and Apache Tomcat Web Server and used Jenkins Good Experience in using Build tools like Maven Ant and Log4J Good at using IDEs like Eclipse Spring Tools Suite and Visual Studio Code Experience using Postman and SoapUI Worked on design patterns and industry best practices such as MVC Factory and singleton Hands on experience of exposing and consuming web services using SOAP REST JAXRPC JAXWS and also in Apache Camel Understanding on big data technologies like Apache Hive Kafka Hadoop and Apache Spark Experience using Node JS for nonblocking design operation for serverside code Angular4 for developing UI components Expertise in Object Oriented and Concurrent programming using JavaJ2EE technologies Strong understanding of Garbage Collector Collections Multithreading Event Handling Exception Handling and Generics Expertise in designing POJO classes using Hibernate Annotations using EJBJPA API Experience in working with DevOpsContinuous integration tools like GITHUB Jenkins Nexus Jira and SonarQube Working experience of control version SCM tools like GIT SVN CVS and Clear Case Experience in writing SQL PLSQL queries Stored Procedures for accessing and managing databases such as Oracle11g10g9i8i SQL Server MySQL and DB2 and knowledge of NoSQL database like MongoDB Cassandra Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Database authentication and PreAuthentication Strong experience with MongoDB and migrations from SQL relational databases to NoSQL databases like MongoDB and Cassandra Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs to run the war AMI and deploy jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Experience in AWS EC2 EC2 Container ServicesDocker VPC with Security Groups S3 IAM SNS Lambda Route53 Cloud Formation CloudWatch Services DevOps tools and Microservice architecture Ability to work in tight schedules and efficient in meeting deadlines Good experience in developing applications using Agile Scrum waterfall methodology Very good at Using Version One and JIRA agile project Management Tools Very good at understanding the stories Good at estimating the time Ability to deliver the stories on time Involved in all different phases of SDLC including Strategic Systems Planning Designing Programming Testing Documentation and Presentation to clients and preparing customer specifications as part of software technical requirements and Customer support Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Developer Intermountain Healthcare Salt Lake City UT September 2018 to Present Description Help2 Clinical Desktop CD is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the IHC Clinical Data Repository CDR Users can review as well as update or enter new data through CD Many clinicians use CD daily for accessing patient data which aids in making important clinical decisions CD is mainly composed of a shell or core and various modules running inside of the shell Responsibilities Developed web GUI involving HTML Node JS Java Script under MVC architecture Defined and developed the applications presentation layer using HTML CSS and JQuery Scripting Designed and implemented front end applications using Adobe Dreamweaver Designed and developed the UI using JSP Spring Servlets HTML CSS and JavaScript JQuery Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code Implemented various design patterns like Singleton DAO Factory pattern etc Successfully implemented Auto CompleteSuggest functionality using Ajax JQuery Web Service call and JSON Used Custom Tag libraries for XML parsing and XSL transformations Used Filenet for Content Management and for streamlining Business Processes Involved in the development of web application using Spring MVC architecture Configured Bean properties using setter injection and Implanted JSP for the presentation layer Developed Message based systems using JMS API and Message Driven Beans EJB 30 Configured Hibernate for storing objects in the DB2 database retrieving objects querying objects and persisting relationships between objects Experience with basic WebSphere Administration like JMS Data Source Configurations Listener port configurations JVM Property Configuration Certificates Configuration deploying EARs into various environments through Admin Console Hudson etc Written Web Services JAXWS for external system via SOAPHTTP call Implemented REST Web Services for other applications to communicate Worked on UNIX LINUX to move the project into production environment Implemented logging mechanism using Log4j Framework Used Log4j framework to logtrack application Used Maven automated build scripts to compile and package the application and implemented Log4j Used JUnit for unit testing of the application Rational Clear Case for Version Control Deployed EAR files using the build tools in the Web Logic application server Environment Ajax Jquery FileNet Java 15 JSP Servlets Core Java Spring Swing Hibernate JSF HTML CSS JavaScript NodeJs UNIX Jms Web Services SOAP WAS 61 DB2 XML IBM WebSphere 61 Rational Clear Case Log 4j Jr Java Developer US Bank Portland OR August 2016 to September 2018 Description The application is used to track the assets of a company right from the day of purchase to the day when it is either sold or scrapped The depreciation of an asset for a particular period can be taken in the form of a report All the relational transactions like Invoice Sales Loan Lease Insurance policy issued assets etc are also maintained in this application Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML Jquery and Java script Implemented the modules using ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using Java script Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Developed value object mainly used to wrap the data and pass across the layers Developed business logic using Stateless session beans for calculating asset depreciation on Straight line and written down value approaches Created tables views Types triggers complex join queries stored procedures and functions and modifications to existing database structure as required for addition of new features Designed database Queries for updating insertion and retrieval of asset information and rates Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries Created java classes to communicate with database using JDBC Accessed stored procedures and functions using JDBC Callable statements Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Environment Java 14 Servlets JSP EJB J2EE 14 STRUTS XML XSLT Java Script Oracle 8i SQL PLSQL Ms Visio Eclipse JDBC Win CVS Windows 2003 Server Sr Java Full Stack Developer Macys Inc San Francisco CA July 2014 to August 2016 Description This application supports all the Macys experiments set up and analytics and deployed in Heroku server Developing a portal where they can access all the Clients and their business using SSO application Integrated with different applications like Billing Book of Business and quote and Ordering ID cards Responsibilities Implemented innovative systems for data collection storage and management of customer orders Designed and developed transactional and analytical data structures Implemented REST based web services for the communication between web applications Following safe agile methodology adopted to fast paced development environment where focusing on frequent deployments to production Working in different environments developed different components services Working on developing Spring Boot Micro services and consuming other Micro services Experience deploying and maintaining multicontainer applications through Docker Implemented RESTful Web Services using Micro Services and JSON Used Angular JS and Node JS to structure JavaScript code in an MVC model ModelViewController Worked on developing Microservices using Spring Boot and Spring Cloud were developed test and documented scalable and highquality business applications according to business requirements Used Spring core annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices Extensively Used Jenkins as Continuous Integration tool to deploy Spring Boot Micro services to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy update the applications Working Knowledge on creating reusable UI components using Angular4 Developed stored procedures and queries to work with millions of records in SQL Server database environment Extensively used PLSQL to write complex queries and stored procedures on customer detail database Built dynamically generated dropdown lists using JavaScript Ajax jQuery and Angular4 Used Pivotal Cloud FoundryPCF for developing RESTful APIs in the spring boot framework Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Used Java 18Lambdas to make anonymous inline function calls and used Streams to work effectively with collection objects array operations and Enhanced concurrency methods Developing single page web application using JavaScript framework Angular Extensively used Atlassian tools like Bit bucket Bamboo Jira and Confluence for CICD Working knowledge on React and Clientside validation Implemented clientside Interface using Node JS and used for creating reusable UI components Used Docker for creating Docker images for launching containers on AWS EC2 Experience working on multiple AWS instances Used Spark Streaming to perform necessary transformations and actions for building the model which gets data from Kafka and persists into Cassandra Designed built and deployed a multitude application utilizing almost all of the AWS stack Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Working with No SQL Database Mongo DB where consolidated data from different sources using HadoopSpark Involved in PROD activities regular intervals Environment Java 8 HTML5 CSS3 java script Bootstrap JQuery Angular4 gulp web pack React JS Jest Micro Services Node JS Spring boot 15x Mongo DB Pivotal Cloud Foundry Eclipse Postman Kafka AWS Docker Visual Studio Atom Sr Java Full Stack Developer Blackhawk Network Pleasanton CA June 2012 to July 2014 Description The SetIt is an Admin tool which is mainly used to install plans for the several clients with the specific work order SetIt integrates several applications internally It feeds multiple applications and uses the data served by few applications It also uses multiple databases SETIT OLTP and OMNI SetIt is a key internal application of the organization It is a web application developed in java that readsstores data on an oracle data base It captures the plan data that is eventually extracted to other plan maintenance applications Responsibilities Implemented the Struts MVC framework JSPServlets for designing and developing the user interface and AJAX is used for asynchronous server calls Developed and enhanced middleware components using Collections Generics Object Serialization and Multithreading Followed agile methodology for the project development Used Java multithreaded API for processing large number of index files Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Implemented the Spring AOP Aspect Oriented Programming for Logging declarative transaction Management creating and applying transaction advices and configuring the joint points Developed SOAP web services using JAXWS Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Autoscaling groups Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Implemented security in SOAP web services using axis Experience with Developing Web API using Node JS and hosted on multiple load balanced API instances Built springbased Java and Scala micro services to support enterprise web application Deployed Spring Boot based micro services Docker container using AmazonEC2 container using AWS admin console Developed microservices with Spring Eureka to retrieve API routes for the entire cluster Developed shell scripts for running the batch programs using cron job Developed PLSQL packages procedures and functions Used Angular JS Node JS and Bootstrap in effective web design Setup the continuous Integration CI process and continuous deployment CD jobs in Jenkins brew master instance which reduces the time for the deployment of micro services Developed web GUI involving HTML Node JS Java Script under MVC architecture Experience in Integration of Amazon Web Services AWS with other applications infrastructure Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Developed EJS access layer and components using JPAHibernate frameworks for object persistence to Derby database for mock domain and in Oracle for real domains Created BSON Data and stored as documents comprising documents data types and conversions in MongoDB Composed and executed Mongo DB scripts to insert and update NoSQL database and reporting Prepared SQLPLSQL scripts and Stored Procedures to implement design get it finetuned from DBAs if needed Designed and implemented Unit Testing using JUNIT Framework Used Rational Clear Case Explorer for creatingmanaging views and delivering the code of Integration stream on daily basis Used IBM Rational Clear Quest to keep track of the defects and activities Responsible for updating the defects status in a daily based QA status meeting Environment J2EE Spring Struts PLSQL Eclipse JMS HTML AJAX JAXWS JavaScript JSP Servlets Node JS JSON MongoDB UNIX SOAP Clear Case AWS Pivotal Cloud Foundry Scala Micro Services Oracle 11g MVC Shell Scripts CSS Window Jr JavaJ2EE Developer New York State Division of Criminal Justice Services Albany NY May 2011 to June 2012 Description The Project describes the Admission Discharge Transfer ADT module of the patients The primary function of the ADT module is to admit the patient in a hospital allocate the appropriate room and define the tariff applicable to the patient It also updates the current room status by interacting with the other modules of his like Billing Maintenance and Wards etc The system captures all demographic details of the patient insurance details basic clinical conditions etc Responsibilities Used agile methodology to develop the application Responsible for maintaining the code quality coding and implementation standards by code reviews Created MVC architecture built on struts framework Provided services to third party clients through Restful architecture Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Integrated log4j for logging the messages at debug and error level Used Web logic workshop Eclipse IDE to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java Oracle SQL Eclipse log4j Maven REST SVN JavaUI Developer BCBS Chicago IL April 2009 to May 2011 Responsibilities Involved in Analysis development testing integration and deployment of the web services Involved in Agile methodology to get updated with team Involved in development of User Interface using HTML5 CSSCSS3 JavaScript jQuery and JSON Used spring framework to implement the MVC design pattern Used hibernate to map the domain elements and Criteria API named query for querying Hibernate has been used as the ORM framework to persist the data and Hibernate xml mapping has been used to map the java objects to Database tables Developed the REST web service using Spring IOC to provide user a way to run the job and generate daily status report on loans Implemented business logic in Middle Tier using pluggable components which were specified in the customized xml documents using Spring framework Developed ORM persistence layer using JPA Hibernate framework Worked on advanced Hibernate associations with multiple levels of Caching lazy loading Extensively involved in developing and consuming Restful webservices using JAXRS Used WebLogic to deploy the changes and to test on local machine Committed the code changes to SVN using Tortoise SVN Environment Java Struts Spring IOC Spring MVC Oracle Hibernate JavaScript jQuery Web Logic SQL HTML CSS XML Agile Restful Web services ANT Junit SQL Developer JMS Eclipse Log4j JNDI SOAP WSDL CVS Log4j JAXB Eclipse Rational Rose JUnit Oracle 10g Education Bachelors Skills database 10 years Eclipse 9 years Java 10 years SQL 9 years testing 9 years Additional Information TECHNICAL SKILLS Programming Languages C C Java 678 HTML JavaScript SQL and PLSQL JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking ApplicationWeb Servers OracleBEA WebLogic 8191 IBM WebSphere 51606170 JBoss Tomcat 502860 Frameworks Struts 2x1x Spring 4x3x Hibernate 4x3x JSF 1220 iBatis IDEs Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Web Technologies HTML5 XHTML DHTML CSS3 JavaScript AJAX jQuery NodeJS ReactJS AngularJS ExtJS Bootstrap Servlets JSPs JNDI JMS XML XSLT XSD JSF Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB AXIS Messaging Tools Rabbit MQ Apache Kafka Apache Spark JMS Cloud environments Azure AWS Netflix Eureka Mesos Version Control Tools GIT CVS SVN Rational Clear Case Testing technologiestools Junit Jasmine Karma Selenium Soap UI Database Servers Oracle 10g11g12C SQL server 201220142016 MySQL 57 DB2 111 Build tools ANT Log4j Jenkins 2x Gradle and Drools",
    "unique_id": "41f0c57c-4d6a-40fc-a6c5-0e187a9cc0bf"
}