{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Sponsorship required to work in the US Work Experience Senior Python Developer Walmart Bentonville AR December 2016 to Present Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulationand retrieval Having very good experience with BIG DATA Created Business Logic using pythonto create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using pythonon Django Web Framework Developed views and templates with pythonand Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python3x Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Citi Bank Manhattan NY February 2015 to September 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python Creating Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using pythonon Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used pythonto extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer REST Json November 2012 to December 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application",
    "entities": [
        "Responsible for Design",
        "GIT",
        "Python Flask",
        "PHP Created",
        "Python Created",
        "Pandas",
        "Amazon AWS S3",
        "Developed",
        "GUI",
        "Designed Docker",
        "US",
        "Asset Department",
        "UML Rational Rose for Object",
        "JavaScript Created",
        "HTML AJAX CSS",
        "Performed",
        "Created Python",
        "Created UI",
        "MySQL Used AWstat",
        "Utilized",
        "the Inquiry Tool",
        "Created",
        "Djangos",
        "Developed Business Logic",
        "Agile Software Methodology",
        "AWS",
        "Git",
        "UI",
        "Test Driven DevelopmentTDD",
        "Google Analytics",
        "Interfacing",
        "Working",
        "Object Diagrams",
        "Django AWS Amazon",
        "Used Query and Ajax",
        "CMS",
        "Amazon Web Services AWS",
        "Created Data",
        "Hashicorps Nomad",
        "KeyValue",
        "Design Development and Deployment Testing and Implementation",
        "Developer Citi Bank",
        "SQL",
        "Collaborated",
        "Provided GUI",
        "XML",
        "GitHub",
        "SOAP",
        "ASPNET",
        "Fiddler",
        "lPythonspan",
        "PHP",
        "DOM",
        "BASH",
        "RDS",
        "Shell",
        "Views",
        "PyQt",
        "Wireshark",
        "Wrote Python",
        "Flask SQL Alchemy",
        "BIG DATA Created Business Logic"
    ],
    "experience": "Experience Senior Python Developer Walmart Bentonville AR December 2016 to Present Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulationand retrieval Having very good experience with BIG DATA Created Business Logic using pythonto create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using pythonon Django Web Framework Developed views and templates with pythonand Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python3x Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Citi Bank Manhattan NY February 2015 to September 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python Creating Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using pythonon Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used pythonto extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer REST Json November 2012 to December 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Walmart",
        "Bentonville",
        "AR",
        "December",
        "Present",
        "Responsibilities",
        "Django",
        "Database",
        "APIs",
        "database",
        "Query",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "order",
        "web",
        "solution",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulationand",
        "retrieval",
        "experience",
        "BIG",
        "DATA",
        "Business",
        "Logic",
        "pythonto",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "pythonon",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "pythonand",
        "Djangos",
        "controller",
        "templating",
        "language",
        "companys",
        "platform",
        "DCAE",
        "python",
        "components",
        "Python",
        "libraries",
        "Click",
        "Pandas",
        "Matplotlib",
        "analysis",
        "manipulation",
        "data",
        "Click",
        "package",
        "command",
        "line",
        "interface",
        "Designed",
        "Docker",
        "proofofconcept",
        "Hashicorps",
        "Nomad",
        "Consul",
        "Consul",
        "Service",
        "Discovery",
        "KeyValue",
        "pair",
        "Wrote",
        "Python",
        "scripts",
        "files",
        "data",
        "Consul",
        "Python",
        "IDE",
        "Pycharm",
        "code",
        "unit",
        "test",
        "development",
        "Python",
        "bug",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Responsible",
        "Design",
        "maintenance",
        "databases",
        "Python",
        "Developed",
        "Python",
        "APIs",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "IDEA",
        "Development",
        "systems",
        "Python",
        "Created",
        "data",
        "access",
        "modules",
        "python",
        "Designed",
        "solutions",
        "Git",
        "GitHub",
        "microservice",
        "deployment",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "Environment",
        "Python3x",
        "Django",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wire",
        "shark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Citi",
        "Bank",
        "Manhattan",
        "NY",
        "February",
        "September",
        "Responsibilities",
        "Python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "email",
        "marketing",
        "campaigns",
        "forms",
        "data",
        "database",
        "Django",
        "Framework",
        "Worked",
        "Test",
        "development",
        "Behave",
        "Python",
        "Behave",
        "scripts",
        "Gherkin",
        "syntax",
        "collections",
        "Python",
        "objects",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "login",
        "module",
        "user",
        "registration",
        "products",
        "order",
        "order",
        "performance",
        "data",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Web",
        "application",
        "Code",
        "review",
        "GitHub",
        "testing",
        "fixing",
        "bugs",
        "modifications",
        "research",
        "platforms",
        "API",
        "module",
        "help",
        "pyYAML",
        "performance",
        "approach",
        "methods",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Performed",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "libraries",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Wrote",
        "unit",
        "test",
        "cases",
        "testing",
        "tools",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "views",
        "templates",
        "python361",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "BIG",
        "DATA",
        "JavaScript",
        "frontend",
        "modules",
        "pythonon",
        "Django",
        "Web",
        "Framework",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "python",
        "Django",
        "APIs",
        "database",
        "access",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "backend",
        "client",
        "web",
        "application",
        "extract",
        "information",
        "XML",
        "files",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "XSD",
        "XSLT",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "pythonFlask",
        "Designed",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "vendors",
        "queries",
        "GIT",
        "version",
        "control",
        "Environment",
        "Python",
        "Django",
        "Behave",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "Bootstrap",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Perl",
        "Cassandra",
        "Azure",
        "Automation",
        "cloud",
        "services",
        "Python",
        "Developer",
        "REST",
        "Json",
        "November",
        "December",
        "Responsibilities",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Bootstrap",
        "Java",
        "script",
        "query",
        "user",
        "experience",
        "validation",
        "JavaScript",
        "custom",
        "CMS",
        "Django",
        "Amazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "Rewrite",
        "existingPythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "pythonscripts",
        "XML",
        "documents",
        "data",
        "database",
        "data",
        "management",
        "system",
        "MySQL",
        "AWstat",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "Design",
        "test",
        "deploy",
        "website",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "SDLC",
        "process",
        "project",
        "JIRA",
        "Agile",
        "JQuery",
        "Java",
        "script",
        "manipulation",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "ASPNET",
        "C",
        "Flask",
        "Python",
        "PHP",
        "Created",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "highperformance",
        "MongoDB",
        "replica",
        "sets",
        "EC2",
        "reliability",
        "frontend",
        "modules",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "website",
        "power",
        "company",
        "energy",
        "consumption",
        "customers",
        "database",
        "data",
        "database",
        "customer",
        "accounts",
        "python",
        "modules",
        "operations",
        "data",
        "interface",
        "users",
        "accounts",
        "Pythons",
        "pandas",
        "libraries",
        "data",
        "exploration",
        "visualization",
        "electricity",
        "consumption",
        "data",
        "Python",
        "scripts",
        "quantities",
        "data",
        "databases",
        "energy",
        "storage",
        "projects",
        "countryspecific",
        "energy",
        "policies",
        "Python",
        "Django",
        "Forms",
        "data",
        "login",
        "users",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "modules",
        "csv",
        "itertools",
        "pickle",
        "development",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "testing",
        "methods",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Angularjs",
        "client",
        "web",
        "application"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:22:41.913561",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Sponsorship required to work in the US Work Experience Senior Python Developer Walmart Bentonville AR December 2016 to Present Responsibilities Used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing python in order to build an interactive web based solution Used python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulationand retrieval Having very good experience with BIG DATA Created Business Logic using pythonto create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for gathering requirements system analysis design development testing and deployment Developed tools using python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using pythonon Django Web Framework Developed views and templates with pythonand Djangos view controller and templating language to create Responsible for creating companys internal platform called DCAE by using python to develop and test the components Worked with various Python libraries such as Six Click Pandas and Matplotlib for analysis and manipulation of data Used Click package to create the command line interface Designed Docker proofofconcept using Hashicorps Nomad and Consul Used Consul for Service Discovery and to create KeyValue pair Wrote Python scripts to parse JSON files and load the data into the Consul Used Python IDE Pycharm for developing the code and performing unit test Involved in development using Python bug fixing Developed webbased applications using Python Django XML CSS HTML DHTML Developed entire frontend and backend modules using Python on Django Web Framework Used AWS for application deployment and configuration Responsible for Design and maintenance of databases using Python Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API intellij IDEA Development of realtime multitasking systems using Python Created data access modules in python Designed developed implemented and maintained solutions for using Git and GitHub for microservice and continuous deployment Involved in Developing a Restful APIS service using Python Flask framework Environment Python3x Django Shell Scripting AWS Pandas PyQt PyQuery Wire shark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Citi Bank Manhattan NY February 2015 to September 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python Creating Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using pythonon Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used pythonto extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using pythonFlask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer REST Json November 2012 to December 2014 Responsibilities Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked extensively with Bootstrap Java script and query to optimize the user experience Handled all the clientside validation using JavaScript Created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Rewrite existingPythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote pythonscripts to parse XML documents and load the data in database Designed and developed data management system using MySQL Used AWstat and Google Analytics to analyze web traffic Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Created scripts for system administration and AWS using languages such as BASH and Python Design develop test deploy and maintain the website Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Responsible for debugging the project monitored on JIRA Agile Used JQuery for all clientside Java script manipulation Scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Created unit testregression test framework for workingnew code Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules usingPythonon Django Web Framework Responsible for debugging and troubleshooting the web application Worked on developing a website for a power company Used to get energy consumption from various customers to store it into a database Load the data from database to display on customer accounts Wrote various python modules to perform backend operations on the data Developed graphical interface for users to display in their accounts Used Pythons pandas and matplotlib libraries to conduct data exploration and visualization of electricity consumption data Created Python scripts for analyzing large quantities of data Maintained detailed databases of energy storage projects and countryspecific energy policies Generated Python Django Forms to record data login and signup of users Built various graphs for business decision making using Python matplotlib library Utilized standard Python modules such as csv itertools and pickle for development Worked on Python OpenStack APIs and used Numpy for Numerical analysis Responsible for search engine optimization to improve the visibility of the website Performed different testing methods like Unit testing Integration testing web application testing Developed efficient Angularjs for client web based application",
    "unique_id": "1379314f-fc78-4694-b113-21a83b9eaa4c"
}