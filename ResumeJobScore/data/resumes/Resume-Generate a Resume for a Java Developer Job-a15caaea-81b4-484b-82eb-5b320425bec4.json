{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Venuetize 3 years of IT experience as a JavaJ2EE developer in Analysis Design Development Testing Implementation Enhancement and Support of full life cycle web applications using NTierJ2EE architecture in Financial Banking Healthcare insurance and Telecommunication domain Work Experience Java Developer Venuetize Tampa FL June 2018 to Present Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all the requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Developed internal coding using J2EE technologies based on the MVC Architecture Implemented MVVM pattern for development Implemented Business Logic using Java 16 Spring 31 Struts 20 and Hibernate 30 Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Worked on Entity framework with backed DB as a Azure SQL database along with complex store procedure queries and views Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Building Single Page Application using Knockout JS Node JS and JavaScript Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Experience in handling messaging services using Apache Kafka Designed overall Microservices architecture including Gateway API Service Core Service Discovery Server and Monitor Server using Spring Cloud Netflix Optimized the Cassandra cluster by making changes in Cassandra configuration file and Linux OS configurations Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Creating and configuring applications services with Windows Communication Foundation WCF Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11g db Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Developed Data Access Layer using Entity Framework 35 and extensively used LINQ to join various entities Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster Used Storm and Kafka Services to push data to HBase and Hive tables Experience working with Karma for testing javascript purposes Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Worked on SOAP and RESTFUL Service API using WCF which return XML and JSON data using WCF attributes Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment J2EE Java 16 spring framework Spring MVC 35 Hibernate 3x JSP 20 CSS3 Servlets 23 JDBC AJAX Web services REST XML Java Beans Ext JS jQuery JavaScriptKafka Entity Framework Knockout JS WCF MVVM Oracle 11g Eclipse Web Sphere Agile Methodology SVN Maven Jenkins JUnit Winscp JavaJ2EE Developer Brown Greer LLC Richmond VA June 2016 to May 2017 Responsibilities Developed the application by using Scrum methodology in agile environment Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Transferred all data into SQL Server from different data sources using SSISETL Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Creating and configuring applications services with Windows Communication Foundation WCF to establish communication between BMS and a CRM Customer Relationship Management system Contributed to discussion on analysis and design on the completed migration of the BMS and POS systems from Ravendb to SQL database using Entity Framework Code First designing the whole SQL data modeling along with the implementation of most of the custom scripts for data migration Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Used MVC50 for making Rest calls between application and WCF service Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot Entity Framework Knockout JS WCF MVVM SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer CMC Limited Hyderabad Telangana October 2014 to November 2015 Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Used Struts Validator framework for clientside validations Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education design and development of multitier applications using Tag Libs Skills Java J2Ee Spring J2Ee Hibernate Java",
    "entities": [
        "Spring Framework",
        "Designing Development JUnit",
        "Used Hibernate",
        "AJAX",
        "Gateway API Service Core Service",
        "WebSphere Application",
        "Java Developer CMC Limited Hyderabad",
        "Dispatcher Servlets Controllers Model",
        "Dependency",
        "Building Single Page Application",
        "Implemented Business Logic",
        "Present Responsibilities Involved",
        "SSISETL",
        "Created DDL",
        "Created System Requirement Specifications",
        "Windows Communication Foundation WCF Exposed",
        "JAR",
        "XML",
        "SOAP",
        "EAR",
        "JSF Controllers",
        "Financial Banking Healthcare",
        "WebLogic",
        "JUnit",
        "JAXWS",
        "HBase",
        "Agile Methodology Designed",
        "JavaJ2EE",
        "Developed JavaJ2EE",
        "SQL Server",
        "Developed",
        "Developed Data Access Layer",
        "Entity Framework Code First",
        "Development of application communication",
        "Analysis Design Development Testing Implementation Enhancement",
        "UML",
        "Servlets",
        "JavaScript Used Hibernate Transaction Management",
        "RD",
        "RSA JMS JSP Servlets",
        "JSP",
        "Integration of many components",
        "Micro",
        "HTTP Used Hibernate",
        "MVC",
        "Agile",
        "Integration Testing",
        "Validate",
        "REST Web Services Involved",
        "LINQ",
        "Database",
        "POJO",
        "SRS",
        "Hibernate 3x JSP 20 CSS3",
        "Oracle",
        "Coordinated",
        "RDBMS Created",
        "BMS",
        "JSF",
        "SQL Server Development of XMLXSLTXSD",
        "HTML",
        "Windows Communication Foundation",
        "Implemented Data",
        "Worked on Multiple AWS",
        "SQL",
        "DML",
        "Bootstrap",
        "Internal Application",
        "REST Hibernate",
        "Hive",
        "the MVC Architecture",
        "db Created",
        "Bootstrap XML",
        "RESTFUL Service API",
        "Spring Hibernate",
        "Maven",
        "lJavaspan",
        "JavaScript",
        "UI",
        "Oracle Experienced",
        "JMS MQ MDB",
        "XSD",
        "Data Model",
        "Inversion of Control IOC",
        "JavaScript Implemented Responsive",
        "SOAP UI",
        "SVN",
        "Content Management",
        "SpringHibernate",
        "Maven Jenkins JUnit Winscp JavaJ2EE",
        "REST",
        "Application",
        "Functionality",
        "Operations"
    ],
    "experience": "Experience Java Developer Venuetize Tampa FL June 2018 to Present Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all the requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Developed internal coding using J2EE technologies based on the MVC Architecture Implemented MVVM pattern for development Implemented Business Logic using Java 16 Spring 31 Struts 20 and Hibernate 30 Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Worked on Entity framework with backed DB as a Azure SQL database along with complex store procedure queries and views Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Building Single Page Application using Knockout JS Node JS and JavaScript Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Experience in handling messaging services using Apache Kafka Designed overall Microservices architecture including Gateway API Service Core Service Discovery Server and Monitor Server using Spring Cloud Netflix Optimized the Cassandra cluster by making changes in Cassandra configuration file and Linux OS configurations Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Creating and configuring applications services with Windows Communication Foundation WCF Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11 g db Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Developed Data Access Layer using Entity Framework 35 and extensively used LINQ to join various entities Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster Used Storm and Kafka Services to push data to HBase and Hive tables Experience working with Karma for testing javascript purposes Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Worked on SOAP and RESTFUL Service API using WCF which return XML and JSON data using WCF attributes Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment J2EE Java 16 spring framework Spring MVC 35 Hibernate 3x JSP 20 CSS3 Servlets 23 JDBC AJAX Web services REST XML Java Beans Ext JS jQuery JavaScriptKafka Entity Framework Knockout JS WCF MVVM Oracle 11 g Eclipse Web Sphere Agile Methodology SVN Maven Jenkins JUnit Winscp JavaJ2EE Developer Brown Greer LLC Richmond VA June 2016 to May 2017 Responsibilities Developed the application by using Scrum methodology in agile environment Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Transferred all data into SQL Server from different data sources using SSISETL Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Creating and configuring applications services with Windows Communication Foundation WCF to establish communication between BMS and a CRM Customer Relationship Management system Contributed to discussion on analysis and design on the completed migration of the BMS and POS systems from Ravendb to SQL database using Entity Framework Code First designing the whole SQL data modeling along with the implementation of most of the custom scripts for data migration Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Used MVC50 for making Rest calls between application and WCF service Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot Entity Framework Knockout JS WCF MVVM SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11 g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer CMC Limited Hyderabad Telangana October 2014 to November 2015 Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Used Struts Validator framework for clientside validations Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education design and development of multitier applications using Tag Libs Skills Java J2Ee Spring J2Ee Hibernate Java",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Venuetize",
        "years",
        "IT",
        "experience",
        "JavaJ2EE",
        "developer",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "Enhancement",
        "Support",
        "life",
        "cycle",
        "web",
        "applications",
        "NTierJ2EE",
        "architecture",
        "Financial",
        "Banking",
        "Healthcare",
        "insurance",
        "Telecommunication",
        "domain",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Venuetize",
        "Tampa",
        "FL",
        "June",
        "Present",
        "Responsibilities",
        "phases",
        "project",
        "analysis",
        "requirement",
        "phase",
        "project",
        "Created",
        "System",
        "Requirement",
        "Specifications",
        "SRS",
        "report",
        "project",
        "requirements",
        "client",
        "requirements",
        "project",
        "scope",
        "functionalities",
        "Agile",
        "Methodology",
        "frontend",
        "presentation",
        "logic",
        "JSP",
        "CSS3",
        "Strut",
        "tags",
        "validations",
        "JavaScript",
        "JavaScript",
        "functions",
        "validations",
        "coding",
        "J2EE",
        "technologies",
        "MVC",
        "Architecture",
        "MVVM",
        "pattern",
        "development",
        "Business",
        "Logic",
        "Java",
        "Spring",
        "Struts",
        "Hibernate",
        "Developed",
        "Business",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "Dependency",
        "injection",
        "Spring",
        "services",
        "Spring",
        "controllers",
        "DAOs",
        "Objects",
        "business",
        "classes",
        "Entity",
        "framework",
        "DB",
        "SQL",
        "database",
        "store",
        "procedure",
        "queries",
        "views",
        "DAO",
        "pattern",
        "data",
        "database",
        "Hibernate",
        "database",
        "Operations",
        "database",
        "access",
        "statements",
        "XML",
        "mapping",
        "files",
        "POJO",
        "Building",
        "Single",
        "Page",
        "Application",
        "Knockout",
        "JS",
        "Node",
        "JS",
        "JavaScript",
        "Hibernate",
        "Transaction",
        "Management",
        "SpringHibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "Concepts",
        "Experience",
        "services",
        "Apache",
        "Kafka",
        "Microservices",
        "architecture",
        "Gateway",
        "API",
        "Service",
        "Core",
        "Service",
        "Discovery",
        "Server",
        "Monitor",
        "Server",
        "Spring",
        "Cloud",
        "Netflix",
        "Cassandra",
        "cluster",
        "changes",
        "Cassandra",
        "configuration",
        "file",
        "Linux",
        "OS",
        "configurations",
        "session",
        "EJBs",
        "information",
        "Oracle",
        "database",
        "SpringHibernate",
        "Used",
        "AJAX",
        "end",
        "user",
        "interface",
        "features",
        "application",
        "REST",
        "Web",
        "services",
        "data",
        "client",
        "side",
        "Creating",
        "configuring",
        "applications",
        "services",
        "Windows",
        "Communication",
        "Foundation",
        "WCF",
        "Web",
        "Services",
        "client",
        "applications",
        "WSDLs",
        "DDL",
        "DML",
        "SQL",
        "scripts",
        "creation",
        "database",
        "objects",
        "Oracle",
        "g",
        "data",
        "models",
        "practice",
        "concepts",
        "normalization",
        "tables",
        "procedures",
        "functions",
        "views",
        "indexes",
        "constraints",
        "triggers",
        "Required",
        "SQL",
        "response",
        "time",
        "application",
        "Data",
        "Access",
        "Layer",
        "Entity",
        "Framework",
        "LINQ",
        "entities",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "tests",
        "piece",
        "Functionality",
        "functionality",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "Performed",
        "Disk",
        "Space",
        "management",
        "users",
        "groups",
        "cluster",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Experience",
        "Karma",
        "testing",
        "javascript",
        "purposes",
        "Jenkins",
        "JAR",
        "files",
        "Database",
        "application",
        "Maven",
        "building",
        "tool",
        "EAR",
        "file",
        "application",
        "servers",
        "Dependency",
        "management",
        "code",
        "application",
        "SOAP",
        "RESTFUL",
        "Service",
        "API",
        "WCF",
        "XML",
        "data",
        "WCF",
        "attributes",
        "Eclipse",
        "IDE",
        "application",
        "code",
        "Log4j",
        "utility",
        "runtime",
        "logs",
        "Environment",
        "J2EE",
        "Java",
        "spring",
        "framework",
        "Spring",
        "MVC",
        "Hibernate",
        "3x",
        "JSP",
        "CSS3",
        "Servlets",
        "JDBC",
        "AJAX",
        "Web",
        "services",
        "REST",
        "XML",
        "Java",
        "Beans",
        "Ext",
        "JS",
        "jQuery",
        "JavaScriptKafka",
        "Entity",
        "Framework",
        "Knockout",
        "JS",
        "WCF",
        "MVVM",
        "Oracle",
        "g",
        "Eclipse",
        "Web",
        "Sphere",
        "Agile",
        "Methodology",
        "SVN",
        "Maven",
        "Jenkins",
        "JUnit",
        "Winscp",
        "JavaJ2EE",
        "Developer",
        "Brown",
        "Greer",
        "LLC",
        "Richmond",
        "VA",
        "June",
        "May",
        "Responsibilities",
        "application",
        "Scrum",
        "methodology",
        "environment",
        "architecture",
        "J2EE",
        "Model",
        "approach",
        "MVC",
        "design",
        "paradigm",
        "application",
        "Spring",
        "framework",
        "features",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Security",
        "Spring",
        "Web",
        "flow",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "cloud",
        "Microservices",
        "application",
        "configuration",
        "data",
        "SQL",
        "Server",
        "data",
        "sources",
        "SSISETL",
        "REST",
        "Micro",
        "services",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JPA",
        "application",
        "modules",
        "base",
        "classes",
        "utility",
        "classes",
        "core",
        "Spring",
        "dependency",
        "injections",
        "annotations",
        "configuration",
        "files",
        "configuring",
        "applications",
        "services",
        "Windows",
        "Communication",
        "Foundation",
        "WCF",
        "communication",
        "BMS",
        "CRM",
        "Customer",
        "Relationship",
        "Management",
        "system",
        "discussion",
        "analysis",
        "design",
        "migration",
        "BMS",
        "POS",
        "systems",
        "Ravendb",
        "SQL",
        "database",
        "Entity",
        "Framework",
        "Code",
        "First",
        "SQL",
        "data",
        "implementation",
        "custom",
        "scripts",
        "data",
        "migration",
        "Spring",
        "Rest",
        "Template",
        "REST",
        "Web",
        "Services",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "annotations",
        "MVC50",
        "Rest",
        "calls",
        "application",
        "WCF",
        "service",
        "spring",
        "components",
        "Dispatcher",
        "Servlets",
        "Controllers",
        "Model",
        "View",
        "Developed",
        "Business",
        "components",
        "Java",
        "Objects",
        "Hibernate",
        "framework",
        "Java",
        "classes",
        "database",
        "Annotations",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "Development",
        "application",
        "communication",
        "message",
        "JMS",
        "MQ",
        "MDB",
        "process",
        "message",
        "pointtopoint",
        "scenarios",
        "JavaJ2EE",
        "code",
        "business",
        "logic",
        "Spring",
        "Hibernate",
        "framework",
        "OOP",
        "concepts",
        "Peer",
        "code",
        "reviews",
        "Data",
        "validations",
        "functionalities",
        "Angular2",
        "JavaScript",
        "Responsive",
        "development",
        "Bootstrap",
        "CSS3",
        "media",
        "queries",
        "AWS",
        "instances",
        "security",
        "groups",
        "Elastic",
        "Load",
        "Balancer",
        "AMIs",
        "Auto",
        "scaling",
        "design",
        "cost",
        "fault",
        "systems",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "features",
        "services",
        "Spring",
        "MVC",
        "rest",
        "services",
        "template",
        "Functionality",
        "web",
        "services",
        "spring",
        "boot",
        "JPA",
        "Cloud",
        "foundry",
        "Oracle",
        "SQL",
        "data",
        "tables",
        "SQL",
        "queries",
        "transactions",
        "data",
        "data",
        "sources",
        "Oracle",
        "files",
        "SQL",
        "Server",
        "Development",
        "XMLXSLTXSD",
        "schema",
        "definitions",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "application",
        "support",
        "maintenance",
        "application",
        "defects",
        "testing",
        "team",
        "bug",
        "reports",
        "fixes",
        "tickets",
        "JIRA",
        "Good",
        "experience",
        "test",
        "software",
        "development",
        "unit",
        "testing",
        "tool",
        "JUnit",
        "test",
        "GIT",
        "HUB",
        "component",
        "version",
        "management",
        "Jenkins",
        "file",
        "web",
        "services",
        "SOAP",
        "UI",
        "SOAP",
        "Sonar",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "logs",
        "Environment",
        "Windows",
        "XP",
        "JDK",
        "Servlets",
        "JSP",
        "HTML",
        "AWS",
        "Spring",
        "Boot",
        "Entity",
        "Framework",
        "Knockout",
        "JS",
        "WCF",
        "MVVM",
        "SQL",
        "Server",
        "SQL",
        "Server",
        "Eclipse",
        "Maven",
        "WebLogic",
        "g",
        "SVN",
        "JUnit",
        "Log4j",
        "NoSQL",
        "Spring",
        "REST",
        "Hibernate",
        "Java",
        "Developer",
        "CMC",
        "Limited",
        "Hyderabad",
        "Telangana",
        "October",
        "November",
        "Responsibilities",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "UML",
        "diagrams",
        "use",
        "cases",
        "class",
        "diagrams",
        "interaction",
        "diagrams",
        "sequence",
        "collaboration",
        "activity",
        "diagrams",
        "work",
        "environment",
        "Content",
        "Management",
        "system",
        "workflow",
        "management",
        "content",
        "framework",
        "data",
        "HTML",
        "JavaScript",
        "Application",
        "Struts",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "MVC",
        "design",
        "pattern",
        "JSF",
        "Rich",
        "UI",
        "framework",
        "Designing",
        "Development",
        "JUnit",
        "testing",
        "Integration",
        "components",
        "applications",
        "endtoend",
        "Frontend",
        "View",
        "JSF",
        "Controllers",
        "configurations",
        "Data",
        "Model",
        "JPA",
        "mappings",
        "generating",
        "entities",
        "user",
        "screens",
        "validations",
        "HTML",
        "jQuery",
        "JSF",
        "user",
        "requirements",
        "search",
        "functionality",
        "Internal",
        "Application",
        "JS",
        "Struts",
        "Validator",
        "framework",
        "validations",
        "Spring",
        "Dependency",
        "Injection",
        "properties",
        "layers",
        "Web",
        "Service",
        "client",
        "login",
        "authentication",
        "credit",
        "reports",
        "information",
        "JAXWS",
        "Apache",
        "Axis",
        "Web",
        "services",
        "SOAP",
        "Rest",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Hibernate",
        "ORM",
        "framework",
        "Spring",
        "framework",
        "data",
        "persistence",
        "transaction",
        "management",
        "Hibernate",
        "object",
        "data",
        "mapping",
        "framework",
        "data",
        "Oracle",
        "MySQL",
        "Maven",
        "compilation",
        "packaging",
        "deployment",
        "Apache",
        "Tomcat",
        "WebSphere",
        "Application",
        "servers",
        "logging",
        "mechanism",
        "Log4j",
        "framework",
        "Environment",
        "JDK",
        "Agile",
        "Development",
        "Process",
        "Struts",
        "JSF2x",
        "Spring",
        "Spring",
        "framework",
        "Hibernate",
        "RSA",
        "JMS",
        "JSP",
        "Servlets",
        "Web",
        "Sphere",
        "NodeJS",
        "Apache",
        "Tomcat",
        "Oracle",
        "MySQL",
        "Databases",
        "AJAX",
        "Windows",
        "XP",
        "HTML",
        "XML",
        "SOAP",
        "Maven2x",
        "Log4J",
        "Bootstrap",
        "XML",
        "XSLT",
        "XSD",
        "jQuery",
        "JavaScript",
        "JUnit",
        "SVN",
        "Education",
        "design",
        "development",
        "applications",
        "Tag",
        "Libs",
        "Skills",
        "Java",
        "J2Ee",
        "Spring",
        "J2Ee",
        "Hibernate",
        "Java"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:06:41.818290",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Venuetize 3 years of IT experience as a JavaJ2EE developer in Analysis Design Development Testing Implementation Enhancement and Support of full life cycle web applications using NTierJ2EE architecture in Financial Banking Healthcare insurance and Telecommunication domain Work Experience Java Developer Venuetize Tampa FL June 2018 to Present Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project Created System Requirement Specifications SRS report of the project by collecting all the requirements from client Analyzed the requirements and formulated project scope Developed the functionalities using Agile Methodology Designed frontend presentation logic using JSP CSS3 and Strut tags Implemented clientside validations using JavaScript Developed various generic JavaScript functions For validations Developed internal coding using J2EE technologies based on the MVC Architecture Implemented MVVM pattern for development Implemented Business Logic using Java 16 Spring 31 Struts 20 and Hibernate 30 Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services Spring controllers and DAOs to wire Objects of business classes Worked on Entity framework with backed DB as a Azure SQL database along with complex store procedure queries and views Implemented DAO pattern to fetch data from database using Hibernate to carry out various database Operations and avoid redundant database access statements Involved in configuring XML mapping files and POJO objects Building Single Page Application using Knockout JS Node JS and JavaScript Used Hibernate Transaction Management SpringHibernate Batch Transactions Hibernate cache Concepts Experience in handling messaging services using Apache Kafka Designed overall Microservices architecture including Gateway API Service Core Service Discovery Server and Monitor Server using Spring Cloud Netflix Optimized the Cassandra cluster by making changes in Cassandra configuration file and Linux OS configurations Created session EJBs that retrieved information from the Oracle database using SpringHibernate Used AJAX extensively to implement front end user interface features in the application Implemented REST Web services to retrieve data from client side Creating and configuring applications services with Windows Communication Foundation WCF Exposed the Web Services to the client applications by sharing the WSDLs Created DDL and DML SQL scripts for creation of database objects in Oracle 11g db Created logical and physical data models putting to practice concepts of normalization and RDBMS Created new tables PLSQL stored procedures functions views indexes and constraints triggers and Required SQL tuning to reduce the response time in the application Developed Data Access Layer using Entity Framework 35 and extensively used LINQ to join various entities Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of Functionality before writing the functionality Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster Used Storm and Kafka Services to push data to HBase and Hive tables Experience working with Karma for testing javascript purposes Used Jenkins to load JAR files from Database required for running the application Used Maven building tool for creating EAR file to be deployed in application servers It is also used for Dependency management of code in application Worked on SOAP and RESTFUL Service API using WCF which return XML and JSON data using WCF attributes Used Eclipse IDE to develop and debug application code Used Log4j utility to generate runtime logs Environment J2EE Java 16 spring framework Spring MVC 35 Hibernate 3x JSP 20 CSS3 Servlets 23 JDBC AJAX Web services REST XML Java Beans Ext JS jQuery JavaScriptKafka Entity Framework Knockout JS WCF MVVM Oracle 11g Eclipse Web Sphere Agile Methodology SVN Maven Jenkins JUnit Winscp JavaJ2EE Developer Brown Greer LLC Richmond VA June 2016 to May 2017 Responsibilities Developed the application by using Scrum methodology in agile environment Designed the architecture based on the popular J2EE Model 2 approach of MVC design paradigm Developed application on Spring framework by utilizing its features like Spring Dependency injection Spring Security Spring Web flow with Spring MVC Used Spring Boot which is radically faster in building cloud Microservices and develop springbased application with very less configuration Transferred all data into SQL Server from different data sources using SSISETL Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Designed application modules base classes and utility classes using core java Spring dependency injections annotations and configuration files Creating and configuring applications services with Windows Communication Foundation WCF to establish communication between BMS and a CRM Customer Relationship Management system Contributed to discussion on analysis and design on the completed migration of the BMS and POS systems from Ravendb to SQL database using Entity Framework Code First designing the whole SQL data modeling along with the implementation of most of the custom scripts for data migration Used Spring Rest Template to use the exposed REST Web Services Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Used MVC50 for making Rest calls between application and WCF service Primarily focused on the spring components such as Dispatcher Servlets Controllers Model and View Objects Developed Business components using Java Objects and used Hibernate framework to map the Java classes to the database using Annotations Designed and developed the REST based Microservices using the Spring Boot Implemented the Project structure based on Spring MVC pattern using spring boot Development of application communication through asynchronous message using JMS MQ MDB process message in pointtopoint scenarios Developed JavaJ2EE code business logic using Spring Hibernate framework and OOP concepts involved in Peer code reviews Implemented Data validations for critical functionalities using Angular2 and JavaScript Implemented Responsive development using Bootstrap and CSS3 media queries Worked on Multiple AWS instances set the security groups Elastic Load Balancer and AMIs Auto scaling to design cost effective fault tolerant and highly available systems Used Spring Security for implementing the authentication authorization and accesscontrol features Published Restful services using Spring MVC and consumed rest services using springrest template Functionality is implemented by developing RESTful web services using spring boot JPA Cloud foundry and Oracle Experienced in writing complex SQL queries for extracting data from multiple tables Extensively executed SQL queries to view successful transactions of data Extracted data from various sources like Oracle flat files and SQL Server Development of XMLXSLTXSD for schema definitions Unit testing and Integration Testing of application Ongoing support and maintenance of the application of defects and fixing them Coordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA Good experience with test driven software development and unit testing tool like JUnit to write and run repeatable test Used GIT HUB for maintaining the component and to release version management Used Jenkins to build the War file Tested web services on SOAP UI and SOAP Sonar Used Log4j for logging errors messages and performance logs Environment Windows XP JDK 15 Servlets 30 JSP 22 HTML AWS Spring Boot Entity Framework Knockout JS WCF MVVM SQL Server 2008 SQL Server 2005 Eclipse 32 Maven WebLogic 11g SVN JUnit Log4j NoSQL Spring 30 REST Hibernate 33 Java Developer CMC Limited Hyderabad Telangana October 2014 to November 2015 Responsibilities Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture UML diagrams like use cases class diagrams interaction diagrams sequence and collaboration and activity diagrams were used Worked in an Agile work environment with Content Management system for workflow management and content versioning Responsible for setting up AngularJS framework to achieve data binding between HTML and JavaScript objects Designed and developed Application based on Struts Framework using MVC design pattern Implemented MVC design pattern using JSF 20 with Rich faces UI framework Designing Development JUnit testing and Integration of many components of the applications from endtoend ie Frontend View to JSF Controllers and configurations to Data Model and JPA mappings as well as generating entities Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Implemented the search functionality for Internal Application using Angular JS Used Struts Validator framework for clientside validations Used Spring Dependency Injection properties to provide loosecoupling between layers Implemented the Web Service client for the login authentication credit reports and applicant information using JAXWS 20 and Apache Axis 2 Used Web services SOAP Rest for transmission of large blocks of XML data over HTTP Used Hibernate ORM framework with Spring framework for data persistence and transaction management Used Hibernate 35 object relational data mapping framework to persist and retrieve the data from Oracle and MySQL databases Used Maven for compilation packaging and deployment in the Apache Tomcat and WebSphere Application servers Implemented the logging mechanism using Log4j framework Environment JDK 16 Agile Development Process Struts 1x JSF2x Spring 30 Spring framework Hibernate 35 RSA JMS JSP Servlets Web Sphere 71 AngularJS NodeJS Apache Tomcat Oracle and MySQL Databases AJAX Windows XP HTML XML SOAP Maven2x Log4J Bootstrap XML XSLT XSD jQuery JavaScript JUnit SVN Education design and development of multitier applications using Tag Libs Skills Java J2Ee Spring J2Ee Hibernate Java",
    "unique_id": "a15caaea-81b4-484b-82eb-5b320425bec4"
}