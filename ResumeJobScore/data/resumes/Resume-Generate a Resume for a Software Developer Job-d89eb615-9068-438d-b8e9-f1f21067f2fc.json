{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Mastronix Reston VA Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and agile methodologies Worked through all phases of Software Development Life Cycle SDLC which includes gathering and analyzing business requirements functionaltechnical specifications designing developing testing deploying the applications and providing production support Built Web application using Python Angular Flask JavaScript AJAX HTML and template languages 3 years of experience of data analysis in collection cleaning analyzing and visualization of data for driving business solutions Conducting Requirement Analysis Feasibility Studies Risk Analysis and Adaptability Studies Base lining Acceptance Criteria and Deliverables Diversified experience in Data Analysis and Business Analysis Experience working with MySQL Oracle SQL Server and DB2 RDBMS systems Experience in SQL PLSQL functions and packages Good business understanding and effective at working across multiple teams within an organization Experienced in tuning SQL statements and procedures for enhancing the load performance in various schemas across databases Strong understanding of Normalization Good understanding of Data warehousing concepts like star and snowflake schema and well as fact and dimension tables Strong understanding of DWH concepts like data mining data quality data profiling data cleaning data scrubbing and data validation Load and transform large sets of structured semi structured and unstructured data Exceptionally well organized having strong work ethics and willingness to work hard to achieve employer objectives Authorized to work in the US for any employer Work Experience Python Developer Mastronix Ashburn VA October 2018 to Present Description Mastronix is a SaaS based HR enterprise platform which provides enterprise needs for various small businesses Mastronix helps small businesses to have a place where they could capture certain information about their employees in a simple and effective manner Some of the core features offered by the platform include onboarding employees and contractors automation of employee immigration details integrate seamlessly with external entities such as eVerify DOLETA retrieve documents on the fly for state and federal audits provide recruitment and sales engine and the associated dashboard reporting Responsibilities Created Technical Design Document based on the user requirements and business walk through Worked on AGILE Methodology to meet timelines such as sprint planning sprint participation retro sessions Created all the domain classes and entities required by the business Implemented Singleton Abstract Factory Factory Facade Design patterns Implemented data repositories using unit of work pattern and SqlAlchemy Implemented business logic package using data repositories and domain classes Implemented Restful API using Flask for the end clients consumption Implemented routing in Flask API Implemented token bases authentication using JWT Interacted with EVerify wwwuscisgov WCFservices to verify an employee Created and configured several back end services such as push notification service email service employee entry and exit service using python and deployed in Jenkins Designed and developed views using HTML CSS and Bootstrap Created several angular services and factories using Angular 2 Created several angular html and css components and consumed angular services to fetch and post the data Created Angular services to consume FLASK API for calling API methods like GET PUT POST and DELETE Used Git as version control system Used Git Bash as a client to perform operations such as stage add commit merge cherry pick on the repositories Strictly issued code reviews to the team members Strictly followed CICD pipeline for continuous integration and deployment using Jenkins Involved in biweekly meeting sessions with DEVOPS Agile team Involved in creating the database and identifying the relationships for SAAS Software as a Service kind of data model Worked on stored procedures views triggers explicit transactions temp tables Developed parameterized SQL queries and stored procedures to query database tables in TSQL Created Views by applying complex queries on multiple tables to create the virtual tables and implemented Joins in Stored Procedures to get the desired data by joining multiple tables Created UML Use Case Diagrams Sequence Diagram Class Diagram Process flow Diagram Data Flow Diagram Created Unit tests using PyTest and responsible for writing test scripts and scenarios Responsible for testing fixing the bugs and troubleshooting the technical problems Deployed the application as well as API into Tomcat web server Modified applications according to the users requirements Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Build Server Jenkins Unit Testing PyTest Database SQL Server Python Developer NatyaBharatiOrg Potomac MD June 2016 to June 2017 Description This project is mainly for auditorium booking for different shows and these shows are created dynamically in the admin panel and it consists of a heavy content management system to manage their website content accordingly The mission of the project is to bring the vast richness and diversity of Indian theater to theaterlovers of the Washington DC metropolitan area including the second generation Indians and the community at large To foster the local talent and provide a platform for theater enthusiasts in the community to develop their interest in all aspects of a theater production and management Responsibilities Involved in all the phases of the project Worked on Angular components services and factories Written FLASK API to expose business functions Implemented payment gateway for the ticket bookings Implemented custom algorithms in python for early bird discounts member discounts and seasonal discounts Automated the existing scripts for performance calculations using Numpy and SQL alchemy Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Developed dynamic emails using JavaScript and hand coding of HTML5 and CSS3 Managed developed and designed a dashboard control panel for customers and Administrators using Angular FLASK and MySql Extensively used Python modules such as requests urllib Beautiful soup for web crawling Developed the required XML Schema documents and implemented the framework for parsing XML documents Built various graphs for business decision making using Python matplotlib library Developed a fully automated continuous integration system using Git and Azure Pipelines Developed and executed User Acceptance Testing portion of test plan Used Py Unit framework for performing unit testing Performed testing methodologies like unit testing Integration testing web application testing Responsible for user validations on client side as well as server side Implemented a custom web application for Puff testing in order to test the web requests as well as python code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Interacted with QA to develop test plans from highlevel design documentation Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Devops Azure Piplines Database MySQL Python Developer FCC Inc August 2014 to March 2016 Description The Family Cloud Connect Scheduler EASILY allows your family to share special moments care of a loved one and connect through conferencing and messaging There are three modules involved in this application Share Family Cloud Connect lets you share photos and home movies Your family memories are special and will be accessed only by approved members in their secure family site Care Family Cloud Connect helps family members to manage the care of a Loved One who may be living alone and needs assistance Connect Family Cloud Connect improves family communication with messaging and conferencing Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Created web application using JQuery Html AJAX JSON and JavaScript Implemented REST API for web client mobile client desktop clients Implemented Video Conference system using OpenTok js library Created multithreaded background service for task management Implemented custom scheduler for scheduling the task with family members Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Implemented DAO database access objects Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction Environment Stack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL Education Bachelors Degree JNTU Hyderabad Hyderabad Telangana",
    "entities": [
        "SqlAlchemy",
        "Strictly",
        "Oracle SQL Server",
        "Pandas",
        "HTML CSS",
        "API",
        "Test Driven Development TDD",
        "US",
        "Media",
        "QA",
        "GET PUT POST",
        "Responsibilities Created Technical Design Document",
        "Mastronix",
        "JQuery Html AJAX JSON",
        "Performed",
        "System Requirements",
        "Created",
        "Created UML Use Case Diagrams",
        "Responsibilities Involved",
        "Agile Software Methodology",
        "eVerify DOLETA",
        "Data Analysis and Business Analysis",
        "Implemented Restful API",
        "Worked on Angular",
        "Implemented Video Conference",
        "Angular 2 Created",
        "OpenTok",
        "Jenkins Designed",
        "SAAS Software",
        "Implemented Singleton Abstract Factory Factory",
        "HTML5",
        "Created Data",
        "SQL",
        "Apple Push Notification Servers Created",
        "Flask",
        "Data",
        "XML",
        "TSQL Created Views",
        "Git and Azure Pipelines Developed",
        "Bootstrap Version",
        "Present Description Mastronix",
        "SOAP",
        "Telangana",
        "Washington DC",
        "lPythonspan",
        "Conducting Requirement Analysis Feasibility Studies Risk Analysis",
        "Bootstrap Created",
        "DELETE",
        "FLASK API",
        "Software Development Life Cycle",
        "JWT Interacted",
        "the Web Services Used SOAP UI",
        "Created Angular",
        "PyTest",
        "Automated",
        "Integration",
        "Validate",
        "DWH",
        "CICD",
        "MySql"
    ],
    "experience": "Experience working with MySQL Oracle SQL Server and DB2 RDBMS systems Experience in SQL PLSQL functions and packages Good business understanding and effective at working across multiple teams within an organization Experienced in tuning SQL statements and procedures for enhancing the load performance in various schemas across databases Strong understanding of Normalization Good understanding of Data warehousing concepts like star and snowflake schema and well as fact and dimension tables Strong understanding of DWH concepts like data mining data quality data profiling data cleaning data scrubbing and data validation Load and transform large sets of structured semi structured and unstructured data Exceptionally well organized having strong work ethics and willingness to work hard to achieve employer objectives Authorized to work in the US for any employer Work Experience Python Developer Mastronix Ashburn VA October 2018 to Present Description Mastronix is a SaaS based HR enterprise platform which provides enterprise needs for various small businesses Mastronix helps small businesses to have a place where they could capture certain information about their employees in a simple and effective manner Some of the core features offered by the platform include onboarding employees and contractors automation of employee immigration details integrate seamlessly with external entities such as eVerify DOLETA retrieve documents on the fly for state and federal audits provide recruitment and sales engine and the associated dashboard reporting Responsibilities Created Technical Design Document based on the user requirements and business walk through Worked on AGILE Methodology to meet timelines such as sprint planning sprint participation retro sessions Created all the domain classes and entities required by the business Implemented Singleton Abstract Factory Factory Facade Design patterns Implemented data repositories using unit of work pattern and SqlAlchemy Implemented business logic package using data repositories and domain classes Implemented Restful API using Flask for the end clients consumption Implemented routing in Flask API Implemented token bases authentication using JWT Interacted with EVerify wwwuscisgov WCFservices to verify an employee Created and configured several back end services such as push notification service email service employee entry and exit service using python and deployed in Jenkins Designed and developed views using HTML CSS and Bootstrap Created several angular services and factories using Angular 2 Created several angular html and css components and consumed angular services to fetch and post the data Created Angular services to consume FLASK API for calling API methods like GET PUT POST and DELETE Used Git as version control system Used Git Bash as a client to perform operations such as stage add commit merge cherry pick on the repositories Strictly issued code reviews to the team members Strictly followed CICD pipeline for continuous integration and deployment using Jenkins Involved in biweekly meeting sessions with DEVOPS Agile team Involved in creating the database and identifying the relationships for SAAS Software as a Service kind of data model Worked on stored procedures views triggers explicit transactions temp tables Developed parameterized SQL queries and stored procedures to query database tables in TSQL Created Views by applying complex queries on multiple tables to create the virtual tables and implemented Joins in Stored Procedures to get the desired data by joining multiple tables Created UML Use Case Diagrams Sequence Diagram Class Diagram Process flow Diagram Data Flow Diagram Created Unit tests using PyTest and responsible for writing test scripts and scenarios Responsible for testing fixing the bugs and troubleshooting the technical problems Deployed the application as well as API into Tomcat web server Modified applications according to the users requirements Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Build Server Jenkins Unit Testing PyTest Database SQL Server Python Developer NatyaBharatiOrg Potomac MD June 2016 to June 2017 Description This project is mainly for auditorium booking for different shows and these shows are created dynamically in the admin panel and it consists of a heavy content management system to manage their website content accordingly The mission of the project is to bring the vast richness and diversity of Indian theater to theaterlovers of the Washington DC metropolitan area including the second generation Indians and the community at large To foster the local talent and provide a platform for theater enthusiasts in the community to develop their interest in all aspects of a theater production and management Responsibilities Involved in all the phases of the project Worked on Angular components services and factories Written FLASK API to expose business functions Implemented payment gateway for the ticket bookings Implemented custom algorithms in python for early bird discounts member discounts and seasonal discounts Automated the existing scripts for performance calculations using Numpy and SQL alchemy Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Developed dynamic emails using JavaScript and hand coding of HTML5 and CSS3 Managed developed and designed a dashboard control panel for customers and Administrators using Angular FLASK and MySql Extensively used Python modules such as requests urllib Beautiful soup for web crawling Developed the required XML Schema documents and implemented the framework for parsing XML documents Built various graphs for business decision making using Python matplotlib library Developed a fully automated continuous integration system using Git and Azure Pipelines Developed and executed User Acceptance Testing portion of test plan Used Py Unit framework for performing unit testing Performed testing methodologies like unit testing Integration testing web application testing Responsible for user validations on client side as well as server side Implemented a custom web application for Puff testing in order to test the web requests as well as python code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Interacted with QA to develop test plans from highlevel design documentation Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Devops Azure Piplines Database MySQL Python Developer FCC Inc August 2014 to March 2016 Description The Family Cloud Connect Scheduler EASILY allows your family to share special moments care of a loved one and connect through conferencing and messaging There are three modules involved in this application Share Family Cloud Connect lets you share photos and home movies Your family memories are special and will be accessed only by approved members in their secure family site Care Family Cloud Connect helps family members to manage the care of a Loved One who may be living alone and needs assistance Connect Family Cloud Connect improves family communication with messaging and conferencing Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Created web application using JQuery Html AJAX JSON and JavaScript Implemented REST API for web client mobile client desktop clients Implemented Video Conference system using OpenTok js library Created multithreaded background service for task management Implemented custom scheduler for scheduling the task with family members Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Implemented DAO database access objects Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction Environment Stack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL Education Bachelors Degree JNTU Hyderabad Hyderabad Telangana",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Mastronix",
        "Reston",
        "VA",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "business",
        "requirements",
        "specifications",
        "testing",
        "applications",
        "production",
        "support",
        "Web",
        "application",
        "Python",
        "Angular",
        "Flask",
        "JavaScript",
        "AJAX",
        "HTML",
        "template",
        "languages",
        "years",
        "experience",
        "data",
        "analysis",
        "collection",
        "cleaning",
        "analyzing",
        "visualization",
        "data",
        "business",
        "solutions",
        "Conducting",
        "Requirement",
        "Analysis",
        "Feasibility",
        "Studies",
        "Risk",
        "Analysis",
        "Adaptability",
        "Studies",
        "Base",
        "Acceptance",
        "Criteria",
        "Deliverables",
        "experience",
        "Data",
        "Analysis",
        "Business",
        "Analysis",
        "Experience",
        "MySQL",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "RDBMS",
        "systems",
        "Experience",
        "SQL",
        "PLSQL",
        "functions",
        "business",
        "understanding",
        "teams",
        "organization",
        "SQL",
        "statements",
        "procedures",
        "load",
        "performance",
        "schemas",
        "understanding",
        "Normalization",
        "understanding",
        "Data",
        "warehousing",
        "concepts",
        "star",
        "snowflake",
        "schema",
        "fact",
        "dimension",
        "understanding",
        "DWH",
        "concepts",
        "data",
        "mining",
        "data",
        "quality",
        "data",
        "data",
        "data",
        "scrubbing",
        "data",
        "validation",
        "Load",
        "sets",
        "data",
        "work",
        "ethics",
        "willingness",
        "employer",
        "objectives",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Mastronix",
        "Ashburn",
        "VA",
        "October",
        "Present",
        "Description",
        "Mastronix",
        "SaaS",
        "HR",
        "enterprise",
        "platform",
        "enterprise",
        "needs",
        "businesses",
        "Mastronix",
        "businesses",
        "place",
        "information",
        "employees",
        "manner",
        "core",
        "features",
        "platform",
        "employees",
        "contractors",
        "automation",
        "employee",
        "immigration",
        "details",
        "entities",
        "eVerify",
        "DOLETA",
        "documents",
        "fly",
        "state",
        "audits",
        "recruitment",
        "sales",
        "engine",
        "associated",
        "dashboard",
        "Responsibilities",
        "Technical",
        "Design",
        "Document",
        "user",
        "requirements",
        "business",
        "Worked",
        "AGILE",
        "Methodology",
        "timelines",
        "sprint",
        "planning",
        "sprint",
        "participation",
        "retro",
        "sessions",
        "domain",
        "classes",
        "entities",
        "business",
        "Singleton",
        "Abstract",
        "Factory",
        "Factory",
        "Facade",
        "Design",
        "patterns",
        "data",
        "repositories",
        "unit",
        "work",
        "pattern",
        "SqlAlchemy",
        "business",
        "logic",
        "package",
        "data",
        "repositories",
        "domain",
        "classes",
        "API",
        "Flask",
        "end",
        "clients",
        "consumption",
        "Flask",
        "API",
        "token",
        "bases",
        "authentication",
        "JWT",
        "EVerify",
        "WCFservices",
        "employee",
        "end",
        "services",
        "notification",
        "service",
        "email",
        "service",
        "employee",
        "entry",
        "exit",
        "service",
        "python",
        "Jenkins",
        "Designed",
        "views",
        "HTML",
        "CSS",
        "Bootstrap",
        "services",
        "factories",
        "Angular",
        "html",
        "css",
        "components",
        "services",
        "data",
        "Angular",
        "services",
        "FLASK",
        "API",
        "API",
        "methods",
        "PUT",
        "POST",
        "DELETE",
        "Git",
        "version",
        "control",
        "system",
        "Git",
        "Bash",
        "client",
        "operations",
        "stage",
        "merge",
        "cherry",
        "pick",
        "repositories",
        "code",
        "reviews",
        "team",
        "members",
        "CICD",
        "pipeline",
        "integration",
        "deployment",
        "Jenkins",
        "meeting",
        "sessions",
        "DEVOPS",
        "team",
        "database",
        "relationships",
        "SAAS",
        "Software",
        "Service",
        "kind",
        "data",
        "model",
        "procedures",
        "views",
        "transactions",
        "temp",
        "Developed",
        "SQL",
        "queries",
        "procedures",
        "database",
        "tables",
        "TSQL",
        "Views",
        "queries",
        "tables",
        "tables",
        "Joins",
        "Stored",
        "Procedures",
        "data",
        "tables",
        "UML",
        "Use",
        "Case",
        "Diagrams",
        "Sequence",
        "Diagram",
        "Class",
        "Diagram",
        "Process",
        "Diagram",
        "Data",
        "Flow",
        "Diagram",
        "Created",
        "Unit",
        "tests",
        "PyTest",
        "test",
        "scripts",
        "scenarios",
        "testing",
        "bugs",
        "problems",
        "application",
        "API",
        "Tomcat",
        "web",
        "server",
        "applications",
        "users",
        "requirements",
        "Environment",
        "Stack",
        "Python",
        "FLASK",
        "Angular",
        "JavaScript",
        "Html",
        "Css",
        "Bootstrap",
        "Version",
        "Control",
        "Git",
        "Build",
        "Server",
        "Jenkins",
        "Unit",
        "Testing",
        "PyTest",
        "Database",
        "SQL",
        "Server",
        "Python",
        "Developer",
        "Potomac",
        "MD",
        "June",
        "June",
        "Description",
        "project",
        "auditorium",
        "booking",
        "shows",
        "shows",
        "admin",
        "panel",
        "content",
        "management",
        "system",
        "website",
        "content",
        "mission",
        "project",
        "richness",
        "diversity",
        "theater",
        "theaterlovers",
        "Washington",
        "DC",
        "area",
        "generation",
        "Indians",
        "community",
        "talent",
        "platform",
        "theater",
        "enthusiasts",
        "community",
        "interest",
        "aspects",
        "theater",
        "production",
        "management",
        "Responsibilities",
        "phases",
        "project",
        "components",
        "services",
        "factories",
        "FLASK",
        "API",
        "business",
        "functions",
        "payment",
        "gateway",
        "ticket",
        "bookings",
        "custom",
        "algorithms",
        "python",
        "bird",
        "discounts",
        "member",
        "discounts",
        "discounts",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "SQL",
        "alchemy",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "emails",
        "JavaScript",
        "hand",
        "coding",
        "HTML5",
        "CSS3",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Angular",
        "FLASK",
        "MySql",
        "Python",
        "modules",
        "requests",
        "soup",
        "web",
        "Developed",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "integration",
        "system",
        "Git",
        "Azure",
        "Pipelines",
        "Developed",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "test",
        "plan",
        "Py",
        "Unit",
        "framework",
        "unit",
        "Performed",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "custom",
        "web",
        "application",
        "Puff",
        "testing",
        "order",
        "web",
        "requests",
        "python",
        "code",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Environment",
        "Stack",
        "Python",
        "FLASK",
        "Angular",
        "JavaScript",
        "Html",
        "Css",
        "Bootstrap",
        "Version",
        "Control",
        "Git",
        "Devops",
        "Azure",
        "Piplines",
        "Database",
        "MySQL",
        "Python",
        "Developer",
        "FCC",
        "Inc",
        "August",
        "March",
        "Description",
        "Family",
        "Cloud",
        "Scheduler",
        "EASILY",
        "family",
        "moments",
        "care",
        "modules",
        "application",
        "Share",
        "Family",
        "Cloud",
        "Connect",
        "photos",
        "home",
        "movies",
        "family",
        "memories",
        "members",
        "family",
        "site",
        "Care",
        "Family",
        "Cloud",
        "Connect",
        "family",
        "members",
        "care",
        "Loved",
        "One",
        "assistance",
        "Family",
        "Cloud",
        "Connect",
        "family",
        "communication",
        "Responsibilities",
        "System",
        "Requirements",
        "User",
        "requirements",
        "business",
        "design",
        "document",
        "End",
        "End",
        "implementation",
        "project",
        "project",
        "architecture",
        "diagram",
        "engineering",
        "specification",
        "OOA",
        "OOD",
        "Rational",
        "Rose",
        "Enterprise",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Collaboration",
        "Sequence",
        "Diagrams",
        "State",
        "Diagrams",
        "Data",
        "Modeling",
        "application",
        "logic",
        "Python",
        "Java",
        "script",
        "Java",
        "JMS",
        "Mailing",
        "plans",
        "Google",
        "Push",
        "Notifications",
        "Server",
        "Apple",
        "Push",
        "Notification",
        "Servers",
        "web",
        "application",
        "JQuery",
        "Html",
        "AJAX",
        "JSON",
        "JavaScript",
        "REST",
        "API",
        "web",
        "client",
        "client",
        "desktop",
        "clients",
        "Video",
        "Conference",
        "system",
        "OpenTok",
        "js",
        "library",
        "background",
        "service",
        "task",
        "management",
        "custom",
        "scheduler",
        "task",
        "family",
        "members",
        "Data",
        "layer",
        "MYSQL",
        "data",
        "Python",
        "scripts",
        "PLSQL",
        "packages",
        "Java",
        "application",
        "Media",
        "management",
        "Debugging",
        "testing",
        "applications",
        "tuning",
        "performance",
        "maintenance",
        "support",
        "production",
        "environment",
        "DAO",
        "database",
        "access",
        "collections",
        "Python",
        "user",
        "objects",
        "build",
        "deployment",
        "process",
        "application",
        "setup",
        "user",
        "experience",
        "integration",
        "system",
        "products",
        "Deployment",
        "application",
        "Web",
        "logic",
        "testing",
        "development",
        "team",
        "Validate",
        "test",
        "content",
        "IOS",
        "Android",
        "emulators",
        "Consumed",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "design",
        "document",
        "SOAP",
        "rule",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "service",
        "JIRA",
        "project",
        "application",
        "changes",
        "accordance",
        "client",
        "requirement",
        "client",
        "interaction",
        "Environment",
        "Stack",
        "Python",
        "Open",
        "Tok",
        "Custom",
        "Scheduler",
        "Js",
        "JQuery",
        "JavaScript",
        "Html",
        "Css",
        "Bootstrap",
        "Version",
        "Control",
        "Git",
        "Database",
        "MySQL",
        "Education",
        "Bachelors",
        "Degree",
        "JNTU",
        "Hyderabad",
        "Hyderabad",
        "Telangana"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:50:42.970093",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Mastronix Reston VA Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and agile methodologies Worked through all phases of Software Development Life Cycle SDLC which includes gathering and analyzing business requirements functionaltechnical specifications designing developing testing deploying the applications and providing production support Built Web application using Python Angular Flask JavaScript AJAX HTML and template languages 3 years of experience of data analysis in collection cleaning analyzing and visualization of data for driving business solutions Conducting Requirement Analysis Feasibility Studies Risk Analysis and Adaptability Studies Base lining Acceptance Criteria and Deliverables Diversified experience in Data Analysis and Business Analysis Experience working with MySQL Oracle SQL Server and DB2 RDBMS systems Experience in SQL PLSQL functions and packages Good business understanding and effective at working across multiple teams within an organization Experienced in tuning SQL statements and procedures for enhancing the load performance in various schemas across databases Strong understanding of Normalization Good understanding of Data warehousing concepts like star and snowflake schema and well as fact and dimension tables Strong understanding of DWH concepts like data mining data quality data profiling data cleaning data scrubbing and data validation Load and transform large sets of structured semi structured and unstructured data Exceptionally well organized having strong work ethics and willingness to work hard to achieve employer objectives Authorized to work in the US for any employer Work Experience Python Developer Mastronix Ashburn VA October 2018 to Present Description Mastronix is a SaaS based HR enterprise platform which provides enterprise needs for various small businesses Mastronix helps small businesses to have a place where they could capture certain information about their employees in a simple and effective manner Some of the core features offered by the platform include onboarding employees and contractors automation of employee immigration details integrate seamlessly with external entities such as eVerify DOLETA retrieve documents on the fly for state and federal audits provide recruitment and sales engine and the associated dashboard reporting Responsibilities Created Technical Design Document based on the user requirements and business walk through Worked on AGILE Methodology to meet timelines such as sprint planning sprint participation retro sessions Created all the domain classes and entities required by the business Implemented Singleton Abstract Factory Factory Facade Design patterns Implemented data repositories using unit of work pattern and SqlAlchemy Implemented business logic package using data repositories and domain classes Implemented Restful API using Flask for the end clients consumption Implemented routing in Flask API Implemented token bases authentication using JWT Interacted with EVerify wwwuscisgov WCFservices to verify an employee Created and configured several back end services such as push notification service email service employee entry and exit service using python and deployed in Jenkins Designed and developed views using HTML CSS and Bootstrap Created several angular services and factories using Angular 2 Created several angular html and css components and consumed angular services to fetch and post the data Created Angular services to consume FLASK API for calling API methods like GET PUT POST and DELETE Used Git as version control system Used Git Bash as a client to perform operations such as stage add commit merge cherry pick on the repositories Strictly issued code reviews to the team members Strictly followed CICD pipeline for continuous integration and deployment using Jenkins Involved in biweekly meeting sessions with DEVOPS Agile team Involved in creating the database and identifying the relationships for SAAS Software as a Service kind of data model Worked on stored procedures views triggers explicit transactions temp tables Developed parameterized SQL queries and stored procedures to query database tables in TSQL Created Views by applying complex queries on multiple tables to create the virtual tables and implemented Joins in Stored Procedures to get the desired data by joining multiple tables Created UML Use Case Diagrams Sequence Diagram Class Diagram Process flow Diagram Data Flow Diagram Created Unit tests using PyTest and responsible for writing test scripts and scenarios Responsible for testing fixing the bugs and troubleshooting the technical problems Deployed the application as well as API into Tomcat web server Modified applications according to the users requirements Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Build Server Jenkins Unit Testing PyTest Database SQL Server Python Developer NatyaBharatiOrg Potomac MD June 2016 to June 2017 Description This project is mainly for auditorium booking for different shows and these shows are created dynamically in the admin panel and it consists of a heavy content management system to manage their website content accordingly The mission of the project is to bring the vast richness and diversity of Indian theater to theaterlovers of the Washington DC metropolitan area including the second generation Indians and the community at large To foster the local talent and provide a platform for theater enthusiasts in the community to develop their interest in all aspects of a theater production and management Responsibilities Involved in all the phases of the project Worked on Angular components services and factories Written FLASK API to expose business functions Implemented payment gateway for the ticket bookings Implemented custom algorithms in python for early bird discounts member discounts and seasonal discounts Automated the existing scripts for performance calculations using Numpy and SQL alchemy Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Developed dynamic emails using JavaScript and hand coding of HTML5 and CSS3 Managed developed and designed a dashboard control panel for customers and Administrators using Angular FLASK and MySql Extensively used Python modules such as requests urllib Beautiful soup for web crawling Developed the required XML Schema documents and implemented the framework for parsing XML documents Built various graphs for business decision making using Python matplotlib library Developed a fully automated continuous integration system using Git and Azure Pipelines Developed and executed User Acceptance Testing portion of test plan Used Py Unit framework for performing unit testing Performed testing methodologies like unit testing Integration testing web application testing Responsible for user validations on client side as well as server side Implemented a custom web application for Puff testing in order to test the web requests as well as python code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Interacted with QA to develop test plans from highlevel design documentation Environment Stack Python 36 FLASK Angular 2 JavaScript Html Css Bootstrap Version Control Git Devops Azure Piplines Database MySQL Python Developer FCC Inc August 2014 to March 2016 Description The Family Cloud Connect Scheduler EASILY allows your family to share special moments care of a loved one and connect through conferencing and messaging There are three modules involved in this application Share Family Cloud Connect lets you share photos and home movies Your family memories are special and will be accessed only by approved members in their secure family site Care Family Cloud Connect helps family members to manage the care of a Loved One who may be living alone and needs assistance Connect Family Cloud Connect improves family communication with messaging and conferencing Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Created web application using JQuery Html AJAX JSON and JavaScript Implemented REST API for web client mobile client desktop clients Implemented Video Conference system using OpenTok js library Created multithreaded background service for task management Implemented custom scheduler for scheduling the task with family members Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Implemented DAO database access objects Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction Environment Stack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL Education Bachelors Degree JNTU Hyderabad Hyderabad Telangana",
    "unique_id": "d89eb615-9068-438d-b8e9-f1f21067f2fc"
}