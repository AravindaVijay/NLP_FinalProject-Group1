{
    "clean_data": "Sr JavaJ2EE Developer Srspan lJavaspanJ2EE span lDeveloperspan Sr JavaJ2EE Developer Autonation New York NY 8 Years of IT professional experience with full project development implementation and deployment on WindowsUnix using JAVAJ2EE technology stack Good knowledge of designing deploying and operating highly available scalable and fault tolerant systems using Amazon Web Services AWS Experience in implementing JAVAJEE design patterns such as MVC Singleton Factory Session Faade and Business Delegate Experience in Object oriented analysis designdevelopment methodologies UML Use Cases Sequence Page Flow and Class Diagrams Extensive experience with both core and advanced Java technologies which includes Core Java XML JavaScript JEE JSP EJB 2030 JDBC Struts Servlets JMS JSF My Faces Rich Faces Prime Faces and Ice Faces JPA JAXWS JAX_RS Spring and Hibernate Extensive knowledge and implementation skills in Spring MVC and JSF MVC frameworks Experience in implementing Spring Core AOP JDBC MVC and ORM modules Strong programming skills using Java1716 Spring Hibernate JPA 2 JTA JNDI JSP Servlets Java Beans JSTL JDBC Participated in Architect and design of the components using a distributed architecture on AWS cloud platform Extensive knowledge in using JavaScript frameworks such as JQuery AngularJS ember JS and DOJO Very good working knowledge in spring Hibernate and Struts frameworks Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Extensive experience in working on projects with Waterfall and agile methodologies such as Test Driven Development TDD and SCRUM Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Expertise in clientside design and validations using HTML DHTML CSS Java Script JSP Provided Trouble shooting and Integration Maintenance Support on 24x7 basis for MQ and Websphere Message Broker Systems Proven knowledge in one or more NoSQL Document Store databases such as MongoDB Implemented JMS and JTAPI for all Mobile Platforms Experience in working on projects with MultiThreading Collections Framework and Generic Data Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Expertise in using Behaviour Data Driven BDD Cucumber framework Designed business applications using web technologies like NodeJS React JS HTML45 XHTML and CSS23 Bootstrap based on the W3C standards Strong Hands on Experience with IBM MQ Series and JMS for communications between middleware components Hands on experience with various Application Servers and Web Servers including IBM Web Sphere BEA Web logic JBoss Tomcat server with wide variety of development tools such as Eclipse IBM RAD RSA My Eclipse and Experience in RDBMS concepts knowledge and worked with MySQL Sybase Oracle 10g and DB2 Proficient in SQL and wrote Stored Procedures Triggers besides writing DDL DML and transaction queries with development tools like TOAD and Aqua Data Studio Expertise knowledge in building applications using Rational Unified Process RUP UML and OOAD Involved in presentations and demos for the developed microservices framework Involved in developing Test plans Test Cases ManualAutomated Test Procedures and whitebox and blackbox testing Written SQL queries PLSQL Stored Procedures Functions and Triggers in databases like MySQL SQL Server and Oracle Worked with version control tools such as CVS SVN and GIT for management of software systems Experience in working with IDEs like Eclipse Spring Tool Suite Net Beans and IntelliJ IDEA Experienced in implementing Enterprise Applications with full life cycle of software development Experience in working with AWS Amazon Web Services EC2 RDS Dynamo DB S3 Cloud Formation Templates Experience in using Log4J Version Control using SVN GIT and CVS Experience with unit testing using Junit and writing build scripts using ANT and Maven Worked on different OS UNIX Sun Solaris AIX Linux Windows7 and Windows XP Good team player with ability to solve problems organize and prioritize multiple tasks Work Experience Sr JavaJ2EE Developer Autonation Rye NY October 2017 to Present Project Description In this project considering the fact regarding car collisions that occur in the daily life This application represents the different aspects that can be taken into consideration for fixing the cars So in this application we worked on the application to order the parts of the car that are damaged during the collision between the parts supplier and collision centres Responsibilities Worked on application architecture and redesign of different parts of the application Developed applications using JAVA 8 spring boot Apache Camel and Oracle Worked to secure our RESTful web services using OAuth 20 with spring security to authenticate any third party requests coming in Automated build process through Mavenbuild Framework Used Git to maintain the version of the files and took the responsibility to do the code merges and creating new branch when new feature implementation starts Used Software Configuration Management SCM tools like CVS VSS Visual Source Safe SVN TFS Java Build tools like Apache Ant Maven Used Eclipse Rich Client Platform RCP for the development of the project Involved in developing front end screens using JSP Groovy JSTL JQuery XSLT DHTML HTML5 CSS AJAX CSS3 and JavaScript Also involved in adding the Internationalization to the existing application Installed configured and deployed the applications on WebSphere Portal and Application Serve with SOA Governance Involved in reviewing and assessing current infrastructure to be migrated to the AWS cloud platform Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Implemented and maintained the monitoring and alerting of production corporate servers and storage using AWS Cloud Watch for efficiency Used POSTMAN client for testing developed Web services and written JUnit class for testing API layer and Service Layer to accomplish TDD approach Implemented WebServices to integrate between different applications components using Restful Implemented the REST APIs and data transformers using the JAVA connector which involves use of JAVA 18 features like Lambda and Streams in particular Setup the Continuous Integration CI process for the application using the Jenkins Worked on Log4j to validate functionalities and JUnit for unit testing Worked with a team involved in developing the frontend UI layout using HTML5 CSS3 JQuery JavaScript and AngularJS Configured AWS Identity Access Management IAM Group and users for improved login authentication Used Angular 2 HTTP Client to Interact with Serversbackend and modularized the Application with NgModule Created Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security Developed Apache Camel endpoints and used producer template to route messages to JMS queues Environment JAVA 8 spring boot Apache Camel Oracle AngularJS Angular 2 JQuery HTML5 CSS3 spring AOP Log4j GitHub Maven Postman J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 OAuth 20 Sr JavaJ2EE Developer Carscom Chicago IL August 2015 to September 2017 Project Description Consideration the fact of number of visits every month to Carscom which is the leading online destination for the shoppers and owners This project indicates the credible and also the easytounderstand information that can help the users to research price quality service repair providers and also search for the other inventory Responsibilities The Design and development of this project is done using the Agile Scrum Methodology through which we can break down the project into several sprints The whole project is developed in the MVC application according to the requirements of the user which is done mainly by using Spring MVC Jquery AngularJS JSP JSTL HTML and CSS The Design and Architecture of the project is discussed and the technology stack suited for the project is chosen for the development Designed and implemented the UI using HTML JSP JavaScript AJAX and JQuery and AngularJS Working on designing and building micro services Microservices has been built using spring boot Mongo spring security and deployed to pivotal cloud foundry The validation is written in Spring Validators and the configured dispatch servlet and tiles view resolver for Spring MVC Developed various Spring Rest Controllers for the request mapping and created JSP custom tag libraries for the application The implementation of the business logic is done using spring service layer and Spring DAO layer using Spring Framework 32 Configuration of spring declarative transaction manager and implementation of transaction management in DAO layer Given major contribution in client side coding using Angularjs framework and Reactjs framework Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Enhanced legacy application by building new components in Angular 2 and typescript React JS was used to build application that updates constantly over time Integrated spring and Hibernate configured logging using log4j and the the development of exception handling is done for the Application Data retrievals are written in Hibernate Criteria and performed in the ORM mapping to map the Java entities to database tables Implemented MultiThreading for expanding the productivity of existing process Experience in built web services using spring and CXF operating within ESB offering REST AWS and SOAP interfaces Build SOAP Web Services based on AWS Amazon Web Services JTAPI is developed for auto generation of voice calls to all Mobile Platforms using JAVA voicent Framework Web pages are developed by using spring tag library JSP custom tags ember JS plugins and ember JS UI components JUnit test cases are written to test the spring DAO layer and created Batch Services to generate reports using Spring Batch Hibernate 3 is used for accessing and persisting the data between the Java objectsclasses and a relational database Server side Micro services development in spring Performed MQ Series administrative functions and 24X7 production supports Performed MQ installations and fix pack initiations and upgrades Implemented Java programming while building microservices using Spring Integration and RESTful Configured JMS connection factories and message brokers in JBoss and also participated in building and promoting the application to other environments Wrote Spring JMS message liteners to consume JMS messages coming from external applications using JMS Template Developed HQL queries for reports and also Criteria queries to get the data in the Data tables using MySQL Implemented flux pattern by using React Redux framework Used Subversion for software configuration management and version control Involved in Unit Integration Testing of the application The application is supported on different environments from Test to Production Environment analyzed and fixed the errors assigned to me by the users of the application Used Jenkins AWS Code Deploy plugin to deploy the application into AWS cloud Environment J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 Windows 7 Sub Version Rally Eclipse Kepler AJAX JavaJ2EE Developer Master Card St Louis MO January 2014 to July 2015 Project Description MasterCard Worldwide is an American Multinational financial service corporation in which the business is to process payments between the Merchants Banks and the card issuing banks or credit unions of the purchasers Responsibilities Design and Development of the application is done by using Agile Methodology and followed TDD and Scrum Developed the Product Builder UI screens using AngularJS Developed AngularJS components such as controllers Services filters models and used Http service for rest service invocation Creating custom use modules and components which extend the elements and modules of core AngularJS Used React JS for templating for faster compilation and developing reusable components Worked on props refs and wiring the components with React router Developed custom directives for simultaneous file uploads and created Angular JS services to consume in controllers Implement the JavaScriptJQuery frameworks such as React JS Node JS for MVWMVC framework Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack Configured routing in the single page application promoting rich user experience Designed and developed the Simulator API for Amazon S3 Maintained AWS infrastructure and developed back end services Used AWS SQS with JMS API for asynchronous communication by keeping messages in the Message queue Developed unit testing for angular components using Mocha Chai Gulp Karma Istanbul and Protractor Created custom angular filters to filter the data based on user selection in bootstrap dropdowns Implemented angular form validations and used bootstrap to show error warning and info messages Configured spring security in the application with LDAP Template and access controls using Spring security annotations based on user roles Developed Spring Jersey resources for various HTTP methods and to send the requested data in JSON format to the web interface Implemented AngularJS filter to make the data searchable and sortable Used Angular JS framework for building webapps and is highly efficient with PHP framework Developed frontend code with Ajax call in AngularJS and jquery to retrieve data as JSON Object from controllers in backend RESTful Server then display the well organized result in web pages by writing AngularJS controller directives services and route providers Created Collections and documents and performed CRUD operations with Mongo repositories Developed API using Nodejs to allocate access to data in SQL MongoDB Written variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Developed ORM mappings using Hibernate and wrote Criteria Named and HQL queries for data retrievals in the DAO layer Wrote effective JavaScript Code for React JS and Node JS applications for interacting with server and Network applications Implemented JAX Web services by applying SOA concepts in conjunction with SOAP Used Web Services for sending and getting data from different applications using WSDL messages such as task details from Work distribution getting the status on the same etc Used Apache AXIS on Eclipse Web Tools platform for developing creating the Web Services Integrated with Spring IOC while implementing Web services Created Nodejs Express server combined with Socketio to build MVC framework from AngularJS Front End to MongoDB Back End to provide chatting service Used spring declarative transaction management and Spring Batch and scheduling for backend data processing Implemented Normalization rules using regular expressions for minor parties Implemented RESTFul web services API using HTTP and REST principles Created features including Single Sign On with existing client website and a REST API to expose manipulation functionality to external clients using AngularJS Built Restful API server to achieve CRUD operations for posts using Jersey JAXRS JSON spring REST using MEAN stack MongoDB Express AngularJS Nodejs Technologies Works with business analysts and coordinates with them to make sure the data is being populated properly Involved in writing JUNIT test cases and day to day builds and deployments using MAVEN and Jenkins Involved in working updating and closing the tasks created in Microsoft Team Foundation Server Involved in converting the docket conversion system is to into XML that can be loaded into the Novus system Worked with WAS admin to deploy applications on Web sphere Application Server Involved in Parsing the HTML and ENCRYPTED Data in to readable format and generate XML Used Nodejs for creating event driven frameworks in scalable networks Formulated template with JSON data from Rest API endpoint using AngularJS routing services and used its Cache services in it Involved in AWS and Pivotal Cloud Foundry scanner integration design discussions Worked with AEM team to administer environments to ensure configuration is optimized as per requirements Did the application support on different environments from QA to Production Involved in Writing and Executing SQL Scripts and responsible for fixing the issues and monitoring it to make sure it releases in time Day to Day Scrum meetings to update and discuss issues Involved in fixing the bugs biweekly iteration and publishing the Dockets to all Environments Environment Java18 JQuery Spring 4 Spring boot AngularJS 13 React JS Nodejs AngularUI Jersey Mocha Chai Karma Istanbul Gulp AWS EC2 Ldap Hibernate Agile Websphere Oracle11g Unix Eclipse Brackets TFS SQL Maven Jenkins NoSQL Pivotal Cloud Foundry Mongo DB Webservices JUnit Sr Java Developer First Federal Bank Defiance OH June 2012 to December 2013 Project Description One of the 20 largest independent bank holding companies in USA is First Federal Bank Corporation with more than 750 branches free account access at more than 1800 Federal Bank places It maintains variety of products including lines of credit demand noted term notes letters of credit It also deals with Collateral information such as vehicles mortgages and trust accounts Responsibilities Designed and developed the application using agile methodology and followed TDD Scrum pair programming Wrote Technical design document with the class sequence activity diagrams in each use case Designed dynamic and browser compatible pages using Jquery JavaScript and Angular JS Implemented J2EE design patterns such as Session Facade Factory DAO and DTO Worked with Angular JS MVC framework including authoring complex directives services controllers and filters Customized Angular JS filters in several locations to get the required output Implemented Angular Controllers to maintain each view data Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Integrated the service call with UI using http and resources which are substitutes for AJAX in angular Developed various reusable Helper and Utility classes that are used across all the modules of the application Designed and developed Business components and Integrated with Spring framework Wrote data Components for Plan Setup wrote and called StoredProcedures using Java HQL Hibernate Involved in configuring and integrating spring and Hibernate frameworks Involved in design and implementation of MVC architecture in different modules Responsible for writing utility classes UI development using JSP CSS3 HTML JavaScript Angular Integrated business layer using Hibernate with Spring DAO Used Angular JS Factories and Services to make Ajax calls or Restful Calls to get data in JSON Format Used Angular JS Directives like ngapp ngmodel nginit for initialization of Angular JS application data Played key role in the design and development of application using J2EE and Rest web service Jersey frameworks for Service Oriented Architecture SOA with JSON Responsible for working on consuming and producing SOAWeb Services Designed and Developed web services using JAXWS SOAP JAXB Apache CXF Exposing and consuming the web services to the downstream applications using Apache CXF and Apache camel Used AngularJS http ngResources services for accessing content from Rest web services provided custom services to integrate database with view pages along with pagination Sorting of data deep linking AngularJS route service Implemented Angular JS Service layer with utility functions to get data from back end using Rest based service calls and pass back to Angular Controllers Designing user Interface using Angular UI components such as tabs grids dropdowns etc and configured the routing service using AngularJS router Developed REST service documentation using Swagger UI and developed test cases using Junit and Mockito framework Developed REST exception handling controller advices to respond to bad requests and server side exceptions Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Created Restful APIs in Express and returned logic through AngularJS data binding Used MongoDB to import the data into and feed into web services and displayed it onto the browser Used Spring Batch to build the POJObased development approach of the Spring Framework Wrote the DAOs to access the database using JDBC calls Involved in writing REST Web services in GroovyGrails wrapped by Jersey JAXRS Involved in using JPA Java Persistence API frameworks and APIs such as JDO Java Data Objects and Hibernate Implemented Spring Bean Factory to create proxied object using AOP framework Used AngularJS Global API to perform tasks like Comparing objects Iterating objects and Converting data Performed document and collection mappings with Spring and MongoTemplate Implemented SOA architecture with Web Services using SOAP WSDL and XML Designed developed LDAP Authentication Authorization Service using Java LDAP JNDI Involved in transforming XML data in to Java Objects using a JAXB binding tool Responsible for configuring and deploying the builds on Tomcat Web Server Involved in the Performance Tuning of the Application on client side Used Angular JS http service to read data from remote servers Worked on JavaScript framework to augment browser based applications with MVC capability Involved in developing HTML and JavaScript for client side presentation and data validation within the forms Wrote notification service that executes daily sends emails and escalations to participants Involved in Unit Integration Testing for different Modules in the application Wrote build deployment scripts using ANT Maven shell scripts and JACL on unix env Used Oracle Coherence in Java Collection API to access and modify data and the JavaBean event model to receive data change notifications Did the application support on different environments from QA to Production Was responsible for analyzing the issues providing technical functional support to the users and fix them Environment Java J2EE Spring ORM React JS Spring IOC NodeJS Spring AOP POJO Data Sources SOAP WSDL Hibernate HQL XML MySQL JBOSS CVS Eclipse IDE JUnit UNIX JavaJ2EE Developer Inovalon Bowie MD November 2010 to May 2012 Project Description It has an exhaustive product that addresses entire gamut of automation needs of the Hospital and comprises of the following activities InPatient OutPatient Administration Lab and other Clinical Investigations Pharmacy General Inventory and Purchasing PayRoll HR Administration tenancy of General and Biomedical equipment Financial Accounting and Billing HouseKeeping Ward management ICU and OT administration Marketing Health Services Responsibilities Participated in coding GUI design and testing Validation of the registered users using JSPServlets and JDBC with the details available in the Database Created documentation of the application Developed Servlets and JSP for Data retrieval implementation with User Interface Struts were employed to develop the web applications JBoss Fuse was the SOA architecture employed Developed Container Managed Entity and Session beans Developed web services in Java and Experienced with Service Oriented Architecture Protocol WSDL JDBC with SQLPLSQL for database connectivity Developed required Web pages using HTML Implemented EJB Components for modules related to Pharmacy Purchasing and General and Biomedical equipment Used ExtJS Java datascript Involved in Different J2EE Design patterns like Session Faade Service Locator and Business Delegate Coded Server pages using JSP Servlets Struts by following MVC architecture Developed Action Classes and Action Forms beans Worked with the team in the development of the Application frontend using JSP STRUTS with the help of HTML Involved in the integration performance and unit testing of the project Involved in the Performance related issues like open connections and open cursors Environment WebSphere 60 SQL JDBC Java EJB Servlets spring JSP HTML Hibernate JavaScript JUnit Ant Oracle 10g and Windows XP Java Developer Unit Testing Hyderabad Telangana February 2009 to October 2010 Responsibilities System Requirements gathering for the project Preparation of the Detailed Design document for the project by developing business process flows requirements definition use cases and object model Designed and implemented a GUI framework for Swing Developers using the framework define actions popup menus in XML the framework builds the graphical components Designed the class diagrams and sequence diagrams Developed the presentation layer and GUI framework that are written using JSP and clientside validations were done using JavaScript Developed the application using Struts framework Created strutsconfig file and resource bundles for Distribution module using Struts Framework Implemented Action Form classes Action classes for the entire Reports module using Struts framework Use MVC architecture Creation Test plan Development and coding of Test classes and Test Cases Execution of Test cases in Jbuilder Defect fixing Client communication Query resolution Testing of the product Unit Testing Regression Testing and Integration Testing Used Eclipse as the IDE and Struts Framework for developing the application Developed the JSPs for the application Used UNIX shell scripts to automate build processes Worked on core java for multithreading arrays and GUI AWT Environment Java J2SE50 Struts Servlets JSP Eclipse Oracle 8i XML HTMLDHTML Jbuilder Education Bachelors Bachelors Skills JAVA 9 years TESTING 9 years ECLIPSE 7 years JSP 7 years XML 7 years Java J2Ee Spring J2Ee Hibernate Rest Additional Information Technical Skills Languages Java J2EE C C SQL Python Java Technologies Core Java Collections JDBC Multithreading AWT JSP Servlets JSTL JNDI Ajax EJB JMS Java Beans Custom Tags RMI JCAPS Design Patterns Frameworks Spring Struts Hibernate SPRING 30 HIBERNATE 30 WEB SERVICES SOAP AND REST LOG4J JUNIT JSF Application Server IBM WebSphere Apache Tomcat Glass Fish JBoss Web Logic TPT CXL Web services SOAP WSDL JAXWS UDDI REST JAXRS Micro Services APACHE CXF AXIS XFire WebApplication Tools XML XSD JMS Servlets JSTL EL Custom Tag Library JSP JSF JNDI JPA JAXB Database DB2 Oracle SQL Server MySQL PostgreSQL Squirrel Cassandra Stored Procedures Scripting Language HTML5 XML SAX DOM XSLXSLT XPATH Java Script JQuery Ajax EXT JS Angular JS Angular 2 ReactJS RedUx Nodejs Core Expertise Java GOF and J2EE design patterns Core Java concepts Collections Java 15 features Multithreading Exception handling IO Concurrency Multithreading Generics Serialization JDBC java 18 Lambda expression Etc Version control Tools CA Harvest CVS SVN IBM clear case Build Tools Ant Maven Jenkins Cruise Control Other Tools Log4J TOAD SQL developer HP Quality Center Cloud Foundry AWS Amazon Web Services JIRA EMMA Autopsys SOAP UI IBM MQ FileZilla Putty Edit Plus IDEs Spring Tool Suite Maven Eclipse IDE NetBeans RAD WSAD JBuilder JDeveloper Visual StudioNET Toad Putty JUnit Log4j Logging Frameworks Log4j Java Logging API SLF4J Testing Tools Junit JMeter Quality Center SOAPUI UML Tools Rational Rose MS Visio Operating Systems Solaris Red hat Linux Mac and Windows",
    "entities": [
        "Protractor Created",
        "Database Created",
        "Oracle SQL Server",
        "Angular Controllers Designing",
        "IDE",
        "Test Driven Development TDD",
        "Nodejs Technologies Works",
        "Novus",
        "building micro services Microservices",
        "ORM",
        "Microsoft Team Foundation Server Involved",
        "GroovyGrails",
        "GUI",
        "Nodejs",
        "Aqua Data Studio Expertise",
        "Developed Action Classes and Action Forms",
        "Maven Worked",
        "UNIX",
        "Oracle Worked",
        "Jersey",
        "HTTP",
        "Spring IOC",
        "Hibernate Implemented Spring Bean Factory",
        "Comparing",
        "Hibernate Extensive",
        "InPatient OutPatient Administration Lab",
        "Developed Container Managed Entity and Session",
        "Distribution",
        "JSON",
        "Jbuilder Defect",
        "IBM",
        "American Multinational",
        "the Spring Framework Wrote",
        "CVS",
        "Ajax",
        "EJB Servlets",
        "ENCRYPTED Data",
        "Agile Methodology",
        "Express",
        "XML",
        "Telangana",
        "OAuth",
        "JUnit",
        "Financial Accounting",
        "Amazon S3 Maintained AWS",
        "Automated",
        "Formulated",
        "Wrote Technical",
        "Biomedical",
        "Responsive Webpage",
        "JAVAJ2EE",
        "CSS The Design and Architecture",
        "Java LDAP JNDI Involved",
        "MQ Mongo DB React JSRed",
        "Architect",
        "REST AWS",
        "OOAD Involved",
        "Implemented WebServices",
        "WebSphere",
        "OT administration Marketing Health Services Responsibilities Participated",
        "Mongo",
        "DAO",
        "Developed",
        "XML Extensive",
        "Criteria Named",
        "Amazon Web Services AWS Experience",
        "Session Faade Service Locator and Business Delegate Coded Server",
        "JSP HTML Hibernate JavaScript JUnit Ant Oracle",
        "Federal Bank",
        "Utilized",
        "Mockito",
        "SQLPLSQL",
        "Tomcat Web Server Involved",
        "General and Biomedical equipment",
        "Log4J Version Control",
        "Waterfall",
        "POJObased",
        "JSP Servlets Struts",
        "MQ",
        "Sr JavaJ2EE Developer",
        "Mobile Platforms",
        "the Merchants Banks",
        "SOA",
        "GitHub Maven Postman",
        "JSP",
        "Application Servers",
        "Cache",
        "Serversbackend",
        "MVC Singleton",
        "Micro",
        "Angular UI",
        "Used Software Configuration Management",
        "Java Collection API",
        "JBoss",
        "MVWMVC",
        "LDAP Template",
        "USA",
        "Developed Servlets",
        "Restful Calls",
        "Angular JS",
        "MVC",
        "Created Collections",
        "Interface",
        "Angular 2 HTTP Client",
        "Present Project Description",
        "Behaviour Data",
        "GIT",
        "AWS Amazon Web Services JTAPI",
        "Node JS",
        "Implemented Angular JS Service",
        "Carscom",
        "StoredProcedures",
        "JS",
        "API",
        "Database",
        "jQuery Ajax",
        "QA",
        "Application Data",
        "Created User",
        "Test Cases Execution",
        "Created Nodejs Express",
        "Created",
        "JavaScript Code for React JS",
        "AOP",
        "AWS",
        "Server",
        "Performed MQ",
        "Swagger UI",
        "Creation Test",
        "Responsibilities Design and Development",
        "JBoss Mysql Microservices IBM",
        "JAXWS SOAP JAXB Apache CXF",
        "JDO Java Data Objects",
        "Collateral",
        "Developed Spring Jersey",
        "Test",
        "Websphere Message Broker Systems",
        "HTML",
        "Java1716 Spring Hibernate",
        "JS Spring IOC",
        "CXF",
        "JSPServlets",
        "SQL",
        "IDE JUnit UNIX JavaJ2EE Developer Inovalon",
        "JTA JNDI JSP",
        "NodeJS React",
        "Carscom Chicago IL",
        "MultiThreading Collections Framework",
        "Amazon Web Services",
        "Java HQL Hibernate Involved",
        "Batch Services",
        "MAVEN",
        "AEM",
        "Iterating",
        "MD",
        "React Redux",
        "JBoss Tomcat",
        "JSON Format Used Angular",
        "Java Technologies",
        "GUI AWT",
        "EL Custom",
        "JACL",
        "JUNIT",
        "Created Restful",
        "Dockets",
        "Spring Boot Services Implemented",
        "First Federal Bank Corporation",
        "CRUD",
        "HTML Involved",
        "JAVA",
        "Spring AOP",
        "LDAP Authentication Authorization Service",
        "Spring Security Developed Apache Camel",
        "Build",
        "Preparation of the Detailed Design",
        "Involved in Unit Integration Testing",
        "HTML Implemented EJB Components",
        "HP Quality Center Cloud Foundry AWS Amazon Web Services JIRA EMMA",
        "JavaScript",
        "Front End",
        "JTAPI",
        "ANT",
        "Helper and Utility",
        "UI",
        "POSTGET",
        "UML Use Cases Sequence Page Flow",
        "Struts Framework Implemented Action Form classes Action",
        "SVN",
        "Expertise",
        "Work Experience Sr JavaJ2EE Developer Autonation Rye NY",
        "AWS Stack Configured",
        "Rest API",
        "REST",
        "Data",
        "WebSphere Portal and Application Serve",
        "IDEA Experienced",
        "JAXRS Micro Services",
        "TDD",
        "Restful Implemented",
        "PHP",
        "Implemented Normalization",
        "Nodejs Server",
        "Reports",
        "Socketio",
        "ICU",
        "TOAD",
        "AWS Cloud Services",
        "JQuery",
        "DTO Worked",
        "ESB",
        "JS UI",
        "Pharmacy Purchasing"
    ],
    "experience": "Experience in implementing JAVAJEE design patterns such as MVC Singleton Factory Session Faade and Business Delegate Experience in Object oriented analysis designdevelopment methodologies UML Use Cases Sequence Page Flow and Class Diagrams Extensive experience with both core and advanced Java technologies which includes Core Java XML JavaScript JEE JSP EJB 2030 JDBC Struts Servlets JMS JSF My Faces Rich Faces Prime Faces and Ice Faces JPA JAXWS JAX_RS Spring and Hibernate Extensive knowledge and implementation skills in Spring MVC and JSF MVC frameworks Experience in implementing Spring Core AOP JDBC MVC and ORM modules Strong programming skills using Java1716 Spring Hibernate JPA 2 JTA JNDI JSP Servlets Java Beans JSTL JDBC Participated in Architect and design of the components using a distributed architecture on AWS cloud platform Extensive knowledge in using JavaScript frameworks such as JQuery AngularJS ember JS and DOJO Very good working knowledge in spring Hibernate and Struts frameworks Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Extensive experience in working on projects with Waterfall and agile methodologies such as Test Driven Development TDD and SCRUM Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Expertise in clientside design and validations using HTML DHTML CSS Java Script JSP Provided Trouble shooting and Integration Maintenance Support on 24x7 basis for MQ and Websphere Message Broker Systems Proven knowledge in one or more NoSQL Document Store databases such as MongoDB Implemented JMS and JTAPI for all Mobile Platforms Experience in working on projects with MultiThreading Collections Framework and Generic Data Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Expertise in using Behaviour Data Driven BDD Cucumber framework Designed business applications using web technologies like NodeJS React JS HTML45 XHTML and CSS23 Bootstrap based on the W3C standards Strong Hands on Experience with IBM MQ Series and JMS for communications between middleware components Hands on experience with various Application Servers and Web Servers including IBM Web Sphere BEA Web logic JBoss Tomcat server with wide variety of development tools such as Eclipse IBM RAD RSA My Eclipse and Experience in RDBMS concepts knowledge and worked with MySQL Sybase Oracle 10 g and DB2 Proficient in SQL and wrote Stored Procedures Triggers besides writing DDL DML and transaction queries with development tools like TOAD and Aqua Data Studio Expertise knowledge in building applications using Rational Unified Process RUP UML and OOAD Involved in presentations and demos for the developed microservices framework Involved in developing Test plans Test Cases ManualAutomated Test Procedures and whitebox and blackbox testing Written SQL queries PLSQL Stored Procedures Functions and Triggers in databases like MySQL SQL Server and Oracle Worked with version control tools such as CVS SVN and GIT for management of software systems Experience in working with IDEs like Eclipse Spring Tool Suite Net Beans and IntelliJ IDEA Experienced in implementing Enterprise Applications with full life cycle of software development Experience in working with AWS Amazon Web Services EC2 RDS Dynamo DB S3 Cloud Formation Templates Experience in using Log4J Version Control using SVN GIT and CVS Experience with unit testing using Junit and writing build scripts using ANT and Maven Worked on different OS UNIX Sun Solaris AIX Linux Windows7 and Windows XP Good team player with ability to solve problems organize and prioritize multiple tasks Work Experience Sr JavaJ2EE Developer Autonation Rye NY October 2017 to Present Project Description In this project considering the fact regarding car collisions that occur in the daily life This application represents the different aspects that can be taken into consideration for fixing the cars So in this application we worked on the application to order the parts of the car that are damaged during the collision between the parts supplier and collision centres Responsibilities Worked on application architecture and redesign of different parts of the application Developed applications using JAVA 8 spring boot Apache Camel and Oracle Worked to secure our RESTful web services using OAuth 20 with spring security to authenticate any third party requests coming in Automated build process through Mavenbuild Framework Used Git to maintain the version of the files and took the responsibility to do the code merges and creating new branch when new feature implementation starts Used Software Configuration Management SCM tools like CVS VSS Visual Source Safe SVN TFS Java Build tools like Apache Ant Maven Used Eclipse Rich Client Platform RCP for the development of the project Involved in developing front end screens using JSP Groovy JSTL JQuery XSLT DHTML HTML5 CSS AJAX CSS3 and JavaScript Also involved in adding the Internationalization to the existing application Installed configured and deployed the applications on WebSphere Portal and Application Serve with SOA Governance Involved in reviewing and assessing current infrastructure to be migrated to the AWS cloud platform Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Implemented and maintained the monitoring and alerting of production corporate servers and storage using AWS Cloud Watch for efficiency Used POSTMAN client for testing developed Web services and written JUnit class for testing API layer and Service Layer to accomplish TDD approach Implemented WebServices to integrate between different applications components using Restful Implemented the REST APIs and data transformers using the JAVA connector which involves use of JAVA 18 features like Lambda and Streams in particular Setup the Continuous Integration CI process for the application using the Jenkins Worked on Log4j to validate functionalities and JUnit for unit testing Worked with a team involved in developing the frontend UI layout using HTML5 CSS3 JQuery JavaScript and AngularJS Configured AWS Identity Access Management IAM Group and users for improved login authentication Used Angular 2 HTTP Client to Interact with Serversbackend and modularized the Application with NgModule Created Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security Developed Apache Camel endpoints and used producer template to route messages to JMS queues Environment JAVA 8 spring boot Apache Camel Oracle AngularJS Angular 2 JQuery HTML5 CSS3 spring AOP Log4j GitHub Maven Postman J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 OAuth 20 Sr JavaJ2EE Developer Carscom Chicago IL August 2015 to September 2017 Project Description Consideration the fact of number of visits every month to Carscom which is the leading online destination for the shoppers and owners This project indicates the credible and also the easytounderstand information that can help the users to research price quality service repair providers and also search for the other inventory Responsibilities The Design and development of this project is done using the Agile Scrum Methodology through which we can break down the project into several sprints The whole project is developed in the MVC application according to the requirements of the user which is done mainly by using Spring MVC Jquery AngularJS JSP JSTL HTML and CSS The Design and Architecture of the project is discussed and the technology stack suited for the project is chosen for the development Designed and implemented the UI using HTML JSP JavaScript AJAX and JQuery and AngularJS Working on designing and building micro services Microservices has been built using spring boot Mongo spring security and deployed to pivotal cloud foundry The validation is written in Spring Validators and the configured dispatch servlet and tiles view resolver for Spring MVC Developed various Spring Rest Controllers for the request mapping and created JSP custom tag libraries for the application The implementation of the business logic is done using spring service layer and Spring DAO layer using Spring Framework 32 Configuration of spring declarative transaction manager and implementation of transaction management in DAO layer Given major contribution in client side coding using Angularjs framework and Reactjs framework Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Enhanced legacy application by building new components in Angular 2 and typescript React JS was used to build application that updates constantly over time Integrated spring and Hibernate configured logging using log4j and the the development of exception handling is done for the Application Data retrievals are written in Hibernate Criteria and performed in the ORM mapping to map the Java entities to database tables Implemented MultiThreading for expanding the productivity of existing process Experience in built web services using spring and CXF operating within ESB offering REST AWS and SOAP interfaces Build SOAP Web Services based on AWS Amazon Web Services JTAPI is developed for auto generation of voice calls to all Mobile Platforms using JAVA voicent Framework Web pages are developed by using spring tag library JSP custom tags ember JS plugins and ember JS UI components JUnit test cases are written to test the spring DAO layer and created Batch Services to generate reports using Spring Batch Hibernate 3 is used for accessing and persisting the data between the Java objectsclasses and a relational database Server side Micro services development in spring Performed MQ Series administrative functions and 24X7 production supports Performed MQ installations and fix pack initiations and upgrades Implemented Java programming while building microservices using Spring Integration and RESTful Configured JMS connection factories and message brokers in JBoss and also participated in building and promoting the application to other environments Wrote Spring JMS message liteners to consume JMS messages coming from external applications using JMS Template Developed HQL queries for reports and also Criteria queries to get the data in the Data tables using MySQL Implemented flux pattern by using React Redux framework Used Subversion for software configuration management and version control Involved in Unit Integration Testing of the application The application is supported on different environments from Test to Production Environment analyzed and fixed the errors assigned to me by the users of the application Used Jenkins AWS Code Deploy plugin to deploy the application into AWS cloud Environment J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 Windows 7 Sub Version Rally Eclipse Kepler AJAX JavaJ2EE Developer Master Card St Louis MO January 2014 to July 2015 Project Description MasterCard Worldwide is an American Multinational financial service corporation in which the business is to process payments between the Merchants Banks and the card issuing banks or credit unions of the purchasers Responsibilities Design and Development of the application is done by using Agile Methodology and followed TDD and Scrum Developed the Product Builder UI screens using AngularJS Developed AngularJS components such as controllers Services filters models and used Http service for rest service invocation Creating custom use modules and components which extend the elements and modules of core AngularJS Used React JS for templating for faster compilation and developing reusable components Worked on props refs and wiring the components with React router Developed custom directives for simultaneous file uploads and created Angular JS services to consume in controllers Implement the JavaScriptJQuery frameworks such as React JS Node JS for MVWMVC framework Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack Configured routing in the single page application promoting rich user experience Designed and developed the Simulator API for Amazon S3 Maintained AWS infrastructure and developed back end services Used AWS SQS with JMS API for asynchronous communication by keeping messages in the Message queue Developed unit testing for angular components using Mocha Chai Gulp Karma Istanbul and Protractor Created custom angular filters to filter the data based on user selection in bootstrap dropdowns Implemented angular form validations and used bootstrap to show error warning and info messages Configured spring security in the application with LDAP Template and access controls using Spring security annotations based on user roles Developed Spring Jersey resources for various HTTP methods and to send the requested data in JSON format to the web interface Implemented AngularJS filter to make the data searchable and sortable Used Angular JS framework for building webapps and is highly efficient with PHP framework Developed frontend code with Ajax call in AngularJS and jquery to retrieve data as JSON Object from controllers in backend RESTful Server then display the well organized result in web pages by writing AngularJS controller directives services and route providers Created Collections and documents and performed CRUD operations with Mongo repositories Developed API using Nodejs to allocate access to data in SQL MongoDB Written variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Developed ORM mappings using Hibernate and wrote Criteria Named and HQL queries for data retrievals in the DAO layer Wrote effective JavaScript Code for React JS and Node JS applications for interacting with server and Network applications Implemented JAX Web services by applying SOA concepts in conjunction with SOAP Used Web Services for sending and getting data from different applications using WSDL messages such as task details from Work distribution getting the status on the same etc Used Apache AXIS on Eclipse Web Tools platform for developing creating the Web Services Integrated with Spring IOC while implementing Web services Created Nodejs Express server combined with Socketio to build MVC framework from AngularJS Front End to MongoDB Back End to provide chatting service Used spring declarative transaction management and Spring Batch and scheduling for backend data processing Implemented Normalization rules using regular expressions for minor parties Implemented RESTFul web services API using HTTP and REST principles Created features including Single Sign On with existing client website and a REST API to expose manipulation functionality to external clients using AngularJS Built Restful API server to achieve CRUD operations for posts using Jersey JAXRS JSON spring REST using MEAN stack MongoDB Express AngularJS Nodejs Technologies Works with business analysts and coordinates with them to make sure the data is being populated properly Involved in writing JUNIT test cases and day to day builds and deployments using MAVEN and Jenkins Involved in working updating and closing the tasks created in Microsoft Team Foundation Server Involved in converting the docket conversion system is to into XML that can be loaded into the Novus system Worked with WAS admin to deploy applications on Web sphere Application Server Involved in Parsing the HTML and ENCRYPTED Data in to readable format and generate XML Used Nodejs for creating event driven frameworks in scalable networks Formulated template with JSON data from Rest API endpoint using AngularJS routing services and used its Cache services in it Involved in AWS and Pivotal Cloud Foundry scanner integration design discussions Worked with AEM team to administer environments to ensure configuration is optimized as per requirements Did the application support on different environments from QA to Production Involved in Writing and Executing SQL Scripts and responsible for fixing the issues and monitoring it to make sure it releases in time Day to Day Scrum meetings to update and discuss issues Involved in fixing the bugs biweekly iteration and publishing the Dockets to all Environments Environment Java18 JQuery Spring 4 Spring boot AngularJS 13 React JS Nodejs AngularUI Jersey Mocha Chai Karma Istanbul Gulp AWS EC2 Ldap Hibernate Agile Websphere Oracle11 g Unix Eclipse Brackets TFS SQL Maven Jenkins NoSQL Pivotal Cloud Foundry Mongo DB Webservices JUnit Sr Java Developer First Federal Bank Defiance OH June 2012 to December 2013 Project Description One of the 20 largest independent bank holding companies in USA is First Federal Bank Corporation with more than 750 branches free account access at more than 1800 Federal Bank places It maintains variety of products including lines of credit demand noted term notes letters of credit It also deals with Collateral information such as vehicles mortgages and trust accounts Responsibilities Designed and developed the application using agile methodology and followed TDD Scrum pair programming Wrote Technical design document with the class sequence activity diagrams in each use case Designed dynamic and browser compatible pages using Jquery JavaScript and Angular JS Implemented J2EE design patterns such as Session Facade Factory DAO and DTO Worked with Angular JS MVC framework including authoring complex directives services controllers and filters Customized Angular JS filters in several locations to get the required output Implemented Angular Controllers to maintain each view data Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Integrated the service call with UI using http and resources which are substitutes for AJAX in angular Developed various reusable Helper and Utility classes that are used across all the modules of the application Designed and developed Business components and Integrated with Spring framework Wrote data Components for Plan Setup wrote and called StoredProcedures using Java HQL Hibernate Involved in configuring and integrating spring and Hibernate frameworks Involved in design and implementation of MVC architecture in different modules Responsible for writing utility classes UI development using JSP CSS3 HTML JavaScript Angular Integrated business layer using Hibernate with Spring DAO Used Angular JS Factories and Services to make Ajax calls or Restful Calls to get data in JSON Format Used Angular JS Directives like ngapp ngmodel nginit for initialization of Angular JS application data Played key role in the design and development of application using J2EE and Rest web service Jersey frameworks for Service Oriented Architecture SOA with JSON Responsible for working on consuming and producing SOAWeb Services Designed and Developed web services using JAXWS SOAP JAXB Apache CXF Exposing and consuming the web services to the downstream applications using Apache CXF and Apache camel Used AngularJS http ngResources services for accessing content from Rest web services provided custom services to integrate database with view pages along with pagination Sorting of data deep linking AngularJS route service Implemented Angular JS Service layer with utility functions to get data from back end using Rest based service calls and pass back to Angular Controllers Designing user Interface using Angular UI components such as tabs grids dropdowns etc and configured the routing service using AngularJS router Developed REST service documentation using Swagger UI and developed test cases using Junit and Mockito framework Developed REST exception handling controller advices to respond to bad requests and server side exceptions Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Created Restful APIs in Express and returned logic through AngularJS data binding Used MongoDB to import the data into and feed into web services and displayed it onto the browser Used Spring Batch to build the POJObased development approach of the Spring Framework Wrote the DAOs to access the database using JDBC calls Involved in writing REST Web services in GroovyGrails wrapped by Jersey JAXRS Involved in using JPA Java Persistence API frameworks and APIs such as JDO Java Data Objects and Hibernate Implemented Spring Bean Factory to create proxied object using AOP framework Used AngularJS Global API to perform tasks like Comparing objects Iterating objects and Converting data Performed document and collection mappings with Spring and MongoTemplate Implemented SOA architecture with Web Services using SOAP WSDL and XML Designed developed LDAP Authentication Authorization Service using Java LDAP JNDI Involved in transforming XML data in to Java Objects using a JAXB binding tool Responsible for configuring and deploying the builds on Tomcat Web Server Involved in the Performance Tuning of the Application on client side Used Angular JS http service to read data from remote servers Worked on JavaScript framework to augment browser based applications with MVC capability Involved in developing HTML and JavaScript for client side presentation and data validation within the forms Wrote notification service that executes daily sends emails and escalations to participants Involved in Unit Integration Testing for different Modules in the application Wrote build deployment scripts using ANT Maven shell scripts and JACL on unix env Used Oracle Coherence in Java Collection API to access and modify data and the JavaBean event model to receive data change notifications Did the application support on different environments from QA to Production Was responsible for analyzing the issues providing technical functional support to the users and fix them Environment Java J2EE Spring ORM React JS Spring IOC NodeJS Spring AOP POJO Data Sources SOAP WSDL Hibernate HQL XML MySQL JBOSS CVS Eclipse IDE JUnit UNIX JavaJ2EE Developer Inovalon Bowie MD November 2010 to May 2012 Project Description It has an exhaustive product that addresses entire gamut of automation needs of the Hospital and comprises of the following activities InPatient OutPatient Administration Lab and other Clinical Investigations Pharmacy General Inventory and Purchasing PayRoll HR Administration tenancy of General and Biomedical equipment Financial Accounting and Billing HouseKeeping Ward management ICU and OT administration Marketing Health Services Responsibilities Participated in coding GUI design and testing Validation of the registered users using JSPServlets and JDBC with the details available in the Database Created documentation of the application Developed Servlets and JSP for Data retrieval implementation with User Interface Struts were employed to develop the web applications JBoss Fuse was the SOA architecture employed Developed Container Managed Entity and Session beans Developed web services in Java and Experienced with Service Oriented Architecture Protocol WSDL JDBC with SQLPLSQL for database connectivity Developed required Web pages using HTML Implemented EJB Components for modules related to Pharmacy Purchasing and General and Biomedical equipment Used ExtJS Java datascript Involved in Different J2EE Design patterns like Session Faade Service Locator and Business Delegate Coded Server pages using JSP Servlets Struts by following MVC architecture Developed Action Classes and Action Forms beans Worked with the team in the development of the Application frontend using JSP STRUTS with the help of HTML Involved in the integration performance and unit testing of the project Involved in the Performance related issues like open connections and open cursors Environment WebSphere 60 SQL JDBC Java EJB Servlets spring JSP HTML Hibernate JavaScript JUnit Ant Oracle 10 g and Windows XP Java Developer Unit Testing Hyderabad Telangana February 2009 to October 2010 Responsibilities System Requirements gathering for the project Preparation of the Detailed Design document for the project by developing business process flows requirements definition use cases and object model Designed and implemented a GUI framework for Swing Developers using the framework define actions popup menus in XML the framework builds the graphical components Designed the class diagrams and sequence diagrams Developed the presentation layer and GUI framework that are written using JSP and clientside validations were done using JavaScript Developed the application using Struts framework Created strutsconfig file and resource bundles for Distribution module using Struts Framework Implemented Action Form classes Action classes for the entire Reports module using Struts framework Use MVC architecture Creation Test plan Development and coding of Test classes and Test Cases Execution of Test cases in Jbuilder Defect fixing Client communication Query resolution Testing of the product Unit Testing Regression Testing and Integration Testing Used Eclipse as the IDE and Struts Framework for developing the application Developed the JSPs for the application Used UNIX shell scripts to automate build processes Worked on core java for multithreading arrays and GUI AWT Environment Java J2SE50 Struts Servlets JSP Eclipse Oracle 8i XML HTMLDHTML Jbuilder Education Bachelors Bachelors Skills JAVA 9 years TESTING 9 years ECLIPSE 7 years JSP 7 years XML 7 years Java J2Ee Spring J2Ee Hibernate Rest Additional Information Technical Skills Languages Java J2EE C C SQL Python Java Technologies Core Java Collections JDBC Multithreading AWT JSP Servlets JSTL JNDI Ajax EJB JMS Java Beans Custom Tags RMI JCAPS Design Patterns Frameworks Spring Struts Hibernate SPRING 30 HIBERNATE 30 WEB SERVICES SOAP AND REST LOG4J JUNIT JSF Application Server IBM WebSphere Apache Tomcat Glass Fish JBoss Web Logic TPT CXL Web services SOAP WSDL JAXWS UDDI REST JAXRS Micro Services APACHE CXF AXIS XFire WebApplication Tools XML XSD JMS Servlets JSTL EL Custom Tag Library JSP JSF JNDI JPA JAXB Database DB2 Oracle SQL Server MySQL PostgreSQL Squirrel Cassandra Stored Procedures Scripting Language HTML5 XML SAX DOM XSLXSLT XPATH Java Script JQuery Ajax EXT JS Angular JS Angular 2 ReactJS RedUx Nodejs Core Expertise Java GOF and J2EE design patterns Core Java concepts Collections Java 15 features Multithreading Exception handling IO Concurrency Multithreading Generics Serialization JDBC java 18 Lambda expression Etc Version control Tools CA Harvest CVS SVN IBM clear case Build Tools Ant Maven Jenkins Cruise Control Other Tools Log4J TOAD SQL developer HP Quality Center Cloud Foundry AWS Amazon Web Services JIRA EMMA Autopsys SOAP UI IBM MQ FileZilla Putty Edit Plus IDEs Spring Tool Suite Maven Eclipse IDE NetBeans RAD WSAD JBuilder JDeveloper Visual StudioNET Toad Putty JUnit Log4j Logging Frameworks Log4j Java Logging API SLF4J Testing Tools Junit JMeter Quality Center SOAPUI UML Tools Rational Rose MS Visio Operating Systems Solaris Red hat Linux Mac and Windows",
    "extracted_keywords": [
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Srspan",
        "lJavaspanJ2EE",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Autonation",
        "New",
        "York",
        "NY",
        "Years",
        "IT",
        "experience",
        "project",
        "development",
        "implementation",
        "deployment",
        "WindowsUnix",
        "JAVAJ2EE",
        "technology",
        "knowledge",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "JAVAJEE",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Factory",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Experience",
        "Object",
        "analysis",
        "designdevelopment",
        "methodologies",
        "UML",
        "Use",
        "Cases",
        "Sequence",
        "Page",
        "Flow",
        "Class",
        "Diagrams",
        "experience",
        "core",
        "Java",
        "technologies",
        "Core",
        "Java",
        "XML",
        "JavaScript",
        "JEE",
        "JSP",
        "EJB",
        "JDBC",
        "Struts",
        "Servlets",
        "JMS",
        "JSF",
        "Faces",
        "Rich",
        "Faces",
        "Prime",
        "Faces",
        "Ice",
        "Faces",
        "JPA",
        "JAXWS",
        "JAX_RS",
        "Spring",
        "Hibernate",
        "knowledge",
        "implementation",
        "skills",
        "Spring",
        "MVC",
        "JSF",
        "MVC",
        "frameworks",
        "Experience",
        "Spring",
        "Core",
        "AOP",
        "JDBC",
        "MVC",
        "ORM",
        "programming",
        "skills",
        "Java1716",
        "Spring",
        "Hibernate",
        "JPA",
        "JTA",
        "JNDI",
        "JSP",
        "Servlets",
        "Java",
        "Beans",
        "JSTL",
        "JDBC",
        "Architect",
        "design",
        "components",
        "architecture",
        "AWS",
        "cloud",
        "platform",
        "knowledge",
        "JavaScript",
        "frameworks",
        "JQuery",
        "AngularJS",
        "ember",
        "JS",
        "DOJO",
        "knowledge",
        "spring",
        "Hibernate",
        "Struts",
        "frameworks",
        "Microservices",
        "Cloud",
        "Foundry",
        "platform",
        "build",
        "Spring",
        "Boot",
        "Services",
        "SOA",
        "architecture",
        "web",
        "services",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "experience",
        "projects",
        "Waterfall",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "SCRUM",
        "Created",
        "User",
        "services",
        "Cloud",
        "Foundry",
        "database",
        "life",
        "cycles",
        "spring",
        "profile",
        "Expertise",
        "design",
        "validations",
        "HTML",
        "DHTML",
        "CSS",
        "Java",
        "Script",
        "JSP",
        "Trouble",
        "shooting",
        "Integration",
        "Maintenance",
        "Support",
        "basis",
        "MQ",
        "Websphere",
        "Message",
        "Broker",
        "Systems",
        "Proven",
        "knowledge",
        "NoSQL",
        "Document",
        "Store",
        "JMS",
        "JTAPI",
        "Mobile",
        "Platforms",
        "Experience",
        "projects",
        "MultiThreading",
        "Collections",
        "Framework",
        "Generic",
        "Data",
        "Angular",
        "services",
        "web",
        "application",
        "APIs",
        "data",
        "application",
        "Expertise",
        "Behaviour",
        "Data",
        "Driven",
        "BDD",
        "Cucumber",
        "framework",
        "business",
        "applications",
        "web",
        "technologies",
        "NodeJS",
        "React",
        "JS",
        "HTML45",
        "XHTML",
        "CSS23",
        "Bootstrap",
        "W3C",
        "standards",
        "Strong",
        "Hands",
        "Experience",
        "IBM",
        "MQ",
        "Series",
        "JMS",
        "communications",
        "middleware",
        "components",
        "Hands",
        "experience",
        "Application",
        "Servers",
        "Web",
        "Servers",
        "IBM",
        "Web",
        "Sphere",
        "BEA",
        "Web",
        "logic",
        "JBoss",
        "Tomcat",
        "server",
        "variety",
        "development",
        "tools",
        "Eclipse",
        "IBM",
        "RAD",
        "RSA",
        "Eclipse",
        "Experience",
        "RDBMS",
        "concepts",
        "knowledge",
        "MySQL",
        "Sybase",
        "Oracle",
        "g",
        "DB2",
        "Proficient",
        "SQL",
        "Stored",
        "Procedures",
        "Triggers",
        "DDL",
        "DML",
        "transaction",
        "development",
        "tools",
        "TOAD",
        "Aqua",
        "Data",
        "Studio",
        "Expertise",
        "knowledge",
        "building",
        "applications",
        "Rational",
        "Unified",
        "Process",
        "RUP",
        "UML",
        "OOAD",
        "presentations",
        "demos",
        "microservices",
        "framework",
        "Test",
        "plans",
        "Test",
        "Cases",
        "ManualAutomated",
        "Test",
        "Procedures",
        "whitebox",
        "blackbox",
        "testing",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "databases",
        "MySQL",
        "SQL",
        "Server",
        "Oracle",
        "Worked",
        "version",
        "control",
        "tools",
        "CVS",
        "SVN",
        "GIT",
        "management",
        "software",
        "systems",
        "Experience",
        "IDEs",
        "Eclipse",
        "Spring",
        "Tool",
        "Suite",
        "Net",
        "Beans",
        "IntelliJ",
        "IDEA",
        "Enterprise",
        "Applications",
        "life",
        "cycle",
        "software",
        "development",
        "Experience",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "RDS",
        "Dynamo",
        "DB",
        "S3",
        "Cloud",
        "Formation",
        "Templates",
        "Experience",
        "Version",
        "Control",
        "SVN",
        "GIT",
        "CVS",
        "Experience",
        "unit",
        "testing",
        "Junit",
        "build",
        "scripts",
        "ANT",
        "Maven",
        "OS",
        "UNIX",
        "Sun",
        "Solaris",
        "AIX",
        "Linux",
        "Windows7",
        "Windows",
        "XP",
        "team",
        "player",
        "ability",
        "problems",
        "tasks",
        "Work",
        "Experience",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Autonation",
        "Rye",
        "NY",
        "October",
        "Present",
        "Project",
        "Description",
        "project",
        "fact",
        "car",
        "collisions",
        "life",
        "application",
        "aspects",
        "consideration",
        "cars",
        "application",
        "application",
        "parts",
        "car",
        "collision",
        "parts",
        "supplier",
        "collision",
        "Responsibilities",
        "application",
        "architecture",
        "redesign",
        "parts",
        "application",
        "applications",
        "spring",
        "boot",
        "Apache",
        "Camel",
        "Oracle",
        "Worked",
        "web",
        "services",
        "OAuth",
        "spring",
        "security",
        "party",
        "requests",
        "build",
        "process",
        "Mavenbuild",
        "Framework",
        "Git",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "feature",
        "implementation",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "tools",
        "CVS",
        "VSS",
        "Visual",
        "Source",
        "SVN",
        "TFS",
        "Java",
        "Build",
        "tools",
        "Apache",
        "Ant",
        "Maven",
        "Eclipse",
        "Rich",
        "Client",
        "Platform",
        "RCP",
        "development",
        "project",
        "end",
        "screens",
        "JSP",
        "Groovy",
        "JSTL",
        "JQuery",
        "XSLT",
        "DHTML",
        "HTML5",
        "CSS",
        "AJAX",
        "CSS3",
        "JavaScript",
        "Internationalization",
        "application",
        "Installed",
        "applications",
        "WebSphere",
        "Portal",
        "Application",
        "Serve",
        "SOA",
        "Governance",
        "infrastructure",
        "AWS",
        "cloud",
        "platform",
        "AMIs",
        "AWS",
        "EC2",
        "instances",
        "image",
        "functionality",
        "snapshot",
        "disaster",
        "recovery",
        "monitoring",
        "alerting",
        "production",
        "servers",
        "storage",
        "AWS",
        "Cloud",
        "Watch",
        "efficiency",
        "POSTMAN",
        "client",
        "Web",
        "services",
        "JUnit",
        "class",
        "API",
        "layer",
        "Service",
        "Layer",
        "TDD",
        "approach",
        "WebServices",
        "applications",
        "components",
        "Restful",
        "REST",
        "APIs",
        "data",
        "transformers",
        "JAVA",
        "connector",
        "use",
        "features",
        "Lambda",
        "Streams",
        "Setup",
        "Continuous",
        "Integration",
        "CI",
        "process",
        "application",
        "Jenkins",
        "Worked",
        "Log4j",
        "functionalities",
        "JUnit",
        "unit",
        "testing",
        "team",
        "frontend",
        "UI",
        "layout",
        "HTML5",
        "CSS3",
        "JQuery",
        "JavaScript",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Group",
        "users",
        "login",
        "authentication",
        "Angular",
        "HTTP",
        "Client",
        "Interact",
        "Serversbackend",
        "Application",
        "NgModule",
        "Created",
        "Logging",
        "aspects",
        "auditing",
        "purposes",
        "Spring",
        "AOP",
        "security",
        "application",
        "Spring",
        "Security",
        "Developed",
        "Apache",
        "Camel",
        "endpoints",
        "producer",
        "template",
        "messages",
        "JMS",
        "queues",
        "Environment",
        "JAVA",
        "spring",
        "boot",
        "Apache",
        "Camel",
        "Oracle",
        "AngularJS",
        "Angular",
        "JQuery",
        "HTML5",
        "CSS3",
        "spring",
        "AOP",
        "Log4j",
        "GitHub",
        "Maven",
        "Postman",
        "J2EEJ2SE",
        "Java",
        "JQuery",
        "Spring",
        "MVC",
        "DI",
        "ORM",
        "MultiThreading",
        "Batch",
        "Hibernate",
        "CSS3",
        "XML",
        "HTML",
        "JSP",
        "JBoss",
        "Mysql",
        "Microservices",
        "IBM",
        "MQ",
        "Mongo",
        "DB",
        "React",
        "JSRed",
        "AWS",
        "OAuth",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Carscom",
        "Chicago",
        "IL",
        "August",
        "September",
        "Project",
        "Description",
        "Consideration",
        "fact",
        "number",
        "visits",
        "month",
        "Carscom",
        "destination",
        "shoppers",
        "owners",
        "project",
        "easytounderstand",
        "information",
        "users",
        "price",
        "quality",
        "service",
        "repair",
        "providers",
        "inventory",
        "Responsibilities",
        "Design",
        "development",
        "project",
        "Agile",
        "Scrum",
        "Methodology",
        "project",
        "sprints",
        "project",
        "MVC",
        "application",
        "requirements",
        "user",
        "Spring",
        "MVC",
        "Jquery",
        "JSP",
        "JSTL",
        "HTML",
        "CSS",
        "Design",
        "Architecture",
        "project",
        "technology",
        "stack",
        "project",
        "development",
        "UI",
        "HTML",
        "JSP",
        "JavaScript",
        "AJAX",
        "JQuery",
        "AngularJS",
        "designing",
        "building",
        "micro",
        "services",
        "Microservices",
        "spring",
        "boot",
        "Mongo",
        "spring",
        "security",
        "cloud",
        "foundry",
        "validation",
        "Spring",
        "Validators",
        "dispatch",
        "servlet",
        "tiles",
        "resolver",
        "Spring",
        "MVC",
        "Spring",
        "Rest",
        "Controllers",
        "request",
        "mapping",
        "JSP",
        "custom",
        "tag",
        "application",
        "implementation",
        "business",
        "logic",
        "spring",
        "service",
        "layer",
        "Spring",
        "DAO",
        "layer",
        "Spring",
        "Framework",
        "Configuration",
        "spring",
        "transaction",
        "manager",
        "implementation",
        "transaction",
        "management",
        "DAO",
        "layer",
        "contribution",
        "client",
        "side",
        "Angularjs",
        "framework",
        "Reactjs",
        "framework",
        "controllers",
        "services",
        "Angular",
        "components",
        "legacy",
        "application",
        "components",
        "Angular",
        "typescript",
        "React",
        "JS",
        "application",
        "time",
        "spring",
        "Hibernate",
        "log4j",
        "development",
        "exception",
        "handling",
        "Application",
        "Data",
        "retrievals",
        "Hibernate",
        "Criteria",
        "ORM",
        "mapping",
        "Java",
        "entities",
        "database",
        "tables",
        "MultiThreading",
        "productivity",
        "process",
        "Experience",
        "web",
        "services",
        "spring",
        "CXF",
        "ESB",
        "REST",
        "AWS",
        "SOAP",
        "interfaces",
        "SOAP",
        "Web",
        "Services",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "JTAPI",
        "auto",
        "generation",
        "voice",
        "Mobile",
        "Platforms",
        "voicent",
        "Framework",
        "Web",
        "pages",
        "spring",
        "tag",
        "library",
        "JSP",
        "custom",
        "tags",
        "ember",
        "JS",
        "plugins",
        "ember",
        "JS",
        "UI",
        "components",
        "JUnit",
        "test",
        "cases",
        "spring",
        "DAO",
        "layer",
        "Batch",
        "Services",
        "reports",
        "Spring",
        "Batch",
        "Hibernate",
        "data",
        "Java",
        "objectsclasses",
        "database",
        "Server",
        "side",
        "Micro",
        "services",
        "development",
        "spring",
        "Performed",
        "MQ",
        "Series",
        "functions",
        "production",
        "Performed",
        "MQ",
        "installations",
        "pack",
        "initiations",
        "upgrades",
        "Java",
        "programming",
        "microservices",
        "Spring",
        "Integration",
        "RESTful",
        "Configured",
        "JMS",
        "connection",
        "factories",
        "message",
        "brokers",
        "JBoss",
        "application",
        "environments",
        "Wrote",
        "Spring",
        "JMS",
        "message",
        "liteners",
        "JMS",
        "messages",
        "applications",
        "JMS",
        "Template",
        "Developed",
        "HQL",
        "reports",
        "Criteria",
        "data",
        "Data",
        "tables",
        "MySQL",
        "flux",
        "pattern",
        "React",
        "Redux",
        "framework",
        "Subversion",
        "software",
        "configuration",
        "management",
        "version",
        "control",
        "Unit",
        "Integration",
        "Testing",
        "application",
        "application",
        "environments",
        "Test",
        "Production",
        "Environment",
        "errors",
        "users",
        "application",
        "Jenkins",
        "AWS",
        "Code",
        "Deploy",
        "plugin",
        "application",
        "AWS",
        "cloud",
        "Environment",
        "J2EEJ2SE",
        "Java",
        "JQuery",
        "Spring",
        "MVC",
        "DI",
        "ORM",
        "MultiThreading",
        "Batch",
        "Hibernate",
        "CSS3",
        "XML",
        "HTML",
        "JSP",
        "JBoss",
        "Mysql",
        "Microservices",
        "IBM",
        "MQ",
        "Mongo",
        "DB",
        "React",
        "JSRed",
        "Windows",
        "Sub",
        "Version",
        "Rally",
        "Eclipse",
        "Kepler",
        "AJAX",
        "JavaJ2EE",
        "Developer",
        "Master",
        "Card",
        "St",
        "Louis",
        "MO",
        "January",
        "July",
        "Project",
        "Description",
        "MasterCard",
        "Worldwide",
        "American",
        "Multinational",
        "service",
        "corporation",
        "business",
        "payments",
        "Merchants",
        "Banks",
        "card",
        "banks",
        "credit",
        "unions",
        "purchasers",
        "Responsibilities",
        "Design",
        "Development",
        "application",
        "Agile",
        "Methodology",
        "TDD",
        "Scrum",
        "Product",
        "Builder",
        "UI",
        "screens",
        "components",
        "Services",
        "filters",
        "models",
        "Http",
        "service",
        "rest",
        "service",
        "invocation",
        "custom",
        "use",
        "modules",
        "components",
        "elements",
        "modules",
        "core",
        "AngularJS",
        "React",
        "JS",
        "compilation",
        "components",
        "props",
        "refs",
        "components",
        "React",
        "router",
        "custom",
        "directives",
        "file",
        "uploads",
        "Angular",
        "JS",
        "services",
        "controllers",
        "frameworks",
        "React",
        "JS",
        "Node",
        "JS",
        "MVWMVC",
        "framework",
        "Responsible",
        "AWS",
        "Cloud",
        "Services",
        "infrastructure",
        "AWS",
        "Stack",
        "Configured",
        "page",
        "application",
        "user",
        "experience",
        "Simulator",
        "API",
        "Amazon",
        "S3",
        "AWS",
        "infrastructure",
        "end",
        "services",
        "AWS",
        "SQS",
        "JMS",
        "API",
        "communication",
        "messages",
        "Message",
        "queue",
        "unit",
        "testing",
        "components",
        "Mocha",
        "Chai",
        "Gulp",
        "Karma",
        "Istanbul",
        "Protractor",
        "custom",
        "filters",
        "data",
        "user",
        "selection",
        "bootstrap",
        "dropdowns",
        "form",
        "validations",
        "bootstrap",
        "error",
        "warning",
        "info",
        "messages",
        "spring",
        "security",
        "application",
        "LDAP",
        "Template",
        "access",
        "controls",
        "Spring",
        "security",
        "annotations",
        "user",
        "roles",
        "Developed",
        "Spring",
        "Jersey",
        "resources",
        "HTTP",
        "methods",
        "data",
        "format",
        "web",
        "interface",
        "filter",
        "data",
        "JS",
        "framework",
        "webapps",
        "PHP",
        "framework",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jquery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "result",
        "web",
        "pages",
        "controller",
        "directives",
        "services",
        "route",
        "providers",
        "Collections",
        "documents",
        "CRUD",
        "operations",
        "Mongo",
        "repositories",
        "API",
        "Nodejs",
        "access",
        "data",
        "SQL",
        "variety",
        "filter",
        "queries",
        "data",
        "service",
        "layer",
        "ORM",
        "mappings",
        "Hibernate",
        "Criteria",
        "HQL",
        "queries",
        "data",
        "retrievals",
        "DAO",
        "layer",
        "JavaScript",
        "Code",
        "React",
        "JS",
        "Node",
        "JS",
        "applications",
        "server",
        "Network",
        "applications",
        "JAX",
        "Web",
        "services",
        "SOA",
        "concepts",
        "conjunction",
        "SOAP",
        "Used",
        "Web",
        "Services",
        "data",
        "applications",
        "WSDL",
        "messages",
        "task",
        "details",
        "Work",
        "distribution",
        "status",
        "Apache",
        "AXIS",
        "Eclipse",
        "Web",
        "Tools",
        "platform",
        "Web",
        "Services",
        "Spring",
        "IOC",
        "Web",
        "services",
        "Nodejs",
        "Express",
        "server",
        "Socketio",
        "MVC",
        "framework",
        "End",
        "End",
        "service",
        "spring",
        "transaction",
        "management",
        "Spring",
        "Batch",
        "scheduling",
        "data",
        "processing",
        "Normalization",
        "rules",
        "expressions",
        "parties",
        "RESTFul",
        "web",
        "services",
        "API",
        "HTTP",
        "REST",
        "principles",
        "features",
        "Single",
        "Sign",
        "client",
        "website",
        "REST",
        "API",
        "manipulation",
        "functionality",
        "clients",
        "API",
        "server",
        "CRUD",
        "operations",
        "posts",
        "Jersey",
        "JAXRS",
        "JSON",
        "spring",
        "REST",
        "MEAN",
        "Nodejs",
        "Technologies",
        "Works",
        "business",
        "analysts",
        "coordinates",
        "data",
        "JUNIT",
        "test",
        "cases",
        "day",
        "day",
        "builds",
        "deployments",
        "MAVEN",
        "Jenkins",
        "tasks",
        "Microsoft",
        "Team",
        "Foundation",
        "Server",
        "docket",
        "conversion",
        "system",
        "XML",
        "Novus",
        "system",
        "admin",
        "applications",
        "Web",
        "sphere",
        "Application",
        "Server",
        "HTML",
        "ENCRYPTED",
        "Data",
        "format",
        "XML",
        "Nodejs",
        "event",
        "frameworks",
        "networks",
        "template",
        "data",
        "Rest",
        "API",
        "endpoint",
        "services",
        "Cache",
        "services",
        "AWS",
        "Cloud",
        "Foundry",
        "scanner",
        "integration",
        "design",
        "discussions",
        "AEM",
        "team",
        "environments",
        "configuration",
        "requirements",
        "application",
        "support",
        "environments",
        "QA",
        "Production",
        "Writing",
        "SQL",
        "Scripts",
        "issues",
        "time",
        "Day",
        "Day",
        "Scrum",
        "meetings",
        "issues",
        "bugs",
        "iteration",
        "Dockets",
        "Environments",
        "Environment",
        "Java18",
        "JQuery",
        "Spring",
        "Spring",
        "boot",
        "AngularJS",
        "React",
        "JS",
        "Nodejs",
        "AngularUI",
        "Jersey",
        "Mocha",
        "Chai",
        "Karma",
        "Istanbul",
        "Gulp",
        "AWS",
        "EC2",
        "Ldap",
        "Hibernate",
        "Agile",
        "Websphere",
        "Oracle11",
        "g",
        "Unix",
        "Eclipse",
        "Brackets",
        "TFS",
        "SQL",
        "Maven",
        "Jenkins",
        "NoSQL",
        "Cloud",
        "Foundry",
        "Mongo",
        "DB",
        "Webservices",
        "JUnit",
        "Sr",
        "Java",
        "Developer",
        "First",
        "Federal",
        "Bank",
        "Defiance",
        "OH",
        "June",
        "December",
        "Project",
        "Description",
        "bank",
        "companies",
        "USA",
        "First",
        "Federal",
        "Bank",
        "Corporation",
        "branches",
        "account",
        "access",
        "Federal",
        "Bank",
        "places",
        "variety",
        "products",
        "lines",
        "credit",
        "demand",
        "term",
        "letters",
        "credit",
        "Collateral",
        "information",
        "vehicles",
        "mortgages",
        "trust",
        "Responsibilities",
        "application",
        "methodology",
        "TDD",
        "Scrum",
        "pair",
        "programming",
        "Wrote",
        "Technical",
        "design",
        "document",
        "class",
        "sequence",
        "activity",
        "diagrams",
        "use",
        "case",
        "dynamic",
        "browser",
        "pages",
        "Jquery",
        "JavaScript",
        "Angular",
        "JS",
        "J2EE",
        "design",
        "patterns",
        "Session",
        "Facade",
        "Factory",
        "DAO",
        "DTO",
        "Worked",
        "Angular",
        "JS",
        "MVC",
        "framework",
        "directives",
        "services",
        "controllers",
        "Customized",
        "JS",
        "filters",
        "locations",
        "output",
        "Angular",
        "Controllers",
        "view",
        "data",
        "UIbootstrap",
        "components",
        "time",
        "picker",
        "directives",
        "model",
        "popups",
        "router",
        "progress",
        "bar",
        "ngIdle",
        "ngUpload",
        "routing",
        "AngularJSuirouter",
        "Used",
        "Bootstrap",
        "media",
        "queries",
        "Responsive",
        "Webpage",
        "screensizes",
        "service",
        "call",
        "UI",
        "http",
        "resources",
        "substitutes",
        "AJAX",
        "Helper",
        "Utility",
        "classes",
        "modules",
        "application",
        "Business",
        "components",
        "Spring",
        "framework",
        "data",
        "Components",
        "Plan",
        "Setup",
        "StoredProcedures",
        "Java",
        "HQL",
        "Hibernate",
        "spring",
        "Hibernate",
        "frameworks",
        "design",
        "implementation",
        "MVC",
        "architecture",
        "modules",
        "utility",
        "classes",
        "UI",
        "development",
        "JSP",
        "CSS3",
        "HTML",
        "JavaScript",
        "Angular",
        "Integrated",
        "business",
        "layer",
        "Hibernate",
        "Spring",
        "DAO",
        "JS",
        "Factories",
        "Services",
        "calls",
        "Restful",
        "Calls",
        "data",
        "JSON",
        "Format",
        "JS",
        "Directives",
        "ngapp",
        "ngmodel",
        "nginit",
        "initialization",
        "JS",
        "application",
        "data",
        "role",
        "design",
        "development",
        "application",
        "J2EE",
        "Rest",
        "web",
        "service",
        "Jersey",
        "frameworks",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "JSON",
        "SOAWeb",
        "Services",
        "web",
        "services",
        "JAXWS",
        "SOAP",
        "JAXB",
        "Apache",
        "CXF",
        "web",
        "services",
        "applications",
        "Apache",
        "CXF",
        "Apache",
        "camel",
        "http",
        "ngResources",
        "services",
        "content",
        "Rest",
        "web",
        "services",
        "custom",
        "services",
        "database",
        "view",
        "pages",
        "pagination",
        "Sorting",
        "data",
        "route",
        "service",
        "Angular",
        "JS",
        "Service",
        "layer",
        "utility",
        "functions",
        "data",
        "end",
        "Rest",
        "service",
        "calls",
        "Angular",
        "Controllers",
        "Designing",
        "user",
        "Interface",
        "Angular",
        "UI",
        "components",
        "tabs",
        "grids",
        "routing",
        "service",
        "router",
        "Developed",
        "REST",
        "service",
        "documentation",
        "Swagger",
        "UI",
        "test",
        "cases",
        "Junit",
        "Mockito",
        "framework",
        "Developed",
        "REST",
        "exception",
        "controller",
        "advices",
        "requests",
        "server",
        "side",
        "exceptions",
        "Build",
        "REST",
        "web",
        "service",
        "Nodejs",
        "Server",
        "backend",
        "requests",
        "end",
        "jQuery",
        "Ajax",
        "APIs",
        "Express",
        "logic",
        "data",
        "MongoDB",
        "data",
        "web",
        "services",
        "browser",
        "Spring",
        "Batch",
        "POJObased",
        "development",
        "approach",
        "Spring",
        "Framework",
        "DAOs",
        "database",
        "JDBC",
        "calls",
        "REST",
        "Web",
        "services",
        "GroovyGrails",
        "Jersey",
        "JAXRS",
        "JPA",
        "Java",
        "Persistence",
        "API",
        "frameworks",
        "APIs",
        "JDO",
        "Java",
        "Data",
        "Objects",
        "Hibernate",
        "Spring",
        "Bean",
        "Factory",
        "object",
        "AOP",
        "framework",
        "API",
        "tasks",
        "objects",
        "Iterating",
        "objects",
        "data",
        "document",
        "collection",
        "mappings",
        "Spring",
        "MongoTemplate",
        "SOA",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "XML",
        "LDAP",
        "Authentication",
        "Authorization",
        "Service",
        "Java",
        "LDAP",
        "JNDI",
        "XML",
        "data",
        "Java",
        "Objects",
        "JAXB",
        "tool",
        "builds",
        "Tomcat",
        "Web",
        "Server",
        "Performance",
        "Tuning",
        "Application",
        "client",
        "side",
        "Angular",
        "JS",
        "http",
        "service",
        "data",
        "servers",
        "JavaScript",
        "framework",
        "augment",
        "browser",
        "applications",
        "MVC",
        "capability",
        "HTML",
        "JavaScript",
        "client",
        "side",
        "presentation",
        "data",
        "validation",
        "forms",
        "Wrote",
        "notification",
        "service",
        "emails",
        "escalations",
        "participants",
        "Unit",
        "Integration",
        "Testing",
        "Modules",
        "application",
        "Wrote",
        "deployment",
        "scripts",
        "ANT",
        "Maven",
        "shell",
        "scripts",
        "JACL",
        "unix",
        "env",
        "Used",
        "Oracle",
        "Coherence",
        "Java",
        "Collection",
        "API",
        "data",
        "JavaBean",
        "event",
        "model",
        "data",
        "change",
        "notifications",
        "application",
        "support",
        "environments",
        "QA",
        "Production",
        "issues",
        "support",
        "users",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "ORM",
        "React",
        "JS",
        "Spring",
        "IOC",
        "NodeJS",
        "Spring",
        "AOP",
        "POJO",
        "Data",
        "Sources",
        "WSDL",
        "Hibernate",
        "HQL",
        "XML",
        "MySQL",
        "JBOSS",
        "CVS",
        "Eclipse",
        "IDE",
        "JUnit",
        "UNIX",
        "JavaJ2EE",
        "Developer",
        "Inovalon",
        "Bowie",
        "MD",
        "November",
        "May",
        "Project",
        "Description",
        "product",
        "gamut",
        "automation",
        "needs",
        "Hospital",
        "comprises",
        "activities",
        "InPatient",
        "OutPatient",
        "Administration",
        "Lab",
        "Clinical",
        "Investigations",
        "Pharmacy",
        "General",
        "Inventory",
        "Purchasing",
        "PayRoll",
        "HR",
        "Administration",
        "tenancy",
        "General",
        "Biomedical",
        "equipment",
        "Financial",
        "Accounting",
        "Billing",
        "HouseKeeping",
        "Ward",
        "management",
        "ICU",
        "OT",
        "administration",
        "Marketing",
        "Health",
        "Services",
        "Responsibilities",
        "GUI",
        "design",
        "Validation",
        "users",
        "JSPServlets",
        "JDBC",
        "details",
        "Database",
        "documentation",
        "application",
        "Developed",
        "Servlets",
        "JSP",
        "Data",
        "retrieval",
        "implementation",
        "User",
        "Interface",
        "Struts",
        "web",
        "applications",
        "JBoss",
        "Fuse",
        "SOA",
        "architecture",
        "Developed",
        "Container",
        "Managed",
        "Entity",
        "Session",
        "beans",
        "web",
        "services",
        "Java",
        "Service",
        "Oriented",
        "Architecture",
        "Protocol",
        "WSDL",
        "JDBC",
        "SQLPLSQL",
        "database",
        "connectivity",
        "Developed",
        "Web",
        "pages",
        "HTML",
        "EJB",
        "Components",
        "modules",
        "Pharmacy",
        "Purchasing",
        "General",
        "Biomedical",
        "equipment",
        "ExtJS",
        "Java",
        "datascript",
        "Different",
        "J2EE",
        "Design",
        "patterns",
        "Session",
        "Faade",
        "Service",
        "Locator",
        "Business",
        "Delegate",
        "Server",
        "pages",
        "JSP",
        "Servlets",
        "Struts",
        "MVC",
        "architecture",
        "Developed",
        "Action",
        "Classes",
        "Action",
        "Forms",
        "beans",
        "team",
        "development",
        "Application",
        "frontend",
        "JSP",
        "STRUTS",
        "help",
        "HTML",
        "integration",
        "performance",
        "unit",
        "testing",
        "project",
        "Performance",
        "issues",
        "connections",
        "cursors",
        "Environment",
        "WebSphere",
        "SQL",
        "JDBC",
        "Java",
        "EJB",
        "Servlets",
        "spring",
        "JSP",
        "HTML",
        "Hibernate",
        "JavaScript",
        "JUnit",
        "Ant",
        "Oracle",
        "g",
        "Windows",
        "XP",
        "Java",
        "Developer",
        "Unit",
        "Testing",
        "Hyderabad",
        "Telangana",
        "February",
        "October",
        "Responsibilities",
        "System",
        "Requirements",
        "project",
        "Preparation",
        "Detailed",
        "Design",
        "document",
        "project",
        "business",
        "process",
        "requirements",
        "definition",
        "cases",
        "object",
        "model",
        "GUI",
        "framework",
        "Swing",
        "Developers",
        "framework",
        "define",
        "actions",
        "popup",
        "menus",
        "XML",
        "framework",
        "components",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "presentation",
        "layer",
        "GUI",
        "framework",
        "JSP",
        "validations",
        "JavaScript",
        "application",
        "Struts",
        "framework",
        "strutsconfig",
        "file",
        "resource",
        "bundles",
        "Distribution",
        "module",
        "Struts",
        "Framework",
        "Action",
        "Form",
        "Action",
        "classes",
        "Reports",
        "module",
        "Struts",
        "framework",
        "Use",
        "MVC",
        "architecture",
        "Creation",
        "Test",
        "plan",
        "Development",
        "coding",
        "Test",
        "classes",
        "Test",
        "Cases",
        "Execution",
        "Test",
        "cases",
        "Jbuilder",
        "Defect",
        "Client",
        "communication",
        "Query",
        "resolution",
        "Testing",
        "product",
        "Unit",
        "Testing",
        "Regression",
        "Testing",
        "Integration",
        "Testing",
        "Eclipse",
        "IDE",
        "Struts",
        "Framework",
        "application",
        "JSPs",
        "application",
        "UNIX",
        "shell",
        "scripts",
        "build",
        "processes",
        "core",
        "arrays",
        "GUI",
        "AWT",
        "Environment",
        "Java",
        "J2SE50",
        "Struts",
        "JSP",
        "Eclipse",
        "Oracle",
        "XML",
        "HTMLDHTML",
        "Jbuilder",
        "Education",
        "Bachelors",
        "Bachelors",
        "Skills",
        "JAVA",
        "years",
        "years",
        "years",
        "JSP",
        "years",
        "XML",
        "years",
        "Java",
        "J2Ee",
        "Spring",
        "J2Ee",
        "Hibernate",
        "Rest",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Java",
        "J2EE",
        "C",
        "C",
        "SQL",
        "Python",
        "Java",
        "Technologies",
        "Core",
        "Java",
        "Collections",
        "JDBC",
        "Multithreading",
        "AWT",
        "JSP",
        "Servlets",
        "JSTL",
        "JNDI",
        "Ajax",
        "EJB",
        "JMS",
        "Java",
        "Beans",
        "Custom",
        "Tags",
        "RMI",
        "JCAPS",
        "Design",
        "Patterns",
        "Frameworks",
        "Spring",
        "Struts",
        "Hibernate",
        "SPRING",
        "HIBERNATE",
        "WEB",
        "SERVICES",
        "SOAP",
        "REST",
        "LOG4J",
        "JUNIT",
        "JSF",
        "Application",
        "Server",
        "IBM",
        "WebSphere",
        "Apache",
        "Tomcat",
        "Glass",
        "Fish",
        "JBoss",
        "Web",
        "Logic",
        "TPT",
        "CXL",
        "Web",
        "services",
        "WSDL",
        "JAXWS",
        "UDDI",
        "REST",
        "JAXRS",
        "Micro",
        "Services",
        "APACHE",
        "CXF",
        "XFire",
        "WebApplication",
        "Tools",
        "XML",
        "XSD",
        "JMS",
        "JSTL",
        "EL",
        "Custom",
        "Tag",
        "Library",
        "JSP",
        "JSF",
        "JNDI",
        "JPA",
        "JAXB",
        "Database",
        "DB2",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "Squirrel",
        "Cassandra",
        "Stored",
        "Procedures",
        "Scripting",
        "Language",
        "HTML5",
        "XML",
        "SAX",
        "DOM",
        "XSLXSLT",
        "XPATH",
        "Java",
        "Script",
        "JQuery",
        "Ajax",
        "EXT",
        "JS",
        "Angular",
        "JS",
        "Angular",
        "ReactJS",
        "RedUx",
        "Nodejs",
        "Core",
        "Expertise",
        "Java",
        "GOF",
        "J2EE",
        "design",
        "patterns",
        "Core",
        "Java",
        "Collections",
        "Java",
        "Multithreading",
        "Exception",
        "IO",
        "Concurrency",
        "Multithreading",
        "Generics",
        "Serialization",
        "JDBC",
        "Lambda",
        "expression",
        "Etc",
        "Version",
        "control",
        "Tools",
        "CA",
        "Harvest",
        "CVS",
        "SVN",
        "IBM",
        "case",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Jenkins",
        "Cruise",
        "Control",
        "Other",
        "Tools",
        "Log4J",
        "TOAD",
        "SQL",
        "developer",
        "HP",
        "Quality",
        "Center",
        "Cloud",
        "Foundry",
        "Amazon",
        "Web",
        "Services",
        "JIRA",
        "EMMA",
        "Autopsys",
        "SOAP",
        "UI",
        "IBM",
        "MQ",
        "FileZilla",
        "Putty",
        "Edit",
        "IDEs",
        "Spring",
        "Tool",
        "Suite",
        "Maven",
        "Eclipse",
        "IDE",
        "NetBeans",
        "RAD",
        "WSAD",
        "JBuilder",
        "JDeveloper",
        "Visual",
        "StudioNET",
        "Toad",
        "Putty",
        "JUnit",
        "Log4j",
        "Logging",
        "Frameworks",
        "Log4j",
        "Java",
        "Logging",
        "API",
        "SLF4J",
        "Testing",
        "Tools",
        "Junit",
        "JMeter",
        "Quality",
        "Center",
        "SOAPUI",
        "UML",
        "Tools",
        "Rational",
        "Rose",
        "MS",
        "Visio",
        "Operating",
        "Systems",
        "Solaris",
        "Red",
        "hat",
        "Linux",
        "Mac",
        "Windows"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:17:05.374426",
    "resume_data": "Sr JavaJ2EE Developer Srspan lJavaspanJ2EE span lDeveloperspan Sr JavaJ2EE Developer Autonation New York NY 8 Years of IT professional experience with full project development implementation and deployment on WindowsUnix using JAVAJ2EE technology stack Good knowledge of designing deploying and operating highly available scalable and fault tolerant systems using Amazon Web Services AWS Experience in implementing JAVAJEE design patterns such as MVC Singleton Factory Session Faade and Business Delegate Experience in Object oriented analysis designdevelopment methodologies UML Use Cases Sequence Page Flow and Class Diagrams Extensive experience with both core and advanced Java technologies which includes Core Java XML JavaScript JEE JSP EJB 2030 JDBC Struts Servlets JMS JSF My Faces Rich Faces Prime Faces and Ice Faces JPA JAXWS JAX_RS Spring and Hibernate Extensive knowledge and implementation skills in Spring MVC and JSF MVC frameworks Experience in implementing Spring Core AOP JDBC MVC and ORM modules Strong programming skills using Java1716 Spring Hibernate JPA 2 JTA JNDI JSP Servlets Java Beans JSTL JDBC Participated in Architect and design of the components using a distributed architecture on AWS cloud platform Extensive knowledge in using JavaScript frameworks such as JQuery AngularJS ember JS and DOJO Very good working knowledge in spring Hibernate and Struts frameworks Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Implemented SOA architecture with web services using SOAP WSDL UDDI and XML Extensive experience in working on projects with Waterfall and agile methodologies such as Test Driven Development TDD and SCRUM Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Expertise in clientside design and validations using HTML DHTML CSS Java Script JSP Provided Trouble shooting and Integration Maintenance Support on 24x7 basis for MQ and Websphere Message Broker Systems Proven knowledge in one or more NoSQL Document Store databases such as MongoDB Implemented JMS and JTAPI for all Mobile Platforms Experience in working on projects with MultiThreading Collections Framework and Generic Data Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Expertise in using Behaviour Data Driven BDD Cucumber framework Designed business applications using web technologies like NodeJS React JS HTML45 XHTML and CSS23 Bootstrap based on the W3C standards Strong Hands on Experience with IBM MQ Series and JMS for communications between middleware components Hands on experience with various Application Servers and Web Servers including IBM Web Sphere BEA Web logic JBoss Tomcat server with wide variety of development tools such as Eclipse IBM RAD RSA My Eclipse and Experience in RDBMS concepts knowledge and worked with MySQL Sybase Oracle 10g and DB2 Proficient in SQL and wrote Stored Procedures Triggers besides writing DDL DML and transaction queries with development tools like TOAD and Aqua Data Studio Expertise knowledge in building applications using Rational Unified Process RUP UML and OOAD Involved in presentations and demos for the developed microservices framework Involved in developing Test plans Test Cases ManualAutomated Test Procedures and whitebox and blackbox testing Written SQL queries PLSQL Stored Procedures Functions and Triggers in databases like MySQL SQL Server and Oracle Worked with version control tools such as CVS SVN and GIT for management of software systems Experience in working with IDEs like Eclipse Spring Tool Suite Net Beans and IntelliJ IDEA Experienced in implementing Enterprise Applications with full life cycle of software development Experience in working with AWS Amazon Web Services EC2 RDS Dynamo DB S3 Cloud Formation Templates Experience in using Log4J Version Control using SVN GIT and CVS Experience with unit testing using Junit and writing build scripts using ANT and Maven Worked on different OS UNIX Sun Solaris AIX Linux Windows7 and Windows XP Good team player with ability to solve problems organize and prioritize multiple tasks Work Experience Sr JavaJ2EE Developer Autonation Rye NY October 2017 to Present Project Description In this project considering the fact regarding car collisions that occur in the daily life This application represents the different aspects that can be taken into consideration for fixing the cars So in this application we worked on the application to order the parts of the car that are damaged during the collision between the parts supplier and collision centres Responsibilities Worked on application architecture and redesign of different parts of the application Developed applications using JAVA 8 spring boot Apache Camel and Oracle Worked to secure our RESTful web services using OAuth 20 with spring security to authenticate any third party requests coming in Automated build process through Mavenbuild Framework Used Git to maintain the version of the files and took the responsibility to do the code merges and creating new branch when new feature implementation starts Used Software Configuration Management SCM tools like CVS VSS Visual Source Safe SVN TFS Java Build tools like Apache Ant Maven Used Eclipse Rich Client Platform RCP for the development of the project Involved in developing front end screens using JSP Groovy JSTL JQuery XSLT DHTML HTML5 CSS AJAX CSS3 and JavaScript Also involved in adding the Internationalization to the existing application Installed configured and deployed the applications on WebSphere Portal and Application Serve with SOA Governance Involved in reviewing and assessing current infrastructure to be migrated to the AWS cloud platform Created customized AMIs based on already existing AWS EC2 instances by using create image functionality hence using this snapshot for disaster recovery Implemented and maintained the monitoring and alerting of production corporate servers and storage using AWS Cloud Watch for efficiency Used POSTMAN client for testing developed Web services and written JUnit class for testing API layer and Service Layer to accomplish TDD approach Implemented WebServices to integrate between different applications components using Restful Implemented the REST APIs and data transformers using the JAVA connector which involves use of JAVA 18 features like Lambda and Streams in particular Setup the Continuous Integration CI process for the application using the Jenkins Worked on Log4j to validate functionalities and JUnit for unit testing Worked with a team involved in developing the frontend UI layout using HTML5 CSS3 JQuery JavaScript and AngularJS Configured AWS Identity Access Management IAM Group and users for improved login authentication Used Angular 2 HTTP Client to Interact with Serversbackend and modularized the Application with NgModule Created Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security Developed Apache Camel endpoints and used producer template to route messages to JMS queues Environment JAVA 8 spring boot Apache Camel Oracle AngularJS Angular 2 JQuery HTML5 CSS3 spring AOP Log4j GitHub Maven Postman J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 OAuth 20 Sr JavaJ2EE Developer Carscom Chicago IL August 2015 to September 2017 Project Description Consideration the fact of number of visits every month to Carscom which is the leading online destination for the shoppers and owners This project indicates the credible and also the easytounderstand information that can help the users to research price quality service repair providers and also search for the other inventory Responsibilities The Design and development of this project is done using the Agile Scrum Methodology through which we can break down the project into several sprints The whole project is developed in the MVC application according to the requirements of the user which is done mainly by using Spring MVC Jquery AngularJS JSP JSTL HTML and CSS The Design and Architecture of the project is discussed and the technology stack suited for the project is chosen for the development Designed and implemented the UI using HTML JSP JavaScript AJAX and JQuery and AngularJS Working on designing and building micro services Microservices has been built using spring boot Mongo spring security and deployed to pivotal cloud foundry The validation is written in Spring Validators and the configured dispatch servlet and tiles view resolver for Spring MVC Developed various Spring Rest Controllers for the request mapping and created JSP custom tag libraries for the application The implementation of the business logic is done using spring service layer and Spring DAO layer using Spring Framework 32 Configuration of spring declarative transaction manager and implementation of transaction management in DAO layer Given major contribution in client side coding using Angularjs framework and Reactjs framework Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Enhanced legacy application by building new components in Angular 2 and typescript React JS was used to build application that updates constantly over time Integrated spring and Hibernate configured logging using log4j and the the development of exception handling is done for the Application Data retrievals are written in Hibernate Criteria and performed in the ORM mapping to map the Java entities to database tables Implemented MultiThreading for expanding the productivity of existing process Experience in built web services using spring and CXF operating within ESB offering REST AWS and SOAP interfaces Build SOAP Web Services based on AWS Amazon Web Services JTAPI is developed for auto generation of voice calls to all Mobile Platforms using JAVA voicent Framework Web pages are developed by using spring tag library JSP custom tags ember JS plugins and ember JS UI components JUnit test cases are written to test the spring DAO layer and created Batch Services to generate reports using Spring Batch Hibernate 3 is used for accessing and persisting the data between the Java objectsclasses and a relational database Server side Micro services development in spring Performed MQ Series administrative functions and 24X7 production supports Performed MQ installations and fix pack initiations and upgrades Implemented Java programming while building microservices using Spring Integration and RESTful Configured JMS connection factories and message brokers in JBoss and also participated in building and promoting the application to other environments Wrote Spring JMS message liteners to consume JMS messages coming from external applications using JMS Template Developed HQL queries for reports and also Criteria queries to get the data in the Data tables using MySQL Implemented flux pattern by using React Redux framework Used Subversion for software configuration management and version control Involved in Unit Integration Testing of the application The application is supported on different environments from Test to Production Environment analyzed and fixed the errors assigned to me by the users of the application Used Jenkins AWS Code Deploy plugin to deploy the application into AWS cloud Environment J2EEJ2SE Java 60 JQuery Spring MVC DI ORM MultiThreading Batch Hibernate 3 CSS3 XML HTML JSP 20 JBoss Mysql Microservices IBM MQ Mongo DB React JSRed ux AWS java 18 Windows 7 Sub Version Rally Eclipse Kepler AJAX JavaJ2EE Developer Master Card St Louis MO January 2014 to July 2015 Project Description MasterCard Worldwide is an American Multinational financial service corporation in which the business is to process payments between the Merchants Banks and the card issuing banks or credit unions of the purchasers Responsibilities Design and Development of the application is done by using Agile Methodology and followed TDD and Scrum Developed the Product Builder UI screens using AngularJS Developed AngularJS components such as controllers Services filters models and used Http service for rest service invocation Creating custom use modules and components which extend the elements and modules of core AngularJS Used React JS for templating for faster compilation and developing reusable components Worked on props refs and wiring the components with React router Developed custom directives for simultaneous file uploads and created Angular JS services to consume in controllers Implement the JavaScriptJQuery frameworks such as React JS Node JS for MVWMVC framework Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack Configured routing in the single page application promoting rich user experience Designed and developed the Simulator API for Amazon S3 Maintained AWS infrastructure and developed back end services Used AWS SQS with JMS API for asynchronous communication by keeping messages in the Message queue Developed unit testing for angular components using Mocha Chai Gulp Karma Istanbul and Protractor Created custom angular filters to filter the data based on user selection in bootstrap dropdowns Implemented angular form validations and used bootstrap to show error warning and info messages Configured spring security in the application with LDAP Template and access controls using Spring security annotations based on user roles Developed Spring Jersey resources for various HTTP methods and to send the requested data in JSON format to the web interface Implemented AngularJS filter to make the data searchable and sortable Used Angular JS framework for building webapps and is highly efficient with PHP framework Developed frontend code with Ajax call in AngularJS and jquery to retrieve data as JSON Object from controllers in backend RESTful Server then display the well organized result in web pages by writing AngularJS controller directives services and route providers Created Collections and documents and performed CRUD operations with Mongo repositories Developed API using Nodejs to allocate access to data in SQL MongoDB Written variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Developed ORM mappings using Hibernate and wrote Criteria Named and HQL queries for data retrievals in the DAO layer Wrote effective JavaScript Code for React JS and Node JS applications for interacting with server and Network applications Implemented JAX Web services by applying SOA concepts in conjunction with SOAP Used Web Services for sending and getting data from different applications using WSDL messages such as task details from Work distribution getting the status on the same etc Used Apache AXIS on Eclipse Web Tools platform for developing creating the Web Services Integrated with Spring IOC while implementing Web services Created Nodejs Express server combined with Socketio to build MVC framework from AngularJS Front End to MongoDB Back End to provide chatting service Used spring declarative transaction management and Spring Batch and scheduling for backend data processing Implemented Normalization rules using regular expressions for minor parties Implemented RESTFul web services API using HTTP and REST principles Created features including Single Sign On with existing client website and a REST API to expose manipulation functionality to external clients using AngularJS Built Restful API server to achieve CRUD operations for posts using Jersey JAXRS JSON spring REST using MEAN stack MongoDB Express AngularJS Nodejs Technologies Works with business analysts and coordinates with them to make sure the data is being populated properly Involved in writing JUNIT test cases and day to day builds and deployments using MAVEN and Jenkins Involved in working updating and closing the tasks created in Microsoft Team Foundation Server Involved in converting the docket conversion system is to into XML that can be loaded into the Novus system Worked with WAS admin to deploy applications on Web sphere Application Server Involved in Parsing the HTML and ENCRYPTED Data in to readable format and generate XML Used Nodejs for creating event driven frameworks in scalable networks Formulated template with JSON data from Rest API endpoint using AngularJS routing services and used its Cache services in it Involved in AWS and Pivotal Cloud Foundry scanner integration design discussions Worked with AEM team to administer environments to ensure configuration is optimized as per requirements Did the application support on different environments from QA to Production Involved in Writing and Executing SQL Scripts and responsible for fixing the issues and monitoring it to make sure it releases in time Day to Day Scrum meetings to update and discuss issues Involved in fixing the bugs biweekly iteration and publishing the Dockets to all Environments Environment Java18 JQuery Spring 4 Spring boot AngularJS 13 React JS Nodejs AngularUI Jersey Mocha Chai Karma Istanbul Gulp AWS EC2 Ldap Hibernate Agile Websphere Oracle11g Unix Eclipse Brackets TFS SQL Maven Jenkins NoSQL Pivotal Cloud Foundry Mongo DB Webservices JUnit Sr Java Developer First Federal Bank Defiance OH June 2012 to December 2013 Project Description One of the 20 largest independent bank holding companies in USA is First Federal Bank Corporation with more than 750 branches free account access at more than 1800 Federal Bank places It maintains variety of products including lines of credit demand noted term notes letters of credit It also deals with Collateral information such as vehicles mortgages and trust accounts Responsibilities Designed and developed the application using agile methodology and followed TDD Scrum pair programming Wrote Technical design document with the class sequence activity diagrams in each use case Designed dynamic and browser compatible pages using Jquery JavaScript and Angular JS Implemented J2EE design patterns such as Session Facade Factory DAO and DTO Worked with Angular JS MVC framework including authoring complex directives services controllers and filters Customized Angular JS filters in several locations to get the required output Implemented Angular Controllers to maintain each view data Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Integrated the service call with UI using http and resources which are substitutes for AJAX in angular Developed various reusable Helper and Utility classes that are used across all the modules of the application Designed and developed Business components and Integrated with Spring framework Wrote data Components for Plan Setup wrote and called StoredProcedures using Java HQL Hibernate Involved in configuring and integrating spring and Hibernate frameworks Involved in design and implementation of MVC architecture in different modules Responsible for writing utility classes UI development using JSP CSS3 HTML JavaScript Angular Integrated business layer using Hibernate with Spring DAO Used Angular JS Factories and Services to make Ajax calls or Restful Calls to get data in JSON Format Used Angular JS Directives like ngapp ngmodel nginit for initialization of Angular JS application data Played key role in the design and development of application using J2EE and Rest web service Jersey frameworks for Service Oriented Architecture SOA with JSON Responsible for working on consuming and producing SOAWeb Services Designed and Developed web services using JAXWS SOAP JAXB Apache CXF Exposing and consuming the web services to the downstream applications using Apache CXF and Apache camel Used AngularJS http ngResources services for accessing content from Rest web services provided custom services to integrate database with view pages along with pagination Sorting of data deep linking AngularJS route service Implemented Angular JS Service layer with utility functions to get data from back end using Rest based service calls and pass back to Angular Controllers Designing user Interface using Angular UI components such as tabs grids dropdowns etc and configured the routing service using AngularJS router Developed REST service documentation using Swagger UI and developed test cases using Junit and Mockito framework Developed REST exception handling controller advices to respond to bad requests and server side exceptions Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Created Restful APIs in Express and returned logic through AngularJS data binding Used MongoDB to import the data into and feed into web services and displayed it onto the browser Used Spring Batch to build the POJObased development approach of the Spring Framework Wrote the DAOs to access the database using JDBC calls Involved in writing REST Web services in GroovyGrails wrapped by Jersey JAXRS Involved in using JPA Java Persistence API frameworks and APIs such as JDO Java Data Objects and Hibernate Implemented Spring Bean Factory to create proxied object using AOP framework Used AngularJS Global API to perform tasks like Comparing objects Iterating objects and Converting data Performed document and collection mappings with Spring and MongoTemplate Implemented SOA architecture with Web Services using SOAP WSDL and XML Designed developed LDAP Authentication Authorization Service using Java LDAP JNDI Involved in transforming XML data in to Java Objects using a JAXB binding tool Responsible for configuring and deploying the builds on Tomcat Web Server Involved in the Performance Tuning of the Application on client side Used Angular JS http service to read data from remote servers Worked on JavaScript framework to augment browser based applications with MVC capability Involved in developing HTML and JavaScript for client side presentation and data validation within the forms Wrote notification service that executes daily sends emails and escalations to participants Involved in Unit Integration Testing for different Modules in the application Wrote build deployment scripts using ANT Maven shell scripts and JACL on unix env Used Oracle Coherence in Java Collection API to access and modify data and the JavaBean event model to receive data change notifications Did the application support on different environments from QA to Production Was responsible for analyzing the issues providing technical functional support to the users and fix them Environment Java J2EE Spring ORM React JS Spring IOC NodeJS Spring AOP POJO Data Sources SOAP WSDL Hibernate HQL XML MySQL JBOSS CVS Eclipse IDE JUnit UNIX JavaJ2EE Developer Inovalon Bowie MD November 2010 to May 2012 Project Description It has an exhaustive product that addresses entire gamut of automation needs of the Hospital and comprises of the following activities InPatient OutPatient Administration Lab and other Clinical Investigations Pharmacy General Inventory and Purchasing PayRoll HR Administration tenancy of General and Biomedical equipment Financial Accounting and Billing HouseKeeping Ward management ICU and OT administration Marketing Health Services Responsibilities Participated in coding GUI design and testing Validation of the registered users using JSPServlets and JDBC with the details available in the Database Created documentation of the application Developed Servlets and JSP for Data retrieval implementation with User Interface Struts were employed to develop the web applications JBoss Fuse was the SOA architecture employed Developed Container Managed Entity and Session beans Developed web services in Java and Experienced with Service Oriented Architecture Protocol WSDL JDBC with SQLPLSQL for database connectivity Developed required Web pages using HTML Implemented EJB Components for modules related to Pharmacy Purchasing and General and Biomedical equipment Used ExtJS Java datascript Involved in Different J2EE Design patterns like Session Faade Service Locator and Business Delegate Coded Server pages using JSP Servlets Struts by following MVC architecture Developed Action Classes and Action Forms beans Worked with the team in the development of the Application frontend using JSP STRUTS with the help of HTML Involved in the integration performance and unit testing of the project Involved in the Performance related issues like open connections and open cursors Environment WebSphere 60 SQL JDBC Java EJB Servlets spring JSP HTML Hibernate JavaScript JUnit Ant Oracle 10g and Windows XP Java Developer Unit Testing Hyderabad Telangana February 2009 to October 2010 Responsibilities System Requirements gathering for the project Preparation of the Detailed Design document for the project by developing business process flows requirements definition use cases and object model Designed and implemented a GUI framework for Swing Developers using the framework define actions popup menus in XML the framework builds the graphical components Designed the class diagrams and sequence diagrams Developed the presentation layer and GUI framework that are written using JSP and clientside validations were done using JavaScript Developed the application using Struts framework Created strutsconfig file and resource bundles for Distribution module using Struts Framework Implemented Action Form classes Action classes for the entire Reports module using Struts framework Use MVC architecture Creation Test plan Development and coding of Test classes and Test Cases Execution of Test cases in Jbuilder Defect fixing Client communication Query resolution Testing of the product Unit Testing Regression Testing and Integration Testing Used Eclipse as the IDE and Struts Framework for developing the application Developed the JSPs for the application Used UNIX shell scripts to automate build processes Worked on core java for multithreading arrays and GUI AWT Environment Java J2SE50 Struts Servlets JSP Eclipse Oracle 8i XML HTMLDHTML Jbuilder Education Bachelors Bachelors Skills JAVA 9 years TESTING 9 years ECLIPSE 7 years JSP 7 years XML 7 years Java J2Ee Spring J2Ee Hibernate Rest Additional Information Technical Skills Languages Java J2EE C C SQL Python Java Technologies Core Java Collections JDBC Multithreading AWT JSP Servlets JSTL JNDI Ajax EJB JMS Java Beans Custom Tags RMI JCAPS Design Patterns Frameworks Spring Struts Hibernate SPRING 30 HIBERNATE 30 WEB SERVICES SOAP AND REST LOG4J JUNIT JSF Application Server IBM WebSphere Apache Tomcat Glass Fish JBoss Web Logic TPT CXL Web services SOAP WSDL JAXWS UDDI REST JAXRS Micro Services APACHE CXF AXIS XFire WebApplication Tools XML XSD JMS Servlets JSTL EL Custom Tag Library JSP JSF JNDI JPA JAXB Database DB2 Oracle SQL Server MySQL PostgreSQL Squirrel Cassandra Stored Procedures Scripting Language HTML5 XML SAX DOM XSLXSLT XPATH Java Script JQuery Ajax EXT JS Angular JS Angular 2 ReactJS RedUx Nodejs Core Expertise Java GOF and J2EE design patterns Core Java concepts Collections Java 15 features Multithreading Exception handling IO Concurrency Multithreading Generics Serialization JDBC java 18 Lambda expression Etc Version control Tools CA Harvest CVS SVN IBM clear case Build Tools Ant Maven Jenkins Cruise Control Other Tools Log4J TOAD SQL developer HP Quality Center Cloud Foundry AWS Amazon Web Services JIRA EMMA Autopsys SOAP UI IBM MQ FileZilla Putty Edit Plus IDEs Spring Tool Suite Maven Eclipse IDE NetBeans RAD WSAD JBuilder JDeveloper Visual StudioNET Toad Putty JUnit Log4j Logging Frameworks Log4j Java Logging API SLF4J Testing Tools Junit JMeter Quality Center SOAPUI UML Tools Rational Rose MS Visio Operating Systems Solaris Red hat Linux Mac and Windows",
    "unique_id": "5209a9e9-4fc4-4a85-8ff4-2a67d8415122"
}