{
    "clean_data": "Senior Software Developer Senior span lSoftwarespan span lDeveloperspan Senior Software Developer eviCore HealthCare Nashville TN Work Experience Senior Software Developer eviCore HealthCare June 2019 to Present Nashville Tennesse UPX evicore Platform Working for eviCore HealthCare as a Senior Software Developer Responsible to develop an application in AspNet Core 20 UPX is a legacy application and our main responsibility is to understand the legacy application and convert into an StandAlone application using microservices using C robust application Database we use is SQL Server 2017 and get the legacy data Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data Devops Azure is used as Source Control for the Project UPX includes all the cases that are created by providers and need to be processed for utilization Management Responsibilities Developed core functionality with the ASPNET RepositoryFramework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2017 Implemented Continuous integration and Continuous deployment for the applications Implement agile scrum framework in application development Worked on User story basis used Azure devops to maintain the User Stories Test Cases using Nunit framework for the applications Used Application Insights for logging and Ilogger interface to record logs in the system Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code Senior Software Developer State of Michigan Lansing MI July 2017 to June 2019 Michigan WORCS 20Workers Compensation System Working for State Of MichiganDTMB as a Senior Software Developer Responsible to develop an application in AspNet Core 20 and angular 456 with type script WORCS is a legacy application and our main responsibility is to understand the legacy application and convert into an Angular 6 with WEB API in the backend using C robust application Database we use is Sql Server 2017 to preserve the data migrated from legacy Database Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data TFS GIT is used as Source Control for the Project WORCS 20 includes Employers Claimants Insurance Coverages and CompensatoinsAgile methodology is used to implement the project and every functionality is developed as a User Story Responsibilities Developed core functionality with the ASPNET MVC Framework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Angular 4 with Type script and Angular material are used to design the UI pages Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2015 Implemented Continuous integration and Continuous deployment for the applications Worked on different components like ngdragula matDialog and different components to achieve the required functionality Worked on SSRS Reports and create Pdfs on click from the Page Implement agile scrum methodology in application development Worked on User story basis used TFS 2017 to maintain the User Stories Test Cases using Nunit framework for the applications Maintained the application which is in production environment and make the changes according to requirements Used Pipes to filter the data used custom pipes to implement the currency symbols percentages and etc Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code and visual studio code for angular Worked on Dependency Injection in Controllers and service layer and developed application along with testing the code using Unit Test Implemeneted Integration testing by inserting records and deleting them using Entity Framework Software Developer J P MORGAN CHASE Wilmington DE March 2016 to May 2017 ColombusOH UDBA Transition The department I worked for is Mortgage Banking The applications we are working on are related to adding referrals and tracking the loan origination records The applications are using MVC 40 with razor view engine Database is accessed using Mongo DBNoSQL in the application Used Controlm to schedule the jobs which trigger the web services Wrote test methods using nunit for the applications Implemented Continuous integration and Continuous deployment for all the applications For ARM Automated Release Management wrote the Scripts in PowerShell to trigger the Deployment Process Acted as Application security champion for the application resolving the Open Redirect Errors and SQL injection errors Worked on the production issues raising ITSM for the change management SSRS are used to build the reports and embed them within the application Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implemented Continuous integration and Continuous deployment for the applications Static Code Analysis of Net application using Vera code to eliminate the Vulnerabilities Implemented client side functionality using jQuery Implement agile scrum methodology in application development Implemented the Deployment using PowerShell scripts Created WCF WCF REST Services and also used different bindings to make it available to different Customers Worked as a MidLevel Developer responsible for Designing development of member maintenance UI Test Cases using Nunit framework for the applications Implemented singleton factory design pattern for the object creation Maintained the application which is in production environment and make the changes according to requirements Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Worked on creating FIDs and access them for specific functionality Used agile Methodologies in developing web application Gave Production support once web applications are deployed into production Software Developer NEW YORK CITY TRANSIT New York NY August 2013 to February 2016 New York Access Conversion Project Quite a large number of access applications are been developed Converted Access Application to Net application with Net 40 Framework Some of them are tiny databases and some are huge Business logic depends upon the application and their usage Have to understand the user requirements and develop the legacy application in NET Thin Client Application with MVC 40 and Entity Framework database first Model and Code Behind is C and Backend is SQL Server 2012 Converted almost 40 applications in a Span of 2 Years These web based applications has lot of adhoc and canned reports Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implementation of client side validations using jQuery and ASPNET MVC Validation implemented at Implemented client side functionality using jQuery Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI WPF design methodology is used to implement the ASPX web pages Implemented the single page application using AngularJs Involved in implementation of work queues Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Converting Legacy DTS batch processes to SSIS Design development of framework packages like config reader Error handling packages to enable component based use approach with in the batch processes Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Creation and review of HLD LLD Technical design Unit test case documents Created the API and main site databases in SQL Server Created the database maintenance plans which does the nightly backups rebuilds indexes purge the transaction logs after the backups are successfully done and keeps the database dump files for 7 days and deletes the older files Used agile Methodologies in developing web application Gave Production support once web applications and win forms are deployed into production Environment Windows 2008 IIS70 NET Framework35 SQL Server 2012JavaScript CNET ADONET XML RSA Workflows MS Test Windows Services WCF Web Developer Texas AM UniversityKingsville August 2011 to December 2011 Responsibilities Maintain the Library Website design the interface and make the changes on the website Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI Efficiently worked with C Code and developed and deployed the application components Education Masters Degree in Computer Science Texas AM University August 2011 to May 2013 Bachelors of Technology in Information Technology JNTU Hyderabad Telangana August 2007 to May 2011 Skills C CertificationsLicenses Certified ScrumMaster CSM June 2019 to June 2021 Certified ScrumMaster CSM CERTIFIED BADGE httpbcertmespwmbsgus",
    "entities": [
        "Michigan",
        "Computer Science Texas AM University",
        "NET",
        "Span",
        "SQL Server",
        "SSIS Design",
        "Michigan Lansing",
        "Employers Claimants Insurance Coverages",
        "Platform Working",
        "API",
        "Backend",
        "Entity Framework Software Developer J P MORGAN",
        "Skills C CertificationsLicenses",
        "Database",
        "New York",
        "New York Access Conversion Project",
        "Converted Access Application",
        "Unit Test Implemeneted Integration",
        "ASPNET MVC Validation",
        "AspNet Core",
        "Software Developer",
        "Entity Framework",
        "Implemented",
        "Customers Worked",
        "CompensatoinsAgile",
        "UI",
        "UI Test Cases",
        "matDialog",
        "Sql Server 2017 Implemented Continuous",
        "WORCS 20Workers Compensation System Working for State Of MichiganDTMB",
        "NEW YORK CITY",
        "Texas",
        "NET Thin Client Application",
        "Pdfs",
        "SQL Server Created",
        "the User Stories Test Cases",
        "Source Control",
        "StandAlone",
        "UPX",
        "C Code",
        "SSRS",
        "jQuery Implement",
        "SQL",
        "Vera",
        "jQuery",
        "MidLevel Developer",
        "Visual",
        "UI WPF",
        "PowerShell",
        "ASPX",
        "Telangana",
        "POST",
        "Created WCF WCF REST Services",
        "HealthCare",
        "ITSM",
        "Maintained",
        "Implemented Continuous",
        "DTS",
        "the ASPNET RepositoryFramework CNET Entity Framework Worked",
        "UDBA Transition",
        "Sql Server",
        "the Open Redirect Errors",
        "HLD LLD Technical",
        "MVC",
        "Nunit",
        "Page Implement",
        "WORCS",
        "Database Shared",
        "Present Nashville Tennesse UPX",
        "UI Efficiently"
    ],
    "experience": "Experience Senior Software Developer eviCore HealthCare June 2019 to Present Nashville Tennesse UPX evicore Platform Working for eviCore HealthCare as a Senior Software Developer Responsible to develop an application in AspNet Core 20 UPX is a legacy application and our main responsibility is to understand the legacy application and convert into an StandAlone application using microservices using C robust application Database we use is SQL Server 2017 and get the legacy data Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data Devops Azure is used as Source Control for the Project UPX includes all the cases that are created by providers and need to be processed for utilization Management Responsibilities Developed core functionality with the ASPNET RepositoryFramework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2017 Implemented Continuous integration and Continuous deployment for the applications Implement agile scrum framework in application development Worked on User story basis used Azure devops to maintain the User Stories Test Cases using Nunit framework for the applications Used Application Insights for logging and Ilogger interface to record logs in the system Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code Senior Software Developer State of Michigan Lansing MI July 2017 to June 2019 Michigan WORCS 20Workers Compensation System Working for State Of MichiganDTMB as a Senior Software Developer Responsible to develop an application in AspNet Core 20 and angular 456 with type script WORCS is a legacy application and our main responsibility is to understand the legacy application and convert into an Angular 6 with WEB API in the backend using C robust application Database we use is Sql Server 2017 to preserve the data migrated from legacy Database Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data TFS GIT is used as Source Control for the Project WORCS 20 includes Employers Claimants Insurance Coverages and CompensatoinsAgile methodology is used to implement the project and every functionality is developed as a User Story Responsibilities Developed core functionality with the ASPNET MVC Framework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Angular 4 with Type script and Angular material are used to design the UI pages Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2015 Implemented Continuous integration and Continuous deployment for the applications Worked on different components like ngdragula matDialog and different components to achieve the required functionality Worked on SSRS Reports and create Pdfs on click from the Page Implement agile scrum methodology in application development Worked on User story basis used TFS 2017 to maintain the User Stories Test Cases using Nunit framework for the applications Maintained the application which is in production environment and make the changes according to requirements Used Pipes to filter the data used custom pipes to implement the currency symbols percentages and etc Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code and visual studio code for angular Worked on Dependency Injection in Controllers and service layer and developed application along with testing the code using Unit Test Implemeneted Integration testing by inserting records and deleting them using Entity Framework Software Developer J P MORGAN CHASE Wilmington DE March 2016 to May 2017 ColombusOH UDBA Transition The department I worked for is Mortgage Banking The applications we are working on are related to adding referrals and tracking the loan origination records The applications are using MVC 40 with razor view engine Database is accessed using Mongo DBNoSQL in the application Used Controlm to schedule the jobs which trigger the web services Wrote test methods using nunit for the applications Implemented Continuous integration and Continuous deployment for all the applications For ARM Automated Release Management wrote the Scripts in PowerShell to trigger the Deployment Process Acted as Application security champion for the application resolving the Open Redirect Errors and SQL injection errors Worked on the production issues raising ITSM for the change management SSRS are used to build the reports and embed them within the application Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implemented Continuous integration and Continuous deployment for the applications Static Code Analysis of Net application using Vera code to eliminate the Vulnerabilities Implemented client side functionality using jQuery Implement agile scrum methodology in application development Implemented the Deployment using PowerShell scripts Created WCF WCF REST Services and also used different bindings to make it available to different Customers Worked as a MidLevel Developer responsible for Designing development of member maintenance UI Test Cases using Nunit framework for the applications Implemented singleton factory design pattern for the object creation Maintained the application which is in production environment and make the changes according to requirements Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Worked on creating FIDs and access them for specific functionality Used agile Methodologies in developing web application Gave Production support once web applications are deployed into production Software Developer NEW YORK CITY TRANSIT New York NY August 2013 to February 2016 New York Access Conversion Project Quite a large number of access applications are been developed Converted Access Application to Net application with Net 40 Framework Some of them are tiny databases and some are huge Business logic depends upon the application and their usage Have to understand the user requirements and develop the legacy application in NET Thin Client Application with MVC 40 and Entity Framework database first Model and Code Behind is C and Backend is SQL Server 2012 Converted almost 40 applications in a Span of 2 Years These web based applications has lot of adhoc and canned reports Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implementation of client side validations using jQuery and ASPNET MVC Validation implemented at Implemented client side functionality using jQuery Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI WPF design methodology is used to implement the ASPX web pages Implemented the single page application using AngularJs Involved in implementation of work queues Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Converting Legacy DTS batch processes to SSIS Design development of framework packages like config reader Error handling packages to enable component based use approach with in the batch processes Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Creation and review of HLD LLD Technical design Unit test case documents Created the API and main site databases in SQL Server Created the database maintenance plans which does the nightly backups rebuilds indexes purge the transaction logs after the backups are successfully done and keeps the database dump files for 7 days and deletes the older files Used agile Methodologies in developing web application Gave Production support once web applications and win forms are deployed into production Environment Windows 2008 IIS70 NET Framework35 SQL Server 2012JavaScript CNET ADONET XML RSA Workflows MS Test Windows Services WCF Web Developer Texas AM UniversityKingsville August 2011 to December 2011 Responsibilities Maintain the Library Website design the interface and make the changes on the website Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI Efficiently worked with C Code and developed and deployed the application components Education Masters Degree in Computer Science Texas AM University August 2011 to May 2013 Bachelors of Technology in Information Technology JNTU Hyderabad Telangana August 2007 to May 2011 Skills C CertificationsLicenses Certified ScrumMaster CSM June 2019 to June 2021 Certified ScrumMaster CSM CERTIFIED BADGE httpbcertmespwmbsgus",
    "extracted_keywords": [
        "Senior",
        "Software",
        "Developer",
        "Senior",
        "span",
        "lSoftwarespan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Software",
        "Developer",
        "HealthCare",
        "Nashville",
        "TN",
        "Work",
        "Experience",
        "Senior",
        "Software",
        "Developer",
        "HealthCare",
        "June",
        "Present",
        "Nashville",
        "Tennesse",
        "UPX",
        "Platform",
        "Working",
        "HealthCare",
        "Senior",
        "Software",
        "Developer",
        "application",
        "AspNet",
        "Core",
        "UPX",
        "legacy",
        "application",
        "responsibility",
        "legacy",
        "application",
        "StandAlone",
        "application",
        "microservices",
        "C",
        "application",
        "Database",
        "SQL",
        "Server",
        "legacy",
        "data",
        "Shared",
        "services",
        "GET",
        "POST",
        "attributes",
        "WEB",
        "API",
        "navigation",
        "data",
        "Devops",
        "Azure",
        "Source",
        "Control",
        "Project",
        "UPX",
        "cases",
        "providers",
        "utilization",
        "Management",
        "Responsibilities",
        "core",
        "functionality",
        "ASPNET",
        "RepositoryFramework",
        "CNET",
        "Entity",
        "Framework",
        "AspNet",
        "Core",
        "repository",
        "pattern",
        "Services",
        "WEB",
        "API",
        "database",
        "Entity",
        "Framework",
        "database",
        "Sql",
        "Server",
        "integration",
        "deployment",
        "applications",
        "scrum",
        "framework",
        "application",
        "development",
        "User",
        "story",
        "basis",
        "devops",
        "User",
        "Stories",
        "Test",
        "Cases",
        "Nunit",
        "framework",
        "applications",
        "Application",
        "Insights",
        "Ilogger",
        "logs",
        "system",
        "party",
        "libraries",
        "symbols",
        "font",
        "bootstrap",
        "v4",
        "studio",
        "code",
        "Senior",
        "Software",
        "Developer",
        "State",
        "Michigan",
        "Lansing",
        "MI",
        "July",
        "June",
        "Michigan",
        "WORCS",
        "20Workers",
        "Compensation",
        "System",
        "Working",
        "State",
        "MichiganDTMB",
        "Senior",
        "Software",
        "Developer",
        "application",
        "AspNet",
        "Core",
        "type",
        "script",
        "WORCS",
        "legacy",
        "application",
        "responsibility",
        "legacy",
        "application",
        "Angular",
        "WEB",
        "API",
        "backend",
        "C",
        "application",
        "Database",
        "Sql",
        "Server",
        "data",
        "legacy",
        "Database",
        "Shared",
        "services",
        "GET",
        "POST",
        "attributes",
        "WEB",
        "API",
        "navigation",
        "data",
        "TFS",
        "GIT",
        "Source",
        "Control",
        "Project",
        "WORCS",
        "Employers",
        "Claimants",
        "Insurance",
        "Coverages",
        "CompensatoinsAgile",
        "methodology",
        "project",
        "functionality",
        "User",
        "Story",
        "Responsibilities",
        "core",
        "functionality",
        "ASPNET",
        "MVC",
        "Framework",
        "CNET",
        "Entity",
        "Framework",
        "AspNet",
        "Core",
        "repository",
        "pattern",
        "Angular",
        "Type",
        "script",
        "material",
        "UI",
        "pages",
        "Services",
        "WEB",
        "API",
        "database",
        "Entity",
        "Framework",
        "database",
        "Sql",
        "Server",
        "integration",
        "deployment",
        "applications",
        "components",
        "ngdragula",
        "matDialog",
        "components",
        "functionality",
        "SSRS",
        "Reports",
        "Pdfs",
        "Page",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "User",
        "story",
        "basis",
        "TFS",
        "User",
        "Stories",
        "Test",
        "Cases",
        "Nunit",
        "framework",
        "applications",
        "application",
        "production",
        "environment",
        "changes",
        "requirements",
        "Pipes",
        "data",
        "custom",
        "pipes",
        "currency",
        "symbols",
        "percentages",
        "party",
        "libraries",
        "symbols",
        "font",
        "bootstrap",
        "v4",
        "studio",
        "code",
        "studio",
        "code",
        "Worked",
        "Dependency",
        "Injection",
        "Controllers",
        "service",
        "layer",
        "application",
        "code",
        "Unit",
        "Test",
        "Implemeneted",
        "Integration",
        "testing",
        "records",
        "Entity",
        "Framework",
        "Software",
        "Developer",
        "J",
        "P",
        "MORGAN",
        "CHASE",
        "Wilmington",
        "DE",
        "March",
        "May",
        "ColombusOH",
        "UDBA",
        "Transition",
        "department",
        "Mortgage",
        "Banking",
        "applications",
        "referrals",
        "loan",
        "origination",
        "applications",
        "MVC",
        "razor",
        "view",
        "engine",
        "Database",
        "Mongo",
        "DBNoSQL",
        "application",
        "Controlm",
        "jobs",
        "web",
        "services",
        "test",
        "methods",
        "nunit",
        "applications",
        "integration",
        "deployment",
        "applications",
        "ARM",
        "Automated",
        "Release",
        "Management",
        "Scripts",
        "PowerShell",
        "Deployment",
        "Process",
        "Application",
        "security",
        "champion",
        "application",
        "Open",
        "Redirect",
        "Errors",
        "SQL",
        "injection",
        "errors",
        "production",
        "issues",
        "ITSM",
        "change",
        "management",
        "SSRS",
        "reports",
        "application",
        "Responsibilities",
        "core",
        "functionality",
        "ASPNET",
        "MVC",
        "Framework",
        "CNET",
        "ADONET",
        "integration",
        "deployment",
        "applications",
        "Static",
        "Code",
        "Analysis",
        "application",
        "Vera",
        "code",
        "Vulnerabilities",
        "client",
        "side",
        "functionality",
        "jQuery",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "Deployment",
        "PowerShell",
        "scripts",
        "WCF",
        "WCF",
        "REST",
        "Services",
        "bindings",
        "Customers",
        "MidLevel",
        "Developer",
        "Designing",
        "development",
        "member",
        "maintenance",
        "UI",
        "Test",
        "Cases",
        "Nunit",
        "framework",
        "applications",
        "singleton",
        "factory",
        "design",
        "pattern",
        "object",
        "creation",
        "application",
        "production",
        "environment",
        "changes",
        "requirements",
        "classes",
        "applications",
        "system",
        "performance",
        "issues",
        "queries",
        "procedures",
        "procedures",
        "performance",
        "optimization",
        "support",
        "issues",
        "manner",
        "Analysis",
        "FDDs",
        "requirements",
        "FIDs",
        "functionality",
        "Methodologies",
        "web",
        "application",
        "Production",
        "support",
        "web",
        "applications",
        "production",
        "Software",
        "Developer",
        "NEW",
        "YORK",
        "CITY",
        "TRANSIT",
        "New",
        "York",
        "NY",
        "August",
        "February",
        "New",
        "York",
        "Access",
        "Conversion",
        "Project",
        "number",
        "access",
        "applications",
        "Converted",
        "Access",
        "Application",
        "application",
        "Net",
        "Framework",
        "databases",
        "Business",
        "logic",
        "application",
        "usage",
        "user",
        "requirements",
        "legacy",
        "application",
        "NET",
        "Thin",
        "Client",
        "Application",
        "MVC",
        "Entity",
        "Framework",
        "database",
        "Model",
        "Code",
        "Behind",
        "C",
        "Backend",
        "SQL",
        "Server",
        "applications",
        "Span",
        "Years",
        "web",
        "applications",
        "lot",
        "adhoc",
        "reports",
        "Responsibilities",
        "core",
        "functionality",
        "ASPNET",
        "MVC",
        "Framework",
        "CNET",
        "ADONET",
        "Implementation",
        "client",
        "side",
        "validations",
        "jQuery",
        "ASPNET",
        "MVC",
        "Validation",
        "client",
        "side",
        "functionality",
        "jQuery",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "Developer",
        "Designing",
        "development",
        "member",
        "maintenance",
        "UI",
        "WPF",
        "design",
        "methodology",
        "ASPX",
        "web",
        "pages",
        "page",
        "application",
        "AngularJs",
        "implementation",
        "work",
        "queues",
        "classes",
        "applications",
        "system",
        "performance",
        "issues",
        "queries",
        "procedures",
        "procedures",
        "performance",
        "optimization",
        "Legacy",
        "DTS",
        "batch",
        "processes",
        "SSIS",
        "Design",
        "development",
        "framework",
        "packages",
        "config",
        "reader",
        "Error",
        "handling",
        "packages",
        "component",
        "use",
        "approach",
        "batch",
        "processes",
        "support",
        "issues",
        "manner",
        "Analysis",
        "FDDs",
        "requirements",
        "Creation",
        "review",
        "HLD",
        "LLD",
        "Technical",
        "design",
        "Unit",
        "test",
        "case",
        "documents",
        "API",
        "site",
        "databases",
        "SQL",
        "Server",
        "database",
        "maintenance",
        "plans",
        "backups",
        "rebuilds",
        "indexes",
        "transaction",
        "backups",
        "database",
        "files",
        "days",
        "files",
        "Methodologies",
        "web",
        "application",
        "Production",
        "support",
        "web",
        "applications",
        "forms",
        "production",
        "Environment",
        "Windows",
        "IIS70",
        "NET",
        "Framework35",
        "SQL",
        "Server",
        "CNET",
        "ADONET",
        "XML",
        "RSA",
        "Workflows",
        "MS",
        "Test",
        "Windows",
        "Services",
        "WCF",
        "Web",
        "Developer",
        "Texas",
        "AM",
        "UniversityKingsville",
        "August",
        "December",
        "Responsibilities",
        "Library",
        "Website",
        "interface",
        "changes",
        "website",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "Developer",
        "Designing",
        "development",
        "member",
        "maintenance",
        "UI",
        "C",
        "Code",
        "application",
        "components",
        "Education",
        "Masters",
        "Degree",
        "Computer",
        "Science",
        "Texas",
        "AM",
        "University",
        "August",
        "May",
        "Bachelors",
        "Technology",
        "Information",
        "Technology",
        "JNTU",
        "Hyderabad",
        "Telangana",
        "August",
        "May",
        "Skills",
        "C",
        "CertificationsLicenses",
        "Certified",
        "ScrumMaster",
        "CSM",
        "June",
        "June",
        "Certified",
        "ScrumMaster",
        "CSM",
        "CERTIFIED",
        "BADGE",
        "httpbcertmespwmbsgus"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:40:18.257452",
    "resume_data": "Senior Software Developer Senior span lSoftwarespan span lDeveloperspan Senior Software Developer eviCore HealthCare Nashville TN Work Experience Senior Software Developer eviCore HealthCare June 2019 to Present Nashville Tennesse UPX evicore Platform Working for eviCore HealthCare as a Senior Software Developer Responsible to develop an application in AspNet Core 20 UPX is a legacy application and our main responsibility is to understand the legacy application and convert into an StandAlone application using microservices using C robust application Database we use is SQL Server 2017 and get the legacy data Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data Devops Azure is used as Source Control for the Project UPX includes all the cases that are created by providers and need to be processed for utilization Management Responsibilities Developed core functionality with the ASPNET RepositoryFramework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2017 Implemented Continuous integration and Continuous deployment for the applications Implement agile scrum framework in application development Worked on User story basis used Azure devops to maintain the User Stories Test Cases using Nunit framework for the applications Used Application Insights for logging and Ilogger interface to record logs in the system Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code Senior Software Developer State of Michigan Lansing MI July 2017 to June 2019 Michigan WORCS 20Workers Compensation System Working for State Of MichiganDTMB as a Senior Software Developer Responsible to develop an application in AspNet Core 20 and angular 456 with type script WORCS is a legacy application and our main responsibility is to understand the legacy application and convert into an Angular 6 with WEB API in the backend using C robust application Database we use is Sql Server 2017 to preserve the data migrated from legacy Database Shared services are used to implement GET and POST attributes and connect to WEB API for navigation of data TFS GIT is used as Source Control for the Project WORCS 20 includes Employers Claimants Insurance Coverages and CompensatoinsAgile methodology is used to implement the project and every functionality is developed as a User Story Responsibilities Developed core functionality with the ASPNET MVC Framework CNET Entity Framework Worked with AspNet Core 20 and implemented using repository pattern Angular 4 with Type script and Angular material are used to design the UI pages Implemented shared Services to connect to WEB API from angular and then connect to database using Entity Framework and database is Sql Server 2015 Implemented Continuous integration and Continuous deployment for the applications Worked on different components like ngdragula matDialog and different components to achieve the required functionality Worked on SSRS Reports and create Pdfs on click from the Page Implement agile scrum methodology in application development Worked on User story basis used TFS 2017 to maintain the User Stories Test Cases using Nunit framework for the applications Maintained the application which is in production environment and make the changes according to requirements Used Pipes to filter the data used custom pipes to implement the currency symbols percentages and etc Used third party libraries for implementing new symbols using font awesome and bootstrap v4 Worked with Visual studio 2017 for backend code and visual studio code for angular Worked on Dependency Injection in Controllers and service layer and developed application along with testing the code using Unit Test Implemeneted Integration testing by inserting records and deleting them using Entity Framework Software Developer J P MORGAN CHASE Wilmington DE March 2016 to May 2017 ColombusOH UDBA Transition The department I worked for is Mortgage Banking The applications we are working on are related to adding referrals and tracking the loan origination records The applications are using MVC 40 with razor view engine Database is accessed using Mongo DBNoSQL in the application Used Controlm to schedule the jobs which trigger the web services Wrote test methods using nunit for the applications Implemented Continuous integration and Continuous deployment for all the applications For ARM Automated Release Management wrote the Scripts in PowerShell to trigger the Deployment Process Acted as Application security champion for the application resolving the Open Redirect Errors and SQL injection errors Worked on the production issues raising ITSM for the change management SSRS are used to build the reports and embed them within the application Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implemented Continuous integration and Continuous deployment for the applications Static Code Analysis of Net application using Vera code to eliminate the Vulnerabilities Implemented client side functionality using jQuery Implement agile scrum methodology in application development Implemented the Deployment using PowerShell scripts Created WCF WCF REST Services and also used different bindings to make it available to different Customers Worked as a MidLevel Developer responsible for Designing development of member maintenance UI Test Cases using Nunit framework for the applications Implemented singleton factory design pattern for the object creation Maintained the application which is in production environment and make the changes according to requirements Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Worked on creating FIDs and access them for specific functionality Used agile Methodologies in developing web application Gave Production support once web applications are deployed into production Software Developer NEW YORK CITY TRANSIT New York NY August 2013 to February 2016 New York Access Conversion Project Quite a large number of access applications are been developed Converted Access Application to Net application with Net 40 Framework Some of them are tiny databases and some are huge Business logic depends upon the application and their usage Have to understand the user requirements and develop the legacy application in NET Thin Client Application with MVC 40 and Entity Framework database first Model and Code Behind is C and Backend is SQL Server 2012 Converted almost 40 applications in a Span of 2 Years These web based applications has lot of adhoc and canned reports Responsibilities Developed core functionality with the ASPNET MVC Framework CNET ADONET Implementation of client side validations using jQuery and ASPNET MVC Validation implemented at Implemented client side functionality using jQuery Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI WPF design methodology is used to implement the ASPX web pages Implemented the single page application using AngularJs Involved in implementation of work queues Developed various generic foundational classes to be used across different applications within the system Troubleshooting performance issues and finetuning queries and stored procedures Written stored procedures triggers performance tuning optimization Converting Legacy DTS batch processes to SSIS Design development of framework packages like config reader Error handling packages to enable component based use approach with in the batch processes Worked on PROD support issues to resolve in timely manner Analysis of FDDs to make sure there are no ambiguous requirements Creation and review of HLD LLD Technical design Unit test case documents Created the API and main site databases in SQL Server Created the database maintenance plans which does the nightly backups rebuilds indexes purge the transaction logs after the backups are successfully done and keeps the database dump files for 7 days and deletes the older files Used agile Methodologies in developing web application Gave Production support once web applications and win forms are deployed into production Environment Windows 2008 IIS70 NET Framework35 SQL Server 2012JavaScript CNET ADONET XML RSA Workflows MS Test Windows Services WCF Web Developer Texas AM UniversityKingsville August 2011 to December 2011 Responsibilities Maintain the Library Website design the interface and make the changes on the website Implement agile scrum methodology in application development Worked as a Developer responsible for Designing development of member maintenance UI Efficiently worked with C Code and developed and deployed the application components Education Masters Degree in Computer Science Texas AM University August 2011 to May 2013 Bachelors of Technology in Information Technology JNTU Hyderabad Telangana August 2007 to May 2011 Skills C CertificationsLicenses Certified ScrumMaster CSM June 2019 to June 2021 Certified ScrumMaster CSM CERTIFIED BADGE httpbcertmespwmbsgus",
    "unique_id": "9a432b2e-f353-4ab4-bc1c-06f4be4074eb"
}