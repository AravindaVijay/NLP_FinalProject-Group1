{
    "clean_data": "Sr PythonDjango Developer Sr span lPythonspanDjango span lDeveloperspan Sr PythonDjango Developer Bank of America TX 7 years full stack experiences in python and web application development technologies include Flask Django AngularJS ExtJS Twitter Bootstrap 30 MySql MongoDB ElasticSearch Celery RabbitMQ etc to solve complex business requirements and software design problems Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Knowledge of Cloud Computing OpenstackHelion SDN OpenflowOpendaylight NFV Cloud Foundry Docker Ansible Chef Jenkins Used and configured NGINX and Nodejs servers for the portal to run on and made them work even for CORS Expertise in Amazon Cloud Services and its features EC2 VPC EBS AMI snapshots Autoscaling Cloud Formation IAM RDS SES SQS SNS RDS EMR ELB CloudWatch etc Upgrading skills in the areas of Linux internals administration cloud computing technologies VmwareNSXStorageVcloud Director OpenstackHelionCloud Foundry Chef Jenkins Ansible Experience developing scripts using Shell Ansible to automate the daytoday processes Worked on full conversion of a Razorbased MVC server based application into a SPA using asynchronous programming with the framework AngularJS and TypeScript 20 Developed a dynamic exploit deployment framework using Python Flask and MongoDB Experience in scaling the CI web application horizontally with a software load balancer HAProxy and scalable http web servers gunicorn nginx Expertise in JUNIT testing using Mockito and Power Mockito integration testing and SOAP UI testing Extensive experience in using Amazon Web Services RDS EC2 Redshift SQS SNS Cloud Watch and S3 Work Experience Sr PythonDjango Developer Bank of America Burlington MA May 2015 to Present Responsibilities Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Used ADONET objects such as DataSet SQLCommand SQLConnection and SQLDataReader Worked on Python Scientific packages like Numpy and Pandas to handle data sets effectively GUI modules is developed using HTML NET Controls and C Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Written Business Logic Components Assemblies using CNET to implement the common functions used in the entire application and used ADONET for database access Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with different controls in ASPNET 20 like MultiView Wizard Control Master Page and Web Administrator Tool Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed and Lock mechanisms were implemented and the functionality of multithreading has been used Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Launching Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu and Configuring launched instances with respect to specific applications Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Strong experience in developing entire application using Python MySQL Linux and Django framework along with a rich user interface using HTML CSS JavaScript and jQuery Sound knowledge in automation tools like Ansible Puppet Chef Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Provided DevOps support using Docker and Ansible Python Developer Tech Data Corporation Clearwater FL December 2013 to April 2015 Responsibilities Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Manage continuous build and share progress with Confluence Bamboo and SVN Managed over 50 Ubuntu servers in the cloud running server services such as apache nginx supervisord mysql postgresql django ruby and gunicorn supporting over 3 million monthly views Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Extensively used concepts of Delegates generics boxingunboxing and Inheritance in CNET along with Abstract classesInterfaces and Polymorphism Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Binded the entire application on Nginx gunicorn server as well as build server work using Jenkins Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Selfhealing Server Infrastructure development on AWS cloud extensive usage of AWSEC2 VPC CLI S3 Route53 Cloud Formation Cloud Front SNS SQS Cloud Trail Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Python Developer Frontier Communications Stamford CT August 2011 to November 2013 Responsibilities Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Involved in document analysis and technical feasibility discussions for implementing new functionalities Designed frontend and backend of the application using Python NodeJS on Django Web Framework Involved in developing front end screens using JSP Struts View Tags Bootstrap JSTL DHTML CSS3 and JavaScript and jQuery Implemented CICD using Jenkins for development process Involved in document analysis and technical feasibility discussions for implementing new functionalities Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Analyzed Chef Nginx playbooks to determine how to migrate them to Ansible Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Created custom user defined functions in Python language for Pig Puppet Manifests to provision complex multinode applications composed of Python Node Apache Nginx Passenger Unicorn Elastic Search Hadoop and MySQL Built application logic using Python and worked on Behavioraldriven programming in Python Developed the UI using Winforms in VBnet Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Experienced in the installation patching and upgrading of Applications Openfire Apache Nginx Drupal etc on UnixLinux and AWS platform Managed developed and designed a dashboard control panel for customers and Administrators using Django MongoDB PostgreSQL and VMWare API calls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Associate Systems Engineer Quest Diagnostics Madison NJ May 2010 to July 2011 Responsibilities Developed coded enhanced a custom web based applications to support Quest Diagnostics for different business divisions Created C classes that encapsulate the data in database tables rows used Informix SQL as our database server for our web based applications Implemented C functions wrapper that contain utilities functions for database connectivity access and update Combined multiple existing batch applications into a single Spring Batch application to promote code reusability and maintainability Implemented Apache server as application server for our web applications configured Apache server to support multiple web based applications Developed Spring Based Web services SOAP through XSD and WSDL Deployment planning and scheduling of SSIS Packages through SQL jobs Worked on the Web Services using SOAP and Restful web services Created many complex SQL queries and used them in Oracle Reports to generate reports Build custom front end UI web pages using HTML DHTML CGI CSS and JavaScript Developed the UI pages using HTML DHTML Java script AJAX JQUERY Angular JS and tag libraries etc Create Process Jobs running overnight using C C and Unix Shell Scripting to update database application based on tasks schedule Developed Stored procedures and Triggers for business rules Converted existing web based applications built with C C CGI Informix ESQLC to Java web based applications technology Used CVS as a documentation repository and version controlling tool Skills C Django Docker Git Gui Python Flask Matplotlib Numpy Tkinter Subversion Svn Mysql Postgresql Sql Scala Linux Solaris Sun Unix",
    "entities": [
        "Sr PythonDjango Developer Sr span lPythonspanDjango span lDeveloperspan Sr PythonDjango Developer Bank of America",
        "Bootstrap 30 MySql MongoDB ElasticSearch Celery",
        "GUI",
        "Nodejs",
        "S3 Work",
        "MultiView",
        "UNIX",
        "HAProxy",
        "AJAX JSON",
        "Working",
        "Polymorphism Developed",
        "Informix SQL",
        "Present Responsibilities Involved",
        "Applications Openfire Apache",
        "CVS",
        "SOAP",
        "User Controls",
        "Cassandra database Created",
        "Power Mockito",
        "DevOps",
        "Amazon",
        "Oracle apps to PostgreSQL",
        "SSIS",
        "Python Developer Frontier Communications Stamford CT",
        "Written Business Logic Components Assemblies",
        "Bash",
        "Mockito",
        "Windows",
        "Restful",
        "Shell Ansible",
        "Associate Systems Engineer Quest Diagnostics Madison NJ",
        "HTML5",
        "Develop",
        "Flask Django",
        "SQS Launching Amazon EC2 Cloud Instances",
        "NodeJS Involved",
        "Linux",
        "JavaScript Involved",
        "jQuery Implemented CICD",
        "Flask",
        "Quest Diagnostics",
        "VMWare API",
        "JSP Struts View Tags Bootstrap",
        "WSDL Deployment",
        "RDS",
        "UnixLinux",
        "apache nginx",
        "CSV",
        "Oracle Reports",
        "API",
        "HTML CSS JavaScript",
        "NGINX",
        "Winforms",
        "Angular 2Mongo DB Express",
        "AWSEC2 VPC CLI S3",
        "AWS",
        "VBnet",
        "HTML DHTML CGI CSS",
        "Amazon Web Services RDS EC2 Redshift SQS",
        "multinode",
        "HTML",
        "TypeScript",
        "jQuery Knowledge of Cloud Computing OpenstackHelion SDN OpenflowOpendaylight NFV Cloud Foundry Docker Ansible Chef Jenkins Used",
        "Analyzed Chef Nginx",
        "AWS Relational Database Service Utilized Django",
        "SQL",
        "Nginx",
        "VmwareNSXStorageVcloud",
        "Administrators",
        "Bank of America Burlington",
        "SSH",
        "Python Node Apache Nginx Passenger Unicorn Elastic Search Hadoop",
        "CI",
        "JUNIT",
        "Skills C Django Docker",
        "Created C",
        "GUI modules",
        "Pandas",
        "jQuery Sound",
        "DataSet SQLCommand SQLConnection",
        "the Web Services",
        "Pig Puppet Manifests",
        "Build",
        "Ansible Puppet Chef Organized",
        "Djangos",
        "UI",
        "Selenium",
        "Amazon Cloud Services",
        "XSD",
        "C C",
        "SOAP UI",
        "SVN",
        "jQuery",
        "SPA",
        "ASPNET",
        "HTML NET Controls",
        "Python Flask PHP Django XML JSON",
        "Integration",
        "Followed Agile",
        "CNET",
        "Implemented Apache"
    ],
    "experience": "Experience developing scripts using Shell Ansible to automate the daytoday processes Worked on full conversion of a Razorbased MVC server based application into a SPA using asynchronous programming with the framework AngularJS and TypeScript 20 Developed a dynamic exploit deployment framework using Python Flask and MongoDB Experience in scaling the CI web application horizontally with a software load balancer HAProxy and scalable http web servers gunicorn nginx Expertise in JUNIT testing using Mockito and Power Mockito integration testing and SOAP UI testing Extensive experience in using Amazon Web Services RDS EC2 Redshift SQS SNS Cloud Watch and S3 Work Experience Sr PythonDjango Developer Bank of America Burlington MA May 2015 to Present Responsibilities Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Used ADONET objects such as DataSet SQLCommand SQLConnection and SQLDataReader Worked on Python Scientific packages like Numpy and Pandas to handle data sets effectively GUI modules is developed using HTML NET Controls and C Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Written Business Logic Components Assemblies using CNET to implement the common functions used in the entire application and used ADONET for database access Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with different controls in ASPNET 20 like MultiView Wizard Control Master Page and Web Administrator Tool Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed and Lock mechanisms were implemented and the functionality of multithreading has been used Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Launching Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu and Configuring launched instances with respect to specific applications Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Strong experience in developing entire application using Python MySQL Linux and Django framework along with a rich user interface using HTML CSS JavaScript and jQuery Sound knowledge in automation tools like Ansible Puppet Chef Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Provided DevOps support using Docker and Ansible Python Developer Tech Data Corporation Clearwater FL December 2013 to April 2015 Responsibilities Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Manage continuous build and share progress with Confluence Bamboo and SVN Managed over 50 Ubuntu servers in the cloud running server services such as apache nginx supervisord mysql postgresql django ruby and gunicorn supporting over 3 million monthly views Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Extensively used concepts of Delegates generics boxingunboxing and Inheritance in CNET along with Abstract classesInterfaces and Polymorphism Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Binded the entire application on Nginx gunicorn server as well as build server work using Jenkins Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Selfhealing Server Infrastructure development on AWS cloud extensive usage of AWSEC2 VPC CLI S3 Route53 Cloud Formation Cloud Front SNS SQS Cloud Trail Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Python Developer Frontier Communications Stamford CT August 2011 to November 2013 Responsibilities Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Involved in document analysis and technical feasibility discussions for implementing new functionalities Designed frontend and backend of the application using Python NodeJS on Django Web Framework Involved in developing front end screens using JSP Struts View Tags Bootstrap JSTL DHTML CSS3 and JavaScript and jQuery Implemented CICD using Jenkins for development process Involved in document analysis and technical feasibility discussions for implementing new functionalities Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Analyzed Chef Nginx playbooks to determine how to migrate them to Ansible Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Created custom user defined functions in Python language for Pig Puppet Manifests to provision complex multinode applications composed of Python Node Apache Nginx Passenger Unicorn Elastic Search Hadoop and MySQL Built application logic using Python and worked on Behavioraldriven programming in Python Developed the UI using Winforms in VBnet Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Experienced in the installation patching and upgrading of Applications Openfire Apache Nginx Drupal etc on UnixLinux and AWS platform Managed developed and designed a dashboard control panel for customers and Administrators using Django MongoDB PostgreSQL and VMWare API calls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Associate Systems Engineer Quest Diagnostics Madison NJ May 2010 to July 2011 Responsibilities Developed coded enhanced a custom web based applications to support Quest Diagnostics for different business divisions Created C classes that encapsulate the data in database tables rows used Informix SQL as our database server for our web based applications Implemented C functions wrapper that contain utilities functions for database connectivity access and update Combined multiple existing batch applications into a single Spring Batch application to promote code reusability and maintainability Implemented Apache server as application server for our web applications configured Apache server to support multiple web based applications Developed Spring Based Web services SOAP through XSD and WSDL Deployment planning and scheduling of SSIS Packages through SQL jobs Worked on the Web Services using SOAP and Restful web services Created many complex SQL queries and used them in Oracle Reports to generate reports Build custom front end UI web pages using HTML DHTML CGI CSS and JavaScript Developed the UI pages using HTML DHTML Java script AJAX JQUERY Angular JS and tag libraries etc Create Process Jobs running overnight using C C and Unix Shell Scripting to update database application based on tasks schedule Developed Stored procedures and Triggers for business rules Converted existing web based applications built with C C CGI Informix ESQLC to Java web based applications technology Used CVS as a documentation repository and version controlling tool Skills C Django Docker Git Gui Python Flask Matplotlib Numpy Tkinter Subversion Svn Mysql Postgresql Sql Scala Linux Solaris Sun Unix",
    "extracted_keywords": [
        "Sr",
        "PythonDjango",
        "Developer",
        "Sr",
        "span",
        "lPythonspanDjango",
        "span",
        "lDeveloperspan",
        "Sr",
        "PythonDjango",
        "Developer",
        "Bank",
        "America",
        "TX",
        "years",
        "stack",
        "experiences",
        "python",
        "web",
        "application",
        "development",
        "technologies",
        "Flask",
        "Django",
        "ExtJS",
        "Twitter",
        "Bootstrap",
        "MySql",
        "MongoDB",
        "ElasticSearch",
        "Celery",
        "business",
        "requirements",
        "software",
        "design",
        "problems",
        "applications",
        "Python",
        "Flask",
        "PHP",
        "Django",
        "CSS",
        "HTML",
        "HTML5",
        "JavaScript",
        "AngularJS",
        "jQuery",
        "Knowledge",
        "Cloud",
        "Computing",
        "OpenstackHelion",
        "SDN",
        "OpenflowOpendaylight",
        "NFV",
        "Cloud",
        "Foundry",
        "Docker",
        "Ansible",
        "Chef",
        "Jenkins",
        "NGINX",
        "Nodejs",
        "servers",
        "portal",
        "CORS",
        "Expertise",
        "Amazon",
        "Cloud",
        "Services",
        "features",
        "EC2",
        "VPC",
        "EBS",
        "AMI",
        "snapshots",
        "Cloud",
        "Formation",
        "IAM",
        "RDS",
        "SES",
        "SQS",
        "SNS",
        "RDS",
        "EMR",
        "ELB",
        "CloudWatch",
        "Upgrading",
        "skills",
        "areas",
        "Linux",
        "internals",
        "administration",
        "cloud",
        "computing",
        "technologies",
        "VmwareNSXStorageVcloud",
        "Director",
        "OpenstackHelionCloud",
        "Foundry",
        "Chef",
        "Jenkins",
        "Ansible",
        "Experience",
        "scripts",
        "Shell",
        "Ansible",
        "daytoday",
        "processes",
        "conversion",
        "Razorbased",
        "MVC",
        "server",
        "application",
        "SPA",
        "programming",
        "framework",
        "AngularJS",
        "TypeScript",
        "deployment",
        "framework",
        "Python",
        "Flask",
        "Experience",
        "CI",
        "web",
        "application",
        "software",
        "load",
        "balancer",
        "HAProxy",
        "http",
        "web",
        "servers",
        "nginx",
        "Expertise",
        "JUNIT",
        "testing",
        "Mockito",
        "Power",
        "Mockito",
        "integration",
        "testing",
        "SOAP",
        "UI",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "RDS",
        "EC2",
        "Redshift",
        "SQS",
        "SNS",
        "Cloud",
        "Watch",
        "S3",
        "Work",
        "Experience",
        "Sr",
        "PythonDjango",
        "Developer",
        "Bank",
        "America",
        "Burlington",
        "MA",
        "May",
        "Present",
        "Responsibilities",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "bootstrap",
        "AJAX",
        "JSON",
        "Jquery",
        "Web",
        "Application",
        "MultiTier",
        "Architecture",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "RESTful",
        "Web",
        "Services",
        "ADONET",
        "objects",
        "DataSet",
        "SQLCommand",
        "SQLConnection",
        "SQLDataReader",
        "Python",
        "packages",
        "Numpy",
        "Pandas",
        "data",
        "sets",
        "GUI",
        "modules",
        "HTML",
        "NET",
        "Controls",
        "C",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Written",
        "Business",
        "Logic",
        "Components",
        "Assemblies",
        "CNET",
        "functions",
        "application",
        "ADONET",
        "database",
        "access",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "controls",
        "ASPNET",
        "MultiView",
        "Wizard",
        "Control",
        "Master",
        "Page",
        "Web",
        "Administrator",
        "Tool",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Selenium",
        "testing",
        "mechanisms",
        "functionality",
        "multithreading",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "software",
        "Python",
        "C",
        "web",
        "development",
        "frameworks",
        "Flask",
        "Angular",
        "2Mongo",
        "DB",
        "Express",
        "Nodejs",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "applications",
        "AWS",
        "services",
        "EC2",
        "Route",
        "RDS",
        "DynamoDB",
        "EMR",
        "SQS",
        "Launching",
        "Amazon",
        "EC2",
        "Cloud",
        "Instances",
        "Amazon",
        "Web",
        "Services",
        "Linux",
        "Ubuntu",
        "Configuring",
        "instances",
        "respect",
        "applications",
        "migration",
        "tasks",
        "Oracle",
        "apps",
        "PostgreSQL",
        "scripts",
        "sh",
        "ksh",
        "Bash",
        "daytoday",
        "administration",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Strong",
        "experience",
        "application",
        "Python",
        "MySQL",
        "Linux",
        "Django",
        "framework",
        "user",
        "interface",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Sound",
        "knowledge",
        "automation",
        "tools",
        "Puppet",
        "Chef",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "JSON",
        "REST",
        "SOAP",
        "DevOps",
        "support",
        "Docker",
        "Ansible",
        "Python",
        "Developer",
        "Tech",
        "Data",
        "Corporation",
        "Clearwater",
        "FL",
        "December",
        "April",
        "Responsibilities",
        "data",
        "storage",
        "PostgreSQL",
        "database",
        "AWS",
        "Relational",
        "Database",
        "Service",
        "Django",
        "ORM",
        "queries",
        "cursors",
        "queries",
        "data",
        "relations",
        "Queries",
        "programming",
        "usage",
        "User",
        "Controls",
        "ASPNET",
        "server",
        "Develop",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "hardware",
        "system",
        "design",
        "documents",
        "business",
        "objectives",
        "developer",
        "testing",
        "activities",
        "unit",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "Manage",
        "build",
        "progress",
        "Confluence",
        "Bamboo",
        "SVN",
        "Ubuntu",
        "servers",
        "server",
        "services",
        "apache",
        "nginx",
        "supervisord",
        "mysql",
        "postgresql",
        "ruby",
        "views",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "concepts",
        "Delegates",
        "Inheritance",
        "CNET",
        "classesInterfaces",
        "Polymorphism",
        "Developed",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "application",
        "Nginx",
        "server",
        "build",
        "server",
        "work",
        "Jenkins",
        "Worked",
        "crossbrowser",
        "development",
        "HTML5",
        "CSS3",
        "websites",
        "Windows",
        "Safari",
        "IE",
        "IE",
        "IE",
        "Firefox",
        "Chrome",
        "network",
        "web",
        "pages",
        "user",
        "application",
        "links",
        "page",
        "user",
        "use",
        "REST",
        "Selfhealing",
        "Server",
        "Infrastructure",
        "development",
        "AWS",
        "usage",
        "AWSEC2",
        "VPC",
        "CLI",
        "S3",
        "Route53",
        "Cloud",
        "Formation",
        "Cloud",
        "Front",
        "SNS",
        "SQS",
        "Cloud",
        "Trail",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "commands",
        "security",
        "patching",
        "Apache",
        "NGINX",
        "Vhosts",
        "Linux",
        "hosts",
        "Ubuntu",
        "CentOS",
        "Amazon",
        "Linux",
        "SSH",
        "page",
        "application",
        "Angular",
        "JS",
        "MongoDB",
        "NodeJS",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "Python",
        "Developer",
        "Frontier",
        "Communications",
        "Stamford",
        "CT",
        "August",
        "November",
        "Responsibilities",
        "presentation",
        "layer",
        "GUI",
        "framework",
        "HTML",
        "ClientSide",
        "validations",
        "JavaScript",
        "document",
        "analysis",
        "feasibility",
        "discussions",
        "functionalities",
        "frontend",
        "backend",
        "application",
        "Python",
        "NodeJS",
        "Django",
        "Web",
        "Framework",
        "end",
        "screens",
        "JSP",
        "Struts",
        "View",
        "Tags",
        "Bootstrap",
        "JSTL",
        "DHTML",
        "CSS3",
        "JavaScript",
        "jQuery",
        "CICD",
        "Jenkins",
        "development",
        "process",
        "document",
        "analysis",
        "feasibility",
        "discussions",
        "functionalities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Analyzed",
        "Chef",
        "Nginx",
        "REST",
        "APIs",
        "Scala",
        "framework",
        "data",
        "Cassandra",
        "database",
        "custom",
        "user",
        "functions",
        "Python",
        "language",
        "Pig",
        "Puppet",
        "Manifests",
        "provision",
        "multinode",
        "applications",
        "Python",
        "Node",
        "Apache",
        "Nginx",
        "Passenger",
        "Unicorn",
        "Elastic",
        "Search",
        "Hadoop",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Behavioraldriven",
        "programming",
        "Python",
        "UI",
        "Winforms",
        "VBnet",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "installation",
        "patching",
        "upgrading",
        "Applications",
        "Openfire",
        "Apache",
        "Nginx",
        "Drupal",
        "UnixLinux",
        "AWS",
        "platform",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "MongoDB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Develop",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "hardware",
        "system",
        "design",
        "documents",
        "business",
        "objectives",
        "developer",
        "testing",
        "activities",
        "unit",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "Associate",
        "Systems",
        "Engineer",
        "Quest",
        "Diagnostics",
        "Madison",
        "NJ",
        "May",
        "July",
        "Responsibilities",
        "custom",
        "web",
        "applications",
        "Quest",
        "Diagnostics",
        "business",
        "divisions",
        "C",
        "classes",
        "data",
        "database",
        "tables",
        "rows",
        "Informix",
        "SQL",
        "database",
        "server",
        "web",
        "applications",
        "C",
        "functions",
        "wrapper",
        "utilities",
        "functions",
        "database",
        "connectivity",
        "access",
        "batch",
        "applications",
        "Spring",
        "Batch",
        "application",
        "code",
        "reusability",
        "maintainability",
        "Apache",
        "server",
        "application",
        "server",
        "web",
        "applications",
        "Apache",
        "server",
        "web",
        "applications",
        "Spring",
        "Based",
        "Web",
        "services",
        "SOAP",
        "XSD",
        "WSDL",
        "Deployment",
        "planning",
        "scheduling",
        "SSIS",
        "Packages",
        "SQL",
        "jobs",
        "Web",
        "Services",
        "SOAP",
        "web",
        "services",
        "SQL",
        "queries",
        "Oracle",
        "Reports",
        "reports",
        "Build",
        "custom",
        "end",
        "UI",
        "web",
        "pages",
        "HTML",
        "DHTML",
        "CGI",
        "CSS",
        "JavaScript",
        "UI",
        "pages",
        "HTML",
        "DHTML",
        "Java",
        "script",
        "AJAX",
        "JQUERY",
        "Angular",
        "JS",
        "tag",
        "libraries",
        "Process",
        "Jobs",
        "C",
        "C",
        "Unix",
        "Shell",
        "Scripting",
        "database",
        "application",
        "tasks",
        "schedule",
        "procedures",
        "Triggers",
        "business",
        "rules",
        "web",
        "applications",
        "C",
        "C",
        "CGI",
        "ESQLC",
        "Java",
        "web",
        "applications",
        "technology",
        "CVS",
        "documentation",
        "repository",
        "version",
        "tool",
        "Skills",
        "C",
        "Django",
        "Docker",
        "Git",
        "Gui",
        "Python",
        "Flask",
        "Matplotlib",
        "Numpy",
        "Tkinter",
        "Subversion",
        "Svn",
        "Mysql",
        "Postgresql",
        "Sql",
        "Scala",
        "Linux",
        "Solaris",
        "Sun",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:02:12.010620",
    "resume_data": "Sr PythonDjango Developer Sr span lPythonspanDjango span lDeveloperspan Sr PythonDjango Developer Bank of America TX 7 years full stack experiences in python and web application development technologies include Flask Django AngularJS ExtJS Twitter Bootstrap 30 MySql MongoDB ElasticSearch Celery RabbitMQ etc to solve complex business requirements and software design problems Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Knowledge of Cloud Computing OpenstackHelion SDN OpenflowOpendaylight NFV Cloud Foundry Docker Ansible Chef Jenkins Used and configured NGINX and Nodejs servers for the portal to run on and made them work even for CORS Expertise in Amazon Cloud Services and its features EC2 VPC EBS AMI snapshots Autoscaling Cloud Formation IAM RDS SES SQS SNS RDS EMR ELB CloudWatch etc Upgrading skills in the areas of Linux internals administration cloud computing technologies VmwareNSXStorageVcloud Director OpenstackHelionCloud Foundry Chef Jenkins Ansible Experience developing scripts using Shell Ansible to automate the daytoday processes Worked on full conversion of a Razorbased MVC server based application into a SPA using asynchronous programming with the framework AngularJS and TypeScript 20 Developed a dynamic exploit deployment framework using Python Flask and MongoDB Experience in scaling the CI web application horizontally with a software load balancer HAProxy and scalable http web servers gunicorn nginx Expertise in JUNIT testing using Mockito and Power Mockito integration testing and SOAP UI testing Extensive experience in using Amazon Web Services RDS EC2 Redshift SQS SNS Cloud Watch and S3 Work Experience Sr PythonDjango Developer Bank of America Burlington MA May 2015 to Present Responsibilities Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Used ADONET objects such as DataSet SQLCommand SQLConnection and SQLDataReader Worked on Python Scientific packages like Numpy and Pandas to handle data sets effectively GUI modules is developed using HTML NET Controls and C Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Written Business Logic Components Assemblies using CNET to implement the common functions used in the entire application and used ADONET for database access Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with different controls in ASPNET 20 like MultiView Wizard Control Master Page and Web Administrator Tool Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed and Lock mechanisms were implemented and the functionality of multithreading has been used Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Launching Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu and Configuring launched instances with respect to specific applications Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Strong experience in developing entire application using Python MySQL Linux and Django framework along with a rich user interface using HTML CSS JavaScript and jQuery Sound knowledge in automation tools like Ansible Puppet Chef Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Provided DevOps support using Docker and Ansible Python Developer Tech Data Corporation Clearwater FL December 2013 to April 2015 Responsibilities Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Manage continuous build and share progress with Confluence Bamboo and SVN Managed over 50 Ubuntu servers in the cloud running server services such as apache nginx supervisord mysql postgresql django ruby and gunicorn supporting over 3 million monthly views Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in designing application system requirements and coded backend and frontend in Django Python Extensively used concepts of Delegates generics boxingunboxing and Inheritance in CNET along with Abstract classesInterfaces and Polymorphism Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Binded the entire application on Nginx gunicorn server as well as build server work using Jenkins Worked with crossbrowser and crossplatform development of HTML5 and CSS3 based websites in Windows like Safari IE 6 IE 7 IE 8 Firefox and Chrome Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Selfhealing Server Infrastructure development on AWS cloud extensive usage of AWSEC2 VPC CLI S3 Route53 Cloud Formation Cloud Front SNS SQS Cloud Trail Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in Software Development Life Cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Python Developer Frontier Communications Stamford CT August 2011 to November 2013 Responsibilities Developed the presentation layer and GUI framework that are written using HTML and ClientSide validations were done using JavaScript Involved in document analysis and technical feasibility discussions for implementing new functionalities Designed frontend and backend of the application using Python NodeJS on Django Web Framework Involved in developing front end screens using JSP Struts View Tags Bootstrap JSTL DHTML CSS3 and JavaScript and jQuery Implemented CICD using Jenkins for development process Involved in document analysis and technical feasibility discussions for implementing new functionalities Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Analyzed Chef Nginx playbooks to determine how to migrate them to Ansible Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Created custom user defined functions in Python language for Pig Puppet Manifests to provision complex multinode applications composed of Python Node Apache Nginx Passenger Unicorn Elastic Search Hadoop and MySQL Built application logic using Python and worked on Behavioraldriven programming in Python Developed the UI using Winforms in VBnet Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Experienced in the installation patching and upgrading of Applications Openfire Apache Nginx Drupal etc on UnixLinux and AWS platform Managed developed and designed a dashboard control panel for customers and Administrators using Django MongoDB PostgreSQL and VMWare API calls Develop and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Associate Systems Engineer Quest Diagnostics Madison NJ May 2010 to July 2011 Responsibilities Developed coded enhanced a custom web based applications to support Quest Diagnostics for different business divisions Created C classes that encapsulate the data in database tables rows used Informix SQL as our database server for our web based applications Implemented C functions wrapper that contain utilities functions for database connectivity access and update Combined multiple existing batch applications into a single Spring Batch application to promote code reusability and maintainability Implemented Apache server as application server for our web applications configured Apache server to support multiple web based applications Developed Spring Based Web services SOAP through XSD and WSDL Deployment planning and scheduling of SSIS Packages through SQL jobs Worked on the Web Services using SOAP and Restful web services Created many complex SQL queries and used them in Oracle Reports to generate reports Build custom front end UI web pages using HTML DHTML CGI CSS and JavaScript Developed the UI pages using HTML DHTML Java script AJAX JQUERY Angular JS and tag libraries etc Create Process Jobs running overnight using C C and Unix Shell Scripting to update database application based on tasks schedule Developed Stored procedures and Triggers for business rules Converted existing web based applications built with C C CGI Informix ESQLC to Java web based applications technology Used CVS as a documentation repository and version controlling tool Skills C Django Docker Git Gui Python Flask Matplotlib Numpy Tkinter Subversion Svn Mysql Postgresql Sql Scala Linux Solaris Sun Unix",
    "unique_id": "47da5330-0142-4b89-a228-d39d94750687"
}