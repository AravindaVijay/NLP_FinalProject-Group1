{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer EOG Resources Houston TX Around 7 years of IT experience in design development testing and implementation of various standalone and clientserver architecturebased enterprise application software using various technologies analyzing complex business requirements mapping them to system specifications Experience in developing webbased applications using Python 3427 Django 1917 Designed and implemented large scale business critical systems Have excellent knowledge on python collections and multithreading Skilled experience in python with proven expertise in using new tools and technical developments Implemented different python libraries Beautiful Soup numpy scipy pytables Jasy Pickle PySide Pandas data frame Pyvmomi FabricAnaconda3x and urllib2 in various tasks Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Experienced in working with various Python Frameworks Django Flask Web2py cherry Bottle Good experience in developing web applications implementing Model Template View architecture using Django web application frameworks Experience on web development using HTML45 CSSCSS3 Java Script JQUERRY Angular Js Ajax Bootstrap Experience in implementing with serverside technologies with Restful API and MVC design patterns with node JS and Django framework Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Good knowledge of server Apache Tomcat Web logic Jenkins Heroku Good knowledge of web services with protocols SOAP Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route 53 Experience in working with Amazon web services Amazon EC2 and Amazon s3 Worked on Python Testing frameworks like zope pytest nose and Robot framework Involved in writing stored procedures using MySQL Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good Experience in debugging the issues using pdb Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Most of the applications were developed with Python Django and PostgreSQL using JIRA Agile methodology Work Experience Python Developer EOG Resources Houston TX May 2018 to Present Responsibilities Designed the database schema for the content management system Generated REST API using FlaskDjango Frame works Follows MVC pattern using Django frame Work Worked on Different databases like MongoPostgressMysqloracale Using Different type of python libraries like pymongo pymysql cxoracle pandas flaskcors Flaskrestful Sqlalchemygooglecloudpubsub Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Publishing data to google cloud pub and subscribing the data fron google cloud pub sub Worked on Differeant platforms Centos UbuntuDebianRhel Deploy each and every Script on Docker Container Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created Data tables utilizing flasksqlalchemy to display welldata and policy information and add delete update Well records Worked on front end frame works like CSS BootstrapjavascriptReact for development of Web applications Wrote Python scripts to parse JSON documents and load the data in database Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Generated Python Django forms to record data of online users and used PyTest for writing test cases Environment Python MySQL Jupyter Cassandra Flask Linux HTML Java script Windows Linux Python Developer Kmart January 2017 to May 2018 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Worked on Several python libraries like Python numPY and matPlotLib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Developed entire frontend and backend modules using Python on Django Web Framework Participated in requirement gathering and worked closely with the architect in designing and modeling Managed Docker orchestration and Docker containerization using Kubernetes Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers Involved in development of a Map based application for integral analysis purpose Involved in analysis and design of the application features Worked on Pandas Anoconda3x Libraries to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Designed and developed the UI of the website using HTML XHTML AJAX CSS JavaScript bootstrap Implemented REST API for storing in Redis which allows different users and roles to store security access and elastic search JSON data Designed data converting and storing for largescale JSON files using Redis where users can add delete update batch and query the dataset from API added ETag for cache efficiency Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Implemented Model Template View architecture in developing the web application with the help of Django framework Implemented code to perform CRUD operations on MongoDB using PyMongo module Proficient with container systems like Docker and container orchestration like EC2 Container Service Kubernetes worked with Terraform Design and Developed and maintained PostgreSQL database architecture and used SOAP and Restful API for information extraction Involved in migrating the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed data modelling and data manipulation using SQL on Oracle MySQL and PostgreSQL Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Managed deployment automation using Chef Custom Puppet modules and created test scripts using Selenium Web driver using Page Object Model Involved in SDLC methodologies like AGILE and SCRUM Process Environment Python32 MySQL HTML Django Flask HTML5 CSS XML MySQL JavaScript AWS Linux Shell Scripting PHP AJAX Cassandra Python Developer TransAmerica Cedar Rapids IA August 2015 to December 2016 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 34 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to ApacheCassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Opscenter Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used Python and Django to interface with the JQueryUI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Pythonmatplotlib library Performed troubleshooting fixed and deployed many Pythonbug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in debugging and troubleshooting programming related issues Deployment of the web application using the Linux server Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with clients Experience in debugging and troubleshooting programming related issues Environment Python Django MySQL RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins pytest Robot GitHub Linux and Windows Python Developer Santer Bank Boston MA December 2014 to July 2015 Responsibilities Worked with team of developers on Python applications for RISK management Designed the database schema for the content management system Generated Python Django Forms to record data of online users Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and REST API calls Wrote Python scripts to parse JSON documents and load the data in database Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Risk analysis for potential points of failure database communication points file system errors Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Wrote Python routines to log into the websites and fetch data for selected options Designed and developed the UI of the website using HTML CSS and JavaScript Worked on front end frame works like CSS Bootstrap for development of Web applications Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Designed and created backend data access modules using PLSQL stored procedures and Oracle Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used Python to extract weekly bed availability information from XML files using underscore JS Developed and executed User Acceptance Testing portion of test plan Generated Python Django forms to record data of online users and used PyTest for writing test cases Responsible for generating and delivering the complete test status reports of each patient Environment Python MySQL Django Flask PHP Linux XMLHTML Java script Windows Python Developer HealthAsyst Ltd Bengaluru Karnataka March 2013 to October 2014 Responsibilities Used Numpy for Numerical analysis for Insurance premium Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Deployment of the web application using the Linux server Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Interactive in providing change requests trouble reports and requirements collection with the client Implemented MVC architecture in developing the web application with the help of Django framework Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Managed code versioning with GitHub and deployment to staging and production servers Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Environment Python 27 Django 14 Cassandra RabbitMQSoapUI REST API Bash MySQL CSS Bootstrap Mongo DB MS SQL Server JavaScript Git Linux Shell Scripting Education Bachelors Skills C HTML BOOTSTRAP JSON OBJECT ORIENTED Javascript PHP Jquery MYSQL Additional Information Technical Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 332724 Ruby Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XLMVC3 Markup languages HTML XML JSONBootstrap Servers Apache Tomcat SOAP open stock RESTful web services Databases Oracle My SQL Postgress Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Phycham Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex",
    "entities": [
        "GUI",
        "the Credit Monitoring Systems Developed",
        "UNIX",
        "UML Rational Rose for Object Oriented AnalysisObject Oriented Design",
        "SQLite Revision Controlling Systems",
        "REST JSON",
        "Working",
        "Object Diagrams",
        "Python Frameworks Django Flask",
        "Microsoft Excel Super",
        "google",
        "SOAP",
        "XML",
        "MAC",
        "PHP Good",
        "API Integration Used Celery",
        "JS Developed",
        "node JS",
        "HTML XML JSONBootstrap Servers Apache Tomcat SOAP",
        "GitHub Bit Bucket",
        "Amazon",
        "Python",
        "Bugzilla Planning",
        "Developed",
        "Bash",
        "CSS Bootstrap",
        "Created Python",
        "Django",
        "MultiThreading",
        "Pandas Anoconda3x Libraries",
        "MongoPostgressMysqloracale Using Different",
        "REST API",
        "AGILE",
        "Follows MVC",
        "Created Data",
        "Flask",
        "SQL Queries",
        "MS",
        "PyQt",
        "MVC",
        "JQueryUI",
        "Kubernetes Used Kubernetes",
        "Python Django and PostgreSQL",
        "Rabbit MQ",
        "HTML CSS",
        "API",
        "Restful API",
        "Present Responsibilities Designed",
        "Terraform Design",
        "Sqlite3",
        "AWS",
        "Oracle My SQL Postgress",
        "JavaScript AWS Linux",
        "CSS BootstrapjavascriptReact",
        "PyMongo",
        "Oracle Good",
        "ELB",
        "DSE DevCentre Datastax Opscenter Implemented",
        "SQL",
        "Page Object Model Involved",
        "Redis",
        "GitHub",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "ApacheCassandra",
        "Administrators",
        "Amazon AWS",
        "Created PHPMySQL",
        "Chef Custom Puppet",
        "SQLite",
        "FlaskDjango Frame",
        "CRUD",
        "Performed",
        "XML Web Services",
        "Selenium",
        "Microsoft",
        "PyCharm PyScripter Spyder PyStudio",
        "SQL Queries Stored",
        "Oracle MySQL and PostgreSQL Maintained Puppet",
        "ETag",
        "Bash Develop",
        "EC2 Container Service Kubernetes",
        "Boston",
        "Data",
        "Used Apache CQ Team Foundation Server",
        "Bash Good",
        "NoSQL",
        "Oracle SQLite PostgreSQL",
        "PyTest",
        "MYSQL Additional Information Technical Skills"
    ],
    "experience": "Experience in developing webbased applications using Python 3427 Django 1917 Designed and implemented large scale business critical systems Have excellent knowledge on python collections and multithreading Skilled experience in python with proven expertise in using new tools and technical developments Implemented different python libraries Beautiful Soup numpy scipy pytables Jasy Pickle PySide Pandas data frame Pyvmomi FabricAnaconda3x and urllib2 in various tasks Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Experienced in working with various Python Frameworks Django Flask Web2py cherry Bottle Good experience in developing web applications implementing Model Template View architecture using Django web application frameworks Experience on web development using HTML45 CSSCSS3 Java Script JQUERRY Angular Js Ajax Bootstrap Experience in implementing with serverside technologies with Restful API and MVC design patterns with node JS and Django framework Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Good knowledge of server Apache Tomcat Web logic Jenkins Heroku Good knowledge of web services with protocols SOAP Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route 53 Experience in working with Amazon web services Amazon EC2 and Amazon s3 Worked on Python Testing frameworks like zope pytest nose and Robot framework Involved in writing stored procedures using MySQL Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good Experience in debugging the issues using pdb Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Most of the applications were developed with Python Django and PostgreSQL using JIRA Agile methodology Work Experience Python Developer EOG Resources Houston TX May 2018 to Present Responsibilities Designed the database schema for the content management system Generated REST API using FlaskDjango Frame works Follows MVC pattern using Django frame Work Worked on Different databases like MongoPostgressMysqloracale Using Different type of python libraries like pymongo pymysql cxoracle pandas flaskcors Flaskrestful Sqlalchemygooglecloudpubsub Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Publishing data to google cloud pub and subscribing the data fron google cloud pub sub Worked on Differeant platforms Centos UbuntuDebianRhel Deploy each and every Script on Docker Container Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created Data tables utilizing flasksqlalchemy to display welldata and policy information and add delete update Well records Worked on front end frame works like CSS BootstrapjavascriptReact for development of Web applications Wrote Python scripts to parse JSON documents and load the data in database Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Generated Python Django forms to record data of online users and used PyTest for writing test cases Environment Python MySQL Jupyter Cassandra Flask Linux HTML Java script Windows Linux Python Developer Kmart January 2017 to May 2018 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Worked on Several python libraries like Python numPY and matPlotLib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Developed entire frontend and backend modules using Python on Django Web Framework Participated in requirement gathering and worked closely with the architect in designing and modeling Managed Docker orchestration and Docker containerization using Kubernetes Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers Involved in development of a Map based application for integral analysis purpose Involved in analysis and design of the application features Worked on Pandas Anoconda3x Libraries to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Designed and developed the UI of the website using HTML XHTML AJAX CSS JavaScript bootstrap Implemented REST API for storing in Redis which allows different users and roles to store security access and elastic search JSON data Designed data converting and storing for largescale JSON files using Redis where users can add delete update batch and query the dataset from API added ETag for cache efficiency Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Implemented Model Template View architecture in developing the web application with the help of Django framework Implemented code to perform CRUD operations on MongoDB using PyMongo module Proficient with container systems like Docker and container orchestration like EC2 Container Service Kubernetes worked with Terraform Design and Developed and maintained PostgreSQL database architecture and used SOAP and Restful API for information extraction Involved in migrating the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed data modelling and data manipulation using SQL on Oracle MySQL and PostgreSQL Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Managed deployment automation using Chef Custom Puppet modules and created test scripts using Selenium Web driver using Page Object Model Involved in SDLC methodologies like AGILE and SCRUM Process Environment Python32 MySQL HTML Django Flask HTML5 CSS XML MySQL JavaScript AWS Linux Shell Scripting PHP AJAX Cassandra Python Developer TransAmerica Cedar Rapids IA August 2015 to December 2016 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 34 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to ApacheCassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Opscenter Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used Python and Django to interface with the JQueryUI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Pythonmatplotlib library Performed troubleshooting fixed and deployed many Pythonbug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in debugging and troubleshooting programming related issues Deployment of the web application using the Linux server Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with clients Experience in debugging and troubleshooting programming related issues Environment Python Django MySQL RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins pytest Robot GitHub Linux and Windows Python Developer Santer Bank Boston MA December 2014 to July 2015 Responsibilities Worked with team of developers on Python applications for RISK management Designed the database schema for the content management system Generated Python Django Forms to record data of online users Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and REST API calls Wrote Python scripts to parse JSON documents and load the data in database Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Risk analysis for potential points of failure database communication points file system errors Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Wrote Python routines to log into the websites and fetch data for selected options Designed and developed the UI of the website using HTML CSS and JavaScript Worked on front end frame works like CSS Bootstrap for development of Web applications Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Designed and created backend data access modules using PLSQL stored procedures and Oracle Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used Python to extract weekly bed availability information from XML files using underscore JS Developed and executed User Acceptance Testing portion of test plan Generated Python Django forms to record data of online users and used PyTest for writing test cases Responsible for generating and delivering the complete test status reports of each patient Environment Python MySQL Django Flask PHP Linux XMLHTML Java script Windows Python Developer HealthAsyst Ltd Bengaluru Karnataka March 2013 to October 2014 Responsibilities Used Numpy for Numerical analysis for Insurance premium Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Deployment of the web application using the Linux server Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Interactive in providing change requests trouble reports and requirements collection with the client Implemented MVC architecture in developing the web application with the help of Django framework Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Managed code versioning with GitHub and deployment to staging and production servers Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Environment Python 27 Django 14 Cassandra RabbitMQSoapUI REST API Bash MySQL CSS Bootstrap Mongo DB MS SQL Server JavaScript Git Linux Shell Scripting Education Bachelors Skills C HTML BOOTSTRAP JSON OBJECT ORIENTED Javascript PHP Jquery MYSQL Additional Information Technical Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 332724 Ruby Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XLMVC3 Markup languages HTML XML JSONBootstrap Servers Apache Tomcat SOAP open stock RESTful web services Databases Oracle My SQL Postgress Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Phycham Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "EOG",
        "Resources",
        "Houston",
        "TX",
        "years",
        "IT",
        "experience",
        "design",
        "development",
        "testing",
        "implementation",
        "standalone",
        "enterprise",
        "application",
        "software",
        "technologies",
        "business",
        "requirements",
        "specifications",
        "Experience",
        "applications",
        "Python",
        "Django",
        "scale",
        "business",
        "systems",
        "knowledge",
        "collections",
        "experience",
        "python",
        "expertise",
        "tools",
        "developments",
        "python",
        "Beautiful",
        "Soup",
        "scipy",
        "pytables",
        "Jasy",
        "Pickle",
        "PySide",
        "Pandas",
        "data",
        "frame",
        "Pyvmomi",
        "FabricAnaconda3x",
        "urllib2",
        "tasks",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Python",
        "Frameworks",
        "Django",
        "Flask",
        "Web2py",
        "cherry",
        "Bottle",
        "Good",
        "experience",
        "web",
        "applications",
        "Model",
        "Template",
        "View",
        "architecture",
        "Django",
        "web",
        "application",
        "frameworks",
        "Experience",
        "web",
        "development",
        "HTML45",
        "CSSCSS3",
        "Java",
        "Script",
        "JQUERRY",
        "Angular",
        "Js",
        "Ajax",
        "Bootstrap",
        "Experience",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Jenkins",
        "Heroku",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "Experience",
        "applications",
        "amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "S3",
        "Cloud",
        "Front",
        "Route",
        "Experience",
        "Amazon",
        "web",
        "services",
        "Amazon",
        "EC2",
        "Amazon",
        "s3",
        "Python",
        "Testing",
        "frameworks",
        "zope",
        "nose",
        "Robot",
        "framework",
        "procedures",
        "MySQL",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Couch",
        "DB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "Experience",
        "issues",
        "pdb",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Python",
        "Testing",
        "frameworks",
        "zope",
        "nose",
        "Robot",
        "framework",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Test",
        "development",
        "methodologies",
        "applications",
        "Python",
        "Django",
        "PostgreSQL",
        "JIRA",
        "Agile",
        "methodology",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "EOG",
        "Resources",
        "Houston",
        "TX",
        "May",
        "Present",
        "Responsibilities",
        "database",
        "schema",
        "content",
        "management",
        "system",
        "REST",
        "API",
        "FlaskDjango",
        "Frame",
        "MVC",
        "pattern",
        "Django",
        "frame",
        "Work",
        "databases",
        "MongoPostgressMysqloracale",
        "type",
        "python",
        "libraries",
        "pymongo",
        "pymysql",
        "cxoracle",
        "flaskcors",
        "Flaskrestful",
        "Sqlalchemygooglecloudpubsub",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "data",
        "google",
        "cloud",
        "pub",
        "data",
        "fron",
        "google",
        "cloud",
        "pub",
        "sub",
        "Differeant",
        "platforms",
        "Centos",
        "UbuntuDebianRhel",
        "Script",
        "Docker",
        "Container",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Data",
        "tables",
        "flasksqlalchemy",
        "welldata",
        "policy",
        "information",
        "update",
        "records",
        "end",
        "frame",
        "CSS",
        "BootstrapjavascriptReact",
        "development",
        "Web",
        "applications",
        "Wrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Good",
        "experience",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "Environment",
        "Python",
        "MySQL",
        "Jupyter",
        "Cassandra",
        "Flask",
        "Linux",
        "HTML",
        "Java",
        "script",
        "Windows",
        "Linux",
        "Python",
        "Developer",
        "Kmart",
        "January",
        "May",
        "Responsibilities",
        "SDLC",
        "process",
        "Python",
        "website",
        "functionality",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "python",
        "libraries",
        "Python",
        "numPY",
        "matPlotLib",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "information",
        "Credit",
        "Monitoring",
        "Systems",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "requirement",
        "gathering",
        "architect",
        "Managed",
        "Docker",
        "orchestration",
        "Docker",
        "containerization",
        "Kubernetes",
        "Kubernetes",
        "deployment",
        "scaling",
        "management",
        "Docker",
        "Containers",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "analysis",
        "design",
        "application",
        "Pandas",
        "Anoconda3x",
        "Libraries",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "Experience",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "bootstrap",
        "REST",
        "API",
        "Redis",
        "users",
        "roles",
        "security",
        "access",
        "search",
        "JSON",
        "data",
        "data",
        "largescale",
        "JSON",
        "files",
        "Redis",
        "users",
        "update",
        "batch",
        "dataset",
        "API",
        "ETag",
        "cache",
        "efficiency",
        "Celery",
        "task",
        "queue",
        "Rabbit",
        "MQ",
        "Redis",
        "broker",
        "tasks",
        "Model",
        "Template",
        "View",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "PyMongo",
        "module",
        "Proficient",
        "container",
        "systems",
        "Docker",
        "container",
        "orchestration",
        "EC2",
        "Container",
        "Service",
        "Kubernetes",
        "Terraform",
        "Design",
        "Developed",
        "PostgreSQL",
        "database",
        "architecture",
        "SOAP",
        "API",
        "information",
        "extraction",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "data",
        "modelling",
        "data",
        "manipulation",
        "SQL",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "Puppet",
        "automation",
        "schemes",
        "Jenkins",
        "Django",
        "application",
        "unit",
        "deployment",
        "automation",
        "Chef",
        "Custom",
        "Puppet",
        "modules",
        "test",
        "scripts",
        "Selenium",
        "Web",
        "driver",
        "Page",
        "Object",
        "Model",
        "SDLC",
        "methodologies",
        "AGILE",
        "SCRUM",
        "Process",
        "Environment",
        "Python32",
        "MySQL",
        "HTML",
        "Django",
        "Flask",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Linux",
        "Shell",
        "Scripting",
        "PHP",
        "AJAX",
        "Cassandra",
        "Python",
        "Developer",
        "TransAmerica",
        "Cedar",
        "Rapids",
        "IA",
        "August",
        "December",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "RabbitMQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "ApacheCassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "DevCentre",
        "Datastax",
        "Opscenter",
        "monitoring",
        "practices",
        "search",
        "Install",
        "monitoring",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "commands",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Python",
        "Django",
        "JQueryUI",
        "storage",
        "deletion",
        "content",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "graphs",
        "business",
        "decision",
        "making",
        "library",
        "Performed",
        "troubleshooting",
        "Pythonbug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Experience",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "Deployment",
        "web",
        "application",
        "Linux",
        "server",
        "regression",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "methodologies",
        "scrum",
        "standups",
        "Kanban",
        "mode",
        "requirements",
        "clients",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "RESTful",
        "MS",
        "SQL",
        "Server",
        "Elastic",
        "Search",
        "Ubuntu",
        "server",
        "Apache",
        "CQ",
        "TFS",
        "Amazon",
        "s3",
        "Jenkins",
        "Robot",
        "GitHub",
        "Linux",
        "Windows",
        "Python",
        "Developer",
        "Santer",
        "Bank",
        "Boston",
        "MA",
        "December",
        "July",
        "Responsibilities",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "database",
        "schema",
        "content",
        "management",
        "system",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "REST",
        "API",
        "Wrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Risk",
        "analysis",
        "points",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "Data",
        "tables",
        "PyQt",
        "patient",
        "policy",
        "information",
        "update",
        "patient",
        "records",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "UI",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "Good",
        "experience",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "Python",
        "bed",
        "availability",
        "information",
        "XML",
        "files",
        "JS",
        "Developed",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "test",
        "plan",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "test",
        "status",
        "reports",
        "Environment",
        "Python",
        "MySQL",
        "Django",
        "Flask",
        "PHP",
        "Linux",
        "XMLHTML",
        "Java",
        "script",
        "Python",
        "Developer",
        "HealthAsyst",
        "Ltd",
        "Bengaluru",
        "Karnataka",
        "March",
        "October",
        "Responsibilities",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "Celery",
        "task",
        "queue",
        "Rabbit",
        "MQ",
        "Redis",
        "broker",
        "tasks",
        "Deployment",
        "web",
        "application",
        "Linux",
        "server",
        "expressions",
        "order",
        "pattern",
        "data",
        "base",
        "basis",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Automated",
        "Production",
        "tasks",
        "Jenkins",
        "building",
        "jobs",
        "deployment",
        "Used",
        "Apache",
        "CQ",
        "Team",
        "Foundation",
        "Server",
        "content",
        "management",
        "Managed",
        "code",
        "GitHub",
        "deployment",
        "staging",
        "production",
        "servers",
        "code",
        "reviews",
        "GitHub",
        "pull",
        "requests",
        "bugs",
        "code",
        "quality",
        "knowledge",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "RabbitMQSoapUI",
        "REST",
        "API",
        "Bash",
        "MySQL",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "JavaScript",
        "Git",
        "Linux",
        "Shell",
        "Scripting",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "HTML",
        "BOOTSTRAP",
        "JSON",
        "OBJECT",
        "Javascript",
        "PHP",
        "Jquery",
        "MYSQL",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Operating",
        "systems",
        "Windows",
        "Linux",
        "MAC",
        "UNIX",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "Ruby",
        "Scripting",
        "CSS",
        "AJAX",
        "Java",
        "Script",
        "JQuery",
        "PHP",
        "Shell",
        "Scripting",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "Node",
        "XLMVC3",
        "Markup",
        "HTML",
        "XML",
        "JSONBootstrap",
        "Servers",
        "Apache",
        "Tomcat",
        "SOAP",
        "stock",
        "web",
        "services",
        "Databases",
        "Oracle",
        "SQL",
        "Postgress",
        "Apache",
        "Cassandra",
        "MongoDB",
        "IDEs",
        "Tools",
        "Eclipse",
        "Toad",
        "Sublime",
        "text",
        "Phycham",
        "Pgadmin",
        "SQLite",
        "Revision",
        "Controlling",
        "Systems",
        "CVS",
        "GitHub",
        "Methodologies",
        "tools",
        "Object",
        "Programming",
        "UML",
        "Agile",
        "Scrum",
        "MS",
        "office",
        "tools",
        "Microsoft",
        "Excel",
        "Super",
        "user",
        "Microsoft",
        "word",
        "Microsoft",
        "PowerPoint",
        "PPTPlex"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:27:47.054174",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer EOG Resources Houston TX Around 7 years of IT experience in design development testing and implementation of various standalone and clientserver architecturebased enterprise application software using various technologies analyzing complex business requirements mapping them to system specifications Experience in developing webbased applications using Python 3427 Django 1917 Designed and implemented large scale business critical systems Have excellent knowledge on python collections and multithreading Skilled experience in python with proven expertise in using new tools and technical developments Implemented different python libraries Beautiful Soup numpy scipy pytables Jasy Pickle PySide Pandas data frame Pyvmomi FabricAnaconda3x and urllib2 in various tasks Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Experienced in working with various Python Frameworks Django Flask Web2py cherry Bottle Good experience in developing web applications implementing Model Template View architecture using Django web application frameworks Experience on web development using HTML45 CSSCSS3 Java Script JQUERRY Angular Js Ajax Bootstrap Experience in implementing with serverside technologies with Restful API and MVC design patterns with node JS and Django framework Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Good knowledge of server Apache Tomcat Web logic Jenkins Heroku Good knowledge of web services with protocols SOAP Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route 53 Experience in working with Amazon web services Amazon EC2 and Amazon s3 Worked on Python Testing frameworks like zope pytest nose and Robot framework Involved in writing stored procedures using MySQL Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good Experience in debugging the issues using pdb Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Most of the applications were developed with Python Django and PostgreSQL using JIRA Agile methodology Work Experience Python Developer EOG Resources Houston TX May 2018 to Present Responsibilities Designed the database schema for the content management system Generated REST API using FlaskDjango Frame works Follows MVC pattern using Django frame Work Worked on Different databases like MongoPostgressMysqloracale Using Different type of python libraries like pymongo pymysql cxoracle pandas flaskcors Flaskrestful Sqlalchemygooglecloudpubsub Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Publishing data to google cloud pub and subscribing the data fron google cloud pub sub Worked on Differeant platforms Centos UbuntuDebianRhel Deploy each and every Script on Docker Container Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created Data tables utilizing flasksqlalchemy to display welldata and policy information and add delete update Well records Worked on front end frame works like CSS BootstrapjavascriptReact for development of Web applications Wrote Python scripts to parse JSON documents and load the data in database Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Generated Python Django forms to record data of online users and used PyTest for writing test cases Environment Python MySQL Jupyter Cassandra Flask Linux HTML Java script Windows Linux Python Developer Kmart January 2017 to May 2018 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Worked on Several python libraries like Python numPY and matPlotLib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Developed entire frontend and backend modules using Python on Django Web Framework Participated in requirement gathering and worked closely with the architect in designing and modeling Managed Docker orchestration and Docker containerization using Kubernetes Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers Involved in development of a Map based application for integral analysis purpose Involved in analysis and design of the application features Worked on Pandas Anoconda3x Libraries to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Designed and developed the UI of the website using HTML XHTML AJAX CSS JavaScript bootstrap Implemented REST API for storing in Redis which allows different users and roles to store security access and elastic search JSON data Designed data converting and storing for largescale JSON files using Redis where users can add delete update batch and query the dataset from API added ETag for cache efficiency Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Implemented Model Template View architecture in developing the web application with the help of Django framework Implemented code to perform CRUD operations on MongoDB using PyMongo module Proficient with container systems like Docker and container orchestration like EC2 Container Service Kubernetes worked with Terraform Design and Developed and maintained PostgreSQL database architecture and used SOAP and Restful API for information extraction Involved in migrating the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Performed data modelling and data manipulation using SQL on Oracle MySQL and PostgreSQL Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Managed deployment automation using Chef Custom Puppet modules and created test scripts using Selenium Web driver using Page Object Model Involved in SDLC methodologies like AGILE and SCRUM Process Environment Python32 MySQL HTML Django Flask HTML5 CSS XML MySQL JavaScript AWS Linux Shell Scripting PHP AJAX Cassandra Python Developer TransAmerica Cedar Rapids IA August 2015 to December 2016 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Used Celery with RabbitMQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 34 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to ApacheCassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Opscenter Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used Python and Django to interface with the JQueryUI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Pythonmatplotlib library Performed troubleshooting fixed and deployed many Pythonbug fixes of the two main applications that were a main source of data for both customers and internal customer service team Experience in debugging and troubleshooting programming related issues Deployment of the web application using the Linux server Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with clients Experience in debugging and troubleshooting programming related issues Environment Python Django MySQL RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins pytest Robot GitHub Linux and Windows Python Developer Santer Bank Boston MA December 2014 to July 2015 Responsibilities Worked with team of developers on Python applications for RISK management Designed the database schema for the content management system Generated Python Django Forms to record data of online users Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and REST API calls Wrote Python scripts to parse JSON documents and load the data in database Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Risk analysis for potential points of failure database communication points file system errors Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Wrote Python routines to log into the websites and fetch data for selected options Designed and developed the UI of the website using HTML CSS and JavaScript Worked on front end frame works like CSS Bootstrap for development of Web applications Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Designed and created backend data access modules using PLSQL stored procedures and Oracle Good experience in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used Python to extract weekly bed availability information from XML files using underscore JS Developed and executed User Acceptance Testing portion of test plan Generated Python Django forms to record data of online users and used PyTest for writing test cases Responsible for generating and delivering the complete test status reports of each patient Environment Python MySQL Django Flask PHP Linux XMLHTML Java script Windows Python Developer HealthAsyst Ltd Bengaluru Karnataka March 2013 to October 2014 Responsibilities Used Numpy for Numerical analysis for Insurance premium Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Deployment of the web application using the Linux server Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Interactive in providing change requests trouble reports and requirements collection with the client Implemented MVC architecture in developing the web application with the help of Django framework Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Managed code versioning with GitHub and deployment to staging and production servers Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Environment Python 27 Django 14 Cassandra RabbitMQSoapUI REST API Bash MySQL CSS Bootstrap Mongo DB MS SQL Server JavaScript Git Linux Shell Scripting Education Bachelors Skills C HTML BOOTSTRAP JSON OBJECT ORIENTED Javascript PHP Jquery MYSQL Additional Information Technical Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 332724 Ruby Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XLMVC3 Markup languages HTML XML JSONBootstrap Servers Apache Tomcat SOAP open stock RESTful web services Databases Oracle My SQL Postgress Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Phycham Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex",
    "unique_id": "0afb10c5-4d82-4bbd-b956-15631e3cf2d6"
}