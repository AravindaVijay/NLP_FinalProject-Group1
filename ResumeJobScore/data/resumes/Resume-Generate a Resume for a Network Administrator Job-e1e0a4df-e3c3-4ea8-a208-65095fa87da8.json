{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Subway Denver CO Overall 8 years of experience in Software design and development activities including requirement analysis design implementations and testing of various client server based applications using Java and J2EE technologies Extensive experience in Core Java Servlets JSP JavaScript JDBC JSTL Struts JSF EJB AJAX and Custom Tag Libraries Extensive experience in working with different MVC Frameworks like Spring Struts and ORM Object Relational mapping tools like Hibernate Experienced working with databases like DB2 MY SQL Oracle MS SQL Server and Application Servers like BEA WebLogic IBM WebSphere Apache Tomcat Expertise in developing critical responsive GUI frontend components using HTML XHTML DHTML JavaScript CSS2CSS3 JSON JSP Servlets Ajax JQuery EXTJS JSTL and JavaScript using frameworks like Bootstrap AngularJS Ext JS Experience in application of MVC and MVVM clientside JavaScript frameworks such as Angular 20 AngularJS Back BoneJS EmberJS HandlebarJS Experienced on Serverside JavaScript structures like NodeJS HapiJS ExpressJS Experience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools Worked on NoSQL databases like MongoDB and Apache Cassandra Swagger usage and testing structures like Mock MVC Mock Rest MVC Experience in Integration of Amazon Web Services AWS application like Amazon EC2 Amazon S3 Amazon Simple DB Amazon Elastic Load Balancing Amazon SQS Amazon EBS and Amazon Cloud Front Worked under new technologies introduced in java8 like Functional interfaces and Lambda Expressions Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Expertise in Database Drivers Like JDBC Spring JSBC to summon DB stores strategies Experience in ORM systems like Hibernate Spring information IBatis and JPA Extensive experience with Frameworks in ORM Hibernate and Spring Spring MVC Spring Context Spring DAO Spring AOP Spring Batch Spring Security Experience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing Sound learning on bundle directors for example NPM Bower Web pack Extensive working background with different J2EE Frameworks like Spring MVC Struts JSF and master level aptitudes in spring system modules like Spring Batch Spring Security Spring Boot Spring Cloud Spring JTA Spring AOP Profound learning on Maven Gradle ANT as fabricate content for application assemble and arrangement Worked under a business rule management system BRMS like Drools Worked on utilizing Rabbit MQ IBM MQ Apache Kafka as a Message Oriented Middleware for coordinating applications Strong learning in SOAP WSDL and RESTful for trading organized data in the usage of web administrations Developed small scale administrations like RESTful web benefit JaxRS with Jersey Apache CXF Extensive experience using Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and using Hibernate as a persistence layer Experienced in utilizing source code variant administration apparatuses like SVN GIT and undertaking sprinters like Grunt Gulp and Web pack Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Designed and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications Worked in developing web applications on MVC based frameworks like Spring Spring IOC Spring Security Spring Boot Spring Cloud and Spring MVC Implemented Spring Cloud NetflixZUL to building microservices to communicate with each other Implemented Spring Circuit Breaker pattern integrated Hystrix Dashboard to monitor Spring micro services Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Worked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console Work under Groovy script for setting in a dynamic way some properties for invoking the web service Excellent working knowledge on popular frameworks like Struts Spring Hibernate Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet and Bamboo Strong involvement in UNIX and Shell Scripting Extensive experience in SQL Stored Procedures Functions and Triggers with databases such as Oracle IBM DB2 and MS SQL Server Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Inheritance to develop beans from already developed parent beans Worked under the latest standardized version of JavaScript like ECMAScript 6 Experienced in using WSDL SOAP and Apache AXIS for Web Services Authorized to work in the US for any employer Work Experience Full Stack Java Developer Subway Milford CT September 2017 to Present Responsibilities Developed the webpages using framework Angular 60 along with HTML5 CSS3 and Type Script Designed and reviewed the test scenarios and scripts for given functional requirements and automated test cases in Selenium Extensively worked on the Angular UI Routing to handle navigation to access different pages in the application Migrated from Angular2 to Angular6 Using Angular 60 JS factory and services for dependency injection Using Angular 60 we created custom directives for reusable components multifield form elements background file uploads etc Created Menus and Drawer component by using Typescript and Angular 60 Implemented continuous integration using Docker Extensively used the LOG4j to log regular Debug and Exception Statements Experience in using Atlassian tools like JIRA Bitbucket Bamboo Confluence Source Tree Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Used Spring framework and J2EE components Utilized Spring Boot IOC and DAO modules Developed controller classes backend process complex services and database interaction Used Spring Boot to create standalone spring applications Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 6 Implemented Micro Services based Cloud Architecture using Spring Boot and implementation of Business Services using the Java8 and Spring Boot Used Spring Boot framework to write Presentation Layer Business Layers and Controller servlets Implemented Spring Boot Actuator to monitor application performance Used Spring Inheritance to develop beans from already developed parent beans Developed Java classes for implementing asynchronous processing using JSM Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Cloud Config which provides server and clientside support for externalized configuration in a distributed system Used Java Messaging Services JMS which provides reliable and asynchronous form of communication and have good knowledge in RabbitMQ Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Expertise in using built tools like Maven ANT for the building of deployable artifacts such as jar war from source code Implemented a Nodejs server to manage authentication Ran Bower and Grunt components and wrote the scripting using Nodejs Implemented Service Oriented Architecture SOA by invoking multiple SOAP based Web Services and generating client using JAXWS Used SOAPUI to interact with other applications using SOAP and WSDL file Integrated Spring with Hibernate using configurations and implemented DAO layer to save entities into data base Used Kubernetes to configure in the application for automating deployment scaling and management of containerized applications Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Implemented OAuth 20 provider mechanism is responsible for exposing OAuth 20 protected resources Build and configure a virtual data center in the Amazon Web Services cloud to support Enterprise Data Troubleshooting technical issues and drive issue escalation with AWS Service teams Used Rest templates in the Spring Services to call the rest web services Used Hibernate object relationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with a SQLbased schema Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations Used a microservice architecture with springboot based services interacting through a combination of REST and RabbitMQ Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Involved in writing Oracle PLSQL Stored procedures triggers and views Worked on NoSQL data base MongoDB Performed CRUD operations like Update Insert Delete Fetched data from mongo DB using mongoose Environment Angular 60 Spring Boot IOC DAO Micro Services JSM Node JS OAuth 20 Bower Grunt RabbitMQ Amazon Web Services AWS Spring Services Hibernate POJO Maven ANT PLSQL MongoDB Kubernetes Mongoose Selenium Docker Log4j Jenkins Bamboo SSLTLS Full Stack Java Developer Impossible Foods Redwood City CA October 2015 to August 2017 Responsibilities \u0620Experienced in implementing the Nodejs serverside code along with Express framework to interact with MongoDB to store and retrieve data by using the Mongoose package \u0620Worked on using Rule Engines Droolswith corresponding to validate the business User Roles \u0620Worked with a team to develop and maintain an internal Log Delivery System utilizing various Apache products Kafka and Tomcat \u0620Closely worked with Application using React JS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly \u0620Used Nodejs and Expressjs to develop the relevant back end RESTful API \u0620Developed various screens for the front end using React JS and used various predefined components from NPM and Redux \u0620Automated the frontend workflow using NPM \u0620Automated testing using Mocha and Chai \u0620Created producers consumer and Zookeeper setup for oracle to Kafka replication \u0620Designed and developed Micro Services business components using Spring Boot \u0620Implemented the Project structure based on Spring MVC pattern using Spring Boot and persisted data to MongoDB using Spring Data \u0620Implemented MVVM architecture using Redux Architecture with React JS \u0620Establishing Restful APIS using NODEJS and application backend implemented as NODEJS application server \u0620Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO \u0620Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process \u0620Used JavaScript ES6 in Nodejs runtime environment to build RESTful APIs and to import data \u0620Worked on Prototyping and Implementation using Java8 AWS with Slacker platform \u0620Developed single page applications using ReactRedux architecture ES6 web pack and grunt \u0620Involved in creating a reusable component using React JS for DOM manipulation \u0620Wrote ClientSide code using ReactJS and used NPM gulp directories to generate the server environments used browserify flux to manage with targeted URLs and to monitor the application \u0620Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data \u0620Implemented OAUTH20 authentication protocol and provided OAuth20 token implementation guidelines for enterprise web API security model \u0620Worked on MVC design pattern and Restful WebAPI to make calls from JS files to MVC controllers and Web API controllers using token authentication and OAuth \u0620Used Webpack for bundling our application which takes JavaScript application and bundling it all together with its dependencies \u0620Introduced and implemented Webpack infrastructure to modernize JavaScript practices by extending ES6 through babel loaders \u0620Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design \u0620Developed Micro Services based API using Spring Boot and Spring Data \u0620Implemented storing the Highvolume transaction data in NOSQL Databases using Spring Data \u0620Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring Data JPA \u0620Design and build a largescale global Docker ContainerasaService \u0620Design and build Docker tools and integrations like Docker images and Docker Plugins \u0620Worked on Docker container implementation for the Enterprise build system \u0620Micro services have been built using spring boot NetflixOSS Spring Cloud and deploying to AWSCloud \u0620Understand and document customer website code and create scalable modular microservices to replace the existing website using Spring Boot and Spring Cloud \u0620Used Hibernate to persist access update and delete objects in database \u0620Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations \u0620Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and used AWSSDK to connect with Amazon SQS for bulk email processing \u0620Created instances in AWS as well as migrated data to AWS from data Center using snowball and AWS migration service Full Stack Java Developer Dearborn National Grove IL April 2014 to September 2015 Responsibilities Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Using Angular 20 we created custom directives for reusable components multifield form elements background file uploads etc Worked in various Business rules in the drools file using Drools rule engine Configured AWS EC2 instances domain mapping via Route53 Extensively used CSS and Bootstrap for styling the HTML elements Developing Rest Services using Rest Template with SpringBoot and gradle Containerized the SpringBoot microservice using Docker Using Angular 20 JS factory and services for dependency injection Participated in front end development using JSF 20 JavaScript HTML 5 CSS 30 Designed Frontend with in objectoriented JavaScript Framework with Angularjs Developed API for using AWS Lambda to manage the servers and run the code in the AWS Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap Less CSS3SASS and AJAX Tested JavaScript using Jasmine frameworks Configuring and managed publicprivate cloud infrastructure utilizing Amazon Web Services like Amazon Ec2 Amazon S3 Implemented ODBC which is used for connecting to the database Oracle Integrated testing methods implemented by using Karma and Jasmine Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Apache CXF helps you build and develop services using frontend programming APIs like JAXWS and JAXRS Developed RESTful Services and Web Service Clients JAXRS or JAXWS with data representation in different formats such as XML and JSON Environment JAVA J2EE Core Java Spring Boot Spring Frame work JSF EJB JMS AJAX JavaScript Spring MVC Spring Batch spring security Spring IOC Apache CXF Rest Service Jax RS BROOLS Angular JS Angular controllers Angular customs directions digestive cycle Karma and jasmine MultiThreading AWS Jquery HTML5 CSS3 Ajax ORACLE Rabbit MQ Full Stack Java Developer Accenture December 2012 to March 2014 Responsibilities Used Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC These applications need to maintain privacy and restrict illegal users To achieve the functionality we used Spring Security We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Implemented Spring AOP for cross cutting concerns Hibernate ORM framework used to interact with database through Hibernate query language HQL Used ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX Tested the application after making the necessary configuration Provided daily support for production stage and testing environments for WebSphere MQ operations and problem determination Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Worked with Ember JS to code some new functionality and developed application front end using HTML CSS Ajax Worked on Hibernate persistence tier This involves developing mapping files and Hibernate POJOs DAOs Used SOA UDDI lookups and Web Services Description Language WSDL using SOAP protocol Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Developed HTML prototypes and ready XHTML documents with CSS style sheets Environment JavaJ2ee SQL PLSQL XML Maven JUnit Spring MVC Spring IOC spring Security JSP Spring Batch Java script JQUERY Backbone JS Handle bar JS Core Java Hibernates Unix script Shell Scripts Jax WS Soap Services Jax WS security wsdl2 HTML CSS AJAX IBM MQ IBM Websphere JavaJ2EE Developer CMC Limited April 2011 to November 2012 Responsibilities Used Spring AOP module to handle transaction management logging and profiling Implemented various Business rules in the drl drools file using Drools rule engine Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Created Stored Procedure Trigger for database access and events We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Developed HTML prototypes and ready XHTML documents with CSS style sheets Implemented Multithreading feature for processing the multiple requests to achieve high performance Used SQL which is JavaScript database which is a lightweight clientside inmemory SQL database designed to work in browser Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Environment J2EE JSF XHTML Bootstrap JSON JavaScript Oracle Spring framework Spring IOC java multithreading Prime faces Spring Batch jax WS soap services stored procedures in sql server Drools Spring AOP IBATIS Hibernate MySQL PLSQL XML WSDL SOAP SOAP UI IBM WebSphere JUnit Web sphere Application Server Tomcat Education Bachelors Skills C C Java PHP PLSQL UNIX Shell Script 8 years Servlets Spring Hibernate EJB JPA 8 years JTA JDBC JSP JSTL JNDI AWT Applets 8 years Struts 2010 Spring 30 Spring Batch Spring Security 8 years Spring AOP Spring Core JSF IBatis Spring IOC 8 years HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON 8 years SQL Server MySQL Oracle Mongo DB DB2 8 years Angular JS Angular 2 JQuery Nodejs Backbonejs 8 years Hapijs Reactjs Expressjs Emberjs HandlebarsJS 8 years XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS 8 years JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka 8 years Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss 8 years Agile Waterfall OOAD SCRUM JUnit Mockito Jasmine Karma Mocha Chai Selenium 8 years SVN CVS GIT and Clear Case Maven Gradle ANT 8 years Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS 8 years Windows Linux and UNIX Visual Studio Rational Rose and Microsoft Office 8 years Additional Information Technical Skills Programming Languages C C Java PHP PLSQL UNIX Shell Script JavaJ2EE Technologies Servlets Spring Hibernate EJB JPA JTA JDBC JSP JSTL JNDI AWT Applets Frameworks Struts 2010 Spring 30 Spring Batch Spring Security Spring AOP Spring Core JSF IBatis Spring IOC Web Technologies HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON Database SQL Server MySQL Oracle Mongo DB DB2 JavaScript Frameworks Angular JS Angular 2 JQuery Nodejs Backbonejs Hapijs Reactjs Expressjs Emberjs HandlebarsJS Web Services XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS Messaging JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka Web Application Servers Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss Methodologies Agile Waterfall OOAD SCRUM Testing Tools JUnit Mockito Jasmine Karma Mocha Chai Selenium Version Control SVN CVS GIT and Clear Case Build Tools Maven Gradle ANT IDEs Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS Operating Systems Windows Linux and UNIX Software Visual Studio Rational Rose and Microsoft Office",
    "entities": [
        "JPA Extensive",
        "Micro Services",
        "WebSphere MQ",
        "Spring Framework",
        "MVC Spring IOC",
        "AJAX",
        "Maven Gradle ANT",
        "\u0620Worked",
        "Screen",
        "MY SQL Oracle",
        "Web Services Description Language",
        "Nodejs",
        "the Spring Services",
        "\u0620Designed",
        "Created Menus",
        "AWS Developed",
        "java8",
        "Jersey Apache CXF Extensive",
        "UNIX",
        "Component",
        "ReactRedux",
        "Amazon Web Services AWS Spring Services",
        "\u0620Micro",
        "Oracle Mongo DB",
        "Implemented Spring Circuit Breaker",
        "Amazon SQS",
        "IBM",
        "Integration of Amazon Web Services AWS",
        "Bower Grunt",
        "Amazon Web Services AWS",
        "the Angular UI Routing",
        "Angular 4 Directives Dependency Injection Services Routing",
        "Controller",
        "AWSSDK",
        "Express",
        "SOAP",
        "XML",
        "Boot Spring Frame",
        "Route53",
        "OAuth",
        "JTA Spring AOP Profound",
        "IBM WebSphere",
        "JAXWS",
        "JaxWS",
        "WebLogic",
        "Core Java Servlets",
        "MultiThreading AWS",
        "Amazon",
        "NodeJS HapiJS ExpressJS Experience",
        "GWT Spring Data JPA \u0620Design",
        "Control SVN CVS GIT",
        "HTML CSS Ajax Worked",
        "WebSphere",
        "Hibernate Spring",
        "JMock",
        "Developed",
        "DAO",
        "Oracle Relational",
        "OAuth20",
        "UNIX Software Visual Studio Rational Rose",
        "Mockito",
        "Used Spring Inheritance",
        "NPM \u0620Automated",
        "\u0620Involved",
        "Kubernetes Involved",
        "Implemented Spring AOP for cross",
        "AWS Service",
        "Lambda Expressions",
        "XML Maven",
        "JSP",
        "Shell Scripts Jax WS Soap Services",
        "JSM Implemented Spring Batch",
        "Oracle PLSQL Stored",
        "SQL Queries",
        "JavaScript Created Stored",
        "Docker",
        "Hibernate Annotations",
        "DOM",
        "Drools Spring AOP IBATIS Hibernate MySQL PLSQL XML WSDL SOAP SOAP UI",
        "Spring micro services",
        "Maven ANT",
        "Redux Architecture",
        "MVC",
        "Oracle IBM DB2",
        "Redux",
        "EJB",
        "Spring SOAP",
        "MS SQL Server",
        "CRUD Scaffolding",
        "Implemented SOAP Services",
        "CSV",
        "JS",
        "Hapijs Reactjs Expressjs Emberjs",
        "API",
        "Web Services",
        "US",
        "Spring Data",
        "Mock MVC Mock Rest",
        "Websphere JavaJ2EE Developer CMC Limited",
        "UNIX Visual Studio Rational Rose",
        "Drools",
        "NODEJS",
        "AWS",
        "Angular 6 Implemented Micro Services",
        "Presentation Layer Business Layers",
        "JSF",
        "React JS",
        "Application using React JS",
        "CXF",
        "JavaScript Implemented SOAP Services",
        "SQL",
        "Spring Inversion of Control IOC",
        "Amazon Web Services",
        "Bootstrap",
        "Integrated Spring with Hibernate",
        "Microsoft Office",
        "Kubernetes",
        "NPM",
        "Oracle Integrated",
        "AWSCloud",
        "Ant",
        "Additional Information Technical Skills Programming Languages C C",
        "Ember JS",
        "Nodejs Implemented Service Oriented Architecture SOA",
        "Shell Scripting Extensive",
        "Typescript",
        "Hibernate Experienced",
        "SOAP Webservices",
        "Rabbit MQ IBM",
        "SVN CVS GIT",
        "Selenium for Unit and Integration Testing",
        "OAuth \u0620Used Webpack",
        "SQS",
        "DB",
        "\u0620Developed Micro Services",
        "Maven",
        "lJavaspan",
        "Amazon S3 Implemented",
        "JavaScript",
        "JAXRS Developed RESTful Services",
        "ANT",
        "Shell Script JavaJ2EE Technologies",
        "UI",
        "\u0620Created",
        "\u0620Wrote",
        "JSON JSP Servlets",
        "\u0620Implemented",
        "Selenium",
        "BEA WebLogic",
        "XSD",
        "\u0620Worked on Prototyping and Implementation using Java8 AWS",
        "SVN",
        "Implemented Spring Boot Actuator",
        "Expertise",
        "CSS",
        "Hibernate Annotations \u0620Implemented AWS",
        "REST",
        "Jenkins Hudson Puppet",
        "Update Insert Delete Fetched",
        "Custom Tag Libraries Extensive",
        "NoSQL",
        "Ajax JQuery EXTJS JSTL",
        "Mongoose",
        "\u0620Responsible",
        "Implemented OAuth2",
        "Center"
    ],
    "experience": "Experience in application of MVC and MVVM clientside JavaScript frameworks such as Angular 20 AngularJS Back BoneJS EmberJS HandlebarJS Experienced on Serverside JavaScript structures like NodeJS HapiJS ExpressJS Experience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools Worked on NoSQL databases like MongoDB and Apache Cassandra Swagger usage and testing structures like Mock MVC Mock Rest MVC Experience in Integration of Amazon Web Services AWS application like Amazon EC2 Amazon S3 Amazon Simple DB Amazon Elastic Load Balancing Amazon SQS Amazon EBS and Amazon Cloud Front Worked under new technologies introduced in java8 like Functional interfaces and Lambda Expressions Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Expertise in Database Drivers Like JDBC Spring JSBC to summon DB stores strategies Experience in ORM systems like Hibernate Spring information IBatis and JPA Extensive experience with Frameworks in ORM Hibernate and Spring Spring MVC Spring Context Spring DAO Spring AOP Spring Batch Spring Security Experience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing Sound learning on bundle directors for example NPM Bower Web pack Extensive working background with different J2EE Frameworks like Spring MVC Struts JSF and master level aptitudes in spring system modules like Spring Batch Spring Security Spring Boot Spring Cloud Spring JTA Spring AOP Profound learning on Maven Gradle ANT as fabricate content for application assemble and arrangement Worked under a business rule management system BRMS like Drools Worked on utilizing Rabbit MQ IBM MQ Apache Kafka as a Message Oriented Middleware for coordinating applications Strong learning in SOAP WSDL and RESTful for trading organized data in the usage of web administrations Developed small scale administrations like RESTful web benefit JaxRS with Jersey Apache CXF Extensive experience using Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and using Hibernate as a persistence layer Experienced in utilizing source code variant administration apparatuses like SVN GIT and undertaking sprinters like Grunt Gulp and Web pack Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Designed and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications Worked in developing web applications on MVC based frameworks like Spring Spring IOC Spring Security Spring Boot Spring Cloud and Spring MVC Implemented Spring Cloud NetflixZUL to building microservices to communicate with each other Implemented Spring Circuit Breaker pattern integrated Hystrix Dashboard to monitor Spring micro services Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Worked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console Work under Groovy script for setting in a dynamic way some properties for invoking the web service Excellent working knowledge on popular frameworks like Struts Spring Hibernate Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet and Bamboo Strong involvement in UNIX and Shell Scripting Extensive experience in SQL Stored Procedures Functions and Triggers with databases such as Oracle IBM DB2 and MS SQL Server Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Inheritance to develop beans from already developed parent beans Worked under the latest standardized version of JavaScript like ECMAScript 6 Experienced in using WSDL SOAP and Apache AXIS for Web Services Authorized to work in the US for any employer Work Experience Full Stack Java Developer Subway Milford CT September 2017 to Present Responsibilities Developed the webpages using framework Angular 60 along with HTML5 CSS3 and Type Script Designed and reviewed the test scenarios and scripts for given functional requirements and automated test cases in Selenium Extensively worked on the Angular UI Routing to handle navigation to access different pages in the application Migrated from Angular2 to Angular6 Using Angular 60 JS factory and services for dependency injection Using Angular 60 we created custom directives for reusable components multifield form elements background file uploads etc Created Menus and Drawer component by using Typescript and Angular 60 Implemented continuous integration using Docker Extensively used the LOG4j to log regular Debug and Exception Statements Experience in using Atlassian tools like JIRA Bitbucket Bamboo Confluence Source Tree Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Used Spring framework and J2EE components Utilized Spring Boot IOC and DAO modules Developed controller classes backend process complex services and database interaction Used Spring Boot to create standalone spring applications Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 6 Implemented Micro Services based Cloud Architecture using Spring Boot and implementation of Business Services using the Java8 and Spring Boot Used Spring Boot framework to write Presentation Layer Business Layers and Controller servlets Implemented Spring Boot Actuator to monitor application performance Used Spring Inheritance to develop beans from already developed parent beans Developed Java classes for implementing asynchronous processing using JSM Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Cloud Config which provides server and clientside support for externalized configuration in a distributed system Used Java Messaging Services JMS which provides reliable and asynchronous form of communication and have good knowledge in RabbitMQ Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Expertise in using built tools like Maven ANT for the building of deployable artifacts such as jar war from source code Implemented a Nodejs server to manage authentication Ran Bower and Grunt components and wrote the scripting using Nodejs Implemented Service Oriented Architecture SOA by invoking multiple SOAP based Web Services and generating client using JAXWS Used SOAPUI to interact with other applications using SOAP and WSDL file Integrated Spring with Hibernate using configurations and implemented DAO layer to save entities into data base Used Kubernetes to configure in the application for automating deployment scaling and management of containerized applications Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Implemented OAuth 20 provider mechanism is responsible for exposing OAuth 20 protected resources Build and configure a virtual data center in the Amazon Web Services cloud to support Enterprise Data Troubleshooting technical issues and drive issue escalation with AWS Service teams Used Rest templates in the Spring Services to call the rest web services Used Hibernate object relationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with a SQLbased schema Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations Used a microservice architecture with springboot based services interacting through a combination of REST and RabbitMQ Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Involved in writing Oracle PLSQL Stored procedures triggers and views Worked on NoSQL data base MongoDB Performed CRUD operations like Update Insert Delete Fetched data from mongo DB using mongoose Environment Angular 60 Spring Boot IOC DAO Micro Services JSM Node JS OAuth 20 Bower Grunt RabbitMQ Amazon Web Services AWS Spring Services Hibernate POJO Maven ANT PLSQL MongoDB Kubernetes Mongoose Selenium Docker Log4j Jenkins Bamboo SSLTLS Full Stack Java Developer Impossible Foods Redwood City CA October 2015 to August 2017 Responsibilities \u0620Experienced in implementing the Nodejs serverside code along with Express framework to interact with MongoDB to store and retrieve data by using the Mongoose package \u0620Worked on using Rule Engines Droolswith corresponding to validate the business User Roles \u0620Worked with a team to develop and maintain an internal Log Delivery System utilizing various Apache products Kafka and Tomcat \u0620Closely worked with Application using React JS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly \u0620Used Nodejs and Expressjs to develop the relevant back end RESTful API \u0620Developed various screens for the front end using React JS and used various predefined components from NPM and Redux \u0620Automated the frontend workflow using NPM \u0620Automated testing using Mocha and Chai \u0620Created producers consumer and Zookeeper setup for oracle to Kafka replication \u0620Designed and developed Micro Services business components using Spring Boot \u0620Implemented the Project structure based on Spring MVC pattern using Spring Boot and persisted data to MongoDB using Spring Data \u0620Implemented MVVM architecture using Redux Architecture with React JS \u0620Establishing Restful APIS using NODEJS and application backend implemented as NODEJS application server \u0620Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO \u0620Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process \u0620Used JavaScript ES6 in Nodejs runtime environment to build RESTful APIs and to import data \u0620Worked on Prototyping and Implementation using Java8 AWS with Slacker platform \u0620Developed single page applications using ReactRedux architecture ES6 web pack and grunt \u0620Involved in creating a reusable component using React JS for DOM manipulation \u0620Wrote ClientSide code using ReactJS and used NPM gulp directories to generate the server environments used browserify flux to manage with targeted URLs and to monitor the application \u0620Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data \u0620Implemented OAUTH20 authentication protocol and provided OAuth20 token implementation guidelines for enterprise web API security model \u0620Worked on MVC design pattern and Restful WebAPI to make calls from JS files to MVC controllers and Web API controllers using token authentication and OAuth \u0620Used Webpack for bundling our application which takes JavaScript application and bundling it all together with its dependencies \u0620Introduced and implemented Webpack infrastructure to modernize JavaScript practices by extending ES6 through babel loaders \u0620Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design \u0620Developed Micro Services based API using Spring Boot and Spring Data \u0620Implemented storing the Highvolume transaction data in NOSQL Databases using Spring Data \u0620Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring Data JPA \u0620Design and build a largescale global Docker ContainerasaService \u0620Design and build Docker tools and integrations like Docker images and Docker Plugins \u0620Worked on Docker container implementation for the Enterprise build system \u0620Micro services have been built using spring boot NetflixOSS Spring Cloud and deploying to AWSCloud \u0620Understand and document customer website code and create scalable modular microservices to replace the existing website using Spring Boot and Spring Cloud \u0620Used Hibernate to persist access update and delete objects in database \u0620Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations \u0620Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and used AWSSDK to connect with Amazon SQS for bulk email processing \u0620Created instances in AWS as well as migrated data to AWS from data Center using snowball and AWS migration service Full Stack Java Developer Dearborn National Grove IL April 2014 to September 2015 Responsibilities Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Using Angular 20 we created custom directives for reusable components multifield form elements background file uploads etc Worked in various Business rules in the drools file using Drools rule engine Configured AWS EC2 instances domain mapping via Route53 Extensively used CSS and Bootstrap for styling the HTML elements Developing Rest Services using Rest Template with SpringBoot and gradle Containerized the SpringBoot microservice using Docker Using Angular 20 JS factory and services for dependency injection Participated in front end development using JSF 20 JavaScript HTML 5 CSS 30 Designed Frontend with in objectoriented JavaScript Framework with Angularjs Developed API for using AWS Lambda to manage the servers and run the code in the AWS Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap Less CSS3SASS and AJAX Tested JavaScript using Jasmine frameworks Configuring and managed publicprivate cloud infrastructure utilizing Amazon Web Services like Amazon Ec2 Amazon S3 Implemented ODBC which is used for connecting to the database Oracle Integrated testing methods implemented by using Karma and Jasmine Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Apache CXF helps you build and develop services using frontend programming APIs like JAXWS and JAXRS Developed RESTful Services and Web Service Clients JAXRS or JAXWS with data representation in different formats such as XML and JSON Environment JAVA J2EE Core Java Spring Boot Spring Frame work JSF EJB JMS AJAX JavaScript Spring MVC Spring Batch spring security Spring IOC Apache CXF Rest Service Jax RS BROOLS Angular JS Angular controllers Angular customs directions digestive cycle Karma and jasmine MultiThreading AWS Jquery HTML5 CSS3 Ajax ORACLE Rabbit MQ Full Stack Java Developer Accenture December 2012 to March 2014 Responsibilities Used Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC These applications need to maintain privacy and restrict illegal users To achieve the functionality we used Spring Security We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Implemented Spring AOP for cross cutting concerns Hibernate ORM framework used to interact with database through Hibernate query language HQL Used ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX Tested the application after making the necessary configuration Provided daily support for production stage and testing environments for WebSphere MQ operations and problem determination Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Worked with Ember JS to code some new functionality and developed application front end using HTML CSS Ajax Worked on Hibernate persistence tier This involves developing mapping files and Hibernate POJOs DAOs Used SOA UDDI lookups and Web Services Description Language WSDL using SOAP protocol Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Developed HTML prototypes and ready XHTML documents with CSS style sheets Environment JavaJ2ee SQL PLSQL XML Maven JUnit Spring MVC Spring IOC spring Security JSP Spring Batch Java script JQUERY Backbone JS Handle bar JS Core Java Hibernates Unix script Shell Scripts Jax WS Soap Services Jax WS security wsdl2 HTML CSS AJAX IBM MQ IBM Websphere JavaJ2EE Developer CMC Limited April 2011 to November 2012 Responsibilities Used Spring AOP module to handle transaction management logging and profiling Implemented various Business rules in the drl drools file using Drools rule engine Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Created Stored Procedure Trigger for database access and events We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Developed HTML prototypes and ready XHTML documents with CSS style sheets Implemented Multithreading feature for processing the multiple requests to achieve high performance Used SQL which is JavaScript database which is a lightweight clientside inmemory SQL database designed to work in browser Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Environment J2EE JSF XHTML Bootstrap JSON JavaScript Oracle Spring framework Spring IOC java multithreading Prime faces Spring Batch jax WS soap services stored procedures in sql server Drools Spring AOP IBATIS Hibernate MySQL PLSQL XML WSDL SOAP SOAP UI IBM WebSphere JUnit Web sphere Application Server Tomcat Education Bachelors Skills C C Java PHP PLSQL UNIX Shell Script 8 years Servlets Spring Hibernate EJB JPA 8 years JTA JDBC JSP JSTL JNDI AWT Applets 8 years Struts 2010 Spring 30 Spring Batch Spring Security 8 years Spring AOP Spring Core JSF IBatis Spring IOC 8 years HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON 8 years SQL Server MySQL Oracle Mongo DB DB2 8 years Angular JS Angular 2 JQuery Nodejs Backbonejs 8 years Hapijs Reactjs Expressjs Emberjs HandlebarsJS 8 years XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS 8 years JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka 8 years Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss 8 years Agile Waterfall OOAD SCRUM JUnit Mockito Jasmine Karma Mocha Chai Selenium 8 years SVN CVS GIT and Clear Case Maven Gradle ANT 8 years Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS 8 years Windows Linux and UNIX Visual Studio Rational Rose and Microsoft Office 8 years Additional Information Technical Skills Programming Languages C C Java PHP PLSQL UNIX Shell Script JavaJ2EE Technologies Servlets Spring Hibernate EJB JPA JTA JDBC JSP JSTL JNDI AWT Applets Frameworks Struts 2010 Spring 30 Spring Batch Spring Security Spring AOP Spring Core JSF IBatis Spring IOC Web Technologies HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON Database SQL Server MySQL Oracle Mongo DB DB2 JavaScript Frameworks Angular JS Angular 2 JQuery Nodejs Backbonejs Hapijs Reactjs Expressjs Emberjs HandlebarsJS Web Services XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS Messaging JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka Web Application Servers Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss Methodologies Agile Waterfall OOAD SCRUM Testing Tools JUnit Mockito Jasmine Karma Mocha Chai Selenium Version Control SVN CVS GIT and Clear Case Build Tools Maven Gradle ANT IDEs Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS Operating Systems Windows Linux and UNIX Software Visual Studio Rational Rose and Microsoft Office",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Subway",
        "Denver",
        "CO",
        "Overall",
        "years",
        "experience",
        "Software",
        "design",
        "development",
        "activities",
        "requirement",
        "analysis",
        "design",
        "implementations",
        "testing",
        "client",
        "server",
        "applications",
        "Java",
        "J2EE",
        "technologies",
        "experience",
        "Core",
        "Java",
        "Servlets",
        "JSP",
        "JavaScript",
        "JDBC",
        "JSTL",
        "Struts",
        "JSF",
        "EJB",
        "AJAX",
        "Custom",
        "Tag",
        "experience",
        "MVC",
        "Frameworks",
        "Spring",
        "Struts",
        "ORM",
        "Object",
        "mapping",
        "tools",
        "Hibernate",
        "databases",
        "DB2",
        "MY",
        "SQL",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "Application",
        "Servers",
        "BEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "Apache",
        "Tomcat",
        "Expertise",
        "GUI",
        "frontend",
        "components",
        "HTML",
        "XHTML",
        "DHTML",
        "JavaScript",
        "CSS2CSS3",
        "JSON",
        "JSP",
        "Servlets",
        "Ajax",
        "JQuery",
        "EXTJS",
        "JSTL",
        "JavaScript",
        "frameworks",
        "Bootstrap",
        "Ext",
        "JS",
        "Experience",
        "application",
        "MVC",
        "MVVM",
        "JavaScript",
        "frameworks",
        "Angular",
        "Back",
        "BoneJS",
        "EmberJS",
        "Serverside",
        "JavaScript",
        "structures",
        "NodeJS",
        "HapiJS",
        "ExpressJS",
        "Experience",
        "unit",
        "testing",
        "Junit",
        "systems",
        "JMock",
        "Mockito",
        "integration",
        "development",
        "applications",
        "Ant",
        "Maven",
        "tools",
        "NoSQL",
        "databases",
        "MongoDB",
        "Apache",
        "Cassandra",
        "Swagger",
        "usage",
        "testing",
        "structures",
        "Mock",
        "MVC",
        "Mock",
        "Rest",
        "MVC",
        "Experience",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "application",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "Front",
        "technologies",
        "java8",
        "interfaces",
        "Lambda",
        "Expressions",
        "Experience",
        "conveying",
        "application",
        "servers",
        "example",
        "IBM",
        "WebSphere",
        "Oracle",
        "WebLogic",
        "Jboss",
        "Apache",
        "Tomcat",
        "Expertise",
        "Database",
        "Drivers",
        "JDBC",
        "Spring",
        "JSBC",
        "DB",
        "stores",
        "strategies",
        "Experience",
        "ORM",
        "systems",
        "Hibernate",
        "Spring",
        "information",
        "IBatis",
        "JPA",
        "experience",
        "Frameworks",
        "ORM",
        "Hibernate",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "Context",
        "Spring",
        "DAO",
        "Spring",
        "AOP",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Experience",
        "test",
        "tools",
        "Selenium",
        "Unit",
        "Integration",
        "Testing",
        "Cucumber",
        "Acceptance",
        "Testing",
        "Sound",
        "directors",
        "example",
        "NPM",
        "Bower",
        "Web",
        "pack",
        "working",
        "background",
        "J2EE",
        "Frameworks",
        "Spring",
        "MVC",
        "Struts",
        "JSF",
        "master",
        "level",
        "spring",
        "system",
        "modules",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "JTA",
        "Spring",
        "AOP",
        "Profound",
        "Maven",
        "Gradle",
        "ANT",
        "content",
        "application",
        "assemble",
        "arrangement",
        "business",
        "rule",
        "management",
        "system",
        "BRMS",
        "Drools",
        "Rabbit",
        "MQ",
        "IBM",
        "MQ",
        "Apache",
        "Kafka",
        "Message",
        "Middleware",
        "applications",
        "SOAP",
        "WSDL",
        "data",
        "usage",
        "web",
        "administrations",
        "scale",
        "administrations",
        "web",
        "benefit",
        "JaxRS",
        "Jersey",
        "Apache",
        "CXF",
        "experience",
        "Spring",
        "Framework",
        "business",
        "layer",
        "Dependency",
        "Injection",
        "AOP",
        "Spring",
        "MVC",
        "transaction",
        "management",
        "Hibernate",
        "persistence",
        "layer",
        "source",
        "code",
        "administration",
        "apparatuses",
        "SVN",
        "GIT",
        "sprinters",
        "Grunt",
        "Gulp",
        "Web",
        "pack",
        "OAuth2",
        "authentication",
        "protocol",
        "enterprise",
        "web",
        "API",
        "security",
        "model",
        "Spring",
        "SOAP",
        "web",
        "services",
        "Spring",
        "JMS",
        "modules",
        "enterprise",
        "legacy",
        "applications",
        "web",
        "applications",
        "MVC",
        "frameworks",
        "Spring",
        "Spring",
        "IOC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "MVC",
        "Spring",
        "Cloud",
        "microservices",
        "Spring",
        "Circuit",
        "Breaker",
        "pattern",
        "Hystrix",
        "Dashboard",
        "Spring",
        "micro",
        "Experience",
        "Angular",
        "Directives",
        "Dependency",
        "Injection",
        "Services",
        "Routing",
        "Animations",
        "Forms",
        "AOT",
        "Lazy",
        "Loading",
        "Worked",
        "Microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "Work",
        "script",
        "way",
        "properties",
        "web",
        "service",
        "knowledge",
        "frameworks",
        "Struts",
        "Spring",
        "Hibernate",
        "Sound",
        "mix",
        "improvement",
        "devices",
        "Jenkins",
        "Hudson",
        "Puppet",
        "Bamboo",
        "Strong",
        "involvement",
        "UNIX",
        "Shell",
        "Scripting",
        "experience",
        "SQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "databases",
        "Oracle",
        "IBM",
        "DB2",
        "MS",
        "SQL",
        "Server",
        "Spring",
        "Batch",
        "ESP",
        "Task",
        "Job",
        "Scheduler",
        "data",
        "CSV",
        "files",
        "client",
        "database",
        "Spring",
        "Inheritance",
        "beans",
        "parent",
        "beans",
        "version",
        "JavaScript",
        "ECMAScript",
        "WSDL",
        "SOAP",
        "Apache",
        "AXIS",
        "Web",
        "Services",
        "US",
        "employer",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Subway",
        "Milford",
        "CT",
        "September",
        "Present",
        "Responsibilities",
        "webpages",
        "framework",
        "Angular",
        "HTML5",
        "CSS3",
        "Type",
        "Script",
        "test",
        "scenarios",
        "scripts",
        "requirements",
        "test",
        "cases",
        "Selenium",
        "Angular",
        "UI",
        "Routing",
        "navigation",
        "pages",
        "application",
        "Angular2",
        "Angular6",
        "Angular",
        "JS",
        "factory",
        "services",
        "dependency",
        "injection",
        "Angular",
        "custom",
        "directives",
        "components",
        "multifield",
        "form",
        "elements",
        "background",
        "file",
        "uploads",
        "Menus",
        "Drawer",
        "component",
        "Typescript",
        "Angular",
        "integration",
        "Docker",
        "LOG4j",
        "Debug",
        "Exception",
        "Statements",
        "Experience",
        "tools",
        "JIRA",
        "Bitbucket",
        "Bamboo",
        "Confluence",
        "Source",
        "Tree",
        "Experience",
        "Angular",
        "Directives",
        "Dependency",
        "Injection",
        "Services",
        "Routing",
        "Animations",
        "Forms",
        "AOT",
        "Lazy",
        "Loading",
        "Spring",
        "framework",
        "J2EE",
        "components",
        "Spring",
        "Boot",
        "IOC",
        "DAO",
        "modules",
        "controller",
        "classes",
        "backend",
        "process",
        "services",
        "database",
        "interaction",
        "Spring",
        "Boot",
        "spring",
        "applications",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "Angular",
        "Implemented",
        "Micro",
        "Services",
        "Cloud",
        "Architecture",
        "Spring",
        "Boot",
        "implementation",
        "Business",
        "Services",
        "Java8",
        "Spring",
        "Boot",
        "Spring",
        "Boot",
        "framework",
        "Presentation",
        "Layer",
        "Business",
        "Layers",
        "Controller",
        "servlets",
        "Spring",
        "Boot",
        "Actuator",
        "application",
        "performance",
        "Spring",
        "Inheritance",
        "beans",
        "parent",
        "beans",
        "Java",
        "classes",
        "processing",
        "JSM",
        "Spring",
        "Batch",
        "ESP",
        "Task",
        "Job",
        "Scheduler",
        "data",
        "CSV",
        "files",
        "client",
        "database",
        "Spring",
        "Cloud",
        "Config",
        "server",
        "support",
        "configuration",
        "system",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "form",
        "communication",
        "knowledge",
        "RabbitMQ",
        "OAuth2",
        "authentication",
        "protocol",
        "enterprise",
        "web",
        "API",
        "security",
        "model",
        "Expertise",
        "tools",
        "Maven",
        "ANT",
        "building",
        "artifacts",
        "jar",
        "war",
        "source",
        "code",
        "Nodejs",
        "server",
        "authentication",
        "Ran",
        "Bower",
        "Grunt",
        "components",
        "scripting",
        "Nodejs",
        "Implemented",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "SOAP",
        "Web",
        "Services",
        "generating",
        "client",
        "JAXWS",
        "SOAPUI",
        "applications",
        "SOAP",
        "WSDL",
        "Integrated",
        "Spring",
        "Hibernate",
        "configurations",
        "DAO",
        "layer",
        "entities",
        "data",
        "base",
        "Kubernetes",
        "application",
        "deployment",
        "scaling",
        "management",
        "applications",
        "application",
        "Spring",
        "framework",
        "features",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Beans",
        "Spring",
        "Security",
        "Spring",
        "JPA",
        "Spring",
        "Web",
        "flow",
        "MVC",
        "Implemented",
        "OAuth",
        "provider",
        "mechanism",
        "OAuth",
        "resources",
        "Build",
        "data",
        "center",
        "Amazon",
        "Web",
        "Services",
        "cloud",
        "Enterprise",
        "Data",
        "Troubleshooting",
        "issues",
        "issue",
        "escalation",
        "AWS",
        "Service",
        "teams",
        "Rest",
        "templates",
        "Spring",
        "Services",
        "rest",
        "web",
        "services",
        "Hibernate",
        "object",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Hibernate",
        "POJO",
        "Objects",
        "Hibernate",
        "Annotations",
        "microservice",
        "architecture",
        "springboot",
        "services",
        "combination",
        "REST",
        "implementation",
        "experience",
        "installation",
        "configuration",
        "Kubernetes",
        "deployments",
        "Kubernetes",
        "Oracle",
        "PLSQL",
        "procedures",
        "triggers",
        "views",
        "NoSQL",
        "data",
        "base",
        "MongoDB",
        "Performed",
        "CRUD",
        "operations",
        "Update",
        "Insert",
        "Delete",
        "Fetched",
        "data",
        "mongo",
        "DB",
        "Environment",
        "Angular",
        "Spring",
        "Boot",
        "IOC",
        "DAO",
        "Micro",
        "Services",
        "JSM",
        "Node",
        "JS",
        "OAuth",
        "Bower",
        "Grunt",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Spring",
        "Services",
        "Hibernate",
        "POJO",
        "Maven",
        "ANT",
        "MongoDB",
        "Kubernetes",
        "Mongoose",
        "Selenium",
        "Docker",
        "Log4j",
        "Jenkins",
        "Bamboo",
        "SSLTLS",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Impossible",
        "Foods",
        "Redwood",
        "City",
        "CA",
        "October",
        "August",
        "Responsibilities",
        "Nodejs",
        "serverside",
        "code",
        "Express",
        "framework",
        "data",
        "Mongoose",
        "package",
        "\u0620Worked",
        "Rule",
        "Engines",
        "Droolswith",
        "business",
        "User",
        "Roles",
        "\u0620Worked",
        "team",
        "Log",
        "Delivery",
        "System",
        "Apache",
        "products",
        "Kafka",
        "Tomcat",
        "\u0620Closely",
        "Application",
        "React",
        "JS",
        "Nodejs",
        "NPM",
        "gulp",
        "directories",
        "view",
        "flux",
        "URLs",
        "Nodejs",
        "Expressjs",
        "end",
        "API",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Redux",
        "\u0620Automated",
        "frontend",
        "workflow",
        "NPM",
        "testing",
        "Mocha",
        "Chai",
        "\u0620Created",
        "producers",
        "consumer",
        "Zookeeper",
        "setup",
        "oracle",
        "Kafka",
        "replication",
        "Micro",
        "Services",
        "business",
        "components",
        "Spring",
        "Boot",
        "\u0620Implemented",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "Spring",
        "Boot",
        "data",
        "MongoDB",
        "Spring",
        "Data",
        "\u0620Implemented",
        "MVVM",
        "architecture",
        "Redux",
        "Architecture",
        "React",
        "JS",
        "\u0620Establishing",
        "APIS",
        "NODEJS",
        "application",
        "backend",
        "NODEJS",
        "application",
        "server",
        "\u0620Worked",
        "DB2",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "views",
        "SQL",
        "Queries",
        "DAO",
        "\u0620Developed",
        "Oracle",
        "PLSQL",
        "Stored",
        "Procedures",
        "Queries",
        "Payment",
        "release",
        "process",
        "authorization",
        "process",
        "\u0620Used",
        "JavaScript",
        "ES6",
        "Nodejs",
        "runtime",
        "environment",
        "APIs",
        "data",
        "\u0620Worked",
        "Prototyping",
        "Implementation",
        "Java8",
        "AWS",
        "Slacker",
        "platform",
        "page",
        "applications",
        "ReactRedux",
        "architecture",
        "ES6",
        "web",
        "pack",
        "grunt",
        "\u0620Involved",
        "component",
        "React",
        "JS",
        "DOM",
        "manipulation",
        "\u0620Wrote",
        "ClientSide",
        "code",
        "ReactJS",
        "NPM",
        "gulp",
        "directories",
        "server",
        "environments",
        "browserify",
        "flux",
        "URLs",
        "application",
        "UI",
        "mockups",
        "party",
        "react",
        "libraries",
        "Redux",
        "store",
        "data",
        "\u0620Implemented",
        "authentication",
        "protocol",
        "OAuth20",
        "implementation",
        "guidelines",
        "enterprise",
        "web",
        "API",
        "security",
        "model",
        "\u0620Worked",
        "MVC",
        "design",
        "pattern",
        "Restful",
        "WebAPI",
        "calls",
        "JS",
        "files",
        "MVC",
        "controllers",
        "Web",
        "API",
        "controllers",
        "authentication",
        "OAuth",
        "\u0620Used",
        "Webpack",
        "application",
        "JavaScript",
        "application",
        "dependencies",
        "Webpack",
        "infrastructure",
        "JavaScript",
        "practices",
        "ES6",
        "babel",
        "loaders",
        "\u0620Worked",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "\u0620Developed",
        "Micro",
        "Services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "\u0620Implemented",
        "Highvolume",
        "transaction",
        "data",
        "NOSQL",
        "Databases",
        "Spring",
        "Data",
        "\u0620Developed",
        "component",
        "CRUD",
        "Scaffolding",
        "projects",
        "companys",
        "IT",
        "team",
        "GWT",
        "Spring",
        "Data",
        "JPA",
        "\u0620Design",
        "largescale",
        "global",
        "Docker",
        "ContainerasaService",
        "\u0620Design",
        "Docker",
        "tools",
        "integrations",
        "Docker",
        "images",
        "Docker",
        "Plugins",
        "\u0620Worked",
        "Docker",
        "container",
        "implementation",
        "Enterprise",
        "build",
        "system",
        "\u0620Micro",
        "services",
        "spring",
        "boot",
        "NetflixOSS",
        "Spring",
        "Cloud",
        "AWSCloud",
        "\u0620Understand",
        "document",
        "customer",
        "website",
        "code",
        "microservices",
        "website",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Hibernate",
        "access",
        "update",
        "objects",
        "database",
        "\u0620Involved",
        "Hibernate",
        "POJO",
        "Objects",
        "Hibernate",
        "Annotations",
        "\u0620Implemented",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "groups",
        "AWSSDK",
        "Amazon",
        "SQS",
        "email",
        "instances",
        "AWS",
        "data",
        "AWS",
        "data",
        "Center",
        "snowball",
        "AWS",
        "migration",
        "service",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Dearborn",
        "National",
        "Grove",
        "IL",
        "April",
        "September",
        "Responsibilities",
        "metrics",
        "collection",
        "mechanism",
        "server",
        "Apache",
        "Kafka",
        "serverside",
        "events",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "S3",
        "highavailability",
        "fault",
        "tolerance",
        "Angular",
        "custom",
        "directives",
        "components",
        "multifield",
        "form",
        "elements",
        "background",
        "file",
        "uploads",
        "Business",
        "rules",
        "drools",
        "file",
        "Drools",
        "rule",
        "engine",
        "AWS",
        "EC2",
        "instances",
        "mapping",
        "Route53",
        "CSS",
        "Bootstrap",
        "HTML",
        "elements",
        "Rest",
        "Services",
        "Rest",
        "Template",
        "SpringBoot",
        "Containerized",
        "SpringBoot",
        "microservice",
        "Docker",
        "Angular",
        "JS",
        "factory",
        "services",
        "dependency",
        "injection",
        "end",
        "development",
        "JSF",
        "JavaScript",
        "HTML",
        "CSS",
        "Frontend",
        "JavaScript",
        "Framework",
        "Angularjs",
        "Developed",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "CSS3SASS",
        "AJAX",
        "Tested",
        "JavaScript",
        "Jasmine",
        "frameworks",
        "Configuring",
        "publicprivate",
        "cloud",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "Amazon",
        "S3",
        "ODBC",
        "database",
        "Oracle",
        "Integrated",
        "testing",
        "methods",
        "Karma",
        "Jasmine",
        "Developed",
        "application",
        "Spring",
        "framework",
        "features",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Beans",
        "Spring",
        "Security",
        "Spring",
        "JPA",
        "Spring",
        "Web",
        "flow",
        "MVC",
        "Apache",
        "CXF",
        "services",
        "frontend",
        "programming",
        "APIs",
        "JAXWS",
        "JAXRS",
        "Developed",
        "RESTful",
        "Services",
        "Web",
        "Service",
        "Clients",
        "JAXRS",
        "JAXWS",
        "data",
        "representation",
        "formats",
        "XML",
        "JSON",
        "Environment",
        "J2EE",
        "Core",
        "Java",
        "Spring",
        "Boot",
        "Spring",
        "Frame",
        "work",
        "JSF",
        "EJB",
        "JMS",
        "AJAX",
        "JavaScript",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "spring",
        "security",
        "Spring",
        "IOC",
        "Apache",
        "CXF",
        "Rest",
        "Service",
        "Jax",
        "RS",
        "BROOLS",
        "Angular",
        "JS",
        "controllers",
        "customs",
        "directions",
        "cycle",
        "Karma",
        "jasmine",
        "MultiThreading",
        "Jquery",
        "HTML5",
        "CSS3",
        "Ajax",
        "ORACLE",
        "Rabbit",
        "MQ",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Accenture",
        "December",
        "March",
        "Responsibilities",
        "Backbone",
        "JS",
        "rendering",
        "functions",
        "controllers",
        "events",
        "clients",
        "request",
        "application",
        "Spring",
        "framework",
        "features",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "injection",
        "Spring",
        "Beans",
        "Spring",
        "Security",
        "Spring",
        "JPA",
        "Spring",
        "Web",
        "flow",
        "MVC",
        "applications",
        "privacy",
        "users",
        "functionality",
        "Spring",
        "Security",
        "bean",
        "life",
        "cycle",
        "Spring",
        "IOC",
        "session",
        "information",
        "beans",
        "Spring",
        "AOP",
        "cross",
        "concerns",
        "Hibernate",
        "ORM",
        "framework",
        "database",
        "Hibernate",
        "query",
        "language",
        "HQL",
        "ANT",
        "application",
        "IBM",
        "WebSphere",
        "UNIX",
        "environment",
        "IBM",
        "AIX",
        "application",
        "configuration",
        "support",
        "production",
        "stage",
        "testing",
        "environments",
        "WebSphere",
        "MQ",
        "operations",
        "problem",
        "determination",
        "J2EE",
        "design",
        "Spring",
        "Inversion",
        "Control",
        "IOC",
        "architecture",
        "Spring",
        "JPA",
        "Ember",
        "JS",
        "functionality",
        "application",
        "end",
        "HTML",
        "CSS",
        "Ajax",
        "Hibernate",
        "persistence",
        "tier",
        "mapping",
        "files",
        "Hibernate",
        "POJOs",
        "DAOs",
        "SOA",
        "UDDI",
        "lookups",
        "Web",
        "Services",
        "Description",
        "Language",
        "WSDL",
        "SOAP",
        "protocol",
        "JaxWS",
        "framework",
        "SOAP",
        "web",
        "services",
        "Web",
        "services",
        "data",
        "applications",
        "messages",
        "development",
        "SOAP",
        "Webservices",
        "Apache",
        "Axis",
        "client",
        "data",
        "databases",
        "Design",
        "UI",
        "Screen",
        "mock",
        "HTML",
        "CSS",
        "JavaScript",
        "SOAP",
        "Services",
        "JAXWS",
        "systems",
        "client",
        "code",
        "SOAP",
        "web",
        "services",
        "HTML",
        "prototypes",
        "XHTML",
        "documents",
        "CSS",
        "style",
        "sheets",
        "Environment",
        "JavaJ2ee",
        "SQL",
        "PLSQL",
        "XML",
        "Maven",
        "JUnit",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "spring",
        "Security",
        "JSP",
        "Spring",
        "Batch",
        "Java",
        "script",
        "JQUERY",
        "Backbone",
        "JS",
        "Handle",
        "bar",
        "JS",
        "Core",
        "Java",
        "Hibernates",
        "Unix",
        "script",
        "Shell",
        "Scripts",
        "Jax",
        "WS",
        "Soap",
        "Services",
        "Jax",
        "WS",
        "security",
        "wsdl2",
        "HTML",
        "CSS",
        "AJAX",
        "IBM",
        "MQ",
        "IBM",
        "Websphere",
        "JavaJ2EE",
        "Developer",
        "CMC",
        "Limited",
        "April",
        "November",
        "Responsibilities",
        "Spring",
        "AOP",
        "module",
        "transaction",
        "management",
        "logging",
        "Business",
        "rules",
        "drl",
        "drools",
        "file",
        "Drools",
        "rule",
        "engine",
        "Design",
        "UI",
        "Screen",
        "mock",
        "HTML",
        "CSS",
        "JavaScript",
        "Created",
        "Stored",
        "Procedure",
        "Trigger",
        "database",
        "access",
        "events",
        "bean",
        "life",
        "cycle",
        "Spring",
        "IOC",
        "session",
        "information",
        "beans",
        "Developed",
        "HTML",
        "prototypes",
        "XHTML",
        "documents",
        "CSS",
        "style",
        "sheets",
        "Multithreading",
        "feature",
        "requests",
        "performance",
        "SQL",
        "JavaScript",
        "database",
        "SQL",
        "database",
        "browser",
        "Used",
        "JaxWS",
        "framework",
        "SOAP",
        "web",
        "services",
        "Web",
        "services",
        "data",
        "applications",
        "messages",
        "development",
        "SOAP",
        "Webservices",
        "Apache",
        "Axis",
        "client",
        "data",
        "databases",
        "SOAP",
        "Services",
        "JAXWS",
        "systems",
        "client",
        "code",
        "SOAP",
        "web",
        "services",
        "Environment",
        "J2EE",
        "JSF",
        "XHTML",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "Oracle",
        "Spring",
        "framework",
        "Spring",
        "IOC",
        "Prime",
        "Spring",
        "Batch",
        "WS",
        "soap",
        "services",
        "procedures",
        "server",
        "Drools",
        "Spring",
        "AOP",
        "IBATIS",
        "Hibernate",
        "MySQL",
        "PLSQL",
        "XML",
        "WSDL",
        "SOAP",
        "SOAP",
        "UI",
        "IBM",
        "WebSphere",
        "JUnit",
        "Web",
        "sphere",
        "Application",
        "Server",
        "Tomcat",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "C",
        "Java",
        "PHP",
        "PLSQL",
        "UNIX",
        "Shell",
        "Script",
        "years",
        "Servlets",
        "Spring",
        "Hibernate",
        "EJB",
        "JPA",
        "years",
        "JTA",
        "JDBC",
        "JSP",
        "JSTL",
        "JNDI",
        "AWT",
        "Applets",
        "years",
        "Struts",
        "Spring",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "years",
        "Spring",
        "AOP",
        "Spring",
        "Core",
        "JSF",
        "IBatis",
        "Spring",
        "IOC",
        "years",
        "HTML",
        "HTML5",
        "CSSCSS3",
        "AJAX",
        "Bootstrap",
        "XML",
        "Grunt",
        "Gulp",
        "JSON",
        "years",
        "SQL",
        "Server",
        "MySQL",
        "Oracle",
        "Mongo",
        "DB",
        "DB2",
        "years",
        "JS",
        "Angular",
        "JQuery",
        "Nodejs",
        "Backbonejs",
        "years",
        "Hapijs",
        "Reactjs",
        "Expressjs",
        "Emberjs",
        "HandlebarsJS",
        "years",
        "XSD",
        "WSDL",
        "Apache",
        "Axis",
        "SOAP",
        "Restful",
        "GraphQL",
        "JAX",
        "RS",
        "JAX",
        "WS",
        "years",
        "JMS",
        "Java",
        "Message",
        "Service",
        "IBM",
        "MQ",
        "Apache",
        "MQ",
        "Apache",
        "Kafka",
        "years",
        "Oracle",
        "WebLogic",
        "IBM",
        "WebSphere",
        "8x6x",
        "Apache",
        "Tomcat",
        "JBoss",
        "years",
        "Agile",
        "Waterfall",
        "JUnit",
        "Mockito",
        "Jasmine",
        "Karma",
        "Mocha",
        "Chai",
        "Selenium",
        "years",
        "SVN",
        "CVS",
        "GIT",
        "Clear",
        "Case",
        "Maven",
        "Gradle",
        "ANT",
        "years",
        "Eclipse",
        "IDE",
        "RAD",
        "Intellij",
        "IDEA",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "years",
        "Windows",
        "Linux",
        "UNIX",
        "Visual",
        "Studio",
        "Rational",
        "Rose",
        "Microsoft",
        "Office",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "C",
        "C",
        "Java",
        "PHP",
        "PLSQL",
        "UNIX",
        "Shell",
        "Script",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "Spring",
        "Hibernate",
        "EJB",
        "JPA",
        "JTA",
        "JDBC",
        "JSP",
        "JSTL",
        "JNDI",
        "AWT",
        "Applets",
        "Frameworks",
        "Struts",
        "Spring",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "Spring",
        "Core",
        "JSF",
        "IBatis",
        "Spring",
        "IOC",
        "Web",
        "Technologies",
        "HTML",
        "HTML5",
        "CSSCSS3",
        "AJAX",
        "Bootstrap",
        "XML",
        "Grunt",
        "Gulp",
        "JSON",
        "Database",
        "SQL",
        "Server",
        "MySQL",
        "Oracle",
        "Mongo",
        "DB",
        "DB2",
        "JavaScript",
        "Frameworks",
        "Angular",
        "JS",
        "Angular",
        "JQuery",
        "Nodejs",
        "Backbonejs",
        "Hapijs",
        "Reactjs",
        "Expressjs",
        "Emberjs",
        "HandlebarsJS",
        "Web",
        "Services",
        "XSD",
        "WSDL",
        "Apache",
        "Axis",
        "SOAP",
        "Restful",
        "GraphQL",
        "JAX",
        "RS",
        "JAX",
        "WS",
        "JMS",
        "Java",
        "Message",
        "Service",
        "IBM",
        "MQ",
        "Apache",
        "MQ",
        "Apache",
        "Kafka",
        "Web",
        "Application",
        "Servers",
        "Oracle",
        "WebLogic",
        "IBM",
        "WebSphere",
        "8x6x",
        "Apache",
        "Tomcat",
        "JBoss",
        "Methodologies",
        "Agile",
        "Waterfall",
        "Testing",
        "Tools",
        "JUnit",
        "Mockito",
        "Jasmine",
        "Karma",
        "Mocha",
        "Chai",
        "Selenium",
        "Version",
        "Control",
        "SVN",
        "CVS",
        "GIT",
        "Clear",
        "Case",
        "Build",
        "Tools",
        "Maven",
        "Gradle",
        "ANT",
        "IDEs",
        "Eclipse",
        "IDE",
        "RAD",
        "Intellij",
        "IDEA",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "UNIX",
        "Software",
        "Visual",
        "Studio",
        "Rational",
        "Rose",
        "Microsoft",
        "Office"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:23:06.470510",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Subway Denver CO Overall 8 years of experience in Software design and development activities including requirement analysis design implementations and testing of various client server based applications using Java and J2EE technologies Extensive experience in Core Java Servlets JSP JavaScript JDBC JSTL Struts JSF EJB AJAX and Custom Tag Libraries Extensive experience in working with different MVC Frameworks like Spring Struts and ORM Object Relational mapping tools like Hibernate Experienced working with databases like DB2 MY SQL Oracle MS SQL Server and Application Servers like BEA WebLogic IBM WebSphere Apache Tomcat Expertise in developing critical responsive GUI frontend components using HTML XHTML DHTML JavaScript CSS2CSS3 JSON JSP Servlets Ajax JQuery EXTJS JSTL and JavaScript using frameworks like Bootstrap AngularJS Ext JS Experience in application of MVC and MVVM clientside JavaScript frameworks such as Angular 20 AngularJS Back BoneJS EmberJS HandlebarJS Experienced on Serverside JavaScript structures like NodeJS HapiJS ExpressJS Experience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools Worked on NoSQL databases like MongoDB and Apache Cassandra Swagger usage and testing structures like Mock MVC Mock Rest MVC Experience in Integration of Amazon Web Services AWS application like Amazon EC2 Amazon S3 Amazon Simple DB Amazon Elastic Load Balancing Amazon SQS Amazon EBS and Amazon Cloud Front Worked under new technologies introduced in java8 like Functional interfaces and Lambda Expressions Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Expertise in Database Drivers Like JDBC Spring JSBC to summon DB stores strategies Experience in ORM systems like Hibernate Spring information IBatis and JPA Extensive experience with Frameworks in ORM Hibernate and Spring Spring MVC Spring Context Spring DAO Spring AOP Spring Batch Spring Security Experience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing Sound learning on bundle directors for example NPM Bower Web pack Extensive working background with different J2EE Frameworks like Spring MVC Struts JSF and master level aptitudes in spring system modules like Spring Batch Spring Security Spring Boot Spring Cloud Spring JTA Spring AOP Profound learning on Maven Gradle ANT as fabricate content for application assemble and arrangement Worked under a business rule management system BRMS like Drools Worked on utilizing Rabbit MQ IBM MQ Apache Kafka as a Message Oriented Middleware for coordinating applications Strong learning in SOAP WSDL and RESTful for trading organized data in the usage of web administrations Developed small scale administrations like RESTful web benefit JaxRS with Jersey Apache CXF Extensive experience using Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and using Hibernate as a persistence layer Experienced in utilizing source code variant administration apparatuses like SVN GIT and undertaking sprinters like Grunt Gulp and Web pack Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Designed and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications Worked in developing web applications on MVC based frameworks like Spring Spring IOC Spring Security Spring Boot Spring Cloud and Spring MVC Implemented Spring Cloud NetflixZUL to building microservices to communicate with each other Implemented Spring Circuit Breaker pattern integrated Hystrix Dashboard to monitor Spring micro services Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Worked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console Work under Groovy script for setting in a dynamic way some properties for invoking the web service Excellent working knowledge on popular frameworks like Struts Spring Hibernate Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet and Bamboo Strong involvement in UNIX and Shell Scripting Extensive experience in SQL Stored Procedures Functions and Triggers with databases such as Oracle IBM DB2 and MS SQL Server Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Inheritance to develop beans from already developed parent beans Worked under the latest standardized version of JavaScript like ECMAScript 6 Experienced in using WSDL SOAP and Apache AXIS for Web Services Authorized to work in the US for any employer Work Experience Full Stack Java Developer Subway Milford CT September 2017 to Present Responsibilities Developed the webpages using framework Angular 60 along with HTML5 CSS3 and Type Script Designed and reviewed the test scenarios and scripts for given functional requirements and automated test cases in Selenium Extensively worked on the Angular UI Routing to handle navigation to access different pages in the application Migrated from Angular2 to Angular6 Using Angular 60 JS factory and services for dependency injection Using Angular 60 we created custom directives for reusable components multifield form elements background file uploads etc Created Menus and Drawer component by using Typescript and Angular 60 Implemented continuous integration using Docker Extensively used the LOG4j to log regular Debug and Exception Statements Experience in using Atlassian tools like JIRA Bitbucket Bamboo Confluence Source Tree Experience with Angular 4 Directives Dependency Injection Services Routing pipes Animations Forms AOT Lazy Loading Used Spring framework and J2EE components Utilized Spring Boot IOC and DAO modules Developed controller classes backend process complex services and database interaction Used Spring Boot to create standalone spring applications Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 6 Implemented Micro Services based Cloud Architecture using Spring Boot and implementation of Business Services using the Java8 and Spring Boot Used Spring Boot framework to write Presentation Layer Business Layers and Controller servlets Implemented Spring Boot Actuator to monitor application performance Used Spring Inheritance to develop beans from already developed parent beans Developed Java classes for implementing asynchronous processing using JSM Implemented Spring Batch and ESP Task Job Scheduler to automate importing data from CSV files sent from client into database Used Spring Cloud Config which provides server and clientside support for externalized configuration in a distributed system Used Java Messaging Services JMS which provides reliable and asynchronous form of communication and have good knowledge in RabbitMQ Implemented OAuth2 and SAML authentication protocol for enterprise web API security model Expertise in using built tools like Maven ANT for the building of deployable artifacts such as jar war from source code Implemented a Nodejs server to manage authentication Ran Bower and Grunt components and wrote the scripting using Nodejs Implemented Service Oriented Architecture SOA by invoking multiple SOAP based Web Services and generating client using JAXWS Used SOAPUI to interact with other applications using SOAP and WSDL file Integrated Spring with Hibernate using configurations and implemented DAO layer to save entities into data base Used Kubernetes to configure in the application for automating deployment scaling and management of containerized applications Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Implemented OAuth 20 provider mechanism is responsible for exposing OAuth 20 protected resources Build and configure a virtual data center in the Amazon Web Services cloud to support Enterprise Data Troubleshooting technical issues and drive issue escalation with AWS Service teams Used Rest templates in the Spring Services to call the rest web services Used Hibernate object relationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with a SQLbased schema Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations Used a microservice architecture with springboot based services interacting through a combination of REST and RabbitMQ Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Involved in writing Oracle PLSQL Stored procedures triggers and views Worked on NoSQL data base MongoDB Performed CRUD operations like Update Insert Delete Fetched data from mongo DB using mongoose Environment Angular 60 Spring Boot IOC DAO Micro Services JSM Node JS OAuth 20 Bower Grunt RabbitMQ Amazon Web Services AWS Spring Services Hibernate POJO Maven ANT PLSQL MongoDB Kubernetes Mongoose Selenium Docker Log4j Jenkins Bamboo SSLTLS Full Stack Java Developer Impossible Foods Redwood City CA October 2015 to August 2017 Responsibilities \u0620Experienced in implementing the Nodejs serverside code along with Express framework to interact with MongoDB to store and retrieve data by using the Mongoose package \u0620Worked on using Rule Engines Droolswith corresponding to validate the business User Roles \u0620Worked with a team to develop and maintain an internal Log Delivery System utilizing various Apache products Kafka and Tomcat \u0620Closely worked with Application using React JS and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly \u0620Used Nodejs and Expressjs to develop the relevant back end RESTful API \u0620Developed various screens for the front end using React JS and used various predefined components from NPM and Redux \u0620Automated the frontend workflow using NPM \u0620Automated testing using Mocha and Chai \u0620Created producers consumer and Zookeeper setup for oracle to Kafka replication \u0620Designed and developed Micro Services business components using Spring Boot \u0620Implemented the Project structure based on Spring MVC pattern using Spring Boot and persisted data to MongoDB using Spring Data \u0620Implemented MVVM architecture using Redux Architecture with React JS \u0620Establishing Restful APIS using NODEJS and application backend implemented as NODEJS application server \u0620Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO \u0620Developed Oracle PLSQL Stored Procedures and Queries for Payment release process and authorization process \u0620Used JavaScript ES6 in Nodejs runtime environment to build RESTful APIs and to import data \u0620Worked on Prototyping and Implementation using Java8 AWS with Slacker platform \u0620Developed single page applications using ReactRedux architecture ES6 web pack and grunt \u0620Involved in creating a reusable component using React JS for DOM manipulation \u0620Wrote ClientSide code using ReactJS and used NPM gulp directories to generate the server environments used browserify flux to manage with targeted URLs and to monitor the application \u0620Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data \u0620Implemented OAUTH20 authentication protocol and provided OAuth20 token implementation guidelines for enterprise web API security model \u0620Worked on MVC design pattern and Restful WebAPI to make calls from JS files to MVC controllers and Web API controllers using token authentication and OAuth \u0620Used Webpack for bundling our application which takes JavaScript application and bundling it all together with its dependencies \u0620Introduced and implemented Webpack infrastructure to modernize JavaScript practices by extending ES6 through babel loaders \u0620Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design \u0620Developed Micro Services based API using Spring Boot and Spring Data \u0620Implemented storing the Highvolume transaction data in NOSQL Databases using Spring Data \u0620Developed common reusable component libraries CRUD Scaffolding to be reused in different projects throughout the companys IT team using GWT Spring Data JPA \u0620Design and build a largescale global Docker ContainerasaService \u0620Design and build Docker tools and integrations like Docker images and Docker Plugins \u0620Worked on Docker container implementation for the Enterprise build system \u0620Micro services have been built using spring boot NetflixOSS Spring Cloud and deploying to AWSCloud \u0620Understand and document customer website code and create scalable modular microservices to replace the existing website using Spring Boot and Spring Cloud \u0620Used Hibernate to persist access update and delete objects in database \u0620Involved in creating the Hibernate POJO Objects and mapped using Hibernate Annotations \u0620Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Autoscaling groups and used AWSSDK to connect with Amazon SQS for bulk email processing \u0620Created instances in AWS as well as migrated data to AWS from data Center using snowball and AWS migration service Full Stack Java Developer Dearborn National Grove IL April 2014 to September 2015 Responsibilities Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Using Angular 20 we created custom directives for reusable components multifield form elements background file uploads etc Worked in various Business rules in the drools file using Drools rule engine Configured AWS EC2 instances domain mapping via Route53 Extensively used CSS and Bootstrap for styling the HTML elements Developing Rest Services using Rest Template with SpringBoot and gradle Containerized the SpringBoot microservice using Docker Using Angular 20 JS factory and services for dependency injection Participated in front end development using JSF 20 JavaScript HTML 5 CSS 30 Designed Frontend with in objectoriented JavaScript Framework with Angularjs Developed API for using AWS Lambda to manage the servers and run the code in the AWS Developed dynamic web pages using HTML5 CSS3 jQuery Bootstrap Less CSS3SASS and AJAX Tested JavaScript using Jasmine frameworks Configuring and managed publicprivate cloud infrastructure utilizing Amazon Web Services like Amazon Ec2 Amazon S3 Implemented ODBC which is used for connecting to the database Oracle Integrated testing methods implemented by using Karma and Jasmine Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC Apache CXF helps you build and develop services using frontend programming APIs like JAXWS and JAXRS Developed RESTful Services and Web Service Clients JAXRS or JAXWS with data representation in different formats such as XML and JSON Environment JAVA J2EE Core Java Spring Boot Spring Frame work JSF EJB JMS AJAX JavaScript Spring MVC Spring Batch spring security Spring IOC Apache CXF Rest Service Jax RS BROOLS Angular JS Angular controllers Angular customs directions digestive cycle Karma and jasmine MultiThreading AWS Jquery HTML5 CSS3 Ajax ORACLE Rabbit MQ Full Stack Java Developer Accenture December 2012 to March 2014 Responsibilities Used Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server Developed application on Spring framework by utilizing its features like Spring Boot Spring Dependency injection Spring Beans Spring Security Spring JPA Spring Web flow using MVC These applications need to maintain privacy and restrict illegal users To achieve the functionality we used Spring Security We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Implemented Spring AOP for cross cutting concerns Hibernate ORM framework used to interact with database through Hibernate query language HQL Used ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX Tested the application after making the necessary configuration Provided daily support for production stage and testing environments for WebSphere MQ operations and problem determination Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Worked with Ember JS to code some new functionality and developed application front end using HTML CSS Ajax Worked on Hibernate persistence tier This involves developing mapping files and Hibernate POJOs DAOs Used SOA UDDI lookups and Web Services Description Language WSDL using SOAP protocol Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Developed HTML prototypes and ready XHTML documents with CSS style sheets Environment JavaJ2ee SQL PLSQL XML Maven JUnit Spring MVC Spring IOC spring Security JSP Spring Batch Java script JQUERY Backbone JS Handle bar JS Core Java Hibernates Unix script Shell Scripts Jax WS Soap Services Jax WS security wsdl2 HTML CSS AJAX IBM MQ IBM Websphere JavaJ2EE Developer CMC Limited April 2011 to November 2012 Responsibilities Used Spring AOP module to handle transaction management logging and profiling Implemented various Business rules in the drl drools file using Drools rule engine Involved in Design UI Screen created several mock up Using HTML CSS and JavaScript Created Stored Procedure Trigger for database access and events We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans Developed HTML prototypes and ready XHTML documents with CSS style sheets Implemented Multithreading feature for processing the multiple requests to achieve high performance Used SQL which is JavaScript database which is a lightweight clientside inmemory SQL database designed to work in browser Used JaxWS framework to create SOAP web services Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases Implemented SOAP Services JAXWS to interact with external systems Involved in writing client code for invoking SOAP based web services Environment J2EE JSF XHTML Bootstrap JSON JavaScript Oracle Spring framework Spring IOC java multithreading Prime faces Spring Batch jax WS soap services stored procedures in sql server Drools Spring AOP IBATIS Hibernate MySQL PLSQL XML WSDL SOAP SOAP UI IBM WebSphere JUnit Web sphere Application Server Tomcat Education Bachelors Skills C C Java PHP PLSQL UNIX Shell Script 8 years Servlets Spring Hibernate EJB JPA 8 years JTA JDBC JSP JSTL JNDI AWT Applets 8 years Struts 2010 Spring 30 Spring Batch Spring Security 8 years Spring AOP Spring Core JSF IBatis Spring IOC 8 years HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON 8 years SQL Server MySQL Oracle Mongo DB DB2 8 years Angular JS Angular 2 JQuery Nodejs Backbonejs 8 years Hapijs Reactjs Expressjs Emberjs HandlebarsJS 8 years XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS 8 years JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka 8 years Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss 8 years Agile Waterfall OOAD SCRUM JUnit Mockito Jasmine Karma Mocha Chai Selenium 8 years SVN CVS GIT and Clear Case Maven Gradle ANT 8 years Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS 8 years Windows Linux and UNIX Visual Studio Rational Rose and Microsoft Office 8 years Additional Information Technical Skills Programming Languages C C Java PHP PLSQL UNIX Shell Script JavaJ2EE Technologies Servlets Spring Hibernate EJB JPA JTA JDBC JSP JSTL JNDI AWT Applets Frameworks Struts 2010 Spring 30 Spring Batch Spring Security Spring AOP Spring Core JSF IBatis Spring IOC Web Technologies HTML HTML5 CSSCSS3 AJAX Bootstrap XML Grunt Gulp JSON Database SQL Server MySQL Oracle Mongo DB DB2 JavaScript Frameworks Angular JS Angular 2 JQuery Nodejs Backbonejs Hapijs Reactjs Expressjs Emberjs HandlebarsJS Web Services XSD WSDL Apache Axis SOAP Restful GraphQL JAX RS JAX WS Messaging JMS Java Message Service IBM MQ Apache Active MQ Apache Kafka Web Application Servers Oracle WebLogic 10x9x IBM WebSphere 8x6x Apache Tomcat 807x6x JBoss Methodologies Agile Waterfall OOAD SCRUM Testing Tools JUnit Mockito Jasmine Karma Mocha Chai Selenium Version Control SVN CVS GIT and Clear Case Build Tools Maven Gradle ANT IDEs Eclipse IDE RAD 6070 Intellij IDEA Spring Tool Suite STS Operating Systems Windows Linux and UNIX Software Visual Studio Rational Rose and Microsoft Office",
    "unique_id": "e1e0a4df-e3c3-4ea8-a208-65095fa87da8"
}