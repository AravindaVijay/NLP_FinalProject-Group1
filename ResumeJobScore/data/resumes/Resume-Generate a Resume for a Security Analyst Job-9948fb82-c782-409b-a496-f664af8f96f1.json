{
    "clean_data": "Python Django Developer Python Django span lDeveloperspan Python Django Developer Schlumberger Over 4 years of experience as a WebApplication Developer with deep understanding of technology trends with expertise in core of complex technologies solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Good Knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Good Knowledge of Agile Methodologies Scrum Good experience in developing web applications implementing MVTMVC architecture using Django Flask Web2py Webapp2 and with good understanding of Django ORM and SQLAlchemy Experience of using Python modules like NumPy Matplotlib Pickle Pandas PySide SciPy wxPython PyTables PyQt etc for generating complex graphical data creation of histograms etc Extensive experience in Python web frameworks like Django Pyramid and Flask in implementing MVC singleton factory architecture Experience in working with different operating systems Windows Linux and UNIX experienced in Shell scripting and UNIX commands Good experience in Python scripting Shell Scripting SQL Server UNIX and Linux Work Experience Python Django Developer Schlumberger Houston TX May 2018 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Knowledge of crossbrowser and crossplatform development of HTML and CSS based Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Used AWS for application deployment and configuration Responsible for setting up REST APIs using Django Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented and executed code to perform CRUD operations on MongoDB using PyMongo module Wrote Python scripts to parse JSON documents and load the data in MongoDB Experience with Unit testing Test driven Development TDD Load Testing Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Created tables on top of data on AWS S3 obtained from different data sources Migrated the data from cluster into the AWS environment Implementation of AWS lambda with python scripting code Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in Developing a Restful APIS service using Python Flask framework Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Developed AWS cloud formation templates and setting up Auto Scaling for EC2 instances Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Maintenance and continuous development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Also worked on creating custom ETL scripts using Python scripting for business related data Developed ETL processes using Python to feed data into MS SQL Server Performed robust regression automation testing of multiple platforms using Selenium WebDriver and Robot framework Developed applications and methods with Python scripting for ETL with MS SQL and Oracle Implemented monitoring and established best practices around using elastic search Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Worked on Solr Elasticsearch Kafka Flume MongoDB Cassandra and RabbitMQ Used Pandas library for statistical Analysis Used Unit Test Python scripting library for testing many Python programs and block of codes Working under UNIX environment in development of application using Python scripting and familiar with all of its commands Environment Python 27 Django 18 MongoDB HTML5 CSS XML MySQL AWS JavaScript JQuery Bootstrap RESTful IDLE Windows 2008 Server Pandas library Nginx GitHub and Windows Linux Python Developer Toshiba Business Solutions Boston MA June 2016 to April 2018 Responsibilities Closely involved in performance evaluation and User Acceptance Test Developed a portal to manage the entities in a content management system using Flask Wrote programs for performance calculations using Numpy and sqlalchemy Worked on CSV files while trying to get input from the MySQL database Wrote python scripts to parse XML documents and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Responsible for managing large databases using Panda data frames and MySQL Created Python and Bash tools to increase efficiency of call center application system Developing Python scripting Framework using Django to perform scan software unit monitoring Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST scripts for API Integration Built various graphs for business decision making using Python scripting matplotlib library Designed and managed API system deployment using fast http server and AWS architecture Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Used AWS for application deployment and configuration Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on updating the existing clip board to have the new features as per the client requirements Created hourly or daily builds automatically and also deployed builds to production environment Used Jenkins for continuous integration CI and continuous deployment CD Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Applied REST API development via Django REST Framework model to develop an information management system Involved in testing RESTful API like Twilio Facebook and Twitter Used many regular expressions in order to match the pattern with the existing one Skilled in using collections in Python scripting for manipulating and looping through different user defined objects Created Git repository and added to GitHub project Work with team of developers on python applications for RISK management Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Resolving Complexity in the scripts of the website due to the complex logic and correlations Script validation sometimes becomes challenging as it demanded many webbased logic rather than correlation and parameterization Used Robot framework for test Automation integrated with Jenkins Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Windows Panda API MySQL PyScripter Django 14 MySQL Teradata Linux HTML XHTML CSS AJAX JavaScript Apache Web Server SQL Alchemy Git Jenkins Software Developer Gujarat InfoTech Ltd IN January 2015 to December 2015 Project Store Comrade Store Comrade is an advanced system which collect stores and updates real time data related to the inventory management as well as external data such as feedback connecting with customers promoting products online and so Store Comrade automatically updates as the inventory is revised and altered It also contains module for the employee management where the data related to the employee can be stored with ease Any data can be fetched or retrieved at any time Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using Node JS HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python scripting on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Participated in requirement gathering and worked closely with the architect in designing and modeling Worked with the team to customize word press security installations Used python scripts to Work with Facebook Platform Python SDK to access and post on Facebook pages wall Worked on development of SQL and stored procedures on MYSQL Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Knowledge and experience in writing web proxy in Python scripting Designed RESTful XML web service for handling AJAX requests Developed remote integration with third party platforms by using RESTful web services Updated and maintained Jenkins for automatic building jobs and deployment Implemented database access using Django ORM Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MY SQL using Toad Deployment of the web application using the Linux server Environment Python 2627 Script Django Framework 13 CSS PyCharm SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Master of Science in Information Systems Engineering Management in Information Systems Engineering Management Harrisburg University of Science and Technology Harrisburg PA Skills Visual studio Amazon web services C Cucumber Django Git Google app engine Html Javascript Nodejs Python Flask Scripting Xml Xslt Database Microsoft sql server Sql server Mysql Oracle Additional Information TECHNICAL SKILLS Platforms Windows UnixLinux Programming Skills Python 27 35 JavaJ2EE C C Frameworks Django Flask CherryPy web2py Google App Engine Pyramid Tornado Web Technologies HTML CSS JavaScript AJAX JQuery Angular JS NodeJS Database MySQL Oracle Microsoft SQL Server PostgreSQL MongoDB Datastax  Scripting Languages Python R Shell Bash ZSH KSH etc HTML XML XSLT WebApplication Servers Nginx Gunicon Websphere Apache Tomcat Web Logic Web Services Restful SOAP Cloud Computing Amazon Web Services AWS Google cloud IBM Bluemix IDEsDevelopment Tools Wing PyCharm PyScripter PyStudio IDLE Eclipse AWS Services S3 VPC EC2 RDS Glacier  EBS ELB SQS SNS CloudWatch Auto Scaling IAM Other Tools Used Toad SQL Developer Visual Studio Putty Git Testing Frameworks Cucumber Robot Selenium NoseTests Mocha Chai Zope PyTest Jasmine NOSE",
    "entities": [
        "Python Flask",
        "Used Test Driven Approach",
        "Development and Enhancement Projects Good Knowledge of Agile Methodologies",
        "API Integration",
        "AJAX",
        "Toad Deployment",
        "UNIX",
        "Working",
        "MVTMVC",
        "Flask Wrote",
        "Present Responsibilities Involved",
        "Django Web Framework Designed",
        "IBM Bluemix IDEsDevelopment Tools Wing PyCharm PyScripter PyStudio IDLE",
        "Google",
        "Panda",
        "Implementation of AWS",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "User Acceptance Test Developed",
        "Shell",
        "GitHub Bit Bucket",
        "Amazon",
        "Created RESTful",
        "Amazon AWS S3",
        "Developed",
        "Bash",
        "JavaJ2EE C C Frameworks Django",
        "AWS S3",
        "Created Python",
        "Created Git",
        "Gujarat InfoTech Ltd",
        "Datastax  Scripting Languages Python R",
        "Linux Work Experience Python Django Developer",
        "Data Extraction Transformation",
        "Flask",
        "Shell Scripting",
        "RDS",
        "MVC",
        "HTML XML XSLT WebApplication Servers",
        "CSV",
        "REDIS",
        "API",
        "Oracle Implemented",
        "Django ORM Backend",
        "Store Comrade",
        "Business Users",
        "Created",
        "Developed ETL",
        "AWS",
        "Server",
        "Implemented",
        "Oracle",
        "PyMongo",
        "Django Actively",
        "Sql",
        "Skills Visual",
        "HTML",
        "SQL",
        "GitHub",
        "Science in Information Systems Engineering Management in",
        "REST Responsible",
        "WebApplication Developer",
        "MySQL Created Python",
        "Amazon AWS",
        "Pandas",
        "ETL",
        "CRUD",
        "Analysis Design and Development Testing Implementation",
        "Python Bootstrap CSS",
        "SDLC Requirement Analysis Design Development and Testing",
        "Microsoft",
        "Selenium WebDriver",
        "CSS",
        "Project Store Comrade Store Comrade",
        "Mysql Oracle Additional Information TECHNICAL SKILLS Platforms Windows UnixLinux Programming Skills",
        "SDK",
        "REST",
        "PHP",
        "Created hourly",
        "API like Twilio Facebook",
        "MS SQL",
        "Jenkins Using Subversion",
        "Python Unit Test",
        "MS SQL Server Performed",
        "Node"
    ],
    "experience": "Projects Good Knowledge of Agile Methodologies Scrum Good experience in developing web applications implementing MVTMVC architecture using Django Flask Web2py Webapp2 and with good understanding of Django ORM and SQLAlchemy Experience of using Python modules like NumPy Matplotlib Pickle Pandas PySide SciPy wxPython PyTables PyQt etc for generating complex graphical data creation of histograms etc Extensive experience in Python web frameworks like Django Pyramid and Flask in implementing MVC singleton factory architecture Experience in working with different operating systems Windows Linux and UNIX experienced in Shell scripting and UNIX commands Good experience in Python scripting Shell Scripting SQL Server UNIX and Linux Work Experience Python Django Developer Schlumberger Houston TX May 2018 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Knowledge of crossbrowser and crossplatform development of HTML and CSS based Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Used AWS for application deployment and configuration Responsible for setting up REST APIs using Django Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented and executed code to perform CRUD operations on MongoDB using PyMongo module Wrote Python scripts to parse JSON documents and load the data in MongoDB Experience with Unit testing Test driven Development TDD Load Testing Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Created tables on top of data on AWS S3 obtained from different data sources Migrated the data from cluster into the AWS environment Implementation of AWS lambda with python scripting code Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in Developing a Restful APIS service using Python Flask framework Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Developed AWS cloud formation templates and setting up Auto Scaling for EC2 instances Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Maintenance and continuous development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Also worked on creating custom ETL scripts using Python scripting for business related data Developed ETL processes using Python to feed data into MS SQL Server Performed robust regression automation testing of multiple platforms using Selenium WebDriver and Robot framework Developed applications and methods with Python scripting for ETL with MS SQL and Oracle Implemented monitoring and established best practices around using elastic search Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Worked on Solr Elasticsearch Kafka Flume MongoDB Cassandra and RabbitMQ Used Pandas library for statistical Analysis Used Unit Test Python scripting library for testing many Python programs and block of codes Working under UNIX environment in development of application using Python scripting and familiar with all of its commands Environment Python 27 Django 18 MongoDB HTML5 CSS XML MySQL AWS JavaScript JQuery Bootstrap RESTful IDLE Windows 2008 Server Pandas library Nginx GitHub and Windows Linux Python Developer Toshiba Business Solutions Boston MA June 2016 to April 2018 Responsibilities Closely involved in performance evaluation and User Acceptance Test Developed a portal to manage the entities in a content management system using Flask Wrote programs for performance calculations using Numpy and sqlalchemy Worked on CSV files while trying to get input from the MySQL database Wrote python scripts to parse XML documents and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Responsible for managing large databases using Panda data frames and MySQL Created Python and Bash tools to increase efficiency of call center application system Developing Python scripting Framework using Django to perform scan software unit monitoring Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST scripts for API Integration Built various graphs for business decision making using Python scripting matplotlib library Designed and managed API system deployment using fast http server and AWS architecture Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Used AWS for application deployment and configuration Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on updating the existing clip board to have the new features as per the client requirements Created hourly or daily builds automatically and also deployed builds to production environment Used Jenkins for continuous integration CI and continuous deployment CD Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Applied REST API development via Django REST Framework model to develop an information management system Involved in testing RESTful API like Twilio Facebook and Twitter Used many regular expressions in order to match the pattern with the existing one Skilled in using collections in Python scripting for manipulating and looping through different user defined objects Created Git repository and added to GitHub project Work with team of developers on python applications for RISK management Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Resolving Complexity in the scripts of the website due to the complex logic and correlations Script validation sometimes becomes challenging as it demanded many webbased logic rather than correlation and parameterization Used Robot framework for test Automation integrated with Jenkins Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Windows Panda API MySQL PyScripter Django 14 MySQL Teradata Linux HTML XHTML CSS AJAX JavaScript Apache Web Server SQL Alchemy Git Jenkins Software Developer Gujarat InfoTech Ltd IN January 2015 to December 2015 Project Store Comrade Store Comrade is an advanced system which collect stores and updates real time data related to the inventory management as well as external data such as feedback connecting with customers promoting products online and so Store Comrade automatically updates as the inventory is revised and altered It also contains module for the employee management where the data related to the employee can be stored with ease Any data can be fetched or retrieved at any time Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using Node JS HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python scripting on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Participated in requirement gathering and worked closely with the architect in designing and modeling Worked with the team to customize word press security installations Used python scripts to Work with Facebook Platform Python SDK to access and post on Facebook pages wall Worked on development of SQL and stored procedures on MYSQL Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Knowledge and experience in writing web proxy in Python scripting Designed RESTful XML web service for handling AJAX requests Developed remote integration with third party platforms by using RESTful web services Updated and maintained Jenkins for automatic building jobs and deployment Implemented database access using Django ORM Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MY SQL using Toad Deployment of the web application using the Linux server Environment Python 2627 Script Django Framework 13 CSS PyCharm SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Master of Science in Information Systems Engineering Management in Information Systems Engineering Management Harrisburg University of Science and Technology Harrisburg PA Skills Visual studio Amazon web services C Cucumber Django Git Google app engine Html Javascript Nodejs Python Flask Scripting Xml Xslt Database Microsoft sql server Sql server Mysql Oracle Additional Information TECHNICAL SKILLS Platforms Windows UnixLinux Programming Skills Python 27 35 JavaJ2EE C C Frameworks Django Flask CherryPy web2py Google App Engine Pyramid Tornado Web Technologies HTML CSS JavaScript AJAX JQuery Angular JS NodeJS Database MySQL Oracle Microsoft SQL Server PostgreSQL MongoDB Datastax   Scripting Languages Python R Shell Bash ZSH KSH etc HTML XML XSLT WebApplication Servers Nginx Gunicon Websphere Apache Tomcat Web Logic Web Services Restful SOAP Cloud Computing Amazon Web Services AWS Google cloud IBM Bluemix IDEsDevelopment Tools Wing PyCharm PyScripter PyStudio IDLE Eclipse AWS Services S3 VPC EC2 RDS Glacier   EBS ELB SQS SNS CloudWatch Auto Scaling IAM Other Tools Used Toad SQL Developer Visual Studio Putty Git Testing Frameworks Cucumber Robot Selenium NoseTests Mocha Chai Zope PyTest Jasmine NOSE",
    "extracted_keywords": [
        "Python",
        "Django",
        "Developer",
        "Python",
        "Django",
        "lDeveloperspan",
        "Python",
        "Django",
        "Developer",
        "Schlumberger",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "understanding",
        "technology",
        "trends",
        "expertise",
        "core",
        "technologies",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "production",
        "support",
        "maintenance",
        "Web",
        "Applications",
        "Python",
        "Django",
        "Good",
        "Knowledge",
        "phases",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Development",
        "Enhancement",
        "Projects",
        "Good",
        "Knowledge",
        "Agile",
        "Methodologies",
        "Scrum",
        "Good",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "Web2py",
        "Webapp2",
        "understanding",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Experience",
        "Python",
        "modules",
        "NumPy",
        "Matplotlib",
        "Pickle",
        "Pandas",
        "PySide",
        "SciPy",
        "wxPython",
        "PyTables",
        "PyQt",
        "data",
        "creation",
        "histograms",
        "experience",
        "Python",
        "web",
        "frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "MVC",
        "singleton",
        "factory",
        "architecture",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "Linux",
        "UNIX",
        "Shell",
        "scripting",
        "UNIX",
        "experience",
        "Python",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Work",
        "Experience",
        "Python",
        "Django",
        "Developer",
        "Schlumberger",
        "Houston",
        "TX",
        "May",
        "Present",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Knowledge",
        "crossbrowser",
        "development",
        "HTML",
        "CSS",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Installed",
        "AWS",
        "server",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "REST",
        "APIs",
        "Django",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "PyMongo",
        "module",
        "Wrote",
        "Python",
        "documents",
        "data",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "tables",
        "top",
        "data",
        "AWS",
        "S3",
        "data",
        "sources",
        "data",
        "cluster",
        "AWS",
        "environment",
        "Implementation",
        "AWS",
        "lambda",
        "python",
        "scripting",
        "code",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "design",
        "creation",
        "APIs",
        "Rest",
        "Framework",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Rest",
        "API",
        "Gateway",
        "AWS",
        "Lambda",
        "AWS",
        "cloud",
        "formation",
        "templates",
        "Auto",
        "Scaling",
        "EC2",
        "instances",
        "code",
        "reviews",
        "GitHub",
        "pull",
        "requests",
        "bugs",
        "code",
        "quality",
        "knowledge",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "custom",
        "ETL",
        "scripts",
        "Python",
        "scripting",
        "business",
        "data",
        "ETL",
        "processes",
        "Python",
        "data",
        "MS",
        "SQL",
        "Server",
        "Performed",
        "regression",
        "automation",
        "testing",
        "platforms",
        "Selenium",
        "WebDriver",
        "Robot",
        "framework",
        "applications",
        "methods",
        "Python",
        "ETL",
        "MS",
        "SQL",
        "Oracle",
        "monitoring",
        "practices",
        "search",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Solr",
        "Elasticsearch",
        "Kafka",
        "Flume",
        "Cassandra",
        "Pandas",
        "library",
        "Analysis",
        "Unit",
        "Test",
        "Python",
        "library",
        "Python",
        "programs",
        "block",
        "codes",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "scripting",
        "commands",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "AWS",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "IDLE",
        "Windows",
        "Server",
        "Pandas",
        "library",
        "Nginx",
        "GitHub",
        "Windows",
        "Linux",
        "Python",
        "Developer",
        "Toshiba",
        "Business",
        "Solutions",
        "Boston",
        "MA",
        "June",
        "April",
        "Responsibilities",
        "performance",
        "evaluation",
        "User",
        "Acceptance",
        "Test",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "Wrote",
        "programs",
        "performance",
        "calculations",
        "Numpy",
        "sqlalchemy",
        "Worked",
        "CSV",
        "files",
        "input",
        "MySQL",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "stages",
        "analysis",
        "design",
        "development",
        "testing",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "REST",
        "databases",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "Python",
        "Framework",
        "Django",
        "software",
        "unit",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "scripts",
        "API",
        "Integration",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "AWS",
        "architecture",
        "AWS",
        "REDIS",
        "server",
        "data",
        "analysis",
        "interaction",
        "Business",
        "Users",
        "UATSIT",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "clip",
        "board",
        "features",
        "client",
        "requirements",
        "builds",
        "builds",
        "production",
        "environment",
        "Jenkins",
        "integration",
        "CI",
        "deployment",
        "CD",
        "modules",
        "CSV",
        "XML",
        "data",
        "files",
        "REST",
        "services",
        "data",
        "REST",
        "API",
        "development",
        "Django",
        "REST",
        "Framework",
        "model",
        "information",
        "management",
        "system",
        "API",
        "Twilio",
        "Facebook",
        "Twitter",
        "expressions",
        "order",
        "pattern",
        "collections",
        "Python",
        "user",
        "objects",
        "Git",
        "repository",
        "GitHub",
        "project",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Complexity",
        "scripts",
        "website",
        "logic",
        "correlations",
        "Script",
        "validation",
        "logic",
        "correlation",
        "parameterization",
        "Used",
        "Robot",
        "framework",
        "test",
        "Automation",
        "Jenkins",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Environment",
        "Python",
        "Windows",
        "Panda",
        "API",
        "MySQL",
        "PyScripter",
        "Django",
        "MySQL",
        "Teradata",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "SQL",
        "Alchemy",
        "Git",
        "Jenkins",
        "Software",
        "Developer",
        "Gujarat",
        "InfoTech",
        "Ltd",
        "January",
        "December",
        "Project",
        "Store",
        "Comrade",
        "Store",
        "Comrade",
        "system",
        "stores",
        "updates",
        "time",
        "data",
        "inventory",
        "management",
        "data",
        "feedback",
        "customers",
        "products",
        "Store",
        "Comrade",
        "inventory",
        "module",
        "employee",
        "management",
        "data",
        "employee",
        "ease",
        "data",
        "time",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "Node",
        "JS",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "scripting",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Used",
        "Django",
        "APIs",
        "database",
        "access",
        "requirement",
        "gathering",
        "architect",
        "modeling",
        "team",
        "word",
        "press",
        "security",
        "installations",
        "python",
        "scripts",
        "Facebook",
        "Platform",
        "Python",
        "SDK",
        "post",
        "Facebook",
        "pages",
        "wall",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "Knowledge",
        "experience",
        "writing",
        "web",
        "proxy",
        "Python",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Jenkins",
        "building",
        "jobs",
        "deployment",
        "database",
        "access",
        "Django",
        "ORM",
        "Backend",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "Created",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "expressions",
        "order",
        "pattern",
        "data",
        "base",
        "basis",
        "code",
        "CRUD",
        "operations",
        "MY",
        "SQL",
        "Toad",
        "Deployment",
        "web",
        "application",
        "Linux",
        "server",
        "Environment",
        "Python",
        "Script",
        "Django",
        "Framework",
        "CSS",
        "PyCharm",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "Education",
        "Master",
        "Science",
        "Information",
        "Systems",
        "Engineering",
        "Management",
        "Information",
        "Systems",
        "Engineering",
        "Management",
        "Harrisburg",
        "University",
        "Science",
        "Technology",
        "Harrisburg",
        "PA",
        "Skills",
        "Visual",
        "studio",
        "Amazon",
        "web",
        "services",
        "C",
        "Cucumber",
        "Django",
        "Git",
        "Google",
        "app",
        "engine",
        "Html",
        "Javascript",
        "Nodejs",
        "Python",
        "Flask",
        "Scripting",
        "Xml",
        "Xslt",
        "Database",
        "Microsoft",
        "server",
        "Sql",
        "server",
        "Mysql",
        "Oracle",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Platforms",
        "Windows",
        "UnixLinux",
        "Programming",
        "Skills",
        "Python",
        "JavaJ2EE",
        "C",
        "C",
        "Frameworks",
        "Django",
        "Flask",
        "CherryPy",
        "web2py",
        "Google",
        "App",
        "Engine",
        "Pyramid",
        "Tornado",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JQuery",
        "Angular",
        "JS",
        "NodeJS",
        "Database",
        "MySQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "Server",
        "PostgreSQL",
        "MongoDB",
        "Datastax",
        "Scripting",
        "Languages",
        "Python",
        "R",
        "Shell",
        "Bash",
        "ZSH",
        "KSH",
        "HTML",
        "XML",
        "XSLT",
        "WebApplication",
        "Servers",
        "Nginx",
        "Gunicon",
        "Websphere",
        "Apache",
        "Tomcat",
        "Web",
        "Logic",
        "Web",
        "Services",
        "Restful",
        "SOAP",
        "Cloud",
        "Computing",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Google",
        "cloud",
        "IBM",
        "Bluemix",
        "Tools",
        "Wing",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "IDLE",
        "Eclipse",
        "AWS",
        "Services",
        "S3",
        "VPC",
        "EC2",
        "RDS",
        "Glacier",
        "EBS",
        "ELB",
        "SQS",
        "SNS",
        "CloudWatch",
        "Auto",
        "Scaling",
        "IAM",
        "Tools",
        "Toad",
        "SQL",
        "Developer",
        "Visual",
        "Studio",
        "Putty",
        "Git",
        "Testing",
        "Frameworks",
        "Cucumber",
        "Robot",
        "Selenium",
        "NoseTests",
        "Mocha",
        "Chai",
        "Zope",
        "PyTest",
        "Jasmine",
        "NOSE"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:24:47.548548",
    "resume_data": "Python Django Developer Python Django span lDeveloperspan Python Django Developer Schlumberger Over 4 years of experience as a WebApplication Developer with deep understanding of technology trends with expertise in core of complex technologies solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Good Knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Good Knowledge of Agile Methodologies Scrum Good experience in developing web applications implementing MVTMVC architecture using Django Flask Web2py Webapp2 and with good understanding of Django ORM and SQLAlchemy Experience of using Python modules like NumPy Matplotlib Pickle Pandas PySide SciPy wxPython PyTables PyQt etc for generating complex graphical data creation of histograms etc Extensive experience in Python web frameworks like Django Pyramid and Flask in implementing MVC singleton factory architecture Experience in working with different operating systems Windows Linux and UNIX experienced in Shell scripting and UNIX commands Good experience in Python scripting Shell Scripting SQL Server UNIX and Linux Work Experience Python Django Developer Schlumberger Houston TX May 2018 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Knowledge of crossbrowser and crossplatform development of HTML and CSS based Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Installed configured and managed the AWS server AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Used AWS for application deployment and configuration Responsible for setting up REST APIs using Django Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented and executed code to perform CRUD operations on MongoDB using PyMongo module Wrote Python scripts to parse JSON documents and load the data in MongoDB Experience with Unit testing Test driven Development TDD Load Testing Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Created tables on top of data on AWS S3 obtained from different data sources Migrated the data from cluster into the AWS environment Implementation of AWS lambda with python scripting code Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in Developing a Restful APIS service using Python Flask framework Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Developed AWS cloud formation templates and setting up Auto Scaling for EC2 instances Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Maintenance and continuous development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Also worked on creating custom ETL scripts using Python scripting for business related data Developed ETL processes using Python to feed data into MS SQL Server Performed robust regression automation testing of multiple platforms using Selenium WebDriver and Robot framework Developed applications and methods with Python scripting for ETL with MS SQL and Oracle Implemented monitoring and established best practices around using elastic search Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Worked on Solr Elasticsearch Kafka Flume MongoDB Cassandra and RabbitMQ Used Pandas library for statistical Analysis Used Unit Test Python scripting library for testing many Python programs and block of codes Working under UNIX environment in development of application using Python scripting and familiar with all of its commands Environment Python 27 Django 18 MongoDB HTML5 CSS XML MySQL AWS JavaScript JQuery Bootstrap RESTful IDLE Windows 2008 Server Pandas library Nginx GitHub and Windows Linux Python Developer Toshiba Business Solutions Boston MA June 2016 to April 2018 Responsibilities Closely involved in performance evaluation and User Acceptance Test Developed a portal to manage the entities in a content management system using Flask Wrote programs for performance calculations using Numpy and sqlalchemy Worked on CSV files while trying to get input from the MySQL database Wrote python scripts to parse XML documents and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Responsible for managing large databases using Panda data frames and MySQL Created Python and Bash tools to increase efficiency of call center application system Developing Python scripting Framework using Django to perform scan software unit monitoring Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST scripts for API Integration Built various graphs for business decision making using Python scripting matplotlib library Designed and managed API system deployment using fast http server and AWS architecture Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Used AWS for application deployment and configuration Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked on updating the existing clip board to have the new features as per the client requirements Created hourly or daily builds automatically and also deployed builds to production environment Used Jenkins for continuous integration CI and continuous deployment CD Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Applied REST API development via Django REST Framework model to develop an information management system Involved in testing RESTful API like Twilio Facebook and Twitter Used many regular expressions in order to match the pattern with the existing one Skilled in using collections in Python scripting for manipulating and looping through different user defined objects Created Git repository and added to GitHub project Work with team of developers on python applications for RISK management Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Resolving Complexity in the scripts of the website due to the complex logic and correlations Script validation sometimes becomes challenging as it demanded many webbased logic rather than correlation and parameterization Used Robot framework for test Automation integrated with Jenkins Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Windows Panda API MySQL PyScripter Django 14 MySQL Teradata Linux HTML XHTML CSS AJAX JavaScript Apache Web Server SQL Alchemy Git Jenkins Software Developer Gujarat InfoTech Ltd IN January 2015 to December 2015 Project Store Comrade Store Comrade is an advanced system which collect stores and updates real time data related to the inventory management as well as external data such as feedback connecting with customers promoting products online and so Store Comrade automatically updates as the inventory is revised and altered It also contains module for the employee management where the data related to the employee can be stored with ease Any data can be fetched or retrieved at any time Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using Node JS HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python scripting on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Participated in requirement gathering and worked closely with the architect in designing and modeling Worked with the team to customize word press security installations Used python scripts to Work with Facebook Platform Python SDK to access and post on Facebook pages wall Worked on development of SQL and stored procedures on MYSQL Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Knowledge and experience in writing web proxy in Python scripting Designed RESTful XML web service for handling AJAX requests Developed remote integration with third party platforms by using RESTful web services Updated and maintained Jenkins for automatic building jobs and deployment Implemented database access using Django ORM Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MY SQL using Toad Deployment of the web application using the Linux server Environment Python 2627 Script Django Framework 13 CSS PyCharm SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Education Master of Science in Information Systems Engineering Management in Information Systems Engineering Management Harrisburg University of Science and Technology Harrisburg PA Skills Visual studio Amazon web services C Cucumber Django Git Google app engine Html Javascript Nodejs Python Flask Scripting Xml Xslt Database Microsoft sql server Sql server Mysql Oracle Additional Information TECHNICAL SKILLS Platforms Windows UnixLinux Programming Skills Python 27 35 JavaJ2EE C C Frameworks Django Flask CherryPy web2py Google App Engine Pyramid Tornado Web Technologies HTML CSS JavaScript AJAX JQuery Angular JS NodeJS Database MySQL Oracle Microsoft SQL Server PostgreSQL MongoDB Datastax CitusDB Scripting Languages Python R Shell Bash ZSH KSH etc HTML XML XSLT WebApplication Servers Nginx Gunicon Websphere Apache Tomcat Web Logic Web Services Restful SOAP Cloud Computing Amazon Web Services AWS Google cloud IBM Bluemix IDEsDevelopment Tools Wing PyCharm PyScripter PyStudio IDLE Eclipse AWS Services S3 VPC EC2 RDS Glacier DynamoDB EBS ELB SQS SNS CloudWatch Auto Scaling IAM Other Tools Used Toad SQL Developer Visual Studio Putty Git Testing Frameworks Cucumber Robot Selenium NoseTests Mocha Chai Zope PyTest Jasmine NOSE",
    "unique_id": "9948fb82-c782-409b-a496-f664af8f96f1"
}