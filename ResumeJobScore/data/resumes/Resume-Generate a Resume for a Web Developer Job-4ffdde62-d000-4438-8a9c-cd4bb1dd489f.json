{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Blue Cross and Blue Shield Association Durham NC Around 6 years of experience as a WebApplication Developer and coding with analytical programming using Python Django Proven ability to design develop and deliver topquality working software on Python Django CORE QUALIFICATTIONS Experienced with full software development lifecycle object oriented programming database design and agile methodologies Expert in software development with Python and IDEs Sublime text PyCharm Eclipse PyDev Built Web application using Python Django Flask MySQL JavaScript AJAX HTML XML and template languages Used Apache to deploy production site Strong experience using Web Services and APIs in python Experience in using Design Patterns such as MVC Singleton and frameworks such as Django Spring MVC Well versed with Version control systems such as Git SVN CVS and Source Tree Experience in Application Development and Object Oriented Programming Analysis and Design OOAD Implemented dashboard using Django Bootstrap jQuery AJAX tools Started developing with Django 14 and currently developing with Django 19 Throughout understanding of providing specifications using Agile Software methodology for modeling systems and business processes Knowledge of Test Driven Development TDD Experience in creating initial website prototype from Django skeleton and building out Views Templates using CSS for whole site following Django MVC architecture Experience in AWS S3 using python scripting Experienced with ORM programming technique converting data between incompatible type systems in OOP languages Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra and Familiar with REST and AWS Amazon Web services Deep understanding of HTTP methods RESTful architecture Familiar with UNIX Linux internals basic cryptography security Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Supported Unit and Integration testing I am extremely productive working on my own and even more as part of team Work Experience Python Developer Blue Cross and Blue Shield Association Durham NC June 2015 to Present Blue Cross Blue Shield Association is a national federation of 36 independent communitybased and locally operated Blue Cross and Blue Shield companies that collectively provide healthcare coverage for more than 106 million members oneinthree Americans Description Working on a project to develop an application that manages Health Insurance Plans for each Customers and will display future Health Insurance needs by developing Insurance Estimator tool which can be used by both company agents and their clients RESPONSBLITIES Participating in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Utilized Agile Methodology and SCRUM Process Application developed with Python Django and MySQL using JIRA Agile methodology Helped in creating the Health insurance needs estimator to estimate the need of the insurance for an individual Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Successfully migrated the Django database from SQLite3 to MySQL database with complete data integrity Worked on development of SQL and stored procedures for normalization and denormalization in MySQL Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Also involved in validating and processing of files Used URLLIB2 to handle RESTful web services for the application For transmitting JSON data objects between front end and controllers used jQuery and AJAX Used front end technologies like HTML5 CSS3 JavaScript and Bootstrap to design and develop the UI Implemented RWD Responsive Web Design using Media Queries and SASS as CSS preprocessor directive Used pyChecker tool to fix bugs Used several python libraries like matPlotLib pyTest Selenium Providing daily reports to the Development Manager and participate in both the design phase and the development phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django 19 MySQL Linux Shell Scripting REST HTML5 CSS3 Bootstrap JavaScript jQuery JSON AJAX pyChecker URLLIBS matPlotLib pyTest Selenium urllib2 Sublime JIRA GIT Developer AppleOne Scottsdale AZ November 2013 to May 2015 AppleOne is part of the ACT1 family of companies AppleOne has grown to become the single largest privatelyowned employment service in North America Offering fullservice career assistance and numerous special benefits AppleOne can help you with everything from temporary projects to fulltime permanent placement positions Descriptions Worked on project to optimize the Supply Chain Management System The application provides workforce insight to every department Ensure product and supply chain readiness which in turn processes speed with a quick view of pending and released changes and items affected It provides organizational clarity on product data and processes to increase productivity Secure access to product data with configurable roles and privileges RESPONSBLITIES Worked on high level design and detail design Developed GUI using Python PostgreSQL HTML AJAX CSS JavaScript and jQuery Built application logic using Python Django MVC architecture and PostgreSQL Implemented database access using Django ORM Processed validated parsed data from XML file Used Restful web services for integration with many monitoring devices Developed RESTHTTP APIs for exposing geospatial applications Designed and developed Forms Models Views Templates and mapped URLs using Django guidelines Implemented a selectable template structure in Django making it possible to change the HTML layout and design based on site URL and or domain Contributed to development of security policies and processes Implemented Virtual Environment to provide a wrapping layer to the application Developed MVC prototype replacement of current product with Django Improved page load time by 30 Implemented RESTful API which returns data from PostgreSQL in JSON format Refactored and extended large existing Django Python code base by maintaining PEP8 code standards and fix the bugs Versatile with Version control systems including Git and SVN Installedconfiguredmaintained Apache servers on all machines production server and development servers Installedconfiguredmaintained PostgreSQL database and MongoDB database Performed UnitSystem testing using pyTEST Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Created a JSON update mechanism for pushing data model updates to client Monitored database changes proposed modification for subsystemrelated tables fields or indexes and developed scripts SQL SQL scripts UNIX shell scripts Used SVN for version control Environment REST CSS VMware Python Django AJAX HTML HTTP JSON JUnit PostgreSQL MongoDB pyTEST UNIX Shell scripting Sublime Web Services XHTML Oracle SVN Python Developer CashCall Los Angeles CA January 2013 to October 2013 CashCall is driven to remain at the forefront of innovative technology that streamlines loan operations CashCalls personal loans division offers unsecured loans to qualified borrowers who typically use the loans for onetime purchases and debt consolidation These loans are processed entirely over the internet phone and fax Funds are wired into the borrowers checking account in as little as 4 hours When customers make their payments on time CashCalls personal loans division has the potential to help them rebuild their credit score as well Descriptions Worked on project to unlock the value of ecosystem with social collaboration capabilities The application allows to discover follow and connect to enable knowledge sharing across the enterprise It also allows advanced innovative thinking with real time discussions RESPONSBLITIES Develop and maintain standard operating procedures to reflect daytoday security operations Created script in Python for calling REST APIs REST API development via Django REST Framework Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Overrode Django Rest Framework internals to allow for more dynamic routing Actively hunting for and dissecting previously unidentified threats in the environment Collaborate full stack project on Waterfall methodology Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Used Git to collaborate with other developers Wrote python scripts to parse XML documents and load the data in database Successfully migrated the Django database from SQLite to MySQL with complete data integrity Environment AJAX REST HTTP JSON Linux Shell scripting MySQL Sublime XHTML PostgreSQL Web Services JavaScript Software Developer SYNOVERGE Gujarat IN September 2011 to December 2012 Descriptions The scope of the project was to create and maintain an internal Point of Sale POS system which streamlines and authenticate payment workflow solutions to securely protect internal transactions and in turn authorize with the highest level of security available while keeping the payment platform simple and easy to use RESPONSBILITIES Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Push daily commits and branches to product repositories using Source Tree and used Jira as a project related tracking tool Handled all the client side validation using JavaScript Worked on Core Java coding with strong understanding of Java Spring Hibernate Collections data structure and EventException handling Design develop test deploy and maintain the website Implemented Services using Core Java Developed and deployed UI layer logics of sites using JSP Developed frontend code with Ajax call in jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing Angular JS controller Also used Angularjs filter to make the data searchable and sortable Worked on Web Services using Spring REST Worked both on Service and Client Side Developed modules in the application using JavaJ2EE Analyzed the Design of the modules Environment JavaJ2EE AJAX HTML CSS Web APIS JavaScript JSON SQL Server REST Spring Hibernate Skills AJAX 5 years CSS 4 years JavaScript 4 years JSON 5 years REST 5 years Additional Information Skills ProgrammingScripting Languages Python Java UNIX Linux Shell Scripting Bash C C JavaScript SQL Web Technologies HTML CSS Ajax jQuery Angularjs JSON XML JSP Servlet Bootstrap REST AWS Framework Django Flask Spring MVC Hibernate Database Technologies MySQL PostgreSQL Oracle SQLite MongoDB Cassandra SimulatorsIDETools PyCharm Eclipse NetBeans JIRA PyDev Maven Junit pyLint pyChecker Version Control GIT SVN Source Tree CVS Operating Systems Microsoft Windows OS X Ubuntu Linux Debian Linux Windows Server",
    "entities": [
        "Health Insurance Plans",
        "RESPONSBILITIES Involved",
        "Health Insurance",
        "UNIX",
        "Django Spring",
        "HTTP",
        "Installedconfiguredmaintained PostgreSQL",
        "Design Patterns",
        "Blue Shield Association",
        "JSON",
        "Los Angeles",
        "Versatile",
        "Media Queries",
        "XML",
        "Proficient",
        "Shell",
        "PyLint Supported Unit",
        "Amazon",
        "UI Implemented RWD Responsive Web Design",
        "URLLIB2",
        "AWS S3",
        "Version Control",
        "Implemented Virtual Environment",
        "Django",
        "Agile Software",
        "Americans Description Working",
        "Waterfall",
        "Python Django MVC",
        "Sublime Web Services",
        "HTML5",
        "Linux",
        "JSP",
        "Blue Cross",
        "EventException",
        "MVC Singleton",
        "Version",
        "Hibernate Database Technologies MySQL PostgreSQL",
        "Release Planning",
        "Knowledge of Test Driven Development TDD",
        "Process Application",
        "Customers",
        "Refactored",
        "Implemented Services",
        "the Supply Chain Management System",
        "Django MVC",
        "Java Spring Hibernate Collections",
        "API",
        "Present Blue Cross Blue Shield Association",
        "Application Development and Object Oriented Programming Analysis and Design OOAD Implemented",
        "SQL SQL",
        "OOP",
        "Server",
        "Environment JavaJ2EE AJAX",
        "Insurance Estimator",
        "HTML",
        "Health",
        "SQL",
        "lPythonspan",
        "Python Django",
        "WebApplication Developer",
        "jQuery Built",
        "Utilized Agile Methodology",
        "SQLite",
        "CRUD",
        "Build",
        "PostgreSQL",
        "AppleOne",
        "CashCalls",
        "Microsoft",
        "Django Improved",
        "Blue Shield",
        "SVN",
        "CSS",
        "jQuery",
        "REST",
        "NetBeans",
        "CC SQL",
        "JavaJ2EE Analyzed the Design",
        "Sprint",
        "Developed GUI",
        "UNIX Shell Created"
    ],
    "experience": "Experience in using Design Patterns such as MVC Singleton and frameworks such as Django Spring MVC Well versed with Version control systems such as Git SVN CVS and Source Tree Experience in Application Development and Object Oriented Programming Analysis and Design OOAD Implemented dashboard using Django Bootstrap jQuery AJAX tools Started developing with Django 14 and currently developing with Django 19 Throughout understanding of providing specifications using Agile Software methodology for modeling systems and business processes Knowledge of Test Driven Development TDD Experience in creating initial website prototype from Django skeleton and building out Views Templates using CSS for whole site following Django MVC architecture Experience in AWS S3 using python scripting Experienced with ORM programming technique converting data between incompatible type systems in OOP languages Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra and Familiar with REST and AWS Amazon Web services Deep understanding of HTTP methods RESTful architecture Familiar with UNIX Linux internals basic cryptography security Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Supported Unit and Integration testing I am extremely productive working on my own and even more as part of team Work Experience Python Developer Blue Cross and Blue Shield Association Durham NC June 2015 to Present Blue Cross Blue Shield Association is a national federation of 36 independent communitybased and locally operated Blue Cross and Blue Shield companies that collectively provide healthcare coverage for more than 106 million members oneinthree Americans Description Working on a project to develop an application that manages Health Insurance Plans for each Customers and will display future Health Insurance needs by developing Insurance Estimator tool which can be used by both company agents and their clients RESPONSBLITIES Participating in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Utilized Agile Methodology and SCRUM Process Application developed with Python Django and MySQL using JIRA Agile methodology Helped in creating the Health insurance needs estimator to estimate the need of the insurance for an individual Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Successfully migrated the Django database from SQLite3 to MySQL database with complete data integrity Worked on development of SQL and stored procedures for normalization and denormalization in MySQL Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Also involved in validating and processing of files Used URLLIB2 to handle RESTful web services for the application For transmitting JSON data objects between front end and controllers used jQuery and AJAX Used front end technologies like HTML5 CSS3 JavaScript and Bootstrap to design and develop the UI Implemented RWD Responsive Web Design using Media Queries and SASS as CSS preprocessor directive Used pyChecker tool to fix bugs Used several python libraries like matPlotLib pyTest Selenium Providing daily reports to the Development Manager and participate in both the design phase and the development phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django 19 MySQL Linux Shell Scripting REST HTML5 CSS3 Bootstrap JavaScript jQuery JSON AJAX pyChecker URLLIBS matPlotLib pyTest Selenium urllib2 Sublime JIRA GIT Developer AppleOne Scottsdale AZ November 2013 to May 2015 AppleOne is part of the ACT1 family of companies AppleOne has grown to become the single largest privatelyowned employment service in North America Offering fullservice career assistance and numerous special benefits AppleOne can help you with everything from temporary projects to fulltime permanent placement positions Descriptions Worked on project to optimize the Supply Chain Management System The application provides workforce insight to every department Ensure product and supply chain readiness which in turn processes speed with a quick view of pending and released changes and items affected It provides organizational clarity on product data and processes to increase productivity Secure access to product data with configurable roles and privileges RESPONSBLITIES Worked on high level design and detail design Developed GUI using Python PostgreSQL HTML AJAX CSS JavaScript and jQuery Built application logic using Python Django MVC architecture and PostgreSQL Implemented database access using Django ORM Processed validated parsed data from XML file Used Restful web services for integration with many monitoring devices Developed RESTHTTP APIs for exposing geospatial applications Designed and developed Forms Models Views Templates and mapped URLs using Django guidelines Implemented a selectable template structure in Django making it possible to change the HTML layout and design based on site URL and or domain Contributed to development of security policies and processes Implemented Virtual Environment to provide a wrapping layer to the application Developed MVC prototype replacement of current product with Django Improved page load time by 30 Implemented RESTful API which returns data from PostgreSQL in JSON format Refactored and extended large existing Django Python code base by maintaining PEP8 code standards and fix the bugs Versatile with Version control systems including Git and SVN Installedconfiguredmaintained Apache servers on all machines production server and development servers Installedconfiguredmaintained PostgreSQL database and MongoDB database Performed UnitSystem testing using pyTEST Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Created a JSON update mechanism for pushing data model updates to client Monitored database changes proposed modification for subsystemrelated tables fields or indexes and developed scripts SQL SQL scripts UNIX shell scripts Used SVN for version control Environment REST CSS VMware Python Django AJAX HTML HTTP JSON JUnit PostgreSQL MongoDB pyTEST UNIX Shell scripting Sublime Web Services XHTML Oracle SVN Python Developer CashCall Los Angeles CA January 2013 to October 2013 CashCall is driven to remain at the forefront of innovative technology that streamlines loan operations CashCalls personal loans division offers unsecured loans to qualified borrowers who typically use the loans for onetime purchases and debt consolidation These loans are processed entirely over the internet phone and fax Funds are wired into the borrowers checking account in as little as 4 hours When customers make their payments on time CashCalls personal loans division has the potential to help them rebuild their credit score as well Descriptions Worked on project to unlock the value of ecosystem with social collaboration capabilities The application allows to discover follow and connect to enable knowledge sharing across the enterprise It also allows advanced innovative thinking with real time discussions RESPONSBLITIES Develop and maintain standard operating procedures to reflect daytoday security operations Created script in Python for calling REST APIs REST API development via Django REST Framework Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Overrode Django Rest Framework internals to allow for more dynamic routing Actively hunting for and dissecting previously unidentified threats in the environment Collaborate full stack project on Waterfall methodology Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Used Git to collaborate with other developers Wrote python scripts to parse XML documents and load the data in database Successfully migrated the Django database from SQLite to MySQL with complete data integrity Environment AJAX REST HTTP JSON Linux Shell scripting MySQL Sublime XHTML PostgreSQL Web Services JavaScript Software Developer SYNOVERGE Gujarat IN September 2011 to December 2012 Descriptions The scope of the project was to create and maintain an internal Point of Sale POS system which streamlines and authenticate payment workflow solutions to securely protect internal transactions and in turn authorize with the highest level of security available while keeping the payment platform simple and easy to use RESPONSBILITIES Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Push daily commits and branches to product repositories using Source Tree and used Jira as a project related tracking tool Handled all the client side validation using JavaScript Worked on Core Java coding with strong understanding of Java Spring Hibernate Collections data structure and EventException handling Design develop test deploy and maintain the website Implemented Services using Core Java Developed and deployed UI layer logics of sites using JSP Developed frontend code with Ajax call in jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing Angular JS controller Also used Angularjs filter to make the data searchable and sortable Worked on Web Services using Spring REST Worked both on Service and Client Side Developed modules in the application using JavaJ2EE Analyzed the Design of the modules Environment JavaJ2EE AJAX HTML CSS Web APIS JavaScript JSON SQL Server REST Spring Hibernate Skills AJAX 5 years CSS 4 years JavaScript 4 years JSON 5 years REST 5 years Additional Information Skills ProgrammingScripting Languages Python Java UNIX Linux Shell Scripting Bash C C JavaScript SQL Web Technologies HTML CSS Ajax jQuery Angularjs JSON XML JSP Servlet Bootstrap REST AWS Framework Django Flask Spring MVC Hibernate Database Technologies MySQL PostgreSQL Oracle SQLite MongoDB Cassandra SimulatorsIDETools PyCharm Eclipse NetBeans JIRA PyDev Maven Junit pyLint pyChecker Version Control GIT SVN Source Tree CVS Operating Systems Microsoft Windows OS X Ubuntu Linux Debian Linux Windows Server",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "Durham",
        "NC",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "ability",
        "topquality",
        "software",
        "Python",
        "Django",
        "CORE",
        "QUALIFICATTIONS",
        "software",
        "development",
        "lifecycle",
        "programming",
        "database",
        "design",
        "methodologies",
        "Expert",
        "software",
        "development",
        "Python",
        "IDEs",
        "Sublime",
        "text",
        "PyCharm",
        "Eclipse",
        "PyDev",
        "Web",
        "application",
        "Python",
        "Django",
        "Flask",
        "MySQL",
        "JavaScript",
        "AJAX",
        "HTML",
        "XML",
        "template",
        "languages",
        "Apache",
        "production",
        "site",
        "experience",
        "Web",
        "Services",
        "APIs",
        "python",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "Django",
        "Spring",
        "MVC",
        "Version",
        "control",
        "systems",
        "Git",
        "SVN",
        "CVS",
        "Source",
        "Tree",
        "Experience",
        "Application",
        "Development",
        "Object",
        "Oriented",
        "Programming",
        "Analysis",
        "Design",
        "OOAD",
        "dashboard",
        "Django",
        "Bootstrap",
        "jQuery",
        "AJAX",
        "tools",
        "Django",
        "Django",
        "understanding",
        "specifications",
        "Agile",
        "Software",
        "methodology",
        "modeling",
        "systems",
        "business",
        "Knowledge",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Experience",
        "website",
        "prototype",
        "Django",
        "skeleton",
        "Views",
        "Templates",
        "CSS",
        "site",
        "Django",
        "MVC",
        "architecture",
        "Experience",
        "AWS",
        "S3",
        "python",
        "scripting",
        "ORM",
        "programming",
        "technique",
        "data",
        "type",
        "systems",
        "OOP",
        "languages",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Cassandra",
        "Familiar",
        "REST",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "understanding",
        "HTTP",
        "methods",
        "architecture",
        "Familiar",
        "UNIX",
        "Linux",
        "internals",
        "cryptography",
        "security",
        "PEP8",
        "standard",
        "program",
        "test",
        "cases",
        "validity",
        "effectiveness",
        "code",
        "PyChecker",
        "PyLint",
        "Supported",
        "Unit",
        "Integration",
        "testing",
        "working",
        "part",
        "team",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "Durham",
        "NC",
        "June",
        "Present",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "federation",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "companies",
        "healthcare",
        "coverage",
        "members",
        "Americans",
        "Description",
        "project",
        "application",
        "Health",
        "Insurance",
        "Plans",
        "Customers",
        "Health",
        "Insurance",
        "Insurance",
        "Estimator",
        "tool",
        "company",
        "agents",
        "clients",
        "requirement",
        "gathering",
        "analysis",
        "period",
        "project",
        "business",
        "requirements",
        "workshopsgatherings",
        "business",
        "clients",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "Application",
        "Python",
        "Django",
        "MySQL",
        "JIRA",
        "Agile",
        "methodology",
        "Health",
        "insurance",
        "estimator",
        "need",
        "insurance",
        "individual",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Django",
        "database",
        "SQLite3",
        "MySQL",
        "database",
        "data",
        "integrity",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "denormalization",
        "MySQL",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Used",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "URLLIB2",
        "web",
        "services",
        "application",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "jQuery",
        "AJAX",
        "end",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "UI",
        "RWD",
        "Responsive",
        "Web",
        "Design",
        "Media",
        "Queries",
        "SASS",
        "CSS",
        "preprocessor",
        "directive",
        "pyChecker",
        "tool",
        "bugs",
        "python",
        "libraries",
        "matPlotLib",
        "Selenium",
        "reports",
        "Development",
        "Manager",
        "design",
        "phase",
        "development",
        "phase",
        "Collaborate",
        "stakeholders",
        "project",
        "managers",
        "test",
        "document",
        "system",
        "defects",
        "bugs",
        "JIRA",
        "quality",
        "GIT",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "Shell",
        "Scripting",
        "REST",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "JSON",
        "AJAX",
        "pyChecker",
        "URLLIBS",
        "matPlotLib",
        "Selenium",
        "urllib2",
        "Sublime",
        "JIRA",
        "GIT",
        "Developer",
        "AppleOne",
        "Scottsdale",
        "AZ",
        "November",
        "May",
        "AppleOne",
        "part",
        "ACT1",
        "family",
        "companies",
        "AppleOne",
        "employment",
        "service",
        "North",
        "America",
        "Offering",
        "fullservice",
        "career",
        "assistance",
        "benefits",
        "AppleOne",
        "projects",
        "placement",
        "positions",
        "Descriptions",
        "project",
        "Supply",
        "Chain",
        "Management",
        "System",
        "application",
        "workforce",
        "insight",
        "department",
        "Ensure",
        "product",
        "supply",
        "chain",
        "readiness",
        "turn",
        "speed",
        "view",
        "changes",
        "items",
        "clarity",
        "product",
        "data",
        "processes",
        "productivity",
        "access",
        "product",
        "data",
        "roles",
        "privileges",
        "RESPONSBLITIES",
        "level",
        "design",
        "detail",
        "design",
        "Developed",
        "GUI",
        "Python",
        "PostgreSQL",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "application",
        "logic",
        "Python",
        "Django",
        "MVC",
        "architecture",
        "PostgreSQL",
        "database",
        "access",
        "Django",
        "ORM",
        "data",
        "XML",
        "file",
        "web",
        "services",
        "integration",
        "monitoring",
        "devices",
        "Developed",
        "RESTHTTP",
        "APIs",
        "applications",
        "Forms",
        "Models",
        "Views",
        "Templates",
        "URLs",
        "Django",
        "guidelines",
        "template",
        "structure",
        "Django",
        "HTML",
        "layout",
        "design",
        "site",
        "URL",
        "Contributed",
        "development",
        "security",
        "policies",
        "processes",
        "Virtual",
        "Environment",
        "wrapping",
        "layer",
        "application",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "page",
        "load",
        "time",
        "API",
        "data",
        "PostgreSQL",
        "format",
        "Django",
        "Python",
        "code",
        "base",
        "PEP8",
        "code",
        "standards",
        "bugs",
        "Versatile",
        "Version",
        "control",
        "systems",
        "Git",
        "SVN",
        "Installedconfiguredmaintained",
        "Apache",
        "servers",
        "machines",
        "production",
        "server",
        "development",
        "servers",
        "PostgreSQL",
        "database",
        "database",
        "Performed",
        "UnitSystem",
        "testing",
        "pyTEST",
        "enhancements",
        "system",
        "bugfixing",
        "tasks",
        "CC",
        "SQL",
        "UNIX",
        "Shell",
        "JSON",
        "update",
        "mechanism",
        "data",
        "model",
        "updates",
        "client",
        "Monitored",
        "database",
        "changes",
        "modification",
        "tables",
        "fields",
        "indexes",
        "scripts",
        "SQL",
        "SQL",
        "UNIX",
        "shell",
        "scripts",
        "SVN",
        "version",
        "control",
        "Environment",
        "REST",
        "CSS",
        "VMware",
        "Python",
        "Django",
        "AJAX",
        "HTML",
        "HTTP",
        "JSON",
        "JUnit",
        "PostgreSQL",
        "MongoDB",
        "pyTEST",
        "UNIX",
        "Shell",
        "Sublime",
        "Web",
        "Services",
        "XHTML",
        "Oracle",
        "SVN",
        "Python",
        "Developer",
        "CashCall",
        "Los",
        "Angeles",
        "CA",
        "January",
        "October",
        "CashCall",
        "forefront",
        "technology",
        "loan",
        "operations",
        "CashCalls",
        "loans",
        "division",
        "loans",
        "borrowers",
        "loans",
        "purchases",
        "debt",
        "consolidation",
        "loans",
        "internet",
        "phone",
        "fax",
        "Funds",
        "borrowers",
        "account",
        "hours",
        "customers",
        "payments",
        "time",
        "CashCalls",
        "loans",
        "division",
        "potential",
        "credit",
        "score",
        "Descriptions",
        "project",
        "value",
        "ecosystem",
        "collaboration",
        "capabilities",
        "application",
        "follow",
        "knowledge",
        "sharing",
        "enterprise",
        "thinking",
        "time",
        "discussions",
        "operating",
        "procedures",
        "daytoday",
        "security",
        "operations",
        "script",
        "Python",
        "REST",
        "APIs",
        "REST",
        "API",
        "development",
        "Django",
        "REST",
        "Framework",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Overrode",
        "Django",
        "Rest",
        "Framework",
        "internals",
        "routing",
        "threats",
        "environment",
        "stack",
        "project",
        "Waterfall",
        "methodology",
        "RESTHTTP",
        "APIs",
        "data",
        "formats",
        "API",
        "versioning",
        "strategy",
        "Git",
        "developers",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "data",
        "integrity",
        "Environment",
        "AJAX",
        "REST",
        "HTTP",
        "JSON",
        "Linux",
        "Shell",
        "MySQL",
        "Sublime",
        "XHTML",
        "PostgreSQL",
        "Web",
        "Services",
        "JavaScript",
        "Software",
        "Developer",
        "SYNOVERGE",
        "Gujarat",
        "September",
        "December",
        "Descriptions",
        "scope",
        "project",
        "Point",
        "Sale",
        "POS",
        "system",
        "payment",
        "workflow",
        "solutions",
        "transactions",
        "turn",
        "level",
        "security",
        "payment",
        "platform",
        "RESPONSBILITIES",
        "Agile",
        "Scrum",
        "methodology",
        "Agile",
        "meeting",
        "Sprint",
        "Release",
        "Planning",
        "meetings",
        "commits",
        "branches",
        "product",
        "repositories",
        "Source",
        "Tree",
        "Jira",
        "project",
        "tracking",
        "tool",
        "client",
        "side",
        "validation",
        "JavaScript",
        "Worked",
        "Core",
        "Java",
        "understanding",
        "Java",
        "Spring",
        "Hibernate",
        "Collections",
        "data",
        "structure",
        "EventException",
        "Design",
        "test",
        "deploy",
        "website",
        "Services",
        "Core",
        "Java",
        "Developed",
        "UI",
        "layer",
        "logics",
        "sites",
        "JSP",
        "Developed",
        "frontend",
        "code",
        "call",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "result",
        "web",
        "pages",
        "JS",
        "controller",
        "Angularjs",
        "filter",
        "data",
        "Worked",
        "Web",
        "Services",
        "Spring",
        "REST",
        "Service",
        "Client",
        "Side",
        "modules",
        "application",
        "JavaJ2EE",
        "Design",
        "modules",
        "Environment",
        "JavaJ2EE",
        "AJAX",
        "HTML",
        "CSS",
        "Web",
        "APIS",
        "JavaScript",
        "JSON",
        "SQL",
        "Server",
        "REST",
        "Spring",
        "Hibernate",
        "Skills",
        "AJAX",
        "years",
        "CSS",
        "years",
        "JavaScript",
        "years",
        "JSON",
        "years",
        "REST",
        "years",
        "Additional",
        "Information",
        "Skills",
        "ProgrammingScripting",
        "Languages",
        "Python",
        "Java",
        "UNIX",
        "Linux",
        "Shell",
        "Scripting",
        "Bash",
        "C",
        "C",
        "JavaScript",
        "SQL",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "Ajax",
        "jQuery",
        "Angularjs",
        "JSON",
        "XML",
        "JSP",
        "Servlet",
        "Bootstrap",
        "REST",
        "AWS",
        "Framework",
        "Django",
        "Flask",
        "Spring",
        "MVC",
        "Hibernate",
        "Database",
        "Technologies",
        "MySQL",
        "PostgreSQL",
        "Oracle",
        "SQLite",
        "MongoDB",
        "Cassandra",
        "SimulatorsIDETools",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "JIRA",
        "PyDev",
        "Maven",
        "Junit",
        "pyChecker",
        "Version",
        "Control",
        "GIT",
        "SVN",
        "Source",
        "Tree",
        "CVS",
        "Operating",
        "Systems",
        "Microsoft",
        "Windows",
        "OS",
        "X",
        "Ubuntu",
        "Linux",
        "Debian",
        "Linux",
        "Windows",
        "Server"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:54:10.265334",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Blue Cross and Blue Shield Association Durham NC Around 6 years of experience as a WebApplication Developer and coding with analytical programming using Python Django Proven ability to design develop and deliver topquality working software on Python Django CORE QUALIFICATTIONS Experienced with full software development lifecycle object oriented programming database design and agile methodologies Expert in software development with Python and IDEs Sublime text PyCharm Eclipse PyDev Built Web application using Python Django Flask MySQL JavaScript AJAX HTML XML and template languages Used Apache to deploy production site Strong experience using Web Services and APIs in python Experience in using Design Patterns such as MVC Singleton and frameworks such as Django Spring MVC Well versed with Version control systems such as Git SVN CVS and Source Tree Experience in Application Development and Object Oriented Programming Analysis and Design OOAD Implemented dashboard using Django Bootstrap jQuery AJAX tools Started developing with Django 14 and currently developing with Django 19 Throughout understanding of providing specifications using Agile Software methodology for modeling systems and business processes Knowledge of Test Driven Development TDD Experience in creating initial website prototype from Django skeleton and building out Views Templates using CSS for whole site following Django MVC architecture Experience in AWS S3 using python scripting Experienced with ORM programming technique converting data between incompatible type systems in OOP languages Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra and Familiar with REST and AWS Amazon Web services Deep understanding of HTTP methods RESTful architecture Familiar with UNIX Linux internals basic cryptography security Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Supported Unit and Integration testing I am extremely productive working on my own and even more as part of team Work Experience Python Developer Blue Cross and Blue Shield Association Durham NC June 2015 to Present Blue Cross Blue Shield Association is a national federation of 36 independent communitybased and locally operated Blue Cross and Blue Shield companies that collectively provide healthcare coverage for more than 106 million members oneinthree Americans Description Working on a project to develop an application that manages Health Insurance Plans for each Customers and will display future Health Insurance needs by developing Insurance Estimator tool which can be used by both company agents and their clients RESPONSBLITIES Participating in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Utilized Agile Methodology and SCRUM Process Application developed with Python Django and MySQL using JIRA Agile methodology Helped in creating the Health insurance needs estimator to estimate the need of the insurance for an individual Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Successfully migrated the Django database from SQLite3 to MySQL database with complete data integrity Worked on development of SQL and stored procedures for normalization and denormalization in MySQL Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Also involved in validating and processing of files Used URLLIB2 to handle RESTful web services for the application For transmitting JSON data objects between front end and controllers used jQuery and AJAX Used front end technologies like HTML5 CSS3 JavaScript and Bootstrap to design and develop the UI Implemented RWD Responsive Web Design using Media Queries and SASS as CSS preprocessor directive Used pyChecker tool to fix bugs Used several python libraries like matPlotLib pyTest Selenium Providing daily reports to the Development Manager and participate in both the design phase and the development phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django 19 MySQL Linux Shell Scripting REST HTML5 CSS3 Bootstrap JavaScript jQuery JSON AJAX pyChecker URLLIBS matPlotLib pyTest Selenium urllib2 Sublime JIRA GIT Developer AppleOne Scottsdale AZ November 2013 to May 2015 AppleOne is part of the ACT1 family of companies AppleOne has grown to become the single largest privatelyowned employment service in North America Offering fullservice career assistance and numerous special benefits AppleOne can help you with everything from temporary projects to fulltime permanent placement positions Descriptions Worked on project to optimize the Supply Chain Management System The application provides workforce insight to every department Ensure product and supply chain readiness which in turn processes speed with a quick view of pending and released changes and items affected It provides organizational clarity on product data and processes to increase productivity Secure access to product data with configurable roles and privileges RESPONSBLITIES Worked on high level design and detail design Developed GUI using Python PostgreSQL HTML AJAX CSS JavaScript and jQuery Built application logic using Python Django MVC architecture and PostgreSQL Implemented database access using Django ORM Processed validated parsed data from XML file Used Restful web services for integration with many monitoring devices Developed RESTHTTP APIs for exposing geospatial applications Designed and developed Forms Models Views Templates and mapped URLs using Django guidelines Implemented a selectable template structure in Django making it possible to change the HTML layout and design based on site URL and or domain Contributed to development of security policies and processes Implemented Virtual Environment to provide a wrapping layer to the application Developed MVC prototype replacement of current product with Django Improved page load time by 30 Implemented RESTful API which returns data from PostgreSQL in JSON format Refactored and extended large existing Django Python code base by maintaining PEP8 code standards and fix the bugs Versatile with Version control systems including Git and SVN Installedconfiguredmaintained Apache servers on all machines production server and development servers Installedconfiguredmaintained PostgreSQL database and MongoDB database Performed UnitSystem testing using pyTEST Conducted numerous enhancements for the system and bugfixing tasks CC SQL scripts UNIX Shell Created a JSON update mechanism for pushing data model updates to client Monitored database changes proposed modification for subsystemrelated tables fields or indexes and developed scripts SQL SQL scripts UNIX shell scripts Used SVN for version control Environment REST CSS VMware Python Django AJAX HTML HTTP JSON JUnit PostgreSQL MongoDB pyTEST UNIX Shell scripting Sublime Web Services XHTML Oracle SVN Python Developer CashCall Los Angeles CA January 2013 to October 2013 CashCall is driven to remain at the forefront of innovative technology that streamlines loan operations CashCalls personal loans division offers unsecured loans to qualified borrowers who typically use the loans for onetime purchases and debt consolidation These loans are processed entirely over the internet phone and fax Funds are wired into the borrowers checking account in as little as 4 hours When customers make their payments on time CashCalls personal loans division has the potential to help them rebuild their credit score as well Descriptions Worked on project to unlock the value of ecosystem with social collaboration capabilities The application allows to discover follow and connect to enable knowledge sharing across the enterprise It also allows advanced innovative thinking with real time discussions RESPONSBLITIES Develop and maintain standard operating procedures to reflect daytoday security operations Created script in Python for calling REST APIs REST API development via Django REST Framework Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Overrode Django Rest Framework internals to allow for more dynamic routing Actively hunting for and dissecting previously unidentified threats in the environment Collaborate full stack project on Waterfall methodology Designed and documented RESTHTTP APIs including JSON data formats and API versioning strategy Used Git to collaborate with other developers Wrote python scripts to parse XML documents and load the data in database Successfully migrated the Django database from SQLite to MySQL with complete data integrity Environment AJAX REST HTTP JSON Linux Shell scripting MySQL Sublime XHTML PostgreSQL Web Services JavaScript Software Developer SYNOVERGE Gujarat IN September 2011 to December 2012 Descriptions The scope of the project was to create and maintain an internal Point of Sale POS system which streamlines and authenticate payment workflow solutions to securely protect internal transactions and in turn authorize with the highest level of security available while keeping the payment platform simple and easy to use RESPONSBILITIES Involved in Agile Scrum methodology Agile meeting Sprint and Release Planning meetings Push daily commits and branches to product repositories using Source Tree and used Jira as a project related tracking tool Handled all the client side validation using JavaScript Worked on Core Java coding with strong understanding of Java Spring Hibernate Collections data structure and EventException handling Design develop test deploy and maintain the website Implemented Services using Core Java Developed and deployed UI layer logics of sites using JSP Developed frontend code with Ajax call in jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing Angular JS controller Also used Angularjs filter to make the data searchable and sortable Worked on Web Services using Spring REST Worked both on Service and Client Side Developed modules in the application using JavaJ2EE Analyzed the Design of the modules Environment JavaJ2EE AJAX HTML CSS Web APIS JavaScript JSON SQL Server REST Spring Hibernate Skills AJAX 5 years CSS 4 years JavaScript 4 years JSON 5 years REST 5 years Additional Information Skills ProgrammingScripting Languages Python Java UNIX Linux Shell Scripting Bash C C JavaScript SQL Web Technologies HTML CSS Ajax jQuery Angularjs JSON XML JSP Servlet Bootstrap REST AWS Framework Django Flask Spring MVC Hibernate Database Technologies MySQL PostgreSQL Oracle SQLite MongoDB Cassandra SimulatorsIDETools PyCharm Eclipse NetBeans JIRA PyDev Maven Junit pyLint pyChecker Version Control GIT SVN Source Tree CVS Operating Systems Microsoft Windows OS X Ubuntu Linux Debian Linux Windows Server",
    "unique_id": "4ffdde62-d000-4438-8a9c-cd4bb1dd489f"
}