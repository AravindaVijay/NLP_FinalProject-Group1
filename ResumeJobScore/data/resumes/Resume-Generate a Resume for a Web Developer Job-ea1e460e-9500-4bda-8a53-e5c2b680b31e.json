{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Scripps Networks Interactive Knoxville TN Having 7 years of diverse professional experience in planning designing developing Architecting and implementation in the area of Amazon Web Services Cloud Python and IT industry Strong expertise in development of web based applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and JQuery Worked on several python packages like Numpy matPlotLib Beautiful Soup Pickle PySide Scipy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Experience on Jupyter Notebook Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Worked on data migration and data management to build high quality automated migration systems for a large variety of workloads Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Experience in network and routing protocols such as TCPIP BGP OSPF and EIGRP Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Used HTML5 Form Validation Type and Attributes Restrictions to validate the client inputs Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Migrated SQL server Databases to new Azure cloud servers Experience in Backup Restoring and Moving of Databases Configuring SQL Server Agent Jobs and designing Database Security Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Python Developer Scripps Networks Interactive January 2017 to Present Responsibilities Involved in the architectural design reviews Analyzing reviewing business functional highlevel technical requirements and migration process in agile environment Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell Java Scripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Utilized Python Django JQuery and Java etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Managed continuous maintenance and troubleshooting of python Django projects Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Extensively used bulk collection in PLSQL objects for improving the performing Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on object oriented programming OOP concepts using Python Django and Linux Worked on Amazon Kinesis to process and analyze streaming data with standard SQL Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Deployed applications on AWS by using Elastic Beanstalk Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Performance tuning by analyzing and comparing the turn around times between SQL and Cognos Manage Elastic search clusters and PostgreSQL replication Integrated GIT into Jenkins to automate the code checkout process Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Configuring the check for monitoring the devices like web servers routers modems switches firewalls application servers load balancers and other servers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and different types of oracle indexing Backup and Restore experience with PostgreSQLMYSQL database backups and point in time recovery Implementing and controlling the flow of data to and from AWS Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Designed and implemented a snowflake schema Data Warehouse in SQL Server Developing modules in python and performing CRUD operations in MongoDB Deployed and configured Git repositories with branching tagging and notifications Wrote Python scripts to parse XML and JSON documents and load the data in database Migrate on premise database to AWS Cloud and also designed built and deployed a multitude applications utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Provisioned Lambda for RDS instances for event based calls to MySQL DB those configured with VPC Environment AWS EC2 S3 Cloud Watch RDS ECS Lambda Elastic ache IAM Python 3x Django Shell Jenkins Maven Ansible GitHub CloudTrail DB2 Flask Django MS Access Tomcat Route 53 Apache IIS UNIX Linux HPUX Solaris and Windows NT2000XP Ubuntu Python Developer Discovery TN October 2014 to December 2016 Responsibilities Involved in complete SDLC of the project and Started with the preparation architecting of the high level and detailed design documents and VPC is created for instances using Subnets alongside SGs and Network ACLs on UNIX LINUX OS in Agile environments Used Django APIs for database access Involved in writing application level code to interact with APIs Web Services using JSON Worked on Amazon Kinesis Streams to collect and process large streams of data records Managing and troubleshooting of Python Django and Flask projects Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Worked with networking team in understanding the limitations of firewall domain controllers load balancers and switches Built various graphs for business decision making using Python matplotlib library Worked on Cloud automation using AWS Cloud Formation templates Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used HTML CSS JQuery JSON and Javascript for front end applications Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Merge jobs in Python to extract and load data into MySQL database Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifact repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Python Developer SPRD Analytics IN June 2013 to July 2014 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked on XML documents based on XML Schema definition XSD with python scripts to load the data into the database Created database Model APIs and Views utilizing Python to build an interactive web based application Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Worked on integrating python with Web development tools and Web Services Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created and executed test plans using PyUnit Utilize PyUnit the Python Unit test framework for all Python applications Extremely used plain JavaScript library to do the client side validations Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Utilized various IDEs and internal debug tools during debugging Used Pandas Python library for Statistical Analysis Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 o Java Script HTML5 XHTML JQuery JSON XML CSS3 MySQL Flask Python Developer Chargeback 360 INDIA April 2012 to June 2013 Responsibilities Developed Merge jobs in Python to extract and load data into MySQL database Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Used Django configuration to manage URLs and application parameters Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible for debugging testing maintaining and deploying the application Developed entire frontend and backend modules using Python on Django Web Framework Used Jira for defect tracking and project management Wrote Python routines to log into the websites and fetch data for selected options Python Developer SJS Technologies January 2010 to March 2012 Environment Python 27 Django C Java JQuery MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Python Developer SJS Technologies INDIA January 2010 to March 2012 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the clientside validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 CSS HTML JavaScript jQuery webbapp2 AJAX MYSQL Linux Heroku GIT urllib urllib2 Oracle DB PostgreSQL and VMWare API Education Bachelors in Computer science JNTU Skills JAVA 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years SQL 7 years Django AWS C Javascript Flask Additional Information Skills JAVA 6 years LINUX 6 years MYSQL 6 years PYTHON 6 years SQL 6 years Technical skills Cloud Environment Amazon Web Services EC2 S3 ELB auto scaling Servers Glacier Storage Lifecycle rules Elastic Beanstalk Cloud Front Elastic ache RDS VPC Direct Connect kinesis Route 53 Red Shift Cloud watch Cloud trail IAM Roles Terraform Source Control Tools CVS GIT Subversion and GITHUB Web Technologies JSP XML XSD XPATH XSLT Operating System IBMAIX435x HPUX11iV1 V2V3 Ubuntu14 Databases Oracle 8i9i10g and MySQL DB2 SQL Server Languages Python Java J2EE C C XML UML WSDL WebApplication Servers IBM Web sphere 6x Apache Web Server 20 Apache Tomcat 60 Sun ONE Web Server 60 IIS Web Server 4050 web logic Network Protocols TCPIP Subnets FTP SMTP UDP ICMP HTTPHTTPS NDS DHCP NFS Cisco Routers LAN Testing SOAP UI Unit Integration IAAS Providers AWS Open stack Cloud watch BuildCI CM tools ANT MAVEN JENKINS Bamboo HUDSON CHEF PUPPET Ansible",
    "entities": [
        "NAT",
        "UBUNTU Expertise",
        "UNIX",
        "SDK Migrated SQL",
        "Integrated GIT",
        "JSON",
        "GitHub CloudTrail",
        "Present Responsibilities Involved",
        "IBM",
        "XML",
        "Shell",
        "Creation of Python",
        "BASH Python",
        "Amazon",
        "Amazon Web Services Infrastructure",
        "Python",
        "JIRA Creating",
        "Jenkins",
        "PyUnit Utilize PyUnit",
        "AWS Deploying",
        "Oracle DB Created",
        "Statistical Analysis",
        "Jenkins Involved",
        "Backup Restoring",
        "Git",
        "Restful",
        "Amazon Kinesis",
        "Python Django and Flask",
        "Images",
        "API RESTful Web Service",
        "Linux",
        "AWS Written",
        "Flask",
        "RDS VPC Direct Connect",
        "VPC",
        "RDS",
        "Views",
        "XML BIG DATA",
        "PyQt",
        "Computer",
        "Docker Container",
        "PythonDjango",
        "NACL",
        "Pandas Python",
        "Knoxville",
        "API",
        "Scripts Data",
        "US",
        "HTML CSS JavaScript",
        "IAM",
        "Created",
        "Flask Django MS Access Tomcat Route",
        "AWS",
        "ANT MAVEN JENKINS Bamboo HUDSON CHEF PUPPET Ansible",
        "Oracle DB",
        "Djangos Test Module Used Django",
        "Backup and Restore",
        "Apache",
        "Bash Designed",
        "ELB",
        "Cron",
        "GitHub Build",
        "the Micro Service",
        "Python ORM Libraries",
        "Web Services Wrote",
        "SQL",
        "Instance Status",
        "Control Tools CVS GIT Subversion",
        "lPythonspan",
        "Subnets",
        "Oracle DB PostgreSQL",
        "Virtual Private Clouds VPC Elastic Load Balancers ELB",
        "Anaconda",
        "Model View Control",
        "CI",
        "Amazon AWS",
        "CICD Pipeline",
        "Windows Python Developer SPRD Analytics",
        "Pandas",
        "Python Integrated Development Environments",
        "SQS",
        "CRUD",
        "EIGRP Expertise",
        "Infrastructure Used Code Commit",
        "Build",
        "CM",
        "Varrays Records Object",
        "Python Responsible",
        "Python Developer SJS Technologies",
        "JavaScript",
        "VMWare API Education Bachelors",
        "Python Bootstrap CSS",
        "Amazon Web Services Cloud Python",
        "Amazon Web Services AWS Worked",
        "Network",
        "XSD",
        "CSS",
        "Amazon Images LinuxUbuntu and Configuring",
        "REST",
        "AWS Experienced",
        "Including EC2 R53 S3 RDS SNS",
        "MySQL Created",
        "Started",
        "Jenkins Chef Puppet Ansible Nagios",
        "Application",
        "GITHUB Web Technologies",
        "Database Security Having",
        "Integration",
        "Using Jenkins AWS Code Deploy",
        "Stacks",
        "Relational Database Services RDS Designed",
        "MFA",
        "Amazon Kinesis Streams"
    ],
    "experience": "Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Experience on Jupyter Notebook Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Worked on data migration and data management to build high quality automated migration systems for a large variety of workloads Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Experience in network and routing protocols such as TCPIP BGP OSPF and EIGRP Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Used HTML5 Form Validation Type and Attributes Restrictions to validate the client inputs Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Migrated SQL server Databases to new Azure cloud servers Experience in Backup Restoring and Moving of Databases Configuring SQL Server Agent Jobs and designing Database Security Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Python Developer Scripps Networks Interactive January 2017 to Present Responsibilities Involved in the architectural design reviews Analyzing reviewing business functional highlevel technical requirements and migration process in agile environment Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell Java Scripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Utilized Python Django JQuery and Java etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Managed continuous maintenance and troubleshooting of python Django projects Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Extensively used bulk collection in PLSQL objects for improving the performing Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on object oriented programming OOP concepts using Python Django and Linux Worked on Amazon Kinesis to process and analyze streaming data with standard SQL Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Deployed applications on AWS by using Elastic Beanstalk Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Performance tuning by analyzing and comparing the turn around times between SQL and Cognos Manage Elastic search clusters and PostgreSQL replication Integrated GIT into Jenkins to automate the code checkout process Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Configuring the check for monitoring the devices like web servers routers modems switches firewalls application servers load balancers and other servers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and different types of oracle indexing Backup and Restore experience with PostgreSQLMYSQL database backups and point in time recovery Implementing and controlling the flow of data to and from AWS Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Designed and implemented a snowflake schema Data Warehouse in SQL Server Developing modules in python and performing CRUD operations in MongoDB Deployed and configured Git repositories with branching tagging and notifications Wrote Python scripts to parse XML and JSON documents and load the data in database Migrate on premise database to AWS Cloud and also designed built and deployed a multitude applications utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Provisioned Lambda for RDS instances for event based calls to MySQL DB those configured with VPC Environment AWS EC2 S3 Cloud Watch RDS ECS Lambda Elastic ache IAM Python 3x Django Shell Jenkins Maven Ansible GitHub CloudTrail DB2 Flask Django MS Access Tomcat Route 53 Apache IIS UNIX Linux HPUX Solaris and Windows NT2000XP Ubuntu Python Developer Discovery TN October 2014 to December 2016 Responsibilities Involved in complete SDLC of the project and Started with the preparation architecting of the high level and detailed design documents and VPC is created for instances using Subnets alongside SGs and Network ACLs on UNIX LINUX OS in Agile environments Used Django APIs for database access Involved in writing application level code to interact with APIs Web Services using JSON Worked on Amazon Kinesis Streams to collect and process large streams of data records Managing and troubleshooting of Python Django and Flask projects Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Worked with networking team in understanding the limitations of firewall domain controllers load balancers and switches Built various graphs for business decision making using Python matplotlib library Worked on Cloud automation using AWS Cloud Formation templates Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used HTML CSS JQuery JSON and Javascript for front end applications Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Merge jobs in Python to extract and load data into MySQL database Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifact repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Python Developer SPRD Analytics IN June 2013 to July 2014 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked on XML documents based on XML Schema definition XSD with python scripts to load the data into the database Created database Model APIs and Views utilizing Python to build an interactive web based application Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Worked on integrating python with Web development tools and Web Services Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created and executed test plans using PyUnit Utilize PyUnit the Python Unit test framework for all Python applications Extremely used plain JavaScript library to do the client side validations Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Utilized various IDEs and internal debug tools during debugging Used Pandas Python library for Statistical Analysis Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 o Java Script HTML5 XHTML JQuery JSON XML CSS3 MySQL Flask Python Developer Chargeback 360 INDIA April 2012 to June 2013 Responsibilities Developed Merge jobs in Python to extract and load data into MySQL database Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Used Django configuration to manage URLs and application parameters Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible for debugging testing maintaining and deploying the application Developed entire frontend and backend modules using Python on Django Web Framework Used Jira for defect tracking and project management Wrote Python routines to log into the websites and fetch data for selected options Python Developer SJS Technologies January 2010 to March 2012 Environment Python 27 Django C Java JQuery MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Python Developer SJS Technologies INDIA January 2010 to March 2012 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the clientside validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 CSS HTML JavaScript jQuery webbapp2 AJAX MYSQL Linux Heroku GIT urllib urllib2 Oracle DB PostgreSQL and VMWare API Education Bachelors in Computer science JNTU Skills JAVA 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years SQL 7 years Django AWS C Javascript Flask Additional Information Skills JAVA 6 years LINUX 6 years MYSQL 6 years PYTHON 6 years SQL 6 years Technical skills Cloud Environment Amazon Web Services EC2 S3 ELB auto scaling Servers Glacier Storage Lifecycle rules Elastic Beanstalk Cloud Front Elastic ache RDS VPC Direct Connect kinesis Route 53 Red Shift Cloud watch Cloud trail IAM Roles Terraform Source Control Tools CVS GIT Subversion and GITHUB Web Technologies JSP XML XSD XPATH XSLT Operating System IBMAIX435x HPUX11iV1 V2V3 Ubuntu14 Databases Oracle 8i9i10 g and MySQL DB2 SQL Server Languages Python Java J2EE C C XML UML WSDL WebApplication Servers IBM Web sphere 6x Apache Web Server 20 Apache Tomcat 60 Sun ONE Web Server 60 IIS Web Server 4050 web logic Network Protocols TCPIP Subnets FTP SMTP UDP ICMP HTTPHTTPS NDS DHCP NFS Cisco Routers LAN Testing SOAP UI Unit Integration IAAS Providers AWS Open stack Cloud watch BuildCI CM tools ANT MAVEN JENKINS Bamboo HUDSON CHEF PUPPET Ansible",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Scripps",
        "Networks",
        "Interactive",
        "Knoxville",
        "TN",
        "years",
        "experience",
        "Architecting",
        "implementation",
        "area",
        "Amazon",
        "Web",
        "Services",
        "Cloud",
        "Python",
        "IT",
        "industry",
        "expertise",
        "development",
        "web",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Dojo",
        "HTML",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "JQuery",
        "Worked",
        "python",
        "packages",
        "Numpy",
        "matPlotLib",
        "Beautiful",
        "Soup",
        "Pickle",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "knowledge",
        "spring",
        "Hibernate",
        "RDBMS",
        "Web",
        "XML",
        "AntMaven",
        "HTML",
        "Python",
        "Shell",
        "Scripting",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHat",
        "Linux",
        "Fedora",
        "Good",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Python",
        "web",
        "application",
        "frameworks",
        "Experience",
        "Jupyter",
        "Notebook",
        "experience",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Packages",
        "Cursors",
        "Collections",
        "Nested",
        "tables",
        "Varrays",
        "Records",
        "Object",
        "types",
        "Database",
        "Triggers",
        "data",
        "migration",
        "data",
        "management",
        "quality",
        "migration",
        "systems",
        "variety",
        "workloads",
        "knowledge",
        "Cloud",
        "Virtualization",
        "environments",
        "Azure",
        "Aws",
        "Google",
        "Cloud",
        "Engine",
        "experience",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Intellij",
        "Spyder",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "UBUNTU",
        "Expertise",
        "integration",
        "deployment",
        "build",
        "tools",
        "Git",
        "Ant",
        "Maven",
        "Jenkins",
        "Chef",
        "Puppet",
        "Ansible",
        "Nagios",
        "Docker",
        "Experience",
        "network",
        "protocols",
        "BGP",
        "OSPF",
        "EIGRP",
        "Expertise",
        "AWS",
        "Cloud",
        "Formation",
        "custom",
        "VPC",
        "Subnets",
        "NAT",
        "deployment",
        "Web",
        "Applications",
        "database",
        "Hands",
        "experience",
        "Business",
        "data",
        "center",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "Python",
        "programming",
        "Python",
        "libraries",
        "data",
        "science",
        "Anaconda",
        "distribution",
        "NumPy",
        "pandas",
        "support",
        "Application",
        "database",
        "team",
        "troubleshoot",
        "issues",
        "support",
        "contact",
        "AWS",
        "Support",
        "Configured",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Boto",
        "python",
        "sdk",
        "Develop",
        "AWS",
        "Cloud",
        "Formation",
        "JSON",
        "infrastructure",
        "deployments",
        "Experience",
        "S3",
        "buckets",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "Glacier",
        "storage",
        "backup",
        "AWS",
        "application",
        "Docker",
        "Container",
        "custom",
        "environment",
        "Elastic",
        "Beanstalk",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "Experience",
        "designing",
        "VPC",
        "networks",
        "AWS",
        "Troubleshoot",
        "AWS",
        "EC2",
        "Status",
        "check",
        "System",
        "Status",
        "checks",
        "Instance",
        "Status",
        "check",
        "Used",
        "HTML5",
        "Form",
        "Validation",
        "Type",
        "Attributes",
        "Restrictions",
        "client",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3",
        "bucket",
        "Build",
        "scripts",
        "AWS",
        "cloud",
        "EC2",
        "auto",
        "scaling",
        "load",
        "balancer",
        "python",
        "SDK",
        "SQL",
        "server",
        "Databases",
        "cloud",
        "Experience",
        "Backup",
        "Restoring",
        "Moving",
        "Databases",
        "Configuring",
        "SQL",
        "Server",
        "Agent",
        "Jobs",
        "Database",
        "Security",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Excel",
        "data",
        "Sponsorship",
        "US",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Scripps",
        "Networks",
        "Interactive",
        "January",
        "Present",
        "Responsibilities",
        "design",
        "reviews",
        "business",
        "highlevel",
        "requirements",
        "migration",
        "process",
        "environment",
        "systems",
        "AWS",
        "programs",
        "Python",
        "Shell",
        "Java",
        "Scripts",
        "CI",
        "tools",
        "Jenkins",
        "Maven",
        "tool",
        "IAM",
        "subnets",
        "NACL",
        "SGs",
        "EC2",
        "instances",
        "APIs",
        "NodeJS",
        "applications",
        "Configuring",
        "IAM",
        "roles",
        "EC2",
        "instances",
        "ELB",
        "policies",
        "level",
        "access",
        "S3",
        "buckets",
        "JSON",
        "template",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "Infrastructure",
        "Code",
        "Commit",
        "Git",
        "repositories",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "frontend",
        "pages",
        "Python",
        "Django",
        "JQuery",
        "Java",
        "design",
        "server",
        "applications",
        "client",
        "interfaces",
        "Amazon",
        "EC2",
        "Cloud",
        "Instances",
        "Amazon",
        "Images",
        "LinuxUbuntu",
        "Configuring",
        "instances",
        "respect",
        "applications",
        "maintenance",
        "troubleshooting",
        "python",
        "Django",
        "Build",
        "application",
        "database",
        "servers",
        "AWS",
        "EC2",
        "AMIs",
        "RDS",
        "Oracle",
        "DB",
        "Created",
        "PLSQL",
        "procedures",
        "functions",
        "packages",
        "data",
        "area",
        "data",
        "mart",
        "collection",
        "PLSQL",
        "Developed",
        "ETL",
        "mappings",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "views",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "Amazon",
        "Kinesis",
        "streaming",
        "data",
        "SQL",
        "AWS",
        "services",
        "environment",
        "workloads",
        "data",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "operations",
        "maintenance",
        "support",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "instances",
        "S3",
        "Clouds",
        "VPC",
        "Elastic",
        "Load",
        "Balancers",
        "ELB",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "PostgreSQL",
        "Performance",
        "turn",
        "times",
        "SQL",
        "Cognos",
        "Manage",
        "search",
        "clusters",
        "PostgreSQL",
        "replication",
        "Integrated",
        "GIT",
        "Jenkins",
        "code",
        "checkout",
        "process",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "frontend",
        "pages",
        "check",
        "devices",
        "web",
        "servers",
        "modems",
        "firewalls",
        "application",
        "servers",
        "balancers",
        "servers",
        "PostgreSQLMYSQL",
        "features",
        "table",
        "types",
        "oracle",
        "indexing",
        "Backup",
        "Restore",
        "experience",
        "database",
        "backups",
        "point",
        "time",
        "recovery",
        "flow",
        "data",
        "AWS",
        "scripts",
        "Python",
        "Perl",
        "Java",
        "log",
        "rotation",
        "logs",
        "web",
        "servers",
        "automation",
        "monitoring",
        "AWS",
        "services",
        "VPC",
        "ELB",
        "RDS",
        "Lambda",
        "OpsWorks",
        "Cloud",
        "Front",
        "Shell",
        "Python",
        "scripts",
        "Jenkins",
        "AWS",
        "Code",
        "Deploy",
        "plugin",
        "snowflake",
        "schema",
        "Data",
        "Warehouse",
        "SQL",
        "Server",
        "modules",
        "python",
        "CRUD",
        "operations",
        "MongoDB",
        "Deployed",
        "Git",
        "repositories",
        "tagging",
        "notifications",
        "Wrote",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "Migrate",
        "premise",
        "database",
        "AWS",
        "Cloud",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "R53",
        "S3",
        "RDS",
        "SNS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "Provisioned",
        "Lambda",
        "RDS",
        "instances",
        "event",
        "calls",
        "MySQL",
        "DB",
        "VPC",
        "Environment",
        "AWS",
        "EC2",
        "S3",
        "Cloud",
        "RDS",
        "ECS",
        "Lambda",
        "Elastic",
        "ache",
        "IAM",
        "Python",
        "Django",
        "Shell",
        "Jenkins",
        "Maven",
        "Ansible",
        "GitHub",
        "CloudTrail",
        "DB2",
        "Flask",
        "Django",
        "MS",
        "Access",
        "Tomcat",
        "Route",
        "Apache",
        "IIS",
        "UNIX",
        "Linux",
        "HPUX",
        "Solaris",
        "Windows",
        "NT2000XP",
        "Ubuntu",
        "Python",
        "Developer",
        "Discovery",
        "TN",
        "October",
        "December",
        "Responsibilities",
        "SDLC",
        "project",
        "preparation",
        "architecting",
        "level",
        "design",
        "documents",
        "VPC",
        "instances",
        "Subnets",
        "SGs",
        "Network",
        "ACLs",
        "UNIX",
        "LINUX",
        "OS",
        "environments",
        "Django",
        "APIs",
        "database",
        "access",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Amazon",
        "Kinesis",
        "Streams",
        "streams",
        "data",
        "records",
        "troubleshooting",
        "Python",
        "Django",
        "Flask",
        "projects",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "Infrastructure",
        "services",
        "EC2",
        "S3",
        "RDS",
        "SQS",
        "Cloud",
        "Formation",
        "Amazon",
        "SQS",
        "work",
        "Amazon",
        "EC2",
        "nodes",
        "networking",
        "team",
        "limitations",
        "firewall",
        "domain",
        "controllers",
        "load",
        "balancers",
        "switches",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Cloud",
        "automation",
        "AWS",
        "Cloud",
        "Formation",
        "stage",
        "Micro",
        "Service",
        "architecture",
        "Docker",
        "container",
        "image",
        "Docker",
        "registry",
        "Images",
        "custom",
        "use",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "scripts",
        "system",
        "administration",
        "languages",
        "BASH",
        "Python",
        "Python",
        "scripts",
        "Cron",
        "jobs",
        "system",
        "maintenance",
        "Jenkins",
        "Maven",
        "automation",
        "MySQL",
        "failover",
        "Linux",
        "OS",
        "bash",
        "scripts",
        "logic",
        "failover",
        "executebefore",
        "option",
        "masterpiece",
        "tuning",
        "SQL",
        "queries",
        "join",
        "costs",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Build",
        "application",
        "database",
        "servers",
        "AWS",
        "EC2",
        "AMIs",
        "RDS",
        "Oracle",
        "DB",
        "Experience",
        "CICD",
        "Pipeline",
        "code",
        "release",
        "process",
        "Integration",
        "tools",
        "GitSVN",
        "GitHub",
        "Jenkins",
        "Maven",
        "artifact",
        "repo",
        "build",
        "system",
        "Jenkins",
        "ClearCase",
        "Perl",
        "Python",
        "Bash",
        "scripting",
        "security",
        "instances",
        "VPC",
        "Subnets",
        "SGs",
        "ELB",
        "instances",
        "Environment",
        "Python",
        "Django",
        "XML",
        "Java",
        "Apache",
        "CSS",
        "MySQL",
        "JSON",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Restfull",
        "UNIX",
        "Windows",
        "Python",
        "Developer",
        "SPRD",
        "Analytics",
        "June",
        "July",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "XML",
        "documents",
        "XML",
        "Schema",
        "definition",
        "XSD",
        "scripts",
        "data",
        "database",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "application",
        "MySQL",
        "failover",
        "Linux",
        "OS",
        "bash",
        "scripts",
        "logic",
        "failover",
        "executebefore",
        "option",
        "masterpiece",
        "tuning",
        "SQL",
        "queries",
        "join",
        "costs",
        "python",
        "Web",
        "development",
        "tools",
        "Web",
        "Services",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "test",
        "plans",
        "PyUnit",
        "Utilize",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "JavaScript",
        "library",
        "client",
        "side",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "IDEs",
        "debug",
        "tools",
        "Pandas",
        "Python",
        "library",
        "Statistical",
        "Analysis",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Python",
        "o",
        "Java",
        "Script",
        "HTML5",
        "XHTML",
        "JQuery",
        "JSON",
        "XML",
        "CSS3",
        "MySQL",
        "Flask",
        "Python",
        "Developer",
        "Chargeback",
        "INDIA",
        "April",
        "June",
        "Responsibilities",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "integration",
        "automation",
        "Jenkins",
        "SQL",
        "functions",
        "triggers",
        "cursors",
        "types",
        "sequences",
        "indexes",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "development",
        "RESTful",
        "Web",
        "Services",
        "data",
        "interface",
        "format",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "testing",
        "application",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Jira",
        "tracking",
        "project",
        "management",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "Developer",
        "SJS",
        "Technologies",
        "January",
        "March",
        "Environment",
        "Python",
        "Django",
        "C",
        "Java",
        "JQuery",
        "MySQL",
        "Oracle",
        "Linux",
        "Django",
        "Eclipse",
        "Shell",
        "Scripting",
        "HTML",
        "SVN",
        "CSS",
        "AJAX",
        "Bugzilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Python",
        "Developer",
        "SJS",
        "Technologies",
        "INDIA",
        "January",
        "March",
        "Responsibilities",
        "requirement",
        "gathering",
        "architect",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "BIG",
        "DATA",
        "tasks",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "Web",
        "Server",
        "Gateway",
        "Interface",
        "WSGI",
        "SQL",
        "admin",
        "tools",
        "Behaviordriven",
        "development",
        "BDD",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Creation",
        "Python",
        "scripts",
        "data",
        "access",
        "analysis",
        "Scripts",
        "Data",
        "XLS",
        "FIXML",
        "process",
        "system",
        "monitoring",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "Responsible",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "UI",
        "website",
        "HTML5",
        "XHTML",
        "AJAX",
        "CSS3",
        "BIG",
        "DATA",
        "JavaScript",
        "validation",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Git",
        "repository",
        "project",
        "GitHub",
        "Build",
        "development",
        "environment",
        "JIRA",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "webbapp2",
        "AJAX",
        "MYSQL",
        "Linux",
        "Heroku",
        "GIT",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Education",
        "Bachelors",
        "Computer",
        "science",
        "JNTU",
        "Skills",
        "JAVA",
        "years",
        "LINUX",
        "years",
        "MYSQL",
        "years",
        "PYTHON",
        "years",
        "SQL",
        "years",
        "Django",
        "C",
        "Javascript",
        "Flask",
        "Additional",
        "Information",
        "Skills",
        "JAVA",
        "years",
        "LINUX",
        "years",
        "MYSQL",
        "years",
        "PYTHON",
        "years",
        "SQL",
        "years",
        "skills",
        "Cloud",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "ELB",
        "auto",
        "Servers",
        "Glacier",
        "Storage",
        "Lifecycle",
        "Beanstalk",
        "Cloud",
        "Front",
        "Elastic",
        "ache",
        "RDS",
        "VPC",
        "Direct",
        "Connect",
        "kinesis",
        "Route",
        "Red",
        "Shift",
        "Cloud",
        "Cloud",
        "trail",
        "IAM",
        "Roles",
        "Terraform",
        "Source",
        "Control",
        "Tools",
        "CVS",
        "GIT",
        "Subversion",
        "GITHUB",
        "Web",
        "Technologies",
        "JSP",
        "XML",
        "XSD",
        "XPATH",
        "XSLT",
        "Operating",
        "System",
        "IBMAIX435x",
        "HPUX11iV1",
        "Oracle",
        "g",
        "MySQL",
        "DB2",
        "SQL",
        "Server",
        "Languages",
        "Python",
        "Java",
        "J2EE",
        "C",
        "C",
        "XML",
        "UML",
        "WSDL",
        "WebApplication",
        "Servers",
        "IBM",
        "Web",
        "sphere",
        "6x",
        "Apache",
        "Web",
        "Server",
        "Apache",
        "Tomcat",
        "Sun",
        "Web",
        "Server",
        "IIS",
        "Web",
        "Server",
        "web",
        "logic",
        "Network",
        "Protocols",
        "Subnets",
        "FTP",
        "SMTP",
        "UDP",
        "ICMP",
        "HTTPHTTPS",
        "NDS",
        "NFS",
        "Cisco",
        "LAN",
        "Testing",
        "SOAP",
        "UI",
        "Unit",
        "Integration",
        "IAAS",
        "Providers",
        "AWS",
        "stack",
        "Cloud",
        "BuildCI",
        "CM",
        "ANT",
        "MAVEN",
        "JENKINS",
        "Bamboo",
        "HUDSON",
        "CHEF",
        "Ansible"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:00:56.271454",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Scripps Networks Interactive Knoxville TN Having 7 years of diverse professional experience in planning designing developing Architecting and implementation in the area of Amazon Web Services Cloud Python and IT industry Strong expertise in development of web based applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and JQuery Worked on several python packages like Numpy matPlotLib Beautiful Soup Pickle PySide Scipy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Experience on Jupyter Notebook Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Worked on data migration and data management to build high quality automated migration systems for a large variety of workloads Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Experience in network and routing protocols such as TCPIP BGP OSPF and EIGRP Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Used HTML5 Form Validation Type and Attributes Restrictions to validate the client inputs Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Migrated SQL server Databases to new Azure cloud servers Experience in Backup Restoring and Moving of Databases Configuring SQL Server Agent Jobs and designing Database Security Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment and Excel data extracts Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Python Developer Scripps Networks Interactive January 2017 to Present Responsibilities Involved in the architectural design reviews Analyzing reviewing business functional highlevel technical requirements and migration process in agile environment Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell Java Scripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Utilized Python Django JQuery and Java etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Managed continuous maintenance and troubleshooting of python Django projects Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Extensively used bulk collection in PLSQL objects for improving the performing Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on object oriented programming OOP concepts using Python Django and Linux Worked on Amazon Kinesis to process and analyze streaming data with standard SQL Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Deployed applications on AWS by using Elastic Beanstalk Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Performance tuning by analyzing and comparing the turn around times between SQL and Cognos Manage Elastic search clusters and PostgreSQL replication Integrated GIT into Jenkins to automate the code checkout process Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Configuring the check for monitoring the devices like web servers routers modems switches firewalls application servers load balancers and other servers Experienced in using advanced PostgreSQLMYSQL features like table partitioning and different types of oracle indexing Backup and Restore experience with PostgreSQLMYSQL database backups and point in time recovery Implementing and controlling the flow of data to and from AWS Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Designed and implemented a snowflake schema Data Warehouse in SQL Server Developing modules in python and performing CRUD operations in MongoDB Deployed and configured Git repositories with branching tagging and notifications Wrote Python scripts to parse XML and JSON documents and load the data in database Migrate on premise database to AWS Cloud and also designed built and deployed a multitude applications utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Provisioned Lambda for RDS instances for event based calls to MySQL DB those configured with VPC Environment AWS EC2 S3 Cloud Watch RDS ECS Lambda Elastic ache IAM Python 3x Django Shell Jenkins Maven Ansible GitHub CloudTrail DB2 Flask Django MS Access Tomcat Route 53 Apache IIS UNIX Linux HPUX Solaris and Windows NT2000XP Ubuntu Python Developer Discovery TN October 2014 to December 2016 Responsibilities Involved in complete SDLC of the project and Started with the preparation architecting of the high level and detailed design documents and VPC is created for instances using Subnets alongside SGs and Network ACLs on UNIX LINUX OS in Agile environments Used Django APIs for database access Involved in writing application level code to interact with APIs Web Services using JSON Worked on Amazon Kinesis Streams to collect and process large streams of data records Managing and troubleshooting of Python Django and Flask projects Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Worked with networking team in understanding the limitations of firewall domain controllers load balancers and switches Built various graphs for business decision making using Python matplotlib library Worked on Cloud automation using AWS Cloud Formation templates Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used HTML CSS JQuery JSON and Javascript for front end applications Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Developed Merge jobs in Python to extract and load data into MySQL database Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifact repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Python Developer SPRD Analytics IN June 2013 to July 2014 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Worked on XML documents based on XML Schema definition XSD with python scripts to load the data into the database Created database Model APIs and Views utilizing Python to build an interactive web based application Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Worked on integrating python with Web development tools and Web Services Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created and executed test plans using PyUnit Utilize PyUnit the Python Unit test framework for all Python applications Extremely used plain JavaScript library to do the client side validations Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Utilized various IDEs and internal debug tools during debugging Used Pandas Python library for Statistical Analysis Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 o Java Script HTML5 XHTML JQuery JSON XML CSS3 MySQL Flask Python Developer Chargeback 360 INDIA April 2012 to June 2013 Responsibilities Developed Merge jobs in Python to extract and load data into MySQL database Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Used Django configuration to manage URLs and application parameters Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible for debugging testing maintaining and deploying the application Developed entire frontend and backend modules using Python on Django Web Framework Used Jira for defect tracking and project management Wrote Python routines to log into the websites and fetch data for selected options Python Developer SJS Technologies January 2010 to March 2012 Environment Python 27 Django C Java JQuery MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Python Developer SJS Technologies INDIA January 2010 to March 2012 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts Data Feeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the clientside validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 CSS HTML JavaScript jQuery webbapp2 AJAX MYSQL Linux Heroku GIT urllib urllib2 Oracle DB PostgreSQL and VMWare API Education Bachelors in Computer science JNTU Skills JAVA 7 years LINUX 7 years MYSQL 7 years PYTHON 7 years SQL 7 years Django AWS C Javascript Flask Additional Information Skills JAVA 6 years LINUX 6 years MYSQL 6 years PYTHON 6 years SQL 6 years Technical skills Cloud Environment Amazon Web Services EC2 S3 ELB auto scaling Servers Glacier Storage Lifecycle rules Elastic Beanstalk Cloud Front Elastic ache RDS VPC Direct Connect kinesis Route 53 Red Shift Cloud watch Cloud trail IAM Roles Terraform Source Control Tools CVS GIT Subversion and GITHUB Web Technologies JSP XML XSD XPATH XSLT Operating System IBMAIX435x HPUX11iV1 V2V3 Ubuntu14 Databases Oracle 8i9i10g and MySQL DB2 SQL Server Languages Python Java J2EE C C XML UML WSDL WebApplication Servers IBM Web sphere 6x Apache Web Server 20 Apache Tomcat 60 Sun ONE Web Server 60 IIS Web Server 4050 web logic Network Protocols TCPIP Subnets FTP SMTP UDP ICMP HTTPHTTPS NDS DHCP NFS Cisco Routers LAN Testing SOAP UI Unit Integration IAAS Providers AWS Open stack Cloud watch BuildCI CM tools ANT MAVEN JENKINS Bamboo HUDSON CHEF PUPPET Ansible",
    "unique_id": "ea1e460e-9500-4bda-8a53-e5c2b680b31e"
}