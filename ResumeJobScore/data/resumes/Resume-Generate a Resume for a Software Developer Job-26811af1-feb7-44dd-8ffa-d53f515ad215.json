{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Kinderd Health Having 7 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs Reactjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS React JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used Python Django MVC framework to design and develop the application Experience in Kubernetes that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Work Experience Python Developer Kinderd Health Louisville KY June 2018 to Present Description Kindred provide care and support in the most appropriate care setting for those recovering from illness or injury Whether youre receiving care in our hospital one of our rehab facilities or even at home were here to ensure you recover to the fullest extent possible Responsibilities Interacting with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involve in infrastructure as code execution plans resource graph and change automation using Terraform Managing AWS infrastructure as code using Terraform Developing Merge jobs in Python to extract and loading data into MySQL database Creating Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implementing Terraform to manage the AWS infrastructure and managing servers using configuration management tools like Chef and Ansible Developing file cleaners using Python libraries and make it clean Working on MVC architecture using PHP Python as controller Building numerous Lambda functions using Python and automating the process using the event created Creating an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Working on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experience in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performing S3 buckets creation policies on IAM role based polices MFA and customize the JSON template Automating various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Writing ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Working in MySQL database on simple queries and writing Stored Procedures for normalization Deploying the project into Jenkins using GIT version control system Learning to index and searchquery large number of documents inside Elastic search Taking part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy Beautiful Soup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loading the data into Spark RDD and do in memory data Computation to generate the Output response Configuring and maintaining Jenkins to implement the CI process and integrating the tool with Ant and Maven to schedule the builds Creating Maven POMs to automate build process for the new projects and integrate them with third party tools like Sonar Qube Responsible for installing and administrating the Sonar Qube for code quality check and Nexus repository and generating reports for different projects Also integrate them into Jenkins Help to understand the process of Sonar Qube through Presentations and other business value measurement Preparing scripts to ensure proper data access manipulation and report functions with R programming languages Formulating procedures for integration of R programming plans with data sources and delivery systems Involve in writing queries in Spark SQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and convert RDDs to Data Frames Working with View Sets in DjangoREST framework for providing web services and consume web services performing CRUD operations Using Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Using AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 36 Django API Gateway Java J2EE REST API Spark Spark API Spark Sql Spark Streaming Spring framework AngularJS React JS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Samhita Tech May 2011 to Present Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Python Developer Mass Mutual Springfield MA February 2017 to May 2018 Description Haven Life is an insure tech innovator at Mass Mutual that offers a new way to get life insurance online thats actually simple They combine the culture of a startup with the stability and backing of a Fortune 500 company to create an environment thats truly unique Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using Sonar Qube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS React JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Everest Insurance Edison NJ April 2016 to January 2017 Description Everest is a leading global reinsurance and insurance organization with extensive product and distribution capabilities a strong balance sheet and an innovative culture Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Provided advanced software research and development for high performance lowlatency platform Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Design and implementation of lowlatency highavailability and performant applications Implementation of security and data protection Created APIs database Model and Views Utilization Python to build responsive web page application Used python scripts to update content in the database and manipulate files Redesigned existing task management systems using Python Involved in frontend and backend modules using Python on Django Web Framework Involved in Installing Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Efficient database management optimization and caching Used Python jQuery JavaScript and AJAX at the front end Created multipage web application forms and nested forms for user to customize the templates Involved in design implementation and modifying the Python code Developed Restful APIs using Flask Database modeling and design Involved in developing and implementation of the web application using PythonDjango Used Git for the version control Involved in Unit testing and Integration testing Develop user friendly and sophisticated graphical representation of the catalogue of items that would be configured for a piece of equipment Worked on object oriented programming OOP concepts using Python Django Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Environment Python Django MySQL HTML JavaScript JSON XML jQuery windows Restful CSS Git JIRA Python Developer UBS Financial Services Weehawken NJ January 2015 to March 2016 Description UBS is a Swiss global financial services company It provides investment banking asset management and wealth management services for private corporate and institutional clients worldwide This project is mainly developing and reengineering Loan Application Processing System Customers can apply for a Loan online by filling out outline forms which go through security and credit check System checks the loan application against the business rules called RAC Risk Acceptance CriteriaThe loan information is maintained in Oracle 11g database Bank employees customers and customer service representatives can search filter and view loan applications Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ October 2013 to December 2014 Description Founded in 1993 Orion provides innovative IT services and solutions to global industry leaders as well as millennial companies to help them achieve business transformation With a consultative approach and solutions driven mindset we reinvent your business processes with new and better ways of working Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Additional Information Technical Skills JavaJ2EE JDK 1718Collections Generics Multithreading Serialization Exception Handling RMI File IO JDBC 1x2x3x JNDI 1112Servlets 212225 JSP 101112 JavaBeans XML Beans JAXP Web Services SOAP FrameworkLibraries Struts 1x2x spring 2x EJB 2x Hibernate 2x3x iBatis2x MQ WebLogic Portal 103Apache Axis20 JAXWSJAXRS SOA Ajax DOJO 13 LOG4J Middleware Web Services RMI WebApplication Servers BEA WebLogic 7x8x9x10x WebSphere 75 Apache Tomcat 5x6x IDE IBM RAD 75 Eclipse2135 SOAPUI XML Spy Borland Together JBuilder XML Databases Oracle 8i9i10g MS SQL Server 08 MySQL 5 X MS Access Mongo DB Web Services SOAP Restful JAXRS JAXWS WSDL UDDI and Service Oriented Architecture SOA XMLHTML XSD XML SAX DOM HTML XHTML DHTML CSS Scripts JavaScript VB Script Design Skills UML Rational Rose Visio Object Oriented Analysis and Design OOAD Java Enterprise Design Patterns and Database design ERWIN Version Control Tools GIT Source Control VSS SVN Starteam Keystone Subversion16 Methodologies AgileScrum Methodology Waterfall Deployment and Testing Maven Ant Junit TestNG Operating Systems Windows 20032008 Windows XP UNIX Linux Windows 7 Tools Framework Struts Spring Hibernate JSF Junit SOAP UI Spring IOC Spring AOP Apache Camel Spring MVC WebApp Servers Web Sphere Apache Tomcat JBoss EAP WebLogic",
    "entities": [
        "ERWIN Version",
        "Flask Admin MySQL and SQLite Responsible",
        "Python 3627",
        "AJAX",
        "MatPlotlib",
        "GUI",
        "Responsibilities Actively",
        "MavenHudson Deploy",
        "HTML AJAX CSS",
        "UNIX",
        "Implementation of security",
        "HTTP",
        "Researched",
        "SQL Profiler and Analytics",
        "Working",
        "Developer Everest Insurance",
        "Mass Mutual",
        "Data Frames Working",
        "GIT Repository Setup",
        "Springfield",
        "Model and Views Utilization Python",
        "IBM",
        "PHP Python",
        "Design Development and Deployment Testing and Implementation",
        "Software Configuration Management",
        "Model View Control MVC",
        "DHTML",
        "jQuery Created",
        "PyUnit",
        "Bootstrap Implemented RESTful WebServices",
        "WebLogic",
        "MA",
        "JUnit",
        "jQuery J2EE Experienced",
        "Shell",
        "Implemented Terraform",
        "Apache Spark",
        "Amazon",
        "Maven Repository and Deployment",
        "WebSphere",
        "Python",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Stored Procedures",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "Responsibilities Interacting with Business team",
        "RAC Risk Acceptance CriteriaThe",
        "DB Created",
        "Python Flask framework Involved",
        "Python and Flask Postgres Database Wrote",
        "Automation Test",
        "MS Excel",
        "JQuery Implemented",
        "WebSphere 75 Apache Tomcat",
        "Puppet",
        "SQL PLSQL",
        "ANSIBLE",
        "Technologies",
        "DjangoREST",
        "Develop",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "the RPM Package",
        "Control Tools",
        "Terraform Managing AWS",
        "JavaBeans XML Beans JAXP Web Services SOAP FrameworkLibraries Struts",
        "JSP",
        "jQuery Developed Consumerbased",
        "Installed and Administered Jenkins CI",
        "Flask",
        "Collaborated",
        "Loan Application Processing System Customers",
        "Bank",
        "Description Everest",
        "Nexus",
        "QT Regex",
        "CLI",
        "MVC",
        "PythonDjango",
        "GIT Proficient",
        "Integration Testing",
        "EJB",
        "GIT",
        "HTML CSS",
        "API",
        "HTML CSS JavaScript",
        "Database",
        "REST API test",
        "QA",
        "IAM",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Created",
        "AWS",
        "Implemented",
        "Oracle",
        "SNS Implemented",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Worked with View Sets",
        "ELB",
        "Formulating",
        "SAX",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "Present Description Kindred",
        "SSRS",
        "SQL",
        "Spark RDD",
        "GitHub",
        "Mentored",
        "lPythonspan",
        "Nginx",
        "Kubernetes",
        "Ant",
        "SSH",
        "Built an",
        "CI",
        "DOM API",
        "Hive",
        "MVW",
        "Amazon AWS",
        "Practical",
        "google analytics",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "Maven",
        "Data Frames",
        "Frigate",
        "Loan",
        "Djangos",
        "JavaScript",
        "the Application Developed",
        "UI",
        "Front",
        "Created Business Logic",
        "Implementing Terraform",
        "View Sets",
        "Expertise",
        "CSS",
        "Transformation and Actions",
        "Restful CSS Git JIRA Python Developer UBS Financial Services",
        "Tomcat",
        "REST",
        "jQuery Design",
        "UNIX Wrote Python",
        "Jenkins Integration",
        "MapReduce",
        "Application",
        "Software Development Life Cycle",
        "Maven Builds",
        "Configs",
        "MFA",
        "Node"
    ],
    "experience": "Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs Reactjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS React JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used Python Django MVC framework to design and develop the application Experience in Kubernetes that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Work Experience Python Developer Kinderd Health Louisville KY June 2018 to Present Description Kindred provide care and support in the most appropriate care setting for those recovering from illness or injury Whether you re receiving care in our hospital one of our rehab facilities or even at home were here to ensure you recover to the fullest extent possible Responsibilities Interacting with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involve in infrastructure as code execution plans resource graph and change automation using Terraform Managing AWS infrastructure as code using Terraform Developing Merge jobs in Python to extract and loading data into MySQL database Creating Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implementing Terraform to manage the AWS infrastructure and managing servers using configuration management tools like Chef and Ansible Developing file cleaners using Python libraries and make it clean Working on MVC architecture using PHP Python as controller Building numerous Lambda functions using Python and automating the process using the event created Creating an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Working on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experience in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performing S3 buckets creation policies on IAM role based polices MFA and customize the JSON template Automating various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Writing ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Working in MySQL database on simple queries and writing Stored Procedures for normalization Deploying the project into Jenkins using GIT version control system Learning to index and searchquery large number of documents inside Elastic search Taking part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy Beautiful Soup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loading the data into Spark RDD and do in memory data Computation to generate the Output response Configuring and maintaining Jenkins to implement the CI process and integrating the tool with Ant and Maven to schedule the builds Creating Maven POMs to automate build process for the new projects and integrate them with third party tools like Sonar Qube Responsible for installing and administrating the Sonar Qube for code quality check and Nexus repository and generating reports for different projects Also integrate them into Jenkins Help to understand the process of Sonar Qube through Presentations and other business value measurement Preparing scripts to ensure proper data access manipulation and report functions with R programming languages Formulating procedures for integration of R programming plans with data sources and delivery systems Involve in writing queries in Spark SQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and convert RDDs to Data Frames Working with View Sets in DjangoREST framework for providing web services and consume web services performing CRUD operations Using Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Using AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 36 Django API Gateway Java J2EE REST API Spark Spark API Spark Sql Spark Streaming Spring framework AngularJS React JS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Samhita Tech May 2011 to Present Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Python Developer Mass Mutual Springfield MA February 2017 to May 2018 Description Haven Life is an insure tech innovator at Mass Mutual that offers a new way to get life insurance online that s actually simple They combine the culture of a startup with the stability and backing of a Fortune 500 company to create an environment that s truly unique Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using Sonar Qube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS React JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Everest Insurance Edison NJ April 2016 to January 2017 Description Everest is a leading global reinsurance and insurance organization with extensive product and distribution capabilities a strong balance sheet and an innovative culture Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Provided advanced software research and development for high performance lowlatency platform Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Design and implementation of lowlatency highavailability and performant applications Implementation of security and data protection Created APIs database Model and Views Utilization Python to build responsive web page application Used python scripts to update content in the database and manipulate files Redesigned existing task management systems using Python Involved in frontend and backend modules using Python on Django Web Framework Involved in Installing Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Efficient database management optimization and caching Used Python jQuery JavaScript and AJAX at the front end Created multipage web application forms and nested forms for user to customize the templates Involved in design implementation and modifying the Python code Developed Restful APIs using Flask Database modeling and design Involved in developing and implementation of the web application using PythonDjango Used Git for the version control Involved in Unit testing and Integration testing Develop user friendly and sophisticated graphical representation of the catalogue of items that would be configured for a piece of equipment Worked on object oriented programming OOP concepts using Python Django Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Environment Python Django MySQL HTML JavaScript JSON XML jQuery windows Restful CSS Git JIRA Python Developer UBS Financial Services Weehawken NJ January 2015 to March 2016 Description UBS is a Swiss global financial services company It provides investment banking asset management and wealth management services for private corporate and institutional clients worldwide This project is mainly developing and reengineering Loan Application Processing System Customers can apply for a Loan online by filling out outline forms which go through security and credit check System checks the loan application against the business rules called RAC Risk Acceptance CriteriaThe loan information is maintained in Oracle 11 g database Bank employees customers and customer service representatives can search filter and view loan applications Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ October 2013 to December 2014 Description Founded in 1993 Orion provides innovative IT services and solutions to global industry leaders as well as millennial companies to help them achieve business transformation With a consultative approach and solutions driven mindset we reinvent your business processes with new and better ways of working Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Additional Information Technical Skills JavaJ2EE JDK 1718Collections Generics Multithreading Serialization Exception Handling RMI File IO JDBC 1x2x3x JNDI 1112Servlets 212225 JSP 101112 JavaBeans XML Beans JAXP Web Services SOAP FrameworkLibraries Struts 1x2x spring 2x EJB 2x Hibernate 2x3x iBatis2x MQ WebLogic Portal 103Apache Axis20 JAXWSJAXRS SOA Ajax DOJO 13 LOG4J Middleware Web Services RMI WebApplication Servers BEA WebLogic 7x8x9x10x WebSphere 75 Apache Tomcat 5x6x IDE IBM RAD 75 Eclipse2135 SOAPUI XML Spy Borland Together JBuilder XML Databases Oracle 8i9i10 g MS SQL Server 08 MySQL 5 X MS Access Mongo DB Web Services SOAP Restful JAXRS JAXWS WSDL UDDI and Service Oriented Architecture SOA XMLHTML XSD XML SAX DOM HTML XHTML DHTML CSS Scripts JavaScript VB Script Design Skills UML Rational Rose Visio Object Oriented Analysis and Design OOAD Java Enterprise Design Patterns and Database design ERWIN Version Control Tools GIT Source Control VSS SVN Starteam Keystone Subversion16 Methodologies AgileScrum Methodology Waterfall Deployment and Testing Maven Ant Junit TestNG Operating Systems Windows 20032008 Windows XP UNIX Linux Windows 7 Tools Framework Struts Spring Hibernate JSF Junit SOAP UI Spring IOC Spring AOP Apache Camel Spring MVC WebApp Servers Web Sphere Apache Tomcat JBoss EAP WebLogic",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Kinderd",
        "Health",
        "Years",
        "Experience",
        "webapplication",
        "developer",
        "software",
        "development",
        "design",
        "python",
        "Django",
        "Java",
        "Webapp2",
        "Angularjs",
        "Reactjs",
        "HTMLCSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "Consumerbased",
        "custom",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "experience",
        "data",
        "engineering",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupiter",
        "Notebook",
        "PyCharm",
        "Emacs",
        "Spyder",
        "Visual",
        "Studio",
        "Strong",
        "expertise",
        "development",
        "applications",
        "Python",
        "Flask",
        "Dojo",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "J2EE",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "python",
        "Django",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTML",
        "CSS",
        "jQuery",
        "data",
        "visualization",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "React",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Anisole",
        "Anisole",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "python",
        "work",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "Testing",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Working",
        "experience",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "Frigate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MYSQL",
        "Oracle",
        "SQL",
        "Cassandra",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Experience",
        "List",
        "Comprehensions",
        "Python",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Experience",
        "CI",
        "tools",
        "Hudson",
        "Build",
        "Forge",
        "Jenkins",
        "builds",
        "Python",
        "Django",
        "MVC",
        "framework",
        "application",
        "Experience",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Kinderd",
        "Health",
        "Louisville",
        "KY",
        "June",
        "Present",
        "Description",
        "Kindred",
        "care",
        "support",
        "care",
        "illness",
        "injury",
        "care",
        "hospital",
        "rehab",
        "facilities",
        "home",
        "extent",
        "Responsibilities",
        "Business",
        "team",
        "requirements",
        "experience",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managing",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Developing",
        "Merge",
        "jobs",
        "Python",
        "loading",
        "data",
        "MySQL",
        "database",
        "Creating",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "Working",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Lambda",
        "functions",
        "Python",
        "process",
        "event",
        "AWS",
        "Lambda",
        "architecture",
        "AWS",
        "S3",
        "Buckets",
        "thumbnail",
        "create",
        "event",
        "user",
        "picture",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "Experience",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Experience",
        "Python",
        "packages",
        "modules",
        "Requests",
        "Scrapy",
        "Beautiful",
        "Soup",
        "Multithreading",
        "Pandas",
        "NumPy",
        "SciPy",
        "MatPlotlib",
        "wxPython",
        "QT",
        "Regex",
        "expressions",
        "SQL",
        "Alchemy",
        "SQL",
        "database",
        "connectiors",
        "JDBCODBC",
        "PyVirtual",
        "Environment",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systems",
        "IAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "Loading",
        "data",
        "Spark",
        "RDD",
        "memory",
        "data",
        "Computation",
        "Output",
        "response",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Maven",
        "POMs",
        "build",
        "process",
        "projects",
        "party",
        "tools",
        "Sonar",
        "Qube",
        "Responsible",
        "Sonar",
        "Qube",
        "code",
        "quality",
        "check",
        "Nexus",
        "repository",
        "generating",
        "reports",
        "projects",
        "Jenkins",
        "Help",
        "process",
        "Sonar",
        "Qube",
        "Presentations",
        "business",
        "value",
        "measurement",
        "scripts",
        "data",
        "access",
        "manipulation",
        "report",
        "functions",
        "R",
        "programming",
        "languages",
        "Formulating",
        "procedures",
        "integration",
        "R",
        "programming",
        "plans",
        "data",
        "sources",
        "delivery",
        "systems",
        "queries",
        "Spark",
        "SQL",
        "Scala",
        "Hands",
        "experience",
        "Apache",
        "Spark",
        "RDDs",
        "Data",
        "Frames",
        "operations",
        "Transformation",
        "Actions",
        "RDDs",
        "Data",
        "Frames",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "consume",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Dynamo",
        "DB",
        "Python",
        "Django",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spark",
        "Spark",
        "API",
        "Spark",
        "Sql",
        "Spark",
        "Streaming",
        "Spring",
        "framework",
        "React",
        "JS",
        "HTML",
        "Amazon",
        "S3",
        "Cloud",
        "Watch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Python",
        "Developer",
        "Samhita",
        "Tech",
        "May",
        "Present",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "SQL",
        "queries",
        "PLSQL",
        "functions",
        "Command",
        "Line",
        "Interface",
        "CLI",
        "tool",
        "hat",
        "Linux",
        "Pythons",
        "XML",
        "parser",
        "SAX",
        "DOM",
        "API",
        "amounts",
        "data",
        "DB",
        "Linux",
        "Services",
        "REST",
        "web",
        "services",
        "Shell",
        "script",
        "Build",
        "RPM",
        "Package",
        "Product",
        "upgrade",
        "features",
        "Design",
        "test",
        "cases",
        "REST",
        "API",
        "REST",
        "API",
        "test",
        "framework",
        "development",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Design",
        "test",
        "cases",
        "CLI",
        "automation",
        "Python",
        "Unit",
        "testing",
        "unit",
        "test",
        "cases",
        "PyUnit",
        "framework",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test",
        "Python",
        "Developer",
        "Mass",
        "Mutual",
        "Springfield",
        "MA",
        "February",
        "May",
        "Description",
        "Haven",
        "Life",
        "insure",
        "tech",
        "innovator",
        "Mass",
        "Mutual",
        "way",
        "life",
        "insurance",
        "culture",
        "startup",
        "stability",
        "backing",
        "Fortune",
        "company",
        "environment",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "web",
        "applications",
        "Flask",
        "frame",
        "works",
        "MVC",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "Bash",
        "Perl",
        "Python",
        "daytoday",
        "usage",
        "SQL",
        "Profiler",
        "Analytics",
        "query",
        "optimization",
        "maintenance",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Jenkins",
        "Continuous",
        "Integration",
        "builds",
        "deployments",
        "Build",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Installed",
        "Administered",
        "Jenkins",
        "CI",
        "Maven",
        "Builds",
        "Jenkins",
        "configuring",
        "integration",
        "CI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "scale",
        "data",
        "analytics",
        "machine",
        "learning",
        "models",
        "code",
        "coverage",
        "Sonar",
        "Qube",
        "scanner",
        "runner",
        "unit",
        "test",
        "plugins",
        "bugs",
        "style",
        "JUnit",
        "MavenHudson",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Integration",
        "data",
        "storage",
        "solutions",
        "Django",
        "ORM",
        "system",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "team",
        "QA",
        "DB",
        "standards",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Environment",
        "Python",
        "Django",
        "Java",
        "SQL",
        "Java",
        "Script",
        "Linux",
        "Shell",
        "Scripting",
        "Mongo",
        "DB",
        "HTML",
        "Angular",
        "JS",
        "React",
        "JS",
        "Eclipse",
        "jQuery",
        "JSON",
        "XML",
        "CSS",
        "MySQL",
        "Bootstrap",
        "Amazon",
        "s3",
        "Python",
        "Developer",
        "Everest",
        "Insurance",
        "Edison",
        "NJ",
        "April",
        "January",
        "Description",
        "Everest",
        "reinsurance",
        "insurance",
        "organization",
        "product",
        "distribution",
        "capabilities",
        "balance",
        "sheet",
        "culture",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "software",
        "research",
        "development",
        "performance",
        "lowlatency",
        "platform",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Design",
        "implementation",
        "lowlatency",
        "highavailability",
        "applications",
        "Implementation",
        "security",
        "data",
        "protection",
        "APIs",
        "database",
        "Model",
        "Views",
        "Utilization",
        "Python",
        "web",
        "page",
        "application",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "task",
        "management",
        "systems",
        "Python",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Installing",
        "Hadoop",
        "Map",
        "HDFS",
        "AWS",
        "MapReduce",
        "jobs",
        "Hive",
        "data",
        "CRUD",
        "operations",
        "applications",
        "MVC",
        "Model",
        "View",
        "Controller",
        "architecture",
        "Django",
        "framework",
        "Python",
        "code",
        "database",
        "management",
        "optimization",
        "Python",
        "jQuery",
        "JavaScript",
        "AJAX",
        "end",
        "multipage",
        "web",
        "application",
        "forms",
        "forms",
        "user",
        "templates",
        "design",
        "implementation",
        "Python",
        "code",
        "APIs",
        "Flask",
        "Database",
        "modeling",
        "design",
        "implementation",
        "web",
        "application",
        "PythonDjango",
        "Git",
        "version",
        "control",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Develop",
        "user",
        "representation",
        "catalogue",
        "items",
        "piece",
        "equipment",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "experience",
        "environments",
        "development",
        "testing",
        "production",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "HTML",
        "JavaScript",
        "XML",
        "jQuery",
        "Restful",
        "CSS",
        "Git",
        "JIRA",
        "Python",
        "Developer",
        "UBS",
        "Financial",
        "Services",
        "Weehawken",
        "NJ",
        "January",
        "March",
        "Description",
        "UBS",
        "services",
        "company",
        "investment",
        "banking",
        "asset",
        "management",
        "wealth",
        "management",
        "services",
        "clients",
        "project",
        "Loan",
        "Application",
        "Processing",
        "System",
        "Customers",
        "Loan",
        "outline",
        "forms",
        "security",
        "credit",
        "check",
        "System",
        "loan",
        "application",
        "business",
        "rules",
        "RAC",
        "Risk",
        "Acceptance",
        "CriteriaThe",
        "loan",
        "information",
        "Oracle",
        "g",
        "database",
        "Bank",
        "employees",
        "customers",
        "customer",
        "service",
        "representatives",
        "filter",
        "loan",
        "applications",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirement",
        "gathering",
        "system",
        "configuration",
        "specifications",
        "client",
        "interaction",
        "Developed",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "service",
        "Python",
        "Flask",
        "framework",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "REST",
        "Web",
        "services",
        "business",
        "methods",
        "services",
        "project",
        "Interface",
        "Django",
        "Salesforce",
        "Django",
        "RESTAPI",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "Application",
        "software",
        "tools",
        "clients",
        "customers",
        "organization",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "SQLite",
        "Responsible",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "AJAX",
        "Tomcat",
        "Apache",
        "HTTP",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "Shell",
        "Scripting",
        "GIT",
        "Hub",
        "MYSQL",
        "Cassandra",
        "JIRA",
        "Python",
        "Developer",
        "Orion",
        "Systems",
        "Integrators",
        "Inc",
        "Woodcliff",
        "Lake",
        "NJ",
        "October",
        "December",
        "Description",
        "Orion",
        "IT",
        "services",
        "solutions",
        "industry",
        "leaders",
        "companies",
        "business",
        "transformation",
        "approach",
        "solutions",
        "mindset",
        "business",
        "processes",
        "ways",
        "Responsibilities",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "sales",
        "data",
        "years",
        "model",
        "sales",
        "understanding",
        "Balance",
        "sheet",
        "Daily",
        "Income",
        "sheet",
        "analysis",
        "profit",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Experience",
        "ad",
        "reports",
        "MS",
        "Excel",
        "builder",
        "SSRS",
        "SSIS",
        "packages",
        "data",
        "transformations",
        "column",
        "lookup",
        "confidential",
        "split",
        "merge",
        "join",
        "sort",
        "SQL",
        "task",
        "data",
        "database",
        "inventory",
        "forecasts",
        "managers",
        "performance",
        "issues",
        "custom",
        "reports",
        "management",
        "companys",
        "business",
        "process",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "demoralization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Anisole",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Agulars",
        "Developed",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "Cloud",
        "Watch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "JavaJ2EE",
        "JDK",
        "Generics",
        "Multithreading",
        "Serialization",
        "Exception",
        "Handling",
        "RMI",
        "File",
        "IO",
        "JDBC",
        "1x2x3x",
        "JNDI",
        "JSP",
        "JavaBeans",
        "XML",
        "Beans",
        "JAXP",
        "Web",
        "Services",
        "SOAP",
        "FrameworkLibraries",
        "Struts",
        "spring",
        "EJB",
        "Hibernate",
        "2x3x",
        "MQ",
        "WebLogic",
        "Portal",
        "JAXWSJAXRS",
        "SOA",
        "DOJO",
        "LOG4J",
        "Middleware",
        "Web",
        "Services",
        "RMI",
        "WebApplication",
        "Servers",
        "BEA",
        "WebLogic",
        "7x8x9x10x",
        "WebSphere",
        "Apache",
        "Tomcat",
        "5x6x",
        "IDE",
        "IBM",
        "RAD",
        "Eclipse2135",
        "SOAPUI",
        "XML",
        "Spy",
        "Borland",
        "Together",
        "JBuilder",
        "XML",
        "Oracle",
        "g",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "X",
        "MS",
        "Access",
        "Mongo",
        "DB",
        "Web",
        "Services",
        "SOAP",
        "Restful",
        "JAXRS",
        "JAXWS",
        "WSDL",
        "UDDI",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "XMLHTML",
        "XSD",
        "XML",
        "SAX",
        "DOM",
        "HTML",
        "XHTML",
        "DHTML",
        "CSS",
        "Scripts",
        "JavaScript",
        "VB",
        "Script",
        "Design",
        "Skills",
        "UML",
        "Rational",
        "Rose",
        "Visio",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "Java",
        "Enterprise",
        "Design",
        "Patterns",
        "Database",
        "design",
        "ERWIN",
        "Version",
        "Control",
        "Tools",
        "GIT",
        "Source",
        "Control",
        "VSS",
        "SVN",
        "Starteam",
        "Keystone",
        "Subversion16",
        "Methodologies",
        "AgileScrum",
        "Methodology",
        "Waterfall",
        "Deployment",
        "Testing",
        "Maven",
        "Ant",
        "Junit",
        "TestNG",
        "Operating",
        "Systems",
        "Windows",
        "Windows",
        "XP",
        "UNIX",
        "Linux",
        "Windows",
        "Tools",
        "Framework",
        "Struts",
        "Spring",
        "Hibernate",
        "JSF",
        "Junit",
        "SOAP",
        "UI",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Apache",
        "Camel",
        "Spring",
        "MVC",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBoss",
        "EAP",
        "WebLogic"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:58:19.738458",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Kinderd Health Having 7 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs Reactjs HTMLCSS JavaScript and jQuery Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle SDLC strong experience in data engineering Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Strong expertise in development of webbased applications using Python Flask Dojo XML CSS DHTML JavaScript JSON and jQuery J2EE Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS React JS JavaScript jQuery and Node JS Used Anisole and Anisole Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash python to automate repetitive work Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and Testing Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Frigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Used Python Django MVC framework to design and develop the application Experience in Kubernetes that provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Work Experience Python Developer Kinderd Health Louisville KY June 2018 to Present Description Kindred provide care and support in the most appropriate care setting for those recovering from illness or injury Whether youre receiving care in our hospital one of our rehab facilities or even at home were here to ensure you recover to the fullest extent possible Responsibilities Interacting with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involve in infrastructure as code execution plans resource graph and change automation using Terraform Managing AWS infrastructure as code using Terraform Developing Merge jobs in Python to extract and loading data into MySQL database Creating Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implementing Terraform to manage the AWS infrastructure and managing servers using configuration management tools like Chef and Ansible Developing file cleaners using Python libraries and make it clean Working on MVC architecture using PHP Python as controller Building numerous Lambda functions using Python and automating the process using the event created Creating an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Working on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experience in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performing S3 buckets creation policies on IAM role based polices MFA and customize the JSON template Automating various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Writing ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Working in MySQL database on simple queries and writing Stored Procedures for normalization Deploying the project into Jenkins using GIT version control system Learning to index and searchquery large number of documents inside Elastic search Taking part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy Beautiful Soup Multithreading Pandas NumPy SciPy MatPlotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loading the data into Spark RDD and do in memory data Computation to generate the Output response Configuring and maintaining Jenkins to implement the CI process and integrating the tool with Ant and Maven to schedule the builds Creating Maven POMs to automate build process for the new projects and integrate them with third party tools like Sonar Qube Responsible for installing and administrating the Sonar Qube for code quality check and Nexus repository and generating reports for different projects Also integrate them into Jenkins Help to understand the process of Sonar Qube through Presentations and other business value measurement Preparing scripts to ensure proper data access manipulation and report functions with R programming languages Formulating procedures for integration of R programming plans with data sources and delivery systems Involve in writing queries in Spark SQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and convert RDDs to Data Frames Working with View Sets in DjangoREST framework for providing web services and consume web services performing CRUD operations Using Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Using AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 36 Django API Gateway Java J2EE REST API Spark Spark API Spark Sql Spark Streaming Spring framework AngularJS React JS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Samhita Tech May 2011 to Present Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test Python Developer Mass Mutual Springfield MA February 2017 to May 2018 Description Haven Life is an insure tech innovator at Mass Mutual that offers a new way to get life insurance online thats actually simple They combine the culture of a startup with the stability and backing of a Fortune 500 company to create an environment thats truly unique Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Mentored large scale data and analytics using advanced statistical and machine learning models Researched and implemented code coverage using Sonar Qube scanner and runner and unit test plugins like find bugs check style and JUnit with MavenHudson Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS React JS Eclipse jQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Everest Insurance Edison NJ April 2016 to January 2017 Description Everest is a leading global reinsurance and insurance organization with extensive product and distribution capabilities a strong balance sheet and an innovative culture Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Provided advanced software research and development for high performance lowlatency platform Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Design and implementation of lowlatency highavailability and performant applications Implementation of security and data protection Created APIs database Model and Views Utilization Python to build responsive web page application Used python scripts to update content in the database and manipulate files Redesigned existing task management systems using Python Involved in frontend and backend modules using Python on Django Web Framework Involved in Installing Hadoop Map Reduce HDFS and AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Efficient database management optimization and caching Used Python jQuery JavaScript and AJAX at the front end Created multipage web application forms and nested forms for user to customize the templates Involved in design implementation and modifying the Python code Developed Restful APIs using Flask Database modeling and design Involved in developing and implementation of the web application using PythonDjango Used Git for the version control Involved in Unit testing and Integration testing Develop user friendly and sophisticated graphical representation of the catalogue of items that would be configured for a piece of equipment Worked on object oriented programming OOP concepts using Python Django Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Environment Python Django MySQL HTML JavaScript JSON XML jQuery windows Restful CSS Git JIRA Python Developer UBS Financial Services Weehawken NJ January 2015 to March 2016 Description UBS is a Swiss global financial services company It provides investment banking asset management and wealth management services for private corporate and institutional clients worldwide This project is mainly developing and reengineering Loan Application Processing System Customers can apply for a Loan online by filling out outline forms which go through security and credit check System checks the loan application against the business rules called RAC Risk Acceptance CriteriaThe loan information is maintained in Oracle 11g database Bank employees customers and customer service representatives can search filter and view loan applications Responsibilities Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Involved in Developing a Restful service using Python Flask framework Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Installed and maintained web servers Tomcat and Apache HTTP in UNIX Wrote Python modules to view and connect the Apache Cassandra instance Involved in develop the REST Web services to expose the business methods to external services in the project Built an Interface between Django and Salesforce and Django with RESTAPI Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Environment Python 27 and 30 Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Orion Systems Integrators Inc Woodcliff Lake NJ October 2013 to December 2014 Description Founded in 1993 Orion provides innovative IT services and solutions to global industry leaders as well as millennial companies to help them achieve business transformation With a consultative approach and solutions driven mindset we reinvent your business processes with new and better ways of working Responsibilities Developed web applications in Django Frameworks model view control MVC architecture Analyzed the departmental sales data over the years and developed predictive model to forecast the sales Developed a strong understanding of Balance sheet Daily Income sheet and performed financial analysis of profit Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in creating ad hoc reports by using MS Excel and report builder in SSRS 2008 Created SSIS packages by using different data transformations like derived column lookup confidential split merge join sort and execute SQL task to load data into database Reported monthly projected inventory forecasts to managers along with any performance issues Crafted custom reports for management that outlined the companys business process was strong and weak Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and demoralization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Anisole Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Agulars Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Additional Information Technical Skills JavaJ2EE JDK 1718Collections Generics Multithreading Serialization Exception Handling RMI File IO JDBC 1x2x3x JNDI 1112Servlets 212225 JSP 101112 JavaBeans XML Beans JAXP Web Services SOAP FrameworkLibraries Struts 1x2x spring 2x EJB 2x Hibernate 2x3x iBatis2x MQ WebLogic Portal 103Apache Axis20 JAXWSJAXRS SOA Ajax DOJO 13 LOG4J Middleware Web Services RMI WebApplication Servers BEA WebLogic 7x8x9x10x WebSphere 75 Apache Tomcat 5x6x IDE IBM RAD 75 Eclipse2135 SOAPUI XML Spy Borland Together JBuilder XML Databases Oracle 8i9i10g MS SQL Server 200020052008 MySQL 5 X MS Access Mongo DB Web Services SOAP Restful JAXRS JAXWS WSDL UDDI and Service Oriented Architecture SOA XMLHTML XSD XML SAX DOM HTML XHTML DHTML CSS Scripts JavaScript VB Script Design Skills UML Rational Rose Visio Object Oriented Analysis and Design OOAD Java Enterprise Design Patterns and Database design ERWIN Version Control Tools GIT Source Control VSS SVN Starteam Keystone Subversion16 Methodologies AgileScrum Methodology Waterfall Deployment and Testing Maven Ant Junit TestNG Operating Systems Windows 20032008 Windows XP UNIX Linux Windows 7 Tools Framework Struts Spring Hibernate JSF Junit SOAP UI Spring IOC Spring AOP Apache Camel Spring MVC WebApp Servers Web Sphere Apache Tomcat JBoss EAP WebLogic",
    "unique_id": "26811af1-feb7-44dd-8ffa-d53f515ad215"
}