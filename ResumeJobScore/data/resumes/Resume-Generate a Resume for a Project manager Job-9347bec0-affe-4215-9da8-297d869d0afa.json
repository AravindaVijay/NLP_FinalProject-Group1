{
    "clean_data": "Sr JavaJ2ee Full Stack Developer Sr span lJavaspanJ2ee Full Stack span lDeveloperspan Sr JavaJ2ee Full Stack Developer OptumUnited Health Group Minneapolis MN 9 years of IT experience in Design Development Implementation and Testing of applications using JavaJ2EE Experience working with Software Development Life CycleSDLC methodologiesAgile Scrum Waterfall Model Experience in implementing Java EE design patterns such as MVC Singleton Abstract Factory Session Faade DAO DTO and business Delegate in the development of MultiTier distributed Enterprise Applications Experience in developing UI applications using HTML CSS Backbone Js Bootstrap Angular React Ajax Nodejs JSP Extensive experience in Core Java concepts like Exception Handling MultiThreading Synchronization Serialization IO Collections Framework Java Beans Experience in developing JavaJ2EE applications using JSP JSF Servlets Struts Spring Hibernate Webservices SOAP REST XML XSD XSL and JNDI Experience with Spring MVC IOC Spring JDBC Spring JTA Spring IO Spring Boot Spring Dashboard Spring Microservices Spring Ribbon Spring Netflix Spring Zuul Spring Eureka with Thymeleaf Experience in Spring Security for User Access Management and LDAP configuration for authentication Experienced in Middleware persistence frameworks like HibernateJPA for mapping java classes with database using HQL Experienced in working on modern MEAN stack MongoDB ExpressJS AngularJS and NodeJS Knowledge and experience in working with messaging brokers like Apache Kafka Active Mq Rabbit Mq Developed SQL queries procedures Triggers and Stored Procedures in database such as Oracle DB2 and MYSQL Experienced in working with multiple databases like Oracle 1011g MySQL MongoDB Cassandra and involved in converting CassandraSQL queries to Spark transformation using Spark RDDs Hands on experience with Amazon Web ServicesAWS like EC2 S3 Elastic Beanstalk ELB Load Balancers RDS VPC Route53 Cloud Watch Cloud Formation IAM SNS SQS Hands on experience with Devops tools like DockerKubernetes JenkinsCICD and knowledge on Chef Puppet Ansible Experience in creating rules using Business Rules Engines like Drools ILOG JBPM Good knowledge on Apache Storm which is used for realtime Stream processing and endtoend delivery response Experience in using different version controllingtracking systems Subversion CVS GIT and Rational Clear CaseExperienced in developing UNIX shell scripts for batch processing Experience in using build tools like ANT GRADLE MAVEN to compile package the components to application servers Experienced in developing UNIX shell scripts for batch processing Hands on experience with Integrated Development EnvironmentIDE like Eclipse IntelliJ Spring Tool SuiteSTS Experience in testing frameworks like Junit Mockito TestNG Power mock Easy mock Expertise in Selenium automation using Selenium Web Driver Selenium Grid JAVA Junit and Maven Maintained the Selenium and JAVA automation code and resources in source controls like GIT CVS and SVN Experience in configuring and deploying the applications and messaging on Tomcat WebSphere WebLogic and JBOSS Authorized to work in the US for any employer Work Experience Sr JavaJ2ee Full Stack Developer OptumUnited Health Group Minneapolis MN US October 2017 to Present Optum is health services and Innovation Company It powers modern health care by modernizing infrastructure advancing care and improving experiences Helped in production and managing of HTML pages redesign old legacy systems within the company as well as to help design a project to rebuild the internal intranet system for various departments Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Developed applications using new features of Java 1718 like Annotations Generics enhanced for loops and Enums Worked with Angular CLI and Typescript in Angular 24 to create Angular components Worked with Advanced Java 8 features like Lambda filters and Predicates for adding functionality processing capability and Stream API to facilitate pipeline processing and method to eliminate elements based on the criteria Developed UI layer for the application using HTML5 CSS3 Angular 2 and Bootstrap Worked on media queries as a compliment to the grid system of UI Bootstrap to facilitate the implementation Experience in using PrimeNG to create UI components and to create robust services and UI widgets Created arrange loop directive and components like data binding dependency injection in Angular 2 Involved in building single page cross browser compatible applications using Angular 2Angular Routing Created the Nodejs server to build MVC framework from frontend side Angular 2 to backend Oracle Worked with advanced MVC framework such as SpringIOC MVC and Batch to implement backend functionality Heavily used Spring Inheritance Auto Wiring CoreContainer Security ORM modules as part of migration from EJB to Spring Spring Quartz for scheduling tasks to generate reports Implemented SOA to develop Spring Restful and implemented Spring Eureka Netflix Ribbon using Apache AXIS Created and injected Spring services Spring Controllers and the DAOs to achieve DI and to wire objects Participated in coding Spring AOP components for the Logging Exception handling and Transactional Models Developed Spring Boot application with microservices and deployed in AWS using EC2 instances Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Worked with Kafka Cluster using Zookeeper apart from JMS as messaging service Developed Web APIS using Restful web services which can be accessed from various tools and enable CNC employees to access information on member activities Implemented Spring circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Worked on the creation of custom Docker container images tagging pushing images integration of Spring Boot Used Hibernate JPA ObjectRelationalMappingORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQL based schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Hands on experience withCassandra Installation Configuring Monitoring and Designing Shared Environment Worked on Cassandra concepts such as locking transactions indexes replications schema design Followed Java and J2EE design patterns like Singleton Service Locator Session Faade DAO during development Developed API for using AWS Lambda to manage the servers and run the code in the AWS Generated Scala and Java classes from the respective APIs so that they can be incorporated in the overall application Performed configuration deployment and support of cloud services including Amazon Web Services AWS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Developed API for using AWS Lambda to manage the servers and run the code in the AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Developed applications using Rule Engines Drools4x Work Flows Human tasks to implement business rules validations Integrated the JBPM with the Spring Framework in the enterprise layer Designed and implemented Oracle 11g database to record the collateral securities and settlement data Integrated the JBPM with the Spring Framework in the enterprise layer Wrote SQL queries stored procedures and enhanced performance by running explain plans Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Involved in using Gray log validation tool to validate logs Developed Integration test suites for all services invoking python scripts using JSON Experience with WebLogic application server to deploy the applications and configure multiple data sources messaging Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Worked on Elastic Search and Kibana for reporting different logs of data Environment Java 8 J2EE Spring Spring Boot Spring Security Spring Eureka Netflix Ribbon Hibernate Angularjs24 HTML5 CSS 3 JavaScript JQuery and CSS SOAP WebSphere JBoss Eclipse GIT GitHub Apache Kafka Apache Camel Zookeeper Docker AWS JUnit Jenkins MongoDB Oracle Karma Jasmine Grunt Bower Sr JavaJ2ee Full Stack Developer PNC BANK Pittsburgh Pennsylvania US July 2016 to September 2017 PNC takes a personal interest in your banking needs mortgage investing credit card insurance consumer and commercial financial services This project is based on tracking portfolio growth view investment allocations access account information and view transfers and payments Responsibilities Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Involved in various SDLC phases like Requirement gathering Design Analysis Code development and Deployment Applied Agile Test Practices SCRUM Scripted Test Cases for Test Driven Development TDD and developed test cases for story card based on Acceptance Test Driven Development ATDD Active in coding some of the Core Java concepts such as collections generics and multithreading Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set and Design patterns Developing web pages using HTML5 CSS3 JavaScript and used twitter Bootstrap for cross browser compatibility Extensive experience with AngularJS creating custom directives decorators and services to interface with both restful and legacy network services also DOM applications Involved in implementing the complete Application in the inbuild MVC Architecture with Angular js Used dateformat and moment packages in Nodejs to save the timestamp in database converting into GMT Created proofofconcept using responsive web design Nodejs HTML5 and CSS3 Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Developed spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Used popular Nodejs frameworks like Express and Restify to mock a Restful api Deep dive into the nodejs internal to understand nodejs internal performance and memory area and performance related optimization Design develop test and deliver Nodejs modules implementing various reusable services as well as parts of a central component in the platform the App Router Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Created AWS EBS volumes for storing application files for use with AWS EC2 instances whenever they are mounted to them Designed and developed UI screens with XSLT and JSF MVC to provide interactive screens to display data Developed API for using AWS Lambda to manage the servers and run the code in the AWS Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store data Extensively worked on JPA as persistence layer involving EJB30 annotations Spring Boot Micro services were developed with micro service architecture using SOAP and Apache Camel Integrated configured Camel with ActiveMQ to use it as bus Implemented a SOA compliant system working on various transactional messaging using Camels and used Session Beans Message Driven Beans Worked on Jenkins and Docker interactively and integrating together for end to end automation of builds and deployment Configured the Hibernate configuration files to persist the data to the MongoDB database Worked on Mongo DB concepts such as locking transactions indexes replications schema design Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via JSON response and updating HTML pages Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in spring boot Micro Service Applications Developed Docker images to support Development and Testing Used version control repository SVN Subversion by apache and JIRA for issue tracking Researched and trouble shooted emerging application issues from WebLogic configuration to code issues Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used Log4j framework to logtrack application Environment HTML CSS Bootstrap AJAX Multithreading JavaScript JSF 21 Angular JS Spring 3x Hibernate 3x Soap UI Maven SVN JIRA Docker Web sphere SOAP web service UnixLinux Selenium Web Logic Application Server Sr JavaJ2EE Full Stack Developer Omnicare Columbus OH US February 2015 to June 2016 Omnicares ekit system is a high performance flexible automated system A formulary is created to deliver medicines to facilities A faulty manual system where every billing was manual is now automated The facilities place the orders online and any discrepancies are reported within a week This package provides a powerful way of userdriven application with transparency security and ease in data access Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development and Customization of the Application Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed agile methodology in the Scrum Cycle model to help respond quickly to business needs Used Spring Inversion of Control IOC for injecting the beans and reduced the coupling between the classes Implemented the Model View Controller using Spring MVC Used Spring actuatorconfiguring Spring Boot application monitoring and invoking HTTP endpoints Implemented the application using Spring Boot Framework and handled the security using SpringSecurity Used XML Web Services using SOAP to register agents using non java application Curl is a command line tool for doing all sorts of URL manipulations and transfers Developed services that are reusable and interoperable based on SOAP WSDL JAXWS JAXRPC Web services by exchanging XML data between applications over HTTP Used JMS for the asynchronous exchange of critical data and events among J2EE components PublisherSubscriber method was used for data loading and PointToPoint method of JMS was used for event processing Involved in writing DAO DTOs using Hibernate DAO Support Implemented persistence layer using Hibernate that uses the POJOs which do not have the business processes to represent the persistence database tuples Worked with POJO for handling data coming from the legacy systems Configured SwaggerUI registered Micro service with Eureka server to monitor service health check Utilized Object Oriented Programming in JavaScript and DOM structure to implement various functionalities and DOM parser to parse the XML documents and XSLT for transformations Developed Interactive web pages using HTML5 CSS3 and JavaScript Develop various screens for the front end using Angular JS and used various predefined components from Node NPM Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Coded pages with best Search Engine Optimization SEO techniques Designed applications that execute on various browsers such as Internet Explorer Mozilla Firefox Google Chrome and Opera using various debugging tools like FirebugsIE Developer Tools Used MongoDB and Oracle DB for the application The legacy info was going to Oracle and rest to MongoDB Performed CRUD operations like Update Insert and Delete data in MongoDB Continuous integration services are provided for software development using JENKINS Implemented security for different frontend views based on the access privileges Spring with Tiles Framework is implemented for a common look in all the presentation views The application is designed using J2EE design patterns and technologies based on MVC architecture Used J2EE design patterns like Value Object Pattern Session faade Singleton Factory and DAO Developed JUnit test cases for DAO and Service Layer methods for all the developed modules Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Developed the ANT scripts for preparing WAR files used to deploy J2EE components Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG Used GIT as version management JIRA for defect management system Used Log4J to capture the log that includes runtime exceptions Used RAD IDE based on Eclipse for writing code for JSP Action Classes and spring beans Interacted with quality assurance team for requirements gathering and analysis Environment Java J2EE Spring Spring DI Spring Actuator Spring Boot Spring Security SOAP WSDL JAXWS JAXRPC JMS Curl Hibernate HTML5 CSS3 Angular JS JavaScript jQuery Swagger JENKINS JSP AJAX Eureka Cassandra ANT GIT JIRA Sr Java J2EE Developer Guide One Insurance West Des Moines IA US July 2013 to January 2015 The PLPAS Project represents a major overhaul of the GuideOne Personal Lines business unit The program will involve analysis and making changes to products processes technology staffing distribution and marketing The objective of this initiative is to deliver administrative processes and underlying system capabilities necessary for the personal lines business unit to achieve their 10year strategic objectives It also implements the integrations to existing systems and vendors associated with the GuideOne PLPAS The GuideOne Personal Lines Rater PLR is an easytouse business tool It can be used to quote new business for Auto Home and Personal Excess Liability Using this system agent can create a new quote or view a specific agents quotes and issue policies Responsibilities Involved in preparing System Requirements and detailed Design document for the project Extensively used various modules in Spring like AOP DI IOC Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in developing components on Reporting Dashboard with Spring MVC Spring Framework Spring Security and Hibernate and created Microservices using Spring Boot Designed and developed the End Points Controllers Business Layer DAO Layer using Hibernate Hibernate Transaction Managementand Spring IOC Dependency Injection Extensively worked on JPA as persistence layer and Java Messaging ServiceJMS involving EJB30 annotations synchronizing Data base tables through XML in a secondary project Extensively used Session beans for implementing the business logic of module Developed Web Services SOAPHTTP SOAPJMS SMTP using SOA technologies such as SOAP WSDL and UDDI Heavily used SOAP UI Pro version for testing the Web Services Involved in consuming producing SOAP based web services using JAXWS Developed UI application modules using HTML CSS and JavaScript JSON jQuery and AJAX Used Bootstrap library to build application UIs and used AngularJS to associate HTML elements to models Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response jQuery opinionated about how a CRUD application should be built Creating crossbrowser compatible and standardscompliant CSSbased page layouts ClientSide code were written in ReactJS JQuery and serverSide Code were developed using MVC4 Used Angular Routing for navigating between screens and developed several reusable directives Database development required creation of new tables PLSQL Stored Procedures Views Indexes and Constraints Triggers and required SQL tuning to reduce the response time in the application Utilized DOM SAX parser technologies in implementing XML parsing framework Extensively used MVC Factory Delegate and Singleton design patterns Used AWS Amazon Web Services stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM Deploying managing and operating scalable highly available and fault tolerant systems Implemented responsive web design using Bootstrap and Apache Cordoba Created and Written automated regression tests using JMeter scripts for load testing Used JMeter for stress testing Selenium WebDriver for testing the automation code Develop unit test using Karma and Jasmine Followed strict patterns of RA team for unit test cases with jasmine to verify AngularJS modules and JavaScript utility routines Installed and configured WebSphere Process Server 61 and WebSphere ESB 61 WID Used version control repository SVN Subversion by apache and JIRA for issue tracking Environment Java J2EE Spring MVC Spring Security Spring Boot Spring MVC Spring IOC JPA Hibernate JMS SOAP WSDL UDDI HTML CSS JavaScript JSON jQuery AJAX AngularJS PLSQL AWS Apache Cordoba JMeter Karma Jasmine WebSphere SVN Sr Java Developer Mercury Insurance Group Los Angeles CA US June 2012 to June 2013 The insurancebased company provides insurance for car homes Condo business auto insurance etc The developed application provides web based online insurance services Application also supports features for customer care services and internal reporting and log maintenance The application had been developed using Struts framework along with hibernate and log4j Responsibilities Involved in analysis design and development of Expense Processing system and developed specs that include Use Cases Class Diagrams Sequence Diagrams and Activity Diagrams Well experienced in Core Java asynchronous programming multithreading collections and a few design patterns Taken care of complete Java multithreading part in back end components Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report and Spring for cross cutting concerns and IOC for dependency injection Used Hibernate in data access layer to access and update information in the database Used Web services WSDL and SOAP for getting credit card information from third party Used Hibernate Transaction Management Hibernate Batch Transactions cache concepts Designed various tables required for the project in MySQL database and used the Stored Procedures in the application also worked on the system landscape includes configuring Linux and SQL database Developed several annotated managed beans and integrated with Spring 3x framework Used AJAX Framework for Dynamic Searching of Bill Expense Information Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Developed JUnit test cases for all the developed modules Used CVS for version control across common source code used by developers Used ANT scripts to build the application and deployed on WebSphere Application Server Involved in designing and implementation of Session Facade Business Delegate Service Locator patterns to delegate request to appropriate resources in the development of MultiTier distributed Enterprise Applications Worked on Ext JS for user interface widgets with High performance scalable grids trees and menus Deployed the applications on IBM WebSphere Application Server Environment Core Java J2EE JSP JavaScript Spring JMS Hibernate MYSQL Eclipse 34 log4j JUnit HTML40 CSS MySQL XML CVS JavaJ2EE Developer JPMorgan Chase NY US November 2010 to May 2012 CSR Dashboard is an internal facing application accessed via the Prime View portal which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events with Corporate Actions and Money Transfer events to follow This tool provides a CSR centric view of all key events for all families supported by a CSR Team Lead or Area Manager As of today Option Exercise and Corporate Actions have been on boarded Responsibilities Identified the Business requirements of the project and involved in preparing System Requirements Involved in preparing the Detailed Design document for the project by extensively using MVC Factory Delegate and Singleton design patterns and used Java 14 for the compilation Developed the middle tier using EJBs Java Servlets and debugged the servlets and EJB with WebSphere Application server also developed session entity beans and message driven beans Used XMLXSLT for transforming common XML format and SAML for Single SignOn Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response and configured XML Schema for the application Handled Java multithreading part in backend component one thread will be running for each user Used SOAP for Web Services by exchanging XML data between applications over HTTP Designed and developed the UI using JSP HTML CSS and JavaScript AJAX JSON Whereas JavaScript is used for the clientside validation and developed Web GUI involving Java Script under MVC architecture Used Spring Framework AOP Module to implement logging in the application to know the application status Used Spring DAO Module to deal with Database Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code along with singleton to achieve clean separation of layers MQ was used to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS which involves communications without side systems Junit tests were written and performed unit test to test each module in the application Wrote Ant Scripts for preparing WAR files to automate the build and to deploy J2EE components Involved in Code Review Unit Testing and Integration Testing Designed the data flow for the clientside screens and the object interaction layer for the serverside components using Rational Rose Case Diagrams Class Diagrams and Sequence diagrams Environment Core Java J2EE JSP JavaScript EJB HTML CSS JavaScript AJAX JSON XMLXSLT SOAP Junit Java Servlets Rational Rose Software Engineer Sasken Communication System Ltd June 2009 to September 2010 This project is designed to provide a standard interface to control TVs Hifi equipment etc to allow a single remote control to control all the AV equipment to which a user has access The procedure of this profile specific AVC command is an extension of the AVC digital interface command It supports Handsfree as well as handsets both This profile gives the facility to the user to play the music with Bluetooth Dongle and remote control is also supported under Microsoft Window Media Player Responsibilities Involved in Requirement Analysis to understand the Company needs for various downstream systems Created the design using class diagrams and sequence diagrams Involved in deciding the WEB Service architecture with XML and SOAP for integrating with heterogeneous systems and to register agents using non java applications Designed and implemented SOAP XML Request and Response WEB Service WSDL using XML SPY Implemented WEB Service using Apache SOAP API 21 WASD Designed and implemented subsystem for administrative tasks like verify data loads consistency check and notify clients for data extract using SERVLETS session and Entry bean and java classes Developed dynamic WEB screens Customization of the screens done using JSP Designed and guided the team for implementing Client module and XSL conversions for transforming common XML format and SAML for Single SignOn using XSLT XALAN Tested and debugged SERVLETS JSP using Visual age JSP execution monitor Implemented various design patterns in the project such as Business Delegate Data Transfer Object Data Access Object Service Locator and Singleton Used JDBC for communicating with the database for developing business module applications Involved in writing XML documents Involved in writing build scripts using UNIX Handled database interaction writing SQL Queries Oracle 8i was used as Database for central Fund repository and designed Health Check module to monitor current health of the system The service was deployed on WEBSPHERE 40 Environment Core Java J2EE JSP WSDL JavaScript SQL SAML Oracle 8i SERVLETS UNIX WEBSPHERE 40 Education Bachelors Skills database 9 years J2ee 9 years Java 9 years JavaScript 9 years SOAP 9 years Additional Information SKILL SET JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java161718 C C SQL Scala PLSQL ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Frameworks Struts 2x1x Spring 4x3x 2x Hibernate 3x JSF 1220 iBatis Flex UI Frameworks jQuery AngularJS NodeJS ReactJs Bootstrap IDEs Eclipse 3x IBM WSAD IntelliJ Dream viewer Web technologies HTMLHTML5 CSSCSS3 XHTML JavaScript Ajax jQuery AngularJS24 JSON BackBonejs Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI XML Tools JAXB Apache Axis Methodologies Agile Scrum RUP TDD OOAD SDLC Modeling Tools UML Rational Rose Visio Testing technologiestools JUnit JMeter HTML Unit Database Servers Oracle 8i9i10g11G DB2 SQL Server 08 MySQL NOSQLMongoDB Cassandra Version Control Git CVS SVN Build Tools Gradle Maven ANT Platforms Windows 20009895NT40 Linux UNIX Mac Windows Containerization Tools Docker Dockerswarm Kubernetes Cloud Developments EC2S3Elastic ELB Spring PCFpivotal cloud foundry",
    "entities": [
        "CassandraSQL",
        "Maven Maintained",
        "AJAX",
        "HTMLHTML5 CSSCSS3",
        "Analysis Design Development System Testing",
        "Design Development Implementation and Testing",
        "Nodejs",
        "WebSphere Application",
        "WEBSPHERE 40 Environment",
        "ELB Spring PCFpivotal",
        "UNIX",
        "Oracle Worked",
        "Implemented Spring",
        "JMS",
        "Camels",
        "UDDI Heavily",
        "Responsibilities",
        "Researched",
        "JTA",
        "HTTP",
        "the AWS Utilized AWS Lambda",
        "Used Hibernate Transaction Management Hibernate Batch Transactions",
        "JSON",
        "MVC Spring",
        "Los Angeles",
        "IBM",
        "Created AWS EBS",
        "Hibernate Session Factory",
        "CVS",
        "SVN Subversion",
        "Dongle",
        "Camel",
        "WEB Service",
        "SOAP",
        "XML",
        "JavaScript Develop",
        "WebLogic",
        "Software Development Life Cycle SDLC",
        "Use Cases Class Diagrams",
        "Rational Clear CaseExperienced",
        "Hibernate 3x Soap",
        "the GuideOne Personal Lines",
        "Devops",
        "Amazon S3",
        "JavaJ2EE",
        "Amazon",
        "Amazon Web Services AWS Configured AWS Identity and Access Management IAM Groups",
        "Pennsylvania",
        "WebSphere",
        "WEBSPHERE 40",
        "Struts Spring Hibernate Webservices",
        "Stream",
        "PointToPoint",
        "JAXWS Developed UI",
        "Oracle Relational",
        "Apache AXIS Created",
        "JPA",
        "Middleware",
        "Response WEB Service",
        "AWS S3",
        "DI",
        "Version Control",
        "Curl",
        "AV",
        "Tomcat WebSphere WebLogic",
        "System Requirements",
        "Utilized",
        "Spring MVC",
        "Jenkins Involved",
        "RAD",
        "WebSphere Application Server Involved",
        "Responsibilities Involved",
        "Used Spring Framework AOP Module",
        "Heavily",
        "Restful",
        "CSSbased",
        "Stream API",
        "JQUERY",
        "iText",
        "Deployment Applied Agile Test Practices",
        "MQ",
        "DAO Developed JUnit",
        "Selenium Web Driver Selenium Grid",
        "Develop",
        "SOA",
        "JNDI",
        "The GuideOne Personal Lines Rater PLR",
        "Developed Web Services",
        "Linux",
        "JSP",
        "Minneapolis",
        "CSR",
        "Visual",
        "Oracle DB2",
        "MVC Singleton Abstract Factory Session Faade DAO",
        "Java Servlets Rational Rose Software Engineer Sasken Communication System Ltd",
        "IOC",
        "Oracle Karma Jasmine Grunt Bower Sr JavaJ2ee Full Stack Developer PNC BANK",
        "Docker",
        "Cordoba JMeter Karma",
        "DOM",
        "Used AJAX Framework for Dynamic Searching of Bill Expense Information",
        "NodeJS Knowledge",
        "Innovation Company It",
        "SOAPHTTP",
        "Spring 3x",
        "MVC",
        "Mockito Worked on Elastic Search",
        "Spark",
        "UnixLinux Selenium Web Logic Application",
        "EJB",
        "GIT",
        "Value Object Pattern Session",
        "AVC",
        "Waterfall Model",
        "Option Assignment",
        "Developed Integration",
        "HTML CSS",
        "US",
        "WebSphere Process Server",
        "POJO",
        "Enums Worked",
        "Drools",
        "WebSphere SVN",
        "Created",
        "Spring Restful",
        "IA",
        "Nodejs HTML5",
        "AWS",
        "Session Facade Business Delegate Service",
        "Gray",
        "Developed Interactive",
        "Node NPM",
        "GMT Created",
        "Coded",
        "Singleton",
        "JavaScript SQL SAML Oracle",
        "JSF",
        "Oracle DB",
        "Customization of the Application Actively",
        "SAX",
        "java",
        "JBOSS Authorized",
        "Software Development Life",
        "CSS SOAP",
        "Apache Kafka Active",
        "User Acceptance Testing Successfully",
        "GuideOne",
        "the Web Services Involved",
        "Singleton Service",
        "SQL",
        "Customization of the screens",
        "UI Bootstrap",
        "Developer Mercury Insurance Group",
        "Hibernate DAO Support Implemented",
        "Health Check",
        "Bootstrap",
        "Framework Spring Security",
        "AOP DI IOC Bean Wiring Spring Inheritance Auto Wiring Spring",
        "Mockito Involved",
        "Annotations Generics",
        "Development and Testing Used",
        "GIT CVS",
        "Business Rules Engines",
        "Typescript",
        "Company",
        "Integrated Development",
        "Responsibilities Identified the Business",
        "Spring Security for User Access Management",
        "Test NG",
        "Database Spring MVC Framework IOC Inversion of Control",
        "Opera",
        "Singleton Factory",
        "CRUD",
        "Update Insert",
        "PNC",
        "JAVA",
        "the Spring Framework",
        "non java",
        "CSR Dashboard",
        "Maven",
        "Hystrix",
        "Performed",
        "Entry",
        "XSLT",
        "JPMorgan Chase",
        "Modeling Tools UML Rational",
        "XSL",
        "JavaScript",
        "ANT",
        "UI",
        "Exception Handling MultiThreading Synchronization Serialization IO Collections Framework Java Beans Experience",
        "Selenium",
        "Auto Home and Personal Excess Liability Using",
        "Microsoft",
        "Delete",
        "Clients",
        "PublisherSubscriber",
        "Predicates",
        "Rule Engines Drools4x Work Flows Human",
        "Selenium WebDriver",
        "SVN",
        "Business Delegate Data Transfer Object Data Access Object Service Locator",
        "Utilized Object Oriented Programming",
        "the End Points Controllers Business Layer DAO Layer using Hibernate Hibernate Transaction Managementand Spring IOC Dependency Injection",
        "Corporate Actions",
        "Angular 2Angular Routing Created",
        "Additional Information SKILL SET JavaJ2EE Technologies Servlets JSP JSTL",
        "jQuery",
        "Search Engine Optimization SEO",
        "REST",
        "Acceptance Test Driven Development ATDD Active",
        "Micro Service",
        "Developed UI",
        "MVC Factory Delegate",
        "Application",
        "JSP HTML CSS",
        "Sprint",
        "IBM WebSphere Application Server Environment",
        "JQuery",
        "Used Java Messaging Services",
        "RA",
        "Pittsburgh",
        "Spring Boot Micro",
        "Hystrix and Hystrix Dashboard"
    ],
    "experience": "Experience working with Software Development Life CycleSDLC methodologiesAgile Scrum Waterfall Model Experience in implementing Java EE design patterns such as MVC Singleton Abstract Factory Session Faade DAO DTO and business Delegate in the development of MultiTier distributed Enterprise Applications Experience in developing UI applications using HTML CSS Backbone Js Bootstrap Angular React Ajax Nodejs JSP Extensive experience in Core Java concepts like Exception Handling MultiThreading Synchronization Serialization IO Collections Framework Java Beans Experience in developing JavaJ2EE applications using JSP JSF Servlets Struts Spring Hibernate Webservices SOAP REST XML XSD XSL and JNDI Experience with Spring MVC IOC Spring JDBC Spring JTA Spring IO Spring Boot Spring Dashboard Spring Microservices Spring Ribbon Spring Netflix Spring Zuul Spring Eureka with Thymeleaf Experience in Spring Security for User Access Management and LDAP configuration for authentication Experienced in Middleware persistence frameworks like HibernateJPA for mapping java classes with database using HQL Experienced in working on modern MEAN stack MongoDB ExpressJS AngularJS and NodeJS Knowledge and experience in working with messaging brokers like Apache Kafka Active Mq Rabbit Mq Developed SQL queries procedures Triggers and Stored Procedures in database such as Oracle DB2 and MYSQL Experienced in working with multiple databases like Oracle 1011 g MySQL MongoDB Cassandra and involved in converting CassandraSQL queries to Spark transformation using Spark RDDs Hands on experience with Amazon Web ServicesAWS like EC2 S3 Elastic Beanstalk ELB Load Balancers RDS VPC Route53 Cloud Watch Cloud Formation IAM SNS SQS Hands on experience with Devops tools like DockerKubernetes JenkinsCICD and knowledge on Chef Puppet Ansible Experience in creating rules using Business Rules Engines like Drools ILOG JBPM Good knowledge on Apache Storm which is used for realtime Stream processing and endtoend delivery response Experience in using different version controllingtracking systems Subversion CVS GIT and Rational Clear CaseExperienced in developing UNIX shell scripts for batch processing Experience in using build tools like ANT GRADLE MAVEN to compile package the components to application servers Experienced in developing UNIX shell scripts for batch processing Hands on experience with Integrated Development EnvironmentIDE like Eclipse IntelliJ Spring Tool SuiteSTS Experience in testing frameworks like Junit Mockito TestNG Power mock Easy mock Expertise in Selenium automation using Selenium Web Driver Selenium Grid JAVA Junit and Maven Maintained the Selenium and JAVA automation code and resources in source controls like GIT CVS and SVN Experience in configuring and deploying the applications and messaging on Tomcat WebSphere WebLogic and JBOSS Authorized to work in the US for any employer Work Experience Sr JavaJ2ee Full Stack Developer OptumUnited Health Group Minneapolis MN US October 2017 to Present Optum is health services and Innovation Company It powers modern health care by modernizing infrastructure advancing care and improving experiences Helped in production and managing of HTML pages redesign old legacy systems within the company as well as to help design a project to rebuild the internal intranet system for various departments Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Developed applications using new features of Java 1718 like Annotations Generics enhanced for loops and Enums Worked with Angular CLI and Typescript in Angular 24 to create Angular components Worked with Advanced Java 8 features like Lambda filters and Predicates for adding functionality processing capability and Stream API to facilitate pipeline processing and method to eliminate elements based on the criteria Developed UI layer for the application using HTML5 CSS3 Angular 2 and Bootstrap Worked on media queries as a compliment to the grid system of UI Bootstrap to facilitate the implementation Experience in using PrimeNG to create UI components and to create robust services and UI widgets Created arrange loop directive and components like data binding dependency injection in Angular 2 Involved in building single page cross browser compatible applications using Angular 2Angular Routing Created the Nodejs server to build MVC framework from frontend side Angular 2 to backend Oracle Worked with advanced MVC framework such as SpringIOC MVC and Batch to implement backend functionality Heavily used Spring Inheritance Auto Wiring CoreContainer Security ORM modules as part of migration from EJB to Spring Spring Quartz for scheduling tasks to generate reports Implemented SOA to develop Spring Restful and implemented Spring Eureka Netflix Ribbon using Apache AXIS Created and injected Spring services Spring Controllers and the DAOs to achieve DI and to wire objects Participated in coding Spring AOP components for the Logging Exception handling and Transactional Models Developed Spring Boot application with microservices and deployed in AWS using EC2 instances Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Worked with Kafka Cluster using Zookeeper apart from JMS as messaging service Developed Web APIS using Restful web services which can be accessed from various tools and enable CNC employees to access information on member activities Implemented Spring circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Worked on the creation of custom Docker container images tagging pushing images integration of Spring Boot Used Hibernate JPA ObjectRelationalMappingORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQL based schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Hands on experience withCassandra Installation Configuring Monitoring and Designing Shared Environment Worked on Cassandra concepts such as locking transactions indexes replications schema design Followed Java and J2EE design patterns like Singleton Service Locator Session Faade DAO during development Developed API for using AWS Lambda to manage the servers and run the code in the AWS Generated Scala and Java classes from the respective APIs so that they can be incorporated in the overall application Performed configuration deployment and support of cloud services including Amazon Web Services AWS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Developed API for using AWS Lambda to manage the servers and run the code in the AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Developed applications using Rule Engines Drools4x Work Flows Human tasks to implement business rules validations Integrated the JBPM with the Spring Framework in the enterprise layer Designed and implemented Oracle 11 g database to record the collateral securities and settlement data Integrated the JBPM with the Spring Framework in the enterprise layer Wrote SQL queries stored procedures and enhanced performance by running explain plans Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Involved in using Gray log validation tool to validate logs Developed Integration test suites for all services invoking python scripts using JSON Experience with WebLogic application server to deploy the applications and configure multiple data sources messaging Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Worked on Elastic Search and Kibana for reporting different logs of data Environment Java 8 J2EE Spring Spring Boot Spring Security Spring Eureka Netflix Ribbon Hibernate Angularjs24 HTML5 CSS 3 JavaScript JQuery and CSS SOAP WebSphere JBoss Eclipse GIT GitHub Apache Kafka Apache Camel Zookeeper Docker AWS JUnit Jenkins MongoDB Oracle Karma Jasmine Grunt Bower Sr JavaJ2ee Full Stack Developer PNC BANK Pittsburgh Pennsylvania US July 2016 to September 2017 PNC takes a personal interest in your banking needs mortgage investing credit card insurance consumer and commercial financial services This project is based on tracking portfolio growth view investment allocations access account information and view transfers and payments Responsibilities Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Involved in various SDLC phases like Requirement gathering Design Analysis Code development and Deployment Applied Agile Test Practices SCRUM Scripted Test Cases for Test Driven Development TDD and developed test cases for story card based on Acceptance Test Driven Development ATDD Active in coding some of the Core Java concepts such as collections generics and multithreading Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set and Design patterns Developing web pages using HTML5 CSS3 JavaScript and used twitter Bootstrap for cross browser compatibility Extensive experience with AngularJS creating custom directives decorators and services to interface with both restful and legacy network services also DOM applications Involved in implementing the complete Application in the inbuild MVC Architecture with Angular js Used dateformat and moment packages in Nodejs to save the timestamp in database converting into GMT Created proofofconcept using responsive web design Nodejs HTML5 and CSS3 Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Developed spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Used popular Nodejs frameworks like Express and Restify to mock a Restful api Deep dive into the nodejs internal to understand nodejs internal performance and memory area and performance related optimization Design develop test and deliver Nodejs modules implementing various reusable services as well as parts of a central component in the platform the App Router Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Created AWS EBS volumes for storing application files for use with AWS EC2 instances whenever they are mounted to them Designed and developed UI screens with XSLT and JSF MVC to provide interactive screens to display data Developed API for using AWS Lambda to manage the servers and run the code in the AWS Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store data Extensively worked on JPA as persistence layer involving EJB30 annotations Spring Boot Micro services were developed with micro service architecture using SOAP and Apache Camel Integrated configured Camel with ActiveMQ to use it as bus Implemented a SOA compliant system working on various transactional messaging using Camels and used Session Beans Message Driven Beans Worked on Jenkins and Docker interactively and integrating together for end to end automation of builds and deployment Configured the Hibernate configuration files to persist the data to the MongoDB database Worked on Mongo DB concepts such as locking transactions indexes replications schema design Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via JSON response and updating HTML pages Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in spring boot Micro Service Applications Developed Docker images to support Development and Testing Used version control repository SVN Subversion by apache and JIRA for issue tracking Researched and trouble shooted emerging application issues from WebLogic configuration to code issues Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used Log4j framework to logtrack application Environment HTML CSS Bootstrap AJAX Multithreading JavaScript JSF 21 Angular JS Spring 3x Hibernate 3x Soap UI Maven SVN JIRA Docker Web sphere SOAP web service UnixLinux Selenium Web Logic Application Server Sr JavaJ2EE Full Stack Developer Omnicare Columbus OH US February 2015 to June 2016 Omnicares ekit system is a high performance flexible automated system A formulary is created to deliver medicines to facilities A faulty manual system where every billing was manual is now automated The facilities place the orders online and any discrepancies are reported within a week This package provides a powerful way of userdriven application with transparency security and ease in data access Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development and Customization of the Application Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed agile methodology in the Scrum Cycle model to help respond quickly to business needs Used Spring Inversion of Control IOC for injecting the beans and reduced the coupling between the classes Implemented the Model View Controller using Spring MVC Used Spring actuatorconfiguring Spring Boot application monitoring and invoking HTTP endpoints Implemented the application using Spring Boot Framework and handled the security using SpringSecurity Used XML Web Services using SOAP to register agents using non java application Curl is a command line tool for doing all sorts of URL manipulations and transfers Developed services that are reusable and interoperable based on SOAP WSDL JAXWS JAXRPC Web services by exchanging XML data between applications over HTTP Used JMS for the asynchronous exchange of critical data and events among J2EE components PublisherSubscriber method was used for data loading and PointToPoint method of JMS was used for event processing Involved in writing DAO DTOs using Hibernate DAO Support Implemented persistence layer using Hibernate that uses the POJOs which do not have the business processes to represent the persistence database tuples Worked with POJO for handling data coming from the legacy systems Configured SwaggerUI registered Micro service with Eureka server to monitor service health check Utilized Object Oriented Programming in JavaScript and DOM structure to implement various functionalities and DOM parser to parse the XML documents and XSLT for transformations Developed Interactive web pages using HTML5 CSS3 and JavaScript Develop various screens for the front end using Angular JS and used various predefined components from Node NPM Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Coded pages with best Search Engine Optimization SEO techniques Designed applications that execute on various browsers such as Internet Explorer Mozilla Firefox Google Chrome and Opera using various debugging tools like FirebugsIE Developer Tools Used MongoDB and Oracle DB for the application The legacy info was going to Oracle and rest to MongoDB Performed CRUD operations like Update Insert and Delete data in MongoDB Continuous integration services are provided for software development using JENKINS Implemented security for different frontend views based on the access privileges Spring with Tiles Framework is implemented for a common look in all the presentation views The application is designed using J2EE design patterns and technologies based on MVC architecture Used J2EE design patterns like Value Object Pattern Session faade Singleton Factory and DAO Developed JUnit test cases for DAO and Service Layer methods for all the developed modules Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Developed the ANT scripts for preparing WAR files used to deploy J2EE components Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG Used GIT as version management JIRA for defect management system Used Log4J to capture the log that includes runtime exceptions Used RAD IDE based on Eclipse for writing code for JSP Action Classes and spring beans Interacted with quality assurance team for requirements gathering and analysis Environment Java J2EE Spring Spring DI Spring Actuator Spring Boot Spring Security SOAP WSDL JAXWS JAXRPC JMS Curl Hibernate HTML5 CSS3 Angular JS JavaScript jQuery Swagger JENKINS JSP AJAX Eureka Cassandra ANT GIT JIRA Sr Java J2EE Developer Guide One Insurance West Des Moines IA US July 2013 to January 2015 The PLPAS Project represents a major overhaul of the GuideOne Personal Lines business unit The program will involve analysis and making changes to products processes technology staffing distribution and marketing The objective of this initiative is to deliver administrative processes and underlying system capabilities necessary for the personal lines business unit to achieve their 10year strategic objectives It also implements the integrations to existing systems and vendors associated with the GuideOne PLPAS The GuideOne Personal Lines Rater PLR is an easytouse business tool It can be used to quote new business for Auto Home and Personal Excess Liability Using this system agent can create a new quote or view a specific agents quotes and issue policies Responsibilities Involved in preparing System Requirements and detailed Design document for the project Extensively used various modules in Spring like AOP DI IOC Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in developing components on Reporting Dashboard with Spring MVC Spring Framework Spring Security and Hibernate and created Microservices using Spring Boot Designed and developed the End Points Controllers Business Layer DAO Layer using Hibernate Hibernate Transaction Managementand Spring IOC Dependency Injection Extensively worked on JPA as persistence layer and Java Messaging ServiceJMS involving EJB30 annotations synchronizing Data base tables through XML in a secondary project Extensively used Session beans for implementing the business logic of module Developed Web Services SOAPHTTP SOAPJMS SMTP using SOA technologies such as SOAP WSDL and UDDI Heavily used SOAP UI Pro version for testing the Web Services Involved in consuming producing SOAP based web services using JAXWS Developed UI application modules using HTML CSS and JavaScript JSON jQuery and AJAX Used Bootstrap library to build application UIs and used AngularJS to associate HTML elements to models Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response jQuery opinionated about how a CRUD application should be built Creating crossbrowser compatible and standardscompliant CSSbased page layouts ClientSide code were written in ReactJS JQuery and serverSide Code were developed using MVC4 Used Angular Routing for navigating between screens and developed several reusable directives Database development required creation of new tables PLSQL Stored Procedures Views Indexes and Constraints Triggers and required SQL tuning to reduce the response time in the application Utilized DOM SAX parser technologies in implementing XML parsing framework Extensively used MVC Factory Delegate and Singleton design patterns Used AWS Amazon Web Services stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM Deploying managing and operating scalable highly available and fault tolerant systems Implemented responsive web design using Bootstrap and Apache Cordoba Created and Written automated regression tests using JMeter scripts for load testing Used JMeter for stress testing Selenium WebDriver for testing the automation code Develop unit test using Karma and Jasmine Followed strict patterns of RA team for unit test cases with jasmine to verify AngularJS modules and JavaScript utility routines Installed and configured WebSphere Process Server 61 and WebSphere ESB 61 WID Used version control repository SVN Subversion by apache and JIRA for issue tracking Environment Java J2EE Spring MVC Spring Security Spring Boot Spring MVC Spring IOC JPA Hibernate JMS SOAP WSDL UDDI HTML CSS JavaScript JSON jQuery AJAX AngularJS PLSQL AWS Apache Cordoba JMeter Karma Jasmine WebSphere SVN Sr Java Developer Mercury Insurance Group Los Angeles CA US June 2012 to June 2013 The insurancebased company provides insurance for car homes Condo business auto insurance etc The developed application provides web based online insurance services Application also supports features for customer care services and internal reporting and log maintenance The application had been developed using Struts framework along with hibernate and log4j Responsibilities Involved in analysis design and development of Expense Processing system and developed specs that include Use Cases Class Diagrams Sequence Diagrams and Activity Diagrams Well experienced in Core Java asynchronous programming multithreading collections and a few design patterns Taken care of complete Java multithreading part in back end components Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report and Spring for cross cutting concerns and IOC for dependency injection Used Hibernate in data access layer to access and update information in the database Used Web services WSDL and SOAP for getting credit card information from third party Used Hibernate Transaction Management Hibernate Batch Transactions cache concepts Designed various tables required for the project in MySQL database and used the Stored Procedures in the application also worked on the system landscape includes configuring Linux and SQL database Developed several annotated managed beans and integrated with Spring 3x framework Used AJAX Framework for Dynamic Searching of Bill Expense Information Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Developed JUnit test cases for all the developed modules Used CVS for version control across common source code used by developers Used ANT scripts to build the application and deployed on WebSphere Application Server Involved in designing and implementation of Session Facade Business Delegate Service Locator patterns to delegate request to appropriate resources in the development of MultiTier distributed Enterprise Applications Worked on Ext JS for user interface widgets with High performance scalable grids trees and menus Deployed the applications on IBM WebSphere Application Server Environment Core Java J2EE JSP JavaScript Spring JMS Hibernate MYSQL Eclipse 34 log4j JUnit HTML40 CSS MySQL XML CVS JavaJ2EE Developer JPMorgan Chase NY US November 2010 to May 2012 CSR Dashboard is an internal facing application accessed via the Prime View portal which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events with Corporate Actions and Money Transfer events to follow This tool provides a CSR centric view of all key events for all families supported by a CSR Team Lead or Area Manager As of today Option Exercise and Corporate Actions have been on boarded Responsibilities Identified the Business requirements of the project and involved in preparing System Requirements Involved in preparing the Detailed Design document for the project by extensively using MVC Factory Delegate and Singleton design patterns and used Java 14 for the compilation Developed the middle tier using EJBs Java Servlets and debugged the servlets and EJB with WebSphere Application server also developed session entity beans and message driven beans Used XMLXSLT for transforming common XML format and SAML for Single SignOn Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response and configured XML Schema for the application Handled Java multithreading part in backend component one thread will be running for each user Used SOAP for Web Services by exchanging XML data between applications over HTTP Designed and developed the UI using JSP HTML CSS and JavaScript AJAX JSON Whereas JavaScript is used for the clientside validation and developed Web GUI involving Java Script under MVC architecture Used Spring Framework AOP Module to implement logging in the application to know the application status Used Spring DAO Module to deal with Database Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code along with singleton to achieve clean separation of layers MQ was used to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS which involves communications without side systems Junit tests were written and performed unit test to test each module in the application Wrote Ant Scripts for preparing WAR files to automate the build and to deploy J2EE components Involved in Code Review Unit Testing and Integration Testing Designed the data flow for the clientside screens and the object interaction layer for the serverside components using Rational Rose Case Diagrams Class Diagrams and Sequence diagrams Environment Core Java J2EE JSP JavaScript EJB HTML CSS JavaScript AJAX JSON XMLXSLT SOAP Junit Java Servlets Rational Rose Software Engineer Sasken Communication System Ltd June 2009 to September 2010 This project is designed to provide a standard interface to control TVs Hifi equipment etc to allow a single remote control to control all the AV equipment to which a user has access The procedure of this profile specific AVC command is an extension of the AVC digital interface command It supports Handsfree as well as handsets both This profile gives the facility to the user to play the music with Bluetooth Dongle and remote control is also supported under Microsoft Window Media Player Responsibilities Involved in Requirement Analysis to understand the Company needs for various downstream systems Created the design using class diagrams and sequence diagrams Involved in deciding the WEB Service architecture with XML and SOAP for integrating with heterogeneous systems and to register agents using non java applications Designed and implemented SOAP XML Request and Response WEB Service WSDL using XML SPY Implemented WEB Service using Apache SOAP API 21 WASD Designed and implemented subsystem for administrative tasks like verify data loads consistency check and notify clients for data extract using SERVLETS session and Entry bean and java classes Developed dynamic WEB screens Customization of the screens done using JSP Designed and guided the team for implementing Client module and XSL conversions for transforming common XML format and SAML for Single SignOn using XSLT XALAN Tested and debugged SERVLETS JSP using Visual age JSP execution monitor Implemented various design patterns in the project such as Business Delegate Data Transfer Object Data Access Object Service Locator and Singleton Used JDBC for communicating with the database for developing business module applications Involved in writing XML documents Involved in writing build scripts using UNIX Handled database interaction writing SQL Queries Oracle 8i was used as Database for central Fund repository and designed Health Check module to monitor current health of the system The service was deployed on WEBSPHERE 40 Environment Core Java J2EE JSP WSDL JavaScript SQL SAML Oracle 8i SERVLETS UNIX WEBSPHERE 40 Education Bachelors Skills database 9 years J2ee 9 years Java 9 years JavaScript 9 years SOAP 9 years Additional Information SKILL SET JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java161718 C C SQL Scala PLSQL ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Frameworks Struts 2x1x Spring 4x3x 2x Hibernate 3x JSF 1220 iBatis Flex UI Frameworks jQuery AngularJS NodeJS ReactJs Bootstrap IDEs Eclipse 3x IBM WSAD IntelliJ Dream viewer Web technologies HTMLHTML5 CSSCSS3 XHTML JavaScript Ajax jQuery AngularJS24 JSON BackBonejs Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI XML Tools JAXB Apache Axis Methodologies Agile Scrum RUP TDD OOAD SDLC Modeling Tools UML Rational Rose Visio Testing technologiestools JUnit JMeter HTML Unit Database Servers Oracle 8i9i10g11 G DB2 SQL Server 08 MySQL NOSQLMongoDB Cassandra Version Control Git CVS SVN Build Tools Gradle Maven ANT Platforms Windows 20009895NT40 Linux UNIX Mac Windows Containerization Tools Docker Dockerswarm Kubernetes Cloud Developments EC2S3Elastic ELB Spring PCFpivotal cloud foundry",
    "extracted_keywords": [
        "Sr",
        "JavaJ2ee",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "span",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaJ2ee",
        "Full",
        "Stack",
        "Developer",
        "OptumUnited",
        "Health",
        "Group",
        "Minneapolis",
        "MN",
        "years",
        "IT",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "applications",
        "JavaJ2EE",
        "Experience",
        "Software",
        "Development",
        "Life",
        "Scrum",
        "Waterfall",
        "Model",
        "Experience",
        "Java",
        "EE",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Abstract",
        "Factory",
        "Session",
        "Faade",
        "DAO",
        "DTO",
        "business",
        "Delegate",
        "development",
        "MultiTier",
        "Enterprise",
        "Applications",
        "Experience",
        "UI",
        "applications",
        "HTML",
        "CSS",
        "Backbone",
        "Js",
        "Bootstrap",
        "Angular",
        "React",
        "Ajax",
        "Nodejs",
        "JSP",
        "experience",
        "Core",
        "Java",
        "concepts",
        "Exception",
        "Handling",
        "MultiThreading",
        "Synchronization",
        "Serialization",
        "IO",
        "Collections",
        "Framework",
        "Java",
        "Beans",
        "Experience",
        "JavaJ2EE",
        "applications",
        "JSP",
        "JSF",
        "Servlets",
        "Struts",
        "Spring",
        "Hibernate",
        "Webservices",
        "SOAP",
        "REST",
        "XML",
        "XSD",
        "XSL",
        "JNDI",
        "Experience",
        "Spring",
        "MVC",
        "IOC",
        "Spring",
        "JDBC",
        "Spring",
        "JTA",
        "Spring",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Dashboard",
        "Spring",
        "Microservices",
        "Spring",
        "Ribbon",
        "Spring",
        "Netflix",
        "Spring",
        "Zuul",
        "Spring",
        "Eureka",
        "Thymeleaf",
        "Experience",
        "Spring",
        "Security",
        "User",
        "Access",
        "Management",
        "LDAP",
        "configuration",
        "authentication",
        "Middleware",
        "persistence",
        "frameworks",
        "HibernateJPA",
        "mapping",
        "classes",
        "database",
        "HQL",
        "MEAN",
        "ExpressJS",
        "AngularJS",
        "NodeJS",
        "Knowledge",
        "experience",
        "brokers",
        "Apache",
        "Kafka",
        "Active",
        "Mq",
        "Rabbit",
        "Mq",
        "SQL",
        "procedures",
        "Triggers",
        "Stored",
        "Procedures",
        "database",
        "Oracle",
        "DB2",
        "MYSQL",
        "databases",
        "Oracle",
        "g",
        "MySQL",
        "MongoDB",
        "Cassandra",
        "CassandraSQL",
        "queries",
        "Spark",
        "transformation",
        "Spark",
        "RDDs",
        "Hands",
        "experience",
        "Amazon",
        "Web",
        "ServicesAWS",
        "EC2",
        "S3",
        "Elastic",
        "Beanstalk",
        "ELB",
        "Load",
        "Balancers",
        "RDS",
        "VPC",
        "Route53",
        "Cloud",
        "Watch",
        "Cloud",
        "Formation",
        "IAM",
        "SNS",
        "SQS",
        "Hands",
        "experience",
        "Devops",
        "tools",
        "DockerKubernetes",
        "JenkinsCICD",
        "knowledge",
        "Chef",
        "Puppet",
        "Ansible",
        "Experience",
        "rules",
        "Business",
        "Rules",
        "Engines",
        "Drools",
        "JBPM",
        "knowledge",
        "Apache",
        "Storm",
        "Stream",
        "processing",
        "delivery",
        "response",
        "Experience",
        "version",
        "systems",
        "Subversion",
        "CVS",
        "GIT",
        "Rational",
        "Clear",
        "CaseExperienced",
        "UNIX",
        "shell",
        "scripts",
        "batch",
        "processing",
        "Experience",
        "build",
        "tools",
        "ANT",
        "GRADLE",
        "MAVEN",
        "package",
        "components",
        "application",
        "servers",
        "UNIX",
        "shell",
        "scripts",
        "batch",
        "Hands",
        "experience",
        "Integrated",
        "Development",
        "EnvironmentIDE",
        "Eclipse",
        "IntelliJ",
        "Spring",
        "Tool",
        "SuiteSTS",
        "Experience",
        "testing",
        "frameworks",
        "Junit",
        "Mockito",
        "TestNG",
        "Power",
        "mock",
        "Easy",
        "Expertise",
        "Selenium",
        "automation",
        "Selenium",
        "Web",
        "Driver",
        "Selenium",
        "Grid",
        "Junit",
        "Maven",
        "Selenium",
        "automation",
        "code",
        "resources",
        "source",
        "GIT",
        "CVS",
        "SVN",
        "Experience",
        "applications",
        "Tomcat",
        "WebSphere",
        "WebLogic",
        "JBOSS",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "JavaJ2ee",
        "Full",
        "Stack",
        "Developer",
        "OptumUnited",
        "Health",
        "Group",
        "Minneapolis",
        "MN",
        "US",
        "October",
        "Present",
        "Optum",
        "health",
        "services",
        "Innovation",
        "Company",
        "health",
        "care",
        "infrastructure",
        "care",
        "experiences",
        "production",
        "managing",
        "HTML",
        "pages",
        "legacy",
        "systems",
        "company",
        "project",
        "intranet",
        "system",
        "departments",
        "Responsibilities",
        "Experience",
        "development",
        "SCRUM",
        "process",
        "Sprint",
        "standup",
        "meetings",
        "applications",
        "features",
        "Java",
        "Annotations",
        "Generics",
        "loops",
        "Enums",
        "Angular",
        "CLI",
        "Typescript",
        "Angular",
        "components",
        "Advanced",
        "Java",
        "features",
        "Lambda",
        "filters",
        "Predicates",
        "functionality",
        "processing",
        "capability",
        "Stream",
        "API",
        "pipeline",
        "processing",
        "method",
        "elements",
        "criteria",
        "UI",
        "layer",
        "application",
        "HTML5",
        "CSS3",
        "Angular",
        "Bootstrap",
        "media",
        "queries",
        "compliment",
        "grid",
        "system",
        "UI",
        "Bootstrap",
        "implementation",
        "Experience",
        "PrimeNG",
        "UI",
        "components",
        "services",
        "UI",
        "arrange",
        "loop",
        "directive",
        "components",
        "data",
        "dependency",
        "injection",
        "Angular",
        "page",
        "cross",
        "browser",
        "applications",
        "Angular",
        "2Angular",
        "Routing",
        "Nodejs",
        "server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "Angular",
        "Oracle",
        "Worked",
        "MVC",
        "framework",
        "SpringIOC",
        "MVC",
        "Batch",
        "functionality",
        "Spring",
        "Inheritance",
        "Auto",
        "Wiring",
        "CoreContainer",
        "Security",
        "ORM",
        "modules",
        "part",
        "migration",
        "EJB",
        "Spring",
        "Spring",
        "Quartz",
        "scheduling",
        "tasks",
        "reports",
        "SOA",
        "Spring",
        "Restful",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "Apache",
        "AXIS",
        "Spring",
        "services",
        "Spring",
        "Controllers",
        "DAOs",
        "DI",
        "wire",
        "objects",
        "Spring",
        "AOP",
        "components",
        "Logging",
        "Exception",
        "handling",
        "Transactional",
        "Models",
        "Developed",
        "Spring",
        "Boot",
        "application",
        "microservices",
        "AWS",
        "EC2",
        "instances",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "Kafka",
        "Cluster",
        "Zookeeper",
        "JMS",
        "service",
        "Web",
        "APIS",
        "Restful",
        "web",
        "services",
        "tools",
        "CNC",
        "employees",
        "information",
        "member",
        "activities",
        "Spring",
        "circuit",
        "breaker",
        "pattern",
        "Hystrix",
        "dashboard",
        "Spring",
        "microservices",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "integration",
        "Spring",
        "Boot",
        "Hibernate",
        "JPA",
        "ObjectRelationalMappingORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "SQL",
        "schema",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "Hands",
        "experience",
        "Installation",
        "Configuring",
        "Monitoring",
        "Designing",
        "Shared",
        "Environment",
        "Cassandra",
        "concepts",
        "transactions",
        "indexes",
        "replications",
        "schema",
        "design",
        "Java",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "Session",
        "Faade",
        "DAO",
        "development",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "Scala",
        "Java",
        "classes",
        "APIs",
        "application",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Groups",
        "Users",
        "login",
        "authentication",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "Lambda",
        "functions",
        "EC2",
        "MongoDB",
        "highavailability",
        "fault",
        "tolerance",
        "applications",
        "Rule",
        "Engines",
        "Drools4x",
        "Work",
        "tasks",
        "business",
        "rules",
        "Integrated",
        "JBPM",
        "Spring",
        "Framework",
        "enterprise",
        "layer",
        "Oracle",
        "g",
        "database",
        "securities",
        "settlement",
        "data",
        "Integrated",
        "JBPM",
        "Spring",
        "Framework",
        "enterprise",
        "layer",
        "Wrote",
        "SQL",
        "procedures",
        "performance",
        "explain",
        "plans",
        "Maven",
        "scripts",
        "builds",
        "Maven",
        "integration",
        "servers",
        "Jenkins",
        "Gray",
        "log",
        "validation",
        "tool",
        "logs",
        "Developed",
        "Integration",
        "test",
        "suites",
        "services",
        "scripts",
        "JSON",
        "Experience",
        "WebLogic",
        "application",
        "server",
        "applications",
        "configure",
        "data",
        "sources",
        "test",
        "scripts",
        "Selenium",
        "web",
        "driver",
        "test",
        "results",
        "navigation",
        "Spring",
        "MVC",
        "controllers",
        "controllers",
        "Spring",
        "MVC",
        "annotations",
        "configuration",
        "files",
        "GIT",
        "version",
        "control",
        "tool",
        "project",
        "unit",
        "testing",
        "Junit",
        "Mockito",
        "Worked",
        "Elastic",
        "Search",
        "Kibana",
        "logs",
        "data",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "Hibernate",
        "Angularjs24",
        "HTML5",
        "CSS",
        "JavaScript",
        "JQuery",
        "CSS",
        "SOAP",
        "WebSphere",
        "JBoss",
        "Eclipse",
        "GIT",
        "GitHub",
        "Apache",
        "Kafka",
        "Apache",
        "Camel",
        "Zookeeper",
        "Docker",
        "JUnit",
        "Jenkins",
        "MongoDB",
        "Oracle",
        "Karma",
        "Jasmine",
        "Grunt",
        "Bower",
        "Sr",
        "JavaJ2ee",
        "Full",
        "Stack",
        "Developer",
        "PNC",
        "BANK",
        "Pittsburgh",
        "Pennsylvania",
        "US",
        "July",
        "September",
        "PNC",
        "interest",
        "banking",
        "mortgage",
        "credit",
        "card",
        "insurance",
        "consumer",
        "services",
        "project",
        "portfolio",
        "growth",
        "investment",
        "allocations",
        "access",
        "account",
        "information",
        "transfers",
        "payments",
        "Responsibilities",
        "GIT",
        "version",
        "control",
        "tool",
        "project",
        "unit",
        "testing",
        "Junit",
        "Mockito",
        "SDLC",
        "phases",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Deployment",
        "Agile",
        "Test",
        "Practices",
        "Scripted",
        "Test",
        "Cases",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "test",
        "cases",
        "story",
        "card",
        "Acceptance",
        "Test",
        "Driven",
        "Development",
        "ATDD",
        "Active",
        "Core",
        "Java",
        "concepts",
        "collections",
        "generics",
        "practices",
        "casting",
        "generics",
        "Hash",
        "Map",
        "Collections",
        "comparator",
        "list",
        "Design",
        "patterns",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "twitter",
        "Bootstrap",
        "cross",
        "browser",
        "compatibility",
        "experience",
        "AngularJS",
        "custom",
        "directives",
        "decorators",
        "services",
        "legacy",
        "network",
        "services",
        "DOM",
        "applications",
        "Application",
        "inbuild",
        "MVC",
        "Architecture",
        "Angular",
        "dateformat",
        "moment",
        "packages",
        "Nodejs",
        "timestamp",
        "database",
        "GMT",
        "Created",
        "proofofconcept",
        "web",
        "design",
        "Nodejs",
        "HTML5",
        "CSS3",
        "Multithreading",
        "Concurrency",
        "Exception",
        "Handling",
        "Collections",
        "spring",
        "presentation",
        "layer",
        "hibernate",
        "DAO",
        "layer",
        "Spring",
        "Dependency",
        "injection",
        "ORM",
        "Web",
        "modules",
        "Nodejs",
        "frameworks",
        "Express",
        "api",
        "Deep",
        "dive",
        "performance",
        "memory",
        "area",
        "performance",
        "optimization",
        "Design",
        "test",
        "Nodejs",
        "modules",
        "services",
        "parts",
        "component",
        "platform",
        "App",
        "Router",
        "Spring",
        "Transaction",
        "degree",
        "isolation",
        "transactions",
        "transaction",
        "scope",
        "transaction",
        "transaction",
        "EBS",
        "volumes",
        "application",
        "files",
        "use",
        "AWS",
        "EC2",
        "instances",
        "UI",
        "screens",
        "XSLT",
        "JSF",
        "MVC",
        "screens",
        "data",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "AWS",
        "SDK",
        "connection",
        "Amazon",
        "S3",
        "buckets",
        "object",
        "storage",
        "service",
        "data",
        "JPA",
        "persistence",
        "layer",
        "EJB30",
        "annotations",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "micro",
        "service",
        "architecture",
        "SOAP",
        "Apache",
        "Camel",
        "Integrated",
        "Camel",
        "ActiveMQ",
        "bus",
        "SOA",
        "compliant",
        "system",
        "messaging",
        "Camels",
        "Session",
        "Beans",
        "Message",
        "Driven",
        "Beans",
        "Jenkins",
        "Docker",
        "end",
        "automation",
        "builds",
        "deployment",
        "Configured",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "database",
        "Mongo",
        "DB",
        "concepts",
        "transactions",
        "indexes",
        "replications",
        "schema",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "store",
        "images",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "XML",
        "Web",
        "Services",
        "protocol",
        "amount",
        "application",
        "institutions",
        "code",
        "Web",
        "Services",
        "JAXWS",
        "system",
        "SOAPHTTP",
        "call",
        "data",
        "web",
        "services",
        "response",
        "HTML",
        "pages",
        "circuit",
        "breaker",
        "patterns",
        "time",
        "Clients",
        "email",
        "applications",
        "Hystrix",
        "Hystrix",
        "Dashboard",
        "spring",
        "boot",
        "Micro",
        "Service",
        "Applications",
        "Developed",
        "Docker",
        "images",
        "Development",
        "Testing",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "trouble",
        "application",
        "issues",
        "WebLogic",
        "configuration",
        "code",
        "issues",
        "Seleniums",
        "playback",
        "tool",
        "tests",
        "test",
        "cases",
        "Log4j",
        "framework",
        "application",
        "Environment",
        "HTML",
        "CSS",
        "Bootstrap",
        "AJAX",
        "Multithreading",
        "JavaScript",
        "JSF",
        "JS",
        "Spring",
        "Hibernate",
        "Soap",
        "UI",
        "Maven",
        "SVN",
        "JIRA",
        "Docker",
        "Web",
        "sphere",
        "SOAP",
        "web",
        "service",
        "UnixLinux",
        "Selenium",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Omnicare",
        "Columbus",
        "OH",
        "US",
        "February",
        "June",
        "Omnicares",
        "system",
        "performance",
        "system",
        "formulary",
        "medicines",
        "facilities",
        "system",
        "billing",
        "facilities",
        "orders",
        "discrepancies",
        "week",
        "package",
        "way",
        "application",
        "transparency",
        "security",
        "ease",
        "data",
        "access",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Customization",
        "Application",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "methodology",
        "Scrum",
        "Cycle",
        "model",
        "business",
        "needs",
        "Spring",
        "Inversion",
        "Control",
        "IOC",
        "beans",
        "coupling",
        "classes",
        "Model",
        "View",
        "Controller",
        "Spring",
        "MVC",
        "Spring",
        "Spring",
        "Boot",
        "application",
        "monitoring",
        "HTTP",
        "endpoints",
        "application",
        "Spring",
        "Boot",
        "Framework",
        "security",
        "SpringSecurity",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "agents",
        "application",
        "Curl",
        "command",
        "line",
        "tool",
        "sorts",
        "URL",
        "manipulations",
        "transfers",
        "services",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JAXRPC",
        "Web",
        "services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "JMS",
        "exchange",
        "data",
        "events",
        "J2EE",
        "components",
        "PublisherSubscriber",
        "method",
        "data",
        "loading",
        "PointToPoint",
        "method",
        "JMS",
        "event",
        "processing",
        "DAO",
        "DTOs",
        "Hibernate",
        "DAO",
        "Support",
        "persistence",
        "layer",
        "Hibernate",
        "POJOs",
        "business",
        "processes",
        "persistence",
        "database",
        "tuples",
        "POJO",
        "data",
        "legacy",
        "systems",
        "Configured",
        "SwaggerUI",
        "Micro",
        "service",
        "Eureka",
        "server",
        "service",
        "health",
        "check",
        "Object",
        "Oriented",
        "Programming",
        "JavaScript",
        "DOM",
        "structure",
        "functionalities",
        "DOM",
        "parser",
        "XML",
        "documents",
        "XSLT",
        "transformations",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Develop",
        "screens",
        "end",
        "JS",
        "components",
        "Node",
        "NPM",
        "JavaScript",
        "jQuery",
        "data",
        "web",
        "pages",
        "features",
        "application",
        "jQuery",
        "concepts",
        "selectors",
        "filters",
        "pages",
        "Search",
        "Engine",
        "Optimization",
        "SEO",
        "techniques",
        "applications",
        "browsers",
        "Internet",
        "Explorer",
        "Mozilla",
        "Firefox",
        "Google",
        "Chrome",
        "Opera",
        "debugging",
        "tools",
        "FirebugsIE",
        "Developer",
        "Tools",
        "MongoDB",
        "Oracle",
        "DB",
        "application",
        "legacy",
        "info",
        "Oracle",
        "Performed",
        "CRUD",
        "operations",
        "Update",
        "Insert",
        "Delete",
        "data",
        "integration",
        "services",
        "software",
        "development",
        "JENKINS",
        "security",
        "frontend",
        "views",
        "access",
        "privileges",
        "Spring",
        "Tiles",
        "Framework",
        "look",
        "presentation",
        "application",
        "J2EE",
        "design",
        "patterns",
        "technologies",
        "MVC",
        "architecture",
        "J2EE",
        "design",
        "patterns",
        "Value",
        "Object",
        "Pattern",
        "Session",
        "faade",
        "Singleton",
        "Factory",
        "DAO",
        "JUnit",
        "test",
        "cases",
        "DAO",
        "Service",
        "Layer",
        "methods",
        "modules",
        "test",
        "scripts",
        "Selenium",
        "web",
        "driver",
        "test",
        "results",
        "navigation",
        "Spring",
        "MVC",
        "controllers",
        "controllers",
        "Spring",
        "MVC",
        "annotations",
        "configuration",
        "files",
        "ANT",
        "scripts",
        "WAR",
        "files",
        "J2EE",
        "components",
        "GIT",
        "Version",
        "Control",
        "iText",
        "pdf",
        "form",
        "tree",
        "unit",
        "testing",
        "Test",
        "NG",
        "GIT",
        "version",
        "management",
        "JIRA",
        "management",
        "system",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "RAD",
        "IDE",
        "Eclipse",
        "code",
        "JSP",
        "Action",
        "Classes",
        "spring",
        "beans",
        "quality",
        "assurance",
        "team",
        "requirements",
        "analysis",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Spring",
        "DI",
        "Spring",
        "Actuator",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JAXRPC",
        "JMS",
        "Curl",
        "Hibernate",
        "HTML5",
        "CSS3",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Swagger",
        "JENKINS",
        "JSP",
        "AJAX",
        "Eureka",
        "Cassandra",
        "ANT",
        "GIT",
        "JIRA",
        "Sr",
        "Java",
        "J2EE",
        "Developer",
        "Guide",
        "One",
        "Insurance",
        "West",
        "Des",
        "Moines",
        "IA",
        "US",
        "July",
        "January",
        "PLPAS",
        "Project",
        "overhaul",
        "GuideOne",
        "Personal",
        "Lines",
        "business",
        "unit",
        "program",
        "analysis",
        "changes",
        "products",
        "technology",
        "distribution",
        "marketing",
        "objective",
        "initiative",
        "processes",
        "system",
        "capabilities",
        "lines",
        "business",
        "unit",
        "objectives",
        "integrations",
        "systems",
        "vendors",
        "GuideOne",
        "PLPAS",
        "GuideOne",
        "Personal",
        "Lines",
        "Rater",
        "PLR",
        "easytouse",
        "business",
        "tool",
        "business",
        "Auto",
        "Home",
        "Personal",
        "Excess",
        "Liability",
        "system",
        "agent",
        "quote",
        "agents",
        "quotes",
        "issue",
        "policies",
        "Responsibilities",
        "System",
        "Requirements",
        "Design",
        "document",
        "project",
        "modules",
        "Spring",
        "AOP",
        "DI",
        "IOC",
        "Bean",
        "Wiring",
        "Spring",
        "Inheritance",
        "Auto",
        "Wiring",
        "Spring",
        "JDBC",
        "Templates",
        "Spring",
        "Quartz",
        "Schedulers",
        "Jobs",
        "components",
        "Dashboard",
        "Spring",
        "MVC",
        "Spring",
        "Framework",
        "Spring",
        "Security",
        "Hibernate",
        "Microservices",
        "Spring",
        "Boot",
        "End",
        "Points",
        "Controllers",
        "Business",
        "Layer",
        "DAO",
        "Layer",
        "Hibernate",
        "Hibernate",
        "Transaction",
        "Managementand",
        "Spring",
        "IOC",
        "Dependency",
        "Injection",
        "JPA",
        "persistence",
        "layer",
        "Java",
        "ServiceJMS",
        "EJB30",
        "annotations",
        "Data",
        "base",
        "tables",
        "XML",
        "project",
        "Session",
        "beans",
        "business",
        "logic",
        "module",
        "Developed",
        "Web",
        "Services",
        "SOAPHTTP",
        "SOAPJMS",
        "SMTP",
        "SOA",
        "technologies",
        "SOAP",
        "WSDL",
        "UDDI",
        "SOAP",
        "UI",
        "Pro",
        "version",
        "Web",
        "Services",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "UI",
        "application",
        "modules",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "library",
        "application",
        "UIs",
        "HTML",
        "elements",
        "models",
        "JQUERY",
        "AJAX",
        "calls",
        "web",
        "pages",
        "response",
        "jQuery",
        "CRUD",
        "application",
        "crossbrowser",
        "page",
        "layouts",
        "ClientSide",
        "code",
        "ReactJS",
        "JQuery",
        "serverSide",
        "Code",
        "MVC4",
        "Angular",
        "Routing",
        "screens",
        "directives",
        "Database",
        "development",
        "creation",
        "tables",
        "PLSQL",
        "Stored",
        "Procedures",
        "Views",
        "Indexes",
        "Constraints",
        "Triggers",
        "SQL",
        "response",
        "time",
        "application",
        "DOM",
        "SAX",
        "parser",
        "technologies",
        "XML",
        "parsing",
        "framework",
        "MVC",
        "Factory",
        "Delegate",
        "Singleton",
        "design",
        "patterns",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "Deploying",
        "systems",
        "web",
        "design",
        "Bootstrap",
        "Apache",
        "Cordoba",
        "Created",
        "regression",
        "tests",
        "JMeter",
        "scripts",
        "load",
        "testing",
        "JMeter",
        "stress",
        "testing",
        "Selenium",
        "WebDriver",
        "automation",
        "code",
        "Develop",
        "unit",
        "test",
        "Karma",
        "Jasmine",
        "patterns",
        "RA",
        "team",
        "unit",
        "test",
        "cases",
        "jasmine",
        "modules",
        "JavaScript",
        "utility",
        "routines",
        "WebSphere",
        "Process",
        "Server",
        "WebSphere",
        "ESB",
        "WID",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "JPA",
        "Hibernate",
        "JMS",
        "SOAP",
        "WSDL",
        "UDDI",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "jQuery",
        "AJAX",
        "AWS",
        "Apache",
        "Cordoba",
        "JMeter",
        "Karma",
        "Jasmine",
        "WebSphere",
        "SVN",
        "Sr",
        "Java",
        "Developer",
        "Mercury",
        "Insurance",
        "Group",
        "Los",
        "Angeles",
        "CA",
        "US",
        "June",
        "June",
        "company",
        "insurance",
        "car",
        "homes",
        "Condo",
        "business",
        "auto",
        "insurance",
        "application",
        "web",
        "insurance",
        "services",
        "Application",
        "features",
        "customer",
        "care",
        "services",
        "reporting",
        "log",
        "maintenance",
        "application",
        "Struts",
        "framework",
        "hibernate",
        "log4j",
        "Responsibilities",
        "analysis",
        "design",
        "development",
        "Expense",
        "Processing",
        "system",
        "specs",
        "Use",
        "Cases",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Activity",
        "Diagrams",
        "Core",
        "Java",
        "programming",
        "collections",
        "design",
        "patterns",
        "care",
        "Java",
        "part",
        "end",
        "components",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "Spring",
        "cross",
        "concerns",
        "IOC",
        "dependency",
        "injection",
        "Hibernate",
        "data",
        "access",
        "layer",
        "information",
        "database",
        "Web",
        "services",
        "WSDL",
        "SOAP",
        "credit",
        "card",
        "information",
        "party",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "cache",
        "concepts",
        "tables",
        "project",
        "MySQL",
        "database",
        "Stored",
        "Procedures",
        "application",
        "system",
        "landscape",
        "Linux",
        "SQL",
        "database",
        "beans",
        "Spring",
        "framework",
        "AJAX",
        "Framework",
        "Dynamic",
        "Searching",
        "Bill",
        "Expense",
        "Information",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "error",
        "logs",
        "problems",
        "JUnit",
        "test",
        "cases",
        "modules",
        "CVS",
        "version",
        "control",
        "source",
        "code",
        "developers",
        "ANT",
        "scripts",
        "application",
        "WebSphere",
        "Application",
        "Server",
        "designing",
        "implementation",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "request",
        "resources",
        "development",
        "MultiTier",
        "Enterprise",
        "Applications",
        "Ext",
        "JS",
        "user",
        "interface",
        "widgets",
        "performance",
        "grids",
        "trees",
        "menus",
        "applications",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "JavaScript",
        "Spring",
        "JMS",
        "Hibernate",
        "MYSQL",
        "Eclipse",
        "log4j",
        "JUnit",
        "CSS",
        "MySQL",
        "XML",
        "CVS",
        "JavaJ2EE",
        "Developer",
        "JPMorgan",
        "Chase",
        "NY",
        "US",
        "November",
        "May",
        "CSR",
        "Dashboard",
        "facing",
        "application",
        "Prime",
        "View",
        "portal",
        "CSR",
        "client",
        "service",
        "Option",
        "Assignment",
        "events",
        "Corporate",
        "Actions",
        "Money",
        "Transfer",
        "events",
        "tool",
        "CSR",
        "view",
        "events",
        "families",
        "CSR",
        "Team",
        "Lead",
        "Area",
        "Manager",
        "today",
        "Option",
        "Exercise",
        "Corporate",
        "Actions",
        "Responsibilities",
        "Business",
        "requirements",
        "project",
        "System",
        "Requirements",
        "Detailed",
        "Design",
        "document",
        "project",
        "MVC",
        "Factory",
        "Delegate",
        "Singleton",
        "design",
        "patterns",
        "Java",
        "compilation",
        "tier",
        "EJBs",
        "Java",
        "Servlets",
        "servlets",
        "EJB",
        "WebSphere",
        "Application",
        "server",
        "session",
        "entity",
        "beans",
        "message",
        "beans",
        "XMLXSLT",
        "XML",
        "format",
        "SAML",
        "SignOn",
        "Java",
        "Classes",
        "JAXP",
        "parser",
        "Java",
        "objects",
        "data",
        "response",
        "XML",
        "Schema",
        "application",
        "Java",
        "part",
        "component",
        "thread",
        "user",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "UI",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JSON",
        "JavaScript",
        "validation",
        "Web",
        "GUI",
        "Java",
        "Script",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "AOP",
        "Module",
        "application",
        "application",
        "status",
        "Spring",
        "DAO",
        "Module",
        "Database",
        "Spring",
        "MVC",
        "Framework",
        "IOC",
        "Inversion",
        "Control",
        "design",
        "pattern",
        "relationships",
        "application",
        "components",
        "application",
        "configuration",
        "dependency",
        "specification",
        "application",
        "code",
        "singleton",
        "separation",
        "layers",
        "MQ",
        "transport",
        "cost",
        "maintenance",
        "efforts",
        "support",
        "HTTP",
        "REST",
        "JMS",
        "communications",
        "side",
        "systems",
        "Junit",
        "tests",
        "unit",
        "test",
        "module",
        "application",
        "Wrote",
        "Ant",
        "Scripts",
        "WAR",
        "files",
        "build",
        "J2EE",
        "components",
        "Code",
        "Review",
        "Unit",
        "Testing",
        "Integration",
        "Testing",
        "data",
        "flow",
        "screens",
        "object",
        "interaction",
        "layer",
        "serverside",
        "components",
        "Rational",
        "Rose",
        "Case",
        "Diagrams",
        "Class",
        "Diagrams",
        "Sequence",
        "diagrams",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "JavaScript",
        "EJB",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "XMLXSLT",
        "SOAP",
        "Junit",
        "Java",
        "Servlets",
        "Rational",
        "Rose",
        "Software",
        "Engineer",
        "Sasken",
        "Communication",
        "System",
        "Ltd",
        "June",
        "September",
        "project",
        "interface",
        "TVs",
        "Hifi",
        "equipment",
        "control",
        "AV",
        "equipment",
        "user",
        "access",
        "procedure",
        "profile",
        "AVC",
        "command",
        "extension",
        "AVC",
        "digital",
        "interface",
        "command",
        "Handsfree",
        "profile",
        "facility",
        "user",
        "music",
        "Bluetooth",
        "Dongle",
        "control",
        "Microsoft",
        "Window",
        "Media",
        "Player",
        "Responsibilities",
        "Requirement",
        "Analysis",
        "Company",
        "systems",
        "design",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "WEB",
        "Service",
        "architecture",
        "XML",
        "SOAP",
        "systems",
        "agents",
        "applications",
        "SOAP",
        "XML",
        "Request",
        "Response",
        "WEB",
        "Service",
        "WSDL",
        "XML",
        "SPY",
        "WEB",
        "Service",
        "Apache",
        "SOAP",
        "API",
        "WASD",
        "subsystem",
        "tasks",
        "data",
        "loads",
        "consistency",
        "check",
        "clients",
        "data",
        "extract",
        "SERVLETS",
        "session",
        "Entry",
        "bean",
        "classes",
        "WEB",
        "screens",
        "Customization",
        "screens",
        "JSP",
        "Designed",
        "team",
        "Client",
        "module",
        "XSL",
        "conversions",
        "XML",
        "format",
        "SAML",
        "SignOn",
        "XSLT",
        "XALAN",
        "SERVLETS",
        "JSP",
        "age",
        "JSP",
        "execution",
        "monitor",
        "design",
        "patterns",
        "project",
        "Business",
        "Delegate",
        "Data",
        "Transfer",
        "Object",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Singleton",
        "JDBC",
        "database",
        "business",
        "module",
        "applications",
        "XML",
        "documents",
        "build",
        "scripts",
        "UNIX",
        "database",
        "interaction",
        "SQL",
        "Queries",
        "Oracle",
        "8i",
        "Database",
        "Fund",
        "repository",
        "Health",
        "Check",
        "module",
        "health",
        "system",
        "service",
        "WEBSPHERE",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "WSDL",
        "JavaScript",
        "SQL",
        "Oracle",
        "SERVLETS",
        "UNIX",
        "WEBSPHERE",
        "Education",
        "Bachelors",
        "Skills",
        "database",
        "years",
        "J2ee",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "years",
        "Additional",
        "Information",
        "SKILL",
        "SET",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JSTL",
        "JDBC",
        "JMS",
        "JNDI",
        "RMI",
        "EJB",
        "JFCSwing",
        "AWT",
        "Applets",
        "Java",
        "Networking",
        "Programming",
        "Languages",
        "Java161718",
        "C",
        "C",
        "SQL",
        "Scala",
        "PLSQL",
        "ApplicationWeb",
        "Servers",
        "OracleBEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "Jboss",
        "Tomcat",
        "Bug",
        "Jenkins",
        "Frameworks",
        "Struts",
        "2x1x",
        "Spring",
        "4x3x",
        "Hibernate",
        "JSF",
        "iBatis",
        "Flex",
        "UI",
        "Frameworks",
        "jQuery",
        "NodeJS",
        "ReactJs",
        "Bootstrap",
        "IDEs",
        "Eclipse",
        "IBM",
        "WSAD",
        "IntelliJ",
        "Dream",
        "viewer",
        "Web",
        "technologies",
        "HTMLHTML5",
        "CSSCSS3",
        "XHTML",
        "JavaScript",
        "Ajax",
        "jQuery",
        "AngularJS24",
        "JSON",
        "BackBonejs",
        "Web",
        "Services",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "SOAP",
        "REST",
        "SOAP",
        "UI",
        "XML",
        "Tools",
        "JAXB",
        "Apache",
        "Axis",
        "Methodologies",
        "Agile",
        "Scrum",
        "RUP",
        "TDD",
        "SDLC",
        "Modeling",
        "Tools",
        "UML",
        "Rational",
        "Rose",
        "Visio",
        "Testing",
        "technologiestools",
        "JUnit",
        "JMeter",
        "HTML",
        "Unit",
        "Database",
        "Servers",
        "Oracle",
        "G",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "NOSQLMongoDB",
        "Cassandra",
        "Version",
        "Control",
        "Git",
        "CVS",
        "SVN",
        "Build",
        "Tools",
        "Gradle",
        "Maven",
        "ANT",
        "Platforms",
        "Windows",
        "Linux",
        "UNIX",
        "Mac",
        "Windows",
        "Containerization",
        "Tools",
        "Docker",
        "Dockerswarm",
        "Kubernetes",
        "Cloud",
        "Developments",
        "ELB",
        "Spring",
        "PCFpivotal",
        "cloud",
        "foundry"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:47:15.106782",
    "resume_data": "Sr JavaJ2ee Full Stack Developer Sr span lJavaspanJ2ee Full Stack span lDeveloperspan Sr JavaJ2ee Full Stack Developer OptumUnited Health Group Minneapolis MN 9 years of IT experience in Design Development Implementation and Testing of applications using JavaJ2EE Experience working with Software Development Life CycleSDLC methodologiesAgile Scrum Waterfall Model Experience in implementing Java EE design patterns such as MVC Singleton Abstract Factory Session Faade DAO DTO and business Delegate in the development of MultiTier distributed Enterprise Applications Experience in developing UI applications using HTML CSS Backbone Js Bootstrap Angular React Ajax Nodejs JSP Extensive experience in Core Java concepts like Exception Handling MultiThreading Synchronization Serialization IO Collections Framework Java Beans Experience in developing JavaJ2EE applications using JSP JSF Servlets Struts Spring Hibernate Webservices SOAP REST XML XSD XSL and JNDI Experience with Spring MVC IOC Spring JDBC Spring JTA Spring IO Spring Boot Spring Dashboard Spring Microservices Spring Ribbon Spring Netflix Spring Zuul Spring Eureka with Thymeleaf Experience in Spring Security for User Access Management and LDAP configuration for authentication Experienced in Middleware persistence frameworks like HibernateJPA for mapping java classes with database using HQL Experienced in working on modern MEAN stack MongoDB ExpressJS AngularJS and NodeJS Knowledge and experience in working with messaging brokers like Apache Kafka Active Mq Rabbit Mq Developed SQL queries procedures Triggers and Stored Procedures in database such as Oracle DB2 and MYSQL Experienced in working with multiple databases like Oracle 1011g MySQL MongoDB Cassandra and involved in converting CassandraSQL queries to Spark transformation using Spark RDDs Hands on experience with Amazon Web ServicesAWS like EC2 S3 Elastic Beanstalk ELB Load Balancers RDS VPC Route53 Cloud Watch Cloud Formation IAM SNS SQS Hands on experience with Devops tools like DockerKubernetes JenkinsCICD and knowledge on Chef Puppet Ansible Experience in creating rules using Business Rules Engines like Drools ILOG JBPM Good knowledge on Apache Storm which is used for realtime Stream processing and endtoend delivery response Experience in using different version controllingtracking systems Subversion CVS GIT and Rational Clear CaseExperienced in developing UNIX shell scripts for batch processing Experience in using build tools like ANT GRADLE MAVEN to compile package the components to application servers Experienced in developing UNIX shell scripts for batch processing Hands on experience with Integrated Development EnvironmentIDE like Eclipse IntelliJ Spring Tool SuiteSTS Experience in testing frameworks like Junit Mockito TestNG Power mock Easy mock Expertise in Selenium automation using Selenium Web Driver Selenium Grid JAVA Junit and Maven Maintained the Selenium and JAVA automation code and resources in source controls like GIT CVS and SVN Experience in configuring and deploying the applications and messaging on Tomcat WebSphere WebLogic and JBOSS Authorized to work in the US for any employer Work Experience Sr JavaJ2ee Full Stack Developer OptumUnited Health Group Minneapolis MN US October 2017 to Present Optum is health services and Innovation Company It powers modern health care by modernizing infrastructure advancing care and improving experiences Helped in production and managing of HTML pages redesign old legacy systems within the company as well as to help design a project to rebuild the internal intranet system for various departments Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Developed applications using new features of Java 1718 like Annotations Generics enhanced for loops and Enums Worked with Angular CLI and Typescript in Angular 24 to create Angular components Worked with Advanced Java 8 features like Lambda filters and Predicates for adding functionality processing capability and Stream API to facilitate pipeline processing and method to eliminate elements based on the criteria Developed UI layer for the application using HTML5 CSS3 Angular 2 and Bootstrap Worked on media queries as a compliment to the grid system of UI Bootstrap to facilitate the implementation Experience in using PrimeNG to create UI components and to create robust services and UI widgets Created arrange loop directive and components like data binding dependency injection in Angular 2 Involved in building single page cross browser compatible applications using Angular 2Angular Routing Created the Nodejs server to build MVC framework from frontend side Angular 2 to backend Oracle Worked with advanced MVC framework such as SpringIOC MVC and Batch to implement backend functionality Heavily used Spring Inheritance Auto Wiring CoreContainer Security ORM modules as part of migration from EJB to Spring Spring Quartz for scheduling tasks to generate reports Implemented SOA to develop Spring Restful and implemented Spring Eureka Netflix Ribbon using Apache AXIS Created and injected Spring services Spring Controllers and the DAOs to achieve DI and to wire objects Participated in coding Spring AOP components for the Logging Exception handling and Transactional Models Developed Spring Boot application with microservices and deployed in AWS using EC2 instances Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Worked with Kafka Cluster using Zookeeper apart from JMS as messaging service Developed Web APIS using Restful web services which can be accessed from various tools and enable CNC employees to access information on member activities Implemented Spring circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Worked on the creation of custom Docker container images tagging pushing images integration of Spring Boot Used Hibernate JPA ObjectRelationalMappingORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQL based schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Hands on experience withCassandra Installation Configuring Monitoring and Designing Shared Environment Worked on Cassandra concepts such as locking transactions indexes replications schema design Followed Java and J2EE design patterns like Singleton Service Locator Session Faade DAO during development Developed API for using AWS Lambda to manage the servers and run the code in the AWS Generated Scala and Java classes from the respective APIs so that they can be incorporated in the overall application Performed configuration deployment and support of cloud services including Amazon Web Services AWS Configured AWS Identity and Access Management IAM Groups and Users for improved login authentication Developed API for using AWS Lambda to manage the servers and run the code in the AWS Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions Including EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Developed applications using Rule Engines Drools4x Work Flows Human tasks to implement business rules validations Integrated the JBPM with the Spring Framework in the enterprise layer Designed and implemented Oracle 11g database to record the collateral securities and settlement data Integrated the JBPM with the Spring Framework in the enterprise layer Wrote SQL queries stored procedures and enhanced performance by running explain plans Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Involved in using Gray log validation tool to validate logs Developed Integration test suites for all services invoking python scripts using JSON Experience with WebLogic application server to deploy the applications and configure multiple data sources messaging Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Worked on Elastic Search and Kibana for reporting different logs of data Environment Java 8 J2EE Spring Spring Boot Spring Security Spring Eureka Netflix Ribbon Hibernate Angularjs24 HTML5 CSS 3 JavaScript JQuery and CSS SOAP WebSphere JBoss Eclipse GIT GitHub Apache Kafka Apache Camel Zookeeper Docker AWS JUnit Jenkins MongoDB Oracle Karma Jasmine Grunt Bower Sr JavaJ2ee Full Stack Developer PNC BANK Pittsburgh Pennsylvania US July 2016 to September 2017 PNC takes a personal interest in your banking needs mortgage investing credit card insurance consumer and commercial financial services This project is based on tracking portfolio growth view investment allocations access account information and view transfers and payments Responsibilities Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito Involved in various SDLC phases like Requirement gathering Design Analysis Code development and Deployment Applied Agile Test Practices SCRUM Scripted Test Cases for Test Driven Development TDD and developed test cases for story card based on Acceptance Test Driven Development ATDD Active in coding some of the Core Java concepts such as collections generics and multithreading Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set and Design patterns Developing web pages using HTML5 CSS3 JavaScript and used twitter Bootstrap for cross browser compatibility Extensive experience with AngularJS creating custom directives decorators and services to interface with both restful and legacy network services also DOM applications Involved in implementing the complete Application in the inbuild MVC Architecture with Angular js Used dateformat and moment packages in Nodejs to save the timestamp in database converting into GMT Created proofofconcept using responsive web design Nodejs HTML5 and CSS3 Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Developed spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Used popular Nodejs frameworks like Express and Restify to mock a Restful api Deep dive into the nodejs internal to understand nodejs internal performance and memory area and performance related optimization Design develop test and deliver Nodejs modules implementing various reusable services as well as parts of a central component in the platform the App Router Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Created AWS EBS volumes for storing application files for use with AWS EC2 instances whenever they are mounted to them Designed and developed UI screens with XSLT and JSF MVC to provide interactive screens to display data Developed API for using AWS Lambda to manage the servers and run the code in the AWS Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store data Extensively worked on JPA as persistence layer involving EJB30 annotations Spring Boot Micro services were developed with micro service architecture using SOAP and Apache Camel Integrated configured Camel with ActiveMQ to use it as bus Implemented a SOA compliant system working on various transactional messaging using Camels and used Session Beans Message Driven Beans Worked on Jenkins and Docker interactively and integrating together for end to end automation of builds and deployment Configured the Hibernate configuration files to persist the data to the MongoDB database Worked on Mongo DB concepts such as locking transactions indexes replications schema design Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via JSON response and updating HTML pages Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in spring boot Micro Service Applications Developed Docker images to support Development and Testing Used version control repository SVN Subversion by apache and JIRA for issue tracking Researched and trouble shooted emerging application issues from WebLogic configuration to code issues Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used Log4j framework to logtrack application Environment HTML CSS Bootstrap AJAX Multithreading JavaScript JSF 21 Angular JS Spring 3x Hibernate 3x Soap UI Maven SVN JIRA Docker Web sphere SOAP web service UnixLinux Selenium Web Logic Application Server Sr JavaJ2EE Full Stack Developer Omnicare Columbus OH US February 2015 to June 2016 Omnicares ekit system is a high performance flexible automated system A formulary is created to deliver medicines to facilities A faulty manual system where every billing was manual is now automated The facilities place the orders online and any discrepancies are reported within a week This package provides a powerful way of userdriven application with transparency security and ease in data access Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development and Customization of the Application Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed agile methodology in the Scrum Cycle model to help respond quickly to business needs Used Spring Inversion of Control IOC for injecting the beans and reduced the coupling between the classes Implemented the Model View Controller using Spring MVC Used Spring actuatorconfiguring Spring Boot application monitoring and invoking HTTP endpoints Implemented the application using Spring Boot Framework and handled the security using SpringSecurity Used XML Web Services using SOAP to register agents using non java application Curl is a command line tool for doing all sorts of URL manipulations and transfers Developed services that are reusable and interoperable based on SOAP WSDL JAXWS JAXRPC Web services by exchanging XML data between applications over HTTP Used JMS for the asynchronous exchange of critical data and events among J2EE components PublisherSubscriber method was used for data loading and PointToPoint method of JMS was used for event processing Involved in writing DAO DTOs using Hibernate DAO Support Implemented persistence layer using Hibernate that uses the POJOs which do not have the business processes to represent the persistence database tuples Worked with POJO for handling data coming from the legacy systems Configured SwaggerUI registered Micro service with Eureka server to monitor service health check Utilized Object Oriented Programming in JavaScript and DOM structure to implement various functionalities and DOM parser to parse the XML documents and XSLT for transformations Developed Interactive web pages using HTML5 CSS3 and JavaScript Develop various screens for the front end using Angular JS and used various predefined components from Node NPM Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Coded pages with best Search Engine Optimization SEO techniques Designed applications that execute on various browsers such as Internet Explorer Mozilla Firefox Google Chrome and Opera using various debugging tools like FirebugsIE Developer Tools Used MongoDB and Oracle DB for the application The legacy info was going to Oracle and rest to MongoDB Performed CRUD operations like Update Insert and Delete data in MongoDB Continuous integration services are provided for software development using JENKINS Implemented security for different frontend views based on the access privileges Spring with Tiles Framework is implemented for a common look in all the presentation views The application is designed using J2EE design patterns and technologies based on MVC architecture Used J2EE design patterns like Value Object Pattern Session faade Singleton Factory and DAO Developed JUnit test cases for DAO and Service Layer methods for all the developed modules Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files Developed the ANT scripts for preparing WAR files used to deploy J2EE components Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG Used GIT as version management JIRA for defect management system Used Log4J to capture the log that includes runtime exceptions Used RAD IDE based on Eclipse for writing code for JSP Action Classes and spring beans Interacted with quality assurance team for requirements gathering and analysis Environment Java J2EE Spring Spring DI Spring Actuator Spring Boot Spring Security SOAP WSDL JAXWS JAXRPC JMS Curl Hibernate HTML5 CSS3 Angular JS JavaScript jQuery Swagger JENKINS JSP AJAX Eureka Cassandra ANT GIT JIRA Sr Java J2EE Developer Guide One Insurance West Des Moines IA US July 2013 to January 2015 The PLPAS Project represents a major overhaul of the GuideOne Personal Lines business unit The program will involve analysis and making changes to products processes technology staffing distribution and marketing The objective of this initiative is to deliver administrative processes and underlying system capabilities necessary for the personal lines business unit to achieve their 10year strategic objectives It also implements the integrations to existing systems and vendors associated with the GuideOne PLPAS The GuideOne Personal Lines Rater PLR is an easytouse business tool It can be used to quote new business for Auto Home and Personal Excess Liability Using this system agent can create a new quote or view a specific agents quotes and issue policies Responsibilities Involved in preparing System Requirements and detailed Design document for the project Extensively used various modules in Spring like AOP DI IOC Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in developing components on Reporting Dashboard with Spring MVC Spring Framework Spring Security and Hibernate and created Microservices using Spring Boot Designed and developed the End Points Controllers Business Layer DAO Layer using Hibernate Hibernate Transaction Managementand Spring IOC Dependency Injection Extensively worked on JPA as persistence layer and Java Messaging ServiceJMS involving EJB30 annotations synchronizing Data base tables through XML in a secondary project Extensively used Session beans for implementing the business logic of module Developed Web Services SOAPHTTP SOAPJMS SMTP using SOA technologies such as SOAP WSDL and UDDI Heavily used SOAP UI Pro version for testing the Web Services Involved in consuming producing SOAP based web services using JAXWS Developed UI application modules using HTML CSS and JavaScript JSON jQuery and AJAX Used Bootstrap library to build application UIs and used AngularJS to associate HTML elements to models Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response jQuery opinionated about how a CRUD application should be built Creating crossbrowser compatible and standardscompliant CSSbased page layouts ClientSide code were written in ReactJS JQuery and serverSide Code were developed using MVC4 Used Angular Routing for navigating between screens and developed several reusable directives Database development required creation of new tables PLSQL Stored Procedures Views Indexes and Constraints Triggers and required SQL tuning to reduce the response time in the application Utilized DOM SAX parser technologies in implementing XML parsing framework Extensively used MVC Factory Delegate and Singleton design patterns Used AWS Amazon Web Services stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM Deploying managing and operating scalable highly available and fault tolerant systems Implemented responsive web design using Bootstrap and Apache Cordoba Created and Written automated regression tests using JMeter scripts for load testing Used JMeter for stress testing Selenium WebDriver for testing the automation code Develop unit test using Karma and Jasmine Followed strict patterns of RA team for unit test cases with jasmine to verify AngularJS modules and JavaScript utility routines Installed and configured WebSphere Process Server 61 and WebSphere ESB 61 WID Used version control repository SVN Subversion by apache and JIRA for issue tracking Environment Java J2EE Spring MVC Spring Security Spring Boot Spring MVC Spring IOC JPA Hibernate JMS SOAP WSDL UDDI HTML CSS JavaScript JSON jQuery AJAX AngularJS PLSQL AWS Apache Cordoba JMeter Karma Jasmine WebSphere SVN Sr Java Developer Mercury Insurance Group Los Angeles CA US June 2012 to June 2013 The insurancebased company provides insurance for car homes Condo business auto insurance etc The developed application provides web based online insurance services Application also supports features for customer care services and internal reporting and log maintenance The application had been developed using Struts framework along with hibernate and log4j Responsibilities Involved in analysis design and development of Expense Processing system and developed specs that include Use Cases Class Diagrams Sequence Diagrams and Activity Diagrams Well experienced in Core Java asynchronous programming multithreading collections and a few design patterns Taken care of complete Java multithreading part in back end components Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report and Spring for cross cutting concerns and IOC for dependency injection Used Hibernate in data access layer to access and update information in the database Used Web services WSDL and SOAP for getting credit card information from third party Used Hibernate Transaction Management Hibernate Batch Transactions cache concepts Designed various tables required for the project in MySQL database and used the Stored Procedures in the application also worked on the system landscape includes configuring Linux and SQL database Developed several annotated managed beans and integrated with Spring 3x framework Used AJAX Framework for Dynamic Searching of Bill Expense Information Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Developed JUnit test cases for all the developed modules Used CVS for version control across common source code used by developers Used ANT scripts to build the application and deployed on WebSphere Application Server Involved in designing and implementation of Session Facade Business Delegate Service Locator patterns to delegate request to appropriate resources in the development of MultiTier distributed Enterprise Applications Worked on Ext JS for user interface widgets with High performance scalable grids trees and menus Deployed the applications on IBM WebSphere Application Server Environment Core Java J2EE JSP JavaScript Spring JMS Hibernate MYSQL Eclipse 34 log4j JUnit HTML40 CSS MySQL XML CVS JavaJ2EE Developer JPMorgan Chase NY US November 2010 to May 2012 CSR Dashboard is an internal facing application accessed via the Prime View portal which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events with Corporate Actions and Money Transfer events to follow This tool provides a CSR centric view of all key events for all families supported by a CSR Team Lead or Area Manager As of today Option Exercise and Corporate Actions have been on boarded Responsibilities Identified the Business requirements of the project and involved in preparing System Requirements Involved in preparing the Detailed Design document for the project by extensively using MVC Factory Delegate and Singleton design patterns and used Java 14 for the compilation Developed the middle tier using EJBs Java Servlets and debugged the servlets and EJB with WebSphere Application server also developed session entity beans and message driven beans Used XMLXSLT for transforming common XML format and SAML for Single SignOn Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response and configured XML Schema for the application Handled Java multithreading part in backend component one thread will be running for each user Used SOAP for Web Services by exchanging XML data between applications over HTTP Designed and developed the UI using JSP HTML CSS and JavaScript AJAX JSON Whereas JavaScript is used for the clientside validation and developed Web GUI involving Java Script under MVC architecture Used Spring Framework AOP Module to implement logging in the application to know the application status Used Spring DAO Module to deal with Database Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components It is also used to separate the application configuration and dependency specification from the actual application code along with singleton to achieve clean separation of layers MQ was used to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS which involves communications without side systems Junit tests were written and performed unit test to test each module in the application Wrote Ant Scripts for preparing WAR files to automate the build and to deploy J2EE components Involved in Code Review Unit Testing and Integration Testing Designed the data flow for the clientside screens and the object interaction layer for the serverside components using Rational Rose Case Diagrams Class Diagrams and Sequence diagrams Environment Core Java J2EE JSP JavaScript EJB HTML CSS JavaScript AJAX JSON XMLXSLT SOAP Junit Java Servlets Rational Rose Software Engineer Sasken Communication System Ltd June 2009 to September 2010 This project is designed to provide a standard interface to control TVs Hifi equipment etc to allow a single remote control to control all the AV equipment to which a user has access The procedure of this profile specific AVC command is an extension of the AVC digital interface command It supports Handsfree as well as handsets both This profile gives the facility to the user to play the music with Bluetooth Dongle and remote control is also supported under Microsoft Window Media Player Responsibilities Involved in Requirement Analysis to understand the Company needs for various downstream systems Created the design using class diagrams and sequence diagrams Involved in deciding the WEB Service architecture with XML and SOAP for integrating with heterogeneous systems and to register agents using non java applications Designed and implemented SOAP XML Request and Response WEB Service WSDL using XML SPY Implemented WEB Service using Apache SOAP API 21 WASD Designed and implemented subsystem for administrative tasks like verify data loads consistency check and notify clients for data extract using SERVLETS session and Entry bean and java classes Developed dynamic WEB screens Customization of the screens done using JSP Designed and guided the team for implementing Client module and XSL conversions for transforming common XML format and SAML for Single SignOn using XSLT XALAN Tested and debugged SERVLETS JSP using Visual age JSP execution monitor Implemented various design patterns in the project such as Business Delegate Data Transfer Object Data Access Object Service Locator and Singleton Used JDBC for communicating with the database for developing business module applications Involved in writing XML documents Involved in writing build scripts using UNIX Handled database interaction writing SQL Queries Oracle 8i was used as Database for central Fund repository and designed Health Check module to monitor current health of the system The service was deployed on WEBSPHERE 40 Environment Core Java J2EE JSP WSDL JavaScript SQL SAML Oracle 8i SERVLETS UNIX WEBSPHERE 40 Education Bachelors Skills database 9 years J2ee 9 years Java 9 years JavaScript 9 years SOAP 9 years Additional Information SKILL SET JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java161718 C C SQL Scala PLSQL ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Frameworks Struts 2x1x Spring 4x3x 2x Hibernate 3x JSF 1220 iBatis Flex UI Frameworks jQuery AngularJS NodeJS ReactJs Bootstrap IDEs Eclipse 3x IBM WSAD IntelliJ Dream viewer Web technologies HTMLHTML5 CSSCSS3 XHTML JavaScript Ajax jQuery AngularJS24 JSON BackBonejs Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI XML Tools JAXB Apache Axis Methodologies Agile Scrum RUP TDD OOAD SDLC Modeling Tools UML Rational Rose Visio Testing technologiestools JUnit JMeter HTML Unit Database Servers Oracle 8i9i10g11G DB2 SQL Server 200020052008 MySQL NOSQLMongoDB Cassandra Version Control Git CVS SVN Build Tools Gradle Maven ANT Platforms Windows 20009895NT40 Linux UNIX Mac Windows Containerization Tools Docker Dockerswarm Kubernetes Cloud Developments EC2S3Elastic ELB Spring PCFpivotal cloud foundry",
    "unique_id": "9347bec0-affe-4215-9da8-297d869d0afa"
}