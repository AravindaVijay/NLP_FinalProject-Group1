{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Comcast Philadelphia PA Over 7 years of experience as an Application developer product development software development and design using Python Django XML HTML DHTML C Oracle PLSQL Postgres Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupyter Notebook PyCharm Emacs Spyder and Visual Studio Experience with Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experienced in MVC frameworks like Flask and Pyramid and MVT framework like Django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB and Postgres Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Interested and have good experience with Computer Vision Deep Learning OpenCV4 Having Good Experience in Object Oriented Concepts with C and Python 3x Chetan S saipy252gmailcom   Python Developer Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Work Experience Python Developer Comcast Philadelphia PA August 2016 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Troubleshoot any product issues with vendors Python Developer Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs and SQLAlchemy to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Developed new pages in web application and added functionality to existing application using Javaj2ee and ATG framework Developed Data driven Keyword driven and Hybrid automation framework for web application testing using Javaj2ee and selenium framework Involved in front end and utilized Bootstrap and Angularjs for page design Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Version control using Github Developed Dog Breed Classifier web application using Flask Preprocessed 11GB of dog dataset including 133 dog breeds and 8351 dog images and 188MB human dataset including 13233 human images using Keras Analyzed datasets using pretrained ResNet50 deep learning neural network model and compared 3 CNN models including transfer learning to optimize performance Best CNN model achieved 825 accuracy Identified of malign moles on skin Created a tool that considering the image of a mole can calculate the probability that a mole can be malign Analyzed 1208 benign images and 849 malignant images collected from International Skin Imaging Collaboration archive Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Involved in writing stored procedures using MySQL Idea generation Research and development Testing Analysis and Rollout are done on the prototype we developed Python Developer Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting Pandas PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Barclays Hanover NJ October 2013 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation We created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Implemented Restful WebServices for sending and receiving the data between multiple systems We used to send text data through we socket with most APis and JSON Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Python Developer Python developer Zettastar Solutions Hyd June 2011 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Project 1 May 10 June 11 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Prototype modeling and testing various web applications Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Python Developer Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap MS SQL Server TSQL JavaScript Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Javascript MySQL Python Links http Additional Information TECHNICAL SKILLS Operating Unix Linux Windows and Mac Systems Programming Python Language and FlaskpandasmatplotlibtensorflowpyTorchnumpyDataTableOpenCV4 Skills PLSQL Product Development AngularJS JAVA R C LINUX UNIX Databases Oracle 1011g MySQL SQLAlchemy SQL Server PostgreSQL MONGODB Tools Intellij Docker Kuberneters CICD systems Jenkins PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code Jupyter Notebook MySQL workbench Integration Jenkins and Web Builder Tools Cloud and AWS GCP GitHub and SVN Version Control Defect Tracking JIRA Git and Version One",
    "entities": [
        "GUI",
        "Github Developed Dog Breed Classifier",
        "Witbe Tool",
        "UNIX",
        "Prototype",
        "Flask Preprocessed",
        "Interfacing",
        "TKinter",
        "XML",
        "SVM Neural Networks",
        "Front Arena Worked",
        "Software Development Life Cycle Database",
        "Shell",
        "International Skin Imaging Collaboration",
        "Computer Vision Deep Learning",
        "Implemented Restful WebServices",
        "Zettastar Solutions",
        "Python",
        "Stored Procedures",
        "Developed",
        "Present Responsibilities Responsible",
        "Django",
        "Bitbucket Worked",
        "Barclays Hanover NJ",
        "Developed Business Logic",
        "Git",
        "Waterfall",
        "Object Oriented Concepts",
        "Additional Information TECHNICAL SKILLS",
        "HTML5",
        "Linux",
        "JSP",
        "Flask",
        "DOM JSON PHP HTML5",
        "Version",
        "DOM",
        "Views",
        "Bash Shell Scripting",
        "Responsibilities Developed Views",
        "MVC",
        "Agile",
        "PythonPerl",
        "Python Developer Extensive",
        "Amazon Web Services AWS Knowledge of SOAREST",
        "Python Developer Interfacing",
        "Created",
        "UNIX Work Experience Python Developer Comcast Philadelphia",
        "DHTML C Oracle PLSQL Postgres Developed Consumerbased",
        "Oracle",
        "Coded",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Oracle DB",
        "Developed Data",
        "JIRA Maintained",
        "Bugzilla Unit",
        "Performed Unit",
        "SQL",
        "Linear Regression Logistic Regression",
        "GitHub",
        "lPythonspan",
        "AWS GCP GitHub",
        "Wireshark",
        "CICD",
        "Pandas",
        "CRUD",
        "Build",
        "Performed",
        "ATG",
        "Created UI",
        "Djangos",
        "JavaScript",
        "UI",
        "SVN Version Control Defect Tracking JIRA Git",
        "CNN",
        "Created Business Logic",
        "Django Database",
        "Firebase",
        "CSS",
        "Firestore",
        "REST",
        "Spring DAO",
        "PHP",
        "NoSQL",
        "Machine Learning",
        "Application",
        "Python Developed",
        "Integration"
    ],
    "experience": "Experience with Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experienced in MVC frameworks like Flask and Pyramid and MVT framework like Django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB and Postgres Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Interested and have good experience with Computer Vision Deep Learning OpenCV4 Having Good Experience in Object Oriented Concepts with C and Python 3x Chetan S saipy252gmailcom    Python Developer Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Work Experience Python Developer Comcast Philadelphia PA August 2016 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Troubleshoot any product issues with vendors Python Developer Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs and SQLAlchemy to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Developed new pages in web application and added functionality to existing application using Javaj2ee and ATG framework Developed Data driven Keyword driven and Hybrid automation framework for web application testing using Javaj2ee and selenium framework Involved in front end and utilized Bootstrap and Angularjs for page design Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Version control using Github Developed Dog Breed Classifier web application using Flask Preprocessed 11 GB of dog dataset including 133 dog breeds and 8351 dog images and 188 MB human dataset including 13233 human images using Keras Analyzed datasets using pretrained ResNet50 deep learning neural network model and compared 3 CNN models including transfer learning to optimize performance Best CNN model achieved 825 accuracy Identified of malign moles on skin Created a tool that considering the image of a mole can calculate the probability that a mole can be malign Analyzed 1208 benign images and 849 malignant images collected from International Skin Imaging Collaboration archive Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Involved in writing stored procedures using MySQL Idea generation Research and development Testing Analysis and Rollout are done on the prototype we developed Python Developer Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting Pandas PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Barclays Hanover NJ October 2013 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation We created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Implemented Restful WebServices for sending and receiving the data between multiple systems We used to send text data through we socket with most APis and JSON Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Python Developer Python developer Zettastar Solutions Hyd June 2011 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Project 1 May 10 June 11 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Prototype modeling and testing various web applications Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Python Developer Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap MS SQL Server TSQL JavaScript Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Javascript MySQL Python Links http Additional Information TECHNICAL SKILLS Operating Unix Linux Windows and Mac Systems Programming Python Language and FlaskpandasmatplotlibtensorflowpyTorchnumpyDataTableOpenCV4 Skills PLSQL Product Development AngularJS JAVA R C LINUX UNIX Databases Oracle 1011 g MySQL SQLAlchemy SQL Server PostgreSQL MONGODB Tools Intellij Docker Kuberneters CICD systems Jenkins PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code Jupyter Notebook MySQL workbench Integration Jenkins and Web Builder Tools Cloud and AWS GCP GitHub and SVN Version Control Defect Tracking JIRA Git and Version One",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "years",
        "experience",
        "Application",
        "developer",
        "product",
        "development",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "XML",
        "HTML",
        "DHTML",
        "C",
        "Oracle",
        "PLSQL",
        "Postgres",
        "Consumerbased",
        "custom",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupyter",
        "Notebook",
        "PyCharm",
        "Emacs",
        "Spyder",
        "Visual",
        "Studio",
        "Experience",
        "Machine",
        "Learning",
        "Linear",
        "Regression",
        "Logistic",
        "Regression",
        "SVM",
        "Neural",
        "Networks",
        "CNNs",
        "LSTMs",
        "RNNs",
        "xgboost",
        "machine",
        "learning",
        "libraries",
        "tensorflow",
        "pytorch",
        "Theano",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "MVC",
        "frameworks",
        "Flask",
        "Pyramid",
        "MVT",
        "framework",
        "Django",
        "Experience",
        "CICD",
        "systems",
        "Git",
        "Jenkins",
        "experience",
        "Bitbucket",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "experience",
        "technologies",
        "Java",
        "UML",
        "HTML",
        "JSP",
        "Servlets",
        "JMS",
        "JDBC",
        "JNDI",
        "Proficient",
        "SQL",
        "MSSQL",
        "Server",
        "MySQL",
        "Oracle",
        "DB",
        "Postgres",
        "Basic",
        "Knowledge",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Knowledge",
        "SOAREST",
        "service",
        "development",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "XML",
        "Generate",
        "Firebase",
        "auth",
        "programming",
        "experience",
        "Struts",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "IOC",
        "Spring",
        "DAO",
        "Access",
        "Google",
        "Cloud",
        "Platform",
        "resources",
        "Cloud",
        "Storage",
        "buckets",
        "Firestore",
        "databases",
        "Firebase",
        "project",
        "Basic",
        "knowledge",
        "Rest",
        "API",
        "JSON",
        "Parsing",
        "JQuery",
        "Experience",
        "end",
        "web",
        "application",
        "Python",
        "Perl",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Monitor",
        "traffic",
        "viewtracker",
        "viewmonitor",
        "Ensured",
        "standards",
        "firewalls",
        "network",
        "device",
        "version",
        "updates",
        "Experience",
        "Bash",
        "Shell",
        "Scripting",
        "SQL",
        "Java",
        "Interested",
        "experience",
        "Computer",
        "Vision",
        "Deep",
        "Learning",
        "Experience",
        "Object",
        "Oriented",
        "Concepts",
        "C",
        "Python",
        "Chetan",
        "S",
        "Python",
        "Developer",
        "experience",
        "PythonPerl",
        "phases",
        "data",
        "processing",
        "pipeline",
        "Good",
        "Experience",
        "error",
        "handling",
        "Experience",
        "automation",
        "framework",
        "Shell",
        "Experience",
        "test",
        "plans",
        "test",
        "cases",
        "specifications",
        "test",
        "coverage",
        "Familiar",
        "Agile",
        "Waterfall",
        "development",
        "methodologies",
        "Agile",
        "Methodologies",
        "Scrum",
        "standup",
        "meetings",
        "servers",
        "Active",
        "Directory",
        "maintenance",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Unit",
        "testing",
        "code",
        "bugs",
        "unit",
        "testing",
        "operating",
        "systems",
        "Windows",
        "Ubuntu",
        "Linux",
        "UNIX",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "August",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Troubleshoot",
        "product",
        "issues",
        "vendors",
        "Python",
        "Developer",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "Database",
        "APIs",
        "SQLAlchemy",
        "access",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "pages",
        "web",
        "application",
        "functionality",
        "application",
        "Javaj2ee",
        "ATG",
        "framework",
        "Developed",
        "Data",
        "Keyword",
        "Hybrid",
        "automation",
        "framework",
        "web",
        "application",
        "testing",
        "selenium",
        "framework",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Version",
        "control",
        "Github",
        "Developed",
        "Dog",
        "Breed",
        "Classifier",
        "web",
        "application",
        "Flask",
        "GB",
        "dog",
        "dataset",
        "dog",
        "breeds",
        "dog",
        "images",
        "MB",
        "dataset",
        "images",
        "Keras",
        "datasets",
        "network",
        "model",
        "CNN",
        "models",
        "transfer",
        "performance",
        "Best",
        "CNN",
        "model",
        "accuracy",
        "malign",
        "moles",
        "skin",
        "tool",
        "image",
        "mole",
        "probability",
        "mole",
        "malign",
        "images",
        "images",
        "International",
        "Skin",
        "Imaging",
        "Collaboration",
        "archive",
        "tricks",
        "CNN",
        "VGG16Data",
        "Augmentation",
        "Transfer",
        "Learning",
        "Keras",
        "Tensorflow",
        "testing",
        "accuracy",
        "procedures",
        "MySQL",
        "Idea",
        "generation",
        "Research",
        "development",
        "Testing",
        "Analysis",
        "Rollout",
        "prototype",
        "Python",
        "Developer",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQuery",
        "Wireshark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Barclays",
        "Hanover",
        "NJ",
        "October",
        "August",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "websockets",
        "Django",
        "handle",
        "backend",
        "applications",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "UI",
        "JavaScript",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "Worked",
        "MySQL",
        "NoSQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "application",
        "part",
        "Linux",
        "environment",
        "commands",
        "TKinter",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Restful",
        "WebServices",
        "data",
        "systems",
        "text",
        "data",
        "APis",
        "JSON",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "ss",
        "web",
        "application",
        "software",
        "tools",
        "clients",
        "customers",
        "test",
        "programs",
        "engineering",
        "processes",
        "Environment",
        "Linux",
        "Python",
        "Django",
        "HTML5",
        "XML",
        "JavaScript",
        "JQuery",
        "MS",
        "SQL",
        "Server",
        "NoSQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "Beautiful",
        "soup",
        "Eclipse",
        "Git",
        "GitHub",
        "JIRA",
        "Python",
        "Developer",
        "Python",
        "developer",
        "Zettastar",
        "Solutions",
        "Hyd",
        "June",
        "September",
        "Responsibilities",
        "build",
        "methodologies",
        "Witbe",
        "Tool",
        "Experience",
        "methodologies",
        "Python",
        "update",
        "manipulation",
        "file",
        "Python",
        "scripts",
        "tasks",
        "project",
        "team",
        "product",
        "acceptance",
        "test",
        "phase",
        "product",
        "development",
        "lifecycle",
        "Deploy",
        "Test",
        "cases",
        "Tool",
        "projects",
        "sites",
        "Web",
        "portal",
        "Installed",
        "build",
        "manager",
        "agents",
        "queue",
        "builds",
        "Application",
        "Installed",
        "Witbe",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "Experience",
        "troubleshooting",
        "code",
        "Data",
        "stage",
        "SQL",
        "procedures",
        "access",
        "data",
        "Oracle",
        "SQL",
        "server",
        "MYSQL",
        "system",
        "data",
        "management",
        "queries",
        "order",
        "performance",
        "Experience",
        "App",
        "pools",
        "web",
        "sites",
        "Python",
        "Features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Git",
        "repository",
        "GitHub",
        "project",
        "code",
        "part",
        "build",
        "deployment",
        "Experience",
        "setup",
        "office",
        "application",
        "Front",
        "Arena",
        "bug",
        "tracking",
        "tools",
        "BUGZILLA",
        "JIRA",
        "documentation",
        "projects",
        "development",
        "marketing",
        "material",
        "flyers",
        "presentations",
        "case",
        "studies",
        "writing",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Environment",
        "Python",
        "Git",
        "CSS",
        "HTML",
        "Bootstrap",
        "Django",
        "MYSQL",
        "PLSQL",
        "JIRA",
        "Project",
        "May",
        "June",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Prototype",
        "modeling",
        "web",
        "applications",
        "Django",
        "Framework",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Python",
        "Developer",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "project",
        "JIRA",
        "Agile",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "skills",
        "user",
        "web",
        "applications",
        "Frontend",
        "object",
        "JavaScript",
        "Framework",
        "JQuery",
        "Worked",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "expressions",
        "order",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "Education",
        "Masters",
        "Skills",
        "Javascript",
        "MySQL",
        "Python",
        "Links",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Unix",
        "Linux",
        "Windows",
        "Mac",
        "Systems",
        "Programming",
        "Python",
        "Language",
        "FlaskpandasmatplotlibtensorflowpyTorchnumpyDataTableOpenCV4",
        "Skills",
        "PLSQL",
        "Product",
        "Development",
        "AngularJS",
        "R",
        "C",
        "LINUX",
        "UNIX",
        "Databases",
        "Oracle",
        "g",
        "MySQL",
        "SQLAlchemy",
        "SQL",
        "Server",
        "PostgreSQL",
        "MONGODB",
        "Tools",
        "Intellij",
        "Docker",
        "Kuberneters",
        "CICD",
        "systems",
        "Jenkins",
        "PyCharm",
        "File",
        "Zilla",
        "Spyder",
        "PLSQL",
        "Developer",
        "TOAD",
        "Eclipse",
        "Visual",
        "studio",
        "code",
        "Jupyter",
        "Notebook",
        "MySQL",
        "workbench",
        "Integration",
        "Jenkins",
        "Web",
        "Builder",
        "Tools",
        "Cloud",
        "AWS",
        "GCP",
        "GitHub",
        "SVN",
        "Version",
        "Control",
        "Defect",
        "Tracking",
        "JIRA",
        "Git",
        "Version"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:53:26.939319",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Comcast Philadelphia PA Over 7 years of experience as an Application developer product development software development and design using Python Django XML HTML DHTML C Oracle PLSQL Postgres Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupyter Notebook PyCharm Emacs Spyder and Visual Studio Experience with Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experienced in MVC frameworks like Flask and Pyramid and MVT framework like Django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB and Postgres Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Interested and have good experience with Computer Vision Deep Learning OpenCV4 Having Good Experience in Object Oriented Concepts with C and Python 3x Chetan S saipy252gmailcom 2673774676 wwwlinkedincominchetans2 Python Developer Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Work Experience Python Developer Comcast Philadelphia PA August 2016 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Troubleshoot any product issues with vendors Python Developer Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs and SQLAlchemy to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Developed new pages in web application and added functionality to existing application using Javaj2ee and ATG framework Developed Data driven Keyword driven and Hybrid automation framework for web application testing using Javaj2ee and selenium framework Involved in front end and utilized Bootstrap and Angularjs for page design Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Version control using Github Developed Dog Breed Classifier web application using Flask Preprocessed 11GB of dog dataset including 133 dog breeds and 8351 dog images and 188MB human dataset including 13233 human images using Keras Analyzed datasets using pretrained ResNet50 deep learning neural network model and compared 3 CNN models including transfer learning to optimize performance Best CNN model achieved 825 accuracy Identified of malign moles on skin Created a tool that considering the image of a mole can calculate the probability that a mole can be malign Analyzed 1208 benign images and 849 malignant images collected from International Skin Imaging Collaboration archive Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Involved in writing stored procedures using MySQL Idea generation Research and development Testing Analysis and Rollout are done on the prototype we developed Python Developer Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting Pandas PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Barclays Hanover NJ October 2013 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation We created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Implemented Restful WebServices for sending and receiving the data between multiple systems We used to send text data through we socket with most APis and JSON Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Python Developer Python developer Zettastar Solutions Hyd June 2011 to September 2012 Responsibilities Designed and managed build and release methodologies using Witbe Tool Experience in writing branching and merging methodologies in Python For update and manipulation of file Python scripts were used Performed various tasks in a cross functional project team during the product acceptance test phase of the product development lifecycle Deploy Test cases from Tool and automate them Created projects and portal sites in Web portal Installed and configured build manager and agents to queue builds in Application Installed Witbe Python Jira test Rail as part of server setups Experience in deploying and troubleshooting code to Data stage SQL and PLSQL stored procedures were used to create access to data and deployed them to Oracle and SQL server databases Using MYSQL a system of data management was designed and developed where queries were optimized in order to improve the performance Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Git repository was created and added to GitHub project Can review code as part of build and deployment Experience in setup and deploying front office application called Front Arena Worked with bug tracking tools like BUGZILLA and JIRA Maintained technical documentation for projects along with the development of marketing material such as flyers presentations case studies Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Environment Python 27 Git CSS 3 HTML 5 Bootstrap Django MYSQL PLSQL JIRA Project 1 May 10 June 11 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Prototype modeling and testing various web applications Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Python Developer Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap MS SQL Server TSQL JavaScript Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Javascript MySQL Python Links httpwwwlinkedincominchetans2 Additional Information TECHNICAL SKILLS Operating Unix Linux Windows and Mac Systems Programming Python Language and FlaskpandasmatplotlibtensorflowpyTorchnumpyDataTableOpenCV4 Skills PLSQL Product Development AngularJS JAVA R C LINUX UNIX Databases Oracle 1011g MySQL SQLAlchemy SQL Server PostgreSQL MONGODB Tools Intellij Docker Kuberneters CICD systems Jenkins PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code Jupyter Notebook MySQL workbench Integration Jenkins and Web Builder Tools Cloud and AWS GCP GitHub and SVN Version Control Defect Tracking JIRA Git and Version One",
    "unique_id": "f879fba9-877e-4593-afac-f0336449c331"
}