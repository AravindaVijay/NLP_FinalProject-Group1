{
    "clean_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer DXC Technology Dallas TX Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer DXC Technology Dallas TX April 2017 to Present Roles Responsibilities Developed the Micro Services using Spring Boot that create update delete and get the assignment information from backend Used Spring Boot for the application development Designed the system based on Spring MVC architecture Developed a business logic layer using Spring Framework Wrote services to store and retrieve user data from the Mongo DB for the application on devices Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Worked on user interface design and development using Angularjs jQuery AJAX JSON Bootstrap DOM HTML and CSS Developed Data Access Object DAO for interacting with database using Hibernate Developed and consumed JSON based RESTful services using Spring MVC and Spring Boot Extensively worked on Spring Framework such as Spring Boot Spring MVC Spring IOC Spring Resources and Spring JDBC Implemented Microservices using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka server Configured and verified AWS workstations as per application requirement Worked on Relational Database RDBMS concepts database designing Normalization PLSQL Stored Procedures Triggers and extensively worked with SQL Server Oracle and MySQL Used JMS API for communication between the components Wrote complex PLSQL queries using joins Stored Procedures Functions Triggers cursors and indexes in Data Access Layer Implemented Spring Data Elastic Search using Spring Boot RepositoryDAO Collaborated with testers and developers and prepared test plans for producing high quality software applications Used JUnit and build tools such as MAVEN Worked on Log4j for logging errors messages and performance logs and SVN for version control Worked on Eclipse toolbar open the dropdown Amazon Web Services menu identified by the AWS icon and select AWS Lambda Java project Used Jenkins with Maven to Compile Build Microservices java code and configure Build Triggers Created an AWS RDS Aurora DB cluster and connected to the database through an Amazon RDS Aurora DB Instance using the Amazon RDS Console Wrote Producer APIs to read the Feed files JSON and publish Assortments Products to Apache Kafka Topic by using custom Serializers Developed POJO classes and configuration files and Involved in writing some Junit Test cases Responsible for setting up the Splunk forwarder Splunk has been used as an effective search tool in our project to reduce errors and production ticket Worked on AWS High Availability Practices and deploying backuprestore infrastructure Implemented Business logic in the middletier using Java classes Java beans and MultiThreading and Caching were used to improve user experience Environment Java 8 Spring 50 Spring boot Hibernate 3 Apache Kafka GIT SVN1 Webservices Rest SOAP MongoDB LDAP HTML CSS JavaScript Bootstrap JSON Splunk jQuery Angular 2 Angular JS Xml Stored Procedures JUnit Ant Windows AgileScrum Sr Full Stack Java Developer BCBS Raleigh NC November 2015 to April 2017 Roles Responsibilities Interacted with team members and involved in analysis design and implementation phases of the software development lifecycle SDLC for the various software modules of the Mobile Wallet application Deployed application using Pivotal Cloud Foundry PCF CLI and with Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Developed Sales and Margin module using Spring Boot Microservices Extensively involved in developing robust and highly scalable applications based on Microservices architecture Used Eclipse IDE as the development environment to design and develop the code Designed and developed various modules of the application with J2EE design architecture using Spring MVC frame work and deployed the spring components on WebLogic Worked on ISO parser tool with Pivotal Cloud Foundry PCF and trained on Technical Essentials and Architecture with Amazon Web Services AWS Worked on Cloud Foundry User Account and Authentication UAA OAuth2Authorization and Spring Involved in the integration of Spring components for implementing Inversion of Control IOC using Dependency Injection and integration of other spring components like Dispatcher Servlets Controllers Model and View Objects Created and updated database objects in Concept Wave frameworks Working in an intense iteration based lean agile system and Integrated Junit 4 test cases into the application and promoted testdriven development within the team Under the Spring framework used JAXB to map Java classes to Xml schemas and used XSLT to transform the XML files XSD was used to describe the structure of Xml Used AJAX and JavaScript for Server sideclientside validation Worked on AWS Lambda AWS code deploys AWS CloudFormation and cloud foundry Used MS Visio Dreamweaver and Photoshop tools for web application development Used Struts 2 framework along with Spring and to model the application in MVC architecture Incorporated multithreaded techniques for creating high performance applications Multithreading was used to process data in chunks to improve performance Used new Java 8 features Streams Collectors Lambda new Executor service Developed application using Groovy Grails GSP GORM and Grails Plugins and Grails Rest Services Implemented stored procedures using the Hibernate framework For the front end interactive and dynamic webpages were created using HTML CSS JavaScript JSP JSTL tags and AngularJS Nodejs ExtJS Redux as the webframework Used Nodejs ExtJS for asynchronous data communication between server and client Extensively used Core Java such as Exceptions and Collections Implemented Multithreading Synchronization using Thread pools executive service and lock interfaces Developed helper utility for MongoDB interaction Worked on Amazon Web Services AWS for a multitude of applications utilizing the AWS stack such as EC2 VPC Glacier Route53 S3 RDS Cloud Watch Cloud Trial WAF SNS and IAM focusing on highavailability fault tolerance Load balancing and autoscaling in designing Deploying and configuring Implemented Spring Boot Micro services to divide the application into various sub modules Involved in designing application system requirements and coded backend and frontend in Python Used SOAP and WSDL Web Services to exchange information over Http Used Splunk and Log4j as the Logging Framework Implemented a Distributed task execution framework on AWS Amazon EC2 using Amazons SQS and DynamoDB and evaluated the performance Building UNIX shell scripts for data migration batch processing Built and deployed scripts using Apache Ant Designed a data model in Cassandra POC for storing server performance data Ingested data from Hive into Cassandra Implemented a Data service as a rest API project to retrieve server utilization data from this Cassandra Table Environment Java 8 Spring 30 Struts 2 Redux Splunk Pivotal Cloud Foundry Linux Shell Scripting spring boot AWS Hibernate 30 MongoDB Python Spring Batch Concept Wave Test Driven Development TDD Multithreading Cassandra Web ServicesRest Apache CXF WebSphere Spring HTML JSP CSS JavaScript JSON jQuery AngularJS Nodejs ExtJS Grails XML XSL Microservices XSLT XSD JAXB Tomcat SQL Server Mockito JUnit Ant Log4j Windows Lean AgileScrum Java J2EE Developer Farm and Local Bedford NH August 2014 to November 2015 Roles Responsibilities Extensively involved in developing Web interface using JSP JSP Standard Tag Libraries JSTL using Struts Framework Developed application using spring MVC Spring Batch JSP JSTL and AJAX on the presentation layer the business layer is built using spring Working on Angular HTML5 CSS3 and Typescript Worked on additional frameworks like Bootstrap for responsive design Designed the system based on spring MVC Model architecture Developed a business logic layer using spring Dependency Injection and clientside Javabeans for DAO Design Patterns Create internal dashboards alerts and scheduled reports to monitor overall Splunk performance On boarded new data into a multitiered Splunk environment Designed and developed components relating to Concept Wave projects Created and updated database objects in Concept Wave frameworks Created Stream Rest based Application interfaces on java 8 environment Implemented batch configuration in spring boot application Created the Maven project to integrate Spring boot Restful API Oracle Microservices Worked on Java Multithreading Collections Coherence Framework Implemented Java Multithreading to refresh the cache at a given set of time interval Involved in process for builds and deployments with Maven Bamboo and Jenkins for continuous integration Created WAREAR files using MAVEN build and deployed them on JBOSS server Created multimodule Maven project and used Maven to build applications and Jenkins for continuous integration continuous deployment Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Used SOAP web service to get corporate card information and to make changes in the card database for businesses Worked with IBM SOA Suites like WebSphere MQ Programming Create API Jenkins job set up GitHub repository for Mule project also created project POM Created SOAP web service in pushing data to downstream systems and Implemented request and response objects using SOAP web services Written SQL statements for retrieving data from DB2 using JDBC Used IBM Data Studio to view and update the DB2 Database and worked on MongoDB Developed and written Stored Procedures and views to extract the needed data from DB2 and reflect on the UI Created DB2 Server Stored Procedures for implementing business logic at the database level Environment Struts 2 Spring Batch Bamboo Spring Boot MongoDB Microservices Drupal Hibernate 30 Angular 2 GitHub Concept Wave Multithreading Web Services Rest SOAP WebSphere Spring HTML JSP CSS JavaScript JSON jQuery Angular JS Xml JBOSS 62 DB2 Stored Procedures DB2 JUnit Ant Windows AgileScrum JavaJ2EE Developer Sparity India IN January 2013 to July 2014 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Used MongoDB to store Big Data in JSON format and Aggregation is used in MongoDB to Match Sort and Group operation Developed UI component with AngularJS framework by utilizing the core features like MVC pattern and Dependency Injection Developed the backend web services using Python and designed the front end of the application using Python CSS AJAX JSON Drupal and JQuery Used collections in Python for manipulating and looping through different user defined objects Used Multithreading to improve the performance for processing of data feeds Implemented Angular JS Data Binding capability in HTML5 to give user a rich and responsive experience Used jQuery to modify DOM elements content by using crossbrowser selector engine called Sizzle Developed and implemented the MVC Architectural Pattern using Spring Framework and used Spring IOC container to maintain core Objects Lifecycle Implemented test driven development TDD executed unit test plans and Grails Spock Test cases for all existing controllers Services and Domain classes and Grails Pagination to display data using Grails Templates and views Implemented Spring Security for user authentication limit login attempts and password hashing Developed Web Services SOAP using SpringWS to handle user requests and interact with other components Developed the Microservices using Spring Boot and Spring Batch that create update delete and get the assignment information from backend Implemented Spring Boot Microservices to divide the application into various sub modules Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Implemented Web Services clients for APIs by using Spring Webservice Template class Used parsers like SAX and DOM for parsing xml documents and XSLT for XML transformations Designed and Developed Stored Procedures Triggers in MS SQL to cater the needs for the entire application Developed complex SQL queries for extracting data from the database Involving in Building the modules in Linux environment with Ant Script Involved in writing Unix Shell Script for performing automated tasks Wrote JUnit Test cases for performing unit testing and used SoapUI for Web Services testing Implemented JavaJ2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Maven as java build manager to compile and package the application Used SVN as Version control to maintain a central repository for the application code Worked with QA team for testing and resolving defects and used Rally for bug tracking and project management Environment Java Spring MyBatis Redux Spring Batch MongoDB Linux Shell Scripting spring boot Python Grails Design Patterns Test Driven Development TDD Multithreading XML MS SQL SpringWS SOA SOAP Web Services SoapUI Angular JSNodejs ExtJS ReactJS jQuery CSS JSON HTML5 JUnit UML XSLT Log4J SLF4J Eclipse Maven 20 WebLogic 11g SVN Hudson Rally Linux JavaJ2EE Developer Syntel IN June 2010 to December 2012 Roles Responsibilities Designed the user interfaces using JSP Developed Custom tags JSTL to support custom User Interfaces Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Used GitHub version source control tool integrated and implemented GitHub APIs to configure and list the existing project repositories by using RESTful web services Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Involved in Transforming Data within a Hadoop Cluster using Pig Scripts Designed and developed Microservices using Java Spring and REST Implemented Business processes such as user authentication Account Transfer using Session EJBs Deployed the applications on IBM Web Sphere Application Server Used Java Messaging Services JMS and Backend Messaging for reliable and asynchronous exchange of important information such as payment status report Developed the Apache Ant scripts for preparing WAR files used to deploy J2EE components Front end developing of the Website Builder with AngularJS Bootstrap Created Jenkins jobs and running the jobs to check for any build issues Integrated Jenkins with SonarQube to check for the quality standards Used JDBC for database connectivity to Oracle 8i Written PLSQL in Oracle Database for creating tables triggers and select statements Improved code reuse and performance by making effective use of various design patterns such as Singleton Session Faade Value Object etc Involved in JUnit Testing debugging and bug fixing Used Log4j to capture the log that includes runtime exceptions and developed WAR framework to alert the client and production support in case of application failures Environment Java GitHub J2EEJSP JSTL Struts AngularJs EJB JMS Hadoop Hive JNDI Pig Jenkins Oracle Typescript Bootstrap HTML XML WSAD Web Sphere Studio Application Developer IBM Web Sphere Application Server Ant CVS Log4j Linux Education Bachelors Skills Ant 9 years Java 9 years Model view controller 9 years Modelviewcontroller 9 years Mvc 9 years",
    "entities": [
        "ISO",
        "Spring Framework",
        "SOA SOAP Web Services",
        "AJAX",
        "Incorporated",
        "JSP Developed Custom",
        "Dispatcher Servlets Controllers Model",
        "Building",
        "User Interfaces Developed",
        "Junit Test cases Responsible",
        "Grails Rest Services Implemented",
        "Ant Script Involved",
        "Implemented Spring Security",
        "IBM",
        "Amazon Web Services AWS",
        "Domain",
        "Developed Web Services SOAP",
        "XML",
        "SOAP",
        "Http Used Splunk",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "Concept Wave",
        "MAVEN Worked",
        "TX",
        "Amazon",
        "Spring Boot",
        "jQuery CSS JSON HTML5",
        "REST Implemented Business",
        "the UI Created DB2",
        "Developed",
        "Technical Essentials and Architecture",
        "Groovy Grails",
        "Rally for",
        "NC",
        "CSS Developed Data Access Object DAO",
        "Maven Bamboo",
        "GIT SVN1",
        "Exceptions and Collections Implemented Multithreading Synchronization",
        "HTML5",
        "Linux",
        "JSP",
        "Hibernate Developed",
        "Data Access Layer Implemented Spring Data Elastic Search",
        "Implemented Spring Boot Micro",
        "AWS Hibernate 30 MongoDB",
        "HTML CSS JavaScript JSP JSTL",
        "Built",
        "Version",
        "SonarQube",
        "Python CSS AJAX JSON Drupal",
        "Bootstrap Created Jenkins",
        "DOM",
        "Teradata Hadoop connectors Involved",
        "Assortments Products",
        "Implemented Microservices",
        "Created Stream Rest",
        "Mobile Wallet",
        "Oracle Database",
        "MVC",
        "Singleton Session Faade Value Object etc Involved in JUnit",
        "the Website Builder",
        "Match Sort and Group",
        "API",
        "Compile Build Microservices",
        "US",
        "QA",
        "IAM",
        "Created User",
        "Grails Spock Test",
        "Business Delegate",
        "this Cassandra Table Environment",
        "Created",
        "AWS",
        "Server",
        "Nodejs ExtJS",
        "Pivotal Cloud Foundry PCF CLI",
        "TX Authorized",
        "WebSphere MQ Programming Create API Jenkins",
        "SAX",
        "java",
        "WebLogic Worked",
        "the Logging Framework Implemented",
        "IOC Spring Resources",
        "Build Triggers Created",
        "the Amazon RDS Console Wrote",
        "SQL",
        "Developed the Microservices",
        "Normalization PLSQL Stored Procedures Triggers",
        "implementing Inversion of Control IOC",
        "Nodejs ExtJS Grails XML",
        "Amazon Web Services",
        "GitHub",
        "MAVEN",
        "Executor",
        "Integrated Junit",
        "Cassandra Implemented",
        "Nodejs ExtJS Redux",
        "Restful API Oracle Microservices Worked",
        "Implemented JavaJ2EE Design",
        "Python Grails Design Patterns Test Driven Development",
        "Big Data",
        "Hive",
        "Cassandra POC",
        "Implemented Spring Boot Microservices",
        "Transforming Data",
        "SQL Server Oracle",
        "Maven",
        "XSLT",
        "lJavaspan",
        "Front",
        "JBOSS",
        "Oracle 8i Written",
        "UML XSLT",
        "XSD",
        "Amazon Web Services AWS Worked on Cloud Foundry User Account",
        "SVN",
        "Pivotal Cloud Foundry PCF",
        "POM Created",
        "Grails Pagination",
        "Created the",
        "jQuery",
        "Python Used SOAP",
        "Web Sphere Studio Application Developer IBM Web Sphere",
        "XSLT XSD",
        "Relational Database",
        "Implemented Web Services",
        "Developed UI",
        "Created WAREAR",
        "TDD",
        "Java Multithreading Collections Coherence",
        "Application",
        "JSNodejs ExtJS"
    ],
    "experience": "Experience Sr Full Stack Java Developer DXC Technology Dallas TX April 2017 to Present Roles Responsibilities Developed the Micro Services using Spring Boot that create update delete and get the assignment information from backend Used Spring Boot for the application development Designed the system based on Spring MVC architecture Developed a business logic layer using Spring Framework Wrote services to store and retrieve user data from the Mongo DB for the application on devices Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Worked on user interface design and development using Angularjs jQuery AJAX JSON Bootstrap DOM HTML and CSS Developed Data Access Object DAO for interacting with database using Hibernate Developed and consumed JSON based RESTful services using Spring MVC and Spring Boot Extensively worked on Spring Framework such as Spring Boot Spring MVC Spring IOC Spring Resources and Spring JDBC Implemented Microservices using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka server Configured and verified AWS workstations as per application requirement Worked on Relational Database RDBMS concepts database designing Normalization PLSQL Stored Procedures Triggers and extensively worked with SQL Server Oracle and MySQL Used JMS API for communication between the components Wrote complex PLSQL queries using joins Stored Procedures Functions Triggers cursors and indexes in Data Access Layer Implemented Spring Data Elastic Search using Spring Boot RepositoryDAO Collaborated with testers and developers and prepared test plans for producing high quality software applications Used JUnit and build tools such as MAVEN Worked on Log4j for logging errors messages and performance logs and SVN for version control Worked on Eclipse toolbar open the dropdown Amazon Web Services menu identified by the AWS icon and select AWS Lambda Java project Used Jenkins with Maven to Compile Build Microservices java code and configure Build Triggers Created an AWS RDS Aurora DB cluster and connected to the database through an Amazon RDS Aurora DB Instance using the Amazon RDS Console Wrote Producer APIs to read the Feed files JSON and publish Assortments Products to Apache Kafka Topic by using custom Serializers Developed POJO classes and configuration files and Involved in writing some Junit Test cases Responsible for setting up the Splunk forwarder Splunk has been used as an effective search tool in our project to reduce errors and production ticket Worked on AWS High Availability Practices and deploying backuprestore infrastructure Implemented Business logic in the middletier using Java classes Java beans and MultiThreading and Caching were used to improve user experience Environment Java 8 Spring 50 Spring boot Hibernate 3 Apache Kafka GIT SVN1 Webservices Rest SOAP MongoDB LDAP HTML CSS JavaScript Bootstrap JSON Splunk jQuery Angular 2 Angular JS Xml Stored Procedures JUnit Ant Windows AgileScrum Sr Full Stack Java Developer BCBS Raleigh NC November 2015 to April 2017 Roles Responsibilities Interacted with team members and involved in analysis design and implementation phases of the software development lifecycle SDLC for the various software modules of the Mobile Wallet application Deployed application using Pivotal Cloud Foundry PCF CLI and with Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Developed Sales and Margin module using Spring Boot Microservices Extensively involved in developing robust and highly scalable applications based on Microservices architecture Used Eclipse IDE as the development environment to design and develop the code Designed and developed various modules of the application with J2EE design architecture using Spring MVC frame work and deployed the spring components on WebLogic Worked on ISO parser tool with Pivotal Cloud Foundry PCF and trained on Technical Essentials and Architecture with Amazon Web Services AWS Worked on Cloud Foundry User Account and Authentication UAA OAuth2Authorization and Spring Involved in the integration of Spring components for implementing Inversion of Control IOC using Dependency Injection and integration of other spring components like Dispatcher Servlets Controllers Model and View Objects Created and updated database objects in Concept Wave frameworks Working in an intense iteration based lean agile system and Integrated Junit 4 test cases into the application and promoted testdriven development within the team Under the Spring framework used JAXB to map Java classes to Xml schemas and used XSLT to transform the XML files XSD was used to describe the structure of Xml Used AJAX and JavaScript for Server sideclientside validation Worked on AWS Lambda AWS code deploys AWS CloudFormation and cloud foundry Used MS Visio Dreamweaver and Photoshop tools for web application development Used Struts 2 framework along with Spring and to model the application in MVC architecture Incorporated multithreaded techniques for creating high performance applications Multithreading was used to process data in chunks to improve performance Used new Java 8 features Streams Collectors Lambda new Executor service Developed application using Groovy Grails GSP GORM and Grails Plugins and Grails Rest Services Implemented stored procedures using the Hibernate framework For the front end interactive and dynamic webpages were created using HTML CSS JavaScript JSP JSTL tags and AngularJS Nodejs ExtJS Redux as the webframework Used Nodejs ExtJS for asynchronous data communication between server and client Extensively used Core Java such as Exceptions and Collections Implemented Multithreading Synchronization using Thread pools executive service and lock interfaces Developed helper utility for MongoDB interaction Worked on Amazon Web Services AWS for a multitude of applications utilizing the AWS stack such as EC2 VPC Glacier Route53 S3 RDS Cloud Watch Cloud Trial WAF SNS and IAM focusing on highavailability fault tolerance Load balancing and autoscaling in designing Deploying and configuring Implemented Spring Boot Micro services to divide the application into various sub modules Involved in designing application system requirements and coded backend and frontend in Python Used SOAP and WSDL Web Services to exchange information over Http Used Splunk and Log4j as the Logging Framework Implemented a Distributed task execution framework on AWS Amazon EC2 using Amazons SQS and DynamoDB and evaluated the performance Building UNIX shell scripts for data migration batch processing Built and deployed scripts using Apache Ant Designed a data model in Cassandra POC for storing server performance data Ingested data from Hive into Cassandra Implemented a Data service as a rest API project to retrieve server utilization data from this Cassandra Table Environment Java 8 Spring 30 Struts 2 Redux Splunk Pivotal Cloud Foundry Linux Shell Scripting spring boot AWS Hibernate 30 MongoDB Python Spring Batch Concept Wave Test Driven Development TDD Multithreading Cassandra Web ServicesRest Apache CXF WebSphere Spring HTML JSP CSS JavaScript JSON jQuery AngularJS Nodejs ExtJS Grails XML XSL Microservices XSLT XSD JAXB Tomcat SQL Server Mockito JUnit Ant Log4j Windows Lean AgileScrum Java J2EE Developer Farm and Local Bedford NH August 2014 to November 2015 Roles Responsibilities Extensively involved in developing Web interface using JSP JSP Standard Tag Libraries JSTL using Struts Framework Developed application using spring MVC Spring Batch JSP JSTL and AJAX on the presentation layer the business layer is built using spring Working on Angular HTML5 CSS3 and Typescript Worked on additional frameworks like Bootstrap for responsive design Designed the system based on spring MVC Model architecture Developed a business logic layer using spring Dependency Injection and clientside Javabeans for DAO Design Patterns Create internal dashboards alerts and scheduled reports to monitor overall Splunk performance On boarded new data into a multitiered Splunk environment Designed and developed components relating to Concept Wave projects Created and updated database objects in Concept Wave frameworks Created Stream Rest based Application interfaces on java 8 environment Implemented batch configuration in spring boot application Created the Maven project to integrate Spring boot Restful API Oracle Microservices Worked on Java Multithreading Collections Coherence Framework Implemented Java Multithreading to refresh the cache at a given set of time interval Involved in process for builds and deployments with Maven Bamboo and Jenkins for continuous integration Created WAREAR files using MAVEN build and deployed them on JBOSS server Created multimodule Maven project and used Maven to build applications and Jenkins for continuous integration continuous deployment Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Used SOAP web service to get corporate card information and to make changes in the card database for businesses Worked with IBM SOA Suites like WebSphere MQ Programming Create API Jenkins job set up GitHub repository for Mule project also created project POM Created SOAP web service in pushing data to downstream systems and Implemented request and response objects using SOAP web services Written SQL statements for retrieving data from DB2 using JDBC Used IBM Data Studio to view and update the DB2 Database and worked on MongoDB Developed and written Stored Procedures and views to extract the needed data from DB2 and reflect on the UI Created DB2 Server Stored Procedures for implementing business logic at the database level Environment Struts 2 Spring Batch Bamboo Spring Boot MongoDB Microservices Drupal Hibernate 30 Angular 2 GitHub Concept Wave Multithreading Web Services Rest SOAP WebSphere Spring HTML JSP CSS JavaScript JSON jQuery Angular JS Xml JBOSS 62 DB2 Stored Procedures DB2 JUnit Ant Windows AgileScrum JavaJ2EE Developer Sparity India IN January 2013 to July 2014 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Used MongoDB to store Big Data in JSON format and Aggregation is used in MongoDB to Match Sort and Group operation Developed UI component with AngularJS framework by utilizing the core features like MVC pattern and Dependency Injection Developed the backend web services using Python and designed the front end of the application using Python CSS AJAX JSON Drupal and JQuery Used collections in Python for manipulating and looping through different user defined objects Used Multithreading to improve the performance for processing of data feeds Implemented Angular JS Data Binding capability in HTML5 to give user a rich and responsive experience Used jQuery to modify DOM elements content by using crossbrowser selector engine called Sizzle Developed and implemented the MVC Architectural Pattern using Spring Framework and used Spring IOC container to maintain core Objects Lifecycle Implemented test driven development TDD executed unit test plans and Grails Spock Test cases for all existing controllers Services and Domain classes and Grails Pagination to display data using Grails Templates and views Implemented Spring Security for user authentication limit login attempts and password hashing Developed Web Services SOAP using SpringWS to handle user requests and interact with other components Developed the Microservices using Spring Boot and Spring Batch that create update delete and get the assignment information from backend Implemented Spring Boot Microservices to divide the application into various sub modules Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Implemented Web Services clients for APIs by using Spring Webservice Template class Used parsers like SAX and DOM for parsing xml documents and XSLT for XML transformations Designed and Developed Stored Procedures Triggers in MS SQL to cater the needs for the entire application Developed complex SQL queries for extracting data from the database Involving in Building the modules in Linux environment with Ant Script Involved in writing Unix Shell Script for performing automated tasks Wrote JUnit Test cases for performing unit testing and used SoapUI for Web Services testing Implemented JavaJ2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Maven as java build manager to compile and package the application Used SVN as Version control to maintain a central repository for the application code Worked with QA team for testing and resolving defects and used Rally for bug tracking and project management Environment Java Spring MyBatis Redux Spring Batch MongoDB Linux Shell Scripting spring boot Python Grails Design Patterns Test Driven Development TDD Multithreading XML MS SQL SpringWS SOA SOAP Web Services SoapUI Angular JSNodejs ExtJS ReactJS jQuery CSS JSON HTML5 JUnit UML XSLT Log4J SLF4J Eclipse Maven 20 WebLogic 11 g SVN Hudson Rally Linux JavaJ2EE Developer Syntel IN June 2010 to December 2012 Roles Responsibilities Designed the user interfaces using JSP Developed Custom tags JSTL to support custom User Interfaces Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Used GitHub version source control tool integrated and implemented GitHub APIs to configure and list the existing project repositories by using RESTful web services Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Involved in Transforming Data within a Hadoop Cluster using Pig Scripts Designed and developed Microservices using Java Spring and REST Implemented Business processes such as user authentication Account Transfer using Session EJBs Deployed the applications on IBM Web Sphere Application Server Used Java Messaging Services JMS and Backend Messaging for reliable and asynchronous exchange of important information such as payment status report Developed the Apache Ant scripts for preparing WAR files used to deploy J2EE components Front end developing of the Website Builder with AngularJS Bootstrap Created Jenkins jobs and running the jobs to check for any build issues Integrated Jenkins with SonarQube to check for the quality standards Used JDBC for database connectivity to Oracle 8i Written PLSQL in Oracle Database for creating tables triggers and select statements Improved code reuse and performance by making effective use of various design patterns such as Singleton Session Faade Value Object etc Involved in JUnit Testing debugging and bug fixing Used Log4j to capture the log that includes runtime exceptions and developed WAR framework to alert the client and production support in case of application failures Environment Java GitHub J2EEJSP JSTL Struts AngularJs EJB JMS Hadoop Hive JNDI Pig Jenkins Oracle Typescript Bootstrap HTML XML WSAD Web Sphere Studio Application Developer IBM Web Sphere Application Server Ant CVS Log4j Linux Education Bachelors Skills Ant 9 years Java 9 years Model view controller 9 years Modelviewcontroller 9 years Mvc 9 years",
    "extracted_keywords": [
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Sr",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "DXC",
        "Technology",
        "Dallas",
        "TX",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "DXC",
        "Technology",
        "Dallas",
        "TX",
        "April",
        "Present",
        "Roles",
        "Responsibilities",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "update",
        "assignment",
        "information",
        "Used",
        "Spring",
        "Boot",
        "application",
        "development",
        "system",
        "Spring",
        "MVC",
        "architecture",
        "business",
        "logic",
        "layer",
        "Spring",
        "Framework",
        "Wrote",
        "services",
        "user",
        "data",
        "Mongo",
        "DB",
        "application",
        "devices",
        "Microservices",
        "Cloud",
        "Foundry",
        "platform",
        "build",
        "Spring",
        "Boot",
        "Services",
        "user",
        "interface",
        "design",
        "development",
        "Angularjs",
        "jQuery",
        "AJAX",
        "JSON",
        "Bootstrap",
        "DOM",
        "HTML",
        "CSS",
        "Developed",
        "Data",
        "Access",
        "Object",
        "DAO",
        "database",
        "Hibernate",
        "Developed",
        "JSON",
        "services",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Framework",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "Resources",
        "Spring",
        "JDBC",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Microservices",
        "discovery",
        "Netflix",
        "Eureka",
        "server",
        "Configured",
        "AWS",
        "workstations",
        "application",
        "requirement",
        "Relational",
        "Database",
        "RDBMS",
        "concepts",
        "database",
        "Normalization",
        "PLSQL",
        "Stored",
        "Procedures",
        "Triggers",
        "SQL",
        "Server",
        "Oracle",
        "MySQL",
        "JMS",
        "API",
        "communication",
        "components",
        "Wrote",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "cursors",
        "indexes",
        "Data",
        "Access",
        "Layer",
        "Spring",
        "Data",
        "Elastic",
        "Search",
        "Spring",
        "Boot",
        "RepositoryDAO",
        "testers",
        "developers",
        "test",
        "plans",
        "quality",
        "software",
        "applications",
        "JUnit",
        "tools",
        "MAVEN",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "logs",
        "SVN",
        "version",
        "control",
        "Eclipse",
        "toolbar",
        "Amazon",
        "Web",
        "Services",
        "menu",
        "AWS",
        "icon",
        "AWS",
        "Lambda",
        "Java",
        "project",
        "Jenkins",
        "Maven",
        "Compile",
        "Build",
        "Microservices",
        "code",
        "configure",
        "Build",
        "Triggers",
        "AWS",
        "RDS",
        "Aurora",
        "DB",
        "cluster",
        "database",
        "Amazon",
        "RDS",
        "Aurora",
        "DB",
        "Instance",
        "Amazon",
        "RDS",
        "Console",
        "Wrote",
        "Producer",
        "APIs",
        "Feed",
        "JSON",
        "Assortments",
        "Products",
        "Apache",
        "Kafka",
        "Topic",
        "custom",
        "Serializers",
        "POJO",
        "classes",
        "configuration",
        "files",
        "Junit",
        "Test",
        "cases",
        "Splunk",
        "forwarder",
        "Splunk",
        "search",
        "tool",
        "project",
        "errors",
        "production",
        "ticket",
        "AWS",
        "Availability",
        "Practices",
        "backuprestore",
        "infrastructure",
        "Business",
        "logic",
        "middletier",
        "Java",
        "classes",
        "Java",
        "beans",
        "MultiThreading",
        "Caching",
        "user",
        "experience",
        "Environment",
        "Java",
        "Spring",
        "Spring",
        "boot",
        "Hibernate",
        "Apache",
        "Kafka",
        "GIT",
        "SVN1",
        "Webservices",
        "Rest",
        "SOAP",
        "MongoDB",
        "LDAP",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "Splunk",
        "jQuery",
        "Angular",
        "Angular",
        "JS",
        "Xml",
        "Stored",
        "Procedures",
        "JUnit",
        "Ant",
        "Windows",
        "AgileScrum",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "BCBS",
        "Raleigh",
        "NC",
        "November",
        "April",
        "Roles",
        "Responsibilities",
        "team",
        "members",
        "analysis",
        "design",
        "implementation",
        "phases",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "software",
        "modules",
        "Mobile",
        "Wallet",
        "application",
        "application",
        "Cloud",
        "Foundry",
        "PCF",
        "CLI",
        "Cloud",
        "Foundry",
        "connectionservice",
        "details",
        "cloud",
        "platform",
        "Sales",
        "Margin",
        "module",
        "Spring",
        "Boot",
        "Microservices",
        "applications",
        "Microservices",
        "architecture",
        "Eclipse",
        "IDE",
        "development",
        "environment",
        "code",
        "modules",
        "application",
        "J2EE",
        "design",
        "architecture",
        "Spring",
        "MVC",
        "frame",
        "work",
        "spring",
        "components",
        "WebLogic",
        "Worked",
        "ISO",
        "parser",
        "tool",
        "Cloud",
        "Foundry",
        "PCF",
        "Technical",
        "Essentials",
        "Architecture",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Foundry",
        "User",
        "Account",
        "Authentication",
        "UAA",
        "OAuth2Authorization",
        "Spring",
        "integration",
        "Spring",
        "components",
        "Inversion",
        "Control",
        "IOC",
        "Dependency",
        "Injection",
        "integration",
        "spring",
        "components",
        "Dispatcher",
        "Servlets",
        "Controllers",
        "Model",
        "View",
        "database",
        "objects",
        "Concept",
        "Wave",
        "frameworks",
        "iteration",
        "system",
        "Integrated",
        "Junit",
        "test",
        "cases",
        "application",
        "testdriven",
        "development",
        "team",
        "Spring",
        "framework",
        "JAXB",
        "Java",
        "classes",
        "schemas",
        "XSLT",
        "XML",
        "files",
        "XSD",
        "structure",
        "Xml",
        "Used",
        "AJAX",
        "JavaScript",
        "Server",
        "validation",
        "AWS",
        "Lambda",
        "AWS",
        "code",
        "deploys",
        "AWS",
        "CloudFormation",
        "cloud",
        "foundry",
        "Used",
        "MS",
        "Visio",
        "Dreamweaver",
        "Photoshop",
        "tools",
        "web",
        "application",
        "development",
        "Struts",
        "framework",
        "Spring",
        "application",
        "MVC",
        "architecture",
        "techniques",
        "performance",
        "applications",
        "Multithreading",
        "data",
        "chunks",
        "performance",
        "Java",
        "Streams",
        "Collectors",
        "Lambda",
        "Executor",
        "service",
        "application",
        "Groovy",
        "Grails",
        "GSP",
        "GORM",
        "Grails",
        "Plugins",
        "Grails",
        "Rest",
        "Services",
        "procedures",
        "Hibernate",
        "framework",
        "end",
        "webpages",
        "HTML",
        "CSS",
        "JavaScript",
        "JSP",
        "JSTL",
        "tags",
        "Nodejs",
        "ExtJS",
        "Redux",
        "webframework",
        "Nodejs",
        "ExtJS",
        "data",
        "communication",
        "server",
        "client",
        "Core",
        "Java",
        "Exceptions",
        "Collections",
        "Multithreading",
        "Synchronization",
        "Thread",
        "pools",
        "service",
        "interfaces",
        "helper",
        "utility",
        "MongoDB",
        "interaction",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "VPC",
        "Glacier",
        "Route53",
        "S3",
        "RDS",
        "Cloud",
        "Watch",
        "Cloud",
        "Trial",
        "WAF",
        "SNS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "Load",
        "Deploying",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "application",
        "sub",
        "modules",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "SOAP",
        "WSDL",
        "Web",
        "Services",
        "information",
        "Http",
        "Used",
        "Splunk",
        "Log4j",
        "Logging",
        "Framework",
        "task",
        "execution",
        "framework",
        "AWS",
        "Amazon",
        "EC2",
        "Amazons",
        "SQS",
        "DynamoDB",
        "performance",
        "Building",
        "UNIX",
        "shell",
        "scripts",
        "data",
        "migration",
        "batch",
        "processing",
        "scripts",
        "Apache",
        "Ant",
        "data",
        "model",
        "Cassandra",
        "POC",
        "server",
        "performance",
        "data",
        "data",
        "Hive",
        "Cassandra",
        "Data",
        "service",
        "rest",
        "API",
        "project",
        "server",
        "utilization",
        "data",
        "Cassandra",
        "Table",
        "Environment",
        "Java",
        "Spring",
        "Struts",
        "Redux",
        "Splunk",
        "Cloud",
        "Foundry",
        "Linux",
        "Shell",
        "Scripting",
        "spring",
        "boot",
        "Hibernate",
        "Python",
        "Spring",
        "Batch",
        "Concept",
        "Wave",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Multithreading",
        "Cassandra",
        "Web",
        "ServicesRest",
        "Apache",
        "CXF",
        "WebSphere",
        "Spring",
        "HTML",
        "JSP",
        "CSS",
        "JavaScript",
        "JSON",
        "jQuery",
        "Nodejs",
        "ExtJS",
        "Grails",
        "XML",
        "XSL",
        "Microservices",
        "XSLT",
        "XSD",
        "JAXB",
        "Tomcat",
        "SQL",
        "Server",
        "Mockito",
        "JUnit",
        "Ant",
        "Log4j",
        "Windows",
        "Lean",
        "AgileScrum",
        "Java",
        "J2EE",
        "Developer",
        "Farm",
        "Local",
        "Bedford",
        "NH",
        "August",
        "November",
        "Roles",
        "Responsibilities",
        "Web",
        "interface",
        "JSP",
        "JSP",
        "Standard",
        "Tag",
        "Libraries",
        "JSTL",
        "Struts",
        "Framework",
        "application",
        "spring",
        "MVC",
        "Spring",
        "Batch",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "Working",
        "Angular",
        "HTML5",
        "CSS3",
        "Typescript",
        "frameworks",
        "Bootstrap",
        "design",
        "system",
        "spring",
        "MVC",
        "Model",
        "architecture",
        "business",
        "logic",
        "layer",
        "spring",
        "Dependency",
        "Injection",
        "Javabeans",
        "DAO",
        "Design",
        "Patterns",
        "dashboards",
        "alerts",
        "reports",
        "Splunk",
        "performance",
        "data",
        "Splunk",
        "environment",
        "components",
        "Concept",
        "Wave",
        "projects",
        "database",
        "objects",
        "Concept",
        "Wave",
        "frameworks",
        "Stream",
        "Rest",
        "Application",
        "interfaces",
        "environment",
        "batch",
        "configuration",
        "spring",
        "boot",
        "application",
        "Maven",
        "project",
        "Spring",
        "boot",
        "API",
        "Oracle",
        "Microservices",
        "Java",
        "Multithreading",
        "Collections",
        "Coherence",
        "Framework",
        "Java",
        "Multithreading",
        "cache",
        "set",
        "time",
        "interval",
        "process",
        "builds",
        "deployments",
        "Maven",
        "Bamboo",
        "Jenkins",
        "integration",
        "Created",
        "WAREAR",
        "files",
        "MAVEN",
        "JBOSS",
        "server",
        "multimodule",
        "Maven",
        "project",
        "Maven",
        "applications",
        "Jenkins",
        "integration",
        "deployment",
        "Created",
        "User",
        "services",
        "Cloud",
        "Foundry",
        "database",
        "life",
        "cycles",
        "spring",
        "profile",
        "SOAP",
        "web",
        "service",
        "card",
        "information",
        "changes",
        "card",
        "database",
        "businesses",
        "IBM",
        "SOA",
        "Suites",
        "WebSphere",
        "MQ",
        "Programming",
        "Create",
        "API",
        "Jenkins",
        "job",
        "GitHub",
        "repository",
        "Mule",
        "project",
        "project",
        "POM",
        "Created",
        "SOAP",
        "web",
        "service",
        "data",
        "systems",
        "request",
        "response",
        "objects",
        "SOAP",
        "web",
        "services",
        "SQL",
        "statements",
        "data",
        "DB2",
        "JDBC",
        "IBM",
        "Data",
        "Studio",
        "DB2",
        "Database",
        "Developed",
        "Stored",
        "Procedures",
        "views",
        "data",
        "DB2",
        "UI",
        "DB2",
        "Server",
        "Stored",
        "Procedures",
        "business",
        "logic",
        "database",
        "level",
        "Environment",
        "Struts",
        "Spring",
        "Batch",
        "Bamboo",
        "Spring",
        "Boot",
        "MongoDB",
        "Microservices",
        "Drupal",
        "Hibernate",
        "Angular",
        "GitHub",
        "Concept",
        "Wave",
        "Multithreading",
        "Web",
        "Services",
        "Rest",
        "SOAP",
        "WebSphere",
        "Spring",
        "HTML",
        "JSP",
        "CSS",
        "JavaScript",
        "JSON",
        "jQuery",
        "Angular",
        "JS",
        "Xml",
        "JBOSS",
        "DB2",
        "Stored",
        "Procedures",
        "DB2",
        "JUnit",
        "Ant",
        "Windows",
        "AgileScrum",
        "JavaJ2EE",
        "Developer",
        "Sparity",
        "India",
        "January",
        "July",
        "Roles",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "prototype",
        "application",
        "business",
        "users",
        "application",
        "functionality",
        "MongoDB",
        "Big",
        "Data",
        "format",
        "Aggregation",
        "Sort",
        "Group",
        "operation",
        "UI",
        "component",
        "framework",
        "core",
        "features",
        "MVC",
        "pattern",
        "Dependency",
        "Injection",
        "web",
        "services",
        "Python",
        "end",
        "application",
        "Python",
        "CSS",
        "AJAX",
        "JSON",
        "Drupal",
        "JQuery",
        "collections",
        "Python",
        "user",
        "objects",
        "Multithreading",
        "performance",
        "processing",
        "data",
        "Angular",
        "JS",
        "Data",
        "Binding",
        "capability",
        "HTML5",
        "user",
        "experience",
        "jQuery",
        "DOM",
        "elements",
        "content",
        "crossbrowser",
        "selector",
        "engine",
        "Sizzle",
        "Developed",
        "MVC",
        "Architectural",
        "Pattern",
        "Spring",
        "Framework",
        "Spring",
        "IOC",
        "container",
        "core",
        "Objects",
        "Lifecycle",
        "test",
        "development",
        "TDD",
        "unit",
        "test",
        "plans",
        "Grails",
        "Spock",
        "Test",
        "cases",
        "controllers",
        "Services",
        "Domain",
        "classes",
        "Grails",
        "Pagination",
        "data",
        "Grails",
        "Templates",
        "Spring",
        "Security",
        "user",
        "authentication",
        "limit",
        "login",
        "attempts",
        "password",
        "Developed",
        "Web",
        "Services",
        "SOAP",
        "SpringWS",
        "user",
        "requests",
        "components",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "update",
        "assignment",
        "information",
        "Implemented",
        "Spring",
        "Boot",
        "Microservices",
        "application",
        "sub",
        "modules",
        "application",
        "Spring",
        "Batch",
        "framework",
        "Multithreading",
        "performance",
        "Multithreading",
        "processing",
        "documents",
        "Web",
        "Services",
        "clients",
        "APIs",
        "Spring",
        "Webservice",
        "Template",
        "class",
        "parsers",
        "SAX",
        "DOM",
        "xml",
        "documents",
        "XSLT",
        "XML",
        "transformations",
        "Developed",
        "Stored",
        "Procedures",
        "Triggers",
        "MS",
        "SQL",
        "needs",
        "application",
        "SQL",
        "data",
        "database",
        "modules",
        "Linux",
        "environment",
        "Ant",
        "Script",
        "Unix",
        "Shell",
        "Script",
        "tasks",
        "Wrote",
        "JUnit",
        "Test",
        "cases",
        "unit",
        "testing",
        "SoapUI",
        "Web",
        "Services",
        "testing",
        "JavaJ2EE",
        "Design",
        "patterns",
        "Business",
        "Delegate",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Maven",
        "build",
        "manager",
        "compile",
        "application",
        "SVN",
        "Version",
        "control",
        "repository",
        "application",
        "code",
        "QA",
        "team",
        "defects",
        "Rally",
        "bug",
        "tracking",
        "project",
        "management",
        "Environment",
        "Java",
        "Spring",
        "MyBatis",
        "Redux",
        "Spring",
        "Batch",
        "MongoDB",
        "Linux",
        "Shell",
        "Scripting",
        "spring",
        "boot",
        "Python",
        "Grails",
        "Design",
        "Patterns",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Multithreading",
        "XML",
        "MS",
        "SQL",
        "SOA",
        "SOAP",
        "Web",
        "Services",
        "SoapUI",
        "Angular",
        "JSNodejs",
        "ExtJS",
        "ReactJS",
        "jQuery",
        "CSS",
        "JSON",
        "HTML5",
        "JUnit",
        "UML",
        "XSLT",
        "Log4J",
        "SLF4J",
        "Eclipse",
        "Maven",
        "WebLogic",
        "g",
        "SVN",
        "Hudson",
        "Rally",
        "Linux",
        "JavaJ2EE",
        "Developer",
        "Syntel",
        "June",
        "December",
        "Roles",
        "Responsibilities",
        "user",
        "interfaces",
        "JSP",
        "Developed",
        "Custom",
        "tags",
        "JSTL",
        "custom",
        "User",
        "Interfaces",
        "application",
        "Struts",
        "Framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "GitHub",
        "version",
        "source",
        "control",
        "tool",
        "GitHub",
        "APIs",
        "project",
        "repositories",
        "web",
        "services",
        "data",
        "Teradata",
        "HDFS",
        "Teradata",
        "Hadoop",
        "connectors",
        "Transforming",
        "Data",
        "Hadoop",
        "Cluster",
        "Pig",
        "Scripts",
        "Microservices",
        "Java",
        "Spring",
        "REST",
        "Business",
        "processes",
        "user",
        "authentication",
        "Account",
        "Transfer",
        "Session",
        "EJBs",
        "applications",
        "IBM",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "Backend",
        "Messaging",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "Apache",
        "Ant",
        "scripts",
        "WAR",
        "files",
        "J2EE",
        "components",
        "Website",
        "Builder",
        "AngularJS",
        "Bootstrap",
        "Created",
        "Jenkins",
        "jobs",
        "jobs",
        "build",
        "issues",
        "Integrated",
        "Jenkins",
        "SonarQube",
        "quality",
        "standards",
        "JDBC",
        "database",
        "connectivity",
        "Oracle",
        "PLSQL",
        "Oracle",
        "Database",
        "tables",
        "triggers",
        "statements",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Singleton",
        "Session",
        "Faade",
        "Value",
        "Object",
        "JUnit",
        "Testing",
        "debugging",
        "bug",
        "Log4j",
        "log",
        "runtime",
        "exceptions",
        "WAR",
        "framework",
        "client",
        "production",
        "support",
        "case",
        "application",
        "failures",
        "Environment",
        "Java",
        "GitHub",
        "J2EEJSP",
        "JSTL",
        "Struts",
        "AngularJs",
        "EJB",
        "JMS",
        "Hadoop",
        "Hive",
        "JNDI",
        "Pig",
        "Jenkins",
        "Oracle",
        "Typescript",
        "Bootstrap",
        "HTML",
        "XML",
        "WSAD",
        "Web",
        "Sphere",
        "Studio",
        "Application",
        "Developer",
        "IBM",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Ant",
        "CVS",
        "Log4j",
        "Linux",
        "Education",
        "Bachelors",
        "Skills",
        "Ant",
        "years",
        "Java",
        "years",
        "Model",
        "view",
        "controller",
        "years",
        "Modelviewcontroller",
        "years",
        "Mvc",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:34:07.674412",
    "resume_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer DXC Technology Dallas TX Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer DXC Technology Dallas TX April 2017 to Present Roles Responsibilities Developed the Micro Services using Spring Boot that create update delete and get the assignment information from backend Used Spring Boot for the application development Designed the system based on Spring MVC architecture Developed a business logic layer using Spring Framework Wrote services to store and retrieve user data from the Mongo DB for the application on devices Implemented Microservices using Pivotal Cloud Foundry platform build upon Spring Boot Services Worked on user interface design and development using Angularjs jQuery AJAX JSON Bootstrap DOM HTML and CSS Developed Data Access Object DAO for interacting with database using Hibernate Developed and consumed JSON based RESTful services using Spring MVC and Spring Boot Extensively worked on Spring Framework such as Spring Boot Spring MVC Spring IOC Spring Resources and Spring JDBC Implemented Microservices using Spring Boot Spring Cloud Spring Microservices and enabled discovery using Netflix Eureka server Configured and verified AWS workstations as per application requirement Worked on Relational Database RDBMS concepts database designing Normalization PLSQL Stored Procedures Triggers and extensively worked with SQL Server Oracle and MySQL Used JMS API for communication between the components Wrote complex PLSQL queries using joins Stored Procedures Functions Triggers cursors and indexes in Data Access Layer Implemented Spring Data Elastic Search using Spring Boot RepositoryDAO Collaborated with testers and developers and prepared test plans for producing high quality software applications Used JUnit and build tools such as MAVEN Worked on Log4j for logging errors messages and performance logs and SVN for version control Worked on Eclipse toolbar open the dropdown Amazon Web Services menu identified by the AWS icon and select AWS Lambda Java project Used Jenkins with Maven to Compile Build Microservices java code and configure Build Triggers Created an AWS RDS Aurora DB cluster and connected to the database through an Amazon RDS Aurora DB Instance using the Amazon RDS Console Wrote Producer APIs to read the Feed files JSON and publish Assortments Products to Apache Kafka Topic by using custom Serializers Developed POJO classes and configuration files and Involved in writing some Junit Test cases Responsible for setting up the Splunk forwarder Splunk has been used as an effective search tool in our project to reduce errors and production ticket Worked on AWS High Availability Practices and deploying backuprestore infrastructure Implemented Business logic in the middletier using Java classes Java beans and MultiThreading and Caching were used to improve user experience Environment Java 8 Spring 50 Spring boot Hibernate 3 Apache Kafka GIT SVN1 Webservices Rest SOAP MongoDB LDAP HTML CSS JavaScript Bootstrap JSON Splunk jQuery Angular 2 Angular JS Xml Stored Procedures JUnit Ant Windows AgileScrum Sr Full Stack Java Developer BCBS Raleigh NC November 2015 to April 2017 Roles Responsibilities Interacted with team members and involved in analysis design and implementation phases of the software development lifecycle SDLC for the various software modules of the Mobile Wallet application Deployed application using Pivotal Cloud Foundry PCF CLI and with Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Developed Sales and Margin module using Spring Boot Microservices Extensively involved in developing robust and highly scalable applications based on Microservices architecture Used Eclipse IDE as the development environment to design and develop the code Designed and developed various modules of the application with J2EE design architecture using Spring MVC frame work and deployed the spring components on WebLogic Worked on ISO parser tool with Pivotal Cloud Foundry PCF and trained on Technical Essentials and Architecture with Amazon Web Services AWS Worked on Cloud Foundry User Account and Authentication UAA OAuth2Authorization and Spring Involved in the integration of Spring components for implementing Inversion of Control IOC using Dependency Injection and integration of other spring components like Dispatcher Servlets Controllers Model and View Objects Created and updated database objects in Concept Wave frameworks Working in an intense iteration based lean agile system and Integrated Junit 4 test cases into the application and promoted testdriven development within the team Under the Spring framework used JAXB to map Java classes to Xml schemas and used XSLT to transform the XML files XSD was used to describe the structure of Xml Used AJAX and JavaScript for Server sideclientside validation Worked on AWS Lambda AWS code deploys AWS CloudFormation and cloud foundry Used MS Visio Dreamweaver and Photoshop tools for web application development Used Struts 2 framework along with Spring and to model the application in MVC architecture Incorporated multithreaded techniques for creating high performance applications Multithreading was used to process data in chunks to improve performance Used new Java 8 features Streams Collectors Lambda new Executor service Developed application using Groovy Grails GSP GORM and Grails Plugins and Grails Rest Services Implemented stored procedures using the Hibernate framework For the front end interactive and dynamic webpages were created using HTML CSS JavaScript JSP JSTL tags and AngularJS Nodejs ExtJS Redux as the webframework Used Nodejs ExtJS for asynchronous data communication between server and client Extensively used Core Java such as Exceptions and Collections Implemented Multithreading Synchronization using Thread pools executive service and lock interfaces Developed helper utility for MongoDB interaction Worked on Amazon Web Services AWS for a multitude of applications utilizing the AWS stack such as EC2 VPC Glacier Route53 S3 RDS Cloud Watch Cloud Trial WAF SNS and IAM focusing on highavailability fault tolerance Load balancing and autoscaling in designing Deploying and configuring Implemented Spring Boot Micro services to divide the application into various sub modules Involved in designing application system requirements and coded backend and frontend in Python Used SOAP and WSDL Web Services to exchange information over Http Used Splunk and Log4j as the Logging Framework Implemented a Distributed task execution framework on AWS Amazon EC2 using Amazons SQS and DynamoDB and evaluated the performance Building UNIX shell scripts for data migration batch processing Built and deployed scripts using Apache Ant Designed a data model in Cassandra POC for storing server performance data Ingested data from Hive into Cassandra Implemented a Data service as a rest API project to retrieve server utilization data from this Cassandra Table Environment Java 8 Spring 30 Struts 2 Redux Splunk Pivotal Cloud Foundry Linux Shell Scripting spring boot AWS Hibernate 30 MongoDB Python Spring Batch Concept Wave Test Driven Development TDD Multithreading Cassandra Web ServicesRest Apache CXF WebSphere Spring HTML JSP CSS JavaScript JSON jQuery AngularJS Nodejs ExtJS Grails XML XSL Microservices XSLT XSD JAXB Tomcat SQL Server Mockito JUnit Ant Log4j Windows Lean AgileScrum Java J2EE Developer Farm and Local Bedford NH August 2014 to November 2015 Roles Responsibilities Extensively involved in developing Web interface using JSP JSP Standard Tag Libraries JSTL using Struts Framework Developed application using spring MVC Spring Batch JSP JSTL and AJAX on the presentation layer the business layer is built using spring Working on Angular HTML5 CSS3 and Typescript Worked on additional frameworks like Bootstrap for responsive design Designed the system based on spring MVC Model architecture Developed a business logic layer using spring Dependency Injection and clientside Javabeans for DAO Design Patterns Create internal dashboards alerts and scheduled reports to monitor overall Splunk performance On boarded new data into a multitiered Splunk environment Designed and developed components relating to Concept Wave projects Created and updated database objects in Concept Wave frameworks Created Stream Rest based Application interfaces on java 8 environment Implemented batch configuration in spring boot application Created the Maven project to integrate Spring boot Restful API Oracle Microservices Worked on Java Multithreading Collections Coherence Framework Implemented Java Multithreading to refresh the cache at a given set of time interval Involved in process for builds and deployments with Maven Bamboo and Jenkins for continuous integration Created WAREAR files using MAVEN build and deployed them on JBOSS server Created multimodule Maven project and used Maven to build applications and Jenkins for continuous integration continuous deployment Created User services in Cloud Foundry for connecting database with different life cycles using spring profile Used SOAP web service to get corporate card information and to make changes in the card database for businesses Worked with IBM SOA Suites like WebSphere MQ Programming Create API Jenkins job set up GitHub repository for Mule project also created project POM Created SOAP web service in pushing data to downstream systems and Implemented request and response objects using SOAP web services Written SQL statements for retrieving data from DB2 using JDBC Used IBM Data Studio to view and update the DB2 Database and worked on MongoDB Developed and written Stored Procedures and views to extract the needed data from DB2 and reflect on the UI Created DB2 Server Stored Procedures for implementing business logic at the database level Environment Struts 2 Spring Batch Bamboo Spring Boot MongoDB Microservices Drupal Hibernate 30 Angular 2 GitHub Concept Wave Multithreading Web Services Rest SOAP WebSphere Spring HTML JSP CSS JavaScript JSON jQuery Angular JS Xml JBOSS 62 DB2 Stored Procedures DB2 JUnit Ant Windows AgileScrum JavaJ2EE Developer Sparity India IN January 2013 to July 2014 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Used MongoDB to store Big Data in JSON format and Aggregation is used in MongoDB to Match Sort and Group operation Developed UI component with AngularJS framework by utilizing the core features like MVC pattern and Dependency Injection Developed the backend web services using Python and designed the front end of the application using Python CSS AJAX JSON Drupal and JQuery Used collections in Python for manipulating and looping through different user defined objects Used Multithreading to improve the performance for processing of data feeds Implemented Angular JS Data Binding capability in HTML5 to give user a rich and responsive experience Used jQuery to modify DOM elements content by using crossbrowser selector engine called Sizzle Developed and implemented the MVC Architectural Pattern using Spring Framework and used Spring IOC container to maintain core Objects Lifecycle Implemented test driven development TDD executed unit test plans and Grails Spock Test cases for all existing controllers Services and Domain classes and Grails Pagination to display data using Grails Templates and views Implemented Spring Security for user authentication limit login attempts and password hashing Developed Web Services SOAP using SpringWS to handle user requests and interact with other components Developed the Microservices using Spring Boot and Spring Batch that create update delete and get the assignment information from backend Implemented Spring Boot Microservices to divide the application into various sub modules Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Implemented Web Services clients for APIs by using Spring Webservice Template class Used parsers like SAX and DOM for parsing xml documents and XSLT for XML transformations Designed and Developed Stored Procedures Triggers in MS SQL to cater the needs for the entire application Developed complex SQL queries for extracting data from the database Involving in Building the modules in Linux environment with Ant Script Involved in writing Unix Shell Script for performing automated tasks Wrote JUnit Test cases for performing unit testing and used SoapUI for Web Services testing Implemented JavaJ2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Maven as java build manager to compile and package the application Used SVN as Version control to maintain a central repository for the application code Worked with QA team for testing and resolving defects and used Rally for bug tracking and project management Environment Java Spring MyBatis Redux Spring Batch MongoDB Linux Shell Scripting spring boot Python Grails Design Patterns Test Driven Development TDD Multithreading XML MS SQL SpringWS SOA SOAP Web Services SoapUI Angular JSNodejs ExtJS ReactJS jQuery CSS JSON HTML5 JUnit UML XSLT Log4J SLF4J Eclipse Maven 20 WebLogic 11g SVN Hudson Rally Linux JavaJ2EE Developer Syntel IN June 2010 to December 2012 Roles Responsibilities Designed the user interfaces using JSP Developed Custom tags JSTL to support custom User Interfaces Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture Used GitHub version source control tool integrated and implemented GitHub APIs to configure and list the existing project repositories by using RESTful web services Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Involved in Transforming Data within a Hadoop Cluster using Pig Scripts Designed and developed Microservices using Java Spring and REST Implemented Business processes such as user authentication Account Transfer using Session EJBs Deployed the applications on IBM Web Sphere Application Server Used Java Messaging Services JMS and Backend Messaging for reliable and asynchronous exchange of important information such as payment status report Developed the Apache Ant scripts for preparing WAR files used to deploy J2EE components Front end developing of the Website Builder with AngularJS Bootstrap Created Jenkins jobs and running the jobs to check for any build issues Integrated Jenkins with SonarQube to check for the quality standards Used JDBC for database connectivity to Oracle 8i Written PLSQL in Oracle Database for creating tables triggers and select statements Improved code reuse and performance by making effective use of various design patterns such as Singleton Session Faade Value Object etc Involved in JUnit Testing debugging and bug fixing Used Log4j to capture the log that includes runtime exceptions and developed WAR framework to alert the client and production support in case of application failures Environment Java GitHub J2EEJSP JSTL Struts AngularJs EJB JMS Hadoop Hive JNDI Pig Jenkins Oracle Typescript Bootstrap HTML XML WSAD Web Sphere Studio Application Developer IBM Web Sphere Application Server Ant CVS Log4j Linux Education Bachelors Skills Ant 9 years Java 9 years Model view controller 9 years Modelviewcontroller 9 years Mvc 9 years",
    "unique_id": "370f691a-c8b1-440f-bef3-3a1033678b31"
}