{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Johnson Johnson Titusville NJ Around 4 years of experience as a Python Developer proficient coder in multiple languages and environments including Python Ruby REST API AWS C C and SQL Wrote python scripts to parse XML documents and load the data in database and developed web based applications using Python CSS and HTML Worked on applications and developed them with XML JSON XSL PHP Django Python Rails Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and jQuery Good experience of software development in Python and IDEs PyCharm PyScripter Spyder PyStudio and PyDev sublime text Jupyter Notebook Experienced in web applications development using Django Python using HTMLCSS for serverside rendered applications Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache My SQL and PythonPHP Architecture Worked on Anaconda Python Environment Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Experience in implementing python alongside using various libraries such as mat plotlib for charts and graphs MySQL Db for database connectivity pythontwitter PySide Pickle Pandas data frame network urllib2 Experienced in using python libraries like BeautifulSoup NumPy SciPy matplotlib Pythontwitter NetworkX urllib2 MySQL dB for database connectivity and IDEs Sublime Text Spyder PyCharm Experienced in Requirement gathering Use Case development Business Process flow Business Process Modeling Extensively used UML to develop various use cases class diagram and sequence diagrams Well versed with design and development of presentation layer for web applications using technologies like HTML5 CSS3 JavaScript jQuery AJAX AngularJS Bootstrap JSON XML Exceptionally solid background in composing APIs along with Web Services over Python Experience in using Adobe Flash SVN Eclipse JIRA GitHub and CVS Experience working knowledge in UNIX and Linux shell environments using command line utilities Experience with Unit Testing Test Driven Development TDD Load Testing and Integration Testing Experienced in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Hands on experience in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Worked on UNIX shell scripts for business process and loading data from different interfaces to HDFS Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle ApplicationServer Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Proficient in Object oriented design experience with extensive experience of PythonCC binding using Boost Python and Python C types Experiences with File Handling and SSH Secure Shell Working knowledge of errors and exceptions handling debugging using PDB Eclipse and PyCharm Experience with Docker deployment of application inside software containers Work Experience Sr Python Developer Johnson Johnson Titusville NJ November 2017 to Present Responsibilities Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed webbased application using Django framework with python concepts Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Designed database Model Views and APIs using Python for interactive webbased solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Build a TensorFlow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas NumPy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in working with Python open stock APIs Python Developer The Motley Fool Alexandria VA December 2016 to November 2017 Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python developer Rackspace San Antonio TX December 2015 to November 2016 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Created PyUnit test scripts and used for unit testing Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Python Developer IBM Armonk NY February 2015 to December 2015 Responsibilities Developed Python batch processors to consume and produce various feeds Created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed the required XML Schema documents and implemented the framework for parsing XML documents Used jQuery for selecting particular DOM elements when parsing HTML Worked with JSON based REST Web services Using GIT version control tool to coordinate teamdevelopment Responsible for Debugging Problem Solving Optimization and Testing Skills using GitLab Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Education Bachelors Skills Ajax Less than 1 year Aws 2 years Bootstrap 2 years Css 1 year Django 4 years Java Less than 1 year Javascript 2 years Jira 1 year Linux 2 years Mongodb 1 year Mysql 3 years Natural language processing 1 year Nlp 1 year oracle 1 year Python 4 years Restful web services 2 years Sql 1 year Unix Less than 1 year Web services 3 years Xml 2 years Git PHP",
    "entities": [
        "GUI",
        "PySpark on Databricks",
        "Nodejs",
        "XML JSON",
        "UNIX",
        "Tomcat Proficient",
        "Interfacing",
        "Working",
        "Pythontwitter",
        "jQuery Good",
        "CVS",
        "CVS SVN",
        "Amazon Web Services AWS",
        "Implemented NLP",
        "Model View Control MVC",
        "XML",
        "DHTML",
        "NOSQL",
        "JIRA",
        "Shell",
        "Implemented Terraform",
        "node JS",
        "LAMP",
        "Flask Created",
        "Amazon",
        "TX",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "CSS Bootstrap",
        "Django",
        "Unit Testing Test Driven Development TDD Load Testing",
        "File Handling",
        "Developed Business Logic",
        "UML",
        "Git",
        "DjangoREST",
        "PythonPHP",
        "HTML5",
        "API RESTful Web Service",
        "Created Data",
        "Linux",
        "Google Analytics Data",
        "Flask",
        "Built",
        "Docker",
        "DOM",
        "RDS",
        "Views",
        "PyQt",
        "MVC",
        "Amazon Redshift Data",
        "GitHub Utilized Agile",
        "GIT",
        "API",
        "GitGitHub",
        "Present Responsibilities Develop",
        "Created",
        "AWS",
        "WAMP Windows Apache",
        "Python Developer",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "SQL Wrote",
        "Backup and Restore",
        "PyCharm",
        "Worked with View Sets",
        "Random Forest",
        "Python ORM Libraries",
        "SQL",
        "lPythonspan",
        "PDB",
        "Python Created Data",
        "SSH",
        "Python OOP Worked",
        "Amazon AWS",
        "Python Django PHP C XML",
        "google analytics",
        "PythonPHP Architecture Worked",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "Build",
        "JavaScript Created",
        "Djangos",
        "JavaScript",
        "Google Analytics",
        "Sublime Text Spyder PyCharm Experienced",
        "Created Business Logic",
        "Windows Created PyUnit",
        "PyCharm PyScripter Spyder PyStudio",
        "SQL Queries Stored",
        "CSS",
        "Python Developer IBM Armonk",
        "REST",
        "GitLab Involved",
        "Oracle SQLite PostgreSQL",
        "WebSphere WebLogic JBOSS",
        "Responsible for Debugging Problem Solving Optimization and Testing Skills"
    ],
    "experience": "Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and jQuery Good experience of software development in Python and IDEs PyCharm PyScripter Spyder PyStudio and PyDev sublime text Jupyter Notebook Experienced in web applications development using Django Python using HTMLCSS for serverside rendered applications Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache My SQL and PythonPHP Architecture Worked on Anaconda Python Environment Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Experience in implementing python alongside using various libraries such as mat plotlib for charts and graphs MySQL Db for database connectivity pythontwitter PySide Pickle Pandas data frame network urllib2 Experienced in using python libraries like BeautifulSoup NumPy SciPy matplotlib Pythontwitter NetworkX urllib2 MySQL dB for database connectivity and IDEs Sublime Text Spyder PyCharm Experienced in Requirement gathering Use Case development Business Process flow Business Process Modeling Extensively used UML to develop various use cases class diagram and sequence diagrams Well versed with design and development of presentation layer for web applications using technologies like HTML5 CSS3 JavaScript jQuery AJAX AngularJS Bootstrap JSON XML Exceptionally solid background in composing APIs along with Web Services over Python Experience in using Adobe Flash SVN Eclipse JIRA GitHub and CVS Experience working knowledge in UNIX and Linux shell environments using command line utilities Experience with Unit Testing Test Driven Development TDD Load Testing and Integration Testing Experienced in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Hands on experience in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Worked on UNIX shell scripts for business process and loading data from different interfaces to HDFS Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle ApplicationServer Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Proficient in Object oriented design experience with extensive experience of PythonCC binding using Boost Python and Python C types Experiences with File Handling and SSH Secure Shell Working knowledge of errors and exceptions handling debugging using PDB Eclipse and PyCharm Experience with Docker deployment of application inside software containers Work Experience Sr Python Developer Johnson Johnson Titusville NJ November 2017 to Present Responsibilities Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed webbased application using Django framework with python concepts Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Designed database Model Views and APIs using Python for interactive webbased solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Build a TensorFlow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas NumPy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in working with Python open stock APIs Python Developer The Motley Fool Alexandria VA December 2016 to November 2017 Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python developer Rackspace San Antonio TX December 2015 to November 2016 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Created PyUnit test scripts and used for unit testing Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Python Developer IBM Armonk NY February 2015 to December 2015 Responsibilities Developed Python batch processors to consume and produce various feeds Created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed the required XML Schema documents and implemented the framework for parsing XML documents Used jQuery for selecting particular DOM elements when parsing HTML Worked with JSON based REST Web services Using GIT version control tool to coordinate teamdevelopment Responsible for Debugging Problem Solving Optimization and Testing Skills using GitLab Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Education Bachelors Skills Ajax Less than 1 year Aws 2 years Bootstrap 2 years Css 1 year Django 4 years Java Less than 1 year Javascript 2 years Jira 1 year Linux 2 years Mongodb 1 year Mysql 3 years Natural language processing 1 year Nlp 1 year oracle 1 year Python 4 years Restful web services 2 years Sql 1 year Unix Less than 1 year Web services 3 years Xml 2 years Git PHP",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Johnson",
        "Johnson",
        "Titusville",
        "NJ",
        "years",
        "experience",
        "Python",
        "Developer",
        "proficient",
        "coder",
        "languages",
        "environments",
        "Python",
        "Ruby",
        "REST",
        "API",
        "AWS",
        "C",
        "C",
        "SQL",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "web",
        "applications",
        "Python",
        "CSS",
        "HTML",
        "applications",
        "XML",
        "XSL",
        "PHP",
        "Django",
        "Python",
        "Rails",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "text",
        "Jupyter",
        "Notebook",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "HTMLCSS",
        "serverside",
        "applications",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "SQL",
        "PythonPHP",
        "Architecture",
        "Anaconda",
        "Python",
        "Environment",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Experience",
        "python",
        "libraries",
        "mat",
        "plotlib",
        "charts",
        "graphs",
        "MySQL",
        "Db",
        "database",
        "connectivity",
        "pythontwitter",
        "PySide",
        "Pickle",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "python",
        "libraries",
        "BeautifulSoup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pythontwitter",
        "NetworkX",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "Sublime",
        "Text",
        "Spyder",
        "PyCharm",
        "Requirement",
        "Use",
        "Case",
        "development",
        "Business",
        "Process",
        "Business",
        "Process",
        "Modeling",
        "UML",
        "use",
        "cases",
        "class",
        "diagram",
        "sequence",
        "diagrams",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "XML",
        "background",
        "APIs",
        "Web",
        "Services",
        "Python",
        "Experience",
        "Adobe",
        "Flash",
        "SVN",
        "Eclipse",
        "JIRA",
        "GitHub",
        "CVS",
        "Experience",
        "knowledge",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Experience",
        "Unit",
        "Testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Integration",
        "Testing",
        "version",
        "control",
        "systems",
        "CVS",
        "SVN",
        "GitGitHub",
        "tracking",
        "tools",
        "Jira",
        "Bugzilla",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Experience",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "Hands",
        "experience",
        "NOSQL",
        "libraries",
        "MongoDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MYSQL",
        "UNIX",
        "shell",
        "scripts",
        "business",
        "process",
        "loading",
        "data",
        "interfaces",
        "HDFS",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "ApplicationServer",
        "Good",
        "Knowledge",
        "Amazon",
        "AWS",
        "concepts",
        "EMR",
        "EC2",
        "web",
        "services",
        "processing",
        "Big",
        "Data",
        "Proficiency",
        "application",
        "servers",
        "WebSphere",
        "WebLogic",
        "JBOSS",
        "Tomcat",
        "Proficient",
        "Object",
        "design",
        "experience",
        "experience",
        "PythonCC",
        "Boost",
        "Python",
        "Python",
        "C",
        "types",
        "File",
        "Handling",
        "SSH",
        "Secure",
        "Shell",
        "Working",
        "knowledge",
        "errors",
        "exceptions",
        "debugging",
        "PDB",
        "Eclipse",
        "PyCharm",
        "Experience",
        "Docker",
        "deployment",
        "application",
        "software",
        "containers",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Johnson",
        "Johnson",
        "Titusville",
        "NJ",
        "November",
        "Present",
        "Responsibilities",
        "applications",
        "database",
        "pymongo",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PostgreSQLMYSQL",
        "features",
        "table",
        "types",
        "oracle",
        "indexing",
        "Backup",
        "Restore",
        "experience",
        "PostgreSQL",
        "MYSQL",
        "database",
        "backups",
        "point",
        "time",
        "recovery",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Djangos",
        "ORM",
        "model",
        "application",
        "Django",
        "framework",
        "concepts",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "matplotlib",
        "SciPy",
        "NumPy",
        "Nodejs",
        "backend",
        "client",
        "web",
        "application",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "Random",
        "Forest",
        "models",
        "PySpark",
        "Databricks",
        "profile",
        "field",
        "prediction",
        "NLP",
        "classifier",
        "Keras",
        "CNN",
        "case",
        "resolution",
        "user",
        "anomaly",
        "detection",
        "cronjob",
        "Google",
        "Analytics",
        "data",
        "Python",
        "Pandas",
        "Jinja2",
        "Developed",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Build",
        "TensorFlow",
        "Object",
        "Detection",
        "transfer",
        "model",
        "custom",
        "dataset",
        "client",
        "data",
        "pipelines",
        "data",
        "transformation",
        "jobs",
        "Boto",
        "Pandas",
        "NumPy",
        "Google",
        "Analytics",
        "Data",
        "Amazon",
        "Redshift",
        "Data",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "client",
        "application",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Python",
        "stock",
        "APIs",
        "Python",
        "Developer",
        "Motley",
        "Fool",
        "Alexandria",
        "VA",
        "December",
        "November",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Python",
        "developer",
        "Rackspace",
        "San",
        "Antonio",
        "TX",
        "December",
        "November",
        "Responsibilities",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "companys",
        "website",
        "Django",
        "framework",
        "design",
        "server",
        "applications",
        "Wrote",
        "Python",
        "code",
        "procedure",
        "automate",
        "processes",
        "Build",
        "test",
        "functionality",
        "production",
        "pipeline",
        "Python",
        "code",
        "bugs",
        "upgrades",
        "functionality",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Linux",
        "Windows",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "user",
        "interfaces",
        "HTML5",
        "JavaScript",
        "Git",
        "repository",
        "project",
        "GitHub",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "Developer",
        "IBM",
        "Armonk",
        "NY",
        "February",
        "December",
        "Responsibilities",
        "Python",
        "batch",
        "processors",
        "feeds",
        "test",
        "harness",
        "testing",
        "Python",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "jQuery",
        "DOM",
        "elements",
        "HTML",
        "JSON",
        "REST",
        "Web",
        "services",
        "GIT",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "Debugging",
        "Problem",
        "Solving",
        "Optimization",
        "Testing",
        "Skills",
        "GitLab",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Education",
        "Bachelors",
        "Skills",
        "Ajax",
        "year",
        "Aws",
        "years",
        "Bootstrap",
        "years",
        "Css",
        "year",
        "Django",
        "years",
        "Java",
        "year",
        "Javascript",
        "years",
        "Jira",
        "year",
        "Linux",
        "years",
        "Mongodb",
        "year",
        "Mysql",
        "years",
        "language",
        "processing",
        "year",
        "Nlp",
        "year",
        "oracle",
        "year",
        "Python",
        "years",
        "web",
        "services",
        "years",
        "Sql",
        "year",
        "Unix",
        "year",
        "Web",
        "services",
        "years",
        "Xml",
        "years",
        "Git",
        "PHP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:51:28.623953",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Johnson Johnson Titusville NJ Around 4 years of experience as a Python Developer proficient coder in multiple languages and environments including Python Ruby REST API AWS C C and SQL Wrote python scripts to parse XML documents and load the data in database and developed web based applications using Python CSS and HTML Worked on applications and developed them with XML JSON XSL PHP Django Python Rails Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript and jQuery Good experience of software development in Python and IDEs PyCharm PyScripter Spyder PyStudio and PyDev sublime text Jupyter Notebook Experienced in web applications development using Django Python using HTMLCSS for serverside rendered applications Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache My SQL and PythonPHP Architecture Worked on Anaconda Python Environment Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Experience in implementing python alongside using various libraries such as mat plotlib for charts and graphs MySQL Db for database connectivity pythontwitter PySide Pickle Pandas data frame network urllib2 Experienced in using python libraries like BeautifulSoup NumPy SciPy matplotlib Pythontwitter NetworkX urllib2 MySQL dB for database connectivity and IDEs Sublime Text Spyder PyCharm Experienced in Requirement gathering Use Case development Business Process flow Business Process Modeling Extensively used UML to develop various use cases class diagram and sequence diagrams Well versed with design and development of presentation layer for web applications using technologies like HTML5 CSS3 JavaScript jQuery AJAX AngularJS Bootstrap JSON XML Exceptionally solid background in composing APIs along with Web Services over Python Experience in using Adobe Flash SVN Eclipse JIRA GitHub and CVS Experience working knowledge in UNIX and Linux shell environments using command line utilities Experience with Unit Testing Test Driven Development TDD Load Testing and Integration Testing Experienced in version control systems using CVS SVN and GitGitHub and issue tracking tools like Jira and Bugzilla Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Experience in working with Python ORM Libraries including Django ORM SQLAlchemy Experience in implementing with serverside technologies with restful API and MVC design patterns with node JS and Django framework Hands on experience in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Worked on UNIX shell scripts for business process and loading data from different interfaces to HDFS Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle ApplicationServer Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Proficient in Object oriented design experience with extensive experience of PythonCC binding using Boost Python and Python C types Experiences with File Handling and SSH Secure Shell Working knowledge of errors and exceptions handling debugging using PDB Eclipse and PyCharm Experience with Docker deployment of application inside software containers Work Experience Sr Python Developer Johnson Johnson Titusville NJ November 2017 to Present Responsibilities Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed webbased application using Django framework with python concepts Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Designed database Model Views and APIs using Python for interactive webbased solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Build a TensorFlow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas NumPy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in working with Python open stock APIs Python Developer The Motley Fool Alexandria VA December 2016 to November 2017 Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python developer Rackspace San Antonio TX December 2015 to November 2016 Responsibilities Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Created PyUnit test scripts and used for unit testing Developed user interfaces using HTML5 and JavaScript Created a Git repository and added the project to GitHub Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Python Developer IBM Armonk NY February 2015 to December 2015 Responsibilities Developed Python batch processors to consume and produce various feeds Created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed the required XML Schema documents and implemented the framework for parsing XML documents Used jQuery for selecting particular DOM elements when parsing HTML Worked with JSON based REST Web services Using GIT version control tool to coordinate teamdevelopment Responsible for Debugging Problem Solving Optimization and Testing Skills using GitLab Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Education Bachelors Skills Ajax Less than 1 year Aws 2 years Bootstrap 2 years Css 1 year Django 4 years Java Less than 1 year Javascript 2 years Jira 1 year Linux 2 years Mongodb 1 year Mysql 3 years Natural language processing 1 year Nlp 1 year oracle 1 year Python 4 years Restful web services 2 years Sql 1 year Unix Less than 1 year Web services 3 years Xml 2 years Git PHP",
    "unique_id": "253390b2-ead0-40ad-960d-b9fd0c121259"
}