{
    "clean_data": "Sr Python Full Stack Developer Sr span lPythonspan Full Stack span lDeveloperspan Sr Python Full Stack Developer Bank of America 5 years of experience in developing applications using python and worked on various standalone clientserver applications front end backend using python and Django Having good knowledge on python framework like Django and flask Proficiency in analysis designing and developing of wed applications Design and maintain databases using python and developed pythonbased API using SQL Alchemy and PostgreSQL and installed packages using python pip and easy install Experienced in developing Webbased Applications using python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS involving Beautiful Soap NumPy Matplotlib and Pandas Data frame Extensive working experience on MYSQL database queries from python using pythonMySQL connector and MySQL dB package DB browser SQLite to retrieve information and expertise in establishing database connections for python by configuring packages like MySQL python Knowledge in Model View Controller MVC frameworks like Django Java Script and jQuery Solid knowledge in various Python Integrated Development Environments like Eclipse Sublime Text and NetBeans Experience objectoriented programming OOP concepts using python and C Expertise in NoSQL technologies like MongoDB and relational databases like Oracle SQLite Postgre SQL and MySQL PostgreSQL databases Worked on creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Strong experience with UNIXLinux in installing and configuring LVM RAID NGINX Apache HTTPD Tomcat Weblogic MySQL Oracle patching system application log metrics configured custom Cloud Watch metrics Skilled in use and creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Having good knowledge on public and private cloud platforms like Amazon Web Services AWS and Open stack Knowledge on Gunicorn Docker Nginx and Kubernetes Good knowledge on android SDK 23 Good experience in AWS CLI to manage AWS infrastructure Used UNIXLinux shell scripting to automate system administration tasks system backuprestore management and user account management Expertise in AWS Identity and Access Management IAM such as creating users groups organizing IAM users to groups assigning roles to groups and also familiarity with hosting and participating in projects on Git and Bitbucket source control Ability to work independently or as part of an integrated team with experience in a leadership role at the helm of a project Designed and implemented Amazon Web DevOps Services AWS cloudbased instances for use on their current and upcoming projects Designed and Created Terraform templates and used existing templates to create stacks and provisioned Infrastructure Programming languages Python Java C AWS cloud python Django Web Framework Databases Oracle SQL Server PostgreSQL Web Technologies HTML jQuery Ajax CSS JavaScript JSON XML Django Flask Bootstrap Technologies and Tools JSP Spring Boot MVC Security Web Services GitHub Development Tools PyCharm Notepad Sublime Slack SQL Alchemy IDEs Eclipse Net Beans Other Tools Jenkins Docker Kubernetes Work Experience Sr Python Full Stack Developer Bank of America Jacksonville FL January 2019 to Present Responsibilities Designed and developed both front and backend modules using python Django and created user interface of the website used html CSS JavaScript jQuery and Ajax XML processing data exchange and business logic implementation using python and Django Designed and Developed dashboard using High Charts JavaScript library Worked and developing of flask Restful API endpoints for accessing through UI and uploading ETL data Worked with MYSQL CSS JavaScript AJAX and XHTML to build a fully Web compliant networking website Used python Django to develop dynamic web pages Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Good knowledge in building and managing Docker contains cluster managed by Kubernetes linux and git and also implemented its services and building a selfhosted Kubernetes cluster using Terraform and Ansible and deploying application containers For building backend applications with python Django worked with work with docker RabbitMQ and Jenkins Involved in the Complete Software development life cycle SDLC to develop the application Experience in CICD model methodology using various environment Integrated GIT into Jenkins to automate the code checkout process Used caching reusing and improve the security level of data for report generation Developed web application using FLASK which is based on MVC design architecture Used python scripts to parse XML documents and load the data in database and performed testing using Djangos Test Module Automated CICD for our enterprise application using Stash JUNIT Quality gates Docker and Kubernetes Created RDS DB instances using MultiAG deployments Tested DB instance Failover using reboot with failover Installation of patches and packages using RPM and YUM in Red hat Linux Implemented client side validations for Search and Security modules using JavaScript and Validation Framework Environment Python Django HTML5 CSS XML MySQL JavaScript Backbone JS jQuery CSS Bootstrap PLSQL MongoDB TSQL JavaScript Eclipse Git GitHub Shell Scripting REST PostgreSQL Python Full Stack Developer USAA Plano July 2018 to December 2018 Responsibilities By using python on Django Web Framework designed both front end and backend and create database schema to represent and support business support For the user interface of the website used html CSS JavaScript jQuery and Ajax To create a userfriendly website interface used views and templates with python and Djangos view controller and templating language Experience in python libraries like NumPy SciPy and Web2py Solved many MySQL database queries from python using pythonMySQL connector and MySQL DB package Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm and Visual Studio Generating graphical reports by using the python libraries like NumPy and matplotlib Involved in python OOP code for quality logging monitoring and debugging code Worked with backend python automation Gunicorn Docker Nginx and Kubernetes Implemented MVC architecture using Django SOAP web service and SOAPUI Worked with Relational DB RDBMD like SQLite PostgreSQL and NoSQL database MongoDB for database connectivity and for the structure DB browser SQLite Experience using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Experienced in installation configuration administration troubleshooting tuning security backup recovery and upgrades of Linux Red Hat based 67 and Debian based and Win 20082012 Servers in a large environment By using jQuery data manipulation is done on client side Using Amazon Route53 to manage public and private hosted zones Used Shell Python scripts to automate the deployment process Configured AWS Virtual Private Cloud VPCs and various public and private subnets to implement multitier architecture Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Developed rest APIs using python Django framework and done the integration of various data sources including RDBMS Shell Scripting and Text files Django APIs to access the database by using python Django Template developed the customer service web pages and worked on responsive user interface using HTML5 CSS3 Bootstrap and JavaScript Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB JavaScript jQuery JSON Sublime Text database access DjangoCMS plugins Bootstrap Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Jenkins Docker and Kubernetes Python Django Developer Value Labs July 2015 to December 2017 Responsibilities Handled both frontend and backend using python Django Angular JS ReactJS XML CSS HTML JavaScript and jQuery By using SQL server management studio import ImportedExported data between different data sources Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval By using python and JavaScript created and tested many features for dashboard and maintained program libraries users manuals and technical documentation Designed ModelViewTemplate design pattern using Django Framework and managed To access the database created Django REST APIs using python and used to retrieve and save data Debug application deployments on multiple environments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Used python and Django creating graphics XML processing data exchange and business logic implementation Used python Django forms to record data and the Login module page for users Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Managed large datasets using Panda data frames and MySQL Code review using GitHub testing fixing of the bugs and coding modifications To avoid the reload for the web page used AJAX in UI to update small portions Ensured highquality data collection and maintaining the integrity of the data Used Django configuration to manage URLs and Application Parameters Worked on python OpenStack APIs and used NumPy for Numerical analysis Environment Python Django Web Framework HTML5 CSS3 Bootstrap ReactJS JavaScript jQuery JSON Sublime Text XML database access Bootstrap Pandas Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Python Developer Kakatiya IN June 2013 to June 2015 Responsibilities Developed entire frontend and backend modules using python Django Web Framework Using the HTML CSS JavaScript and jQuery Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs By using python ROBOT framework Bootstrap CSS and JavaScript developed and tested many features of dashboard Executed MYSQL database queries from python using pythonMySQL connector and MySQL dB package to retrieve information Used Django framework in developing web applications to implement the model view control architecture Worked on Dockers RabbitMQ Celery and Jenkins for the backend applications Designed the frontend web pages using HTML JavaScript Angular JS jQuery and AJAX Used CSS Working with backend python automation Docker and cloud provisioningautomation Used Shell scripting XML to automate some of the menial tasks Sed AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page and designed and developed Web services using XML and jQuery Implemented Docker build tool for scheduling deploying python jobs Generated python Django Forms to record data login and signup of users Used HTML CSS BOOTSTRAP and JAVA Script based on clients request to develop templates Environment Python Java JavaScript HTMLCSS MySQL BOOTSTRAP XML AJAX Docker PLSQL JDBC Unix Shell Scripting UnixLinux VMware Ansible C GIT Jenkins Chef Docker Apache Tomcat Artifacts AWS TCPIP Education Bachelor of Technology in Technology GITAM University Hyderabad Telangana",
    "entities": [
        "ImportedExported",
        "AJAX",
        "Shell Scripting UnixLinux VMware Ansible C",
        "Flask Bootstrap Technologies",
        "Djangos Test Module Automated CICD",
        "Failover",
        "Kubernetes Created RDS DB",
        "HTTP",
        "CloudFront",
        "Created Terraform",
        "OpenStack",
        "Amazon Web Services AWS",
        "Panda",
        "DevOps Services AWS",
        "Stash JUNIT Quality",
        "XML",
        "Telangana",
        "Bootstrap CSS",
        "AWS Identity and Access Management IAM",
        "Shell",
        "Amazon",
        "jQuery Implemented Docker",
        "UNIXLinux",
        "Oracle SQL Server PostgreSQL",
        "Developed",
        "Jenkins",
        "jQuery Performed Software Development Life Cycle Database",
        "Linux Red Hat",
        "Utilized",
        "Git",
        "Complete Software",
        "GIT Jenkins Chef Docker",
        "Linux",
        "jQuery Implemented",
        "Docker",
        "Kubernetes Python Django Developer Value Labs",
        "CLI",
        "Kubernetes Experienced",
        "JAVA Script",
        "git",
        "MVC",
        "API",
        "Terraform",
        "HTML CSS JavaScript",
        "IAM",
        "Present Responsibilities Designed",
        "SQLite PostgreSQL",
        "Performed Software Development Life Cycle Database",
        "RPM",
        "Django Web Framework",
        "SQL",
        "Kubernetes Good",
        "GitHub",
        "YUM",
        "Kubernetes",
        "Jenkins Ansible",
        "FLASK",
        "SQL Alchemy",
        "CICD",
        "Search and Security",
        "Django Web Framework Using",
        "Python Integrated Development Environments",
        "SQLite",
        "ETL",
        "CRUD",
        "Relational DB RDBMD",
        "Oracle SQLite Postgre",
        "Pandas Data",
        "Djangos",
        "JavaScript",
        "UI",
        "Ajax XML",
        "LVM RAID NGINX Apache",
        "jQuery",
        "REST",
        "NetBeans",
        "NoSQL",
        "Infrastructure Programming languages Python Java C AWS",
        "Kubernetes Implemented"
    ],
    "experience": "Experience objectoriented programming OOP concepts using python and C Expertise in NoSQL technologies like MongoDB and relational databases like Oracle SQLite Postgre SQL and MySQL PostgreSQL databases Worked on creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Strong experience with UNIXLinux in installing and configuring LVM RAID NGINX Apache HTTPD Tomcat Weblogic MySQL Oracle patching system application log metrics configured custom Cloud Watch metrics Skilled in use and creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Having good knowledge on public and private cloud platforms like Amazon Web Services AWS and Open stack Knowledge on Gunicorn Docker Nginx and Kubernetes Good knowledge on android SDK 23 Good experience in AWS CLI to manage AWS infrastructure Used UNIXLinux shell scripting to automate system administration tasks system backuprestore management and user account management Expertise in AWS Identity and Access Management IAM such as creating users groups organizing IAM users to groups assigning roles to groups and also familiarity with hosting and participating in projects on Git and Bitbucket source control Ability to work independently or as part of an integrated team with experience in a leadership role at the helm of a project Designed and implemented Amazon Web DevOps Services AWS cloudbased instances for use on their current and upcoming projects Designed and Created Terraform templates and used existing templates to create stacks and provisioned Infrastructure Programming languages Python Java C AWS cloud python Django Web Framework Databases Oracle SQL Server PostgreSQL Web Technologies HTML jQuery Ajax CSS JavaScript JSON XML Django Flask Bootstrap Technologies and Tools JSP Spring Boot MVC Security Web Services GitHub Development Tools PyCharm Notepad Sublime Slack SQL Alchemy IDEs Eclipse Net Beans Other Tools Jenkins Docker Kubernetes Work Experience Sr Python Full Stack Developer Bank of America Jacksonville FL January 2019 to Present Responsibilities Designed and developed both front and backend modules using python Django and created user interface of the website used html CSS JavaScript jQuery and Ajax XML processing data exchange and business logic implementation using python and Django Designed and Developed dashboard using High Charts JavaScript library Worked and developing of flask Restful API endpoints for accessing through UI and uploading ETL data Worked with MYSQL CSS JavaScript AJAX and XHTML to build a fully Web compliant networking website Used python Django to develop dynamic web pages Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Good knowledge in building and managing Docker contains cluster managed by Kubernetes linux and git and also implemented its services and building a selfhosted Kubernetes cluster using Terraform and Ansible and deploying application containers For building backend applications with python Django worked with work with docker RabbitMQ and Jenkins Involved in the Complete Software development life cycle SDLC to develop the application Experience in CICD model methodology using various environment Integrated GIT into Jenkins to automate the code checkout process Used caching reusing and improve the security level of data for report generation Developed web application using FLASK which is based on MVC design architecture Used python scripts to parse XML documents and load the data in database and performed testing using Djangos Test Module Automated CICD for our enterprise application using Stash JUNIT Quality gates Docker and Kubernetes Created RDS DB instances using MultiAG deployments Tested DB instance Failover using reboot with failover Installation of patches and packages using RPM and YUM in Red hat Linux Implemented client side validations for Search and Security modules using JavaScript and Validation Framework Environment Python Django HTML5 CSS XML MySQL JavaScript Backbone JS jQuery CSS Bootstrap PLSQL MongoDB TSQL JavaScript Eclipse Git GitHub Shell Scripting REST PostgreSQL Python Full Stack Developer USAA Plano July 2018 to December 2018 Responsibilities By using python on Django Web Framework designed both front end and backend and create database schema to represent and support business support For the user interface of the website used html CSS JavaScript jQuery and Ajax To create a userfriendly website interface used views and templates with python and Djangos view controller and templating language Experience in python libraries like NumPy SciPy and Web2py Solved many MySQL database queries from python using pythonMySQL connector and MySQL DB package Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm and Visual Studio Generating graphical reports by using the python libraries like NumPy and matplotlib Involved in python OOP code for quality logging monitoring and debugging code Worked with backend python automation Gunicorn Docker Nginx and Kubernetes Implemented MVC architecture using Django SOAP web service and SOAPUI Worked with Relational DB RDBMD like SQLite PostgreSQL and NoSQL database MongoDB for database connectivity and for the structure DB browser SQLite Experience using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Experienced in installation configuration administration troubleshooting tuning security backup recovery and upgrades of Linux Red Hat based 67 and Debian based and Win 20082012 Servers in a large environment By using jQuery data manipulation is done on client side Using Amazon Route53 to manage public and private hosted zones Used Shell Python scripts to automate the deployment process Configured AWS Virtual Private Cloud VPCs and various public and private subnets to implement multitier architecture Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Developed rest APIs using python Django framework and done the integration of various data sources including RDBMS Shell Scripting and Text files Django APIs to access the database by using python Django Template developed the customer service web pages and worked on responsive user interface using HTML5 CSS3 Bootstrap and JavaScript Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB JavaScript jQuery JSON Sublime Text database access DjangoCMS plugins Bootstrap Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Jenkins Docker and Kubernetes Python Django Developer Value Labs July 2015 to December 2017 Responsibilities Handled both frontend and backend using python Django Angular JS ReactJS XML CSS HTML JavaScript and jQuery By using SQL server management studio import ImportedExported data between different data sources Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval By using python and JavaScript created and tested many features for dashboard and maintained program libraries users manuals and technical documentation Designed ModelViewTemplate design pattern using Django Framework and managed To access the database created Django REST APIs using python and used to retrieve and save data Debug application deployments on multiple environments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Used python and Django creating graphics XML processing data exchange and business logic implementation Used python Django forms to record data and the Login module page for users Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Managed large datasets using Panda data frames and MySQL Code review using GitHub testing fixing of the bugs and coding modifications To avoid the reload for the web page used AJAX in UI to update small portions Ensured highquality data collection and maintaining the integrity of the data Used Django configuration to manage URLs and Application Parameters Worked on python OpenStack APIs and used NumPy for Numerical analysis Environment Python Django Web Framework HTML5 CSS3 Bootstrap ReactJS JavaScript jQuery JSON Sublime Text XML database access Bootstrap Pandas Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Python Developer Kakatiya IN June 2013 to June 2015 Responsibilities Developed entire frontend and backend modules using python Django Web Framework Using the HTML CSS JavaScript and jQuery Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs By using python ROBOT framework Bootstrap CSS and JavaScript developed and tested many features of dashboard Executed MYSQL database queries from python using pythonMySQL connector and MySQL dB package to retrieve information Used Django framework in developing web applications to implement the model view control architecture Worked on Dockers RabbitMQ Celery and Jenkins for the backend applications Designed the frontend web pages using HTML JavaScript Angular JS jQuery and AJAX Used CSS Working with backend python automation Docker and cloud provisioningautomation Used Shell scripting XML to automate some of the menial tasks Sed AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page and designed and developed Web services using XML and jQuery Implemented Docker build tool for scheduling deploying python jobs Generated python Django Forms to record data login and signup of users Used HTML CSS BOOTSTRAP and JAVA Script based on clients request to develop templates Environment Python Java JavaScript HTMLCSS MySQL BOOTSTRAP XML AJAX Docker PLSQL JDBC Unix Shell Scripting UnixLinux VMware Ansible C GIT Jenkins Chef Docker Apache Tomcat Artifacts AWS TCPIP Education Bachelor of Technology in Technology GITAM University Hyderabad Telangana",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lPythonspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Full",
        "Stack",
        "Developer",
        "Bank",
        "America",
        "years",
        "experience",
        "applications",
        "python",
        "clientserver",
        "applications",
        "end",
        "backend",
        "python",
        "Django",
        "knowledge",
        "framework",
        "Django",
        "flask",
        "Proficiency",
        "analysis",
        "developing",
        "we",
        "d",
        "applications",
        "Design",
        "databases",
        "python",
        "API",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "packages",
        "python",
        "pip",
        "install",
        "Webbased",
        "Applications",
        "CSS",
        "HTML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "J2EE",
        "jQuery",
        "JSON",
        "jQuery",
        "UI",
        "XML",
        "JS",
        "Beautiful",
        "Soap",
        "NumPy",
        "Matplotlib",
        "Pandas",
        "Data",
        "frame",
        "working",
        "experience",
        "MYSQL",
        "database",
        "python",
        "pythonMySQL",
        "connector",
        "MySQL",
        "package",
        "DB",
        "browser",
        "SQLite",
        "information",
        "expertise",
        "database",
        "connections",
        "python",
        "packages",
        "MySQL",
        "python",
        "Knowledge",
        "Model",
        "View",
        "Controller",
        "MVC",
        "frameworks",
        "Django",
        "Java",
        "Script",
        "jQuery",
        "knowledge",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Eclipse",
        "Sublime",
        "Text",
        "NetBeans",
        "programming",
        "OOP",
        "concepts",
        "python",
        "C",
        "Expertise",
        "NoSQL",
        "technologies",
        "MongoDB",
        "databases",
        "Oracle",
        "SQLite",
        "Postgre",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "creation",
        "REST",
        "APIs",
        "CRUD",
        "operations",
        "functionality",
        "APIs",
        "security",
        "experience",
        "UNIXLinux",
        "LVM",
        "RAID",
        "NGINX",
        "Apache",
        "HTTPD",
        "Tomcat",
        "Weblogic",
        "MySQL",
        "Oracle",
        "system",
        "application",
        "log",
        "metrics",
        "custom",
        "Cloud",
        "Watch",
        "metrics",
        "use",
        "creation",
        "REST",
        "APIs",
        "CRUD",
        "operations",
        "functionality",
        "APIs",
        "security",
        "knowledge",
        "cloud",
        "platforms",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "stack",
        "Knowledge",
        "Gunicorn",
        "Docker",
        "Nginx",
        "Kubernetes",
        "knowledge",
        "SDK",
        "experience",
        "AWS",
        "CLI",
        "AWS",
        "infrastructure",
        "UNIXLinux",
        "shell",
        "scripting",
        "system",
        "administration",
        "tasks",
        "system",
        "backuprestore",
        "management",
        "user",
        "account",
        "management",
        "Expertise",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "users",
        "groups",
        "IAM",
        "users",
        "groups",
        "roles",
        "groups",
        "familiarity",
        "projects",
        "Git",
        "Bitbucket",
        "source",
        "Ability",
        "part",
        "team",
        "experience",
        "leadership",
        "role",
        "helm",
        "project",
        "Amazon",
        "Web",
        "DevOps",
        "Services",
        "AWS",
        "instances",
        "use",
        "projects",
        "Created",
        "Terraform",
        "templates",
        "templates",
        "stacks",
        "Infrastructure",
        "Programming",
        "Python",
        "Java",
        "C",
        "AWS",
        "cloud",
        "Django",
        "Web",
        "Framework",
        "Oracle",
        "SQL",
        "Server",
        "PostgreSQL",
        "Web",
        "Technologies",
        "HTML",
        "jQuery",
        "Ajax",
        "CSS",
        "JavaScript",
        "JSON",
        "XML",
        "Django",
        "Flask",
        "Bootstrap",
        "Technologies",
        "Tools",
        "JSP",
        "Spring",
        "Boot",
        "MVC",
        "Security",
        "Web",
        "Services",
        "GitHub",
        "Development",
        "Tools",
        "PyCharm",
        "Notepad",
        "Sublime",
        "Slack",
        "SQL",
        "Alchemy",
        "IDEs",
        "Eclipse",
        "Net",
        "Beans",
        "Tools",
        "Jenkins",
        "Docker",
        "Kubernetes",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Full",
        "Stack",
        "Developer",
        "Bank",
        "America",
        "Jacksonville",
        "FL",
        "January",
        "Present",
        "Responsibilities",
        "modules",
        "python",
        "Django",
        "user",
        "interface",
        "website",
        "html",
        "CSS",
        "JavaScript",
        "jQuery",
        "Ajax",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "python",
        "Django",
        "dashboard",
        "High",
        "Charts",
        "JavaScript",
        "library",
        "Worked",
        "flask",
        "API",
        "endpoints",
        "UI",
        "ETL",
        "data",
        "MYSQL",
        "CSS",
        "JavaScript",
        "AJAX",
        "XHTML",
        "Web",
        "compliant",
        "networking",
        "website",
        "python",
        "Django",
        "web",
        "pages",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "knowledge",
        "building",
        "Docker",
        "cluster",
        "Kubernetes",
        "linux",
        "git",
        "services",
        "Kubernetes",
        "cluster",
        "Terraform",
        "application",
        "containers",
        "applications",
        "python",
        "Django",
        "work",
        "docker",
        "RabbitMQ",
        "Jenkins",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "Experience",
        "CICD",
        "model",
        "methodology",
        "environment",
        "Integrated",
        "GIT",
        "Jenkins",
        "code",
        "checkout",
        "process",
        "security",
        "level",
        "data",
        "report",
        "generation",
        "web",
        "application",
        "FLASK",
        "MVC",
        "design",
        "architecture",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Automated",
        "CICD",
        "enterprise",
        "application",
        "Stash",
        "JUNIT",
        "Quality",
        "Docker",
        "Kubernetes",
        "Created",
        "RDS",
        "DB",
        "instances",
        "MultiAG",
        "deployments",
        "DB",
        "instance",
        "Failover",
        "reboot",
        "Installation",
        "patches",
        "packages",
        "RPM",
        "YUM",
        "hat",
        "Linux",
        "client",
        "side",
        "validations",
        "Search",
        "Security",
        "modules",
        "JavaScript",
        "Validation",
        "Framework",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Backbone",
        "JS",
        "jQuery",
        "CSS",
        "Bootstrap",
        "PLSQL",
        "MongoDB",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Shell",
        "Scripting",
        "REST",
        "PostgreSQL",
        "Python",
        "Full",
        "Stack",
        "Developer",
        "USAA",
        "Plano",
        "July",
        "December",
        "Responsibilities",
        "python",
        "Django",
        "Web",
        "Framework",
        "end",
        "database",
        "schema",
        "business",
        "support",
        "user",
        "interface",
        "website",
        "html",
        "CSS",
        "JavaScript",
        "jQuery",
        "Ajax",
        "website",
        "interface",
        "views",
        "templates",
        "python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "Experience",
        "python",
        "libraries",
        "NumPy",
        "SciPy",
        "Web2py",
        "Solved",
        "MySQL",
        "database",
        "python",
        "pythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "python",
        "Performed",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupiter",
        "Notebook",
        "PyCharm",
        "Visual",
        "Studio",
        "Generating",
        "reports",
        "python",
        "libraries",
        "NumPy",
        "matplotlib",
        "python",
        "OOP",
        "code",
        "quality",
        "monitoring",
        "code",
        "python",
        "automation",
        "Gunicorn",
        "Docker",
        "Nginx",
        "Kubernetes",
        "MVC",
        "architecture",
        "Django",
        "SOAP",
        "web",
        "service",
        "SOAPUI",
        "Relational",
        "DB",
        "RDBMD",
        "PostgreSQL",
        "NoSQL",
        "database",
        "MongoDB",
        "database",
        "connectivity",
        "structure",
        "DB",
        "browser",
        "SQLite",
        "Experience",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "installation",
        "configuration",
        "administration",
        "security",
        "backup",
        "recovery",
        "upgrades",
        "Linux",
        "Red",
        "Hat",
        "Debian",
        "Win",
        "Servers",
        "environment",
        "jQuery",
        "data",
        "manipulation",
        "client",
        "side",
        "Amazon",
        "Route53",
        "zones",
        "Shell",
        "Python",
        "deployment",
        "process",
        "Virtual",
        "Cloud",
        "VPCs",
        "subnets",
        "architecture",
        "Experience",
        "AWS",
        "CloudFront",
        "distributions",
        "access",
        "S3",
        "bucket",
        "HTTP",
        "server",
        "EC2",
        "instances",
        "AWS",
        "CloudFront",
        "distributions",
        "access",
        "S3",
        "bucket",
        "HTTP",
        "server",
        "EC2",
        "instances",
        "rest",
        "APIs",
        "python",
        "Django",
        "framework",
        "integration",
        "data",
        "sources",
        "RDBMS",
        "Shell",
        "Scripting",
        "Text",
        "Django",
        "APIs",
        "database",
        "python",
        "Django",
        "Template",
        "customer",
        "service",
        "web",
        "pages",
        "user",
        "interface",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "MongoDB",
        "JavaScript",
        "jQuery",
        "JSON",
        "Sublime",
        "Text",
        "database",
        "access",
        "DjangoCMS",
        "plugins",
        "Bootstrap",
        "Agile",
        "Eclipse",
        "GitHub",
        "Junit",
        "Agile",
        "UML",
        "JSP",
        "Xml",
        "SOA",
        "Shell",
        "Scripting",
        "MVC",
        "Jenkins",
        "Docker",
        "Kubernetes",
        "Python",
        "Django",
        "Developer",
        "Value",
        "Labs",
        "July",
        "December",
        "Responsibilities",
        "frontend",
        "python",
        "Django",
        "Angular",
        "JS",
        "ReactJS",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "SQL",
        "server",
        "management",
        "studio",
        "import",
        "ImportedExported",
        "data",
        "data",
        "sources",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "python",
        "JavaScript",
        "features",
        "dashboard",
        "program",
        "users",
        "manuals",
        "documentation",
        "design",
        "pattern",
        "Django",
        "Framework",
        "database",
        "Django",
        "REST",
        "APIs",
        "python",
        "data",
        "Debug",
        "application",
        "deployments",
        "environments",
        "Jenkins",
        "integration",
        "process",
        "automation",
        "code",
        "coverage",
        "analysis",
        "reports",
        "python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Code",
        "review",
        "GitHub",
        "testing",
        "fixing",
        "bugs",
        "modifications",
        "reload",
        "web",
        "page",
        "AJAX",
        "UI",
        "portions",
        "highquality",
        "data",
        "collection",
        "integrity",
        "data",
        "Django",
        "configuration",
        "URLs",
        "Application",
        "Parameters",
        "python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "ReactJS",
        "JavaScript",
        "jQuery",
        "JSON",
        "Sublime",
        "Text",
        "XML",
        "database",
        "access",
        "Bootstrap",
        "Pandas",
        "Agile",
        "Eclipse",
        "GitHub",
        "Junit",
        "Agile",
        "UML",
        "JSP",
        "Xml",
        "SOA",
        "Shell",
        "Scripting",
        "MVC",
        "Python",
        "Developer",
        "Kakatiya",
        "June",
        "June",
        "Responsibilities",
        "frontend",
        "modules",
        "python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Performed",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "ROBOT",
        "framework",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "features",
        "dashboard",
        "MYSQL",
        "database",
        "python",
        "pythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Django",
        "framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "applications",
        "frontend",
        "web",
        "pages",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "AJAX",
        "CSS",
        "Working",
        "python",
        "automation",
        "Docker",
        "provisioningautomation",
        "Shell",
        "XML",
        "tasks",
        "Sed",
        "AJAX",
        "portions",
        "web",
        "pages",
        "request",
        "server",
        "need",
        "web",
        "page",
        "Web",
        "services",
        "XML",
        "jQuery",
        "Implemented",
        "Docker",
        "tool",
        "scheduling",
        "deploying",
        "python",
        "jobs",
        "Django",
        "Forms",
        "data",
        "login",
        "users",
        "HTML",
        "CSS",
        "BOOTSTRAP",
        "Script",
        "clients",
        "templates",
        "Environment",
        "Python",
        "Java",
        "JavaScript",
        "HTMLCSS",
        "MySQL",
        "BOOTSTRAP",
        "XML",
        "AJAX",
        "Docker",
        "PLSQL",
        "JDBC",
        "Unix",
        "Shell",
        "Scripting",
        "UnixLinux",
        "VMware",
        "Ansible",
        "C",
        "GIT",
        "Jenkins",
        "Chef",
        "Docker",
        "Apache",
        "Tomcat",
        "Artifacts",
        "AWS",
        "Education",
        "Bachelor",
        "Technology",
        "Technology",
        "GITAM",
        "University",
        "Hyderabad",
        "Telangana"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:40:18.112766",
    "resume_data": "Sr Python Full Stack Developer Sr span lPythonspan Full Stack span lDeveloperspan Sr Python Full Stack Developer Bank of America 5 years of experience in developing applications using python and worked on various standalone clientserver applications front end backend using python and Django Having good knowledge on python framework like Django and flask Proficiency in analysis designing and developing of wed applications Design and maintain databases using python and developed pythonbased API using SQL Alchemy and PostgreSQL and installed packages using python pip and easy install Experienced in developing Webbased Applications using python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS involving Beautiful Soap NumPy Matplotlib and Pandas Data frame Extensive working experience on MYSQL database queries from python using pythonMySQL connector and MySQL dB package DB browser SQLite to retrieve information and expertise in establishing database connections for python by configuring packages like MySQL python Knowledge in Model View Controller MVC frameworks like Django Java Script and jQuery Solid knowledge in various Python Integrated Development Environments like Eclipse Sublime Text and NetBeans Experience objectoriented programming OOP concepts using python and C Expertise in NoSQL technologies like MongoDB and relational databases like Oracle SQLite Postgre SQL and MySQL PostgreSQL databases Worked on creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Strong experience with UNIXLinux in installing and configuring LVM RAID NGINX Apache HTTPD Tomcat Weblogic MySQL Oracle patching system application log metrics configured custom Cloud Watch metrics Skilled in use and creation of REST APIs with CRUD operations for functionality and SOAP APIs for additional security Having good knowledge on public and private cloud platforms like Amazon Web Services AWS and Open stack Knowledge on Gunicorn Docker Nginx and Kubernetes Good knowledge on android SDK 23 Good experience in AWS CLI to manage AWS infrastructure Used UNIXLinux shell scripting to automate system administration tasks system backuprestore management and user account management Expertise in AWS Identity and Access Management IAM such as creating users groups organizing IAM users to groups assigning roles to groups and also familiarity with hosting and participating in projects on Git and Bitbucket source control Ability to work independently or as part of an integrated team with experience in a leadership role at the helm of a project Designed and implemented Amazon Web DevOps Services AWS cloudbased instances for use on their current and upcoming projects Designed and Created Terraform templates and used existing templates to create stacks and provisioned Infrastructure Programming languages Python Java C AWS cloud python Django Web Framework Databases Oracle SQL Server PostgreSQL Web Technologies HTML jQuery Ajax CSS JavaScript JSON XML Django Flask Bootstrap Technologies and Tools JSP Spring Boot MVC Security Web Services GitHub Development Tools PyCharm Notepad Sublime Slack SQL Alchemy IDEs Eclipse Net Beans Other Tools Jenkins Docker Kubernetes Work Experience Sr Python Full Stack Developer Bank of America Jacksonville FL January 2019 to Present Responsibilities Designed and developed both front and backend modules using python Django and created user interface of the website used html CSS JavaScript jQuery and Ajax XML processing data exchange and business logic implementation using python and Django Designed and Developed dashboard using High Charts JavaScript library Worked and developing of flask Restful API endpoints for accessing through UI and uploading ETL data Worked with MYSQL CSS JavaScript AJAX and XHTML to build a fully Web compliant networking website Used python Django to develop dynamic web pages Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Good knowledge in building and managing Docker contains cluster managed by Kubernetes linux and git and also implemented its services and building a selfhosted Kubernetes cluster using Terraform and Ansible and deploying application containers For building backend applications with python Django worked with work with docker RabbitMQ and Jenkins Involved in the Complete Software development life cycle SDLC to develop the application Experience in CICD model methodology using various environment Integrated GIT into Jenkins to automate the code checkout process Used caching reusing and improve the security level of data for report generation Developed web application using FLASK which is based on MVC design architecture Used python scripts to parse XML documents and load the data in database and performed testing using Djangos Test Module Automated CICD for our enterprise application using Stash JUNIT Quality gates Docker and Kubernetes Created RDS DB instances using MultiAG deployments Tested DB instance Failover using reboot with failover Installation of patches and packages using RPM and YUM in Red hat Linux Implemented client side validations for Search and Security modules using JavaScript and Validation Framework Environment Python Django HTML5 CSS XML MySQL JavaScript Backbone JS jQuery CSS Bootstrap PLSQL MongoDB TSQL JavaScript Eclipse Git GitHub Shell Scripting REST PostgreSQL Python Full Stack Developer USAA Plano July 2018 to December 2018 Responsibilities By using python on Django Web Framework designed both front end and backend and create database schema to represent and support business support For the user interface of the website used html CSS JavaScript jQuery and Ajax To create a userfriendly website interface used views and templates with python and Djangos view controller and templating language Experience in python libraries like NumPy SciPy and Web2py Solved many MySQL database queries from python using pythonMySQL connector and MySQL DB package Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm and Visual Studio Generating graphical reports by using the python libraries like NumPy and matplotlib Involved in python OOP code for quality logging monitoring and debugging code Worked with backend python automation Gunicorn Docker Nginx and Kubernetes Implemented MVC architecture using Django SOAP web service and SOAPUI Worked with Relational DB RDBMD like SQLite PostgreSQL and NoSQL database MongoDB for database connectivity and for the structure DB browser SQLite Experience using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Experienced in installation configuration administration troubleshooting tuning security backup recovery and upgrades of Linux Red Hat based 67 and Debian based and Win 20082012 Servers in a large environment By using jQuery data manipulation is done on client side Using Amazon Route53 to manage public and private hosted zones Used Shell Python scripts to automate the deployment process Configured AWS Virtual Private Cloud VPCs and various public and private subnets to implement multitier architecture Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Experience in AWS CloudFront including creating and managing distributions to provide access to S3 bucket or HTTP server running on EC2 instances Developed rest APIs using python Django framework and done the integration of various data sources including RDBMS Shell Scripting and Text files Django APIs to access the database by using python Django Template developed the customer service web pages and worked on responsive user interface using HTML5 CSS3 Bootstrap and JavaScript Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB JavaScript jQuery JSON Sublime Text database access DjangoCMS plugins Bootstrap Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Jenkins Docker and Kubernetes Python Django Developer Value Labs July 2015 to December 2017 Responsibilities Handled both frontend and backend using python Django Angular JS ReactJS XML CSS HTML JavaScript and jQuery By using SQL server management studio import ImportedExported data between different data sources Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval By using python and JavaScript created and tested many features for dashboard and maintained program libraries users manuals and technical documentation Designed ModelViewTemplate design pattern using Django Framework and managed To access the database created Django REST APIs using python and used to retrieve and save data Debug application deployments on multiple environments Used Jenkins for the continuous integration process automation and assisted in the code coverage and analysis by generating reports Used python and Django creating graphics XML processing data exchange and business logic implementation Used python Django forms to record data and the Login module page for users Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Managed large datasets using Panda data frames and MySQL Code review using GitHub testing fixing of the bugs and coding modifications To avoid the reload for the web page used AJAX in UI to update small portions Ensured highquality data collection and maintaining the integrity of the data Used Django configuration to manage URLs and Application Parameters Worked on python OpenStack APIs and used NumPy for Numerical analysis Environment Python Django Web Framework HTML5 CSS3 Bootstrap ReactJS JavaScript jQuery JSON Sublime Text XML database access Bootstrap Pandas Agile Eclipse GitHub Junit Agile UML JSP Xml SOA Shell Scripting MVC Python Developer Kakatiya IN June 2013 to June 2015 Responsibilities Developed entire frontend and backend modules using python Django Web Framework Using the HTML CSS JavaScript and jQuery Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Performed Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs By using python ROBOT framework Bootstrap CSS and JavaScript developed and tested many features of dashboard Executed MYSQL database queries from python using pythonMySQL connector and MySQL dB package to retrieve information Used Django framework in developing web applications to implement the model view control architecture Worked on Dockers RabbitMQ Celery and Jenkins for the backend applications Designed the frontend web pages using HTML JavaScript Angular JS jQuery and AJAX Used CSS Working with backend python automation Docker and cloud provisioningautomation Used Shell scripting XML to automate some of the menial tasks Sed AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page and designed and developed Web services using XML and jQuery Implemented Docker build tool for scheduling deploying python jobs Generated python Django Forms to record data login and signup of users Used HTML CSS BOOTSTRAP and JAVA Script based on clients request to develop templates Environment Python Java JavaScript HTMLCSS MySQL BOOTSTRAP XML AJAX Docker PLSQL JDBC Unix Shell Scripting UnixLinux VMware Ansible C GIT Jenkins Chef Docker Apache Tomcat Artifacts AWS TCPIP Education Bachelor of Technology in Technology GITAM University Hyderabad Telangana",
    "unique_id": "ca052452-0b29-4ae0-8199-10336b52faae"
}