{
    "clean_data": "Full Stack Developer Angular Full Stack span lDeveloperspan Angular Full Stack Developer Angular Breakthru Beverage Group Fort Lauderdale FL IT Professional with over all 9years of experience and as a Full StackNet Developer in system Analysis Design Development Testing and Maintenance of WebBased and Ntier Architectures using objectoriented programming in Health care banking and ECommerce domains Experience in developing highly interactive web applications utilizing Angular 456 NodeJS ExpressJS TypeScript JavaScript Bootstrap HTML CSS to create Single Page Application and integrating RESTful APIs Experience on working with Document Object Model DOM and DOM manipulation using Structural Attribute and Custom Directives and performed clientside validation using Forms in Angular 456 Created Angular Modules Components Services Dependency Injection Pipes implemented routing for seamless navigation and used RxJs library for observable map and subscribe to fetch data Experienced implementing REST API using nodejs expressjs Testing API using PostMan for all CRUD operations Enable CrossOrigin Resource Sharing CORS for RESTful services with multiple endpoints Expertise in developing application using ASPNET NET C ASPNET MVC ASPNET WEB API LINQ SQL Server MongoDB ADONET and Entity Framework Experience in working ASPNET MVC by developing Controllers Views Partial Views HTML Helpers in Razor View Engine Data Annotations Action Methods Action Filters and Action Results Experienced with implementing ASPNET MVC Models extensively on integrating ADONET Entity FrameWork LINQ and Lambda expressions with SQL server Proficient in developing SQL on MS SQL Server using Tables Triggers Views and Stored Procedures and maintaining the database Deploy Configure Maintain applications on Azure Cloud Services and Knowledge on Azure CLI Experience in configuring cloud platform such as VMs Web apps Cloud Services Performed Unit Testing end to end testing using Karma and Jasmine in Angular and NUnit in ASPNET Version control using GitHub TFS GIT integration with VS VS Code where multibranch code commits and merging Working in an Agile application development SCRUM team and using Jira for project management and bug tracking Work Experience Full Stack Developer Angular Breakthru Beverage Group Fort Lauderdale FL June 2018 to Present ASPNET Description Breakthru Beverage Group is a leading North American beverage wholesaler driving innovation in the marketplace with a nimble and insightful approach to business Breakthru is proud to be familyowned and operated bringing valued expertise to its operations across Responsibilities Involved in all the phases of SDLC including Design Analysis of the Customer Specifications Development and Customization of the Application Design and implemented webbased application using C ASPNET WEB API Entity Framework LINQ SQL Server and Angular 56 Restful API using Nodejs Expressjs and MongoDB Designed and developed Single Page Application using Angular Dependency Injection Routing Components Services Lazy loading Custom Directives and Pipes Utilized Angular lifecycle hooks such as ngOnInit ngOnChanges ngDoCheck and ngOnDestroy to optimize application performance and data persistence Used Observables and RxJs library to communicate with the server and used input output ViewChild EventEmitter and Services for sharing data within different Components Involved in designing view templates using responsive design with Angular bootstrap CSS HTML Implemented Angular clientside validation to improve the accuracy of input data Deployed the API using Node JS Express JS and Handled HTTP RequestResponse using Router Module Implemented tokenbased Authentication and Authorization using JSON Web Tokens JWT where password bcrypted Angular AUTH guard CanActivateCanDeactivate access and restrictions to modules based on a user ASPNET Web API development with entity framework for MS SQL with CORS enabled multiple endpoint web and mobile Tested using the Postman Services to ensure the get put post delete functionalities are working fine Used ASPNet Entity Framework to create Models and data access through the Web API from the server Used LINQ to interact with the database and perform the data manipulation through the WebAPI Used SQL Server as database and involved in writing several SQL objects like Stored Procedures Views Triggers and Involved in designing tables Prepared Unit test cases and performed NUnit testing prior to system implementation Involved in Unit Testing components Services using Karma and Jasmine frameworks Have followed Agile Methodology effectively Used Git Repository as a version control for code repository and use JIRA for Project management Deployed the Web Application on Azure Cloud Services and Maintained the application in developer environment Environment ASPNET ASPNET MVC 5 Entity Framework Angular 5 LINQ SSMS HTML5 CSS3 Bootstrap JavaScript NodeJS ExpressJS MongoDB GIT JIRA TFS MEAN Stack ASPNET Developer HSBC Jersey City NJ March 2016 to May 2018 Description HSBC one of the largest banking and financial services institutions in the world serves millions of customers through its four Global Businesses Being one of the worlds leading worlds leading financial institutions serves individual consumers small and middlemarket businesses and large corporations with a full range of banking investing asset management and other financial and risk management products and services It also includes online and mobile banking In core banking system there were three main modules such as Admin Banker and Customer In Banker module we developed new functionality in deposits submodule APIs where system processed banking transactions and posts updates to accounts and to other financial records Our team was also involved in developing and maintaining web pages for account maintenance fees as savings checkings Developed the application using Angular as front end and ASPNET WEB API as backend Responsibilities Involved in requirement Analysis Design and Development of a webbased application using C ASPNET WEBAPI Angular Entity Framework and SQL Server Designed implemented Single Page User Interface for client service module using Angular HTML and CSS Worked effectively with Angular generated Components and Services using AngularCLI Implemented Clientside validations manipulated DOM Events Directives and Pipes Created templates using various builtin directives to manipulate DOM objects using ngIF ngFor ngClass and ngSwitch And worked with NPM package manager tools Worked with reactive extensions RXJS especially Observables for asynchronously calling the server Worked in Angular builtin directives such as ngModel to perform TwoWay Data Binding and passed the data between the components using Input Output EventEmitter Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Worked in Agile methodology and delivered accepted functionality in each sprint Designed unit testing module with NUnit to test the application performance and availability Involved in Microsoft Azure platform for the building managing applications and deploying web applications Heavily involved in code review build and deployment with GIT Environment C NET FrameWork ASPNET MVC Entity FrameWork LINQ BootStrap ASPNET WebApI Html5 CSS3 Angular 4 SQL Server Mongo dB JIRA Visual Studio 2015 GIT TFS ASPNET MVC Developer Bed Bath and Beyond Union NJ April 2014 to February 2016 Description Bed Bath and Beyond is an American chain of retail and merchandise stores specializing in bedroom bathroom kitchen and dining The purpose of this project was to bring their tracking technology up to date to keep records of their customers and products as well as provide the status and history of any products across every store in realtime Using this application Management users were informed what items had low sales in order to put these items on clearance It was accomplished by updating the database and creating a friendly user interface to allow more sales by sending emails to customers to gain their attention and inform them about new and upcoming sale offers dashboard to model and display sales trends and predictions creating alerts and email automation Our development team implemented backend using ASPNET driving a Webbased frontend and a relational database Responsibilities Involved in design and develop UI screens using ASPNet MVC 5ASPNetCVisual Studio Design and developed Views Partial Views Models ViewModels and Controllers Design and develop User Interface and build custom Html helper classes for reusable controls Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented ASPNET MVC validation at controller level using Data Annotations for model validation Achieved Strongly typed view by using data Model in the View Worked with Razor Views Engine for displaying C code in HTML Implemented ViewBag ViewData TempData and Session to transfer data between views and controllers Partial Views for assigned modules Custom classes for MVC Views Responsive UI with Bootstrap for handheld devices or multiple screen resolutions Used ASPNET forms Authentication and rolebased Authorization to implement application security Installed and used NuGet for Package management and dependency resolution Followed Scrum Framework for the development and release activities Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET ASPNET MVC Entity FrameWork LINQ SQL Server Management Studio HTML CSS3 Bootstrap JavaScript Razor views NuGet ASPNET MVC Developer DEP Flushing NY July 2012 to March 2014 Description DEP has various departments and one of the Departments is EHS Employee Health Safety ECT is a Web Application for tracking Employee Concerns of various levels and notifies the personnel to the respective group ECT system provides various reports to various levels of Users DEP has one more web application called DEP facilities that allow users from different facilities at different bureaus to manage enter search for data related to historical contamination at DEP facilities in designing and developing the ECT for various report and DEP facilities module to search data Responsibilities Actively involved in coding using ASPNet C ADONet HTML JavaScript Working closely with client for requirement gathering analysis and provided desired solution in time limits Created UI screens using Razor Views HTML5 CSS3 and Bootstrap for responsive design Used ADONET and Entity Framework to create Models Extensively used ADONet data objects like Data Set Data Reader and Data Adapter for retrieving the data from SQL Server database and for updating the data back into the database Used Data Annotations for Serverside validations and JavaScript for Clientside validation Used the Shared Layout view to keep the theme consistent across page and created Views and Partial views Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level Written and used Stored Procedures Tables and Views Triggers Functions for maintaining and interaction with Database using SQL server Have followed SCRUM Methodology effectively Worked with Team on Code review Best practice docs testing and error handling Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET 35 ASPNET MVC C ADONET JQuery SQL Server SQL Server Management Studio Visual Studio Team Foundation Server Java Developer Delta Air Lines Atlanta GA February 2010 to June 2012 Description Delta Air Lines Inc typically referred to as Delta is a major American airline Responsibilities Implemented OOD J2EE design patterns while coding Developing presentation layer using HTML JavaScript CSS JSP and achieved better navigation look feel from user perspective on MVC frame work Developed Processors to handle requests from presentation layer using Servlets JavaScript was used to validate the information Developing business layer using J2EE architecture Created DAO for database communication Wrote the utility classes for connection to database using oracle thin drivers Developing SQL queries It includes creating tables views procedures and updating them Responsible for writing the prepared statements that is precompiled and complicated SQL statements CVS Source Version Control source control is used to check in and check out the files Clientside Validations are implemented using JavaScript Another Validations are implemented using JSTL and Custom Tags Provided Application support for System Integration Testing and User Acceptance Testing Environment Servlets Java JSP JDBC JNDI JSTL Oracle 9i ES Frame works Third party SW related to Struts Eclipse WSAD CVS Source Version Control JUnit UML HTML JavaScript XML CSS WebSphere 50 Student Trainee Stevens Institute of Technology St Lancaster PA November 2008 to January 2010 Description Stevens Institute of Technology is a private coeducational research it is one of the oldest technological universities in the United States and was the first college in America solely dedicated to mechanical engineering Responsibilities Design of Architecture Writing of class Diagrams and Sequence Diagrams Developing the Prototype Design and coding of modules Writing SQL Procedures Deploying on Oracle Application Server build test and deploy Involved in writing test cases and use cases Environment Java Windows XP Oracle Education Bachelors Skills ADO ADONET SQL SERVER SQL SERVER 2012 SQL NET MS VISUAL STUDIO VISUAL STUDIO API C HTML JAVASCRIPT BOOTSTRAP TYPESCRIPT NET 35 ASPNET WEB API MVC AJAX ASP CSS Links httpStackNet Additional Information TECHNICAL SKILLS Languages C NET 35445 JavaScript TypeScript HTML CSS Java NET Technologies ASPNET 445 MVC 45 ASPNET Web API Entity Framework ADONET LINQ Databases SQL Server 16 MongoDB Web Technologies Angular 45 Node Js Express Js HTML Bootstrap JQuery Ajax Development Tools MS Visual Studio 20131517 MS Visual Code Postman Source Code Control Tools Team Foundation Server TFS GitHub GitLab JIRA Methodologies Cloud Agile Scrum and Azure Cloud Services",
    "entities": [
        "Cloud Services Performed Unit Testing",
        "ECT",
        "SSMS",
        "Beyond Union NJ",
        "User Acceptance Testing Environment",
        "Responsibilities Actively",
        "SQL Server Management Studio Visual Studio Team Foundation",
        "Partial Views",
        "Razor View Engine Data Annotations Action Methods Action Filters",
        "Departments",
        "Responsibilities Design of Architecture Writing",
        "SQL Server Designed",
        "Present ASPNET Description Breakthru Beverage Group",
        "Knowledge on Azure CLI Experience",
        "America",
        "Delta",
        "the Prototype Design",
        "C ASPNET WEB API Entity Framework",
        "Working",
        "Health Safety ECT",
        "Angular generated Components and Services",
        "Layer using Entity Framework",
        "ADO ADONET SQL SERVER",
        "Created DAO",
        "Maintained",
        "Router Module Implemented",
        "Control Tools Team Foundation",
        "Stored Procedures Views Triggers",
        "GIT Environment C NET FrameWork",
        "WebSphere",
        "Stored Procedures Tables",
        "SQL Server",
        "Studio Design",
        "Stored Procedures",
        "Tables Triggers Views",
        "Prepared Unit",
        "ASPNET WEB API",
        "Data Annotations",
        "Writing SQL Procedures Deploying",
        "Delta Air Lines Inc",
        "NUnit",
        "NuGet ASPNET MVC Developer",
        "Oracle Application Server",
        "CVS Source Version Control",
        "JSTL",
        "Responsibilities Involved",
        "Analysis Design and Development",
        "Heavily",
        "ViewChild EventEmitter",
        "Lambda Expressions",
        "Microsoft Azure",
        "Description Stevens Institute of Technology",
        "Action Filters Exception Filters",
        "ASPNET WEB API MVC",
        "Ntier Architectures",
        "Data Set Data Reader",
        "Controllers Views Partial Views HTML Helpers",
        "NuGet for Package",
        "ASPNET NET C",
        "HTML Implemented ViewBag ViewData TempData",
        "CVS Source Version Control JUnit UML",
        "DOM",
        "CSS Java",
        "Views",
        "Interface",
        "MVC",
        "Angular AUTH guard",
        "Agile",
        "Azure Cloud Services",
        "MS SQL Server",
        "Custom Tags Provided Application",
        "GitHub TFS GIT",
        "API",
        "LINQ",
        "Database",
        "Fort Lauderdale",
        "Worked with Team on Code",
        "Pipes Created",
        "Input Output EventEmitter Designed",
        "TypeScript",
        "Developed Processors",
        "ASPNET Version",
        "MVC Views Responsive UI",
        "TwoWay Data Binding",
        "PostMan",
        "SQL",
        "Bootstrap",
        "Full StackNet Developer",
        "NPM",
        "the United States",
        "Used Team Foundation Server TFS for Source Control",
        "WebBased",
        "SQL Server Management Studio",
        "Authentication and Authorization using JSON Web Tokens",
        "Views Partial Views Models ViewModels",
        "Node JS Express",
        "Created UI",
        "Entity Framework",
        "the Postman Services",
        "Version Control Environment",
        "C ASPNET WEBAPI Angular Entity Framework",
        "SQL NET MS VISUAL STUDIO",
        "UI",
        "Banker",
        "RxJs",
        "Razor Views HTML5 CSS3",
        "Angular 56 Restful API",
        "Version Control Environment ASPNET ASPNET MVC Entity FrameWork",
        "ASPNET",
        "Structural Attribute and Custom Directives",
        "Single Page Application",
        "Responsibilities Implemented OOD J2EE"
    ],
    "experience": "Experience in developing highly interactive web applications utilizing Angular 456 NodeJS ExpressJS TypeScript JavaScript Bootstrap HTML CSS to create Single Page Application and integrating RESTful APIs Experience on working with Document Object Model DOM and DOM manipulation using Structural Attribute and Custom Directives and performed clientside validation using Forms in Angular 456 Created Angular Modules Components Services Dependency Injection Pipes implemented routing for seamless navigation and used RxJs library for observable map and subscribe to fetch data Experienced implementing REST API using nodejs expressjs Testing API using PostMan for all CRUD operations Enable CrossOrigin Resource Sharing CORS for RESTful services with multiple endpoints Expertise in developing application using ASPNET NET C ASPNET MVC ASPNET WEB API LINQ SQL Server MongoDB ADONET and Entity Framework Experience in working ASPNET MVC by developing Controllers Views Partial Views HTML Helpers in Razor View Engine Data Annotations Action Methods Action Filters and Action Results Experienced with implementing ASPNET MVC Models extensively on integrating ADONET Entity FrameWork LINQ and Lambda expressions with SQL server Proficient in developing SQL on MS SQL Server using Tables Triggers Views and Stored Procedures and maintaining the database Deploy Configure Maintain applications on Azure Cloud Services and Knowledge on Azure CLI Experience in configuring cloud platform such as VMs Web apps Cloud Services Performed Unit Testing end to end testing using Karma and Jasmine in Angular and NUnit in ASPNET Version control using GitHub TFS GIT integration with VS VS Code where multibranch code commits and merging Working in an Agile application development SCRUM team and using Jira for project management and bug tracking Work Experience Full Stack Developer Angular Breakthru Beverage Group Fort Lauderdale FL June 2018 to Present ASPNET Description Breakthru Beverage Group is a leading North American beverage wholesaler driving innovation in the marketplace with a nimble and insightful approach to business Breakthru is proud to be familyowned and operated bringing valued expertise to its operations across Responsibilities Involved in all the phases of SDLC including Design Analysis of the Customer Specifications Development and Customization of the Application Design and implemented webbased application using C ASPNET WEB API Entity Framework LINQ SQL Server and Angular 56 Restful API using Nodejs Expressjs and MongoDB Designed and developed Single Page Application using Angular Dependency Injection Routing Components Services Lazy loading Custom Directives and Pipes Utilized Angular lifecycle hooks such as ngOnInit ngOnChanges ngDoCheck and ngOnDestroy to optimize application performance and data persistence Used Observables and RxJs library to communicate with the server and used input output ViewChild EventEmitter and Services for sharing data within different Components Involved in designing view templates using responsive design with Angular bootstrap CSS HTML Implemented Angular clientside validation to improve the accuracy of input data Deployed the API using Node JS Express JS and Handled HTTP RequestResponse using Router Module Implemented tokenbased Authentication and Authorization using JSON Web Tokens JWT where password bcrypted Angular AUTH guard CanActivateCanDeactivate access and restrictions to modules based on a user ASPNET Web API development with entity framework for MS SQL with CORS enabled multiple endpoint web and mobile Tested using the Postman Services to ensure the get put post delete functionalities are working fine Used ASPNet Entity Framework to create Models and data access through the Web API from the server Used LINQ to interact with the database and perform the data manipulation through the WebAPI Used SQL Server as database and involved in writing several SQL objects like Stored Procedures Views Triggers and Involved in designing tables Prepared Unit test cases and performed NUnit testing prior to system implementation Involved in Unit Testing components Services using Karma and Jasmine frameworks Have followed Agile Methodology effectively Used Git Repository as a version control for code repository and use JIRA for Project management Deployed the Web Application on Azure Cloud Services and Maintained the application in developer environment Environment ASPNET ASPNET MVC 5 Entity Framework Angular 5 LINQ SSMS HTML5 CSS3 Bootstrap JavaScript NodeJS ExpressJS MongoDB GIT JIRA TFS MEAN Stack ASPNET Developer HSBC Jersey City NJ March 2016 to May 2018 Description HSBC one of the largest banking and financial services institutions in the world serves millions of customers through its four Global Businesses Being one of the worlds leading worlds leading financial institutions serves individual consumers small and middlemarket businesses and large corporations with a full range of banking investing asset management and other financial and risk management products and services It also includes online and mobile banking In core banking system there were three main modules such as Admin Banker and Customer In Banker module we developed new functionality in deposits submodule APIs where system processed banking transactions and posts updates to accounts and to other financial records Our team was also involved in developing and maintaining web pages for account maintenance fees as savings checkings Developed the application using Angular as front end and ASPNET WEB API as backend Responsibilities Involved in requirement Analysis Design and Development of a webbased application using C ASPNET WEBAPI Angular Entity Framework and SQL Server Designed implemented Single Page User Interface for client service module using Angular HTML and CSS Worked effectively with Angular generated Components and Services using AngularCLI Implemented Clientside validations manipulated DOM Events Directives and Pipes Created templates using various builtin directives to manipulate DOM objects using ngIF ngFor ngClass and ngSwitch And worked with NPM package manager tools Worked with reactive extensions RXJS especially Observables for asynchronously calling the server Worked in Angular builtin directives such as ngModel to perform TwoWay Data Binding and passed the data between the components using Input Output EventEmitter Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Worked in Agile methodology and delivered accepted functionality in each sprint Designed unit testing module with NUnit to test the application performance and availability Involved in Microsoft Azure platform for the building managing applications and deploying web applications Heavily involved in code review build and deployment with GIT Environment C NET FrameWork ASPNET MVC Entity FrameWork LINQ BootStrap ASPNET WebApI Html5 CSS3 Angular 4 SQL Server Mongo dB JIRA Visual Studio 2015 GIT TFS ASPNET MVC Developer Bed Bath and Beyond Union NJ April 2014 to February 2016 Description Bed Bath and Beyond is an American chain of retail and merchandise stores specializing in bedroom bathroom kitchen and dining The purpose of this project was to bring their tracking technology up to date to keep records of their customers and products as well as provide the status and history of any products across every store in realtime Using this application Management users were informed what items had low sales in order to put these items on clearance It was accomplished by updating the database and creating a friendly user interface to allow more sales by sending emails to customers to gain their attention and inform them about new and upcoming sale offers dashboard to model and display sales trends and predictions creating alerts and email automation Our development team implemented backend using ASPNET driving a Webbased frontend and a relational database Responsibilities Involved in design and develop UI screens using ASPNet MVC 5ASPNetCVisual Studio Design and developed Views Partial Views Models ViewModels and Controllers Design and develop User Interface and build custom Html helper classes for reusable controls Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented ASPNET MVC validation at controller level using Data Annotations for model validation Achieved Strongly typed view by using data Model in the View Worked with Razor Views Engine for displaying C code in HTML Implemented ViewBag ViewData TempData and Session to transfer data between views and controllers Partial Views for assigned modules Custom classes for MVC Views Responsive UI with Bootstrap for handheld devices or multiple screen resolutions Used ASPNET forms Authentication and rolebased Authorization to implement application security Installed and used NuGet for Package management and dependency resolution Followed Scrum Framework for the development and release activities Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET ASPNET MVC Entity FrameWork LINQ SQL Server Management Studio HTML CSS3 Bootstrap JavaScript Razor views NuGet ASPNET MVC Developer DEP Flushing NY July 2012 to March 2014 Description DEP has various departments and one of the Departments is EHS Employee Health Safety ECT is a Web Application for tracking Employee Concerns of various levels and notifies the personnel to the respective group ECT system provides various reports to various levels of Users DEP has one more web application called DEP facilities that allow users from different facilities at different bureaus to manage enter search for data related to historical contamination at DEP facilities in designing and developing the ECT for various report and DEP facilities module to search data Responsibilities Actively involved in coding using ASPNet C ADONet HTML JavaScript Working closely with client for requirement gathering analysis and provided desired solution in time limits Created UI screens using Razor Views HTML5 CSS3 and Bootstrap for responsive design Used ADONET and Entity Framework to create Models Extensively used ADONet data objects like Data Set Data Reader and Data Adapter for retrieving the data from SQL Server database and for updating the data back into the database Used Data Annotations for Serverside validations and JavaScript for Clientside validation Used the Shared Layout view to keep the theme consistent across page and created Views and Partial views Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level Written and used Stored Procedures Tables and Views Triggers Functions for maintaining and interaction with Database using SQL server Have followed SCRUM Methodology effectively Worked with Team on Code review Best practice docs testing and error handling Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET 35 ASPNET MVC C ADONET JQuery SQL Server SQL Server Management Studio Visual Studio Team Foundation Server Java Developer Delta Air Lines Atlanta GA February 2010 to June 2012 Description Delta Air Lines Inc typically referred to as Delta is a major American airline Responsibilities Implemented OOD J2EE design patterns while coding Developing presentation layer using HTML JavaScript CSS JSP and achieved better navigation look feel from user perspective on MVC frame work Developed Processors to handle requests from presentation layer using Servlets JavaScript was used to validate the information Developing business layer using J2EE architecture Created DAO for database communication Wrote the utility classes for connection to database using oracle thin drivers Developing SQL queries It includes creating tables views procedures and updating them Responsible for writing the prepared statements that is precompiled and complicated SQL statements CVS Source Version Control source control is used to check in and check out the files Clientside Validations are implemented using JavaScript Another Validations are implemented using JSTL and Custom Tags Provided Application support for System Integration Testing and User Acceptance Testing Environment Servlets Java JSP JDBC JNDI JSTL Oracle 9i ES Frame works Third party SW related to Struts Eclipse WSAD CVS Source Version Control JUnit UML HTML JavaScript XML CSS WebSphere 50 Student Trainee Stevens Institute of Technology St Lancaster PA November 2008 to January 2010 Description Stevens Institute of Technology is a private coeducational research it is one of the oldest technological universities in the United States and was the first college in America solely dedicated to mechanical engineering Responsibilities Design of Architecture Writing of class Diagrams and Sequence Diagrams Developing the Prototype Design and coding of modules Writing SQL Procedures Deploying on Oracle Application Server build test and deploy Involved in writing test cases and use cases Environment Java Windows XP Oracle Education Bachelors Skills ADO ADONET SQL SERVER SQL SERVER 2012 SQL NET MS VISUAL STUDIO VISUAL STUDIO API C HTML JAVASCRIPT BOOTSTRAP TYPESCRIPT NET 35 ASPNET WEB API MVC AJAX ASP CSS Links httpStackNet Additional Information TECHNICAL SKILLS Languages C NET 35445 JavaScript TypeScript HTML CSS Java NET Technologies ASPNET 445 MVC 45 ASPNET Web API Entity Framework ADONET LINQ Databases SQL Server 16 MongoDB Web Technologies Angular 45 Node Js Express Js HTML Bootstrap JQuery Ajax Development Tools MS Visual Studio 20131517 MS Visual Code Postman Source Code Control Tools Team Foundation Server TFS GitHub GitLab JIRA Methodologies Cloud Agile Scrum and Azure Cloud Services",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Angular",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Angular",
        "Full",
        "Stack",
        "Developer",
        "Angular",
        "Breakthru",
        "Beverage",
        "Group",
        "Fort",
        "Lauderdale",
        "FL",
        "IT",
        "Professional",
        "9years",
        "experience",
        "StackNet",
        "Developer",
        "system",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Maintenance",
        "WebBased",
        "Ntier",
        "Architectures",
        "programming",
        "Health",
        "care",
        "banking",
        "ECommerce",
        "domains",
        "Experience",
        "web",
        "applications",
        "Angular",
        "NodeJS",
        "ExpressJS",
        "TypeScript",
        "JavaScript",
        "Bootstrap",
        "HTML",
        "CSS",
        "Single",
        "Page",
        "Application",
        "APIs",
        "Experience",
        "Document",
        "Object",
        "Model",
        "DOM",
        "DOM",
        "manipulation",
        "Structural",
        "Attribute",
        "Custom",
        "Directives",
        "validation",
        "Forms",
        "Angular",
        "Created",
        "Angular",
        "Modules",
        "Components",
        "Services",
        "Dependency",
        "Injection",
        "Pipes",
        "navigation",
        "RxJs",
        "library",
        "map",
        "data",
        "REST",
        "API",
        "expressjs",
        "Testing",
        "API",
        "PostMan",
        "CRUD",
        "operations",
        "Enable",
        "CrossOrigin",
        "Resource",
        "Sharing",
        "CORS",
        "services",
        "endpoints",
        "Expertise",
        "application",
        "ASPNET",
        "NET",
        "C",
        "ASPNET",
        "MVC",
        "ASPNET",
        "WEB",
        "API",
        "SQL",
        "Server",
        "MongoDB",
        "ADONET",
        "Entity",
        "Framework",
        "Experience",
        "ASPNET",
        "MVC",
        "Controllers",
        "Views",
        "Partial",
        "Views",
        "HTML",
        "Helpers",
        "Razor",
        "View",
        "Engine",
        "Data",
        "Annotations",
        "Action",
        "Methods",
        "Action",
        "Filters",
        "Action",
        "Results",
        "ASPNET",
        "MVC",
        "Models",
        "ADONET",
        "Entity",
        "FrameWork",
        "LINQ",
        "Lambda",
        "expressions",
        "SQL",
        "server",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "Server",
        "Tables",
        "Triggers",
        "Views",
        "Stored",
        "Procedures",
        "database",
        "Configure",
        "Maintain",
        "applications",
        "Azure",
        "Cloud",
        "Services",
        "Knowledge",
        "Azure",
        "CLI",
        "Experience",
        "cloud",
        "platform",
        "VMs",
        "Web",
        "apps",
        "Cloud",
        "Services",
        "Performed",
        "Unit",
        "Testing",
        "testing",
        "Karma",
        "Jasmine",
        "Angular",
        "NUnit",
        "ASPNET",
        "Version",
        "control",
        "GitHub",
        "TFS",
        "GIT",
        "integration",
        "VS",
        "VS",
        "Code",
        "multibranch",
        "code",
        "commits",
        "Working",
        "application",
        "development",
        "SCRUM",
        "team",
        "Jira",
        "project",
        "management",
        "bug",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Angular",
        "Breakthru",
        "Beverage",
        "Group",
        "Fort",
        "Lauderdale",
        "FL",
        "June",
        "Present",
        "ASPNET",
        "Description",
        "Breakthru",
        "Beverage",
        "Group",
        "beverage",
        "wholesaler",
        "innovation",
        "marketplace",
        "approach",
        "business",
        "Breakthru",
        "expertise",
        "operations",
        "Responsibilities",
        "phases",
        "SDLC",
        "Design",
        "Analysis",
        "Customer",
        "Specifications",
        "Development",
        "Customization",
        "Application",
        "Design",
        "application",
        "C",
        "ASPNET",
        "WEB",
        "API",
        "Entity",
        "Framework",
        "SQL",
        "Server",
        "Angular",
        "API",
        "Nodejs",
        "Expressjs",
        "MongoDB",
        "Single",
        "Page",
        "Application",
        "Angular",
        "Dependency",
        "Injection",
        "Routing",
        "Components",
        "Services",
        "Lazy",
        "loading",
        "Custom",
        "Directives",
        "Pipes",
        "lifecycle",
        "hooks",
        "ngOnInit",
        "ngOnChanges",
        "ngDoCheck",
        "ngOnDestroy",
        "application",
        "performance",
        "data",
        "persistence",
        "Observables",
        "RxJs",
        "library",
        "server",
        "input",
        "output",
        "ViewChild",
        "EventEmitter",
        "Services",
        "data",
        "Components",
        "view",
        "templates",
        "design",
        "Angular",
        "bootstrap",
        "CSS",
        "HTML",
        "Angular",
        "validation",
        "accuracy",
        "input",
        "data",
        "API",
        "Node",
        "JS",
        "Express",
        "JS",
        "HTTP",
        "RequestResponse",
        "Router",
        "Module",
        "Authentication",
        "Authorization",
        "JSON",
        "Web",
        "Tokens",
        "JWT",
        "password",
        "Angular",
        "AUTH",
        "guard",
        "CanActivateCanDeactivate",
        "access",
        "restrictions",
        "modules",
        "user",
        "ASPNET",
        "Web",
        "API",
        "development",
        "entity",
        "framework",
        "MS",
        "SQL",
        "CORS",
        "endpoint",
        "web",
        "mobile",
        "Postman",
        "Services",
        "get",
        "post",
        "functionalities",
        "ASPNet",
        "Entity",
        "Framework",
        "Models",
        "data",
        "access",
        "Web",
        "API",
        "server",
        "LINQ",
        "database",
        "data",
        "manipulation",
        "WebAPI",
        "SQL",
        "Server",
        "database",
        "SQL",
        "objects",
        "Stored",
        "Procedures",
        "Views",
        "Triggers",
        "tables",
        "Prepared",
        "Unit",
        "test",
        "cases",
        "NUnit",
        "testing",
        "system",
        "implementation",
        "Unit",
        "Testing",
        "components",
        "Services",
        "Karma",
        "Jasmine",
        "frameworks",
        "Agile",
        "Methodology",
        "Git",
        "Repository",
        "version",
        "control",
        "code",
        "repository",
        "JIRA",
        "Project",
        "management",
        "Web",
        "Application",
        "Azure",
        "Cloud",
        "Services",
        "application",
        "developer",
        "environment",
        "Environment",
        "ASPNET",
        "ASPNET",
        "MVC",
        "Entity",
        "Framework",
        "Angular",
        "SSMS",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "NodeJS",
        "ExpressJS",
        "GIT",
        "JIRA",
        "TFS",
        "MEAN",
        "Stack",
        "ASPNET",
        "Developer",
        "HSBC",
        "Jersey",
        "City",
        "NJ",
        "March",
        "May",
        "Description",
        "HSBC",
        "banking",
        "services",
        "institutions",
        "world",
        "millions",
        "customers",
        "Global",
        "Businesses",
        "worlds",
        "worlds",
        "institutions",
        "consumers",
        "middlemarket",
        "businesses",
        "corporations",
        "range",
        "banking",
        "asset",
        "management",
        "risk",
        "management",
        "products",
        "services",
        "banking",
        "banking",
        "system",
        "modules",
        "Admin",
        "Banker",
        "Customer",
        "Banker",
        "module",
        "functionality",
        "deposits",
        "APIs",
        "system",
        "banking",
        "transactions",
        "posts",
        "updates",
        "accounts",
        "records",
        "team",
        "web",
        "pages",
        "account",
        "maintenance",
        "fees",
        "savings",
        "checkings",
        "application",
        "Angular",
        "end",
        "ASPNET",
        "WEB",
        "API",
        "Responsibilities",
        "requirement",
        "Analysis",
        "Design",
        "Development",
        "application",
        "C",
        "ASPNET",
        "WEBAPI",
        "Angular",
        "Entity",
        "Framework",
        "SQL",
        "Server",
        "Designed",
        "Single",
        "Page",
        "User",
        "Interface",
        "client",
        "service",
        "module",
        "Angular",
        "HTML",
        "CSS",
        "Angular",
        "Components",
        "Services",
        "AngularCLI",
        "Clientside",
        "validations",
        "DOM",
        "Events",
        "Directives",
        "Pipes",
        "Created",
        "templates",
        "directives",
        "DOM",
        "objects",
        "ngIF",
        "ngClass",
        "NPM",
        "package",
        "manager",
        "tools",
        "extensions",
        "RXJS",
        "Observables",
        "server",
        "Angular",
        "directives",
        "ngModel",
        "TwoWay",
        "Data",
        "Binding",
        "data",
        "components",
        "Input",
        "Output",
        "EventEmitter",
        "data",
        "access",
        "Layer",
        "Entity",
        "Framework",
        "DataBase",
        "First",
        "approach",
        "LINQ",
        "objects",
        "data",
        "manipulation",
        "Entity",
        "Framework",
        "CRUD",
        "operations",
        "use",
        "Lambda",
        "Expressions",
        "data",
        "methodology",
        "functionality",
        "sprint",
        "unit",
        "testing",
        "module",
        "NUnit",
        "application",
        "performance",
        "availability",
        "Microsoft",
        "Azure",
        "platform",
        "building",
        "managing",
        "applications",
        "web",
        "applications",
        "code",
        "review",
        "build",
        "deployment",
        "GIT",
        "Environment",
        "C",
        "NET",
        "FrameWork",
        "ASPNET",
        "MVC",
        "Entity",
        "FrameWork",
        "LINQ",
        "BootStrap",
        "ASPNET",
        "Html5",
        "CSS3",
        "Angular",
        "SQL",
        "Server",
        "Mongo",
        "JIRA",
        "Visual",
        "Studio",
        "GIT",
        "TFS",
        "ASPNET",
        "MVC",
        "Developer",
        "Bed",
        "Bath",
        "Beyond",
        "Union",
        "NJ",
        "April",
        "February",
        "Description",
        "Bed",
        "Bath",
        "Beyond",
        "chain",
        "retail",
        "merchandise",
        "stores",
        "bedroom",
        "bathroom",
        "kitchen",
        "purpose",
        "project",
        "tracking",
        "technology",
        "date",
        "records",
        "customers",
        "products",
        "status",
        "history",
        "products",
        "store",
        "realtime",
        "application",
        "Management",
        "users",
        "items",
        "sales",
        "order",
        "items",
        "clearance",
        "database",
        "user",
        "interface",
        "sales",
        "emails",
        "customers",
        "attention",
        "sale",
        "dashboard",
        "model",
        "sales",
        "trends",
        "predictions",
        "alerts",
        "email",
        "automation",
        "development",
        "team",
        "backend",
        "ASPNET",
        "frontend",
        "database",
        "Responsibilities",
        "design",
        "UI",
        "screens",
        "ASPNet",
        "MVC",
        "5ASPNetCVisual",
        "Studio",
        "Design",
        "Views",
        "Partial",
        "Views",
        "Models",
        "ViewModels",
        "Controllers",
        "Design",
        "User",
        "Interface",
        "custom",
        "Html",
        "helper",
        "classes",
        "controls",
        "data",
        "access",
        "Layer",
        "Entity",
        "Framework",
        "DataBase",
        "First",
        "approach",
        "LINQ",
        "objects",
        "data",
        "manipulation",
        "Entity",
        "Framework",
        "CRUD",
        "operations",
        "use",
        "Lambda",
        "Expressions",
        "data",
        "MVC",
        "filters",
        "Action",
        "Filters",
        "Exception",
        "Filters",
        "custom",
        "filters",
        "controller",
        "action",
        "level",
        "controller",
        "level",
        "ASPNET",
        "MVC",
        "validation",
        "controller",
        "level",
        "Data",
        "Annotations",
        "model",
        "validation",
        "view",
        "data",
        "Model",
        "View",
        "Razor",
        "Views",
        "Engine",
        "C",
        "code",
        "HTML",
        "ViewBag",
        "ViewData",
        "TempData",
        "Session",
        "data",
        "views",
        "Partial",
        "Views",
        "modules",
        "Custom",
        "classes",
        "MVC",
        "Views",
        "Responsive",
        "UI",
        "Bootstrap",
        "devices",
        "screen",
        "resolutions",
        "ASPNET",
        "Authentication",
        "Authorization",
        "application",
        "security",
        "NuGet",
        "Package",
        "management",
        "dependency",
        "resolution",
        "Scrum",
        "Framework",
        "development",
        "release",
        "activities",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Source",
        "Control",
        "Version",
        "Control",
        "Environment",
        "ASPNET",
        "ASPNET",
        "MVC",
        "Entity",
        "FrameWork",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "HTML",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "Razor",
        "NuGet",
        "ASPNET",
        "MVC",
        "Developer",
        "DEP",
        "NY",
        "July",
        "March",
        "Description",
        "DEP",
        "departments",
        "Departments",
        "EHS",
        "Employee",
        "Health",
        "Safety",
        "ECT",
        "Web",
        "Application",
        "Employee",
        "Concerns",
        "levels",
        "notifies",
        "personnel",
        "group",
        "ECT",
        "system",
        "reports",
        "levels",
        "Users",
        "DEP",
        "web",
        "application",
        "DEP",
        "facilities",
        "users",
        "facilities",
        "bureaus",
        "search",
        "data",
        "contamination",
        "DEP",
        "facilities",
        "ECT",
        "report",
        "DEP",
        "facilities",
        "module",
        "data",
        "Responsibilities",
        "ASPNet",
        "C",
        "ADONet",
        "HTML",
        "JavaScript",
        "Working",
        "client",
        "requirement",
        "gathering",
        "analysis",
        "solution",
        "time",
        "limits",
        "UI",
        "screens",
        "Razor",
        "Views",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "design",
        "ADONET",
        "Entity",
        "Framework",
        "Models",
        "data",
        "objects",
        "Data",
        "Set",
        "Data",
        "Reader",
        "Data",
        "Adapter",
        "data",
        "SQL",
        "Server",
        "database",
        "data",
        "database",
        "Data",
        "Annotations",
        "Serverside",
        "validations",
        "JavaScript",
        "validation",
        "Shared",
        "Layout",
        "theme",
        "page",
        "Views",
        "Partial",
        "Experience",
        "MVC",
        "filters",
        "Action",
        "Filters",
        "Exception",
        "Filters",
        "custom",
        "filters",
        "controller",
        "action",
        "level",
        "Stored",
        "Procedures",
        "Tables",
        "Views",
        "Triggers",
        "Functions",
        "interaction",
        "Database",
        "SQL",
        "server",
        "SCRUM",
        "Methodology",
        "Team",
        "Code",
        "review",
        "practice",
        "docs",
        "testing",
        "error",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Source",
        "Control",
        "Version",
        "Control",
        "Environment",
        "ASPNET",
        "ASPNET",
        "MVC",
        "C",
        "ADONET",
        "JQuery",
        "SQL",
        "Server",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "Visual",
        "Studio",
        "Team",
        "Foundation",
        "Server",
        "Java",
        "Developer",
        "Delta",
        "Air",
        "Lines",
        "Atlanta",
        "GA",
        "February",
        "June",
        "Description",
        "Delta",
        "Air",
        "Lines",
        "Inc",
        "Delta",
        "airline",
        "Responsibilities",
        "OOD",
        "J2EE",
        "design",
        "patterns",
        "presentation",
        "layer",
        "HTML",
        "JavaScript",
        "CSS",
        "JSP",
        "navigation",
        "look",
        "user",
        "perspective",
        "MVC",
        "frame",
        "work",
        "Developed",
        "Processors",
        "requests",
        "presentation",
        "layer",
        "Servlets",
        "JavaScript",
        "information",
        "business",
        "layer",
        "J2EE",
        "architecture",
        "Created",
        "DAO",
        "database",
        "communication",
        "utility",
        "classes",
        "connection",
        "database",
        "oracle",
        "drivers",
        "SQL",
        "tables",
        "views",
        "procedures",
        "statements",
        "SQL",
        "statements",
        "CVS",
        "Source",
        "Version",
        "Control",
        "source",
        "control",
        "files",
        "Clientside",
        "Validations",
        "JavaScript",
        "Validations",
        "JSTL",
        "Custom",
        "Tags",
        "Application",
        "support",
        "System",
        "Integration",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Environment",
        "Servlets",
        "Java",
        "JSP",
        "JDBC",
        "JNDI",
        "JSTL",
        "Oracle",
        "9i",
        "ES",
        "Frame",
        "Third",
        "party",
        "SW",
        "Struts",
        "Eclipse",
        "WSAD",
        "CVS",
        "Source",
        "Version",
        "Control",
        "JUnit",
        "UML",
        "HTML",
        "JavaScript",
        "XML",
        "CSS",
        "WebSphere",
        "Student",
        "Trainee",
        "Stevens",
        "Institute",
        "Technology",
        "St",
        "Lancaster",
        "PA",
        "November",
        "January",
        "Description",
        "Stevens",
        "Institute",
        "Technology",
        "research",
        "universities",
        "United",
        "States",
        "college",
        "America",
        "engineering",
        "Responsibilities",
        "Design",
        "Architecture",
        "Writing",
        "class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Prototype",
        "Design",
        "coding",
        "modules",
        "SQL",
        "Procedures",
        "Deploying",
        "Oracle",
        "Application",
        "Server",
        "build",
        "test",
        "test",
        "cases",
        "cases",
        "Environment",
        "Java",
        "Windows",
        "XP",
        "Oracle",
        "Education",
        "Bachelors",
        "Skills",
        "ADO",
        "ADONET",
        "SQL",
        "SERVER",
        "SQL",
        "SERVER",
        "SQL",
        "NET",
        "MS",
        "VISUAL",
        "STUDIO",
        "VISUAL",
        "STUDIO",
        "API",
        "C",
        "HTML",
        "JAVASCRIPT",
        "BOOTSTRAP",
        "TYPESCRIPT",
        "NET",
        "ASPNET",
        "WEB",
        "API",
        "MVC",
        "AJAX",
        "ASP",
        "CSS",
        "Links",
        "httpStackNet",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "NET",
        "JavaScript",
        "TypeScript",
        "HTML",
        "CSS",
        "Java",
        "NET",
        "Technologies",
        "ASPNET",
        "MVC",
        "ASPNET",
        "Web",
        "API",
        "Entity",
        "Framework",
        "ADONET",
        "LINQ",
        "SQL",
        "Server",
        "MongoDB",
        "Web",
        "Technologies",
        "Angular",
        "Node",
        "Js",
        "Express",
        "Js",
        "HTML",
        "Bootstrap",
        "JQuery",
        "Ajax",
        "Development",
        "Tools",
        "MS",
        "Visual",
        "Studio",
        "MS",
        "Visual",
        "Code",
        "Postman",
        "Source",
        "Code",
        "Control",
        "Tools",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "GitHub",
        "GitLab",
        "JIRA",
        "Methodologies",
        "Cloud",
        "Agile",
        "Scrum",
        "Azure",
        "Cloud",
        "Services"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:06:51.251746",
    "resume_data": "Full Stack Developer Angular Full Stack span lDeveloperspan Angular Full Stack Developer Angular Breakthru Beverage Group Fort Lauderdale FL IT Professional with over all 9years of experience and as a Full StackNet Developer in system Analysis Design Development Testing and Maintenance of WebBased and Ntier Architectures using objectoriented programming in Health care banking and ECommerce domains Experience in developing highly interactive web applications utilizing Angular 456 NodeJS ExpressJS TypeScript JavaScript Bootstrap HTML CSS to create Single Page Application and integrating RESTful APIs Experience on working with Document Object Model DOM and DOM manipulation using Structural Attribute and Custom Directives and performed clientside validation using Forms in Angular 456 Created Angular Modules Components Services Dependency Injection Pipes implemented routing for seamless navigation and used RxJs library for observable map and subscribe to fetch data Experienced implementing REST API using nodejs expressjs Testing API using PostMan for all CRUD operations Enable CrossOrigin Resource Sharing CORS for RESTful services with multiple endpoints Expertise in developing application using ASPNET NET C ASPNET MVC ASPNET WEB API LINQ SQL Server MongoDB ADONET and Entity Framework Experience in working ASPNET MVC by developing Controllers Views Partial Views HTML Helpers in Razor View Engine Data Annotations Action Methods Action Filters and Action Results Experienced with implementing ASPNET MVC Models extensively on integrating ADONET Entity FrameWork LINQ and Lambda expressions with SQL server Proficient in developing SQL on MS SQL Server using Tables Triggers Views and Stored Procedures and maintaining the database Deploy Configure Maintain applications on Azure Cloud Services and Knowledge on Azure CLI Experience in configuring cloud platform such as VMs Web apps Cloud Services Performed Unit Testing end to end testing using Karma and Jasmine in Angular and NUnit in ASPNET Version control using GitHub TFS GIT integration with VS VS Code where multibranch code commits and merging Working in an Agile application development SCRUM team and using Jira for project management and bug tracking Work Experience Full Stack Developer Angular Breakthru Beverage Group Fort Lauderdale FL June 2018 to Present ASPNET Description Breakthru Beverage Group is a leading North American beverage wholesaler driving innovation in the marketplace with a nimble and insightful approach to business Breakthru is proud to be familyowned and operated bringing valued expertise to its operations across Responsibilities Involved in all the phases of SDLC including Design Analysis of the Customer Specifications Development and Customization of the Application Design and implemented webbased application using C ASPNET WEB API Entity Framework LINQ SQL Server and Angular 56 Restful API using Nodejs Expressjs and MongoDB Designed and developed Single Page Application using Angular Dependency Injection Routing Components Services Lazy loading Custom Directives and Pipes Utilized Angular lifecycle hooks such as ngOnInit ngOnChanges ngDoCheck and ngOnDestroy to optimize application performance and data persistence Used Observables and RxJs library to communicate with the server and used input output ViewChild EventEmitter and Services for sharing data within different Components Involved in designing view templates using responsive design with Angular bootstrap CSS HTML Implemented Angular clientside validation to improve the accuracy of input data Deployed the API using Node JS Express JS and Handled HTTP RequestResponse using Router Module Implemented tokenbased Authentication and Authorization using JSON Web Tokens JWT where password bcrypted Angular AUTH guard CanActivateCanDeactivate access and restrictions to modules based on a user ASPNET Web API development with entity framework for MS SQL with CORS enabled multiple endpoint web and mobile Tested using the Postman Services to ensure the get put post delete functionalities are working fine Used ASPNet Entity Framework to create Models and data access through the Web API from the server Used LINQ to interact with the database and perform the data manipulation through the WebAPI Used SQL Server as database and involved in writing several SQL objects like Stored Procedures Views Triggers and Involved in designing tables Prepared Unit test cases and performed NUnit testing prior to system implementation Involved in Unit Testing components Services using Karma and Jasmine frameworks Have followed Agile Methodology effectively Used Git Repository as a version control for code repository and use JIRA for Project management Deployed the Web Application on Azure Cloud Services and Maintained the application in developer environment Environment ASPNET ASPNET MVC 5 Entity Framework Angular 5 LINQ SSMS HTML5 CSS3 Bootstrap JavaScript NodeJS ExpressJS MongoDB GIT JIRA TFS MEAN Stack ASPNET Developer HSBC Jersey City NJ March 2016 to May 2018 Description HSBC one of the largest banking and financial services institutions in the world serves millions of customers through its four Global Businesses Being one of the worlds leading worlds leading financial institutions serves individual consumers small and middlemarket businesses and large corporations with a full range of banking investing asset management and other financial and risk management products and services It also includes online and mobile banking In core banking system there were three main modules such as Admin Banker and Customer In Banker module we developed new functionality in deposits submodule APIs where system processed banking transactions and posts updates to accounts and to other financial records Our team was also involved in developing and maintaining web pages for account maintenance fees as savings checkings Developed the application using Angular as front end and ASPNET WEB API as backend Responsibilities Involved in requirement Analysis Design and Development of a webbased application using C ASPNET WEBAPI Angular Entity Framework and SQL Server Designed implemented Single Page User Interface for client service module using Angular HTML and CSS Worked effectively with Angular generated Components and Services using AngularCLI Implemented Clientside validations manipulated DOM Events Directives and Pipes Created templates using various builtin directives to manipulate DOM objects using ngIF ngFor ngClass and ngSwitch And worked with NPM package manager tools Worked with reactive extensions RXJS especially Observables for asynchronously calling the server Worked in Angular builtin directives such as ngModel to perform TwoWay Data Binding and passed the data between the components using Input Output EventEmitter Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Worked in Agile methodology and delivered accepted functionality in each sprint Designed unit testing module with NUnit to test the application performance and availability Involved in Microsoft Azure platform for the building managing applications and deploying web applications Heavily involved in code review build and deployment with GIT Environment C NET FrameWork ASPNET MVC Entity FrameWork LINQ BootStrap ASPNET WebApI Html5 CSS3 Angular 4 SQL Server Mongo dB JIRA Visual Studio 2015 GIT TFS ASPNET MVC Developer Bed Bath and Beyond Union NJ April 2014 to February 2016 Description Bed Bath and Beyond is an American chain of retail and merchandise stores specializing in bedroom bathroom kitchen and dining The purpose of this project was to bring their tracking technology up to date to keep records of their customers and products as well as provide the status and history of any products across every store in realtime Using this application Management users were informed what items had low sales in order to put these items on clearance It was accomplished by updating the database and creating a friendly user interface to allow more sales by sending emails to customers to gain their attention and inform them about new and upcoming sale offers dashboard to model and display sales trends and predictions creating alerts and email automation Our development team implemented backend using ASPNET driving a Webbased frontend and a relational database Responsibilities Involved in design and develop UI screens using ASPNet MVC 5ASPNetCVisual Studio Design and developed Views Partial Views Models ViewModels and Controllers Design and develop User Interface and build custom Html helper classes for reusable controls Designed and developed the data access Layer using Entity Framework with DataBase First approach Effectively used LINQ to objects for data manipulation using Entity Framework to do CRUD operations and made use of Lambda Expressions for retrieving data proficiently Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level and controller level Implemented ASPNET MVC validation at controller level using Data Annotations for model validation Achieved Strongly typed view by using data Model in the View Worked with Razor Views Engine for displaying C code in HTML Implemented ViewBag ViewData TempData and Session to transfer data between views and controllers Partial Views for assigned modules Custom classes for MVC Views Responsive UI with Bootstrap for handheld devices or multiple screen resolutions Used ASPNET forms Authentication and rolebased Authorization to implement application security Installed and used NuGet for Package management and dependency resolution Followed Scrum Framework for the development and release activities Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET ASPNET MVC Entity FrameWork LINQ SQL Server Management Studio HTML CSS3 Bootstrap JavaScript Razor views NuGet ASPNET MVC Developer DEP Flushing NY July 2012 to March 2014 Description DEP has various departments and one of the Departments is EHS Employee Health Safety ECT is a Web Application for tracking Employee Concerns of various levels and notifies the personnel to the respective group ECT system provides various reports to various levels of Users DEP has one more web application called DEP facilities that allow users from different facilities at different bureaus to manage enter search for data related to historical contamination at DEP facilities in designing and developing the ECT for various report and DEP facilities module to search data Responsibilities Actively involved in coding using ASPNet C ADONet HTML JavaScript Working closely with client for requirement gathering analysis and provided desired solution in time limits Created UI screens using Razor Views HTML5 CSS3 and Bootstrap for responsive design Used ADONET and Entity Framework to create Models Extensively used ADONet data objects like Data Set Data Reader and Data Adapter for retrieving the data from SQL Server database and for updating the data back into the database Used Data Annotations for Serverside validations and JavaScript for Clientside validation Used the Shared Layout view to keep the theme consistent across page and created Views and Partial views Experience in using MVC filters like Action Filters Exception Filters and created custom filters to implement in controller action level Written and used Stored Procedures Tables and Views Triggers Functions for maintaining and interaction with Database using SQL server Have followed SCRUM Methodology effectively Worked with Team on Code review Best practice docs testing and error handling Used Team Foundation Server TFS for Source Control and Version Control Environment ASPNET 35 ASPNET MVC C ADONET JQuery SQL Server SQL Server Management Studio Visual Studio Team Foundation Server Java Developer Delta Air Lines Atlanta GA February 2010 to June 2012 Description Delta Air Lines Inc typically referred to as Delta is a major American airline Responsibilities Implemented OOD J2EE design patterns while coding Developing presentation layer using HTML JavaScript CSS JSP and achieved better navigation look feel from user perspective on MVC frame work Developed Processors to handle requests from presentation layer using Servlets JavaScript was used to validate the information Developing business layer using J2EE architecture Created DAO for database communication Wrote the utility classes for connection to database using oracle thin drivers Developing SQL queries It includes creating tables views procedures and updating them Responsible for writing the prepared statements that is precompiled and complicated SQL statements CVS Source Version Control source control is used to check in and check out the files Clientside Validations are implemented using JavaScript Another Validations are implemented using JSTL and Custom Tags Provided Application support for System Integration Testing and User Acceptance Testing Environment Servlets Java JSP JDBC JNDI JSTL Oracle 9i ES Frame works Third party SW related to Struts Eclipse WSAD CVS Source Version Control JUnit UML HTML JavaScript XML CSS WebSphere 50 Student Trainee Stevens Institute of Technology St Lancaster PA November 2008 to January 2010 Description Stevens Institute of Technology is a private coeducational research it is one of the oldest technological universities in the United States and was the first college in America solely dedicated to mechanical engineering Responsibilities Design of Architecture Writing of class Diagrams and Sequence Diagrams Developing the Prototype Design and coding of modules Writing SQL Procedures Deploying on Oracle Application Server build test and deploy Involved in writing test cases and use cases Environment Java Windows XP Oracle Education Bachelors Skills ADO ADONET SQL SERVER SQL SERVER 2012 SQL NET MS VISUAL STUDIO VISUAL STUDIO API C HTML JAVASCRIPT BOOTSTRAP TYPESCRIPT NET 35 ASPNET WEB API MVC AJAX ASP CSS Links httpStackNet Additional Information TECHNICAL SKILLS Languages C NET 35445 JavaScript TypeScript HTML CSS Java NET Technologies ASPNET 445 MVC 45 ASPNET Web API Entity Framework ADONET LINQ Databases SQL Server 201220142016 MongoDB Web Technologies Angular 45 Node Js Express Js HTML Bootstrap JQuery Ajax Development Tools MS Visual Studio 20131517 MS Visual Code Postman Source Code Control Tools Team Foundation Server TFS GitHub GitLab JIRA Methodologies Cloud Agile Scrum and Azure Cloud Services",
    "unique_id": "dc0a294a-bbe0-4e6c-b6ef-160d7f6fd187"
}