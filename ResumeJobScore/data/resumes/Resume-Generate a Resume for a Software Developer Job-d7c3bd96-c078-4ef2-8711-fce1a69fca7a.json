{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Bristol CT Around 5 years of experience as Python developer with proven expertise in using new tools and technical developments to drive improvements throughout entire Software Development Lifecycle Proficient in Front end development experience using Python 3 Django 1718 HTML XML CSS JavaScript Bootstrap jQuery JSON and AngularJS and Nodejs Experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various standalone clientserver enterprise applications Hands on experience working with quantdata Python libraries pandasNumPy Build backend application with Python Django Worked on Dockers and Jenkins Proficient in developing Web Services RESTful in Python using XML JSON Expertise with cloud platforms like Amazon AWS S3 EC2 Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask WebPy BottlePy NumPy and Pyramid Proficient in SQL databases MS SQL MySQL Oracle and MongoDB Extensive experience in using Microsoft BI Studio products for implementation of ETL methodology in data extraction transformation and loading Good at writing SQL Queries Stored procedures functions packages tables views triggers Successfully migrated the Django databases from MySQL to PostgreSQL with complete data Integrity Experience with version control like GIT and SVN Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Excellent communication and interpersonal skills and analytical skills and highly motivated team player with the ability to work independently Authorized to work in the US for any employer Work Experience Python Developer Guardant Health Inc February 2018 to January 2019 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized Python Libraries like Boto3 for AWS Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Generated graphical reports using Python package NumPy and used advanced features like pickleunpickle in Python for sharing the information across the applications to deploy into AWS with toolsplatforms such as JIRA Jenkins Docker and Elastic search Implemented Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Used Beautiful Soup Matplotlib and Pandas Libraries to create access weather data and perform data analysis and visualization Used JSON based REST web services and Amazon web services AWS for smooth operation of application Wrote Python scripts to parse JSON documents and load the data in database Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Designed front end using HTML AngularJS CSS and JavaScript Implemented SOAPRESTful web services in JSON format Used PyQT to implement GUI for the user to create modify and view reports based on client data Worked on Jenkins continuous integration tool for deployment of project Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created RESTful APIs calls with server parse output report of excel files Designed and managed API system deployment using fast http server and Amazon AWS architecture Generated Python Django forms to record data of online users and used Pytest for writing test cases Deployed the project into Jenkins using GIT version control system Troubleshooting issues by identifying the root cause and finding solutions for the issue Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Environment Python Django 14 Ruby HTML5 CSS XML MySQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting JIRA Jenkins Docker AngularJS Python Developer Care Source Dayton OH February 2017 to January 2018 Responsibilities Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Worked on installation of Docker using Docker toolbox Created RESTful APIs calls with server parse output report of excel files Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Designed RESTful XML web service for handling AJAX request Environment Python Django 14 PySpark AJAX API Docker Agile MySQL Git SVN AWS Jr Python Developer Teradata India pvt ltd Pune Maharashtra January 2014 to December 2015 Responsibilities Used Python Django framework to develop applications Implemented SQL Alchemy which is a Python library for complete access over SQL Used HTML CSS JavaScript and jQuery and Implemented AJAX for dynamic functionality of a webpages for front end applications Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Used AngularJS as the development framework to build a singlepage application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in entire lifecycle of the project including Design Development and Deployment Testing and implementation and support Managed large datasets using Pandas data frames and MySQL Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Develop applications that use MongoDB database and PyMongo Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used AJAX and jQuery for transmitting JSON data objects between frontend and controllers Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented monitoring and established best practices around using elastic search Wrote Python scripts to parse XML and JSON documents and load the data in database Environment Python Flask MongoDB JSON jQuery Elastic search XML PyMongo AWS bean stalk Bash AngularJS Education MS in Information Technology in Information Technology Iglobal University 2018 BS in Electronics and Communication Jawaharlal Nehru Technological University 2014",
    "entities": [
        "GIT",
        "Python Developer Care Source Dayton",
        "PyMongo Designed",
        "Python",
        "Kubernetes Generated",
        "Nodejs Experience in Analysis Design Development Testing Customization Bug",
        "Generated",
        "Pandas",
        "Python Integrated Development Environments",
        "AJAX",
        "Amazon AWS S3",
        "ETL",
        "API",
        "GUI",
        "SQLite",
        "Jenkins",
        "Software Development Lifecycle Proficient",
        "Model View Control MVC Architecture",
        "US",
        "Python Django Worked on",
        "Implemented SQL Alchemy",
        "HTML CSS JavaScript",
        "UNIX",
        "Djangos",
        "Sublime Text",
        "AntMaven Experienced",
        "Amazon AWS S3 EC2",
        "AWS Create",
        "JIRA Jenkins Docker",
        "UI",
        "Front",
        "Information Technology in Information Technology Iglobal University",
        "Design Development and Deployment Testing",
        "Pandas Libraries",
        "Continuous Integration",
        "JSON",
        "Bash Involved",
        "IBM",
        "SVN",
        "HTML",
        "CSS",
        "API RESTful Web Service",
        "Created Data",
        "AWS Installed",
        "Flask SQL Alchemy",
        "jQuery",
        "SQL",
        "Tomcat",
        "REST",
        "XML",
        "Data",
        "PySpark PyQT",
        "SOAP",
        "UNIX Responsible",
        "Nehru Technological University",
        "lPythonspan",
        "PyQT",
        "Docker",
        "RDS",
        "Microsoft BI Studio",
        "Oracle Database",
        "Amazon",
        "JenkinsHudson",
        "Amazon AWS"
    ],
    "experience": "Experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various standalone clientserver enterprise applications Hands on experience working with quantdata Python libraries pandasNumPy Build backend application with Python Django Worked on Dockers and Jenkins Proficient in developing Web Services RESTful in Python using XML JSON Expertise with cloud platforms like Amazon AWS S3 EC2 Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask WebPy BottlePy NumPy and Pyramid Proficient in SQL databases MS SQL MySQL Oracle and MongoDB Extensive experience in using Microsoft BI Studio products for implementation of ETL methodology in data extraction transformation and loading Good at writing SQL Queries Stored procedures functions packages tables views triggers Successfully migrated the Django databases from MySQL to PostgreSQL with complete data Integrity Experience with version control like GIT and SVN Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Excellent communication and interpersonal skills and analytical skills and highly motivated team player with the ability to work independently Authorized to work in the US for any employer Work Experience Python Developer Guardant Health Inc February 2018 to January 2019 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized Python Libraries like Boto3 for AWS Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Generated graphical reports using Python package NumPy and used advanced features like pickleunpickle in Python for sharing the information across the applications to deploy into AWS with toolsplatforms such as JIRA Jenkins Docker and Elastic search Implemented Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Used Beautiful Soup Matplotlib and Pandas Libraries to create access weather data and perform data analysis and visualization Used JSON based REST web services and Amazon web services AWS for smooth operation of application Wrote Python scripts to parse JSON documents and load the data in database Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Designed front end using HTML AngularJS CSS and JavaScript Implemented SOAPRESTful web services in JSON format Used PyQT to implement GUI for the user to create modify and view reports based on client data Worked on Jenkins continuous integration tool for deployment of project Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created RESTful APIs calls with server parse output report of excel files Designed and managed API system deployment using fast http server and Amazon AWS architecture Generated Python Django forms to record data of online users and used Pytest for writing test cases Deployed the project into Jenkins using GIT version control system Troubleshooting issues by identifying the root cause and finding solutions for the issue Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Environment Python Django 14 Ruby HTML5 CSS XML MySQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting JIRA Jenkins Docker AngularJS Python Developer Care Source Dayton OH February 2017 to January 2018 Responsibilities Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Worked on installation of Docker using Docker toolbox Created RESTful APIs calls with server parse output report of excel files Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Designed RESTful XML web service for handling AJAX request Environment Python Django 14 PySpark AJAX API Docker Agile MySQL Git SVN AWS Jr Python Developer Teradata India pvt ltd Pune Maharashtra January 2014 to December 2015 Responsibilities Used Python Django framework to develop applications Implemented SQL Alchemy which is a Python library for complete access over SQL Used HTML CSS JavaScript and jQuery and Implemented AJAX for dynamic functionality of a webpages for front end applications Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Used AngularJS as the development framework to build a singlepage application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in entire lifecycle of the project including Design Development and Deployment Testing and implementation and support Managed large datasets using Pandas data frames and MySQL Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Develop applications that use MongoDB database and PyMongo Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used AJAX and jQuery for transmitting JSON data objects between frontend and controllers Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented monitoring and established best practices around using elastic search Wrote Python scripts to parse XML and JSON documents and load the data in database Environment Python Flask MongoDB JSON jQuery Elastic search XML PyMongo AWS bean stalk Bash AngularJS Education MS in Information Technology in Information Technology Iglobal University 2018 BS in Electronics and Communication Jawaharlal Nehru Technological University 2014",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Bristol",
        "CT",
        "years",
        "experience",
        "Python",
        "developer",
        "expertise",
        "tools",
        "developments",
        "improvements",
        "Software",
        "Development",
        "Lifecycle",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "JSON",
        "AngularJS",
        "Nodejs",
        "Experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "enterprise",
        "applications",
        "Hands",
        "experience",
        "quantdata",
        "Python",
        "pandasNumPy",
        "Build",
        "application",
        "Python",
        "Django",
        "Dockers",
        "Jenkins",
        "Proficient",
        "Web",
        "Services",
        "Python",
        "XML",
        "JSON",
        "Expertise",
        "cloud",
        "platforms",
        "Amazon",
        "AWS",
        "S3",
        "EC2",
        "Experience",
        "JenkinsHudson",
        "Continuous",
        "Integration",
        "server",
        "configure",
        "AntMaven",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "WebPy",
        "BottlePy",
        "NumPy",
        "Pyramid",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "experience",
        "Microsoft",
        "BI",
        "Studio",
        "products",
        "implementation",
        "ETL",
        "methodology",
        "data",
        "extraction",
        "transformation",
        "Good",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "Django",
        "MySQL",
        "PostgreSQL",
        "data",
        "Integrity",
        "Experience",
        "version",
        "control",
        "GIT",
        "SVN",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "extracts",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Excellent",
        "communication",
        "skills",
        "skills",
        "team",
        "player",
        "ability",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Guardant",
        "Health",
        "Inc",
        "February",
        "January",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "Libraries",
        "Boto3",
        "AWS",
        "Managed",
        "Container",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "reports",
        "Python",
        "package",
        "NumPy",
        "features",
        "pickleunpickle",
        "Python",
        "information",
        "applications",
        "AWS",
        "toolsplatforms",
        "JIRA",
        "Jenkins",
        "Docker",
        "search",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "Beautiful",
        "Soup",
        "Matplotlib",
        "Pandas",
        "Libraries",
        "access",
        "weather",
        "data",
        "data",
        "analysis",
        "visualization",
        "JSON",
        "REST",
        "web",
        "services",
        "Amazon",
        "web",
        "services",
        "AWS",
        "operation",
        "application",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Configuration",
        "Management",
        "Microservices",
        "Kubernetes",
        "Docker",
        "Ansible",
        "end",
        "HTML",
        "AngularJS",
        "CSS",
        "JavaScript",
        "web",
        "services",
        "format",
        "PyQT",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "IBM",
        "DB2",
        "SQL",
        "procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "Conversions",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Python",
        "Django",
        "data",
        "users",
        "Pytest",
        "test",
        "cases",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Troubleshooting",
        "issues",
        "root",
        "cause",
        "solutions",
        "issue",
        "SQL",
        "queries",
        "batch",
        "processing",
        "Wrote",
        "validation",
        "scripts",
        "SQL",
        "data",
        "loading",
        "Environment",
        "Python",
        "Django",
        "Ruby",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "JIRA",
        "Jenkins",
        "Docker",
        "AngularJS",
        "Python",
        "Developer",
        "Care",
        "Source",
        "Dayton",
        "OH",
        "February",
        "January",
        "Responsibilities",
        "web",
        "applications",
        "Python",
        "Django",
        "customizations",
        "Data",
        "tables",
        "PySpark",
        "PyQT",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "libraries",
        "Python",
        "NumPy",
        "matplotlib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "installation",
        "Docker",
        "Docker",
        "toolbox",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "Jenkins",
        "testing",
        "integration",
        "deployment",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "GIT",
        "version",
        "control",
        "project",
        "AWS",
        "SQL",
        "Tables",
        "procedures",
        "views",
        "triggers",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "testing",
        "web",
        "application",
        "databases",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "XML",
        "web",
        "service",
        "AJAX",
        "request",
        "Environment",
        "Python",
        "Django",
        "PySpark",
        "AJAX",
        "API",
        "Docker",
        "Agile",
        "MySQL",
        "Git",
        "SVN",
        "AWS",
        "Jr",
        "Python",
        "Developer",
        "Teradata",
        "India",
        "pvt",
        "ltd",
        "Pune",
        "Maharashtra",
        "January",
        "December",
        "Responsibilities",
        "Python",
        "Django",
        "framework",
        "applications",
        "SQL",
        "Alchemy",
        "Python",
        "library",
        "access",
        "SQL",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "functionality",
        "webpages",
        "end",
        "applications",
        "documentation",
        "Python",
        "scripts",
        "sphinx",
        "integration",
        "Python",
        "Flask",
        "GitHub",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "lifecycle",
        "project",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "implementation",
        "support",
        "datasets",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "database",
        "package",
        "Develop",
        "applications",
        "database",
        "PyMongo",
        "object",
        "model",
        "data",
        "model",
        "tables",
        "constraints",
        "procedures",
        "functions",
        "triggers",
        "packages",
        "Oracle",
        "Database",
        "AJAX",
        "jQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "monitoring",
        "practices",
        "search",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Environment",
        "Python",
        "Flask",
        "MongoDB",
        "JSON",
        "jQuery",
        "search",
        "XML",
        "PyMongo",
        "AWS",
        "bean",
        "stalk",
        "Bash",
        "AngularJS",
        "Education",
        "MS",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "Iglobal",
        "University",
        "BS",
        "Electronics",
        "Communication",
        "Jawaharlal",
        "Nehru",
        "Technological",
        "University"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:08:27.214195",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Bristol CT Around 5 years of experience as Python developer with proven expertise in using new tools and technical developments to drive improvements throughout entire Software Development Lifecycle Proficient in Front end development experience using Python 3 Django 1718 HTML XML CSS JavaScript Bootstrap jQuery JSON and AngularJS and Nodejs Experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various standalone clientserver enterprise applications Hands on experience working with quantdata Python libraries pandasNumPy Build backend application with Python Django Worked on Dockers and Jenkins Proficient in developing Web Services RESTful in Python using XML JSON Expertise with cloud platforms like Amazon AWS S3 EC2 Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django Flask WebPy BottlePy NumPy and Pyramid Proficient in SQL databases MS SQL MySQL Oracle and MongoDB Extensive experience in using Microsoft BI Studio products for implementation of ETL methodology in data extraction transformation and loading Good at writing SQL Queries Stored procedures functions packages tables views triggers Successfully migrated the Django databases from MySQL to PostgreSQL with complete data Integrity Experience with version control like GIT and SVN Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Excellent communication and interpersonal skills and analytical skills and highly motivated team player with the ability to work independently Authorized to work in the US for any employer Work Experience Python Developer Guardant Health Inc February 2018 to January 2019 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized Python Libraries like Boto3 for AWS Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Generated graphical reports using Python package NumPy and used advanced features like pickleunpickle in Python for sharing the information across the applications to deploy into AWS with toolsplatforms such as JIRA Jenkins Docker and Elastic search Implemented Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Used Beautiful Soup Matplotlib and Pandas Libraries to create access weather data and perform data analysis and visualization Used JSON based REST web services and Amazon web services AWS for smooth operation of application Wrote Python scripts to parse JSON documents and load the data in database Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Designed front end using HTML AngularJS CSS and JavaScript Implemented SOAPRESTful web services in JSON format Used PyQT to implement GUI for the user to create modify and view reports based on client data Worked on Jenkins continuous integration tool for deployment of project Used IBM DB2 SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created RESTful APIs calls with server parse output report of excel files Designed and managed API system deployment using fast http server and Amazon AWS architecture Generated Python Django forms to record data of online users and used Pytest for writing test cases Deployed the project into Jenkins using GIT version control system Troubleshooting issues by identifying the root cause and finding solutions for the issue Optimized SQL queries used in batch processing and Wrote validation scripts in SQL to validate data loading Environment Python Django 14 Ruby HTML5 CSS XML MySQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting JIRA Jenkins Docker AngularJS Python Developer Care Source Dayton OH February 2017 to January 2018 Responsibilities Developed web applications in Python Django with clientspecific customizations Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Used several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Wrote scripts in Python for extracting data from HTML file Worked on installation of Docker using Docker toolbox Created RESTful APIs calls with server parse output report of excel files Worked on creation of custom Docker container images tagging and pushing the images Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Used GIT for the version control and deployed project into AWS Create develop and finetuned SQL objects Tables stored procedures views and triggers Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Installed and maintained web servers Tomcat and Apache HTTP in UNIX Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Designed RESTful XML web service for handling AJAX request Environment Python Django 14 PySpark AJAX API Docker Agile MySQL Git SVN AWS Jr Python Developer Teradata India pvt ltd Pune Maharashtra January 2014 to December 2015 Responsibilities Used Python Django framework to develop applications Implemented SQL Alchemy which is a Python library for complete access over SQL Used HTML CSS JavaScript and jQuery and Implemented AJAX for dynamic functionality of a webpages for front end applications Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Used AngularJS as the development framework to build a singlepage application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in entire lifecycle of the project including Design Development and Deployment Testing and implementation and support Managed large datasets using Pandas data frames and MySQL Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Develop applications that use MongoDB database and PyMongo Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used AJAX and jQuery for transmitting JSON data objects between frontend and controllers Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented monitoring and established best practices around using elastic search Wrote Python scripts to parse XML and JSON documents and load the data in database Environment Python Flask MongoDB JSON jQuery Elastic search XML PyMongo AWS bean stalk Bash AngularJS Education MS in Information Technology in Information Technology Iglobal University 2018 BS in Electronics and Communication Jawaharlal Nehru Technological University 2014",
    "unique_id": "d7c3bd96-c078-4ef2-8711-fce1a69fca7a"
}