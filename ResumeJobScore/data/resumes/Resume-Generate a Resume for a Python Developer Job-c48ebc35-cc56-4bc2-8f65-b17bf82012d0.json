{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Phillips 66 Houston Redwood City CA Over 7 years of experience as a WebApplication Developer and coding with analytical Programming using Python Django Java Involved in software development in Python libraries used Beautiful Soup NumPy SciPy matplotlib Pandas data frame network urllib2 MySQL  for database connectivity and IDEs sublime text Spyder PyCharm Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat WebLogic Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Good experience in Shell Scripting Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Writing SQL Queries Stored procedures functions packages tables views triggers Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies and Familiar with concepts and devices such routers switches and TCPIP protocols and OSI layer Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Groovy and Grails with spring Java J2EE for user interface Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Had knowledge on continuous integration and deployment using Jenkins Docker Implemented Restful web service to interact with Redis Cache framework Worked on developing Restful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with Restful endpoints Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx  Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Authorized to work in the US for any employer Work Experience Senior Python Developer Phillips 66 Houston March 2017 to Present Over 7 years of experience as a WebApplication Developer and coding with analytical Programming using Python Django Java Involved in software development in Python libraries used Beautiful Soup NumPy SciPy matplotlib Pandas data frame network urllib2 MySQL  for database connectivity and IDEs sublime text Spyder PyCharm Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat WebLogic Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Good experience in Shell Scripting Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Writing SQL Queries Stored procedures functions packages tables views triggers Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies and Familiar with concepts and devices such routers switches and TCPIP protocols and OSI layer Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Groovy and Grails with spring Java J2EE for user interface Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Had knowledge on continuous integration and deployment using Jenkins Docker Implemented Restful web service to interact with Redis Cache framework Worked on developing Restful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with Restful endpoints Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx  Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Analyzed queries and database behavior using Percona tools DB Tuna Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Created Modules utilizing Requests JSON to interact RPC Wallet servers and Blockchain Created scripts that monitored a device using Prometheus and Grafana via ODL sash GRPC NC Client and model driven telemetry and checked for memory leaks and health of the router Ohio Python developer Kroger November 2015 to February 2017 Extensively used Python Django Framework for developing backend applications Strong Expertise in working with serverside technologies including databases Restful API and MVC design patterns Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Was leading an effort to build a real time click stream analytics platform for processing the beacons from web and mobile devices using Spark Kafka elastic and building dashboard using Kibana and Grafana Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Automated RabbitMQ cluster installations and configuration using PythonBash Fixed issues related to OpenStack components such as Nova Glance Neutron Keystone MySQLPercona DB RabbitMQ Cech Repose HAP Roxy and Horizon Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Designed and developed web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experience with Kibana to check logs and other timestamped data sets stored in Elastic Search Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Worked on several python packages like NumPy Beautiful Soup SQL Alchemy Py Tables etc Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Enabled continuous delivery via Gitlab Spinnaker Docker Jenkins Terraform and AWS Designed and developed load tests using Scala Gatling Analysis of logs data and filter required columns by Logstash configuration and send it to Elasticsearch Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Used micro service architecture with Spring Bootbased services interacting of REST and Kafka Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Worked with JSON based REST Web services and Amazon Web Services AWS Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Created realtime dashboard for Executives utilizing Logstash graphite Elastic Search Kibana Redis Experience in configuring and working with Flume and Kafka to load the data from multiple web sources directly into HDFS Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Worked on Angular JS framework to develop interactive websites based on client needs Used Cassandra for database and Redis for cache for storing and fetching the data Used Redis Cache for high performance which creates space for new data by removing old data Developed Ruby on Rails web applications using MongoDB and background processes using Risqu and Redis Utilized Python in the handling of all hits on Django Redis and other application Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Developed frontends using HTML5 CSS3 JavaScript and jQuery Designed and created the database tables and wrote SQL queries to access PostgreSQL Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Ingested large CSV XML JSON data from computers around the world utilizing Python with pandas csv xml and NumPy Formatted the raw data and built dynamic statistic pages for engineers Migrated data from a mongo  and python2 environment to an Elasticsearch python 3 workflow Developed Micro services for the HP team using Spring Boot and Java 8 Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Used Jenkins pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managed local deployments in Kubernetes creating local cluster and deploying application containers Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Worked on the MySQL migration project to make the system completely independent of the database being used Used Spring to implement this Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Participated in development of a well responsive single page application using AngularJS framework Java Script and jQuery in conjunction with HTML5 CSS3 standards with frontend UI team Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Experience in using GIT Repository Managers for Maven builds Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer UPS Atlanta GA August 2013 to October 2015 Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Used Test driven approachTDD for developing services required for the application Managed datasets using Panda data frames and MySQL queries MYSQL database queries from python using PythonMySQL connector and MySQL  package to retrieve Datacenter migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Designed and coded Hibernate struts for mapping configurations and HQL for enhancement and new module development of Transport Optimization Planning and Scheduling Web app Automated RabbitMQ cluster installations and configuration using PythonBash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed micro services using spring boot exposed as REST API and integrated with AngularJS based web applications Configured Struts Hibernate framework with Spring MVC Experience with Streaming platforms like Apache Kafka Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Setup Docker on Linux and configured Jenkins to run under Docker host Managed local deployments in Kubernetes creating local cluster and deploying application containers Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and implementation of CICD pipelines using Jenkins and automated CICD pipelines by invoking Ansible playbooks Automated the Oracle 12c installation using ansible scripts Automated email notification using celery and RabbitMQ for status of jobs and pending task list manager to users and admin Profound knowledge and experience on underlying mechanism of docker containers and automated the docker containers using Ansible Expertise in Implementing a Production ready Highly Available Fault Tolerant Kubernetes infrastructure Working on Scheduling deploying and managing container replicas on a node cluster using Kubernetes Setting up the CICD pipeline using GitHub Jenkins Maven Chef Terraform and AWS DevOps experience with GitHub Maven Nagios Docker Jenkins Puppet Chef Ansible Virtualized the servers using the Docker for the test environments and devenvironments needs and configuration automation using Docker Containers Integrated Kafka with Spark streaming for high speed data processing Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL API Services JavaScript Bootstrap GIT and JSON Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL A Having good experience in Struts Spring IOC Spring MVC Spring Data Spring Boot Spring Security and other spring frameworks implementation and integration Followed Agile SCRUM methodology and used Test Driven Development TDD and Used BDD pattern for code quality and good readability standards Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Implemented application level persistence using Hibernate and spring Configured Struts Hibernate framework with Spring MVC Written the Grok pattern in Logstash Configured Logstash input filter output plugins database log file sources and elastic search as output Python developer Aetna Hartford CT August 2011 to July 2013 Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peers Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Designed Installed and Implemented Ansible configuration management system Used Ansible to manage Web applications Environments configuration Files Users Mount points and Packages Involved in database Administration activities like taking backup checking log messages looking for database optimization Executed asynchronous tasks with help of Celery and RabbitMQ Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Used Amazon Web Services AWS for improved efficiency of storage and fast access Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing applications Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Managed local deployments in Kubernetes creating local cluster and deploying application containers Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Expertise in working with serverside technologies including Databases Restful API and MVC design patterns Used the Python modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Automate Build and Release tasks using ANT Shell and Perl for efficiency and repeatability Communication with team members for both Ansible Core and Ansible Tower teams to clarify requirements and overcome obstacles Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors Skills APACHE KAFKA 8 years AWS 8 years DJANGO 8 years KAFKA 8 years MYSQL 8 years Flask Java Python Javascript Additional Information SKILLS Programming Skills Python 27 35 JavaJ2EE C C Django Flask Cherrypie web2py Google App Engine Pyramid Tornado HTML CSS JavaScript AJAX jQuery Angular JS Angular 2 NodeJS React JS TypeScript Backbone JS React JS MySQL Oracle Microsoft SQL Server PostgreSQL kubernetes spinnaker MongoDB R Shell Bash ZSH KSH etc HTML Xml Amazon Web Services AWS Google cloud IBM Bluemix PyCharm percona Redis RabbitMQ Kafka riak spring framework Logstash Kibana graphite influx DB Grafana AWS Services S3 VPC EC2 RDS Glacier DynamoDB ansible docker",
    "entities": [
        "Spring Bootbased",
        "Continuous Deployment Application Server",
        "GitHub Maven Nagios",
        "Python Developer UPS Atlanta",
        "AJAX",
        "Amazon AWS architecture",
        "ODL",
        "Test Driven Development TDD",
        "PythonBash",
        "Cech Repose HAP Roxy and Horizon Experienced",
        "Relational",
        "Libraries",
        "Kubernetes Created Pods",
        "Python Django AWS J2EE PostgreSQL",
        "JSON",
        "Created Terraform",
        "OpenStack",
        "IBM",
        "Google",
        "Cassandra DB Manage",
        "Amazon Web Services AWS",
        "Heroku",
        "Panda",
        "Release",
        "Model View Control MVC",
        "Hadoop",
        "Kubernetes Spinnaker Docker Terraform Consul",
        "XML",
        "Googles Kubernetes",
        "Amazon Web Services AWS Use AWS",
        "DevOps",
        "NodeJS",
        "ANT Shell",
        "HBase",
        "Automated",
        "HNM",
        "Amazon",
        "GitHub Jenkins Nexus",
        "VMware vSphere",
        "ELK",
        "Python",
        "Amazon AWS S3",
        "Developed micro services",
        "Spring MVC",
        "Hadoop MapReduce",
        "Restful",
        "JSON Used Celery",
        "ANSIBLE",
        "DQL",
        "DB Grafana AWS Services",
        "Go Golang",
        "Kubernetes Writing SQL Queries Stored",
        "API RESTful Web Service",
        "Linux",
        "Installed and Administered Jenkins CI",
        "the Software Development Life Cycle",
        "Hibernate Developed",
        "Data Daily",
        "EJB Servlets Hibernate Added",
        "AWS Wrote",
        "Flask",
        "Built",
        "VMWare API",
        "Docker",
        "Oracle OCCI API Automate Build",
        "DOM",
        "Percona",
        "Maintaining the Elasticsearch",
        "RDS",
        "Celery",
        "Elasticsearch Validated",
        "PEP8",
        "CLI",
        "Hibernate Developed CICD",
        "Transport Optimization Planning and Scheduling",
        "MVC",
        "Spark",
        "Redux",
        "EJB",
        "Developed Python Mapper",
        "Created Modules",
        "jQuery Designed",
        "Kubernetes Managed",
        "Bugzilla",
        "REDIS",
        "WSGI",
        "API",
        "Terraform",
        "US",
        "Scala Gatling Analysis",
        "Redis Utilized Python",
        "Sqoop",
        "Designed Installed and Implemented Ansible",
        "Sybase",
        "Houston",
        "Storm",
        "Python Django Framework",
        "the App Golang Infrastructure Teams",
        "BDD",
        "Scala",
        "AWS",
        "Analyzed",
        "Grafana Develop",
        "Jenkins Provisioned",
        "Gitlab Spinnaker Docker Jenkins Terraform",
        "Implemented",
        "Developed Micro",
        "Aetna",
        "JavaJ2EE C C Django Flask Cherrypie",
        "Maven Builds Developed Python",
        "Shell Scripting Server Unix",
        "Kubernetes Docker",
        "Elasticsearch",
        "SQL",
        "OSI",
        "Clojure",
        "PythonBash Fixed",
        "GitHub",
        "Django Oracle DB PostgreSQL",
        "DML",
        "lPythonspan",
        "Kubernetes",
        "PI Services",
        "S3 CloudFront Configured AWS",
        "Administrators",
        "WebApplication Developer",
        "SSH",
        "SQL Alchemy",
        "GIT Repository Managers",
        "Hibernate Use AWS",
        "Javascript Additional Information",
        "Profound",
        "CICD",
        "Ohio Python",
        "Golang",
        "Pandas",
        "Python Django Worked on Dockers RabbitMQ",
        "Oracle Microsoft",
        "Maven",
        "Kubernetes Developed",
        "Logstash",
        "UI",
        "Nova",
        "Risqu",
        "Spark shark Streams",
        "Kroger",
        "Kafka System",
        "GRPC NC Client",
        "Packer Terraform Kubernetes AWS GCP Setup Docker",
        "CloudWatch Alarms ECS",
        "RPC Wallet",
        "ELB S3 CloudFront Worked",
        "SpringHibernate",
        "jQuery",
        "GitHub Jenkins Maven Chef Terraform",
        "REST",
        "Communication",
        "Developed Ruby on Rails",
        "Tableau",
        "Application",
        "WebSphere Application Server",
        "EBS",
        "PythonTornado",
        "Responsible for Parsing XML",
        "CloudFormation"
    ],
    "experience": "Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5 TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx   Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Authorized to work in the US for any employer Work Experience Senior Python Developer Phillips 66 Houston March 2017 to Present Over 7 years of experience as a WebApplication Developer and coding with analytical Programming using Python Django Java Involved in software development in Python libraries used Beautiful Soup NumPy SciPy matplotlib Pandas data frame network urllib2 MySQL   for database connectivity and IDEs sublime text Spyder PyCharm Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat WebLogic Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Good experience in Shell Scripting Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Writing SQL Queries Stored procedures functions packages tables views triggers Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies and Familiar with concepts and devices such routers switches and TCPIP protocols and OSI layer Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Groovy and Grails with spring Java J2EE for user interface Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10 g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Had knowledge on continuous integration and deployment using Jenkins Docker Implemented Restful web service to interact with Redis Cache framework Worked on developing Restful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with Restful endpoints Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5 TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx   Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Analyzed queries and database behavior using Percona tools DB Tuna Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Created Modules utilizing Requests JSON to interact RPC Wallet servers and Blockchain Created scripts that monitored a device using Prometheus and Grafana via ODL sash GRPC NC Client and model driven telemetry and checked for memory leaks and health of the router Ohio Python developer Kroger November 2015 to February 2017 Extensively used Python Django Framework for developing backend applications Strong Expertise in working with serverside technologies including databases Restful API and MVC design patterns Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Was leading an effort to build a real time click stream analytics platform for processing the beacons from web and mobile devices using Spark Kafka elastic and building dashboard using Kibana and Grafana Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Automated RabbitMQ cluster installations and configuration using PythonBash Fixed issues related to OpenStack components such as Nova Glance Neutron Keystone MySQLPercona DB RabbitMQ Cech Repose HAP Roxy and Horizon Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Designed and developed web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experience with Kibana to check logs and other timestamped data sets stored in Elastic Search Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Worked on several python packages like NumPy Beautiful Soup SQL Alchemy Py Tables etc Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Enabled continuous delivery via Gitlab Spinnaker Docker Jenkins Terraform and AWS Designed and developed load tests using Scala Gatling Analysis of logs data and filter required columns by Logstash configuration and send it to Elasticsearch Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Used micro service architecture with Spring Bootbased services interacting of REST and Kafka Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Worked with JSON based REST Web services and Amazon Web Services AWS Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Created realtime dashboard for Executives utilizing Logstash graphite Elastic Search Kibana Redis Experience in configuring and working with Flume and Kafka to load the data from multiple web sources directly into HDFS Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Worked on Angular JS framework to develop interactive websites based on client needs Used Cassandra for database and Redis for cache for storing and fetching the data Used Redis Cache for high performance which creates space for new data by removing old data Developed Ruby on Rails web applications using MongoDB and background processes using Risqu and Redis Utilized Python in the handling of all hits on Django Redis and other application Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Developed frontends using HTML5 CSS3 JavaScript and jQuery Designed and created the database tables and wrote SQL queries to access PostgreSQL Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Ingested large CSV XML JSON data from computers around the world utilizing Python with pandas csv xml and NumPy Formatted the raw data and built dynamic statistic pages for engineers Migrated data from a mongo   and python2 environment to an Elasticsearch python 3 workflow Developed Micro services for the HP team using Spring Boot and Java 8 Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Used Jenkins pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managed local deployments in Kubernetes creating local cluster and deploying application containers Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Worked on the MySQL migration project to make the system completely independent of the database being used Used Spring to implement this Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Participated in development of a well responsive single page application using AngularJS framework Java Script and jQuery in conjunction with HTML5 CSS3 standards with frontend UI team Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Experience in using GIT Repository Managers for Maven builds Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer UPS Atlanta GA August 2013 to October 2015 Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Used Test driven approachTDD for developing services required for the application Managed datasets using Panda data frames and MySQL queries MYSQL database queries from python using PythonMySQL connector and MySQL   package to retrieve Datacenter migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Designed and coded Hibernate struts for mapping configurations and HQL for enhancement and new module development of Transport Optimization Planning and Scheduling Web app Automated RabbitMQ cluster installations and configuration using PythonBash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed micro services using spring boot exposed as REST API and integrated with AngularJS based web applications Configured Struts Hibernate framework with Spring MVC Experience with Streaming platforms like Apache Kafka Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Setup Docker on Linux and configured Jenkins to run under Docker host Managed local deployments in Kubernetes creating local cluster and deploying application containers Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and implementation of CICD pipelines using Jenkins and automated CICD pipelines by invoking Ansible playbooks Automated the Oracle 12c installation using ansible scripts Automated email notification using celery and RabbitMQ for status of jobs and pending task list manager to users and admin Profound knowledge and experience on underlying mechanism of docker containers and automated the docker containers using Ansible Expertise in Implementing a Production ready Highly Available Fault Tolerant Kubernetes infrastructure Working on Scheduling deploying and managing container replicas on a node cluster using Kubernetes Setting up the CICD pipeline using GitHub Jenkins Maven Chef Terraform and AWS DevOps experience with GitHub Maven Nagios Docker Jenkins Puppet Chef Ansible Virtualized the servers using the Docker for the test environments and devenvironments needs and configuration automation using Docker Containers Integrated Kafka with Spark streaming for high speed data processing Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL API Services JavaScript Bootstrap GIT and JSON Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL A Having good experience in Struts Spring IOC Spring MVC Spring Data Spring Boot Spring Security and other spring frameworks implementation and integration Followed Agile SCRUM methodology and used Test Driven Development TDD and Used BDD pattern for code quality and good readability standards Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Implemented application level persistence using Hibernate and spring Configured Struts Hibernate framework with Spring MVC Written the Grok pattern in Logstash Configured Logstash input filter output plugins database log file sources and elastic search as output Python developer Aetna Hartford CT August 2011 to July 2013 Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peers Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Designed Installed and Implemented Ansible configuration management system Used Ansible to manage Web applications Environments configuration Files Users Mount points and Packages Involved in database Administration activities like taking backup checking log messages looking for database optimization Executed asynchronous tasks with help of Celery and RabbitMQ Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Used Amazon Web Services AWS for improved efficiency of storage and fast access Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing applications Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Managed local deployments in Kubernetes creating local cluster and deploying application containers Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Expertise in working with serverside technologies including Databases Restful API and MVC design patterns Used the Python modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Automate Build and Release tasks using ANT Shell and Perl for efficiency and repeatability Communication with team members for both Ansible Core and Ansible Tower teams to clarify requirements and overcome obstacles Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors Skills APACHE KAFKA 8 years AWS 8 years DJANGO 8 years KAFKA 8 years MYSQL 8 years Flask Java Python Javascript Additional Information SKILLS Programming Skills Python 27 35 JavaJ2EE C C Django Flask Cherrypie web2py Google App Engine Pyramid Tornado HTML CSS JavaScript AJAX jQuery Angular JS Angular 2 NodeJS React JS TypeScript Backbone JS React JS MySQL Oracle Microsoft SQL Server PostgreSQL kubernetes spinnaker MongoDB R Shell Bash ZSH KSH etc HTML Xml Amazon Web Services AWS Google cloud IBM Bluemix PyCharm percona Redis RabbitMQ Kafka riak spring framework Logstash Kibana graphite influx DB Grafana AWS Services S3 VPC EC2 RDS Glacier DynamoDB ansible docker",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "Phillips",
        "Houston",
        "Redwood",
        "City",
        "CA",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "Programming",
        "Python",
        "Django",
        "Java",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "WebLogic",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "SQL",
        "MS",
        "SQL",
        "Apache",
        "Cassandra",
        "Oracle",
        "MongoDB",
        "SQL",
        "PLSQL",
        "programming",
        "code",
        "units",
        "database",
        "triggers",
        "features",
        "performance",
        "Bulk",
        "Binds",
        "views",
        "Inline",
        "Global",
        "Temporary",
        "Tables",
        "experience",
        "Shell",
        "Scripting",
        "Server",
        "Unix",
        "Linux",
        "Open",
        "stock",
        "Expertise",
        "python",
        "focus",
        "DevOps",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "Working",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Knowledge",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Methodologies",
        "Familiar",
        "concepts",
        "devices",
        "routers",
        "switches",
        "protocols",
        "OSI",
        "layer",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Groovy",
        "Grails",
        "spring",
        "Java",
        "J2EE",
        "user",
        "interface",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "g",
        "MongoDB",
        "Knowledgeable",
        "deployment",
        "Heroku",
        "Jenkins",
        "working",
        "experience",
        "marker",
        "Struts",
        "framework",
        "Spring",
        "framework",
        "Mapping",
        "Hibernate",
        "framework",
        "knowledge",
        "integration",
        "deployment",
        "Jenkins",
        "Docker",
        "Restful",
        "web",
        "service",
        "Redis",
        "Cache",
        "framework",
        "endpoints",
        "cache",
        "application",
        "data",
        "data",
        "clusters",
        "REDIS",
        "endpoints",
        "Experience",
        "applications",
        "amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "S3",
        "CloudFront",
        "Spring",
        "Batch",
        "Spring",
        "ORM",
        "module",
        "Hibernate",
        "custom",
        "consumers",
        "producers",
        "Apache",
        "Kafka",
        "Go",
        "Golang",
        "cars",
        "monitoring",
        "system",
        "analytics",
        "ingestion",
        "platform",
        "Storm",
        "Kafka",
        "Wrote",
        "Storm",
        "topology",
        "events",
        "Kafka",
        "producer",
        "Cassandra",
        "DB",
        "Manage",
        "configurations",
        "servers",
        "Ansible",
        "log",
        "analytics",
        "pipeline",
        "Confluent",
        "Kafka",
        "storm",
        "search",
        "Logstash",
        "Kibana",
        "Greenplum",
        "Worked",
        "Kibana",
        "system",
        "issue",
        "context",
        "Elasticsearch",
        "cluster",
        "Logstash",
        "nodes",
        "TB",
        "Data",
        "Daily",
        "sources",
        "Kafka",
        "Design",
        "build",
        "ELK",
        "Elasticsearch",
        "Logstash",
        "graphite",
        "Kibana",
        "cluster",
        "logging",
        "search",
        "functionalities",
        "App",
        "Golang",
        "Infrastructure",
        "Teams",
        "Engineering",
        "Productivity",
        "Kubernetes",
        "Docker",
        "Ansible",
        "Spinnaker",
        "Deployed",
        "mircoservices2",
        "AWS",
        "environments",
        "Ansible",
        "Playbooks",
        "load",
        "balancer",
        "group",
        "configuration",
        "microservice",
        "Ansible",
        "Used",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Experience",
        "playbooks",
        "applications",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Provisioned",
        "servers",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "role",
        "Zabbixagent",
        "CICD",
        "pipeline",
        "Ansible",
        "infrastructures",
        "version",
        "control",
        "Ansible",
        "document",
        "application",
        "dependencies",
        "version",
        "control",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Excellent",
        "understanding",
        "knowledge",
        "Hadoop",
        "file",
        "system",
        "data",
        "modelling",
        "architecture",
        "design",
        "principles",
        "Developed",
        "Python",
        "Mapper",
        "Reducer",
        "scripts",
        "Hadoop",
        "streaming",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Spark",
        "Good",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Spark",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Service",
        "Virtualization",
        "Requirements",
        "VSIs",
        "WSDL",
        "WADL",
        "Recording",
        "Request",
        "Response",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "scale",
        "Docker",
        "containers",
        "name",
        "versions",
        "grid",
        "operations",
        "panda",
        "flask",
        "SQL",
        "Alchemy",
        "combination",
        "J2EE",
        "design",
        "MVC",
        "architecture",
        "Spring",
        "Struts",
        "Hibernate",
        "EJB",
        "WebSphere",
        "Application",
        "Server",
        "Oracle",
        "database",
        "Java",
        "beans",
        "Struts",
        "MVC",
        "Hibernate",
        "Use",
        "AWS",
        "cloud",
        "management",
        "console",
        "spinnaker",
        "AWS",
        "python",
        "scripts",
        "library",
        "ec2",
        "instances",
        "CloudFormation",
        "CICD",
        "system",
        "Jenkins",
        "Googles",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "handson",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "S3",
        "RDS",
        "ELB",
        "EBS",
        "backup",
        "recovery",
        "engine",
        "VM",
        "backuprecovery",
        "VMware",
        "vSphere",
        "APIs",
        "Golang",
        "programming",
        "language",
        "RabbitMQ",
        "Message",
        "bus",
        "communication",
        "interface",
        "Created",
        "Terraform",
        "modules",
        "tier",
        "Architecture",
        "AWS",
        "resources",
        "VPC",
        "Subnets",
        "Security",
        "groups",
        "Load",
        "Balancers",
        "Auto",
        "scaling",
        "group",
        "CloudWatch",
        "Alarms",
        "ECS",
        "S3",
        "buckets",
        "logs",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "Terraform",
        "code",
        "Applications",
        "infrastructure",
        "Dev",
        "QA",
        "Preprod",
        "requirement",
        "teams",
        "servers",
        "AWS",
        "Volumes",
        "EC2",
        "Security",
        "groups",
        "Auto",
        "Load",
        "balancers",
        "ELBs",
        "Installed",
        "packages",
        "servers",
        "Crypto",
        "Blockchain",
        "Bitcoin",
        "Monaro",
        "Bitcoin",
        "Cash",
        "Ecommerce",
        "platform",
        "Python",
        "Flask",
        "backend",
        "JinjaJavaScript",
        "service",
        "API",
        "users",
        "Blockchain",
        "transactions",
        "orders",
        "info",
        "AWS",
        "services",
        "EC2",
        "S3",
        "CloudFront",
        "Configured",
        "AWS",
        "CLI",
        "actions",
        "AWS",
        "services",
        "shell",
        "scripting",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Phillips",
        "Houston",
        "March",
        "Present",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "Programming",
        "Python",
        "Django",
        "Java",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "WebLogic",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "SQL",
        "MS",
        "SQL",
        "Apache",
        "Cassandra",
        "Oracle",
        "MongoDB",
        "SQL",
        "PLSQL",
        "programming",
        "code",
        "units",
        "database",
        "triggers",
        "features",
        "performance",
        "Bulk",
        "Binds",
        "views",
        "Inline",
        "Global",
        "Temporary",
        "Tables",
        "experience",
        "Shell",
        "Scripting",
        "Server",
        "Unix",
        "Linux",
        "Open",
        "stock",
        "Expertise",
        "python",
        "focus",
        "DevOps",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "Working",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Knowledge",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Methodologies",
        "Familiar",
        "concepts",
        "devices",
        "routers",
        "switches",
        "protocols",
        "OSI",
        "layer",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Groovy",
        "Grails",
        "spring",
        "Java",
        "J2EE",
        "user",
        "interface",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "g",
        "MongoDB",
        "Knowledgeable",
        "deployment",
        "Heroku",
        "Jenkins",
        "working",
        "experience",
        "marker",
        "Struts",
        "framework",
        "Spring",
        "framework",
        "Mapping",
        "Hibernate",
        "framework",
        "knowledge",
        "integration",
        "deployment",
        "Jenkins",
        "Docker",
        "Restful",
        "web",
        "service",
        "Redis",
        "Cache",
        "framework",
        "endpoints",
        "cache",
        "application",
        "data",
        "data",
        "clusters",
        "REDIS",
        "endpoints",
        "Experience",
        "applications",
        "amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "S3",
        "CloudFront",
        "Spring",
        "Batch",
        "Spring",
        "ORM",
        "module",
        "Hibernate",
        "custom",
        "consumers",
        "producers",
        "Apache",
        "Kafka",
        "Go",
        "Golang",
        "cars",
        "monitoring",
        "system",
        "analytics",
        "ingestion",
        "platform",
        "Storm",
        "Kafka",
        "Wrote",
        "Storm",
        "topology",
        "events",
        "Kafka",
        "producer",
        "Cassandra",
        "DB",
        "Manage",
        "configurations",
        "servers",
        "Ansible",
        "log",
        "analytics",
        "pipeline",
        "Confluent",
        "Kafka",
        "storm",
        "search",
        "Logstash",
        "Kibana",
        "Greenplum",
        "Worked",
        "Kibana",
        "system",
        "issue",
        "context",
        "Elasticsearch",
        "cluster",
        "Logstash",
        "nodes",
        "TB",
        "Data",
        "Daily",
        "sources",
        "Kafka",
        "Design",
        "build",
        "ELK",
        "Elasticsearch",
        "Logstash",
        "graphite",
        "Kibana",
        "cluster",
        "logging",
        "search",
        "functionalities",
        "App",
        "Golang",
        "Infrastructure",
        "Teams",
        "Engineering",
        "Productivity",
        "Kubernetes",
        "Docker",
        "Ansible",
        "Spinnaker",
        "Deployed",
        "mircoservices2",
        "AWS",
        "environments",
        "Ansible",
        "Playbooks",
        "load",
        "balancer",
        "group",
        "configuration",
        "microservice",
        "Ansible",
        "Used",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Experience",
        "playbooks",
        "applications",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Provisioned",
        "servers",
        "Ansible",
        "Implemented",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "role",
        "Zabbixagent",
        "CICD",
        "pipeline",
        "Ansible",
        "infrastructures",
        "version",
        "control",
        "Ansible",
        "document",
        "application",
        "dependencies",
        "version",
        "control",
        "boarding",
        "Application",
        "teams",
        "code",
        "GitHub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Excellent",
        "understanding",
        "knowledge",
        "Hadoop",
        "file",
        "system",
        "data",
        "modelling",
        "architecture",
        "design",
        "principles",
        "Developed",
        "Python",
        "Mapper",
        "Reducer",
        "scripts",
        "Hadoop",
        "streaming",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Spark",
        "Good",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Spark",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Service",
        "Virtualization",
        "Requirements",
        "VSIs",
        "WSDL",
        "WADL",
        "Recording",
        "Request",
        "Response",
        "Expertise",
        "API",
        "NodeJS",
        "Clojure",
        "server",
        "protocol",
        "Backbone",
        "template",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "scale",
        "Docker",
        "containers",
        "name",
        "versions",
        "grid",
        "operations",
        "panda",
        "flask",
        "SQL",
        "Alchemy",
        "combination",
        "J2EE",
        "design",
        "MVC",
        "architecture",
        "Spring",
        "Struts",
        "Hibernate",
        "EJB",
        "WebSphere",
        "Application",
        "Server",
        "Oracle",
        "database",
        "Java",
        "beans",
        "Struts",
        "MVC",
        "Hibernate",
        "CICD",
        "system",
        "Jenkins",
        "Googles",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "handson",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "S3",
        "RDS",
        "ELB",
        "EBS",
        "queries",
        "database",
        "behavior",
        "Percona",
        "tools",
        "DB",
        "Tuna",
        "backup",
        "recovery",
        "engine",
        "VM",
        "backuprecovery",
        "VMware",
        "vSphere",
        "APIs",
        "Golang",
        "programming",
        "language",
        "RabbitMQ",
        "Message",
        "bus",
        "communication",
        "interface",
        "Created",
        "Terraform",
        "modules",
        "tier",
        "Architecture",
        "AWS",
        "resources",
        "VPC",
        "Subnets",
        "Security",
        "groups",
        "Load",
        "Balancers",
        "Auto",
        "scaling",
        "group",
        "CloudWatch",
        "Alarms",
        "ECS",
        "S3",
        "buckets",
        "logs",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "Terraform",
        "code",
        "Applications",
        "infrastructure",
        "Dev",
        "QA",
        "Preprod",
        "requirement",
        "teams",
        "servers",
        "AWS",
        "Volumes",
        "EC2",
        "Security",
        "groups",
        "Auto",
        "Load",
        "balancers",
        "ELBs",
        "Installed",
        "packages",
        "servers",
        "Crypto",
        "Blockchain",
        "Bitcoin",
        "Monaro",
        "Bitcoin",
        "Cash",
        "Ecommerce",
        "platform",
        "Python",
        "Flask",
        "backend",
        "JinjaJavaScript",
        "service",
        "API",
        "users",
        "Blockchain",
        "transactions",
        "orders",
        "info",
        "AWS",
        "services",
        "EC2",
        "S3",
        "CloudFront",
        "Configured",
        "AWS",
        "CLI",
        "actions",
        "AWS",
        "services",
        "shell",
        "scripting",
        "Created",
        "Modules",
        "Requests",
        "JSON",
        "RPC",
        "Wallet",
        "servers",
        "Blockchain",
        "scripts",
        "device",
        "Prometheus",
        "Grafana",
        "ODL",
        "sash",
        "GRPC",
        "NC",
        "Client",
        "model",
        "telemetry",
        "memory",
        "leaks",
        "health",
        "router",
        "Ohio",
        "Python",
        "developer",
        "Kroger",
        "November",
        "February",
        "Python",
        "Django",
        "Framework",
        "applications",
        "Strong",
        "Expertise",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirement",
        "gathering",
        "system",
        "configuration",
        "specifications",
        "client",
        "interaction",
        "effort",
        "time",
        "stream",
        "analytics",
        "platform",
        "beacons",
        "web",
        "devices",
        "Spark",
        "Kafka",
        "dashboard",
        "Kibana",
        "Grafana",
        "Develop",
        "python",
        "code",
        "ingestion",
        "formats",
        "JSON",
        "CSV",
        "Logstash",
        "search",
        "Kibana",
        "dashboard",
        "clients",
        "ELK",
        "clusters",
        "Elasticsearch",
        "Logstash",
        "Graphite",
        "Kibana",
        "Kafka",
        "zookeeper",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "issues",
        "OpenStack",
        "components",
        "Nova",
        "Glance",
        "Neutron",
        "Keystone",
        "MySQLPercona",
        "DB",
        "RabbitMQ",
        "Cech",
        "Repose",
        "HAP",
        "Roxy",
        "Horizon",
        "API",
        "services",
        "PythonTornado",
        "AMQP",
        "architectures",
        "web",
        "crawler",
        "python",
        "framework",
        "RabbitMQ",
        "server",
        "micro",
        "services",
        "Experience",
        "Kibana",
        "logs",
        "data",
        "sets",
        "Elastic",
        "Search",
        "Written",
        "Salt",
        "scripts",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "Beats",
        "python",
        "packages",
        "NumPy",
        "Beautiful",
        "Soup",
        "SQL",
        "Alchemy",
        "Py",
        "Tables",
        "stack",
        "Python",
        "web",
        "framework",
        "emphasis",
        "simplicity",
        "flexibility",
        "extensibility",
        "components",
        "reinvents",
        "wheels",
        "WSGI",
        "templating",
        "forms",
        "data",
        "events",
        "SQL",
        "Alchemy",
        "Storm",
        "CouchDB",
        "OpenID",
        "App",
        "Engine",
        "jQuery",
        "delivery",
        "Gitlab",
        "Spinnaker",
        "Docker",
        "Jenkins",
        "Terraform",
        "AWS",
        "load",
        "tests",
        "Scala",
        "Gatling",
        "Analysis",
        "logs",
        "data",
        "filter",
        "columns",
        "Logstash",
        "configuration",
        "Elasticsearch",
        "Validated",
        "BI",
        "Support",
        "events",
        "events",
        "HNM",
        "Kafka",
        "events",
        "Kafka",
        "Mesos",
        "Used",
        "micro",
        "service",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "Kafka",
        "Developed",
        "Kafka",
        "producer",
        "consumers",
        "HBase",
        "Spark",
        "shark",
        "Streams",
        "Hadoop",
        "MapReduce",
        "jobs",
        "components",
        "HDFS",
        "Hive",
        "Creating",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "cloud",
        "management",
        "console",
        "spinnaker",
        "AWS",
        "python",
        "scripts",
        "library",
        "ec2",
        "instances",
        "CloudFormation",
        "stack",
        "dashboard",
        "Executives",
        "graphite",
        "Elastic",
        "Search",
        "Kibana",
        "Redis",
        "Experience",
        "configuring",
        "Flume",
        "Kafka",
        "data",
        "web",
        "sources",
        "HDFS",
        "Redis",
        "cache",
        "info",
        "changes",
        "RabbitMQ",
        "JS",
        "framework",
        "websites",
        "client",
        "Cassandra",
        "database",
        "Redis",
        "cache",
        "data",
        "Redis",
        "Cache",
        "performance",
        "space",
        "data",
        "data",
        "Developed",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Risqu",
        "Redis",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "application",
        "websites",
        "database",
        "MySQL",
        "PostgreSQL",
        "data",
        "analytics",
        "team",
        "implementation",
        "scripts",
        "Sqoop",
        "spark",
        "Hadoop",
        "batch",
        "data",
        "frontends",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "database",
        "tables",
        "SQL",
        "access",
        "PostgreSQL",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "Engine",
        "Docker",
        "HUB",
        "Docker",
        "Images",
        "Docker",
        "Compose",
        "images",
        "installations",
        "domain",
        "configurations",
        "Jenkins",
        "Continuous",
        "Integration",
        "builds",
        "deployments",
        "Build",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Installed",
        "Administered",
        "Jenkins",
        "CI",
        "Maven",
        "Builds",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Flask",
        "CSV",
        "XML",
        "JSON",
        "data",
        "computers",
        "world",
        "Python",
        "pandas",
        "csv",
        "xml",
        "NumPy",
        "data",
        "pages",
        "engineers",
        "data",
        "mongo",
        "python2",
        "environment",
        "Elasticsearch",
        "python",
        "workflow",
        "Developed",
        "Micro",
        "services",
        "HP",
        "team",
        "Spring",
        "Boot",
        "Java",
        "Integrated",
        "Hibernate",
        "ORM",
        "SpringHibernate",
        "framework",
        "DML",
        "DQL",
        "queries",
        "objectdatabase",
        "mapping",
        "Kubernetes",
        "deployment",
        "scaling",
        "management",
        "Docker",
        "Containers",
        "Jenkins",
        "pipelines",
        "micro",
        "services",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Managed",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "Wrote",
        "AJAX",
        "tables",
        "tab",
        "menu",
        "components",
        "data",
        "AngularJS",
        "HTML5",
        "AngularJS",
        "JSON",
        "AJAX",
        "DOM",
        "scripting",
        "form",
        "validations",
        "MySQL",
        "migration",
        "project",
        "system",
        "database",
        "Used",
        "Spring",
        "J2EE",
        "design",
        "MVC",
        "architecture",
        "Spring",
        "Struts",
        "Hibernate",
        "EJB",
        "WebSphere",
        "Application",
        "Server",
        "Oracle",
        "database",
        "Delivery",
        "Pipeline",
        "Jenkins",
        "GitHub",
        "Docker",
        "container",
        "Docker",
        "highlevel",
        "API",
        "containers",
        "isolation",
        "creation",
        "Docker",
        "container",
        "images",
        "images",
        "Docker",
        "repository",
        "development",
        "page",
        "application",
        "framework",
        "Java",
        "Script",
        "jQuery",
        "conjunction",
        "HTML5",
        "CSS3",
        "standards",
        "frontend",
        "UI",
        "team",
        "HTML5",
        "AngularJS",
        "JSON",
        "AJAX",
        "DOM",
        "scripting",
        "form",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "monitoring",
        "playbooks",
        "Integrated",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "nodes",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "Dev",
        "Servers",
        "Experience",
        "GIT",
        "Repository",
        "Managers",
        "Maven",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "Python",
        "Developer",
        "UPS",
        "Atlanta",
        "GA",
        "August",
        "October",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "Test",
        "approachTDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Datacenter",
        "migration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "support",
        "Applications",
        "Database",
        "teams",
        "working",
        "experience",
        "marker",
        "Struts",
        "framework",
        "Spring",
        "framework",
        "Mapping",
        "Hibernate",
        "framework",
        "Hibernate",
        "struts",
        "mapping",
        "configurations",
        "HQL",
        "enhancement",
        "module",
        "development",
        "Transport",
        "Optimization",
        "Planning",
        "Scheduling",
        "Web",
        "app",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Developed",
        "services",
        "spring",
        "boot",
        "REST",
        "API",
        "AngularJS",
        "web",
        "applications",
        "Configured",
        "Struts",
        "Hibernate",
        "framework",
        "Spring",
        "MVC",
        "Experience",
        "Streaming",
        "platforms",
        "Apache",
        "Kafka",
        "Working",
        "Spinnaker",
        "platform",
        "MultiCloud",
        "Continuous",
        "Delivery",
        "Bake",
        "Test",
        "DeployContainer",
        "Pipelines",
        "Packer",
        "Terraform",
        "Kubernetes",
        "AWS",
        "GCP",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "API",
        "services",
        "PythonTornado",
        "AMQP",
        "architectures",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Design",
        "implementation",
        "CICD",
        "pipelines",
        "Jenkins",
        "CICD",
        "pipelines",
        "playbooks",
        "Oracle",
        "12c",
        "installation",
        "scripts",
        "email",
        "notification",
        "celery",
        "status",
        "jobs",
        "task",
        "list",
        "manager",
        "users",
        "admin",
        "Profound",
        "knowledge",
        "experience",
        "mechanism",
        "docker",
        "containers",
        "docker",
        "containers",
        "Ansible",
        "Expertise",
        "Production",
        "Fault",
        "Tolerant",
        "Kubernetes",
        "infrastructure",
        "Working",
        "Scheduling",
        "deploying",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "CICD",
        "pipeline",
        "GitHub",
        "Jenkins",
        "Maven",
        "Chef",
        "Terraform",
        "DevOps",
        "experience",
        "GitHub",
        "Maven",
        "Nagios",
        "Docker",
        "Jenkins",
        "Puppet",
        "Chef",
        "Ansible",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "needs",
        "configuration",
        "automation",
        "Docker",
        "Containers",
        "Integrated",
        "Kafka",
        "Spark",
        "streaming",
        "speed",
        "data",
        "Web",
        "pages",
        "Jasmine",
        "Karma",
        "HTML",
        "CSS",
        "RESTFUL",
        "API",
        "Services",
        "JavaScript",
        "Bootstrap",
        "GIT",
        "JSON",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "Web",
        "pages",
        "Jasmine",
        "Karma",
        "HTML",
        "CSS",
        "RESTFUL",
        "A",
        "experience",
        "Struts",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "Data",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "spring",
        "frameworks",
        "implementation",
        "integration",
        "Agile",
        "SCRUM",
        "methodology",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "BDD",
        "pattern",
        "code",
        "quality",
        "readability",
        "standards",
        "Redux",
        "list",
        "reducers",
        "functions",
        "store",
        "method",
        "PI",
        "Services",
        "JavaScript",
        "Bootstrap",
        "GIT",
        "application",
        "level",
        "persistence",
        "Hibernate",
        "spring",
        "Configured",
        "Struts",
        "Hibernate",
        "framework",
        "Spring",
        "MVC",
        "Written",
        "Grok",
        "pattern",
        "Logstash",
        "Configured",
        "Logstash",
        "input",
        "filter",
        "output",
        "plugins",
        "database",
        "log",
        "file",
        "sources",
        "search",
        "output",
        "Python",
        "developer",
        "Aetna",
        "Hartford",
        "CT",
        "August",
        "July",
        "Generated",
        "Use",
        "case",
        "diagrams",
        "Activity",
        "flow",
        "diagrams",
        "Class",
        "diagrams",
        "Object",
        "diagrams",
        "design",
        "phase",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peers",
        "XML",
        "data",
        "XML",
        "parser",
        "Testing",
        "fixing",
        "bugs",
        "modifications",
        "Installed",
        "configuration",
        "management",
        "system",
        "Ansible",
        "Web",
        "applications",
        "Environments",
        "configuration",
        "Files",
        "Users",
        "Mount",
        "points",
        "Packages",
        "database",
        "Administration",
        "activities",
        "backup",
        "log",
        "messages",
        "database",
        "optimization",
        "tasks",
        "help",
        "Celery",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "experience",
        "Core",
        "Java",
        "J2EE",
        "features",
        "Java",
        "JDBC",
        "Spring",
        "Struts",
        "EJB",
        "Servlets",
        "Hibernate",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Test",
        "approach",
        "applications",
        "Cloud",
        "platform",
        "engineering",
        "Kubernetes",
        "Spinnaker",
        "Docker",
        "Terraform",
        "Consul",
        "drone",
        "Jenkins",
        "Chef",
        "Kitchen",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "interface",
        "MVC",
        "architecture",
        "software",
        "pip",
        "command",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "pythontwitter",
        "Celery",
        "matplotlib",
        "Pandas",
        "dataframe",
        "PEP8",
        "convention",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "application",
        "Python",
        "Django",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "web",
        "applications",
        "Expertise",
        "serverside",
        "technologies",
        "Databases",
        "API",
        "MVC",
        "design",
        "patterns",
        "Python",
        "modules",
        "NumPy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "Libraries",
        "Sybase",
        "APIs",
        "Oracle",
        "API",
        "Automate",
        "Build",
        "Release",
        "tasks",
        "ANT",
        "Shell",
        "Perl",
        "efficiency",
        "repeatability",
        "Communication",
        "team",
        "members",
        "Ansible",
        "Core",
        "Ansible",
        "Tower",
        "teams",
        "requirements",
        "obstacles",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Python",
        "Pandas",
        "NumPy",
        "SQL",
        "Tableau",
        "data",
        "database",
        "status",
        "reports",
        "dashboards",
        "Education",
        "Bachelors",
        "Skills",
        "APACHE",
        "KAFKA",
        "years",
        "AWS",
        "years",
        "DJANGO",
        "years",
        "KAFKA",
        "years",
        "MYSQL",
        "years",
        "Flask",
        "Java",
        "Python",
        "Javascript",
        "Additional",
        "Information",
        "SKILLS",
        "Programming",
        "Skills",
        "Python",
        "JavaJ2EE",
        "C",
        "C",
        "Django",
        "Flask",
        "Cherrypie",
        "web2py",
        "Google",
        "App",
        "Engine",
        "Pyramid",
        "Tornado",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "jQuery",
        "Angular",
        "JS",
        "Angular",
        "NodeJS",
        "React",
        "JS",
        "TypeScript",
        "Backbone",
        "JS",
        "React",
        "JS",
        "MySQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "Server",
        "PostgreSQL",
        "kubernetes",
        "spinnaker",
        "R",
        "Shell",
        "Bash",
        "ZSH",
        "KSH",
        "HTML",
        "Xml",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Google",
        "cloud",
        "IBM",
        "Bluemix",
        "PyCharm",
        "percona",
        "Redis",
        "RabbitMQ",
        "Kafka",
        "riak",
        "spring",
        "framework",
        "Logstash",
        "Kibana",
        "graphite",
        "influx",
        "DB",
        "Grafana",
        "AWS",
        "Services",
        "S3",
        "VPC",
        "EC2",
        "RDS",
        "Glacier",
        "DynamoDB",
        "docker"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:12:29.673673",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Phillips 66 Houston Redwood City CA Over 7 years of experience as a WebApplication Developer and coding with analytical Programming using Python Django Java Involved in software development in Python libraries used Beautiful Soup NumPy SciPy matplotlib Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat WebLogic Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Good experience in Shell Scripting Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Writing SQL Queries Stored procedures functions packages tables views triggers Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies and Familiar with concepts and devices such routers switches and TCPIP protocols and OSI layer Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Groovy and Grails with spring Java J2EE for user interface Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Had knowledge on continuous integration and deployment using Jenkins Docker Implemented Restful web service to interact with Redis Cache framework Worked on developing Restful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with Restful endpoints Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx dB Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Authorized to work in the US for any employer Work Experience Senior Python Developer Phillips 66 Houston March 2017 to Present Over 7 years of experience as a WebApplication Developer and coding with analytical Programming using Python Django Java Involved in software development in Python libraries used Beautiful Soup NumPy SciPy matplotlib Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat WebLogic Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Good experience in Shell Scripting Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Writing SQL Queries Stored procedures functions packages tables views triggers Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies and Familiar with concepts and devices such routers switches and TCPIP protocols and OSI layer Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Groovy and Grails with spring Java J2EE for user interface Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Had knowledge on continuous integration and deployment using Jenkins Docker Implemented Restful web service to interact with Redis Cache framework Worked on developing Restful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with Restful endpoints Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 CloudFront Worked with Spring Batch Used Spring ORM module to integrate with Hibernate Developed custom consumers and producers for Apache Kafka in Go Golang for cars monitoring system Designed the realtime analytics and ingestion platform using Storm and Kafka Wrote Storm topology to accept the events from Kafka producer and emit into Cassandra DB Manage the configurations of multiple servers using Ansible Implemented realtime log analytics pipeline using Confluent Kafka storm elastic search Logstash Kibana and Greenplum Worked with Kibana log monitoring system and fixed a critical issue easily by capturing the context Maintaining the Elasticsearch cluster and Logstash nodes to process around 5TB of Data Daily from various sources like Kafka kubernetes etc Design build and manage the ELK Elasticsearch Logstash graphite Kibana cluster for centralized logging and search functionalities for the App Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx dB Ansible Spinnaker Deployed mircoservices2 including provisioning AWS environments using Ansible Playbooks Provisioned load balancer autoscaling group and launch configuration for microservice using Ansible Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Provisioned and patched servers regularly using Ansible Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Developed an Ansible role for Zabbixagent which will be integrated into the to the CICD pipeline Used Ansible to document all infrastructures into version control Used Ansible to document application dependencies into version control Responsible for on boarding Application teams to build and deploy their code using GitHub Jenkins Nexus and Ansible Automated RabbitMQ cluster installations and configuration using PythonBash Excellent understanding and knowledge of Hadoop Distributed file system data modelling architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Spark Good working experience in processing large datasets with Spark using Scala and Spark and Familiar with JSON based REST Web services Experienced in understanding Service Virtualization needs Requirements creating VSIs using WSDL WADL Recording Request Response pairs Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Used Kubernetes to deploy scale load balance scale and manage Docker containers with multiple name spaced versions Different grid operations using panda flask and SQL Alchemy combination Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Developed and configured the Java beans using Struts MVC and Hibernate Developed CICD system with Jenkins on Googles Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Strong handson on AWS cloud services like EC2 S3 RDS ELB and EBS for installing configuring Analyzed queries and database behavior using Percona tools DB Tuna Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Created Terraform modules for two tier Architecture which includes AWS resources VPC Subnets Security groups Ec2 Load Balancers Auto scaling group CloudWatch Alarms ECS clusters S3 buckets for logs Built Jenkins jobs to create AWS infrastructure from GitHub repos containing Terraform code to deploy different Applications infrastructure for Dev QA and Preprod based on the requirement from different teams Built servers in AWS importing Volumes launching EC2 creating Security groups Auto scaling Load balancers ELBs and Installed required packages on servers Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Currently building RESTful service API to allow users to see Blockchain transactions orders and info Deployed on AWS and with services EC2 S3 CloudFront Configured AWS CLI and performed necessary actions on the AWS services using shell scripting Created Modules utilizing Requests JSON to interact RPC Wallet servers and Blockchain Created scripts that monitored a device using Prometheus and Grafana via ODL sash GRPC NC Client and model driven telemetry and checked for memory leaks and health of the router Ohio Python developer Kroger November 2015 to February 2017 Extensively used Python Django Framework for developing backend applications Strong Expertise in working with serverside technologies including databases Restful API and MVC design patterns Actively involved in Initial software development life cycle SDLC of requirement gathering and in suggesting system configuration specifications during client interaction Was leading an effort to build a real time click stream analytics platform for processing the beacons from web and mobile devices using Spark Kafka elastic and building dashboard using Kibana and Grafana Develop python code to automate the ingestion of common formats such as JSON CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Automated RabbitMQ cluster installations and configuration using PythonBash Fixed issues related to OpenStack components such as Nova Glance Neutron Keystone MySQLPercona DB RabbitMQ Cech Repose HAP Roxy and Horizon Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Designed and developed web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experience with Kibana to check logs and other timestamped data sets stored in Elastic Search Written and Maintained Automated Salt scripts for Elasticsearch Logstash Kibana and Beats Worked on several python packages like NumPy Beautiful Soup SQL Alchemy Py Tables etc Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm CouchDB OpenID App Engine jQuery etc Enabled continuous delivery via Gitlab Spinnaker Docker Jenkins Terraform and AWS Designed and developed load tests using Scala Gatling Analysis of logs data and filter required columns by Logstash configuration and send it to Elasticsearch Validated BI Support events transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka Mesos Used micro service architecture with Spring Bootbased services interacting of REST and Kafka Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Worked with JSON based REST Web services and Amazon Web Services AWS Use AWS cloud management console spinnaker to work with AWS Wrote python scripts using boto3 library to manage ec2 instances and CloudFormation stack Created realtime dashboard for Executives utilizing Logstash graphite Elastic Search Kibana Redis Experience in configuring and working with Flume and Kafka to load the data from multiple web sources directly into HDFS Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Worked on Angular JS framework to develop interactive websites based on client needs Used Cassandra for database and Redis for cache for storing and fetching the data Used Redis Cache for high performance which creates space for new data by removing old data Developed Ruby on Rails web applications using MongoDB and background processes using Risqu and Redis Utilized Python in the handling of all hits on Django Redis and other application Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Developed frontends using HTML5 CSS3 JavaScript and jQuery Designed and created the database tables and wrote SQL queries to access PostgreSQL Used Kubernetes to deploy scale load balance and worked on Docker Engine Docker HUB Docker Images Docker Compose for handling images for installations and domain configurations Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Ingested large CSV XML JSON data from computers around the world utilizing Python with pandas csv xml and NumPy Formatted the raw data and built dynamic statistic pages for engineers Migrated data from a mongo dB and python2 environment to an Elasticsearch python 3 workflow Developed Micro services for the HP team using Spring Boot and Java 8 Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Kubernetes is being used to orchestrate the deployment scaling and management of Docker Containers Used Jenkins pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managed local deployments in Kubernetes creating local cluster and deploying application containers Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Worked on the MySQL migration project to make the system completely independent of the database being used Used Spring to implement this Involved in multitiered J2EE design utilizing MVC architecture Spring Struts Hibernate and EJB deployed on WebSphere Application Server connecting to an Oracle database Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Participated in development of a well responsive single page application using AngularJS framework Java Script and jQuery in conjunction with HTML5 CSS3 standards with frontend UI team Extensively used HTML5 AngularJS JSON AJAX and DOM scripting for form validations Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python Run Ansible Scripts to Provide Dev Servers Experience in using GIT Repository Managers for Maven builds Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Python Developer UPS Atlanta GA August 2013 to October 2015 Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Used Test driven approachTDD for developing services required for the application Managed datasets using Panda data frames and MySQL queries MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve Datacenter migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Extensive working experience in free marker Struts framework Spring framework and OR Mapping Hibernate framework Designed and coded Hibernate struts for mapping configurations and HQL for enhancement and new module development of Transport Optimization Planning and Scheduling Web app Automated RabbitMQ cluster installations and configuration using PythonBash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed micro services using spring boot exposed as REST API and integrated with AngularJS based web applications Configured Struts Hibernate framework with Spring MVC Experience with Streaming platforms like Apache Kafka Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Setup Docker on Linux and configured Jenkins to run under Docker host Managed local deployments in Kubernetes creating local cluster and deploying application containers Experienced in developing API services PythonTornado while leveraging AMQP and RabbitMQ for distributed architectures Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and implementation of CICD pipelines using Jenkins and automated CICD pipelines by invoking Ansible playbooks Automated the Oracle 12c installation using ansible scripts Automated email notification using celery and RabbitMQ for status of jobs and pending task list manager to users and admin Profound knowledge and experience on underlying mechanism of docker containers and automated the docker containers using Ansible Expertise in Implementing a Production ready Highly Available Fault Tolerant Kubernetes infrastructure Working on Scheduling deploying and managing container replicas on a node cluster using Kubernetes Setting up the CICD pipeline using GitHub Jenkins Maven Chef Terraform and AWS DevOps experience with GitHub Maven Nagios Docker Jenkins Puppet Chef Ansible Virtualized the servers using the Docker for the test environments and devenvironments needs and configuration automation using Docker Containers Integrated Kafka with Spark streaming for high speed data processing Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL API Services JavaScript Bootstrap GIT and JSON Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Built Web pages that are more userinteractive using Jasmine Karma HTML CSS LESS RESTFUL A Having good experience in Struts Spring IOC Spring MVC Spring Data Spring Boot Spring Security and other spring frameworks implementation and integration Followed Agile SCRUM methodology and used Test Driven Development TDD and Used BDD pattern for code quality and good readability standards Worked on Redux making to do list reduces reducers functions and implementing store method PI Services JavaScript Bootstrap GIT and JSON Implemented application level persistence using Hibernate and spring Configured Struts Hibernate framework with Spring MVC Written the Grok pattern in Logstash Configured Logstash input filter output plugins database log file sources and elastic search as output Python developer Aetna Hartford CT August 2011 to July 2013 Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peers Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Designed Installed and Implemented Ansible configuration management system Used Ansible to manage Web applications Environments configuration Files Users Mount points and Packages Involved in database Administration activities like taking backup checking log messages looking for database optimization Executed asynchronous tasks with help of Celery and RabbitMQ Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Used Amazon Web Services AWS for improved efficiency of storage and fast access Vast experience with Core Java and J2EE using most of the advanced features of Java including JDBC Spring Struts EJB Servlets Hibernate Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing applications Cloud platform engineering Kubernetes Spinnaker Docker Terraform Consul drone Jenkins Chef Kitchen Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed views and templates with Python and Django view controller and templating language to create a userfriendly interface using MVC architecture Involved in installing software using pip command for python libraries like Beautiful Soup NumPy SciPy pythontwitter RabbitMQ Celery matplotlib Pandas dataframe and used the PEP8 coding convention Managed local deployments in Kubernetes creating local cluster and deploying application containers Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Expertise in working with serverside technologies including Databases Restful API and MVC design patterns Used the Python modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Involved in migrating the Libraries written using Sybase APIs to Oracle OCCI API Automate Build and Release tasks using ANT Shell and Perl for efficiency and repeatability Communication with team members for both Ansible Core and Ansible Tower teams to clarify requirements and overcome obstacles Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Python Libraries Pandas and NumPy SQL and Tableau to procure clean and aggregate data from Relational database to generate status reports and dashboards Education Bachelors Skills APACHE KAFKA 8 years AWS 8 years DJANGO 8 years KAFKA 8 years MYSQL 8 years Flask Java Python Javascript Additional Information SKILLS Programming Skills Python 27 35 JavaJ2EE C C Django Flask Cherrypie web2py Google App Engine Pyramid Tornado HTML CSS JavaScript AJAX jQuery Angular JS Angular 2 NodeJS React JS TypeScript Backbone JS React JS MySQL Oracle Microsoft SQL Server PostgreSQL kubernetes spinnaker MongoDB R Shell Bash ZSH KSH etc HTML Xml Amazon Web Services AWS Google cloud IBM Bluemix PyCharm percona Redis RabbitMQ Kafka riak spring framework Logstash Kibana graphite influx DB Grafana AWS Services S3 VPC EC2 RDS Glacier DynamoDB ansible docker",
    "unique_id": "c48ebc35-cc56-4bc2-8f65-b17bf82012d0"
}