{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer VISA TX Over 7 years of experience as a Web Application Developer and Software Engineer using Python Django Experience in implementing PEP8 coding standards Handsonexperience on python web application development using Django and Serverless framework Good experience in developing web applications implementing MVTMVC architecture using Django Flask web application frameworks Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Experience in implementing PEP8 coding standards Experienced in installing configuring modifying testing and deploying applications with Apache Experience in developing big data applications using Hadoop framework and its eco systems like MapReduce Designed and implemented Hive and Pig UDFs using Python for evaluation filtering and storing of data Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Good experience with Amazon Cloud EC2 Simple Storage Service S3 Worked in Python Integrated Development Environments like NetBeans PyDev and Sublime Text Experienced in developing webbased applications using Python Django XML CSS HTML DHTML and JavaScript Understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Experience in developing python scripts for automation and performing functional tests and data validation Proficient in installing configuring and using Apache Hadoop ecosystems such as MapReduce Hive Pig Flume HBase Sqoop Kafka Oozie and Zookeeper Knowledge of Error Capture Exception Management Recon strategies Excellent technical and analytical skills with clear understanding of design goals and development for OLTP and dimension modeling for OLAP Experienced in developing Web Services with Python programming language Strong experience and knowledge of HDFS MapReduce and Hadoop ecosystem components like Hive Pig Sqoop NoSQL databases such as MongoDB and Cassandra Familiar with Amazon Web Services along with provisioning and maintaining AWS resources such as EMR S3 buckets EC2 instances RDS and others Expertise in Big Data architecture like Hadoop Azure Hortonworks Cloudera distributed system MongoDB NoSQL Extensive experience in loading and analyzing large datasets with Hadoop framework MapReduce HDFS Pig Hive Flume Sqoop Extensive experience in using ER modeling tools such as Erwin and ERStudio Teradata BTEQ MLDM and MDM Good knowledge on R and Python for statistical computing Also experience with MLlib Spark Matlab Excel Minitab SPSS and SAS Working with Databases like Teradata and proficiency in writing complex SQL PLSQL for creating tables views indexes stored procedures and functions Good experience working on analysis tool like Tableau for regression analysis pie charts and bar graphs Work Experience Sr Python Developer VISA Austin TX December 2017 to Present Involved in all phases of SDLC and participated in daily scrum meetings with cross teams Installed and configured Hadoop ecosystem like HBase Flume Pig and Sqoop Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Responsible for gathering requirements system analysis design development testing and deployment Developed and unit test integration solutions in MuleSoft Anypoint Platform Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed web applications in Django Frameworks model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and AJAX calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistic statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MYSQL Designed and developed Big Data analytic solutions on a Hadoopbased platform and engage clients in technical discussions Worked with Microsoft Azure Cloud services Storage Accounts Azure date storage and Azure Data Factory Performed transformations cleaning and filtering on imported data using Hive MapReduce and loaded final data into HDFS Used S3 Bucket to store the jars input datasets and used Dynamo DB to store the processed output from the input data set Utilized Oozie workflow to run Pig and Hive Jobs Extracted files from Mongo DB through Sqoop and placed in HDFS and processed Used Flume to collect aggregate and store the web log data from different sources like web servers mobile and network devices and pushed to HDFS Involved in PLSQL query optimization to reduce the overall run time of stored procedures Sr Python Developer DaVita Denver CO May 2015 to November 2017 Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Python Developer Havas Media New York NY December 2013 to April 2015 New York Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Involved in developing web applications using Model View Control MVC and Django Framework Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Involved in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Involved in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Python Developer Cox Automotive Atlanta GA March 2011 to November 2012 Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Using Subversion control tool to coordinate teamdevelopment Used Django Database APIs to access database objects Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface",
    "entities": [
        "MLlib",
        "AJAX",
        "GUI",
        "HTML AJAX CSS",
        "Interfacing",
        "Working",
        "MVTMVC",
        "JSON",
        "Infrastructure Development and Operations",
        "MapReduce Designed",
        "ER",
        "Model View Control MVC",
        "Hadoop",
        "XML",
        "HDFS Involved",
        "Atlanta",
        "SAS Working",
        "Shell",
        "TX",
        "Wrote Python",
        "Amazon",
        "Utilized Oozie",
        "HTML Created Business Logic",
        "Python",
        "NoSQL Extensive",
        "Sublime Text Experienced",
        "Amazon AWS S3",
        "Developed",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Statistical Analysis",
        "AWS Cloud",
        "Django Websites Created",
        "FLASK Framework Developed",
        "SDLC",
        "RDS",
        "Created Unit",
        "PEP8",
        "Views",
        "PyQt",
        "MVC",
        "PythonDjango",
        "Agile",
        "GIT",
        "CSV",
        "Sqoop",
        "OLAP Experienced",
        "QA",
        "Python Django Experience",
        "Created",
        "Python Developer Havas Media New York",
        "MDM Good",
        "Apache Experience",
        "Azure Data Factory Performed",
        "SQL",
        "OLTP",
        "Amazon Web Services",
        "Hive Pig",
        "lPythonspan",
        "FLASK",
        "SQL Python",
        "Big Data",
        "Pandas",
        "Python Integrated Development Environments",
        "Apache Hadoop",
        "Performed",
        "Established",
        "Created UI",
        "Djangos",
        "UI",
        "Unit Test Framework Created Selenium",
        "Microsoft",
        "Continuous Integration",
        "Django Database",
        "MapReduce Hive Pig Flume HBase",
        "Lambada Redshift",
        "UNIX Utilized",
        "Tomcat",
        "SDK",
        "Sr Python Developer DaVita Denver",
        "NetBeans",
        "Present Involved",
        "Amazon Cloud Created Data",
        "PHP",
        "Tableau",
        "EBS",
        "Mongo DB",
        "AWS Environment Created Test"
    ],
    "experience": "Experience in implementing PEP8 coding standards Handsonexperience on python web application development using Django and Serverless framework Good experience in developing web applications implementing MVTMVC architecture using Django Flask web application frameworks Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Experience in implementing PEP8 coding standards Experienced in installing configuring modifying testing and deploying applications with Apache Experience in developing big data applications using Hadoop framework and its eco systems like MapReduce Designed and implemented Hive and Pig UDFs using Python for evaluation filtering and storing of data Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Good experience with Amazon Cloud EC2 Simple Storage Service S3 Worked in Python Integrated Development Environments like NetBeans PyDev and Sublime Text Experienced in developing webbased applications using Python Django XML CSS HTML DHTML and JavaScript Understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Experience in developing python scripts for automation and performing functional tests and data validation Proficient in installing configuring and using Apache Hadoop ecosystems such as MapReduce Hive Pig Flume HBase Sqoop Kafka Oozie and Zookeeper Knowledge of Error Capture Exception Management Recon strategies Excellent technical and analytical skills with clear understanding of design goals and development for OLTP and dimension modeling for OLAP Experienced in developing Web Services with Python programming language Strong experience and knowledge of HDFS MapReduce and Hadoop ecosystem components like Hive Pig Sqoop NoSQL databases such as MongoDB and Cassandra Familiar with Amazon Web Services along with provisioning and maintaining AWS resources such as EMR S3 buckets EC2 instances RDS and others Expertise in Big Data architecture like Hadoop Azure Hortonworks Cloudera distributed system MongoDB NoSQL Extensive experience in loading and analyzing large datasets with Hadoop framework MapReduce HDFS Pig Hive Flume Sqoop Extensive experience in using ER modeling tools such as Erwin and ERStudio Teradata BTEQ MLDM and MDM Good knowledge on R and Python for statistical computing Also experience with MLlib Spark Matlab Excel Minitab SPSS and SAS Working with Databases like Teradata and proficiency in writing complex SQL PLSQL for creating tables views indexes stored procedures and functions Good experience working on analysis tool like Tableau for regression analysis pie charts and bar graphs Work Experience Sr Python Developer VISA Austin TX December 2017 to Present Involved in all phases of SDLC and participated in daily scrum meetings with cross teams Installed and configured Hadoop ecosystem like HBase Flume Pig and Sqoop Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Responsible for gathering requirements system analysis design development testing and deployment Developed and unit test integration solutions in MuleSoft Anypoint Platform Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed web applications in Django Frameworks model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and AJAX calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistic statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MYSQL Designed and developed Big Data analytic solutions on a Hadoopbased platform and engage clients in technical discussions Worked with Microsoft Azure Cloud services Storage Accounts Azure date storage and Azure Data Factory Performed transformations cleaning and filtering on imported data using Hive MapReduce and loaded final data into HDFS Used S3 Bucket to store the jars input datasets and used Dynamo DB to store the processed output from the input data set Utilized Oozie workflow to run Pig and Hive Jobs Extracted files from Mongo DB through Sqoop and placed in HDFS and processed Used Flume to collect aggregate and store the web log data from different sources like web servers mobile and network devices and pushed to HDFS Involved in PLSQL query optimization to reduce the overall run time of stored procedures Sr Python Developer DaVita Denver CO May 2015 to November 2017 Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Python Developer Havas Media New York NY December 2013 to April 2015 New York Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Involved in developing web applications using Model View Control MVC and Django Framework Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Involved in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Involved in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Python Developer Cox Automotive Atlanta GA March 2011 to November 2012 Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Using Subversion control tool to coordinate teamdevelopment Used Django Database APIs to access database objects Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "VISA",
        "TX",
        "years",
        "experience",
        "Web",
        "Application",
        "Developer",
        "Software",
        "Engineer",
        "Python",
        "Django",
        "Experience",
        "PEP8",
        "standards",
        "Handsonexperience",
        "web",
        "application",
        "development",
        "Django",
        "Serverless",
        "framework",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "web",
        "application",
        "frameworks",
        "Experience",
        "Infrastructure",
        "Development",
        "Operations",
        "Google",
        "App",
        "Engine",
        "AWS",
        "Cloud",
        "platforms",
        "Cloud",
        "Computing",
        "EC2",
        "RDS",
        "S3",
        "Glacier",
        "SQS",
        "SNS",
        "Cloud",
        "Formation",
        "VPC",
        "IAM",
        "Route",
        "EBS",
        "DynamoDB",
        "Lambada",
        "Redshift",
        "Experience",
        "PEP8",
        "standards",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "data",
        "applications",
        "Hadoop",
        "framework",
        "eco",
        "systems",
        "MapReduce",
        "Hive",
        "Pig",
        "UDFs",
        "Python",
        "evaluation",
        "filtering",
        "storing",
        "data",
        "Excellent",
        "knowledge",
        "MultiThreading",
        "Collections",
        "concepts",
        "Python",
        "Pandas",
        "library",
        "Statistical",
        "Analysis",
        "Experience",
        "data",
        "analysis",
        "machine",
        "techniques",
        "handsonexperience",
        "python",
        "libraries",
        "NumPyPandasSciPy",
        "experience",
        "Amazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "NetBeans",
        "PyDev",
        "Sublime",
        "Text",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "Understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "XML",
        "Experience",
        "python",
        "scripts",
        "automation",
        "tests",
        "data",
        "validation",
        "Proficient",
        "configuring",
        "Apache",
        "Hadoop",
        "ecosystems",
        "MapReduce",
        "Hive",
        "Pig",
        "Flume",
        "HBase",
        "Sqoop",
        "Kafka",
        "Oozie",
        "Zookeeper",
        "Knowledge",
        "Error",
        "Capture",
        "Exception",
        "Management",
        "Recon",
        "strategies",
        "skills",
        "understanding",
        "design",
        "goals",
        "development",
        "OLTP",
        "modeling",
        "OLAP",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "experience",
        "knowledge",
        "HDFS",
        "MapReduce",
        "Hadoop",
        "ecosystem",
        "components",
        "Hive",
        "Pig",
        "Sqoop",
        "NoSQL",
        "MongoDB",
        "Cassandra",
        "Familiar",
        "Amazon",
        "Web",
        "Services",
        "provisioning",
        "AWS",
        "resources",
        "EMR",
        "S3",
        "EC2",
        "RDS",
        "others",
        "Expertise",
        "Big",
        "Data",
        "architecture",
        "Hadoop",
        "Azure",
        "Hortonworks",
        "Cloudera",
        "system",
        "experience",
        "loading",
        "datasets",
        "Hadoop",
        "framework",
        "MapReduce",
        "HDFS",
        "Pig",
        "Hive",
        "Flume",
        "Sqoop",
        "experience",
        "ER",
        "modeling",
        "tools",
        "Erwin",
        "ERStudio",
        "Teradata",
        "BTEQ",
        "MLDM",
        "MDM",
        "knowledge",
        "R",
        "Python",
        "computing",
        "experience",
        "MLlib",
        "Spark",
        "Matlab",
        "Excel",
        "Minitab",
        "SPSS",
        "SAS",
        "Working",
        "Databases",
        "Teradata",
        "proficiency",
        "SQL",
        "PLSQL",
        "tables",
        "views",
        "indexes",
        "procedures",
        "functions",
        "experience",
        "analysis",
        "tool",
        "Tableau",
        "regression",
        "analysis",
        "pie",
        "charts",
        "bar",
        "graphs",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "VISA",
        "Austin",
        "TX",
        "December",
        "Present",
        "phases",
        "SDLC",
        "scrum",
        "meetings",
        "cross",
        "teams",
        "Hadoop",
        "ecosystem",
        "HBase",
        "Flume",
        "Pig",
        "Sqoop",
        "Architected",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Developed",
        "unit",
        "test",
        "integration",
        "solutions",
        "MuleSoft",
        "Anypoint",
        "Platform",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "JavaScripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "procedures",
        "MYSQL",
        "Big",
        "Data",
        "solutions",
        "platform",
        "clients",
        "discussions",
        "Microsoft",
        "Azure",
        "Cloud",
        "services",
        "Storage",
        "Accounts",
        "Azure",
        "date",
        "storage",
        "Azure",
        "Data",
        "Factory",
        "transformations",
        "filtering",
        "data",
        "Hive",
        "MapReduce",
        "data",
        "HDFS",
        "S3",
        "Bucket",
        "jars",
        "input",
        "datasets",
        "Dynamo",
        "DB",
        "output",
        "input",
        "data",
        "Oozie",
        "workflow",
        "Pig",
        "Hive",
        "Jobs",
        "files",
        "Mongo",
        "DB",
        "Sqoop",
        "HDFS",
        "Used",
        "Flume",
        "aggregate",
        "web",
        "log",
        "data",
        "sources",
        "web",
        "servers",
        "mobile",
        "network",
        "devices",
        "HDFS",
        "PLSQL",
        "query",
        "optimization",
        "time",
        "procedures",
        "Sr",
        "Python",
        "Developer",
        "DaVita",
        "Denver",
        "CO",
        "May",
        "November",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "database",
        "model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Collections",
        "Python",
        "user",
        "objects",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Python",
        "modules",
        "CSV",
        "itertools",
        "pickle",
        "development",
        "Angularjs",
        "client",
        "web",
        "application",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Pythons",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "application",
        "Python",
        "stock",
        "APIs",
        "Spark",
        "Code",
        "python",
        "processing",
        "data",
        "databases",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Developer",
        "Havas",
        "Media",
        "New",
        "York",
        "NY",
        "December",
        "April",
        "New",
        "York",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Django",
        "Framework",
        "Build",
        "database",
        "mapping",
        "classes",
        "FLASK",
        "models",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Created",
        "Test",
        "plans",
        "SQL",
        "scripts",
        "data",
        "tables",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "business",
        "logic",
        "discussions",
        "use",
        "case",
        "design",
        "product",
        "requirement",
        "documents",
        "specifications",
        "test",
        "strategy",
        "test",
        "plan",
        "test",
        "case",
        "documents",
        "Selenium",
        "Automation",
        "Selenium",
        "Web",
        "Driver",
        "Java",
        "Unit",
        "Test",
        "Framework",
        "Created",
        "Selenium",
        "webdriver",
        "automation",
        "scripts",
        "Python",
        "functionality",
        "browsers",
        "framework",
        "Continuous",
        "Integration",
        "environment",
        "Jenkins",
        "Nexus",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "selenium",
        "automation",
        "framework",
        "TestNG",
        "Developed",
        "Maven",
        "targets",
        "automation",
        "suites",
        "command",
        "line",
        "AWS",
        "Cloud",
        "instances",
        "EC2",
        "Python",
        "Developer",
        "Cox",
        "Automotive",
        "Atlanta",
        "GA",
        "March",
        "November",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Design",
        "test",
        "deploy",
        "website",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "Django",
        "Database",
        "APIs",
        "database",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:45:11.891401",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer VISA TX Over 7 years of experience as a Web Application Developer and Software Engineer using Python Django Experience in implementing PEP8 coding standards Handsonexperience on python web application development using Django and Serverless framework Good experience in developing web applications implementing MVTMVC architecture using Django Flask web application frameworks Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Experience in implementing PEP8 coding standards Experienced in installing configuring modifying testing and deploying applications with Apache Experience in developing big data applications using Hadoop framework and its eco systems like MapReduce Designed and implemented Hive and Pig UDFs using Python for evaluation filtering and storing of data Excellent knowledge of OOPS MultiThreading and Collections concepts and in Python Used Pandas library for Statistical Analysis Experience in data analysis and machine learning techniques with handsonexperience on various python libraries like NumPyPandasSciPy Good experience with Amazon Cloud EC2 Simple Storage Service S3 Worked in Python Integrated Development Environments like NetBeans PyDev and Sublime Text Experienced in developing webbased applications using Python Django XML CSS HTML DHTML and JavaScript Understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Experience in developing python scripts for automation and performing functional tests and data validation Proficient in installing configuring and using Apache Hadoop ecosystems such as MapReduce Hive Pig Flume HBase Sqoop Kafka Oozie and Zookeeper Knowledge of Error Capture Exception Management Recon strategies Excellent technical and analytical skills with clear understanding of design goals and development for OLTP and dimension modeling for OLAP Experienced in developing Web Services with Python programming language Strong experience and knowledge of HDFS MapReduce and Hadoop ecosystem components like Hive Pig Sqoop NoSQL databases such as MongoDB and Cassandra Familiar with Amazon Web Services along with provisioning and maintaining AWS resources such as EMR S3 buckets EC2 instances RDS and others Expertise in Big Data architecture like Hadoop Azure Hortonworks Cloudera distributed system MongoDB NoSQL Extensive experience in loading and analyzing large datasets with Hadoop framework MapReduce HDFS Pig Hive Flume Sqoop Extensive experience in using ER modeling tools such as Erwin and ERStudio Teradata BTEQ MLDM and MDM Good knowledge on R and Python for statistical computing Also experience with MLlib Spark Matlab Excel Minitab SPSS and SAS Working with Databases like Teradata and proficiency in writing complex SQL PLSQL for creating tables views indexes stored procedures and functions Good experience working on analysis tool like Tableau for regression analysis pie charts and bar graphs Work Experience Sr Python Developer VISA Austin TX December 2017 to Present Involved in all phases of SDLC and participated in daily scrum meetings with cross teams Installed and configured Hadoop ecosystem like HBase Flume Pig and Sqoop Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Responsible for gathering requirements system analysis design development testing and deployment Developed and unit test integration solutions in MuleSoft Anypoint Platform Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed web applications in Django Frameworks model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and AJAX calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistic statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MYSQL Designed and developed Big Data analytic solutions on a Hadoopbased platform and engage clients in technical discussions Worked with Microsoft Azure Cloud services Storage Accounts Azure date storage and Azure Data Factory Performed transformations cleaning and filtering on imported data using Hive MapReduce and loaded final data into HDFS Used S3 Bucket to store the jars input datasets and used Dynamo DB to store the processed output from the input data set Utilized Oozie workflow to run Pig and Hive Jobs Extracted files from Mongo DB through Sqoop and placed in HDFS and processed Used Flume to collect aggregate and store the web log data from different sources like web servers mobile and network devices and pushed to HDFS Involved in PLSQL query optimization to reduce the overall run time of stored procedures Sr Python Developer DaVita Denver CO May 2015 to November 2017 Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Associated with debugging the applications monitored on JIRA using Agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the application Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Python Developer Havas Media New York NY December 2013 to April 2015 New York Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Involved in developing web applications using Model View Control MVC and Django Framework Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Involved in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Involved in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Established framework to setup Continuous Integration environment using Jenkins Nexus Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Python Developer Cox Automotive Atlanta GA March 2011 to November 2012 Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Using Subversion control tool to coordinate teamdevelopment Used Django Database APIs to access database objects Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface",
    "unique_id": "f05fd14e-9d28-475c-af45-24e89f2d40fa"
}