{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer SunTrust Atlanta GA 8 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript jQuery Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Good written and communication skills Poses capability to interact very closely with wide range of audience such as Engineers Scientists Health professionals Scientists Professors Clients and Vendors Authorized to work in the US for any employer Work Experience Python Developer SunTrust Atlanta GA January 2017 to Present Description SunTrust is an American holding company It is an organization driven by purpose and a personal touch Through its various subsidiaries the company provides corporate and investment banking capital market services mortgage banking and wealth management Here the project is to develop user interface of the website and secure data base for handling sensitive information of the clients using python and Django Responsibilities Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON to design and develop the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Rewrite existing PythonDjango modules to deliver certain format of data Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Worked on deployment of project on to Amazon S3 Used GIT version control and deployed project to Heroku Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of PyYAML libraries Written Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used Spring ORM to integrate Spring Framework with hibernate Build SQL queries for performing various CRUD operations like create update read and delete Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Skilled in using Collections in Python for manipulating and looping through different user defined objects Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 3627 Django 2016 HTML5 CSS XML Java JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Sherwin Williams Minneapolis MN August 2015 to December 2016 Description The SherwinWilliams Company is an American Fortune 500 company in the general building materials industry The companys primary business is manufacture distribution and sale of paints coatings and related products to professional industrial commercial and retail customers primarily in North and South America and Europe The company is mostly known through its SherwinWilliams Paints line In this project the selfservice engine has been built for managing the data of the customers Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code optimization Developed tools to automate some base tasks using Python Shell scripting and XML Created Unit test regression test framework for workingnew code Used PyQt to implement GUI for the user to create modify and view reports based on client data Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed a complete frontend application with Bootstrap Developed remote integration with third party platforms by using RESTful web services Environments Python 27 Django 16 AWS HTML5 JASON Shell scripting Tomcat Apache CSS Bootstrap Flask Java script MongoDB Linux APIs Git Python Developer New York Life Saddle Brook NJ September 2013 to July 2015 Description New York Lifes core product is whole life insurance a type of life insurance offering lifelong protection that builds cash value over time New York Life also sells term life insurance universal life insurance variable universal life insurance longterm care insurance and annuities The company operates New York Life Direct selling directtoconsumer policies and is the exclusive life insurance partner of the AARP Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Followed the best practice of Python such as PEP8 Developed Python scripts to execute Stored Procedures and load data from various forms of csv files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Sears Holdings Hoffman Estates IL November 2011 to August 2013 Description Sears Holdings is a social shopping platform offering members rewards for shopping at Sears and with other retail partners My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Indix Chennai Tamil Nadu July 2010 to October 2011 Responsibilities Worked on requirement gathering and Highlevel design Used HTMLCSS and JavaScript for UI development Converted Visual Basic Application to Python and MSQL Used Python scripts to update content in the database and manipulate files Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Python programming Ensured high quality data collection and maintaining the integrity of the data Contributed patches back to Django Utilized Python in the handling of all hits on Django Redis and other applications Developed objectoriented programming to enhance company product management Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 26 SciPy Pandas Bugzilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML4CSS Apache Python Developer Object Frontier Inc Chennai Tamil Nadu May 2009 to June 2010 Responsibilities Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Flask and Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django Flask MySQL Linux Shell Scripting HTML4 CSS3 JavaScript JIRA GIT Education Bachelors in Mechanical Engineering Anna University Chennai Tamil Nadu Skills CSS 9 years HTML 9 years PYTHON 9 years SCRIPTING 9 years SHELL SCRIPTING 9 years Django Java Flask C Javascript Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Perl Ruby Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "entities": [
        "ISO",
        "Python 3627",
        "Description Sears Holdings",
        "Oracle SQL Server",
        "ELB S CloudFront Deploy",
        "GUI",
        "Nodejs",
        "Flask Database",
        "Testdriven Development TDD Load Testing",
        "UNIX",
        "Node XL",
        "Working",
        "LAMP Linux",
        "IBM",
        "Sears",
        "Model View Control MVC",
        "SOAP",
        "XML",
        "Flask Developed",
        "Shell",
        "Mechanical Engineering Anna University",
        "Amazon",
        "UAT",
        "Oracle apps to PostgreSQL",
        "URLLIBS",
        "Python",
        "SQL Server",
        "Developed",
        "Jquery Responsible",
        "Bash",
        "Python Experienced",
        "Django",
        "MultiThreading",
        "Responsibilities Involved",
        "Javascript Additional Information Technical",
        "Git",
        "Technologies",
        "New York Life",
        "New York Life Direct",
        "Oracle 9i",
        "PythonPHP",
        "Develop",
        "Implemented Cross Site Scripting CSRF",
        "The SherwinWilliams Company",
        "Minneapolis",
        "Flask",
        "Bootstrap Developed",
        "Amazon Web Services AWS Python Developer Sears Holdings Hoffman Estates",
        "MS",
        "Tomcat Apache CSS Bootstrap Flask Java",
        "PyQt",
        "TestDriven Development",
        "PythonDjango",
        "SHELL SCRIPTING",
        "PythonPHP Architecture",
        "GIT",
        "Bugzilla",
        "Rabbit MQ",
        "CSV",
        "API",
        "HTML CSS JavaScript",
        "US",
        "AWS",
        "Heroku Involved",
        "WAMP Windows Apache",
        "Writing SOAP",
        "Converted Visual Basic Application to Python",
        "XML Created",
        "SQL Server Developed Python Script",
        "UNIX Developed",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "RESTFUL",
        "SQL",
        "lPythonspan",
        "Nginx",
        "JS Angular JS CSS",
        "SQL PLSQL and PostgreSQL",
        "Responsibilities Used UML Rational Rose",
        "Amazon Web Services AWS Python Developer Indix Chennai",
        "Analysis Design Development Testing Customization Bug",
        "Python OOP Worked",
        "Behave",
        "google analytics",
        "Description New York Lifes",
        "Pandas",
        "HTML CSS JSON",
        "JS Active",
        "CRUD",
        "Object Oriented Programming Software Development Life Cycle Database",
        "Engineers Scientists Health professionals Scientists Professors Clients and Vendors Authorized",
        "Build",
        "Performed",
        "Python Develop",
        "Djangos",
        "JavaScript",
        "UI",
        "Front",
        "Microsoft",
        "Mac Programming Languages Java C C Python",
        "SVN",
        "Amazon Web Service",
        "North and South America",
        "Tomcat",
        "VersionOne Methodologies",
        "JQuery Hands",
        "Developed UI",
        "TDD",
        "PHP",
        "EBS",
        "JQuery",
        "ESB",
        "HTML CSS Bootstrap",
        "SherwinWilliams Paints"
    ],
    "experience": "Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Good written and communication skills Poses capability to interact very closely with wide range of audience such as Engineers Scientists Health professionals Scientists Professors Clients and Vendors Authorized to work in the US for any employer Work Experience Python Developer SunTrust Atlanta GA January 2017 to Present Description SunTrust is an American holding company It is an organization driven by purpose and a personal touch Through its various subsidiaries the company provides corporate and investment banking capital market services mortgage banking and wealth management Here the project is to develop user interface of the website and secure data base for handling sensitive information of the clients using python and Django Responsibilities Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON to design and develop the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Rewrite existing PythonDjango modules to deliver certain format of data Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Worked on deployment of project on to Amazon S3 Used GIT version control and deployed project to Heroku Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of PyYAML libraries Written Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used Spring ORM to integrate Spring Framework with hibernate Build SQL queries for performing various CRUD operations like create update read and delete Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Skilled in using Collections in Python for manipulating and looping through different user defined objects Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 3627 Django 2016 HTML5 CSS XML Java JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Sherwin Williams Minneapolis MN August 2015 to December 2016 Description The SherwinWilliams Company is an American Fortune 500 company in the general building materials industry The companys primary business is manufacture distribution and sale of paints coatings and related products to professional industrial commercial and retail customers primarily in North and South America and Europe The company is mostly known through its SherwinWilliams Paints line In this project the selfservice engine has been built for managing the data of the customers Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code optimization Developed tools to automate some base tasks using Python Shell scripting and XML Created Unit test regression test framework for workingnew code Used PyQt to implement GUI for the user to create modify and view reports based on client data Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed a complete frontend application with Bootstrap Developed remote integration with third party platforms by using RESTful web services Environments Python 27 Django 16 AWS HTML5 JASON Shell scripting Tomcat Apache CSS Bootstrap Flask Java script MongoDB Linux APIs Git Python Developer New York Life Saddle Brook NJ September 2013 to July 2015 Description New York Lifes core product is whole life insurance a type of life insurance offering lifelong protection that builds cash value over time New York Life also sells term life insurance universal life insurance variable universal life insurance longterm care insurance and annuities The company operates New York Life Direct selling directtoconsumer policies and is the exclusive life insurance partner of the AARP Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Followed the best practice of Python such as PEP8 Developed Python scripts to execute Stored Procedures and load data from various forms of csv files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Sears Holdings Hoffman Estates IL November 2011 to August 2013 Description Sears Holdings is a social shopping platform offering members rewards for shopping at Sears and with other retail partners My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Indix Chennai Tamil Nadu July 2010 to October 2011 Responsibilities Worked on requirement gathering and Highlevel design Used HTMLCSS and JavaScript for UI development Converted Visual Basic Application to Python and MSQL Used Python scripts to update content in the database and manipulate files Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Python programming Ensured high quality data collection and maintaining the integrity of the data Contributed patches back to Django Utilized Python in the handling of all hits on Django Redis and other applications Developed objectoriented programming to enhance company product management Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 26 SciPy Pandas Bugzilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML4CSS Apache Python Developer Object Frontier Inc Chennai Tamil Nadu May 2009 to June 2010 Responsibilities Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Flask and Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django Flask MySQL Linux Shell Scripting HTML4 CSS3 JavaScript JIRA GIT Education Bachelors in Mechanical Engineering Anna University Chennai Tamil Nadu Skills CSS 9 years HTML 9 years PYTHON 9 years SCRIPTING 9 years SHELL SCRIPTING 9 years Django Java Flask C Javascript Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Perl Ruby Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011 g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "SunTrust",
        "Atlanta",
        "GA",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "C",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "domains",
        "Object",
        "Oriented",
        "Programming",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "scripts",
        "Gherkin",
        "Syntax",
        "Behave",
        "framework",
        "Python",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "code",
        "Struts",
        "JSP",
        "JavaScript",
        "performance",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "SQL",
        "MS",
        "SQL",
        "Apache",
        "Cassandra",
        "Oracle",
        "MongoDB",
        "SQL",
        "PLSQL",
        "programming",
        "code",
        "units",
        "database",
        "triggers",
        "features",
        "performance",
        "Bulk",
        "Binds",
        "views",
        "Inline",
        "Global",
        "Temporary",
        "Tables",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Proficient",
        "Unit",
        "testing",
        "Testdriven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Integration",
        "Testing",
        "SVN",
        "Eclipse",
        "Pycharm",
        "Pyscript",
        "Spyder",
        "JIRA",
        "GIT",
        "Ansible",
        "Ansible",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Written",
        "Python",
        "Code",
        "Ansible",
        "Python",
        "API",
        "Automate",
        "Cloud",
        "Deployment",
        "Process",
        "knowledge",
        "strategy",
        "implementation",
        "AWS",
        "technologies",
        "EC2",
        "S3",
        "EBS",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "extracts",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "communication",
        "skills",
        "Poses",
        "capability",
        "range",
        "audience",
        "Engineers",
        "Scientists",
        "Health",
        "professionals",
        "Scientists",
        "Professors",
        "Clients",
        "Vendors",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "SunTrust",
        "Atlanta",
        "GA",
        "January",
        "Present",
        "Description",
        "SunTrust",
        "company",
        "organization",
        "purpose",
        "touch",
        "subsidiaries",
        "company",
        "investment",
        "banking",
        "capital",
        "market",
        "services",
        "mortgage",
        "banking",
        "wealth",
        "management",
        "project",
        "user",
        "interface",
        "website",
        "data",
        "base",
        "information",
        "clients",
        "python",
        "Django",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "TestDriven",
        "Development",
        "TDD",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "JIRA",
        "Bug",
        "tracking",
        "issue",
        "part",
        "AgileScrum",
        "development",
        "team",
        "TDD",
        "approach",
        "applications",
        "deployment",
        "project",
        "Amazon",
        "S3",
        "GIT",
        "version",
        "control",
        "project",
        "Heroku",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "API",
        "module",
        "help",
        "PyYAML",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Spring",
        "ORM",
        "Spring",
        "Framework",
        "hibernate",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "user",
        "experience",
        "Collections",
        "Python",
        "user",
        "objects",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "Java",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Sherwin",
        "Williams",
        "Minneapolis",
        "MN",
        "August",
        "December",
        "Description",
        "SherwinWilliams",
        "Company",
        "American",
        "Fortune",
        "company",
        "building",
        "materials",
        "industry",
        "business",
        "distribution",
        "sale",
        "paints",
        "coatings",
        "products",
        "customers",
        "North",
        "South",
        "America",
        "Europe",
        "company",
        "SherwinWilliams",
        "Paints",
        "line",
        "project",
        "selfservice",
        "engine",
        "data",
        "customers",
        "Responsibilities",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOP",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Angularjs",
        "client",
        "application",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Python",
        "stock",
        "APIs",
        "Design",
        "web",
        "applications",
        "Python",
        "Develop",
        "applications",
        "database",
        "pymongo",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "frontend",
        "application",
        "Bootstrap",
        "Developed",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Environments",
        "Python",
        "Django",
        "AWS",
        "HTML5",
        "JASON",
        "Shell",
        "Tomcat",
        "Apache",
        "CSS",
        "Bootstrap",
        "Flask",
        "Java",
        "script",
        "MongoDB",
        "Linux",
        "APIs",
        "Git",
        "Python",
        "Developer",
        "New",
        "York",
        "Life",
        "Saddle",
        "Brook",
        "NJ",
        "September",
        "July",
        "Description",
        "New",
        "York",
        "Lifes",
        "core",
        "product",
        "life",
        "type",
        "life",
        "insurance",
        "protection",
        "cash",
        "value",
        "time",
        "New",
        "York",
        "Life",
        "term",
        "life",
        "insurance",
        "life",
        "insurance",
        "variable",
        "life",
        "insurance",
        "longterm",
        "care",
        "insurance",
        "annuities",
        "company",
        "New",
        "York",
        "Life",
        "Direct",
        "directtoconsumer",
        "policies",
        "life",
        "insurance",
        "partner",
        "AARP",
        "Responsibilities",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Experience",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "validation",
        "serverclient",
        "user",
        "experience",
        "platform",
        "server",
        "environment",
        "development",
        "production",
        "Nginx",
        "stack",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "Django",
        "ORM",
        "SQL",
        "SQL",
        "Server",
        "Developed",
        "Python",
        "Script",
        "files",
        "dropbox",
        "Amazon",
        "server",
        "Written",
        "Python",
        "Scripts",
        "loading",
        "data",
        "CSV",
        "files",
        "database",
        "tasks",
        "Confluence",
        "JIRA",
        "tickets",
        "experience",
        "Python",
        "Perl",
        "phases",
        "data",
        "processing",
        "pipeline",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "Apache",
        "SVN",
        "state",
        "application",
        "development",
        "process",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "Django",
        "Python",
        "Created",
        "Docker",
        "images",
        "Docker",
        "Hub",
        "tools",
        "Docker",
        "integration",
        "updates",
        "downtime",
        "UI",
        "phases",
        "exceptions",
        "data",
        "SQL",
        "Server",
        "database",
        "web",
        "pages",
        "exception",
        "statistics",
        "phase",
        "experience",
        "SQL",
        "queries",
        "procedures",
        "practice",
        "Python",
        "PEP8",
        "Python",
        "scripts",
        "Procedures",
        "load",
        "data",
        "forms",
        "files",
        "tables",
        "SQL",
        "Server",
        "database",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "Environment",
        "Python",
        "Python",
        "Django",
        "Django",
        "REST",
        "Framework",
        "Flask",
        "XML",
        "HTTP",
        "Ajax",
        "Bootstrap",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "Pandas",
        "Bugzilla",
        "GITHUB",
        "Java",
        "Script",
        "PLSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Shell",
        "Scripting",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Python",
        "Developer",
        "Sears",
        "Holdings",
        "Hoffman",
        "Estates",
        "IL",
        "November",
        "August",
        "Description",
        "Sears",
        "Holdings",
        "shopping",
        "platform",
        "members",
        "rewards",
        "Sears",
        "partners",
        "role",
        "user",
        "interface",
        "end",
        "user",
        "look",
        "behavior",
        "interface",
        "contexts",
        "building",
        "web",
        "applications",
        "Django",
        "framework",
        "Dependency",
        "Injection",
        "features",
        "Responsibilities",
        "development",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "Jquery",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "python",
        "packages",
        "cx",
        "oracle",
        "pyodbc",
        "MySQL",
        "data",
        "base",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "DB",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "Jquery",
        "Responsible",
        "Angular",
        "JS",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML",
        "CSS",
        "JSON",
        "JS",
        "Adobe",
        "flash",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "application",
        "Amazon",
        "Web",
        "Service",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "S",
        "CloudFront",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "Writing",
        "SOAP",
        "web",
        "services",
        "house",
        "ESB",
        "web",
        "claims",
        "application",
        "Spring",
        "MVC",
        "JS",
        "Active",
        "MQ",
        "SOAP",
        "UI",
        "Mockito",
        "JSON",
        "Build",
        "forge",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "migration",
        "tasks",
        "Oracle",
        "apps",
        "PostgreSQL",
        "scripts",
        "sh",
        "ksh",
        "Bash",
        "daytoday",
        "administration",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "JSON",
        "REST",
        "SOAP",
        "Environment",
        "Python",
        "Python",
        "Django",
        "Django",
        "REST",
        "Framework",
        "Flask",
        "XML",
        "HTTP",
        "Ajax",
        "Bootstrap",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "Node",
        "Js",
        "Angular",
        "Js",
        "Pandas",
        "SOAPUI",
        "Mockito",
        "Bugzilla",
        "GITHUB",
        "Java",
        "Script",
        "PLSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Shell",
        "Scripting",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Python",
        "Developer",
        "Indix",
        "Chennai",
        "Tamil",
        "Nadu",
        "July",
        "October",
        "Responsibilities",
        "requirement",
        "gathering",
        "Highlevel",
        "design",
        "HTMLCSS",
        "JavaScript",
        "UI",
        "development",
        "Converted",
        "Visual",
        "Basic",
        "Application",
        "Python",
        "MSQL",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Thales",
        "encryption",
        "decryption",
        "ISO",
        "message",
        "Python",
        "programming",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "Contributed",
        "Django",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "applications",
        "programming",
        "company",
        "product",
        "management",
        "Python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "web",
        "application",
        "Environment",
        "Python",
        "SciPy",
        "Pandas",
        "Bugzilla",
        "SVN",
        "C",
        "Java",
        "JQuery",
        "MS",
        "SQL",
        "Visual",
        "Basic",
        "Linux",
        "Eclipse",
        "Java",
        "Script",
        "XML",
        "JASPER",
        "PLSQL",
        "Oracle",
        "9i",
        "Shell",
        "Scripting",
        "HTML4CSS",
        "Apache",
        "Python",
        "Developer",
        "Object",
        "Frontier",
        "Inc",
        "Chennai",
        "Tamil",
        "Nadu",
        "May",
        "June",
        "Responsibilities",
        "requirement",
        "gathering",
        "analysis",
        "period",
        "project",
        "business",
        "requirements",
        "workshopsgatherings",
        "business",
        "clients",
        "functionality",
        "delivery",
        "modules",
        "Python",
        "Flask",
        "Django",
        "Web",
        "Framework",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "understanding",
        "MySQL",
        "database",
        "Cross",
        "Site",
        "Scripting",
        "CSRF",
        "SQL",
        "injection",
        "security",
        "data",
        "protection",
        "applications",
        "technology",
        "tradeoffs",
        "risks",
        "Design",
        "database",
        "structures",
        "data",
        "access",
        "SQL",
        "Server",
        "Flask",
        "ORM",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Flask",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "services",
        "help",
        "python",
        "library",
        "URLLIBS",
        "database",
        "tables",
        "sequel",
        "tool",
        "MySQL",
        "integrity",
        "issues",
        "UI",
        "website",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "code",
        "Linux",
        "parameters",
        "machines",
        "phase",
        "Collaborate",
        "stakeholders",
        "project",
        "managers",
        "test",
        "document",
        "system",
        "defects",
        "bugs",
        "JIRA",
        "quality",
        "GIT",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "MySQL",
        "Linux",
        "Shell",
        "Scripting",
        "HTML4",
        "CSS3",
        "JavaScript",
        "JIRA",
        "GIT",
        "Education",
        "Bachelors",
        "Mechanical",
        "Engineering",
        "Anna",
        "University",
        "Chennai",
        "Tamil",
        "Nadu",
        "Skills",
        "CSS",
        "years",
        "HTML",
        "years",
        "PYTHON",
        "years",
        "years",
        "SHELL",
        "SCRIPTING",
        "years",
        "Django",
        "Java",
        "Flask",
        "C",
        "Javascript",
        "Additional",
        "Information",
        "Technical",
        "skills",
        "Operating",
        "Systems",
        "Unix",
        "Linux",
        "Windows",
        "Mac",
        "Programming",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "Perl",
        "Ruby",
        "Scripting",
        "Languages",
        "CSS",
        "Java",
        "Script",
        "JQuery",
        "Shell",
        "Scripting",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "Node",
        "XL",
        "MVC3",
        "Python",
        "Beautiful",
        "Soup",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "Oracle",
        "g",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "sphere",
        "web",
        "services",
        "Tools",
        "Intellij",
        "PyCharm",
        "FileZilla",
        "PLSQL",
        "Developer",
        "TOAD",
        "Integration",
        "Tools",
        "Jenkins",
        "Web",
        "Builder",
        "Version",
        "Control",
        "GitHub",
        "SVN",
        "Defect",
        "Tracking",
        "JIRA",
        "Git",
        "VersionOne",
        "Methodologies",
        "tools",
        "Programming",
        "UML",
        "Agile",
        "Scrum"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:10:54.891145",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer SunTrust Atlanta GA 8 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript jQuery Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Good written and communication skills Poses capability to interact very closely with wide range of audience such as Engineers Scientists Health professionals Scientists Professors Clients and Vendors Authorized to work in the US for any employer Work Experience Python Developer SunTrust Atlanta GA January 2017 to Present Description SunTrust is an American holding company It is an organization driven by purpose and a personal touch Through its various subsidiaries the company provides corporate and investment banking capital market services mortgage banking and wealth management Here the project is to develop user interface of the website and secure data base for handling sensitive information of the clients using python and Django Responsibilities Designed front end and backend of the application using Python on Django Web Framework Used HTML CSS AJAX JSON to design and develop the user interface of the website Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Rewrite existing PythonDjango modules to deliver certain format of data Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Worked on deployment of project on to Amazon S3 Used GIT version control and deployed project to Heroku Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Performed data manipulationstorage for incoming test data using lxml etree libraries Developed API modularizing existing python module with the help of PyYAML libraries Written Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used Spring ORM to integrate Spring Framework with hibernate Build SQL queries for performing various CRUD operations like create update read and delete Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Worked extensively with Bootstrap JavaScript and JQuery to optimize the user experience Skilled in using Collections in Python for manipulating and looping through different user defined objects Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 3627 Django 2016 HTML5 CSS XML Java JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Sherwin Williams Minneapolis MN August 2015 to December 2016 Description The SherwinWilliams Company is an American Fortune 500 company in the general building materials industry The companys primary business is manufacture distribution and sale of paints coatings and related products to professional industrial commercial and retail customers primarily in North and South America and Europe The company is mostly known through its SherwinWilliams Paints line In this project the selfservice engine has been built for managing the data of the customers Responsibilities Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code optimization Developed tools to automate some base tasks using Python Shell scripting and XML Created Unit test regression test framework for workingnew code Used PyQt to implement GUI for the user to create modify and view reports based on client data Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed a complete frontend application with Bootstrap Developed remote integration with third party platforms by using RESTful web services Environments Python 27 Django 16 AWS HTML5 JASON Shell scripting Tomcat Apache CSS Bootstrap Flask Java script MongoDB Linux APIs Git Python Developer New York Life Saddle Brook NJ September 2013 to July 2015 Description New York Lifes core product is whole life insurance a type of life insurance offering lifelong protection that builds cash value over time New York Life also sells term life insurance universal life insurance variable universal life insurance longterm care insurance and annuities The company operates New York Life Direct selling directtoconsumer policies and is the exclusive life insurance partner of the AARP Responsibilities Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Experience in developing views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly Website interface Implemented clientside validation to avoid back and forward between serverclient and provide better user experience Migrated platform from physical server to virtual environment Took it from development into production by wiring up a Nginx stack Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Equally comfortable working within the Django ORM or writing native SQL in SQL Server Developed Python Script for moving files from dropbox to Amazon server Written Python Scripts for loading data from CSV files into the database tables Documented tasks in Confluence and related them to the JIRA tickets Extensive experience in using Python Perl to code and design various phases for data processing pipeline Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Involved in databasedriven web application development using a variety of frameworks such as Django on Python Created Docker images uploaddownload in and out from the Docker Hub Worked on setting up new tools with Docker to assist with autoscaling continuous integration rolling updates with no downtime Developed UI for handling different phases of exceptions for the data in SQL Server database and fix them Developed web pages for the exception statistics for each phase Excellent experience in designing and maintaining complex SQL queries and developing PLSQL stored procedures Followed the best practice of Python such as PEP8 Developed Python scripts to execute Stored Procedures and load data from various forms of csv files into staging tables in SQL Server database Involved in back end development using Python with framework Flask Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Worked on Jenkins continuous integration tool for deployment of project Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Sears Holdings Hoffman Estates IL November 2011 to August 2013 Description Sears Holdings is a social shopping platform offering members rewards for shopping at Sears and with other retail partners My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Indix Chennai Tamil Nadu July 2010 to October 2011 Responsibilities Worked on requirement gathering and Highlevel design Used HTMLCSS and JavaScript for UI development Converted Visual Basic Application to Python and MSQL Used Python scripts to update content in the database and manipulate files Written many programs to parse excel file and process many user data with data validations Used Thales theorem for applying encryption and decryption of ISO standard message in Python programming Ensured high quality data collection and maintaining the integrity of the data Contributed patches back to Django Utilized Python in the handling of all hits on Django Redis and other applications Developed objectoriented programming to enhance company product management Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models Created unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 26 SciPy Pandas Bugzilla SVN C Java JQuery MS SQL Visual Basic Linux Eclipse Java Script XML JASPER PLSQL Oracle 9i Shell Scripting HTML4CSS Apache Python Developer Object Frontier Inc Chennai Tamil Nadu May 2009 to June 2010 Responsibilities Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Flask and Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Tracking defects and resolving bugs using JIRA Ensured quality by versioning with GIT Environment Python 27 Django Flask MySQL Linux Shell Scripting HTML4 CSS3 JavaScript JIRA GIT Education Bachelors in Mechanical Engineering Anna University Chennai Tamil Nadu Skills CSS 9 years HTML 9 years PYTHON 9 years SCRIPTING 9 years SHELL SCRIPTING 9 years Django Java Flask C Javascript Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Perl Ruby Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "unique_id": "191769a9-fd24-4100-a45d-fd99f9bc3c59"
}