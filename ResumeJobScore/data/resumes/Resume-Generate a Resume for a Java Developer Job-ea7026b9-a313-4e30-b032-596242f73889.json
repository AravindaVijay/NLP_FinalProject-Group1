{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Advance Auto Parts Raleigh NC 7 years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications in Python Experience objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python DJANGO CSS3 HTML5 and JavaScript Proficient in Front end development using HTML XML CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of web services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Pythons modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT MQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Advance Auto Parts Raleigh NC July 2018 to Present Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Created number of Ec2 instances for carrying parsing operations and worked on S3 for data storage functions in doing ETL jobs and data transformations using Boto3 library in python Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module By using pandas and numpy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Wrote SQL query operations to join the different full files to form delta file to capture the change data for identifying the new or updated data Designed and developed a JSON parser for parsing the required useful information from the huge data produced Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Helped maintain existing Python applications Interfaced with infrastructure services like Amazon AWS S3 SQS and used tools like RabbitMQ Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Working experience in creating REST webservice protocols in python to access AWS and Reltio Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue The large JSON data produced from the reltio tool is called master data is retrieved and parsed by using custom developed JSON parser and feed into the sqllite database Implemented RESTful web services in JSON format By using JSON parser which I developed we overcome the memory error and reduce the total execution time of 27 hours to 17 hours of processing total full files from the reltio by using AWS EC2 instances Performed Unit testing and Integration testing on the modules developed Selene Finance Location Houston TX Python Developer September 2016 to July 2018 Built an execution environment or system that allows for automated testing of tools It can be viewed as a platform to test out a set of assumptions or planned changes in the analysis toolsversion datasetmodels or execution environment and make sidebycomparison of results or to verify qualification status of production tools Responsibilities Management of a test library for each toolversion flavor as configured provide a mechanism to execute the toolsversions under test Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used Python programming and Django for backend development Bootstrap and Angular for frontend connectivity and Cassandra for database Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Assign Job to AWS Data pipeline service to access log data in AWS S3 Used data pipelines to transfer data to RDBMS and NoSQL data base for future analysis Improved internally developed ETL tools to make them more robust and flexible Developed common ETL and written Python code to format XML documents which can help to source data from different platforms Writing SOAP and Restful web services in house ESB for a web Claims application Angular JS RabbitMQ SOAP UI Development of Scripts for CICD using Virtual machines Docker python Used GitHub for Python source code version control Jenkins for automating the build Docker containers Developed a Django ORM module queries that can preload data to reduce the number of databases queries needed to retrieve same amount of data Develop scripts to automate the execution of ETL using python scripts under Unix environment Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for managing large databases using MySQL and Oracle Databases Wrote and executed various Oracle database queries from PythonMySQL connector and MySQL db package Used the Pythons modules pandas NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Implemented code in Python to retrieve and manipulate data and wrote Python scripts to parse JSON documents and load the data in DB Environment Python3x Django 18 HTML CSS NodeJS AJAX Angularjs JSON Restful XML JavaScript Jenkins Dockers MYSQL MongoDB JIRA Gexa Energy Location Houston TX Python Developer January 2015 to July 2016 Developed a webbased application using python to automate the bill management process I had developed an application that fetches the reports and other data from the vendors websites total of different 5 vendors and fill that data into the respective tables into the database Responsibilities Used the Django Framework to develop the application Implemented web applications in Flask and spring frameworks following MVC architecture Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using Python scripts Organized Python code using PEP8 online tool including documentation of scripts Sole engineer responsible for automated test design frontend and backend feature implementation and any other improvements to the test automation framework Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Django APIs to access the database Involved in writing APIs for Amazon Lambda to manage some of the AWS services Involved in Python OOD code for quality logging monitoring and debugging code optimization Analyzing the source data coming from various heterogeneous data sources to be consumed in the ETL to load data into data warehouse Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Extensively used ETL to load data from Oracle and Flat files to Data Warehouse Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Performed daily administration functions including database management monitoring performance tuning backup recovery and general troubleshooting on multiple UNIX platforms and Windows Servers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS jQuery JSON and JavaScript for front end applications Environment MySQL HTML Python 27 Django 18 HTML5 CSS XML MySQL Flask JavaScript AWS Linux Shell Scripting MongoDB AJAX Cassandra Json Unix jQuery Python Developer Idea Entity Hyderabad Telangana March 2012 to September 2014 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL",
    "entities": [
        "Responsibilities Management",
        "Celery Developed",
        "AIX",
        "UNIX",
        "Software Development Lifecycle SDLC Experienced",
        "JSON",
        "ER",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "Shell",
        "csv",
        "Amazon",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "Mongo",
        "AWS S3",
        "Reengineered",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "NC",
        "Windows",
        "Restful",
        "Bash Involved",
        "Data Warehouse Used",
        "Linux",
        "AWS Utilized Kubernetes",
        "Flask",
        "Amazon Web Services AWS Developed Python",
        "HTML XML CSS jQuery JSON",
        "RDS",
        "PEP8",
        "MVC",
        "Spark",
        "Bootstrap and Angular",
        "API",
        "HTML CSS JavaScript JSON Bootstrap Experienced",
        "Created",
        "AWS",
        "Oracle",
        "Pyspark",
        "Writing SOAP",
        "JavaScript Proficient",
        "INSERTS UPDATES",
        "Performed Unit",
        "AWS Data",
        "SQL",
        "DB Environment",
        "lPythonspan",
        "Kubernetes",
        "Amazon AWS S3 SQS",
        "CICD",
        "MVW",
        "Virtual",
        "Pandas",
        "MDM",
        "ETL",
        "Nodejs Knowledge",
        "Performed",
        "Node JS Express",
        "XSLT",
        "Assign Job",
        "JavaScript",
        "CDC",
        "Web Development Python",
        "UI",
        "Front",
        "OOAD",
        "SQL Queries Stored",
        "Expertise",
        "Nodejs and Projects UI Designing Team Developing",
        "REST",
        "Analysis Design Development Management and Implementation",
        "NoSQL",
        "Developed Restful",
        "Kubernetes BuildingMaintaining Docker",
        "Master Data Management",
        "EBS",
        "Integration",
        "ESB",
        "Amazon Lambda"
    ],
    "experience": "Experience objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python DJANGO CSS3 HTML5 and JavaScript Proficient in Front end development using HTML XML CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of web services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Pythons modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT MQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Advance Auto Parts Raleigh NC July 2018 to Present Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Created number of Ec2 instances for carrying parsing operations and worked on S3 for data storage functions in doing ETL jobs and data transformations using Boto3 library in python Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module By using pandas and numpy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Wrote SQL query operations to join the different full files to form delta file to capture the change data for identifying the new or updated data Designed and developed a JSON parser for parsing the required useful information from the huge data produced Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Helped maintain existing Python applications Interfaced with infrastructure services like Amazon AWS S3 SQS and used tools like RabbitMQ Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Working experience in creating REST webservice protocols in python to access AWS and Reltio Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue The large JSON data produced from the reltio tool is called master data is retrieved and parsed by using custom developed JSON parser and feed into the sqllite database Implemented RESTful web services in JSON format By using JSON parser which I developed we overcome the memory error and reduce the total execution time of 27 hours to 17 hours of processing total full files from the reltio by using AWS EC2 instances Performed Unit testing and Integration testing on the modules developed Selene Finance Location Houston TX Python Developer September 2016 to July 2018 Built an execution environment or system that allows for automated testing of tools It can be viewed as a platform to test out a set of assumptions or planned changes in the analysis toolsversion datasetmodels or execution environment and make sidebycomparison of results or to verify qualification status of production tools Responsibilities Management of a test library for each toolversion flavor as configured provide a mechanism to execute the toolsversions under test Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used Python programming and Django for backend development Bootstrap and Angular for frontend connectivity and Cassandra for database Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Assign Job to AWS Data pipeline service to access log data in AWS S3 Used data pipelines to transfer data to RDBMS and NoSQL data base for future analysis Improved internally developed ETL tools to make them more robust and flexible Developed common ETL and written Python code to format XML documents which can help to source data from different platforms Writing SOAP and Restful web services in house ESB for a web Claims application Angular JS RabbitMQ SOAP UI Development of Scripts for CICD using Virtual machines Docker python Used GitHub for Python source code version control Jenkins for automating the build Docker containers Developed a Django ORM module queries that can preload data to reduce the number of databases queries needed to retrieve same amount of data Develop scripts to automate the execution of ETL using python scripts under Unix environment Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for managing large databases using MySQL and Oracle Databases Wrote and executed various Oracle database queries from PythonMySQL connector and MySQL db package Used the Pythons modules pandas NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Implemented code in Python to retrieve and manipulate data and wrote Python scripts to parse JSON documents and load the data in DB Environment Python3x Django 18 HTML CSS NodeJS AJAX Angularjs JSON Restful XML JavaScript Jenkins Dockers MYSQL MongoDB JIRA Gexa Energy Location Houston TX Python Developer January 2015 to July 2016 Developed a webbased application using python to automate the bill management process I had developed an application that fetches the reports and other data from the vendors websites total of different 5 vendors and fill that data into the respective tables into the database Responsibilities Used the Django Framework to develop the application Implemented web applications in Flask and spring frameworks following MVC architecture Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using Python scripts Organized Python code using PEP8 online tool including documentation of scripts Sole engineer responsible for automated test design frontend and backend feature implementation and any other improvements to the test automation framework Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Django APIs to access the database Involved in writing APIs for Amazon Lambda to manage some of the AWS services Involved in Python OOD code for quality logging monitoring and debugging code optimization Analyzing the source data coming from various heterogeneous data sources to be consumed in the ETL to load data into data warehouse Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Extensively used ETL to load data from Oracle and Flat files to Data Warehouse Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Performed daily administration functions including database management monitoring performance tuning backup recovery and general troubleshooting on multiple UNIX platforms and Windows Servers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS jQuery JSON and JavaScript for front end applications Environment MySQL HTML Python 27 Django 18 HTML5 CSS XML MySQL Flask JavaScript AWS Linux Shell Scripting MongoDB AJAX Cassandra Json Unix jQuery Python Developer Idea Entity Hyderabad Telangana March 2012 to September 2014 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Advance",
        "Auto",
        "Parts",
        "Raleigh",
        "NC",
        "years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Management",
        "Implementation",
        "enterprise",
        "applications",
        "Python",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "java",
        "C",
        "applications",
        "Python",
        "DJANGO",
        "CSS3",
        "HTML5",
        "JavaScript",
        "Proficient",
        "Front",
        "end",
        "development",
        "HTML",
        "XML",
        "CSS",
        "jQuery",
        "JSON",
        "JavaScript",
        "Experience",
        "Web",
        "Development",
        "Python",
        "Django",
        "framework",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "JIRA",
        "JENKIN",
        "Experience",
        "web",
        "applications",
        "MVC",
        "architecture",
        "Django",
        "framework",
        "SQLAlchemy",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "Pythons",
        "modules",
        "NumPy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "command",
        "JavaScript",
        "Frameworks",
        "Team",
        "Angularjs",
        "Reactjs",
        "bootstrapjs",
        "Nodejs",
        "Projects",
        "UI",
        "Designing",
        "Team",
        "availability",
        "time",
        "system",
        "financialBanking",
        "transactions",
        "components",
        "Linux",
        "UNIX",
        "AIX",
        "platforms",
        "Tools",
        "C",
        "STL",
        "BOOST",
        "XML",
        "XPath",
        "XSLT",
        "MQ",
        "Perl",
        "Python",
        "Web",
        "application",
        "development",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "Bootstrap",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "APIs",
        "queues",
        "RabbitMQ",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "jQuery",
        "Nodejs",
        "Knowledge",
        "Model",
        "View",
        "Controller",
        "MVC",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "jQuery",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "APIs",
        "queues",
        "Node",
        "JS",
        "Express",
        "JS",
        "Server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "Angular",
        "Experience",
        "systems",
        "Celery",
        "RabbitMQ",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "documentation",
        "solutions",
        "IT",
        "infrastructure",
        "sales",
        "systems",
        "Windows",
        "Linux",
        "server",
        "enhancements",
        "system",
        "bugfixing",
        "tasks",
        "tasks",
        "help",
        "Celery",
        "Developed",
        "Python",
        "ETL",
        "scripts",
        "data",
        "web",
        "sites",
        "load",
        "data",
        "MySQL",
        "DB",
        "Experience",
        "Requests",
        "NumPy",
        "Matplotlib",
        "SciPy",
        "PySpark",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Experience",
        "knowledge",
        "AWS",
        "data",
        "lake",
        "storing",
        "data",
        "analytics",
        "spark",
        "data",
        "frames",
        "processing",
        "data",
        "files",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Advance",
        "Auto",
        "Parts",
        "Raleigh",
        "NC",
        "July",
        "Present",
        "project",
        "Master",
        "Data",
        "Management",
        "MDM",
        "team",
        "ETL",
        "process",
        "AWS",
        "glue",
        "data",
        "MDM",
        "tool",
        "Reltio",
        "module",
        "CDC",
        "change",
        "data",
        "capture",
        "python",
        "AWS",
        "GLUE",
        "Pyspark",
        "library",
        "number",
        "instances",
        "operations",
        "S3",
        "data",
        "storage",
        "functions",
        "ETL",
        "jobs",
        "data",
        "transformations",
        "library",
        "python",
        "workflow",
        "data",
        "AWS",
        "gateway",
        "server",
        "AWS",
        "S3",
        "formats",
        "delta",
        "process",
        "module",
        "pandas",
        "libraries",
        "scripts",
        "ETL",
        "operations",
        "CSV",
        "JSON",
        "types",
        "files",
        "file",
        "types",
        "database",
        "consumption",
        "Wrote",
        "SQL",
        "queries",
        "AWS",
        "glue",
        "ETL",
        "operations",
        "Spark",
        "data",
        "frame",
        "sparksql",
        "Wrote",
        "SQL",
        "query",
        "operations",
        "files",
        "delta",
        "file",
        "change",
        "data",
        "data",
        "JSON",
        "parser",
        "information",
        "data",
        "delta",
        "file",
        "file",
        "UPDATES",
        "DELETES",
        "python",
        "pyspark",
        "modules",
        "S3",
        "Python",
        "applications",
        "infrastructure",
        "services",
        "Amazon",
        "AWS",
        "S3",
        "SQS",
        "tools",
        "RabbitMQ",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "APIs",
        "queues",
        "RabbitMQ",
        "Working",
        "experience",
        "REST",
        "webservice",
        "protocols",
        "python",
        "access",
        "AWS",
        "Reltio",
        "mapping",
        "process",
        "delta",
        "file",
        "format",
        "AWS",
        "glue",
        "consumption",
        "glue",
        "data",
        "reltio",
        "tool",
        "master",
        "data",
        "custom",
        "JSON",
        "parser",
        "feed",
        "sqllite",
        "database",
        "web",
        "services",
        "format",
        "parser",
        "memory",
        "error",
        "execution",
        "time",
        "hours",
        "hours",
        "files",
        "reltio",
        "AWS",
        "EC2",
        "instances",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "modules",
        "Selene",
        "Finance",
        "Location",
        "Houston",
        "TX",
        "Python",
        "Developer",
        "September",
        "July",
        "execution",
        "environment",
        "system",
        "testing",
        "tools",
        "platform",
        "set",
        "assumptions",
        "changes",
        "analysis",
        "toolsversion",
        "datasetmodels",
        "execution",
        "environment",
        "sidebycomparison",
        "results",
        "qualification",
        "status",
        "production",
        "tools",
        "Responsibilities",
        "Management",
        "test",
        "library",
        "toolversion",
        "flavor",
        "mechanism",
        "toolsversions",
        "test",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Python",
        "programming",
        "Django",
        "development",
        "Bootstrap",
        "Angular",
        "frontend",
        "connectivity",
        "Cassandra",
        "database",
        "implementation",
        "experience",
        "installation",
        "configuration",
        "Kubernetes",
        "deployments",
        "Kubernetes",
        "BuildingMaintaining",
        "Docker",
        "container",
        "clusters",
        "Kubernetes",
        "Linux",
        "Bash",
        "GIT",
        "Docker",
        "AWS",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "test",
        "Assign",
        "Job",
        "AWS",
        "Data",
        "pipeline",
        "service",
        "access",
        "log",
        "data",
        "AWS",
        "S3",
        "data",
        "pipelines",
        "data",
        "NoSQL",
        "data",
        "base",
        "analysis",
        "ETL",
        "tools",
        "ETL",
        "Python",
        "code",
        "XML",
        "documents",
        "data",
        "platforms",
        "SOAP",
        "web",
        "services",
        "house",
        "ESB",
        "web",
        "Claims",
        "application",
        "Angular",
        "JS",
        "RabbitMQ",
        "SOAP",
        "UI",
        "Development",
        "Scripts",
        "CICD",
        "machines",
        "Docker",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Django",
        "ORM",
        "module",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "scripts",
        "execution",
        "ETL",
        "scripts",
        "Unix",
        "environment",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "databases",
        "MySQL",
        "Oracle",
        "Databases",
        "Wrote",
        "Oracle",
        "database",
        "connector",
        "MySQL",
        "package",
        "Pythons",
        "modules",
        "NumPy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "code",
        "Python",
        "manipulate",
        "data",
        "Python",
        "scripts",
        "documents",
        "data",
        "DB",
        "Environment",
        "Python3x",
        "Django",
        "HTML",
        "CSS",
        "NodeJS",
        "AJAX",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "Jenkins",
        "Dockers",
        "MYSQL",
        "MongoDB",
        "JIRA",
        "Gexa",
        "Energy",
        "Location",
        "Houston",
        "TX",
        "Python",
        "Developer",
        "January",
        "July",
        "application",
        "python",
        "bill",
        "management",
        "process",
        "application",
        "reports",
        "data",
        "vendors",
        "websites",
        "vendors",
        "data",
        "tables",
        "database",
        "Responsibilities",
        "Django",
        "Framework",
        "application",
        "web",
        "applications",
        "Flask",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "content",
        "files",
        "Python",
        "scripts",
        "Organized",
        "Python",
        "code",
        "PEP8",
        "tool",
        "documentation",
        "scripts",
        "Sole",
        "engineer",
        "test",
        "design",
        "frontend",
        "feature",
        "implementation",
        "improvements",
        "test",
        "automation",
        "framework",
        "microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Django",
        "APIs",
        "database",
        "APIs",
        "Amazon",
        "Lambda",
        "AWS",
        "services",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "source",
        "data",
        "data",
        "sources",
        "ETL",
        "data",
        "data",
        "warehouse",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "ETL",
        "data",
        "Oracle",
        "files",
        "Data",
        "Warehouse",
        "SQL",
        "MongoDB",
        "NoSQL",
        "campaign",
        "errors",
        "administration",
        "functions",
        "database",
        "management",
        "monitoring",
        "performance",
        "recovery",
        "troubleshooting",
        "UNIX",
        "platforms",
        "Windows",
        "Servers",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "HTML",
        "CSS",
        "jQuery",
        "JSON",
        "JavaScript",
        "end",
        "applications",
        "Environment",
        "MySQL",
        "HTML",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "Flask",
        "JavaScript",
        "Linux",
        "Shell",
        "Scripting",
        "AJAX",
        "Cassandra",
        "Json",
        "Unix",
        "jQuery",
        "Python",
        "Developer",
        "Idea",
        "Entity",
        "Hyderabad",
        "Telangana",
        "March",
        "September",
        "Responsibilities",
        "business",
        "process",
        "scope",
        "project",
        "position",
        "statement",
        "modules",
        "changes",
        "system",
        "web",
        "pages",
        "python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "issues",
        "process",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "Connected",
        "Flex",
        "Backend",
        "Controller",
        "API",
        "services",
        "architect",
        "developers",
        "business",
        "issues",
        "system",
        "testers",
        "requirements",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Data",
        "mapping",
        "data",
        "class",
        "diagrams",
        "ER",
        "diagrams",
        "SQL",
        "queries",
        "data",
        "Oracle",
        "database",
        "Environment",
        "Python",
        "Django",
        "Java",
        "MySQL",
        "XML",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JSON",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "MYSQL"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:13:05.097695",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Advance Auto Parts Raleigh NC 7 years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications in Python Experience objectoriented programming OOP concepts using Python java C Experienced in developing webbased applications using Python DJANGO CSS3 HTML5 and JavaScript Proficient in Front end development using HTML XML CSS jQuery JSON and JavaScript Experience with Web Development Python and the Django framework Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experienced with full software development lifecycle architecting scalable platforms objectoriented programming database design and agile methodologies Good knowledge of web services with protocols SOAP and REST Experience with Unit testing Test driven Development TDD Load Testing in JIRA JENKIN Experience in developing web applications implementing MVC architecture using Django framework and SQLAlchemy Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Experienced in Pythons modules NumPy matplotlib for generating complex graphical data creation of histograms etc Expertise in Service Oriented Architecture SOA and its related technologies like Web Services SOAP XML Strong command in JavaScript leading Frameworks Team like Angularjs Reactjs bootstrapjs Nodejs and Projects UI Designing Team Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT MQ libraries Perl Python scripting Web application development using HTML CSS JavaScript JSON Bootstrap Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Knowledge in Model View Controller MVC frameworks like Django Angular JS Java Script jQuery Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle and MySQL Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Experience with eventbased and messagedriven distributed systems like Celery RabbitMQ Used GitHub for Python source code version control Jenkins for automating the build Docker containers Experience in using various version control systems like Git GitHub Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Developed in Windows and going to deploy it in Linux server Conducted numerous enhancements for the system and bugfixing tasks Executed asynchronous tasks with help of Celery Developed and maintained mostly Python and ETL scripts to scrape data from external web sites and load cleansed data into a MySQL DB Experience with Requests NumPy Matplotlib SciPy PySpark and Pandas python libraries during development lifecycle Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Work Experience Python Developer Advance Auto Parts Raleigh NC July 2018 to Present Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Created number of Ec2 instances for carrying parsing operations and worked on S3 for data storage functions in doing ETL jobs and data transformations using Boto3 library in python Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module By using pandas and numpy libraries created python scripts to do ETL operations on large CSV JSON and various types of files and converted into appropriate file types for database consumption Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Wrote SQL query operations to join the different full files to form delta file to capture the change data for identifying the new or updated data Designed and developed a JSON parser for parsing the required useful information from the huge data produced Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Helped maintain existing Python applications Interfaced with infrastructure services like Amazon AWS S3 SQS and used tools like RabbitMQ Experienced in working on Celery Task queue and service broker using RabbitMQ Experience with RESTful APIs and queues like RabbitMQ Working experience in creating REST webservice protocols in python to access AWS and Reltio Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue The large JSON data produced from the reltio tool is called master data is retrieved and parsed by using custom developed JSON parser and feed into the sqllite database Implemented RESTful web services in JSON format By using JSON parser which I developed we overcome the memory error and reduce the total execution time of 27 hours to 17 hours of processing total full files from the reltio by using AWS EC2 instances Performed Unit testing and Integration testing on the modules developed Selene Finance Location Houston TX Python Developer September 2016 to July 2018 Built an execution environment or system that allows for automated testing of tools It can be viewed as a platform to test out a set of assumptions or planned changes in the analysis toolsversion datasetmodels or execution environment and make sidebycomparison of results or to verify qualification status of production tools Responsibilities Management of a test library for each toolversion flavor as configured provide a mechanism to execute the toolsversions under test Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used Python programming and Django for backend development Bootstrap and Angular for frontend connectivity and Cassandra for database Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Assign Job to AWS Data pipeline service to access log data in AWS S3 Used data pipelines to transfer data to RDBMS and NoSQL data base for future analysis Improved internally developed ETL tools to make them more robust and flexible Developed common ETL and written Python code to format XML documents which can help to source data from different platforms Writing SOAP and Restful web services in house ESB for a web Claims application Angular JS RabbitMQ SOAP UI Development of Scripts for CICD using Virtual machines Docker python Used GitHub for Python source code version control Jenkins for automating the build Docker containers Developed a Django ORM module queries that can preload data to reduce the number of databases queries needed to retrieve same amount of data Develop scripts to automate the execution of ETL using python scripts under Unix environment Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in front end and utilized Bootstrap and Angularjs for page design Responsible for managing large databases using MySQL and Oracle Databases Wrote and executed various Oracle database queries from PythonMySQL connector and MySQL db package Used the Pythons modules pandas NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Implemented code in Python to retrieve and manipulate data and wrote Python scripts to parse JSON documents and load the data in DB Environment Python3x Django 18 HTML CSS NodeJS AJAX Angularjs JSON Restful XML JavaScript Jenkins Dockers MYSQL MongoDB JIRA Gexa Energy Location Houston TX Python Developer January 2015 to July 2016 Developed a webbased application using python to automate the bill management process I had developed an application that fetches the reports and other data from the vendors websites total of different 5 vendors and fill that data into the respective tables into the database Responsibilities Used the Django Framework to develop the application Implemented web applications in Flask and spring frameworks following MVC architecture Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using Python scripts Organized Python code using PEP8 online tool including documentation of scripts Sole engineer responsible for automated test design frontend and backend feature implementation and any other improvements to the test automation framework Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Django APIs to access the database Involved in writing APIs for Amazon Lambda to manage some of the AWS services Involved in Python OOD code for quality logging monitoring and debugging code optimization Analyzing the source data coming from various heterogeneous data sources to be consumed in the ETL to load data into data warehouse Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Extensively used ETL to load data from Oracle and Flat files to Data Warehouse Used SQL and MongoDB NoSQL to identify and troubleshot campaign errors Performed daily administration functions including database management monitoring performance tuning backup recovery and general troubleshooting on multiple UNIX platforms and Windows Servers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed tools using Python Shell scripting XML to automate some of the menial tasks Used HTML CSS jQuery JSON and JavaScript for front end applications Environment MySQL HTML Python 27 Django 18 HTML5 CSS XML MySQL Flask JavaScript AWS Linux Shell Scripting MongoDB AJAX Cassandra Json Unix jQuery Python Developer Idea Entity Hyderabad Telangana March 2012 to September 2014 Responsibilities Involved in understanding the current business process defining scope of the project along with position statement Reengineered various modules for implementing changes and creating efficient system Developed dynamic web pages using python Django Frameworks Used Python and Django creating for XML processing data exchange and business logic implementation Used python scripts to update content in the database and manipulate files Resolved issues and improvised the process to ensure a stable and accurate solution Generated Python Django Forms to record data of online users Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Held meetings with client and worked all alone for entire internal project with limited help from the client Worked on writing and as well as read data from csv and excel file formats Connected Flex from Backend Controller using different API services Working with the architect developers on business and technical issues helping in designing the system and testers to ensure all requirements are correctly translated Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database Environment Python Django Java MySQL XML HTML XHTML CSS AJAX JSON JavaScript Apache Web Server MYSQL",
    "unique_id": "ea7026b9-a313-4e30-b032-596242f73889"
}