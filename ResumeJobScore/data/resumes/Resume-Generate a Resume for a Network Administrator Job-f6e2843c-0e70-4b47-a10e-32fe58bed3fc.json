{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer UBS Chicago IL Over 8Years of combined work experience in Analysis Design Big Data Web Application Development Management and Implementation of various stand alone clientserver enterprise applications Experience in implementing serverside technologies with RESTful APIs and MVCMVT design patterns using DjangoFlask frameworks Experienced in MVW frameworks like Django JavaScript and JQuery Experienced in developing webbased applications using Python Django PHP XML CSS5 HTML DHTML JavaScript RabbitMQ Jdk17 Experience in project deployment using JenkinsHeroku and using web services like Amazon Web Services AWS EC2 and AWS S3 Indepth understanding of the principles and best practices of Software Configuration Management in Agile SCRUM Waterfall methodologies Experienced in NoSQL databases like MongoDB Cassandra and relational databases like Oracle SQLite Postgre SQL and MySQL databases Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10g and MongoDB Deployed Azure Iaas virtual machines VMs and Cloud services PaaS role instances into secure VNets and subnets Assist DNS with research creation implementation and assessment of policies and procedures Good expertise in Golang programming Programmed the invoicing web application using Golang and PostgreSQL as the backend Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Hands on Experience in Hadoop ecosystem including HDFS Spark Hive Pig Sqoop Impala Oozie Flume Kafka HBase ZooKeeper MapReduce Experienced in Reactjs and working with React Flux architecture Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Resolution of problems in the Bluetooth framework in an ARMCortexA9 based automotive platforms running the Windows Embedded Compact 7 system Adept in using SAS Enterprise Guide for performing day to day programming in SAS Extensive knowledge and Experience in dealing with mod_perl development in Perl CGI Object oriented Perl JavaScript HTML and CSS Indepth experience with VMware VirtualBox Open stack Azure and Amazon Cloud Services and managing security groups in AWS Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in Assessing Designing and Administration of Cloud Solutions Iaas based on VMware vRAvCAC vRO vROps PowerCLI in distributed environment Proficient in Machine learning DataText Mining Statistical Analysis Predictive Modeling Experience with container based deployments using Docker working with Docker images Docker Hub and Docker registries and have knowledge on containerization orchestration using Kubernetes Worked on different products like CS Tool Configuration Tool Restli Gateway Developed  workflow on actions Spark Linux script HIVE scripts and HBase loads Designed configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services including EC2 VPC Lambda ELB Cloud Watch and IAM Used Python and PySpark to scrape clean and analyze large datasets Hands on SVN Git JIRA Bugzilla Amazon EC2S3 Handson experience in UNIX and Linux Kernels Worked with different Hadoop file formats like Parquet and compression techniques like gzip Snappy Experienced in building data models using machine learning techniques for Classification Regression Clustering and Associative mining Support an Agile CICD Environment with Devops where we make the Atlassian tools Jira and Bitbucket and also provide layer 3 support on these tools if there are any issues Developed PySpark code to read data from Hive group the fields and generate XML files Experienced in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Strongly followed PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Experienced with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Used Pandas library in Python for statistical analysis Software experience in Python CC on Linux Windows Crossplatform and embedded systems Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Implemented best practices of WebIntelligence Reports and BOBJ Universe Design to attain maximum throughput Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experienced in UI Design and Development using HTML5 CSS3 JavaScript jQuery Nodejs Bootstrap and AJAX that follows W3C Web standards successfully managing all facets of application development Experienced with web servers like Apache Tomcat Web logic Experience in objectoriented programming OOP concepts using Python Java C Experience with Unit testing Test driven Development TDD Load Testing Experienced in Pythons modules NumPy MatPlotLib Pickle PySide Scipy wxPython PyTables etc for generating complex graphical data creation of histograms etc Proven ability to work in team environment as well as independently Effective Communicator Work well with management staff and personnel at all levels Equally comfortable dealing with customers vendors and the general public Authorized to work in United States for any employer Work Experience Sr Python Developer UBS Chicago IL January 2019 to Present Description Five9 is the leading provider of cloud contact center software Five9 software creates more successful customer interactions while increasing contact center productivity without the capital expense and maintenance costs of premisebased systems Responsibilities Implemented different python libraries NumPy SciPy PyTables matplotlib pythontwitter Pandas data frame and urllib2 in various tasks Responsible for using Django a highlevel Python Web Framework to build powerful APIs and Web Applications for desktop and mobile users using Python HTML5 CSS3 JavaScript Git Command Line Redis and Graphic Design Softwares Developed programs to automate the testing of RAID controller firmware and utilities using Python Java Bash script Windows command line Developed GUI of the website using HTML5 CSS3 Typescript Angular 2 Reactjs Bootstrap and JSON Provided high availability for Iaas VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer Building a Command line tool to interact with RESTful API using in Golang Creating Reactjs Flux Redux frontend UI and Nodejs applications for backend Build React components and standalone functions to be added to any future pages Implemented designed and coded python user defined functions in PySpark Built user churn prediction model based on user behavior data16G using PySpark ML Followed Agile Methodologies and SCRUM Process Developed responsive web product features using React JS SASS on Golang with REST Used ETLSSIS and TSQL stored procedures to transfer data from OLTP databases to staging area and finally transfer into data marts and performed action in XML Designed developed and integrated a PostgreSQL database of ontological information with a proprietary Scala based NLP pipeline Developed strong knowledge of machine learning algorithms metricdriven data set analysis and NLP techniques The application layer for this project is Ruby which has a custom frameworkMojo to build APIs which can be consumed by other client in the internal system of Autodesk Experience in the Hadoop ecosystem components like HDFS Spark with Scala and pythonZookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Developing and maintenance of new and existing web application features for both internal administrators and end users using Ruby on Rails Experience with Unit testing Test driven Development TDD Load Testing Written Programs in Spark using Scala and Python for Data quality check Build Apache Kafka Multinode Cluster and used Kafka Manager to monitor multiple Clusters Built Data Ingestion Microservice to accept and validate raw metric data and publish to RabbitMQ as data Developed Data Processor Microservice to subscribe data from RabbitMQ process data and trigger actions and persist data to MongoDB Used various NLP libraries like Gensim TextBlob spaCy Worked on cross browser compilation and responsive web design using HTML5 CSS3 and Bootstrap Enhanced the PySpark code to replace spark with Impyla Performed installation for Impyla on the Edge node Created planned and executed multithreading PySpark jobs on multi node spark cluster with UDF Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for building scalable distributed data solutions using Hadoop Review of the Automation scripts to make sure all the manual test cases and requirements are covered in the Regression suites Worked on JavaScript MVC frameworks like AngularJS OpenStack Used Django Rest framework for creating REST APIs and interacted with Jira using Jira Rest API Used other packages such as Beautiful soup for data parsing Used Python modules such as requests urllib urllib2 for web crawling Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Parsing JSON files using PySpark and applying cleaning extracting objects for transformations ready Performance tuning for data warehouse queries and indexes Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase mongoDB Agile RabbitMQ SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Sr Python Developer Hudson Insurance Alpharetta GA August 2016 to November 2018 Description It is a worldwide financial group with diverse group of companies spanning in 19 countries Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Experience with ORMs such as Django and SQLAlchamy database design and normalization Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries DNS 53 bed facility Responsible for the delivery of nursing services to include planning implementing and evaluating the care plan of each resident to maximize resident quality of life and quality of care with the integration of resident rights Created numerous Django apps and extensively used Django Session and authentication management Created new connections through applications for better access to MySQL database and involved in writing several SQLPLSQL functions sequences stored procedures triggers cursors and object types Worked as ADNS infection control wound care Site Reliability Engineering responsibilities for Kafka platform that scales 2 GBSec and 20 Million messagessec Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Develop consumerbased features and applications using Django HTML Python Behavior Driven Development BDD and pairbased programming Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript Bootstrap and Rspec Used numerous JQuery third party libraries in Django framework feedback plugin photo light sociallikes jQuery tables slick grid and google charts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Implemented LDAP authentication using device to integrate with an inplace web sealTAM infrastructure Extensive experience of working on Management tool and Automation tools HP Quality Center and Selenium Implemented product used to replace a large Nagios based monitoring system that was used to control Just In Time manufacturing of interior parts and exhaust systems Our Continuous Integration stack consists of GIT Jenkins CICD the Docker Trusted Registry and OpenShift Enterprise Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning This project also used other technologies like JQuery for JavaScript manipulations bootstrap for the frontend html layout Understood the project scope identified activities tasks task level estimates schedule dependencies risks and provided inputs to Module Lead for review Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Rspec Cucumber Swagger Jr Python Developer Office Depot Boca Raton FL May 2014 to July 2016 Description Western Digital Corporation is an American computer data storage company and one of the largest computer hard disk drive manufacturers in the world Thrives for innovation Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML NodeJS XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Developed embedded firmware in C to create custom images on OscilloscopeDSP Digital Communication Adaptive Targeted to pique interest on DSP and embedded systems for beginners Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Enabling of the embedded Linux systems to support the development of the enterprise the network Unified Thread Management UTM products Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python 2627 JavaScript Django Framework 13 SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server PHP Lamp underscore JS SQL developer tool Full Stack Python Developer Fannie Mae Washington DC September 2012 to April 2014 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Hca Parallon Nashville TN October 2011 to August 2012 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Confier Health solutions Dallas TX August 2010 to September 2011 Description Pharmacy health care provider in united states The company ranks 18th on Fortune 500 CVS Healths assets include CVS Pharmacy CVS Caremark CVS Specialty and retail clinic MinuteClinic Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in working with Python ORM Libraries including Django ORM Worked on integrating python with Web development tools and Web Services Experience with Django and Flask a highlevel Python Web framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed User Interfaces using JQuery Bootstrap JavaScript CSS3 XML and HTML5 Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Developed server side using PHP in both WAMP and LAMP server framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Created a simple AWS Lambda function using python for deployment management in AWS Design investigation and implementation of public facing websites on Amazon Web Services AWS Designed web UI components for various modules and used JavaScript for clientside validation Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Assist in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Used Golang to log the different host system event and alert information to Cassandra database Deployed Core OS Kubernetes Clusters to manage Docker containers in the production environment with light weight Docker Images as base files Developed microservices on boarding tools leveraging Python and VSTS allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Worked on different data formats such as JSON XML and performed machine learning algorithms in Python Used pandas numpy seaborn matplotlib scikitlearn scipy NLTK in Python for developing various machine learning algorithms Working in oauth group to support 2leg and 3leg oauth including OIDC protocol Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Deployed on AWS EC2 using nginx and gunicorn Built a scalable cost effective and fault tolerant data ware house system on Amazon EC2 Cloud Developed MapReduceEMR jobs to analyze the data and provide heuristics and reports The heuristics were used for improving campaign targeting and efficiency Developed a functional design of AWS Elastic Map Reduce EMR specifications with respect to business requirements and technology alternatives Configuration of AWS EC2 Auto Scaling groups and auto scaling policies Developed PySpark code to read data from Hive group the fields and generate XML files Involved in front end and utilized Bootstrap and AngularJS for page design Involved in Developing a Restful APIS service using Python Flask framework Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Environment Python 30 Pycharm Django Docker Amazon Web Services AWS Lambda AWS S3 JQuery PyQuery MySQL HTML5 CSS3 JavaScript Ajax XML Restful Web Services JSON Bootstrap AngularJS NodeJS Flask SQL MySQL Jenkins Ansible Git GitHub Linux Education Bachelors Skills C Django Git Html Php Python Flask Visio Mysql Oracle Postgresql Sql Apache Linux Eclipse Java jquery Soap Mongodb Css CertificationsLicenses Drivers License Additional Information Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile tprof gprof Methodologies Agile Scrum Waterfall",
    "entities": [
        "Unified Thread Management",
        "Python Flask",
        "Pylint Experienced",
        "AJAX",
        "Informatica",
        "Understood",
        "GUI",
        "Jira and Bitbucket",
        "Classification Regression Clustering",
        "Analysis Design Big Data Web Application Development Management and Implementation",
        "JQuery Experienced",
        "Nodejs",
        "HTML5 Created",
        "Macros",
        "Azure Internal Load Balancer Building a Command",
        "UNIX",
        "Clusters Built Data Ingestion Microservice",
        "GIT Jenkins",
        "Golang Creating Reactjs Flux Redux",
        "Work Experience Sr Python Developer",
        "Interfacing",
        "Working",
        "DSP",
        "LAMP Linux",
        "IP",
        "Netezza",
        "Build React",
        "VMware vRAvCAC",
        "Fannie Mae",
        "Software Configuration Management",
        "Responsibilities Implemented",
        "RDD",
        "Hadoop",
        "XML",
        "Assessing Designing and Administration of Cloud Solutions Iaas",
        "Effective",
        "JUnit",
        "Five9",
        "Shell",
        "Mac Programming Languages Python 2X",
        "JS SQL",
        "CC",
        "Reactjs",
        "HBase",
        "Apache Spark",
        "LAMP",
        "TX",
        "Amazon",
        "Python HTML5 CSS3",
        "Python",
        "PySpark AWS ETL",
        "Amazon AWS S3",
        "Teradata Strongly",
        "Java J2EE Servlets EJB",
        "Developed",
        "Amazon Cloud Deployed",
        "SQLLoader ExportImport Data Pump and External Table Environment",
        "AWS Design",
        "Dallas",
        "MVT",
        "Django PHP XML",
        "Django",
        "WebIntelligence Reports",
        "SQLPLSQL",
        "Soap Mongodb Css CertificationsLicenses Drivers License Additional Information Technical",
        "Rspec",
        "messagessec Cleaned",
        "Hadoop Review of the Automation",
        "Developed Business Logic",
        "Object Relation Mappings",
        "Linux Full Stack Python Developer Hca Parallon Nashville",
        "the Windows Embedded Compact 7",
        "Developed Data Processor Microservice",
        "PythonPHP",
        "Develop",
        "Kubernetes Worked",
        "Linux Windows Crossplatform",
        "Linux",
        "DataText Mining Statistical Analysis Predictive Modeling",
        "JSP",
        "ODS",
        "Developed PySpark",
        "RDMS Oracle DB2",
        "Created Data",
        "Flask",
        "Washington DC",
        "Docker",
        "Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Hands",
        "PySpark ML",
        "RDS",
        "PEP8",
        "Views",
        "Description Financial",
        "cx_oracle",
        "JenkinsHeroku",
        "PyQt",
        "Spark",
        "Present Description Five9",
        "PythonPHP Architecture",
        "REST Used",
        "Python Web Framework",
        "GBSec",
        "Worked on Element Tree XMLAPI",
        "Python Django AWS J2EE Postgre",
        "PyUnit Apache",
        "CSV",
        "Digital Communication Adaptive Targeted",
        "Oracle MS SQL Server",
        "API",
        "Extract Transform",
        "HIVE",
        "Spring Data",
        "Site Reliability Engineering",
        "AmazonCloud Implemented LDAP",
        "Created",
        "UI Design and Development",
        "AWS",
        "WAMP Windows Apache",
        "Oracle",
        "HDFS Spark",
        "CSS Indepth",
        "PySpark",
        "DNS",
        "Rational Application Developer Implemented",
        "SAS Enterprise Guide",
        "PHP Lamp",
        "SAS",
        "DjangoFlask",
        "Python ORM Libraries",
        "WAMP",
        "HTML NodeJS XHTML AJAX CSS",
        "SQL",
        "Baseline Performance Load Stress and Endurance",
        "OLTP",
        "Amazon Web Services",
        "React Flux",
        "NLP",
        "lPythonspan",
        "Kubernetes",
        "Description Western Digital Corporation",
        "Amazon Web Services AWS EC2",
        "Hive",
        "Time",
        "JavaScript Git Command Line Redis",
        "MVW",
        "mod_perl",
        "Handson",
        "CVS Pharmacy CVS Caremark CVS Specialty",
        "Response Time",
        "Regression",
        "Golang",
        "Pandas",
        "United States",
        "SQLite",
        "Snappy Experienced",
        "ETL",
        "Ruby",
        "Alpharetta",
        "Oracle SQLite Postgre",
        "ETLSSIS",
        "Oracle Microsoft",
        "BOBJ Universe Design",
        "AWS S3 Indepth",
        "Djangos",
        "PySpark Built",
        "JavaScript",
        "Hot",
        "JSON XML",
        "UI",
        "Amazon Cloud Services",
        "UDF Migrated the Django",
        "the Docker Trusted Registry and OpenShift Enterprise Wrote",
        "MVCMVT",
        "Informatica Power Center Power Mart",
        "VNets",
        "CS Tool Configuration Tool",
        "Buck BitBake Apache",
        "Handler",
        "jQuery",
        "Database Backups and Recovery Strategies",
        "EDW",
        "Data",
        "AWS Experienced",
        "RAID",
        "Data Structures Algorithmsand",
        "PHP",
        "NoSQL",
        "TDD",
        "Amazon Web Services AWS Designed",
        "Linux Full Stack Python Developer Confier Health",
        "JQuery",
        "CIDR",
        "Developed GUI",
        "Python Java C Experience"
    ],
    "experience": "Experience in implementing serverside technologies with RESTful APIs and MVCMVT design patterns using DjangoFlask frameworks Experienced in MVW frameworks like Django JavaScript and JQuery Experienced in developing webbased applications using Python Django PHP XML CSS5 HTML DHTML JavaScript RabbitMQ Jdk17 Experience in project deployment using JenkinsHeroku and using web services like Amazon Web Services AWS EC2 and AWS S3 Indepth understanding of the principles and best practices of Software Configuration Management in Agile SCRUM Waterfall methodologies Experienced in NoSQL databases like MongoDB Cassandra and relational databases like Oracle SQLite Postgre SQL and MySQL databases Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10 g and MongoDB Deployed Azure Iaas virtual machines VMs and Cloud services PaaS role instances into secure VNets and subnets Assist DNS with research creation implementation and assessment of policies and procedures Good expertise in Golang programming Programmed the invoicing web application using Golang and PostgreSQL as the backend Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Hands on Experience in Hadoop ecosystem including HDFS Spark Hive Pig Sqoop Impala Oozie Flume Kafka HBase ZooKeeper MapReduce Experienced in Reactjs and working with React Flux architecture Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Resolution of problems in the Bluetooth framework in an ARMCortexA9 based automotive platforms running the Windows Embedded Compact 7 system Adept in using SAS Enterprise Guide for performing day to day programming in SAS Extensive knowledge and Experience in dealing with mod_perl development in Perl CGI Object oriented Perl JavaScript HTML and CSS Indepth experience with VMware VirtualBox Open stack Azure and Amazon Cloud Services and managing security groups in AWS Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in Assessing Designing and Administration of Cloud Solutions Iaas based on VMware vRAvCAC vRO vROps PowerCLI in distributed environment Proficient in Machine learning DataText Mining Statistical Analysis Predictive Modeling Experience with container based deployments using Docker working with Docker images Docker Hub and Docker registries and have knowledge on containerization orchestration using Kubernetes Worked on different products like CS Tool Configuration Tool Restli Gateway Developed   workflow on actions Spark Linux script HIVE scripts and HBase loads Designed configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services including EC2 VPC Lambda ELB Cloud Watch and IAM Used Python and PySpark to scrape clean and analyze large datasets Hands on SVN Git JIRA Bugzilla Amazon EC2S3 Handson experience in UNIX and Linux Kernels Worked with different Hadoop file formats like Parquet and compression techniques like gzip Snappy Experienced in building data models using machine learning techniques for Classification Regression Clustering and Associative mining Support an Agile CICD Environment with Devops where we make the Atlassian tools Jira and Bitbucket and also provide layer 3 support on these tools if there are any issues Developed PySpark code to read data from Hive group the fields and generate XML files Experienced in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Strongly followed PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Experienced with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Used Pandas library in Python for statistical analysis Software experience in Python CC on Linux Windows Crossplatform and embedded systems Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Implemented best practices of WebIntelligence Reports and BOBJ Universe Design to attain maximum throughput Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experienced in UI Design and Development using HTML5 CSS3 JavaScript jQuery Nodejs Bootstrap and AJAX that follows W3C Web standards successfully managing all facets of application development Experienced with web servers like Apache Tomcat Web logic Experience in objectoriented programming OOP concepts using Python Java C Experience with Unit testing Test driven Development TDD Load Testing Experienced in Pythons modules NumPy MatPlotLib Pickle PySide Scipy wxPython PyTables etc for generating complex graphical data creation of histograms etc Proven ability to work in team environment as well as independently Effective Communicator Work well with management staff and personnel at all levels Equally comfortable dealing with customers vendors and the general public Authorized to work in United States for any employer Work Experience Sr Python Developer UBS Chicago IL January 2019 to Present Description Five9 is the leading provider of cloud contact center software Five9 software creates more successful customer interactions while increasing contact center productivity without the capital expense and maintenance costs of premisebased systems Responsibilities Implemented different python libraries NumPy SciPy PyTables matplotlib pythontwitter Pandas data frame and urllib2 in various tasks Responsible for using Django a highlevel Python Web Framework to build powerful APIs and Web Applications for desktop and mobile users using Python HTML5 CSS3 JavaScript Git Command Line Redis and Graphic Design Softwares Developed programs to automate the testing of RAID controller firmware and utilities using Python Java Bash script Windows command line Developed GUI of the website using HTML5 CSS3 Typescript Angular 2 Reactjs Bootstrap and JSON Provided high availability for Iaas VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer Building a Command line tool to interact with RESTful API using in Golang Creating Reactjs Flux Redux frontend UI and Nodejs applications for backend Build React components and standalone functions to be added to any future pages Implemented designed and coded python user defined functions in PySpark Built user churn prediction model based on user behavior data16 G using PySpark ML Followed Agile Methodologies and SCRUM Process Developed responsive web product features using React JS SASS on Golang with REST Used ETLSSIS and TSQL stored procedures to transfer data from OLTP databases to staging area and finally transfer into data marts and performed action in XML Designed developed and integrated a PostgreSQL database of ontological information with a proprietary Scala based NLP pipeline Developed strong knowledge of machine learning algorithms metricdriven data set analysis and NLP techniques The application layer for this project is Ruby which has a custom frameworkMojo to build APIs which can be consumed by other client in the internal system of Autodesk Experience in the Hadoop ecosystem components like HDFS Spark with Scala and pythonZookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Developing and maintenance of new and existing web application features for both internal administrators and end users using Ruby on Rails Experience with Unit testing Test driven Development TDD Load Testing Written Programs in Spark using Scala and Python for Data quality check Build Apache Kafka Multinode Cluster and used Kafka Manager to monitor multiple Clusters Built Data Ingestion Microservice to accept and validate raw metric data and publish to RabbitMQ as data Developed Data Processor Microservice to subscribe data from RabbitMQ process data and trigger actions and persist data to MongoDB Used various NLP libraries like Gensim TextBlob spaCy Worked on cross browser compilation and responsive web design using HTML5 CSS3 and Bootstrap Enhanced the PySpark code to replace spark with Impyla Performed installation for Impyla on the Edge node Created planned and executed multithreading PySpark jobs on multi node spark cluster with UDF Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for building scalable distributed data solutions using Hadoop Review of the Automation scripts to make sure all the manual test cases and requirements are covered in the Regression suites Worked on JavaScript MVC frameworks like AngularJS OpenStack Used Django Rest framework for creating REST APIs and interacted with Jira using Jira Rest API Used other packages such as Beautiful soup for data parsing Used Python modules such as requests urllib urllib2 for web crawling Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Parsing JSON files using PySpark and applying cleaning extracting objects for transformations ready Performance tuning for data warehouse queries and indexes Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase mongoDB Agile RabbitMQ SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Sr Python Developer Hudson Insurance Alpharetta GA August 2016 to November 2018 Description It is a worldwide financial group with diverse group of companies spanning in 19 countries Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Experience with ORMs such as Django and SQLAlchamy database design and normalization Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries DNS 53 bed facility Responsible for the delivery of nursing services to include planning implementing and evaluating the care plan of each resident to maximize resident quality of life and quality of care with the integration of resident rights Created numerous Django apps and extensively used Django Session and authentication management Created new connections through applications for better access to MySQL database and involved in writing several SQLPLSQL functions sequences stored procedures triggers cursors and object types Worked as ADNS infection control wound care Site Reliability Engineering responsibilities for Kafka platform that scales 2 GBSec and 20 Million messagessec Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Develop consumerbased features and applications using Django HTML Python Behavior Driven Development BDD and pairbased programming Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript Bootstrap and Rspec Used numerous JQuery third party libraries in Django framework feedback plugin photo light sociallikes jQuery tables slick grid and google charts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Implemented LDAP authentication using device to integrate with an inplace web sealTAM infrastructure Extensive experience of working on Management tool and Automation tools HP Quality Center and Selenium Implemented product used to replace a large Nagios based monitoring system that was used to control Just In Time manufacturing of interior parts and exhaust systems Our Continuous Integration stack consists of GIT Jenkins CICD the Docker Trusted Registry and OpenShift Enterprise Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning This project also used other technologies like JQuery for JavaScript manipulations bootstrap for the frontend html layout Understood the project scope identified activities tasks task level estimates schedule dependencies risks and provided inputs to Module Lead for review Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Rspec Cucumber Swagger Jr Python Developer Office Depot Boca Raton FL May 2014 to July 2016 Description Western Digital Corporation is an American computer data storage company and one of the largest computer hard disk drive manufacturers in the world Thrives for innovation Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML NodeJS XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Developed embedded firmware in C to create custom images on OscilloscopeDSP Digital Communication Adaptive Targeted to pique interest on DSP and embedded systems for beginners Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Enabling of the embedded Linux systems to support the development of the enterprise the network Unified Thread Management UTM products Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python 2627 JavaScript Django Framework 13 SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server PHP Lamp underscore JS SQL developer tool Full Stack Python Developer Fannie Mae Washington DC September 2012 to April 2014 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Hca Parallon Nashville TN October 2011 to August 2012 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Confier Health solutions Dallas TX August 2010 to September 2011 Description Pharmacy health care provider in united states The company ranks 18th on Fortune 500 CVS Healths assets include CVS Pharmacy CVS Caremark CVS Specialty and retail clinic MinuteClinic Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in working with Python ORM Libraries including Django ORM Worked on integrating python with Web development tools and Web Services Experience with Django and Flask a highlevel Python Web framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed User Interfaces using JQuery Bootstrap JavaScript CSS3 XML and HTML5 Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Developed server side using PHP in both WAMP and LAMP server framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Created a simple AWS Lambda function using python for deployment management in AWS Design investigation and implementation of public facing websites on Amazon Web Services AWS Designed web UI components for various modules and used JavaScript for clientside validation Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Assist in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Used Golang to log the different host system event and alert information to Cassandra database Deployed Core OS Kubernetes Clusters to manage Docker containers in the production environment with light weight Docker Images as base files Developed microservices on boarding tools leveraging Python and VSTS allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Worked on different data formats such as JSON XML and performed machine learning algorithms in Python Used pandas numpy seaborn matplotlib scikitlearn scipy NLTK in Python for developing various machine learning algorithms Working in oauth group to support 2leg and 3leg oauth including OIDC protocol Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Deployed on AWS EC2 using nginx and gunicorn Built a scalable cost effective and fault tolerant data ware house system on Amazon EC2 Cloud Developed MapReduceEMR jobs to analyze the data and provide heuristics and reports The heuristics were used for improving campaign targeting and efficiency Developed a functional design of AWS Elastic Map Reduce EMR specifications with respect to business requirements and technology alternatives Configuration of AWS EC2 Auto Scaling groups and auto scaling policies Developed PySpark code to read data from Hive group the fields and generate XML files Involved in front end and utilized Bootstrap and AngularJS for page design Involved in Developing a Restful APIS service using Python Flask framework Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Environment Python 30 Pycharm Django Docker Amazon Web Services AWS Lambda AWS S3 JQuery PyQuery MySQL HTML5 CSS3 JavaScript Ajax XML Restful Web Services JSON Bootstrap AngularJS NodeJS Flask SQL MySQL Jenkins Ansible Git GitHub Linux Education Bachelors Skills C Django Git Html Php Python Flask Visio Mysql Oracle Postgresql Sql Apache Linux Eclipse Java jquery Soap Mongodb Css CertificationsLicenses Drivers License Additional Information Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile tprof gprof Methodologies Agile Scrum Waterfall",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "UBS",
        "Chicago",
        "IL",
        "8Years",
        "work",
        "experience",
        "Analysis",
        "Design",
        "Big",
        "Data",
        "Web",
        "Application",
        "Development",
        "Management",
        "Implementation",
        "stand",
        "enterprise",
        "applications",
        "Experience",
        "serverside",
        "technologies",
        "APIs",
        "MVCMVT",
        "design",
        "patterns",
        "DjangoFlask",
        "frameworks",
        "MVW",
        "frameworks",
        "Django",
        "JavaScript",
        "JQuery",
        "applications",
        "Python",
        "Django",
        "PHP",
        "XML",
        "CSS5",
        "HTML",
        "DHTML",
        "JavaScript",
        "RabbitMQ",
        "Jdk17",
        "Experience",
        "project",
        "deployment",
        "JenkinsHeroku",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "understanding",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "Agile",
        "SCRUM",
        "Waterfall",
        "methodologies",
        "NoSQL",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "Postgre",
        "SQL",
        "MySQL",
        "web",
        "application",
        "Python",
        "Django",
        "AWS",
        "J2EE",
        "Postgre",
        "SQL",
        "MySQL",
        "Oracle",
        "g",
        "MongoDB",
        "Azure",
        "Iaas",
        "machines",
        "VMs",
        "Cloud",
        "services",
        "PaaS",
        "role",
        "instances",
        "VNets",
        "DNS",
        "research",
        "creation",
        "implementation",
        "assessment",
        "policies",
        "procedures",
        "expertise",
        "Golang",
        "programming",
        "invoicing",
        "web",
        "application",
        "Golang",
        "PostgreSQL",
        "Expertise",
        "Devops",
        "Release",
        "engineering",
        "Configuration",
        "Management",
        "Cloud",
        "Infrastructure",
        "Automation",
        "Jenkins",
        "Chef",
        "Puppet",
        "Hands",
        "Experience",
        "Hadoop",
        "ecosystem",
        "HDFS",
        "Spark",
        "Hive",
        "Pig",
        "Sqoop",
        "Impala",
        "Oozie",
        "Flume",
        "Kafka",
        "HBase",
        "ZooKeeper",
        "MapReduce",
        "Reactjs",
        "React",
        "Flux",
        "architecture",
        "Experience",
        "SAS",
        "Functions",
        "SAS",
        "Procedures",
        "Macros",
        "data",
        "updates",
        "data",
        "cleansing",
        "Resolution",
        "problems",
        "Bluetooth",
        "framework",
        "ARMCortexA9",
        "platforms",
        "Windows",
        "Compact",
        "system",
        "Adept",
        "SAS",
        "Enterprise",
        "Guide",
        "day",
        "day",
        "programming",
        "SAS",
        "knowledge",
        "Experience",
        "mod_perl",
        "development",
        "Perl",
        "CGI",
        "Object",
        "Perl",
        "JavaScript",
        "HTML",
        "CSS",
        "Indepth",
        "experience",
        "VMware",
        "VirtualBox",
        "Open",
        "stack",
        "Azure",
        "Amazon",
        "Cloud",
        "Services",
        "security",
        "groups",
        "AWS",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "Designing",
        "Administration",
        "Cloud",
        "Solutions",
        "Iaas",
        "VMware",
        "vRAvCAC",
        "vRO",
        "vROps",
        "PowerCLI",
        "environment",
        "Proficient",
        "Machine",
        "DataText",
        "Mining",
        "Statistical",
        "Analysis",
        "Predictive",
        "Modeling",
        "Experience",
        "container",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "knowledge",
        "containerization",
        "orchestration",
        "Kubernetes",
        "products",
        "CS",
        "Tool",
        "Configuration",
        "Tool",
        "Restli",
        "Gateway",
        "workflow",
        "actions",
        "Spark",
        "Linux",
        "script",
        "HIVE",
        "scripts",
        "HBase",
        "loads",
        "publicprivate",
        "cloud",
        "infrastructures",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "VPC",
        "Lambda",
        "ELB",
        "Cloud",
        "Watch",
        "IAM",
        "Python",
        "PySpark",
        "datasets",
        "Hands",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "Amazon",
        "EC2S3",
        "Handson",
        "experience",
        "UNIX",
        "Linux",
        "Kernels",
        "Hadoop",
        "file",
        "formats",
        "Parquet",
        "compression",
        "techniques",
        "gzip",
        "Snappy",
        "data",
        "models",
        "machine",
        "techniques",
        "Classification",
        "Regression",
        "Clustering",
        "Associative",
        "mining",
        "Support",
        "Agile",
        "CICD",
        "Environment",
        "Devops",
        "tools",
        "Jira",
        "Bitbucket",
        "layer",
        "support",
        "tools",
        "issues",
        "PySpark",
        "code",
        "data",
        "Hive",
        "group",
        "fields",
        "XML",
        "files",
        "Object",
        "Relation",
        "Mappings",
        "Hibernate",
        "JDBC",
        "Spring",
        "JDBC",
        "Spring",
        "Data",
        "RDMS",
        "Oracle",
        "DB2",
        "MySQL",
        "NoSQL",
        "redshift",
        "Cassandra",
        "Experience",
        "field",
        "Data",
        "warehouse",
        "ETL",
        "tools",
        "Informatica",
        "Power",
        "Center",
        "Power",
        "Mart",
        "databases",
        "DB2",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "Teradata",
        "PEP8",
        "standard",
        "program",
        "test",
        "cases",
        "validity",
        "effectiveness",
        "code",
        "PyChecker",
        "Pylint",
        "build",
        "tools",
        "Buck",
        "BitBake",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Boot",
        "Grunt",
        "GNU",
        "Pandas",
        "library",
        "Python",
        "analysis",
        "Software",
        "experience",
        "Python",
        "CC",
        "Linux",
        "Windows",
        "Crossplatform",
        "systems",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "Google",
        "GWT",
        "Rational",
        "Application",
        "Developer",
        "practices",
        "WebIntelligence",
        "Reports",
        "BOBJ",
        "Universe",
        "Design",
        "throughput",
        "Experience",
        "Amazon",
        "web",
        "Services",
        "EC2",
        "S3",
        "SQS",
        "RDS",
        "Lambda",
        "Experience",
        "Jenkins",
        "Bamboo",
        "tools",
        "integration",
        "deployment",
        "UI",
        "Design",
        "Development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Nodejs",
        "Bootstrap",
        "AJAX",
        "W3C",
        "Web",
        "standards",
        "facets",
        "application",
        "development",
        "web",
        "servers",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Java",
        "C",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Pythons",
        "modules",
        "NumPy",
        "Pickle",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "data",
        "creation",
        "histograms",
        "ability",
        "team",
        "environment",
        "Communicator",
        "Work",
        "management",
        "staff",
        "personnel",
        "levels",
        "customers",
        "vendors",
        "public",
        "United",
        "States",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "UBS",
        "Chicago",
        "IL",
        "January",
        "Present",
        "Description",
        "Five9",
        "provider",
        "contact",
        "center",
        "software",
        "Five9",
        "software",
        "customer",
        "interactions",
        "contact",
        "center",
        "productivity",
        "capital",
        "expense",
        "maintenance",
        "costs",
        "systems",
        "Responsibilities",
        "python",
        "NumPy",
        "SciPy",
        "PyTables",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "tasks",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "Framework",
        "APIs",
        "Web",
        "Applications",
        "desktop",
        "users",
        "Python",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Git",
        "Command",
        "Line",
        "Redis",
        "Graphic",
        "Design",
        "Softwares",
        "programs",
        "testing",
        "RAID",
        "controller",
        "firmware",
        "utilities",
        "Python",
        "Java",
        "Bash",
        "script",
        "Windows",
        "command",
        "line",
        "Developed",
        "GUI",
        "website",
        "HTML5",
        "CSS3",
        "Typescript",
        "Angular",
        "2",
        "Reactjs",
        "Bootstrap",
        "JSON",
        "availability",
        "Iaas",
        "VMs",
        "PaaS",
        "role",
        "instances",
        "access",
        "services",
        "VNet",
        "Azure",
        "Internal",
        "Load",
        "Balancer",
        "Building",
        "Command",
        "line",
        "tool",
        "API",
        "Golang",
        "Creating",
        "Reactjs",
        "Flux",
        "Redux",
        "UI",
        "Nodejs",
        "applications",
        "Build",
        "React",
        "components",
        "functions",
        "pages",
        "user",
        "functions",
        "PySpark",
        "user",
        "churn",
        "prediction",
        "model",
        "user",
        "behavior",
        "data16",
        "G",
        "PySpark",
        "ML",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "web",
        "product",
        "features",
        "React",
        "JS",
        "SASS",
        "Golang",
        "REST",
        "ETLSSIS",
        "TSQL",
        "procedures",
        "data",
        "OLTP",
        "area",
        "data",
        "marts",
        "action",
        "XML",
        "PostgreSQL",
        "database",
        "information",
        "Scala",
        "NLP",
        "pipeline",
        "knowledge",
        "machine",
        "algorithms",
        "metricdriven",
        "data",
        "analysis",
        "NLP",
        "application",
        "layer",
        "project",
        "Ruby",
        "custom",
        "frameworkMojo",
        "APIs",
        "client",
        "system",
        "Autodesk",
        "Experience",
        "Hadoop",
        "ecosystem",
        "components",
        "HDFS",
        "Spark",
        "Scala",
        "pythonZookeeper",
        "Yarn",
        "MapReduce",
        "Pig",
        "Sqoop",
        "HBase",
        "Hive",
        "Flume",
        "Cassandra",
        "MongoDB",
        "Oozie",
        "Kafka",
        "Flume",
        "TEZ",
        "Developing",
        "maintenance",
        "web",
        "application",
        "features",
        "administrators",
        "users",
        "Ruby",
        "Rails",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Written",
        "Programs",
        "Spark",
        "Scala",
        "Python",
        "Data",
        "quality",
        "Build",
        "Apache",
        "Kafka",
        "Multinode",
        "Cluster",
        "Kafka",
        "Manager",
        "Clusters",
        "Built",
        "Data",
        "Ingestion",
        "Microservice",
        "data",
        "RabbitMQ",
        "data",
        "Developed",
        "Data",
        "Processor",
        "Microservice",
        "data",
        "RabbitMQ",
        "process",
        "data",
        "trigger",
        "actions",
        "data",
        "NLP",
        "libraries",
        "Gensim",
        "TextBlob",
        "spaCy",
        "cross",
        "browser",
        "compilation",
        "web",
        "design",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "PySpark",
        "code",
        "spark",
        "Impyla",
        "Performed",
        "installation",
        "Impyla",
        "Edge",
        "node",
        "PySpark",
        "jobs",
        "multi",
        "node",
        "spark",
        "cluster",
        "UDF",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "data",
        "solutions",
        "Hadoop",
        "Review",
        "Automation",
        "scripts",
        "test",
        "cases",
        "requirements",
        "Regression",
        "suites",
        "JavaScript",
        "MVC",
        "frameworks",
        "AngularJS",
        "OpenStack",
        "Django",
        "Rest",
        "framework",
        "REST",
        "APIs",
        "Jira",
        "Jira",
        "Rest",
        "API",
        "packages",
        "soup",
        "data",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "files",
        "PySpark",
        "cleaning",
        "objects",
        "transformations",
        "Performance",
        "data",
        "warehouse",
        "queries",
        "indexes",
        "Environment",
        "Python",
        "Django",
        "XML",
        "Hadoop",
        "pig",
        "hive",
        "PySpark",
        "AWS",
        "HDFS",
        "HBase",
        "mongoDB",
        "Agile",
        "RabbitMQ",
        "PyUnit",
        "Apache",
        "CSS",
        "MySQL",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Git",
        "Linux",
        "Unix",
        "Windows",
        "Sr",
        "Python",
        "Developer",
        "Hudson",
        "Insurance",
        "Alpharetta",
        "GA",
        "August",
        "November",
        "Description",
        "group",
        "group",
        "companies",
        "countries",
        "Responsibilities",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "Experience",
        "ORMs",
        "Django",
        "SQLAlchamy",
        "database",
        "design",
        "normalization",
        "MVT",
        "pattern",
        "interactions",
        "roles",
        "developer",
        "roles",
        "object",
        "components",
        "services",
        "multitiers",
        "boundaries",
        "DNS",
        "bed",
        "facility",
        "delivery",
        "nursing",
        "services",
        "care",
        "plan",
        "resident",
        "quality",
        "life",
        "quality",
        "care",
        "integration",
        "rights",
        "Django",
        "apps",
        "Django",
        "Session",
        "authentication",
        "management",
        "connections",
        "applications",
        "access",
        "MySQL",
        "database",
        "SQLPLSQL",
        "functions",
        "sequences",
        "procedures",
        "cursors",
        "object",
        "types",
        "ADNS",
        "infection",
        "control",
        "wound",
        "care",
        "Site",
        "Reliability",
        "Engineering",
        "responsibilities",
        "Kafka",
        "platform",
        "GBSec",
        "messagessec",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "Python",
        "Develop",
        "features",
        "applications",
        "Django",
        "HTML",
        "Python",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Rspec",
        "JQuery",
        "party",
        "libraries",
        "Django",
        "framework",
        "feedback",
        "photo",
        "light",
        "jQuery",
        "tables",
        "grid",
        "google",
        "charts",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "AmazonCloud",
        "LDAP",
        "authentication",
        "device",
        "inplace",
        "web",
        "infrastructure",
        "experience",
        "Management",
        "tool",
        "Automation",
        "tools",
        "HP",
        "Quality",
        "Center",
        "Selenium",
        "product",
        "Nagios",
        "system",
        "Time",
        "manufacturing",
        "parts",
        "exhaust",
        "systems",
        "Continuous",
        "Integration",
        "stack",
        "GIT",
        "Jenkins",
        "CICD",
        "Docker",
        "Trusted",
        "Registry",
        "OpenShift",
        "Enterprise",
        "Wrote",
        "script",
        "IP",
        "address",
        "CIDR",
        "files",
        "machine",
        "project",
        "technologies",
        "JQuery",
        "JavaScript",
        "manipulations",
        "bootstrap",
        "frontend",
        "html",
        "layout",
        "Understood",
        "project",
        "scope",
        "activities",
        "task",
        "level",
        "schedule",
        "dependencies",
        "risks",
        "inputs",
        "Module",
        "Lead",
        "review",
        "Environment",
        "Python",
        "Django",
        "Linux",
        "HTML5",
        "CSS",
        "Bootstrap",
        "MySQL",
        "SQL",
        "PLSQL",
        "XML",
        "Heroku",
        "JavaScript",
        "JQuery",
        "JSP",
        "JSON",
        "API",
        "MVC",
        "architecture",
        "EC2",
        "GitHub",
        "Rspec",
        "Cucumber",
        "Swagger",
        "Jr",
        "Python",
        "Developer",
        "Office",
        "Depot",
        "Boca",
        "Raton",
        "FL",
        "May",
        "July",
        "Description",
        "Western",
        "Digital",
        "Corporation",
        "computer",
        "data",
        "storage",
        "company",
        "computer",
        "disk",
        "drive",
        "manufacturers",
        "world",
        "Thrives",
        "innovation",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "NodeJS",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MySQL",
        "Django",
        "APIs",
        "database",
        "access",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "firmware",
        "C",
        "custom",
        "images",
        "OscilloscopeDSP",
        "Digital",
        "Communication",
        "Adaptive",
        "Targeted",
        "pique",
        "interest",
        "DSP",
        "systems",
        "beginners",
        "development",
        "SQL",
        "procedures",
        "trigger",
        "function",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "Enabling",
        "Linux",
        "systems",
        "development",
        "enterprise",
        "network",
        "Unified",
        "Thread",
        "Management",
        "UTM",
        "products",
        "PhP",
        "language",
        "lamp",
        "server",
        "page",
        "interaction",
        "page",
        "MS",
        "SQL",
        "developer",
        "tools",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "PHP",
        "Lamp",
        "JS",
        "SQL",
        "developer",
        "tool",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Fannie",
        "Mae",
        "Washington",
        "DC",
        "September",
        "April",
        "Description",
        "Financial",
        "company",
        "mortgages",
        "family",
        "family",
        "buildings",
        "banks",
        "housing",
        "loan",
        "companies",
        "Responsibilities",
        "part",
        "UI",
        "Java",
        "spring",
        "framework",
        "javascript",
        "jquery",
        "reporting",
        "system",
        "Java",
        "J2EE",
        "Servlets",
        "EJB",
        "JSP",
        "Spring",
        "framework",
        "HTML",
        "JavaScript",
        "python",
        "code",
        "cx_oracle",
        "data",
        "oracle",
        "database",
        "data",
        "data",
        "models",
        "data",
        "data",
        "models",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "using",
        "Python",
        "OS",
        "module",
        "Linux",
        "environment",
        "job",
        "cloning",
        "Worked",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Worked",
        "Element",
        "Tree",
        "XMLAPI",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "database",
        "XML",
        "documents",
        "SAS",
        "data",
        "models",
        "Base",
        "SAS",
        "SAS",
        "Macros",
        "Modified",
        "SAS",
        "datasets",
        "input",
        "sources",
        "files",
        "CSV",
        "formats",
        "reports",
        "tables",
        "SAS",
        "datasets",
        "data",
        "SAS",
        "SAS",
        "Enterprise",
        "Guide",
        "UNIX",
        "Platform",
        "data",
        "data",
        "source",
        "migration",
        "Netezza",
        "SAS",
        "Modified",
        "SAS",
        "programs",
        "programs",
        "SAS",
        "variables",
        "ease",
        "speed",
        "modification",
        "consistency",
        "results",
        "JUnit",
        "test",
        "cases",
        "Java",
        "components",
        "Java",
        "MultiThreading",
        "part",
        "component",
        "thread",
        "user",
        "Developed",
        "Project",
        "Specific",
        "Java",
        "APIs",
        "requirements",
        "usage",
        "Data",
        "Structures",
        "Algorithmsand",
        "Core",
        "Java",
        "OOPS",
        "concepts",
        "QA",
        "Manager",
        "Team",
        "lead",
        "developer",
        "automation",
        "script",
        "test",
        "area",
        "test",
        "cases",
        "testing",
        "steps",
        "GUI",
        "components",
        "test",
        "execution",
        "system",
        "Integration",
        "testing",
        "regression",
        "testing",
        "preUAT",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Response",
        "Time",
        "Baseline",
        "Performance",
        "Load",
        "Stress",
        "Endurance",
        "Good",
        "Experience",
        "Database",
        "Backups",
        "Recovery",
        "Strategies",
        "Expert",
        "experience",
        "Hot",
        "Cold",
        "Backup",
        "databases",
        "transformations",
        "Mapplets",
        "Informatica",
        "Extract",
        "Transform",
        "load",
        "ETL",
        "data",
        "Data",
        "marts",
        "Enterprise",
        "Data",
        "warehouse",
        "EDW",
        "data",
        "store",
        "ODS",
        "ETL",
        "SSIS",
        "jobs",
        "cleaning",
        "transforming",
        "loading",
        "data",
        "data",
        "warehouse",
        "Wrote",
        "PLSQL",
        "procedures",
        "cursors",
        "business",
        "rules",
        "transformations",
        "Oracle",
        "replication",
        "views",
        "scripts",
        "process",
        "replication",
        "knowledge",
        "Oracle",
        "utilities",
        "SQLLoader",
        "ExportImport",
        "Data",
        "Pump",
        "External",
        "Table",
        "Environment",
        "Python",
        "Base",
        "SAS",
        "SAS",
        "Macros",
        "oracle",
        "database",
        "SAS",
        "Enterprise",
        "guide",
        "JQuery",
        "MySQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Toad",
        "XML",
        "Restful",
        "Web",
        "Services",
        "JSON",
        "Bootstrap",
        "SQL",
        "Jenkins",
        "Jira",
        "confluence",
        "eclipse",
        "Linux",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Hca",
        "Parallon",
        "Nashville",
        "TN",
        "October",
        "August",
        "Description",
        "Financial",
        "company",
        "mortgages",
        "family",
        "family",
        "buildings",
        "banks",
        "housing",
        "loan",
        "companies",
        "Responsibilities",
        "part",
        "UI",
        "Java",
        "spring",
        "framework",
        "javascript",
        "jquery",
        "reporting",
        "system",
        "Java",
        "J2EE",
        "Servlets",
        "EJB",
        "JSP",
        "Spring",
        "framework",
        "HTML",
        "JavaScript",
        "python",
        "code",
        "cx_oracle",
        "data",
        "oracle",
        "database",
        "data",
        "data",
        "models",
        "data",
        "data",
        "models",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "using",
        "Python",
        "OS",
        "module",
        "Linux",
        "environment",
        "job",
        "cloning",
        "Worked",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Worked",
        "Element",
        "Tree",
        "XMLAPI",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "database",
        "XML",
        "documents",
        "SAS",
        "data",
        "models",
        "Base",
        "SAS",
        "SAS",
        "Macros",
        "Modified",
        "SAS",
        "datasets",
        "input",
        "sources",
        "files",
        "CSV",
        "formats",
        "reports",
        "tables",
        "SAS",
        "datasets",
        "data",
        "SAS",
        "SAS",
        "Enterprise",
        "Guide",
        "UNIX",
        "Platform",
        "data",
        "data",
        "source",
        "migration",
        "Netezza",
        "SAS",
        "Modified",
        "SAS",
        "programs",
        "programs",
        "SAS",
        "variables",
        "ease",
        "speed",
        "modification",
        "consistency",
        "results",
        "JUnit",
        "test",
        "cases",
        "Java",
        "components",
        "Java",
        "MultiThreading",
        "part",
        "component",
        "thread",
        "user",
        "Developed",
        "Project",
        "Specific",
        "Java",
        "APIs",
        "requirements",
        "usage",
        "Data",
        "Structures",
        "Algorithmsand",
        "Core",
        "Java",
        "OOPS",
        "concepts",
        "QA",
        "Manager",
        "Team",
        "lead",
        "developer",
        "automation",
        "script",
        "test",
        "area",
        "test",
        "cases",
        "testing",
        "steps",
        "GUI",
        "components",
        "test",
        "execution",
        "system",
        "Integration",
        "testing",
        "regression",
        "testing",
        "preUAT",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Response",
        "Time",
        "Baseline",
        "Performance",
        "Load",
        "Stress",
        "Endurance",
        "Good",
        "Experience",
        "Database",
        "Backups",
        "Recovery",
        "Strategies",
        "Expert",
        "experience",
        "Hot",
        "Cold",
        "Backup",
        "databases",
        "transformations",
        "Mapplets",
        "Informatica",
        "Extract",
        "Transform",
        "load",
        "ETL",
        "data",
        "Data",
        "marts",
        "Enterprise",
        "Data",
        "warehouse",
        "EDW",
        "data",
        "store",
        "ODS",
        "ETL",
        "SSIS",
        "jobs",
        "cleaning",
        "transforming",
        "loading",
        "data",
        "data",
        "warehouse",
        "Wrote",
        "PLSQL",
        "procedures",
        "cursors",
        "business",
        "rules",
        "transformations",
        "Oracle",
        "replication",
        "views",
        "scripts",
        "process",
        "replication",
        "knowledge",
        "Oracle",
        "utilities",
        "SQLLoader",
        "ExportImport",
        "Data",
        "Pump",
        "External",
        "Table",
        "Environment",
        "Python",
        "Base",
        "SAS",
        "SAS",
        "Macros",
        "oracle",
        "database",
        "SAS",
        "Enterprise",
        "guide",
        "JQuery",
        "MySQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Toad",
        "XML",
        "Restful",
        "Web",
        "Services",
        "JSON",
        "Bootstrap",
        "SQL",
        "Jenkins",
        "Jira",
        "confluence",
        "eclipse",
        "Linux",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Confier",
        "Health",
        "solutions",
        "Dallas",
        "TX",
        "August",
        "September",
        "Description",
        "Pharmacy",
        "health",
        "care",
        "provider",
        "united",
        "states",
        "company",
        "18th",
        "Fortune",
        "CVS",
        "Healths",
        "assets",
        "CVS",
        "Pharmacy",
        "CVS",
        "Caremark",
        "CVS",
        "Specialty",
        "clinic",
        "MinuteClinic",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "application",
        "Python",
        "Django",
        "MVC",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "python",
        "Web",
        "development",
        "tools",
        "Web",
        "Services",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Designed",
        "User",
        "Interfaces",
        "JQuery",
        "Bootstrap",
        "JavaScript",
        "CSS3",
        "XML",
        "HTML5",
        "Handler",
        "function",
        "Python",
        "AWS",
        "Lambda",
        "service",
        "server",
        "side",
        "PHP",
        "WAMP",
        "LAMP",
        "server",
        "framework",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "integration",
        "methodologies",
        "client",
        "web",
        "portals",
        "software",
        "infrastructure",
        "APIs",
        "vendor",
        "frameworks",
        "Django",
        "Database",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "AWS",
        "Lambda",
        "function",
        "python",
        "deployment",
        "management",
        "AWS",
        "Design",
        "investigation",
        "implementation",
        "websites",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "web",
        "UI",
        "components",
        "modules",
        "JavaScript",
        "validation",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "Assist",
        "migration",
        "SAS",
        "programs",
        "SAS",
        "SAS",
        "datasets",
        "Golang",
        "host",
        "system",
        "event",
        "information",
        "Cassandra",
        "database",
        "Deployed",
        "Core",
        "Kubernetes",
        "Clusters",
        "Docker",
        "containers",
        "production",
        "environment",
        "weight",
        "Docker",
        "Images",
        "base",
        "files",
        "microservices",
        "boarding",
        "tools",
        "Python",
        "VSTS",
        "creation",
        "maintenance",
        "build",
        "jobs",
        "Kubernetes",
        "services",
        "Modified",
        "SAS",
        "datasets",
        "input",
        "sources",
        "files",
        "CSV",
        "formats",
        "reports",
        "tables",
        "SAS",
        "datasets",
        "data",
        "formats",
        "JSON",
        "XML",
        "machine",
        "algorithms",
        "Python",
        "pandas",
        "numpy",
        "matplotlib",
        "NLTK",
        "Python",
        "machine",
        "learning",
        "algorithms",
        "Working",
        "oauth",
        "group",
        "2leg",
        "oauth",
        "OIDC",
        "protocol",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "AWS",
        "EC2",
        "nginx",
        "cost",
        "data",
        "house",
        "system",
        "Amazon",
        "EC2",
        "Cloud",
        "MapReduceEMR",
        "jobs",
        "data",
        "heuristics",
        "heuristics",
        "campaign",
        "efficiency",
        "design",
        "AWS",
        "Elastic",
        "Map",
        "EMR",
        "specifications",
        "respect",
        "business",
        "requirements",
        "technology",
        "alternatives",
        "Configuration",
        "AWS",
        "EC2",
        "Auto",
        "Scaling",
        "groups",
        "auto",
        "scaling",
        "policies",
        "Developed",
        "PySpark",
        "code",
        "data",
        "Hive",
        "group",
        "fields",
        "XML",
        "files",
        "end",
        "Bootstrap",
        "AngularJS",
        "page",
        "design",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Scala",
        "HiveSQL",
        "queries",
        "RDD",
        "transformations",
        "Apache",
        "Spark",
        "Environment",
        "Python",
        "Pycharm",
        "Django",
        "Docker",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Lambda",
        "S3",
        "JQuery",
        "PyQuery",
        "MySQL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Ajax",
        "XML",
        "Restful",
        "Web",
        "Services",
        "JSON",
        "Bootstrap",
        "NodeJS",
        "Flask",
        "SQL",
        "MySQL",
        "Jenkins",
        "Ansible",
        "Git",
        "GitHub",
        "Linux",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "Django",
        "Git",
        "Html",
        "Php",
        "Python",
        "Flask",
        "Visio",
        "Mysql",
        "Oracle",
        "Postgresql",
        "Sql",
        "Apache",
        "Linux",
        "Eclipse",
        "Java",
        "jquery",
        "Soap",
        "Mongodb",
        "Css",
        "CertificationsLicenses",
        "Drivers",
        "License",
        "Additional",
        "Information",
        "Technical",
        "skills",
        "Operating",
        "Systems",
        "Linux",
        "Mac",
        "Programming",
        "Languages",
        "Python",
        "2X",
        "Python",
        "3X",
        "C",
        "C",
        "Java",
        "SQL",
        "PHP",
        "Web",
        "technologies",
        "HTML",
        "CSS",
        "XHTML",
        "Java",
        "Script",
        "jQuery",
        "Webserver",
        "Web",
        "logic",
        "Apache",
        "Tomcat",
        "NGINX",
        "MySQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "MongoDB",
        "Python",
        "Web",
        "frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "web2Py",
        "Development",
        "IDE",
        "PyCharm",
        "Pydev",
        "Eclipse",
        "Vim",
        "MS",
        "Visio",
        "Sublime",
        "Text",
        "Notepad",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "Version",
        "Control",
        "GitHub",
        "Sub",
        "Version",
        "Build",
        "Tools",
        "GNU",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Buck",
        "BitBake",
        "Boot",
        "Grunt",
        "Cloud",
        "Frameworks",
        "stack",
        "Helion",
        "Virtualization",
        "Platforms",
        "KVM",
        "HPVM",
        "Dockers",
        "Profiling",
        "Tools",
        "Cprofile",
        "profile",
        "tprof",
        "gprof",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:27:34.525146",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer UBS Chicago IL Over 8Years of combined work experience in Analysis Design Big Data Web Application Development Management and Implementation of various stand alone clientserver enterprise applications Experience in implementing serverside technologies with RESTful APIs and MVCMVT design patterns using DjangoFlask frameworks Experienced in MVW frameworks like Django JavaScript and JQuery Experienced in developing webbased applications using Python Django PHP XML CSS5 HTML DHTML JavaScript RabbitMQ Jdk17 Experience in project deployment using JenkinsHeroku and using web services like Amazon Web Services AWS EC2 and AWS S3 Indepth understanding of the principles and best practices of Software Configuration Management in Agile SCRUM Waterfall methodologies Experienced in NoSQL databases like MongoDB Cassandra and relational databases like Oracle SQLite Postgre SQL and MySQL databases Built the web application by using Python Django AWS J2EE Postgre SQL MySQL Oracle 10g and MongoDB Deployed Azure Iaas virtual machines VMs and Cloud services PaaS role instances into secure VNets and subnets Assist DNS with research creation implementation and assessment of policies and procedures Good expertise in Golang programming Programmed the invoicing web application using Golang and PostgreSQL as the backend Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Hands on Experience in Hadoop ecosystem including HDFS Spark Hive Pig Sqoop Impala Oozie Flume Kafka HBase ZooKeeper MapReduce Experienced in Reactjs and working with React Flux architecture Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Resolution of problems in the Bluetooth framework in an ARMCortexA9 based automotive platforms running the Windows Embedded Compact 7 system Adept in using SAS Enterprise Guide for performing day to day programming in SAS Extensive knowledge and Experience in dealing with mod_perl development in Perl CGI Object oriented Perl JavaScript HTML and CSS Indepth experience with VMware VirtualBox Open stack Azure and Amazon Cloud Services and managing security groups in AWS Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in Assessing Designing and Administration of Cloud Solutions Iaas based on VMware vRAvCAC vRO vROps PowerCLI in distributed environment Proficient in Machine learning DataText Mining Statistical Analysis Predictive Modeling Experience with container based deployments using Docker working with Docker images Docker Hub and Docker registries and have knowledge on containerization orchestration using Kubernetes Worked on different products like CS Tool Configuration Tool Restli Gateway Developed OOZie workflow on actions Spark Linux script HIVE scripts and HBase loads Designed configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services including EC2 VPC Lambda ELB Cloud Watch and IAM Used Python and PySpark to scrape clean and analyze large datasets Hands on SVN Git JIRA Bugzilla Amazon EC2S3 Handson experience in UNIX and Linux Kernels Worked with different Hadoop file formats like Parquet and compression techniques like gzip Snappy Experienced in building data models using machine learning techniques for Classification Regression Clustering and Associative mining Support an Agile CICD Environment with Devops where we make the Atlassian tools Jira and Bitbucket and also provide layer 3 support on these tools if there are any issues Developed PySpark code to read data from Hive group the fields and generate XML files Experienced in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Strongly followed PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Experienced with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Used Pandas library in Python for statistical analysis Software experience in Python CC on Linux Windows Crossplatform and embedded systems Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Implemented best practices of WebIntelligence Reports and BOBJ Universe Design to attain maximum throughput Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experienced in UI Design and Development using HTML5 CSS3 JavaScript jQuery Nodejs Bootstrap and AJAX that follows W3C Web standards successfully managing all facets of application development Experienced with web servers like Apache Tomcat Web logic Experience in objectoriented programming OOP concepts using Python Java C Experience with Unit testing Test driven Development TDD Load Testing Experienced in Pythons modules NumPy MatPlotLib Pickle PySide Scipy wxPython PyTables etc for generating complex graphical data creation of histograms etc Proven ability to work in team environment as well as independently Effective Communicator Work well with management staff and personnel at all levels Equally comfortable dealing with customers vendors and the general public Authorized to work in United States for any employer Work Experience Sr Python Developer UBS Chicago IL January 2019 to Present Description Five9 is the leading provider of cloud contact center software Five9 software creates more successful customer interactions while increasing contact center productivity without the capital expense and maintenance costs of premisebased systems Responsibilities Implemented different python libraries NumPy SciPy PyTables matplotlib pythontwitter Pandas data frame and urllib2 in various tasks Responsible for using Django a highlevel Python Web Framework to build powerful APIs and Web Applications for desktop and mobile users using Python HTML5 CSS3 JavaScript Git Command Line Redis and Graphic Design Softwares Developed programs to automate the testing of RAID controller firmware and utilities using Python Java Bash script Windows command line Developed GUI of the website using HTML5 CSS3 Typescript Angular 2 Reactjs Bootstrap and JSON Provided high availability for Iaas VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer Building a Command line tool to interact with RESTful API using in Golang Creating Reactjs Flux Redux frontend UI and Nodejs applications for backend Build React components and standalone functions to be added to any future pages Implemented designed and coded python user defined functions in PySpark Built user churn prediction model based on user behavior data16G using PySpark ML Followed Agile Methodologies and SCRUM Process Developed responsive web product features using React JS SASS on Golang with REST Used ETLSSIS and TSQL stored procedures to transfer data from OLTP databases to staging area and finally transfer into data marts and performed action in XML Designed developed and integrated a PostgreSQL database of ontological information with a proprietary Scala based NLP pipeline Developed strong knowledge of machine learning algorithms metricdriven data set analysis and NLP techniques The application layer for this project is Ruby which has a custom frameworkMojo to build APIs which can be consumed by other client in the internal system of Autodesk Experience in the Hadoop ecosystem components like HDFS Spark with Scala and pythonZookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Developing and maintenance of new and existing web application features for both internal administrators and end users using Ruby on Rails Experience with Unit testing Test driven Development TDD Load Testing Written Programs in Spark using Scala and Python for Data quality check Build Apache Kafka Multinode Cluster and used Kafka Manager to monitor multiple Clusters Built Data Ingestion Microservice to accept and validate raw metric data and publish to RabbitMQ as data Developed Data Processor Microservice to subscribe data from RabbitMQ process data and trigger actions and persist data to MongoDB Used various NLP libraries like Gensim TextBlob spaCy Worked on cross browser compilation and responsive web design using HTML5 CSS3 and Bootstrap Enhanced the PySpark code to replace spark with Impyla Performed installation for Impyla on the Edge node Created planned and executed multithreading PySpark jobs on multi node spark cluster with UDF Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for building scalable distributed data solutions using Hadoop Review of the Automation scripts to make sure all the manual test cases and requirements are covered in the Regression suites Worked on JavaScript MVC frameworks like AngularJS OpenStack Used Django Rest framework for creating REST APIs and interacted with Jira using Jira Rest API Used other packages such as Beautiful soup for data parsing Used Python modules such as requests urllib urllib2 for web crawling Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Parsing JSON files using PySpark and applying cleaning extracting objects for transformations ready Performance tuning for data warehouse queries and indexes Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase mongoDB Agile RabbitMQ SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Sr Python Developer Hudson Insurance Alpharetta GA August 2016 to November 2018 Description It is a worldwide financial group with diverse group of companies spanning in 19 countries Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Experience with ORMs such as Django and SQLAlchamy database design and normalization Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries DNS 53 bed facility Responsible for the delivery of nursing services to include planning implementing and evaluating the care plan of each resident to maximize resident quality of life and quality of care with the integration of resident rights Created numerous Django apps and extensively used Django Session and authentication management Created new connections through applications for better access to MySQL database and involved in writing several SQLPLSQL functions sequences stored procedures triggers cursors and object types Worked as ADNS infection control wound care Site Reliability Engineering responsibilities for Kafka platform that scales 2 GBSec and 20 Million messagessec Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Develop consumerbased features and applications using Django HTML Python Behavior Driven Development BDD and pairbased programming Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript Bootstrap and Rspec Used numerous JQuery third party libraries in Django framework feedback plugin photo light sociallikes jQuery tables slick grid and google charts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Implemented LDAP authentication using device to integrate with an inplace web sealTAM infrastructure Extensive experience of working on Management tool and Automation tools HP Quality Center and Selenium Implemented product used to replace a large Nagios based monitoring system that was used to control Just In Time manufacturing of interior parts and exhaust systems Our Continuous Integration stack consists of GIT Jenkins CICD the Docker Trusted Registry and OpenShift Enterprise Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning This project also used other technologies like JQuery for JavaScript manipulations bootstrap for the frontend html layout Understood the project scope identified activities tasks task level estimates schedule dependencies risks and provided inputs to Module Lead for review Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Rspec Cucumber Swagger Jr Python Developer Office Depot Boca Raton FL May 2014 to July 2016 Description Western Digital Corporation is an American computer data storage company and one of the largest computer hard disk drive manufacturers in the world Thrives for innovation Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML NodeJS XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Developed embedded firmware in C to create custom images on OscilloscopeDSP Digital Communication Adaptive Targeted to pique interest on DSP and embedded systems for beginners Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Enabling of the embedded Linux systems to support the development of the enterprise the network Unified Thread Management UTM products Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python 2627 JavaScript Django Framework 13 SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server PHP Lamp underscore JS SQL developer tool Full Stack Python Developer Fannie Mae Washington DC September 2012 to April 2014 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Hca Parallon Nashville TN October 2011 to August 2012 Description Financial company that buys mortgages of single family and multi family buildings from different banks and housing loan companies Responsibilities Developed a part of UI using Java spring framework JSPs javascript jquery Developed a webbased reporting system with Java J2EE Servlets EJB and JSP using Spring framework HTML JavaScript Developed python code using cx_oracle to retrieve data from oracle database also retreived data from different data models and pass the data through other data models Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Build numerous Lambda functions using python and automated the process using the event created With using of Python OS module on Linux environment made job cloning and forking Worked on Python scripts to parse JSON documents and load the data in database Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked on Element Tree XMLAPI in Python to parse XML documents and load data into database and also from database to XML documents Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Responsible for manipulating transferring managing and processing financial data in SAS using SAS Enterprise Guide under UNIX Platform Worked on validating data resulting from data source migration from Netezza to SAS Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Generated JUnit test cases for testing various Java components Handed Java MultiThreading part in backend component one thread will be running for each user Developed Project Specific Java APIs for the new requirements with the Effective usage of Data Structures Algorithmsand Core Java OOPS concepts Worked closely with the QA Manager Team lead and developer to evaluate and enhance automation script to cover test area and test cases Developed testing steps for GUI components Involved in test execution and performed system Integration testing and regression testing Involved in preUAT Used Test driven approach TDD for developing services required for the application Response Time was monitored while running Baseline Performance Load Stress and Endurance testing Good Experience in Database Backups and Recovery Strategies and Expert experience in Hot and Cold Backup of databases Developed Complex transformations Mapplets using Informatica to Extract Transform and load ETL data into Data marts Enterprise Data warehouse EDW and Operational data store ODS Used ETL SSIS to develop jobs for extracting cleaning transforming and loading data into data warehouse Wrote PLSQL stored procedures triggers cursors for implementing business rules and transformations Setting up Oracle read only replication with materialized views and developed scripts for automating the rebuilt process of replication Strong knowledge of Oracle utilities like SQLLoader ExportImport Data Pump and External Table Environment Python 27 Base SAS SAS Macros oracle database SAS Enterprise guide putty JQuery winscp MySQL HTML5 CSS3 JavaScript Toad XML Restful Web Services JSON Bootstrap SQL Jenkins Jira confluence eclipse intellij Linux Full Stack Python Developer Confier Health solutions Dallas TX August 2010 to September 2011 Description Pharmacy health care provider in united states The company ranks 18th on Fortune 500 CVS Healths assets include CVS Pharmacy CVS Caremark CVS Specialty and retail clinic MinuteClinic Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in working with Python ORM Libraries including Django ORM Worked on integrating python with Web development tools and Web Services Experience with Django and Flask a highlevel Python Web framework Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed User Interfaces using JQuery Bootstrap JavaScript CSS3 XML and HTML5 Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Developed server side using PHP in both WAMP and LAMP server framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Created a simple AWS Lambda function using python for deployment management in AWS Design investigation and implementation of public facing websites on Amazon Web Services AWS Designed web UI components for various modules and used JavaScript for clientside validation Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Assist in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Used Golang to log the different host system event and alert information to Cassandra database Deployed Core OS Kubernetes Clusters to manage Docker containers in the production environment with light weight Docker Images as base files Developed microservices on boarding tools leveraging Python and VSTS allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Worked on different data formats such as JSON XML and performed machine learning algorithms in Python Used pandas numpy seaborn matplotlib scikitlearn scipy NLTK in Python for developing various machine learning algorithms Working in oauth group to support 2leg and 3leg oauth including OIDC protocol Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Deployed on AWS EC2 using nginx and gunicorn Built a scalable cost effective and fault tolerant data ware house system on Amazon EC2 Cloud Developed MapReduceEMR jobs to analyze the data and provide heuristics and reports The heuristics were used for improving campaign targeting and efficiency Developed a functional design of AWS Elastic Map Reduce EMR specifications with respect to business requirements and technology alternatives Configuration of AWS EC2 Auto Scaling groups and auto scaling policies Developed PySpark code to read data from Hive group the fields and generate XML files Involved in front end and utilized Bootstrap and AngularJS for page design Involved in Developing a Restful APIS service using Python Flask framework Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Environment Python 30 Pycharm Django Docker Amazon Web Services AWS Lambda AWS S3 JQuery PyQuery MySQL HTML5 CSS3 JavaScript Ajax XML Restful Web Services JSON Bootstrap AngularJS NodeJS Flask SQL MySQL Jenkins Ansible Git GitHub Linux Education Bachelors Skills C Django Git Html Php Python Flask Visio Mysql Oracle Postgresql Sql Apache Linux Eclipse Java jquery Soap Mongodb Css CertificationsLicenses Drivers License Additional Information Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile tprof gprof Methodologies Agile Scrum Waterfall",
    "unique_id": "f6e2843c-0e70-4b47-a10e-32fe58bed3fc"
}