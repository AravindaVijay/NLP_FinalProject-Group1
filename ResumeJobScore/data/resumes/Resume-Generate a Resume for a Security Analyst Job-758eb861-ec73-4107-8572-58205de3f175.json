{
    "clean_data": "Python Developer Python span lDeveloperspan Python Developer Santander Bank New York NY Work Experience Python Developer Santander Bank September 2017 to Present Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Django SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Python based API RESTful Web Service to track the events and perform Statistical analysis using Django Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Worked with the team in setting up Airflow in distributed mode using Rabbit MQ and Celery for executing the jobs on AWS EC2 Developed programs in Spark based on the application for faster data processing than standard MapReduce Developed spark programs using Scala involved in creating Spark SQLQueries and Developed Ooziest workflow for sparkjobs Performed Unit testing Integration Testing GUI and web application testing using Rspec Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Worked in MySQL database on simple queries and writing Stored Procedures for normalization Environment Python 37 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Fidelity Investments Bostan July 2015 to August 2016 Responsibilities Implemented Python alongside using various libraries such as matPlotLib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Designed and developed Application based on the Flask MVC Framework using MVC design pattern Successfully migrated the Flask database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on zcbuildout and Python Used Test driven approach for developing the application and Implemented the unit tests using python Unit test framework Implemented visualization using Elastic search kibana and LogStash on Apache server Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Handled realtime data feeds through Apache Kafka and designed and Set up environment of MongoDB with shards and replica sets DevTest and Production Provided automation used Configuration Management Tool Chef and Integrate the dynamic pages with JavaScript Bootstrap and jquery to make the pages dynamic Using Ansible inventories to define groups of hosts Exceptional Customer Service Creating Ansible playbooks Using Ansible playbooks to configure systems to a specified state Creating and using Ansible templates to create customized configuration files for hosts technical Support Creating Ansible roles using Ansible Vault in playbooks to protect sensitive data Environment Python 3x27 Flask HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA Jr Software Python Hyderabad Telangana March 2013 to June 2015 Responsibilities Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript ExportedImported data between different data sources using SQL Server Management Studio and maintained program libraries user manuals and technical documentation Built various graphs for business decisionmaking use of Python matPlotLib library and fetched twitter feeds for certain important keyword using Pythontwitter library Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Environment Python 27 Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Quality Center Education Masters in Computer Science Chicago State University Bachelors in Electronics and Communication Engineering JNTU Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years SQL 4 years DJANGO 3 years Additional Information Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years PYTHON 4 years SQL 4 years Technical skills Frameworks Django PyJamas Jython CSS Bootstrap Programming Languages Python C SQL and PLSQL Version Control SVN Git GitHub Bitbucket Databases Oracle 9i 10g 11g RDBMS My SQL DynamoDB Amazon RDS IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating Systems Windows Red hat Linux 4x5x6x Ubuntu Protocols TCPIP HTTPHTTPS SOAP SMTP Deployment Tools Heroku Jenkins Testing Tools Unit test Pytest nose Project Management tools JIRA Scrum",
    "entities": [
        "Flask Designed",
        "Python Bash",
        "SQL Server Management Studio",
        "Python",
        "Developed Ooziest",
        "the Flask MVC Framework",
        "Rabbit MQ",
        "Stored Procedures",
        "SQLite",
        "Developed",
        "CRUD",
        "JQuery Created",
        "HTML CSS JavaScript",
        "Configuration Management Tool Chef and Integrate",
        "Spark SQLQueries",
        "Exceptional Customer Service Creating Ansible",
        "Jenkins Docker Ansible",
        "JavaScript",
        "Computer Science Chicago State University Bachelors",
        "Git",
        "Nose Test",
        "Python Bootstrap CSS",
        "FrameworkScala Classes",
        "Project Management",
        "Pythontwitter",
        "Model and Views Utilization Python",
        "Performed Unit",
        "Amazon",
        "Sublime Text Operating Systems Windows",
        "API RESTful Web Service",
        "Linux",
        "MVC",
        "Quantum Spark Execution",
        "SQL",
        "Flask",
        "Present Responsibilities Developed Views",
        "Linux Quality Center Education Masters",
        "LogStash",
        "Amazon RDS IDEs Development Tools",
        "Application",
        "Used EC2 Container Service",
        "Celery",
        "Refactored",
        "MapReduce Developed",
        "Integration Testing GUI",
        "Developed Python",
        "CICD",
        "Spark",
        "DevTest"
    ],
    "experience": "Experience Python Developer Santander Bank September 2017 to Present Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Django SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Python based API RESTful Web Service to track the events and perform Statistical analysis using Django Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Worked with the team in setting up Airflow in distributed mode using Rabbit MQ and Celery for executing the jobs on AWS EC2 Developed programs in Spark based on the application for faster data processing than standard MapReduce Developed spark programs using Scala involved in creating Spark SQLQueries and Developed Ooziest workflow for sparkjobs Performed Unit testing Integration Testing GUI and web application testing using Rspec Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Worked in MySQL database on simple queries and writing Stored Procedures for normalization Environment Python 37 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Fidelity Investments Bostan July 2015 to August 2016 Responsibilities Implemented Python alongside using various libraries such as matPlotLib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Designed and developed Application based on the Flask MVC Framework using MVC design pattern Successfully migrated the Flask database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on zcbuildout and Python Used Test driven approach for developing the application and Implemented the unit tests using python Unit test framework Implemented visualization using Elastic search kibana and LogStash on Apache server Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Handled realtime data feeds through Apache Kafka and designed and Set up environment of MongoDB with shards and replica sets DevTest and Production Provided automation used Configuration Management Tool Chef and Integrate the dynamic pages with JavaScript Bootstrap and jquery to make the pages dynamic Using Ansible inventories to define groups of hosts Exceptional Customer Service Creating Ansible playbooks Using Ansible playbooks to configure systems to a specified state Creating and using Ansible templates to create customized configuration files for hosts technical Support Creating Ansible roles using Ansible Vault in playbooks to protect sensitive data Environment Python 3x27 Flask HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA Jr Software Python Hyderabad Telangana March 2013 to June 2015 Responsibilities Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript ExportedImported data between different data sources using SQL Server Management Studio and maintained program libraries user manuals and technical documentation Built various graphs for business decisionmaking use of Python matPlotLib library and fetched twitter feeds for certain important keyword using Pythontwitter library Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Environment Python 27 Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Quality Center Education Masters in Computer Science Chicago State University Bachelors in Electronics and Communication Engineering JNTU Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years SQL 4 years DJANGO 3 years Additional Information Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years PYTHON 4 years SQL 4 years Technical skills Frameworks Django PyJamas Jython CSS Bootstrap Programming Languages Python C SQL and PLSQL Version Control SVN Git GitHub Bitbucket Databases Oracle 9i 10 g 11 g RDBMS My SQL DynamoDB Amazon RDS IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating Systems Windows Red hat Linux 4x5x6x Ubuntu Protocols TCPIP HTTPHTTPS SOAP SMTP Deployment Tools Heroku Jenkins Testing Tools Unit test Pytest nose Project Management tools JIRA Scrum",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Python",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Santander",
        "Bank",
        "New",
        "York",
        "NY",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Santander",
        "Bank",
        "September",
        "Present",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Created",
        "APIs",
        "database",
        "Model",
        "Views",
        "Utilization",
        "Python",
        "order",
        "web",
        "page",
        "application",
        "Git",
        "version",
        "control",
        "code",
        "sharing",
        "order",
        "changes",
        "project",
        "files",
        "commands",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "campaign",
        "rules",
        "JOB",
        "Config",
        "DB",
        "Django",
        "SQLAlchemy",
        "PostgreSQL",
        "APIs",
        "AWS",
        "EC2",
        "Contributed",
        "Quantum",
        "Spark",
        "Execution",
        "FrameworkScala",
        "Classes",
        "data",
        "framework",
        "users",
        "process",
        "batch",
        "data",
        "source",
        "technologies",
        "Managed",
        "Amazon",
        "redshift",
        "clusters",
        "cluster",
        "nodes",
        "data",
        "analysis",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "Automated",
        "Testing",
        "Framework",
        "CICD",
        "pipeline",
        "Nose",
        "Test",
        "PyTest",
        "team",
        "Airflow",
        "mode",
        "Rabbit",
        "MQ",
        "Celery",
        "jobs",
        "AWS",
        "EC2",
        "programs",
        "Spark",
        "application",
        "data",
        "processing",
        "MapReduce",
        "spark",
        "programs",
        "Scala",
        "Spark",
        "SQLQueries",
        "Developed",
        "Ooziest",
        "workflow",
        "sparkjobs",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Automated",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "process",
        "builds",
        "deployments",
        "Jenkins",
        "Ant",
        "Maven",
        "Shell",
        "Script",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Fidelity",
        "Investments",
        "Bostan",
        "July",
        "August",
        "Responsibilities",
        "Python",
        "libraries",
        "matPlotLib",
        "charts",
        "graphs",
        "MySQL",
        "database",
        "connectivity",
        "PySide",
        "Pickle",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "Develop",
        "programs",
        "testing",
        "controller",
        "CICD",
        "environment",
        "Python",
        "Bash",
        "script",
        "Git",
        "Linux",
        "command",
        "line",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Flask",
        "Application",
        "Flask",
        "MVC",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "Flask",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "configuration",
        "management",
        "packaging",
        "disaster",
        "recovery",
        "delivery",
        "systems",
        "zcbuildout",
        "Python",
        "Test",
        "approach",
        "application",
        "unit",
        "python",
        "Unit",
        "test",
        "framework",
        "visualization",
        "search",
        "kibana",
        "LogStash",
        "Apache",
        "server",
        "Redis",
        "cache",
        "info",
        "changes",
        "RabbitMQ",
        "EC2",
        "Container",
        "Service",
        "ECS",
        "Docker",
        "containers",
        "applications",
        "cluster",
        "Amazon",
        "EC2",
        "instances",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "Docker",
        "containers",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "data",
        "Apache",
        "Kafka",
        "environment",
        "MongoDB",
        "shards",
        "replica",
        "DevTest",
        "Production",
        "automation",
        "Configuration",
        "Management",
        "Tool",
        "Chef",
        "pages",
        "JavaScript",
        "Bootstrap",
        "jquery",
        "pages",
        "inventories",
        "groups",
        "hosts",
        "Exceptional",
        "Customer",
        "Service",
        "playbooks",
        "playbooks",
        "configure",
        "systems",
        "state",
        "Creating",
        "templates",
        "configuration",
        "files",
        "hosts",
        "Support",
        "roles",
        "Vault",
        "playbooks",
        "data",
        "Environment",
        "Python",
        "3x27",
        "Flask",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "GitHub",
        "JIRA",
        "Jr",
        "Software",
        "Python",
        "Hyderabad",
        "Telangana",
        "March",
        "June",
        "Responsibilities",
        "UI",
        "JavaScript",
        "HTML5CSS",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "user",
        "manuals",
        "documentation",
        "graphs",
        "business",
        "use",
        "Python",
        "matPlotLib",
        "library",
        "twitter",
        "keyword",
        "Pythontwitter",
        "library",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "project",
        "threadsafe",
        "unit",
        "tests",
        "ones",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Quality",
        "Center",
        "Education",
        "Masters",
        "Computer",
        "Science",
        "Chicago",
        "State",
        "University",
        "Bachelors",
        "Electronics",
        "Communication",
        "Engineering",
        "JNTU",
        "Skills",
        "BOOTSTRAP",
        "years",
        "CSS",
        "years",
        "LINUX",
        "years",
        "SQL",
        "years",
        "DJANGO",
        "years",
        "Additional",
        "Information",
        "Skills",
        "BOOTSTRAP",
        "years",
        "CSS",
        "years",
        "LINUX",
        "years",
        "PYTHON",
        "years",
        "SQL",
        "years",
        "skills",
        "Frameworks",
        "Django",
        "PyJamas",
        "Jython",
        "CSS",
        "Bootstrap",
        "Programming",
        "Languages",
        "Python",
        "C",
        "SQL",
        "PLSQL",
        "Version",
        "Control",
        "SVN",
        "Git",
        "GitHub",
        "Bitbucket",
        "Databases",
        "Oracle",
        "9i",
        "g",
        "g",
        "RDBMS",
        "SQL",
        "DynamoDB",
        "Amazon",
        "RDS",
        "IDEs",
        "Development",
        "Tools",
        "NetBeans",
        "Eclipse",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "Sublime",
        "Text",
        "Operating",
        "Systems",
        "Windows",
        "Red",
        "hat",
        "Linux",
        "4x5x6x",
        "Ubuntu",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SMTP",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Testing",
        "Tools",
        "Unit",
        "Pytest",
        "nose",
        "Project",
        "Management",
        "tools",
        "JIRA",
        "Scrum"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:35:57.673288",
    "resume_data": "Python Developer Python span lDeveloperspan Python Developer Santander Bank New York NY Work Experience Python Developer Santander Bank September 2017 to Present Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Django SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Python based API RESTful Web Service to track the events and perform Statistical analysis using Django Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Worked with the team in setting up Airflow in distributed mode using Rabbit MQ and Celery for executing the jobs on AWS EC2 Developed programs in Spark based on the application for faster data processing than standard MapReduce Developed spark programs using Scala involved in creating Spark SQLQueries and Developed Ooziest workflow for sparkjobs Performed Unit testing Integration Testing GUI and web application testing using Rspec Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Developed automated process for builds and deployments by using Jenkins Ant Maven Shell Script Worked in MySQL database on simple queries and writing Stored Procedures for normalization Environment Python 37 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Fidelity Investments Bostan July 2015 to August 2016 Responsibilities Implemented Python alongside using various libraries such as matPlotLib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Flask Designed and developed Application based on the Flask MVC Framework using MVC design pattern Successfully migrated the Flask database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on zcbuildout and Python Used Test driven approach for developing the application and Implemented the unit tests using python Unit test framework Implemented visualization using Elastic search kibana and LogStash on Apache server Used Redis cache for storing commonly used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Handled realtime data feeds through Apache Kafka and designed and Set up environment of MongoDB with shards and replica sets DevTest and Production Provided automation used Configuration Management Tool Chef and Integrate the dynamic pages with JavaScript Bootstrap and jquery to make the pages dynamic Using Ansible inventories to define groups of hosts Exceptional Customer Service Creating Ansible playbooks Using Ansible playbooks to configure systems to a specified state Creating and using Ansible templates to create customized configuration files for hosts technical Support Creating Ansible roles using Ansible Vault in playbooks to protect sensitive data Environment Python 3x27 Flask HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA Jr Software Python Hyderabad Telangana March 2013 to June 2015 Responsibilities Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript ExportedImported data between different data sources using SQL Server Management Studio and maintained program libraries user manuals and technical documentation Built various graphs for business decisionmaking use of Python matPlotLib library and fetched twitter feeds for certain important keyword using Pythontwitter library Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Environment Python 27 Django 14 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Quality Center Education Masters in Computer Science Chicago State University Bachelors in Electronics and Communication Engineering JNTU Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years SQL 4 years DJANGO 3 years Additional Information Skills BOOTSTRAP 4 years CSS 4 years LINUX 4 years PYTHON 4 years SQL 4 years Technical skills Frameworks Django PyJamas Jython CSS Bootstrap Programming Languages Python C SQL and PLSQL Version Control SVN Git GitHub Bitbucket Databases Oracle 9i 10g 11g RDBMS My SQL DynamoDB Amazon RDS IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating Systems Windows Red hat Linux 4x5x6x Ubuntu Protocols TCPIP HTTPHTTPS SOAP SMTP Deployment Tools Heroku Jenkins Testing Tools Unit test Pytest nose Project Management tools JIRA Scrum",
    "unique_id": "758eb861-ec73-4107-8572-58205de3f175"
}