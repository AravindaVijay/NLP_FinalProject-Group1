{
    "clean_data": "Sr FullStack Java Developer Sr FullStack span lJavaspan span lDeveloperspan Sr FullStack Java Developer Comcast Corporation Herndon VA JavaJ2EE Full Stack Developer with 7 Years of experience on Enterprise applications Distributed Application Development ClientServer Applications Servlets communication InternetIntranet based database applications and developing testing and implementing application environment Certified Oracle Java SE6 Programmer OCPJP 6 Strong in the complete Software Development Life Cycle SDLC including requirements definition design programmingtesting and implementation of major systems Ability to assimilate new technologies very quickly and apply that knowledge to the fast growing and ever changing markets of Information Technology Authorized to work in the US for any employer Work Experience Sr FullStack Java Developer Comcast Corporation Herndon VA January 2016 to Present Project Description Developing new voice and video features that allow customers to connect with family and friends inside and outside of the XFINITY network more easily and personally through their smartphones tablets and TVs Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using  HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngif ngshow nghide ngchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery  Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Full Stack Java Developer WellsFargoBank San Francisco CA August 2014 to December 2015 Project Description Wells Fargo deals with core banking system This is a highquality clientserver banking software application covering Retail and corporate banking services It is highly parameterized to support dynamic nature of customer It effectively meets the complex needs of the banking industry It liberates banking operations and takes towards efficient functionality Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Abilify Browserify HttpFetch BodyParser Express etc to create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the ReactWeb UI components using Atom IDE and made backend REST calls using whatwefetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using thereactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using eHttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to thenewGradlebased build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Developed REST controllers using Spring Data REST to serve the UI with required JSON data Used extensively Eclipse in thedevelopment and debugging the application Followed Agile methodology and involved in daily SCRUM meetings Environment Java 16 Junit 4 JBoss 7 Oracle 10g HTML JSP JavaScript ReactJS NodeJS Mongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS JAVAJ2EE Developer Berkley Risk Minneapolis MN March 2012 to July 2014 DescriptionBerkley risk is a national provider for insurance management and strategic planning services that designs implements and manages a wide variety of alternative market property and casualty programs to help the customer control their total cost of risk Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactionsDeveloped Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag librariesUsed struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the applicationAnalyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application onJBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnitUsed Jira for tracking bugsUsed Maven script for building and deploying the application EnvironmentJ2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion JavaJ2EE Developer Mayo Clinic Minneapolis MN November 2010 to February 2012 Project Description Mayo provides cloud based healthcare technology solutions that help consumers businesses connect communicate and engage with health plans in an undemanding and informed manner when acquiring health insurance Barack Obama administrations Patient Protection and Affordable Care act of 2010 PPACA requires states to implement health exchanges and mayo is working on the same platform Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project lifecycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML JavaScript CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logicIntegrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibilityUsed SpringJDBC Template and implemented DAO Design Pattern to connect and retrieving dataDeveloped the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using iBATIS developed POJOs mapped to the relational tables in thedatabase using iBATIS mapping filesWorked on Oracle as the backend database and used iBATIS to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to thethird companyFollowed topdown approach to implementingSOAPbased web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviewswalkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application andImplemented Unit and Integration test cases with JUNIT Framework based on Functional Flow EnvironmentJ2EE JSP Servlets DHTML JavaScript CSS HTML Spring Struts iBATIS SOAPbasedWeb Services Oracle PLSQL Toad 961 JUnit Jquery SQL Navigator SVN Gradle 24and WebLogic Server Java Programmer Birla Sun Life September 2009 to October 2010 Description Birla Sun Life is one of the leading financial services company in India offering life insurance and other investment solutions Customers receive access to a broad range of products and services that can help meet their financial goals Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and render retrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PL SQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for BuildDeployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors Skills JAVA 8 years jQuery 8 years ORACLE 8 years TESTING 8 years UI 8 years Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery  Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS 8 years Javascript PHP MySQL Android ASP Additional Information SKILLS Java 7 years JQuery 7 years Oracle 7 years testing 7 years UI 7 years ADDITIONAL INFORMATION EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS andparticipated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript Jquery  and React JS Experienced in developing and implementing web applications usingJava J2EE JSP Servlets JSF HTML5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services andhandson experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphereand JBoss Application Servers including handson experience in using Tomcatweb Server Expertise in developing XML documents with XSDvalidations SAX and DOM parsers to parse the data held in XML documents andexperience in other XMLrelated technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in usingJava IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD EclipseEE 3032 WeblogicWorkshop RSA 70 andNetbeans to develop dynamic web applications Expertise in BootstrapAngular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Mavendeploys tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUIand performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL DatabasesMongoDB andCouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Languages Core JAVA C CC Web Technologies HTML HTML5 XML DHTML CSS2 CSS3 JQuery CSS Animation SASS LESS JavaScript AJAX JSON Bootstrap Databases My SQL 50 SQL Server PLSQLoracle Application Frameworks Spring Hibernate  Typescriptjs BabelJs CommonJs knockoutjs ReactjsBackbone JS Express JS Node JS Bootstrap UI Ext JS D3JS IDES EclipseNetBeansNotepadWebStorm Sublime Text Chrome development toolbar and Firebug RDBMS Oracle MySQL Application Servers Apache Tomcat 55 60 SDLC Waterfall Agile Version Controls TFS SVN GIT Operating Systems Windows MAC OS X",
    "entities": [
        "Functions",
        "XMLrelated",
        "Spring Framework",
        "Used Hibernate",
        "AJAX",
        "Tibco",
        "Worked on Construction Changes",
        "IDE",
        "JUnit DbUnit",
        "GUI",
        "MN",
        "UI Took",
        "HTTP Developed",
        "Functional Flow EnvironmentJ2EE JSP",
        "Tomcatweb Server Expertise",
        "the DAO Service",
        "Oracle PLSQL Toad",
        "Subversion JavaJ2EE Developer",
        "InternetIntranet",
        "User Interactive UI Web Pages",
        "User Interfaces",
        "Rational Application Developer RAD Web Sphere Application Developer WSAD",
        "J2EE Technologies Servlets",
        "Roles Responsibilities Designed and Developed User Interactive UI",
        "Controller",
        "SOAP",
        "XML",
        "NOSQL",
        "XFINITY",
        "Bean Component Repository",
        "WebLogic",
        "ReactDOM Bootstrap",
        "JUnit",
        "Daily Rolling Log",
        "StrutsSwings",
        "Procedures Created",
        "Developed Angular",
        "ReactjsBackbone JS Express",
        "JNDI Expertise",
        "WebSphere",
        "Create",
        "Request Parameters",
        "Developed",
        "Mongo",
        "DAO",
        "Wells Fargo",
        "Middleware",
        "Waterfall Agile Version",
        "Java Server Faces",
        "FirePoster",
        "Present Project Description Developing",
        "Maven AWS Sr Full Stack Java Developer",
        "Developed additional UI Components",
        "Mockito",
        "Distributed Application Development ClientServer Applications Servlets",
        "Spring MVC",
        "San Francisco",
        "RAD",
        "Session Facade Service Locator",
        "Firebug RDBMS Oracle MySQL Application Servers Apache Tomcat",
        "Spring Core Annotations for Dependency Injection",
        "DTD XSL",
        "Groovy Unit Testing the Gradle",
        "Reflux",
        "Front Controller Factory Abstract Factory Command",
        "JUNIT Framework",
        "HTML5",
        "REST API",
        "Enterprise",
        "Prepared Documentation for Unit Test Plan",
        "NodeJS Involved",
        "JSP",
        "Model View Architecture",
        "Minneapolis",
        "Spring Security ACEGI",
        "Bootstrap Developed",
        "Test Result Responsible",
        "Angular UI",
        "IOC",
        "BootstrapAngular JS",
        "DOM",
        "NodeJS Created",
        "Software",
        "andImplemented Unit",
        "Panel",
        "Implemented Data Access Layer",
        "Developed Servlets",
        "Atom IDE",
        "Action Mapping Action",
        "MVC",
        "Interface",
        "Agile",
        "POJO MDP",
        "the Java Objects Constructed",
        "GIT",
        "JAXRS Consumed SOAP",
        "EJB",
        "Node JS",
        "Defect Fixing Feature Enhancements Testing and Documentation Used CVS",
        "Hibernate Annotations Involved",
        "WebLogic WebSphereand JBoss Application Servers",
        "US",
        "jQuery Ajax",
        "QA",
        "Spring MVC Dependency Injection",
        "Mongodb Spring Hibernate",
        "Applied Struts",
        "Created",
        "AWS",
        "Oracle",
        "Developed Junit",
        "JBoss Server Responsible",
        "JSF",
        "Developed Data",
        "MVC Framework",
        "PL SQL Code Tuning Involved",
        "Test",
        "Followed Agile methodology",
        "Transaction",
        "Information Technology Authorized",
        "DAO Leveraged",
        "SQL",
        "Slickgrid",
        "JavaScript Subversion Jenkins AWS JAVAJ2EE Developer Berkley Risk",
        "NPM",
        "Microsoft Visual Explorer for Agile Methodology",
        "Developer Comcast Corporation",
        "XSDvalidations SAX",
        "DescriptionBerkley",
        "Display Tags",
        "Handson",
        "XHTML",
        "Consumed SOAP",
        "Mongoose API",
        "Jenkins ANT Mavendeploys",
        "ReactWeb UI",
        "Build",
        "Maven",
        "Spring Hibernate",
        "Flex 30 Action Script",
        "India",
        "lJavaspan",
        "Watchify Abilify Browserify HttpFetch BodyParser Express",
        "FireBug",
        "Developed Grids",
        "UI Implementation",
        "XSL",
        "JavaScript",
        "Webservices",
        "Responsibilities Analyzed",
        "Tiles and Validation",
        "UI",
        "Value Object Pattern MVC Factory",
        "Android ASP Additional Information",
        "JQuery CSS Animation",
        "React JS Experienced",
        "SQL Server PLSQLoracle Application Frameworks Spring Hibernate  Typescriptjs BabelJs CommonJs",
        "Webservices Oracle Rational Application Developer",
        "CVS Maven Waterfall",
        "Insertion Updating Deletion",
        "Good Exposure to Service Oriented Architecture SOA",
        "Tomcat",
        "REST",
        "SpringJDBC Template",
        "Oracle SQL Developer GUI Graphical User Interface",
        "Nodejs Server",
        "Action Classes Developed Action forms Action",
        "TOAD",
        "Software Development Life Cycle",
        "WebLogic Application Server",
        "UAT Team Developed",
        "Integration",
        "Action Form",
        "Node",
        "Implemented Struts Bean Tags Logical Tags",
        "Gradle with Jenkins"
    ],
    "experience": "Experience Sr FullStack Java Developer Comcast Corporation Herndon VA January 2016 to Present Project Description Developing new voice and video features that allow customers to connect with family and friends inside and outside of the XFINITY network more easily and personally through their smartphones tablets and TVs Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using   HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngif ngshow nghide ngchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery   Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Full Stack Java Developer WellsFargoBank San Francisco CA August 2014 to December 2015 Project Description Wells Fargo deals with core banking system This is a highquality clientserver banking software application covering Retail and corporate banking services It is highly parameterized to support dynamic nature of customer It effectively meets the complex needs of the banking industry It liberates banking operations and takes towards efficient functionality Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Abilify Browserify HttpFetch BodyParser Express etc to create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the ReactWeb UI components using Atom IDE and made backend REST calls using whatwefetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using thereactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using eHttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to thenewGradlebased build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Developed REST controllers using Spring Data REST to serve the UI with required JSON data Used extensively Eclipse in thedevelopment and debugging the application Followed Agile methodology and involved in daily SCRUM meetings Environment Java 16 Junit 4 JBoss 7 Oracle 10 g HTML JSP JavaScript ReactJS NodeJS Mongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS JAVAJ2EE Developer Berkley Risk Minneapolis MN March 2012 to July 2014 DescriptionBerkley risk is a national provider for insurance management and strategic planning services that designs implements and manages a wide variety of alternative market property and casualty programs to help the customer control their total cost of risk Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactionsDeveloped Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag librariesUsed struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the applicationAnalyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application onJBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnitUsed Jira for tracking bugsUsed Maven script for building and deploying the application EnvironmentJ2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion JavaJ2EE Developer Mayo Clinic Minneapolis MN November 2010 to February 2012 Project Description Mayo provides cloud based healthcare technology solutions that help consumers businesses connect communicate and engage with health plans in an undemanding and informed manner when acquiring health insurance Barack Obama administrations Patient Protection and Affordable Care act of 2010 PPACA requires states to implement health exchanges and mayo is working on the same platform Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project lifecycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML JavaScript CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logicIntegrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibilityUsed SpringJDBC Template and implemented DAO Design Pattern to connect and retrieving dataDeveloped the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using iBATIS developed POJOs mapped to the relational tables in thedatabase using iBATIS mapping filesWorked on Oracle as the backend database and used iBATIS to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to thethird companyFollowed topdown approach to implementingSOAPbased web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviewswalkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application andImplemented Unit and Integration test cases with JUNIT Framework based on Functional Flow EnvironmentJ2EE JSP Servlets DHTML JavaScript CSS HTML Spring Struts iBATIS SOAPbasedWeb Services Oracle PLSQL Toad 961 JUnit Jquery SQL Navigator SVN Gradle 24and WebLogic Server Java Programmer Birla Sun Life September 2009 to October 2010 Description Birla Sun Life is one of the leading financial services company in India offering life insurance and other investment solutions Customers receive access to a broad range of products and services that can help meet their financial goals Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and render retrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PL SQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for BuildDeployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors Skills JAVA 8 years jQuery 8 years ORACLE 8 years TESTING 8 years UI 8 years Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery   Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS 8 years Javascript PHP MySQL Android ASP Additional Information SKILLS Java 7 years JQuery 7 years Oracle 7 years testing 7 years UI 7 years ADDITIONAL INFORMATION EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS andparticipated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript Jquery   and React JS Experienced in developing and implementing web applications usingJava J2EE JSP Servlets JSF HTML5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services andhandson experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphereand JBoss Application Servers including handson experience in using Tomcatweb Server Expertise in developing XML documents with XSDvalidations SAX and DOM parsers to parse the data held in XML documents andexperience in other XMLrelated technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in usingJava IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD EclipseEE 3032 WeblogicWorkshop RSA 70 andNetbeans to develop dynamic web applications Expertise in BootstrapAngular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Mavendeploys tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUIand performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL DatabasesMongoDB andCouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Languages Core JAVA C CC Web Technologies HTML HTML5 XML DHTML CSS2 CSS3 JQuery CSS Animation SASS LESS JavaScript AJAX JSON Bootstrap Databases My SQL 50 SQL Server PLSQLoracle Application Frameworks Spring Hibernate   Typescriptjs BabelJs CommonJs knockoutjs ReactjsBackbone JS Express JS Node JS Bootstrap UI Ext JS D3JS IDES EclipseNetBeansNotepadWebStorm Sublime Text Chrome development toolbar and Firebug RDBMS Oracle MySQL Application Servers Apache Tomcat 55 60 SDLC Waterfall Agile Version Controls TFS SVN GIT Operating Systems Windows MAC OS X",
    "extracted_keywords": [
        "Sr",
        "FullStack",
        "Java",
        "Developer",
        "Sr",
        "FullStack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "FullStack",
        "Java",
        "Developer",
        "Comcast",
        "Corporation",
        "Herndon",
        "VA",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Years",
        "experience",
        "Enterprise",
        "applications",
        "Application",
        "Development",
        "ClientServer",
        "Applications",
        "Servlets",
        "communication",
        "InternetIntranet",
        "database",
        "applications",
        "testing",
        "application",
        "environment",
        "Certified",
        "Oracle",
        "Java",
        "SE6",
        "Programmer",
        "Strong",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "definition",
        "design",
        "programmingtesting",
        "implementation",
        "systems",
        "Ability",
        "technologies",
        "knowledge",
        "growing",
        "markets",
        "Information",
        "Technology",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "FullStack",
        "Java",
        "Developer",
        "Comcast",
        "Corporation",
        "Herndon",
        "VA",
        "January",
        "Present",
        "Project",
        "Description",
        "voice",
        "video",
        "features",
        "customers",
        "family",
        "friends",
        "outside",
        "XFINITY",
        "network",
        "smartphones",
        "tablets",
        "TVs",
        "Responsibilities",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "frontend",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "Spring",
        "Boot",
        "Developed",
        "Angular",
        "controllers",
        "services",
        "filters",
        "HTML",
        "templates",
        "directives",
        "ngapp",
        "ngcontroller",
        "ngrepeat",
        "ngif",
        "nghide",
        "ngchange",
        "Developed",
        "Grids",
        "system",
        "Slickgrid",
        "custom",
        "grid",
        "directive",
        "component",
        "Angular",
        "UI",
        "Bootstrap",
        "components",
        "calendars",
        "masks",
        "uploaders",
        "sliders",
        "modal",
        "dialogs",
        "UI",
        "part",
        "configuration",
        "Angular",
        "UI",
        "router",
        "views",
        "sub",
        "Configured",
        "Gulp",
        "UI",
        "build",
        "tasks",
        "NodeJS",
        "NPM",
        "Bower",
        "dependencies",
        "Angular",
        "services",
        "use",
        "resource",
        "service",
        "REST",
        "API",
        "unit",
        "test",
        "cases",
        "Jasmine",
        "Karma",
        "end",
        "tesing",
        "Protractor",
        "Selenium",
        "Developed",
        "REST",
        "controllers",
        "Spring",
        "Data",
        "REST",
        "UI",
        "JSON",
        "data",
        "REST",
        "exception",
        "controller",
        "advices",
        "requests",
        "server",
        "side",
        "exceptions",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "Spring",
        "bean",
        "Consumed",
        "SOAP",
        "JAXWS",
        "web",
        "services",
        "Spring",
        "framework",
        "SOAP",
        "UI",
        "services",
        "REST",
        "Client",
        "POSTMAN",
        "rest",
        "services",
        "Junit",
        "Mockito",
        "middleware",
        "services",
        "Middleware",
        "Message",
        "POJO",
        "MDP",
        "QCF",
        "Queue",
        "WebSphere",
        "server",
        "JMS",
        "template",
        "functionality",
        "users",
        "Hibernate",
        "persistence",
        "layer",
        "DAOs",
        "data",
        "database",
        "Nodejs",
        "Grunt",
        "tasks",
        "project",
        "compile",
        "minify",
        "concat",
        "modules",
        "Node",
        "JS",
        "designs",
        "requirements",
        "GruntJS",
        "BowerJS",
        "Express",
        "NodeJS",
        "MEAN",
        "Express",
        "Angular",
        "Node",
        "stack",
        "applications",
        "support",
        "Build",
        "REST",
        "web",
        "service",
        "Nodejs",
        "Server",
        "backend",
        "requests",
        "end",
        "jQuery",
        "Ajax",
        "calls",
        "integration",
        "data",
        "applications",
        "favor",
        "documents",
        "schemas",
        "MongoDB",
        "NOSQL",
        "database",
        "MongoDB",
        "collections",
        "services",
        "user",
        "data",
        "application",
        "devices",
        "Mongoose",
        "API",
        "order",
        "MongoDB",
        "NodeJS",
        "GIT",
        "version",
        "control",
        "system",
        "track",
        "work",
        "changes",
        "developers",
        "Maven",
        "build",
        "configuration",
        "tool",
        "Jenkins",
        "integration",
        "tool",
        "configuration",
        "usage",
        "Apache",
        "Log4J",
        "purposes",
        "RAD",
        "IDE",
        "tool",
        "application",
        "Prepared",
        "Documentation",
        "Unit",
        "Test",
        "Plan",
        "Unit",
        "Test",
        "Results",
        "QA",
        "purpose",
        "release",
        "night",
        "shakeoutsover",
        "night",
        "deliveries",
        "QA",
        "Support",
        "Veracode",
        "application",
        "security",
        "scanning",
        "flaws",
        "code",
        "part",
        "application",
        "Jenkins",
        "AWS",
        "builds",
        "deployments",
        "Tomcat",
        "server",
        "Environment",
        "Java",
        "STS",
        "Tomcat",
        "Gulp",
        "Spring",
        "Tool",
        "Suite",
        "Spring",
        "Spring",
        "Boot",
        "Hibernate",
        "MongoDB",
        "RESTful",
        "Web",
        "Service",
        "Oracle",
        "HTML5",
        "CSS3",
        "JQuery",
        "Node",
        "Js",
        "Express",
        "JavaScript",
        "GIT",
        "JMS",
        "Jenkins",
        "Agile",
        "JIRA",
        "tool",
        "Selenium",
        "Log4j",
        "Maven",
        "AWS",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "WellsFargoBank",
        "San",
        "Francisco",
        "CA",
        "August",
        "December",
        "Project",
        "Description",
        "Wells",
        "Fargo",
        "banking",
        "system",
        "highquality",
        "banking",
        "software",
        "application",
        "Retail",
        "banking",
        "services",
        "nature",
        "customer",
        "needs",
        "banking",
        "industry",
        "banking",
        "operations",
        "functionality",
        "Roles",
        "Responsibilities",
        "Developed",
        "User",
        "Interactive",
        "UI",
        "Web",
        "pages",
        "HTML5",
        "ReactJS",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "NodeJS",
        "components",
        "modules",
        "ReactJS",
        "ReactDOM",
        "Bootstrap",
        "JSX",
        "NPM",
        "modules",
        "Watchify",
        "Abilify",
        "Browserify",
        "HttpFetch",
        "BodyParser",
        "Express",
        "application",
        "REST",
        "services",
        "NodeJS",
        "ExpressJS",
        "Mongoose",
        "BodyParser",
        "NPM",
        "modules",
        "Reflux",
        "architecture",
        "actions",
        "stores",
        "controller",
        "components",
        "callbacks",
        "ReactWeb",
        "UI",
        "components",
        "Atom",
        "IDE",
        "REST",
        "whatwefetch",
        "Used",
        "Bootstrap",
        "CSS",
        "dialogs",
        "tabs",
        "date",
        "picker",
        "model",
        "pop",
        "ups",
        "components",
        "UI",
        "model",
        "Create",
        "edit",
        "sites",
        "design",
        "themes",
        "frontend",
        "development",
        "frameworks",
        "Bootstrap",
        "Developed",
        "components",
        "application",
        "thereactrouter",
        "module",
        "components",
        "views",
        "DAO",
        "layer",
        "applications",
        "Spring",
        "Hibernate",
        "business",
        "logic",
        "reports",
        "HQL",
        "Hibernate",
        "Criteria",
        "Consumed",
        "web",
        "services",
        "eHttpClient",
        "data",
        "systems",
        "team",
        "development",
        "requirements",
        "Code",
        "Reviews",
        "Experience",
        "versions",
        "Mongo",
        "database",
        "platforms",
        "custom",
        "Mongo",
        "applications",
        "clients",
        "Developed",
        "Spring",
        "JMS",
        "message",
        "listeners",
        "JMS",
        "messages",
        "queues",
        "Spring",
        "transaction",
        "management",
        "transactions",
        "application",
        "Spring",
        "Framework",
        "Business",
        "Tier",
        "Spring",
        "container",
        "services",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Bean",
        "Component",
        "Repository",
        "Autowired",
        "Spring",
        "Framework",
        "Hibernate",
        "Oracle",
        "database",
        "mapping",
        "Hibernate",
        "Annotations",
        "application",
        "AWS",
        "environment",
        "EC2",
        "instances",
        "ELBs",
        "Jenkins",
        "Application",
        "Deploying",
        "testing",
        "JBoss",
        "Server",
        "Responsible",
        "code",
        "quality",
        "coding",
        "implementation",
        "standards",
        "code",
        "reviews",
        "unit",
        "test",
        "cases",
        "integration",
        "tests",
        "DAO",
        "Service",
        "Controller",
        "components",
        "JUnit",
        "DbUnit",
        "Spring",
        "Test",
        "support",
        "legacy",
        "Ant",
        "infrastructure",
        "system",
        "test",
        "build",
        "release",
        "procedures",
        "Integration",
        "testing",
        "bugs",
        "change",
        "requests",
        "code",
        "reviews",
        "Database",
        "Schemas",
        "domain",
        "Integration",
        "Code",
        "build",
        "UAT",
        "Team",
        "Developed",
        "REST",
        "controllers",
        "Spring",
        "Data",
        "REST",
        "UI",
        "JSON",
        "data",
        "Eclipse",
        "thedevelopment",
        "application",
        "methodology",
        "SCRUM",
        "meetings",
        "Environment",
        "Java",
        "Junit",
        "JBoss",
        "Oracle",
        "g",
        "HTML",
        "JSP",
        "JavaScript",
        "ReactJS",
        "NodeJS",
        "Mongodb",
        "Spring",
        "Hibernate",
        "Eclipse",
        "Atom",
        "Restful",
        "Web",
        "services",
        "Gradle",
        "Junit",
        "log4j",
        "JavaScript",
        "Subversion",
        "Jenkins",
        "AWS",
        "JAVAJ2EE",
        "Developer",
        "Berkley",
        "Risk",
        "Minneapolis",
        "MN",
        "March",
        "July",
        "DescriptionBerkley",
        "risk",
        "provider",
        "insurance",
        "management",
        "planning",
        "services",
        "implements",
        "variety",
        "market",
        "property",
        "casualty",
        "programs",
        "customer",
        "cost",
        "risk",
        "Roles",
        "Responsibilities",
        "event",
        "UI",
        "layer",
        "code",
        "JavaScript",
        "applets",
        "JSPs",
        "sequence",
        "diagram",
        "Popin",
        "Dialog",
        "JSPs",
        "Request",
        "Parameters",
        "JavaScript",
        "Jquery",
        "JSTL",
        "UI",
        "Implementation",
        "Struts",
        "JavaScript",
        "Struts",
        "Validation",
        "framework",
        "MyEclipse",
        "IDE",
        "Applied",
        "Struts",
        "Tiles",
        "Validation",
        "framework",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "form",
        "validation",
        "UI",
        "Implementation",
        "Struts",
        "JavaScript",
        "Struts",
        "Validation",
        "framework",
        "MyEclipse",
        "IDE",
        "Applied",
        "Struts",
        "Tiles",
        "Validation",
        "framework",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "form",
        "validation",
        "MVC",
        "architecture",
        "StrutsSwings",
        "data",
        "frontend",
        "business",
        "layer",
        "Integrated",
        "Struts",
        "Hibernate",
        "Object",
        "mapping",
        "apache",
        "struts",
        "components",
        "DAO",
        "strutsvalidations",
        "strutsbeans",
        "Action",
        "Servlet",
        "request",
        "Action",
        "Classes",
        "Action",
        "forms",
        "Action",
        "classes",
        "Struts",
        "framework",
        "user",
        "requests",
        "Struts",
        "Bean",
        "Tags",
        "Logical",
        "Tags",
        "Display",
        "Tags",
        "JSPs",
        "development",
        "modules",
        "Flex",
        "Action",
        "Script",
        "J2EE",
        "layer",
        "Blaze",
        "DS",
        "Spring",
        "MVC",
        "frame",
        "work",
        "development",
        "server",
        "side",
        "modules",
        "SpringMVC",
        "SpringIOC",
        "Spring",
        "AOP",
        "AspectJ",
        "application",
        "Struts",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "layer",
        "Hibernate",
        "Developed",
        "procedures",
        "functions",
        "DAO",
        "persistence",
        "layers",
        "data",
        "manipulation",
        "information",
        "transactions",
        "webservices",
        "topics",
        "TIBCO",
        "EMSJMSqueues",
        "MQs",
        "databases",
        "automation",
        "areas",
        "software",
        "development",
        "test",
        "automation",
        "framework",
        "data",
        "schema",
        "development",
        "SOAP",
        "web",
        "services",
        "implementation",
        "REST",
        "web",
        "services",
        "JAXRS",
        "Consumed",
        "SOAP",
        "REST",
        "web",
        "services",
        "data",
        "databases",
        "Configured",
        "Strutsconfig",
        "XML",
        "action",
        "mappings",
        "Message",
        "Middleware",
        "communication",
        "Enterprise",
        "application",
        "Experience",
        "user",
        "requests",
        "programs",
        "program",
        "components",
        "feasibility",
        "cost",
        "time",
        "compatibility",
        "systems",
        "computer",
        "capabilities",
        "Value",
        "Object",
        "Pattern",
        "MVC",
        "Factory",
        "Pattern",
        "Tibco",
        "Ecommerce",
        "part",
        "checkout",
        "flow",
        "application",
        "onJBOSS",
        "Application",
        "server",
        "Subversion",
        "version",
        "control",
        "management",
        "quality",
        "code",
        "unit",
        "testing",
        "Jira",
        "Maven",
        "script",
        "building",
        "application",
        "EnvironmentJ2EE",
        "JBOSS",
        "Application",
        "Server",
        "JSP",
        "Jquery",
        "Struts",
        "Spring",
        "Hibernate",
        "SOAP",
        "Webservices",
        "Oracle",
        "Rational",
        "Application",
        "Developer",
        "Maven",
        "JUnit",
        "Subversion",
        "JavaJ2EE",
        "Developer",
        "Mayo",
        "Clinic",
        "Minneapolis",
        "MN",
        "November",
        "February",
        "Project",
        "Description",
        "Mayo",
        "cloud",
        "healthcare",
        "technology",
        "solutions",
        "consumers",
        "businesses",
        "health",
        "plans",
        "manner",
        "health",
        "insurance",
        "Barack",
        "Obama",
        "administrations",
        "Patient",
        "Protection",
        "Affordable",
        "Care",
        "act",
        "PPACA",
        "states",
        "health",
        "exchanges",
        "mayo",
        "platform",
        "Roles",
        "Responsibilities",
        "analysis",
        "design",
        "projects",
        "sizes",
        "exposure",
        "aspects",
        "project",
        "lifecycle",
        "documentation",
        "conformance",
        "standards",
        "UI",
        "screens",
        "ticket",
        "information",
        "bookings",
        "Struts",
        "MVC",
        "presentation",
        "layers",
        "Development",
        "frontend",
        "content",
        "JSP",
        "Servlets",
        "DHTML",
        "JavaScript",
        "CSS",
        "HTML",
        "Spring",
        "Beans",
        "IOC",
        "Transaction",
        "management",
        "transactions",
        "business",
        "Struts",
        "framework",
        "Spring",
        "framework",
        "use",
        "Struts",
        "Framework",
        "Controller",
        "components",
        "View",
        "components",
        "Simulator",
        "Spring",
        "Source",
        "Tool",
        "Suite",
        "Developing",
        "application",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "usability",
        "SpringJDBC",
        "Template",
        "DAO",
        "Design",
        "Pattern",
        "application",
        "Stripes",
        "framework",
        "part",
        "action",
        "bean",
        "classes",
        "Data",
        "Access",
        "Layer",
        "POJOs",
        "tables",
        "thedatabase",
        "mapping",
        "Oracle",
        "database",
        "mapping",
        "SQL",
        "Databases",
        "Java",
        "database",
        "Packages",
        "Procedures",
        "Functions",
        "Batches",
        "SQL",
        "Queries",
        "Views",
        "Indexes",
        "Exceptions",
        "Toad",
        "Wrote",
        "PLSQL",
        "procedures",
        "Oracle",
        "database",
        "Created",
        "SOAP",
        "web",
        "service",
        "payment",
        "processing",
        "data",
        "thethird",
        "approach",
        "web",
        "services",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "UI",
        "Java",
        "Mailing",
        "Messaging",
        "Service",
        "JMS",
        "APIs",
        "notifications",
        "success",
        "failure",
        "process",
        "administrator",
        "system",
        "problems",
        "Configured",
        "WebLogic",
        "Application",
        "Server",
        "code",
        "Support",
        "installation",
        "application",
        "releases",
        "production",
        "Used",
        "Jira",
        "bugs",
        "Gradle",
        "Jenkins",
        "application",
        "environments",
        "Daily",
        "Rolling",
        "Log",
        "Log4j",
        "Microsoft",
        "Visual",
        "Explorer",
        "Agile",
        "Methodology",
        "NetBeans",
        "IDE",
        "TOAD",
        "database",
        "query",
        "process",
        "queries",
        "Construction",
        "Changes",
        "Code",
        "Unit",
        "testing",
        "Test",
        "Result",
        "unit",
        "testing",
        "integration",
        "testing",
        "bugs",
        "change",
        "requests",
        "Developed",
        "Junit",
        "test",
        "cases",
        "test",
        "coverage",
        "application",
        "Unit",
        "Integration",
        "test",
        "cases",
        "JUNIT",
        "Framework",
        "Functional",
        "Flow",
        "EnvironmentJ2EE",
        "JSP",
        "Servlets",
        "DHTML",
        "JavaScript",
        "CSS",
        "HTML",
        "Spring",
        "Struts",
        "SOAPbasedWeb",
        "Services",
        "Oracle",
        "PLSQL",
        "Toad",
        "JUnit",
        "Jquery",
        "SQL",
        "Navigator",
        "SVN",
        "Gradle",
        "24and",
        "WebLogic",
        "Server",
        "Java",
        "Programmer",
        "Birla",
        "Sun",
        "Life",
        "September",
        "October",
        "Description",
        "Birla",
        "Sun",
        "Life",
        "services",
        "company",
        "India",
        "life",
        "insurance",
        "investment",
        "solutions",
        "Customers",
        "access",
        "range",
        "products",
        "services",
        "goals",
        "Roles",
        "Responsibilities",
        "User",
        "Interface",
        "Java",
        "Server",
        "Faces",
        "JSF",
        "HTML",
        "Cascading",
        "Style",
        "Sheets",
        "CSS",
        "XML",
        "JSF",
        "user",
        "Interface",
        "components",
        "JSF",
        "tab",
        "panels",
        "Panel",
        "groups",
        "data",
        "components",
        "triggers",
        "calendar",
        "change",
        "listeners",
        "JSF",
        "end",
        "GUI",
        "layout",
        "UI",
        "Components",
        "JSF",
        "AJAX",
        "communication",
        "JQuery",
        "client",
        "customer",
        "experience",
        "user",
        "interface",
        "screens",
        "JSF20",
        "Prime",
        "component",
        "library",
        "Rich",
        "faces",
        "components",
        "pages",
        "presentation",
        "layer",
        "Model",
        "View",
        "Architecture",
        "Spring",
        "MVC",
        "Managed",
        "Spring",
        "Core",
        "dependency",
        "injectionInversion",
        "control",
        "IOC",
        "security",
        "help",
        "Spring",
        "Security",
        "ACEGI",
        "web",
        "services",
        "SOAPUI",
        "Web",
        "Service",
        "Explorer",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "XSL",
        "SOAP",
        "XML",
        "vice",
        "versa",
        "Developed",
        "SOAP",
        "Web",
        "services",
        "information",
        "party",
        "EJBs",
        "session",
        "entity",
        "beans",
        "business",
        "logic",
        "data",
        "manipulations",
        "database",
        "Developed",
        "Data",
        "access",
        "bean",
        "EJBs",
        "data",
        "database",
        "Developed",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "design",
        "pattern",
        "business",
        "logic",
        "Servlets",
        "Java",
        "Bean",
        "components",
        "modules",
        "System",
        "database",
        "connection",
        "JDBC",
        "access",
        "system",
        "Oracle",
        "data",
        "validation",
        "load",
        "processes",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "functionality",
        "business",
        "processing",
        "time",
        "SQL",
        "DBMS_SQL",
        "DBMS_DDL",
        "Functions",
        "Procedures",
        "database",
        "Insertion",
        "Deletion",
        "audit",
        "routines",
        "Code",
        "Reviews",
        "PL",
        "SQL",
        "Code",
        "Tuning",
        "systems",
        "support",
        "maintenance",
        "services",
        "Defect",
        "Fixing",
        "Feature",
        "Enhancements",
        "Testing",
        "Documentation",
        "CVS",
        "version",
        "control",
        "management",
        "Maven",
        "BuildDeployed",
        "application",
        "Tomcat",
        "server",
        "Environment",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JSP",
        "JSF",
        "EJB",
        "Spring",
        "SOAP",
        "Webservices",
        "Eclipse",
        "Tomcat",
        "Oracle",
        "PLSQL",
        "CVS",
        "Maven",
        "Waterfall",
        "Education",
        "Bachelors",
        "Skills",
        "JAVA",
        "years",
        "jQuery",
        "years",
        "ORACLE",
        "years",
        "years",
        "UI",
        "years",
        "Java",
        "STS",
        "Tomcat",
        "Gulp",
        "Spring",
        "Tool",
        "Suite",
        "Spring",
        "Spring",
        "Boot",
        "Hibernate",
        "MongoDB",
        "RESTful",
        "Web",
        "Service",
        "Oracle",
        "HTML5",
        "CSS3",
        "JQuery",
        "Node",
        "Js",
        "Express",
        "JavaScript",
        "GIT",
        "JMS",
        "Jenkins",
        "Agile",
        "JIRA",
        "tool",
        "Selenium",
        "Log4j",
        "Maven",
        "years",
        "Javascript",
        "PHP",
        "MySQL",
        "Android",
        "ASP",
        "Information",
        "SKILLS",
        "Java",
        "years",
        "JQuery",
        "years",
        "Oracle",
        "years",
        "years",
        "UI",
        "years",
        "INFORMATION",
        "EXPERTISE",
        "SPECIALIZATION",
        "Experience",
        "J2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JDBC",
        "EJB",
        "JNDI",
        "JMS",
        "designing",
        "developing",
        "Software",
        "Agile",
        "Waterfall",
        "methodologies",
        "Experience",
        "User",
        "Experience",
        "UX",
        "design",
        "development",
        "User",
        "Interactive",
        "UI",
        "Web",
        "Pages",
        "User",
        "Interfaces",
        "HTML",
        "CSS3",
        "Bootstrap",
        "SASSJavaScript",
        "Jquery",
        "React",
        "JS",
        "web",
        "applications",
        "J2EE",
        "JSP",
        "Servlets",
        "JSF",
        "HTML5",
        "JavaScript",
        "JSON",
        "JQuery",
        "CSS3",
        "XML",
        "JDBC",
        "JNDI",
        "Expertise",
        "development",
        "deployment",
        "web",
        "enterprise",
        "applications",
        "J2EE",
        "technologies",
        "Servlets",
        "JSP",
        "Struts",
        "JMS",
        "Hibernate",
        "Spring",
        "JDBC",
        "JNDI",
        "JSF",
        "JS",
        "Java",
        "Beans",
        "Web",
        "services",
        "SOAP",
        "Rest",
        "Knowledge",
        "J2EE",
        "design",
        "patterns",
        "MVC",
        "Front",
        "Controller",
        "Factory",
        "Abstract",
        "Factory",
        "Command",
        "Pattern",
        "Singleton",
        "Session",
        "Facade",
        "Transfer",
        "Object",
        "Business",
        "Delegate",
        "Data",
        "Access",
        "Object",
        "Expertise",
        "MVC",
        "architecture",
        "Web",
        "Framework",
        "Struts",
        "Spring",
        "Dependency",
        "Injection",
        "Data",
        "Access",
        "MVC",
        "Framework",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Framework",
        "business",
        "layer",
        "Dependency",
        "Injection",
        "AOP",
        "Spring",
        "MVC",
        "transaction",
        "management",
        "Hibernate",
        "persistence",
        "layer",
        "POJOs",
        "persistence",
        "database",
        "Good",
        "Exposure",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Web",
        "Services",
        "andhandson",
        "experience",
        "web",
        "services",
        "JAXRPC",
        "JAXWS",
        "SAAJ",
        "JAXRS",
        "SOAP",
        "RESTful",
        "WSDL",
        "UDDI",
        "registry",
        "Experience",
        "web",
        "applications",
        "WebLogic",
        "WebSphereand",
        "JBoss",
        "Application",
        "Servers",
        "handson",
        "experience",
        "Tomcatweb",
        "Server",
        "Expertise",
        "XML",
        "documents",
        "XSDvalidations",
        "SAX",
        "DOM",
        "parsers",
        "data",
        "XML",
        "documents",
        "technologies",
        "DTD",
        "XSL",
        "XSLT",
        "XPATH",
        "JAXB",
        "JAXP",
        "Expertise",
        "IDE",
        "tools",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Web",
        "Sphere",
        "Application",
        "Developer",
        "WSAD",
        "WeblogicWorkshop",
        "RSA",
        "andNetbeans",
        "web",
        "applications",
        "Expertise",
        "BootstrapAngular",
        "JS",
        "Node",
        "JSExpress",
        "Mongoose",
        "BodyParser",
        "Sequelize",
        "HTTP",
        "FileSystem",
        "BrowserSync",
        "etc",
        "Log",
        "4j",
        "Handson",
        "experience",
        "source",
        "control",
        "tools",
        "CVS",
        "Clear",
        "Case",
        "SVN",
        "Git",
        "Surround",
        "SCM",
        "deployment",
        "ear",
        "jars",
        "Jenkins",
        "ANT",
        "Mavendeploys",
        "tools",
        "configuration",
        "changes",
        "application",
        "integration",
        "testing",
        "environment",
        "training",
        "materials",
        "Groovy",
        "Unit",
        "Gradle",
        "build",
        "framework",
        "others",
        "Experience",
        "testing",
        "tools",
        "applications",
        "JUnit",
        "Mockito",
        "FireBug",
        "FirePoster",
        "Unit",
        "testing",
        "QA",
        "team",
        "preparation",
        "Test",
        "plans",
        "concepts",
        "SQL",
        "Queries",
        "Functions",
        "Stored",
        "Procedures",
        "PLSQL",
        "Packages",
        "knowledge",
        "NoSQL",
        "DatabasesMongoDB",
        "andCouchDB",
        "Expertise",
        "Oracle",
        "SQL",
        "Developer",
        "GUI",
        "Graphical",
        "User",
        "Interface",
        "tool",
        "database",
        "development",
        "browse",
        "database",
        "SQL",
        "PLSQL",
        "understanding",
        "AgileSCRUM",
        "ability",
        "SCRUM",
        "meetings",
        "team",
        "activities",
        "strictdeadline",
        "environment",
        "client",
        "communication",
        "exposure",
        "clients",
        "application",
        "environment",
        "issues",
        "people",
        "levels",
        "stakeholders",
        "teams",
        "management",
        "TECHNICAL",
        "PROFICIENCY",
        "Languages",
        "Core",
        "JAVA",
        "C",
        "CC",
        "Web",
        "Technologies",
        "HTML",
        "HTML5",
        "XML",
        "DHTML",
        "CSS2",
        "CSS3",
        "JQuery",
        "CSS",
        "Animation",
        "JavaScript",
        "AJAX",
        "JSON",
        "Bootstrap",
        "SQL",
        "SQL",
        "Server",
        "PLSQLoracle",
        "Application",
        "Frameworks",
        "Spring",
        "Hibernate",
        "Typescriptjs",
        "BabelJs",
        "CommonJs",
        "knockoutjs",
        "ReactjsBackbone",
        "JS",
        "Express",
        "JS",
        "Node",
        "JS",
        "Bootstrap",
        "UI",
        "Ext",
        "JS",
        "D3JS",
        "IDES",
        "EclipseNetBeansNotepadWebStorm",
        "Sublime",
        "Text",
        "Chrome",
        "development",
        "toolbar",
        "Firebug",
        "RDBMS",
        "Oracle",
        "MySQL",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "SDLC",
        "Waterfall",
        "Agile",
        "Version",
        "Controls",
        "TFS",
        "SVN",
        "GIT",
        "Operating",
        "Systems",
        "Windows",
        "MAC",
        "OS",
        "X"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:33:33.845611",
    "resume_data": "Sr FullStack Java Developer Sr FullStack span lJavaspan span lDeveloperspan Sr FullStack Java Developer Comcast Corporation Herndon VA JavaJ2EE Full Stack Developer with 7 Years of experience on Enterprise applications Distributed Application Development ClientServer Applications Servlets communication InternetIntranet based database applications and developing testing and implementing application environment Certified Oracle Java SE6 Programmer OCPJP 6 Strong in the complete Software Development Life Cycle SDLC including requirements definition design programmingtesting and implementation of major systems Ability to assimilate new technologies very quickly and apply that knowledge to the fast growing and ever changing markets of Information Technology Authorized to work in the US for any employer Work Experience Sr FullStack Java Developer Comcast Corporation Herndon VA January 2016 to Present Project Description Developing new voice and video features that allow customers to connect with family and friends inside and outside of the XFINITY network more easily and personally through their smartphones tablets and TVs Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using AngularJS HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngif ngshow nghide ngchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery AngularJS Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Full Stack Java Developer WellsFargoBank San Francisco CA August 2014 to December 2015 Project Description Wells Fargo deals with core banking system This is a highquality clientserver banking software application covering Retail and corporate banking services It is highly parameterized to support dynamic nature of customer It effectively meets the complex needs of the banking industry It liberates banking operations and takes towards efficient functionality Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Abilify Browserify HttpFetch BodyParser Express etc to create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the ReactWeb UI components using Atom IDE and made backend REST calls using whatwefetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using thereactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using eHttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to thenewGradlebased build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Developed REST controllers using Spring Data REST to serve the UI with required JSON data Used extensively Eclipse in thedevelopment and debugging the application Followed Agile methodology and involved in daily SCRUM meetings Environment Java 16 Junit 4 JBoss 7 Oracle 10g HTML JSP JavaScript ReactJS NodeJS Mongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS JAVAJ2EE Developer Berkley Risk Minneapolis MN March 2012 to July 2014 DescriptionBerkley risk is a national provider for insurance management and strategic planning services that designs implements and manages a wide variety of alternative market property and casualty programs to help the customer control their total cost of risk Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactionsDeveloped Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag librariesUsed struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the applicationAnalyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application onJBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnitUsed Jira for tracking bugsUsed Maven script for building and deploying the application EnvironmentJ2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion JavaJ2EE Developer Mayo Clinic Minneapolis MN November 2010 to February 2012 Project Description Mayo provides cloud based healthcare technology solutions that help consumers businesses connect communicate and engage with health plans in an undemanding and informed manner when acquiring health insurance Barack Obama administrations Patient Protection and Affordable Care act of 2010 PPACA requires states to implement health exchanges and mayo is working on the same platform Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project lifecycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML JavaScript CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logicIntegrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibilityUsed SpringJDBC Template and implemented DAO Design Pattern to connect and retrieving dataDeveloped the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using iBATIS developed POJOs mapped to the relational tables in thedatabase using iBATIS mapping filesWorked on Oracle as the backend database and used iBATIS to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to thethird companyFollowed topdown approach to implementingSOAPbased web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviewswalkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application andImplemented Unit and Integration test cases with JUNIT Framework based on Functional Flow EnvironmentJ2EE JSP Servlets DHTML JavaScript CSS HTML Spring Struts iBATIS SOAPbasedWeb Services Oracle PLSQL Toad 961 JUnit Jquery SQL Navigator SVN Gradle 24and WebLogic Server Java Programmer Birla Sun Life September 2009 to October 2010 Description Birla Sun Life is one of the leading financial services company in India offering life insurance and other investment solutions Customers receive access to a broad range of products and services that can help meet their financial goals Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and render retrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PL SQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for BuildDeployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors Skills JAVA 8 years jQuery 8 years ORACLE 8 years TESTING 8 years UI 8 years Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery AngularJS Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS 8 years Javascript PHP MySQL Android ASP Additional Information SKILLS Java 7 years JQuery 7 years Oracle 7 years testing 7 years UI 7 years ADDITIONAL INFORMATION EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS andparticipated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript Jquery AngularJS and React JS Experienced in developing and implementing web applications usingJava J2EE JSP Servlets JSF HTML5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services andhandson experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphereand JBoss Application Servers including handson experience in using Tomcatweb Server Expertise in developing XML documents with XSDvalidations SAX and DOM parsers to parse the data held in XML documents andexperience in other XMLrelated technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in usingJava IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD EclipseEE 3032 WeblogicWorkshop RSA 70 andNetbeans to develop dynamic web applications Expertise in BootstrapAngular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Mavendeploys tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUIand performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL DatabasesMongoDB andCouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Languages Core JAVA C CC Web Technologies HTML HTML5 XML DHTML CSS2 CSS3 JQuery CSS Animation SASS LESS JavaScript AJAX JSON Bootstrap Databases My SQL 50 SQL Server PLSQLoracle Application Frameworks Spring Hibernate AngularJS Typescriptjs BabelJs CommonJs knockoutjs ReactjsBackbone JS Express JS Node JS Bootstrap UI Ext JS D3JS IDES EclipseNetBeansNotepadWebStorm Sublime Text Chrome development toolbar and Firebug RDBMS Oracle MySQL Application Servers Apache Tomcat 55 60 SDLC Waterfall Agile Version Controls TFS SVN GIT Operating Systems Windows MAC OS X",
    "unique_id": "42b2dd53-04ab-4a76-bf23-e04d8cae84ff"
}