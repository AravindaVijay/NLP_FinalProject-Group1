{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ADESA Overall 3 experience in developing webbased applications software development and design using Python Django CSS HTML JavaScript Expert knowledge and experience in Object Oriented Design and Programming concepts Experience in Django Python web frameworks Object Oriented programming OOPS concepts using python and Django Experience using various version control systems like GitHub SVN CVS Hands on experience with installation and configuration of Apache Tomcat server Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django and Flask Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Strong experience with frontend technologies like HTML5 CSS3 Scripting languages like JavaScript JQuery AJAX Angular JS NodeJS BackboneJS and good knowledge in ReactJS EmberJS Strong hands on experience in developing the Enterprise and Web applications on Ntier Architecture using JavaJ2EE and javabased technologies such as Servlets JSP Hibernate Spring EJBs Struts JNDI Webservices XML JPA JMS and JDBC Experience in writing numerous test cases using JUnit framework Expertise in developing dynamic web pages in HTML with AngularJS for UI and developed single page application by using AngularJS Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience in using Docker Kubernetes and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Hands on Experience with parallel computing multithreading Experience with JSON based REST Web services Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Work Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Involved in analysis specification design and implementation and testing phases of Software Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Worked on implementing microservices triggered by Kubernetes nodeport Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Analyzed The SQL scripts and design the solution to implement using PySpark Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Responsible for debugging and troubleshooting the web applications with Kubernetes logs and Splunk logs Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Python and Bash tools to increase efficiency of retail management application Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python Django Web Framework AWS HTMLAmazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway SparkShell Scripting AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound EnergyBellevueWA Bellevue WA November 2017 to September 2018 Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Designing Celery and multithreading for scheduling the tasks and multiple activities Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Maintained solutions for using Docker Kubernetes Ansible Jenkins and Git for micro services and continuous deployment Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python 3427 Django 1917Java 17 SQL Java Script LinuxKubernetes Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Spark BootstrapAmazon s3 AWS Python Developer AIthinkers Hyderabad Telangana August 2015 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Skills C DJANGO HTML BOOTSTRAP PYTHON FLASK MATPLOTLIB NUMPY MYSQL ORACLE PLSQL POSTGRESQL SQL CSS SOAP JAVA jQuery BUGZILLA JIRA LINUX Additional Information TECHNICAL SKILLS Programming Languages  27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "entities": [
        "Node JS Wrote",
        "UNIX",
        "SQL Profiler and Analytics",
        "Created Terraform",
        "PHP Python",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "Bootstrap Implemented RESTful WebServices",
        "SVN Worked",
        "JUnit",
        "Maintained",
        "Shell",
        "the Performance of Stored Procedures and Queries Installed",
        "Implemented Terraform",
        "JavaJ2EE",
        "Amazon",
        "Bootstrap Working",
        "Python",
        "Pyunit",
        "NetBeans Strong",
        "Oracle Relational",
        "Software Implemented",
        "Jenkins",
        "Bash",
        "Model View Control MVC Architecture",
        "VLAN Trunk",
        "DB Created",
        "Created Python",
        "SNS Integration",
        "Django",
        "Python and Flask Postgres Database Wrote",
        "Spark for Data Analysis",
        "Responsibilities Involved",
        "Git",
        "Ntier Architecture",
        "ANSIBLE",
        "Terraform Developed Merge",
        "Python REST API Framework",
        "DjangoREST",
        "Develop",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "the RPM Package",
        "REST API",
        "Developed Serverside",
        "Collaborated",
        "Automate",
        "HTML CSS jQuery",
        "CLI",
        "Bash Shell Scripting",
        "SQLbased",
        "MVC",
        "GitHub SVN CVS Hands",
        "Spark",
        "Sound Energy Inc",
        "Integration Testing",
        "GIT",
        "Node JS",
        "Present Description ADESA Inc",
        "CSV",
        "HTML CSS",
        "Object Oriented Design",
        "Terraform",
        "Web Services",
        "Servlets JSP Hibernate Spring EJBs",
        "QA",
        "IAM",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Python Spring Security Created Python",
        "Oracle MySQL PostgreSQL",
        "AWS",
        "PySpark Read",
        "SAX",
        "Performed Unit",
        "Created an AWS Lambda",
        "Python Spring IOC Inversion",
        "SQL",
        "Kubernetes Developed and Deployed",
        "lPythonspan",
        "Kubernetes",
        "SSH",
        "S3",
        "the United States",
        "DOM API",
        "Wrote",
        "Routing Create",
        "API Integration Development Life Cycle SDLC",
        "Pandas",
        "CRUD",
        "CloudTrail",
        "Djangos",
        "Firebug Used JIRA",
        "UI",
        "SMTP",
        "Created Business Logic",
        "SVN",
        "View Sets",
        "CSS",
        "REST",
        "AWS Experienced",
        "NoSQL",
        "Software Development Life Cycle",
        "Routers Involved",
        "PyTest",
        "Integration",
        "MFA"
    ],
    "experience": "Experience in Django Python web frameworks Object Oriented programming OOPS concepts using python and Django Experience using various version control systems like GitHub SVN CVS Hands on experience with installation and configuration of Apache Tomcat server Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django and Flask Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Strong experience with frontend technologies like HTML5 CSS3 Scripting languages like JavaScript JQuery AJAX Angular JS NodeJS BackboneJS and good knowledge in ReactJS EmberJS Strong hands on experience in developing the Enterprise and Web applications on Ntier Architecture using JavaJ2EE and javabased technologies such as Servlets JSP Hibernate Spring EJBs Struts JNDI Webservices XML JPA JMS and JDBC Experience in writing numerous test cases using JUnit framework Expertise in developing dynamic web pages in HTML with AngularJS for UI and developed single page application by using AngularJS Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience in using Docker Kubernetes and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Hands on Experience with parallel computing multithreading Experience with JSON based REST Web services Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Work Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Involved in analysis specification design and implementation and testing phases of Software Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Worked on implementing microservices triggered by Kubernetes nodeport Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Analyzed The SQL scripts and design the solution to implement using PySpark Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Responsible for debugging and troubleshooting the web applications with Kubernetes logs and Splunk logs Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Python and Bash tools to increase efficiency of retail management application Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python Django Web Framework AWS HTMLAmazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway SparkShell Scripting AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound EnergyBellevueWA Bellevue WA November 2017 to September 2018 Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Designing Celery and multithreading for scheduling the tasks and multiple activities Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Maintained solutions for using Docker Kubernetes Ansible Jenkins and Git for micro services and continuous deployment Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python 3427 Django 1917Java 17 SQL Java Script LinuxKubernetes Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Spark BootstrapAmazon s3 AWS Python Developer AIthinkers Hyderabad Telangana August 2015 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Skills C DJANGO HTML BOOTSTRAP PYTHON FLASK MATPLOTLIB NUMPY MYSQL ORACLE PLSQL POSTGRESQL SQL CSS SOAP JAVA jQuery BUGZILLA JIRA LINUX Additional Information TECHNICAL SKILLS Programming Languages   27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "experience",
        "applications",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "Expert",
        "knowledge",
        "experience",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "Experience",
        "Django",
        "Python",
        "web",
        "frameworks",
        "programming",
        "OOPS",
        "concepts",
        "python",
        "Django",
        "Experience",
        "version",
        "control",
        "systems",
        "GitHub",
        "SVN",
        "CVS",
        "Hands",
        "experience",
        "installation",
        "configuration",
        "Apache",
        "Tomcat",
        "server",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "Pycharm",
        "Eclipse",
        "NetBeans",
        "experience",
        "frontend",
        "technologies",
        "HTML5",
        "CSS3",
        "Scripting",
        "languages",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JS",
        "NodeJS",
        "BackboneJS",
        "knowledge",
        "ReactJS",
        "EmberJS",
        "hands",
        "experience",
        "Enterprise",
        "Web",
        "applications",
        "Ntier",
        "Architecture",
        "JavaJ2EE",
        "technologies",
        "Servlets",
        "JSP",
        "Hibernate",
        "Spring",
        "EJBs",
        "Struts",
        "JNDI",
        "Webservices",
        "XML",
        "JPA",
        "JMS",
        "JDBC",
        "Experience",
        "test",
        "cases",
        "JUnit",
        "framework",
        "Expertise",
        "web",
        "pages",
        "HTML",
        "UI",
        "page",
        "application",
        "testing",
        "applications",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MongoDB",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Developed",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "code",
        "PyTest",
        "Unittest",
        "Experience",
        "Docker",
        "Kubernetes",
        "Ansible",
        "deployment",
        "execution",
        "benchmark",
        "suite",
        "cluster",
        "machines",
        "Hands",
        "Experience",
        "computing",
        "Experience",
        "JSON",
        "REST",
        "Web",
        "services",
        "Experience",
        "Bash",
        "Shell",
        "Scripting",
        "SQL",
        "Java",
        "Full",
        "stack",
        "web",
        "development",
        "Python",
        "SQL",
        "Numpy",
        "Pandas",
        "Spark",
        "Data",
        "Analysis",
        "Model",
        "building",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "ADESA",
        "Carmel",
        "September",
        "Present",
        "Description",
        "ADESA",
        "Inc",
        "car",
        "auctions",
        "services",
        "vehicle",
        "industry",
        "North",
        "America",
        "company",
        "services",
        "auction",
        "transportation",
        "inspection",
        "title",
        "repossession",
        "administration",
        "vehicle",
        "research",
        "services",
        "data",
        "service",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managed",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "microservices",
        "Kubernetes",
        "nodeport",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "Worked",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "AWS",
        "Lambda",
        "architecture",
        "AWS",
        "S3",
        "Buckets",
        "thumbnail",
        "create",
        "event",
        "user",
        "picture",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "SQL",
        "scripts",
        "solution",
        "PySpark",
        "Read",
        "Parquet",
        "CSV",
        "files",
        "S3",
        "business",
        "logic",
        "output",
        "S3",
        "Pandas",
        "PySpark",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "jobs",
        "shell",
        "scripting",
        "Understanding",
        "configuration",
        "CloudTrail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systems",
        "IAM",
        "Responsible",
        "web",
        "applications",
        "Kubernetes",
        "logs",
        "Splunk",
        "logs",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTMLAmazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Dynamo",
        "DB",
        "Python",
        "Django",
        "API",
        "Gateway",
        "SparkShell",
        "Scripting",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Python",
        "Developer",
        "Puget",
        "Sound",
        "EnergyBellevueWA",
        "Bellevue",
        "WA",
        "November",
        "September",
        "Puget",
        "Sound",
        "Energy",
        "Inc",
        "gas",
        "utility",
        "company",
        "United",
        "States",
        "company",
        "generation",
        "transmission",
        "distribution",
        "electricity",
        "distribution",
        "gas",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Designing",
        "Celery",
        "tasks",
        "activities",
        "collections",
        "Python",
        "user",
        "objects",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "day",
        "day",
        "usage",
        "SQL",
        "Profiler",
        "Analytics",
        "query",
        "optimization",
        "maintenance",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Integration",
        "data",
        "storage",
        "solutions",
        "Django",
        "ORM",
        "system",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "team",
        "QA",
        "DB",
        "standards",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "integration",
        "database",
        "systems",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "Wrote",
        "shell",
        "scripts",
        "Spark",
        "configuration",
        "files",
        "S3",
        "time",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Developed",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "solutions",
        "Docker",
        "Kubernetes",
        "Ansible",
        "Jenkins",
        "Git",
        "micro",
        "services",
        "deployment",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "1917Java",
        "SQL",
        "Java",
        "Script",
        "LinuxKubernetes",
        "Shell",
        "Scripting",
        "Mongo",
        "DB",
        "HTML",
        "Angular",
        "JS",
        "Eclipse",
        "JQuery",
        "JSON",
        "XML",
        "CSS",
        "MySQL",
        "Spark",
        "BootstrapAmazon",
        "s3",
        "AWS",
        "Python",
        "Developer",
        "AIthinkers",
        "Hyderabad",
        "Telangana",
        "August",
        "June",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "SQL",
        "queries",
        "PLSQL",
        "functions",
        "Command",
        "Line",
        "Interface",
        "CLI",
        "tool",
        "hat",
        "Linux",
        "Pythons",
        "XML",
        "parser",
        "SAX",
        "DOM",
        "API",
        "amounts",
        "data",
        "DB",
        "Linux",
        "Services",
        "REST",
        "web",
        "services",
        "Shell",
        "script",
        "Build",
        "RPM",
        "Package",
        "Product",
        "upgrade",
        "features",
        "Design",
        "test",
        "cases",
        "REST",
        "API",
        "REST",
        "API",
        "test",
        "framework",
        "development",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Design",
        "test",
        "cases",
        "CLI",
        "automation",
        "Python",
        "Unit",
        "testing",
        "unit",
        "test",
        "cases",
        "Pyunit",
        "framework",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test",
        "network",
        "subnet",
        "VLANs",
        "Routers",
        "automation",
        "creations",
        "VLAN",
        "Trunk",
        "port",
        "Routing",
        "Create",
        "branch",
        "code",
        "changes",
        "Master",
        "branch",
        "SVN",
        "version",
        "control",
        "commands",
        "Linux",
        "Environment",
        "Python",
        "Java",
        "PLSQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Skills",
        "C",
        "DJANGO",
        "HTML",
        "BOOTSTRAP",
        "PYTHON",
        "FLASK",
        "MATPLOTLIB",
        "NUMPY",
        "MYSQL",
        "ORACLE",
        "PLSQL",
        "POSTGRESQL",
        "SQL",
        "CSS",
        "SOAP",
        "jQuery",
        "BUGZILLA",
        "JIRA",
        "LINUX",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "C",
        "C",
        "UML",
        "design",
        "Java",
        "SQL",
        "PLSQL",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Numpy",
        "matPlotLib",
        "Pickle",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "pdb",
        "Frameworks",
        "Django",
        "web2py",
        "pyramid",
        "Flask",
        "Databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "CloudTechnologies",
        "Rackspace",
        "Cloud",
        "Amazon",
        "S3",
        "Jira",
        "Bugzilla",
        "Rational",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SNMP",
        "SMTP",
        "REST",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "OperatingSystems",
        "Linux",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:45:24.200030",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ADESA Overall 3 experience in developing webbased applications software development and design using Python Django CSS HTML JavaScript Expert knowledge and experience in Object Oriented Design and Programming concepts Experience in Django Python web frameworks Object Oriented programming OOPS concepts using python and Django Experience using various version control systems like GitHub SVN CVS Hands on experience with installation and configuration of Apache Tomcat server Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experience in developing web applications by following Model View Control MVC Architecture using serverside applications Django and Flask Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Strong experience with frontend technologies like HTML5 CSS3 Scripting languages like JavaScript JQuery AJAX Angular JS NodeJS BackboneJS and good knowledge in ReactJS EmberJS Strong hands on experience in developing the Enterprise and Web applications on Ntier Architecture using JavaJ2EE and javabased technologies such as Servlets JSP Hibernate Spring EJBs Struts JNDI Webservices XML JPA JMS and JDBC Experience in writing numerous test cases using JUnit framework Expertise in developing dynamic web pages in HTML with AngularJS for UI and developed single page application by using AngularJS Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience in using Docker Kubernetes and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Hands on Experience with parallel computing multithreading Experience with JSON based REST Web services Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Work Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Involved in analysis specification design and implementation and testing phases of Software Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Worked on implementing microservices triggered by Kubernetes nodeport Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Analyzed The SQL scripts and design the solution to implement using PySpark Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the jobs using shell scripting Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Responsible for debugging and troubleshooting the web applications with Kubernetes logs and Splunk logs Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Python and Bash tools to increase efficiency of retail management application Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python Django Web Framework AWS HTMLAmazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway SparkShell Scripting AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound EnergyBellevueWA Bellevue WA November 2017 to September 2018 Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Designing Celery and multithreading for scheduling the tasks and multiple activities Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Maintained solutions for using Docker Kubernetes Ansible Jenkins and Git for micro services and continuous deployment Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python 3427 Django 1917Java 17 SQL Java Script LinuxKubernetes Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Spark BootstrapAmazon s3 AWS Python Developer AIthinkers Hyderabad Telangana August 2015 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Worked on network subnet VLANs and Routers Involved in automation of creations of VLAN Trunk port and Routing Create branch and Commit the code changes to Master branch using SVN version control and commands in Linux Environment Python Java PLSQL Linux HTML XHTML CSS AJAX JavaScript Skills C DJANGO HTML BOOTSTRAP PYTHON FLASK MATPLOTLIB NUMPY MYSQL ORACLE PLSQL POSTGRESQL SQL CSS SOAP JAVA jQuery BUGZILLA JIRA LINUX Additional Information TECHNICAL SKILLS Programming Languages Python372 27 C C UML design Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "unique_id": "432e5f12-4584-43a8-9fcb-9ae48f13e132"
}