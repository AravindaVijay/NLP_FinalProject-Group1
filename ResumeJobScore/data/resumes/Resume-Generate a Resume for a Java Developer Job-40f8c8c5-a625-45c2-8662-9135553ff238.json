{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Liberty Dover NH Overall around 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modelling skilled at progressing from problem statement to welldocumented designs and code Experienced in RDBMS such as Oracle MySQL and PostgreSQL and IBM DB2 databases Indepth knowledge and work experience in managing NoSQL based databases specifically like MongoDB and Cassandra managing the very high load of transactions Proficient with various Software Development Life Cycle SDLC methodologies like Agile Scrum Strong working experience in application development using JDBC Servlets JSP Java Beans JMS Struts spring Hibernate and Web services Experience in developing web applications using technologies like HTML Java Script AJAX DOJO JSON CSS JSP Tag libraries and GWT Experience in developing webbased applications using Python Django PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Worked in Service Oriented Architecture to develop language independent services using Web Services Apache CXF SOAP WSDL and Axis 20 soap stack Proficient in writing ANT Maven builds script to automate the application build and deployment Good experience in developing and updating a web page using HTML5 CSS3 AngularJS Reactjs Java Script backbonejs and JQuery across various browsers Experienced in UI frameworks such as jQuery Ajax Google Web Toolkit GWT JavaScript Node JS React JS Backbone JS Angular2 AngularJS Tag Libraries Custom Tags Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache Good experience in using Amazon Web Services AWS and AWS SNSSQS for delivering messages Deploy application updates to AWS and monitored the load balancing of different instances Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing clientserver business applications using Microservices Designed and developed Microservices business components using Spring Boot Indepth knowledge of core java concepts such as OOPS Collections Multithreading generics exception handling Thread pools concurrent utilities File IO and Serialization Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML into Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement RESTbased applications Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using JUnit Easy mock and Mockito TECHNOLOGY AND TOOLS Languages Java J2EE C C PLSQL Web Technologies HTML5 RWD jQuery JavaScript CSS NODE JS EJB JSON AJAX XML ESAPI JQuery AngularJS J2EE Technologies Servlets JSP EJB JMS JNDI Web Services JDBC SOAP AppWeb servers Apache Tomcat 5x IBM WebSphere 7x OC4J AWS Web Logic Frameworks Jakarta Struts spring IBM JADE Log4J SLF4J JPA Spring IOC Databases Oracle MS SQL Server My SQL and IBM DB2 Mongo DB RDBMS PostgreSQL 89 Operating Systems Windows UNIX Linux Web Services SOAP REST WADL XML JSON Source Control Tools WinCVS Serena Dimension SVN Git GitHub Clear Case Testing Tools HP Load Runner SOAP UI Mockito JUnit Jasmine Karma Selenium Jenkins Other Tools FileZilla BugZilla Putty Rapid SQL IBM DB2 client CISM JIRA SQL Developer Build Tools Maven ANT Grunt Gradle Work Experience Sr Java Developer Liberty Dover NH US May 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on localhost Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot Java J2EE Developer Disney FL August 2016 to April 2017 Responsibilities Developed application using Spring Framework that leverages classical Model View Controller MVC architecture and Hibernate as the ORM Developed Chart Web Services controllers with generic interfaces and default implementations exposed as Java Spring RESTful Web services with Chart Specific parameters passed as query string Developed Summarization WebServices for synchronization of Transactional data with archived data the Java layer services used to intercept the main transactional classes were refactored to provide a general interception layer for any kind of transactional data in the system Created custom directives utilizing AngularJS Created REST based web services using JAXRS Extensively used Hibernate Criteria API in data access layer to access and update information in the database Utilized multithreading concurrency memory management and NIO and concurrent package in extensively Written complex SQL statementsJoins and procedures to fetch the data from the database Designed and developed persistence layer build on ORM framework and developed it using Hibernate Developed application service components and configured beans using Spring IOC Implemented multi inputoutput Spring AOP for various requirements Implementing or exposing the Microservices based on RESTful API utilizing Spring Boot with Spring MVC Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Spring framework AOP features and JDBC module features to persist the data to the database for few applications Used HTTP methods extensively to retrieve the data from the Rest API and used that data to update the page dynamically Used Spring Security for implementing authentication authorization and access control features Implemented Java 18 features including Lambda Advanced for each loop and Streams Used GIT for version control Log4J for logging and developed the pomxml using Maven for compiling the dependencies Developed and executed unit test cases using JUnit Mockito and deployed application on AWS by using Elastic Bean Stalk Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQ Series Used JSON as response type in REST services Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Built ANT scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10g XML MVC Hibernate MQSeries WebSphere JUnit Subversion JProfiler Ant ClearCase Clear Quest Java Developer Xerox Inc Atlanta GA US January 2016 to July 2016 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful webservices to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as microservices Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Implemented the project in Agile methodology participated actively in daily stand up calls Served as POC for on call support in the production team on a rotation basis Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Java Developer ATT Dallas TX US April 2015 to December 2015 Responsibilities Reviewed the functional nonfunctional requirements and high level designs Worked with Agile Methodologies Used Spring Web flow for integration purpose in application development SOAP UI is used for web services testing Developed and integrated with server components using spring Hibernate Developed user interfaces using JSF UI components Validators Events and Listeners Developed server side validations using JSF Extensively worked with core java like Collections String Builder and Interfaces Developed code participating in different layers of the application such as JSPs for presentation Servlets as controller and EJBs for holding business logic Compiled and built the application using Maven scripts and deployed the application Implemented Hash table and hash set for inserting and retrieving values Extensively used Spring and Hibernate in Spring MVC Implemented enterprise applications using WSDL SOAP and XML schema Developed different design methodology such as MVC patterns Used Hibernate for Object mapping Developed Message Driven Beans as Queue listeners for JMS queues Worked extensively in the backend SQL Server database Used Log4J for any errors in the application Analyze and fix issues related to Soap Web services and Application responses Used HTML CSS and Java Script Bootstrap for developing user interface Used Spring Batch for scheduling and maintenance of batch jobs Used MAVEN as build management tool Used WSDL to post the services in the UDDI Worked with XPATH when need to identify objects in the screen Developed lookup tables and views to speed up queries Provide critical support to current order management systems being used as and when required Worked in Quality analysis and testing Environment Java EJB Hibernate JSF Spring Selenium SQL Server 2008 R2 XML JUnit XSLT IDE HTML CSS JavaScript Apache Tomcat JMS SOAP Agile Bootstrap Maven Spring Batch UDDI JSP Log4j Java Developer Apollo Hospitals October 2013 to March 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC Used Rational Rose for the Use Case Object Class Collaboration and Sequence Diagrams Created Servlets which route to appropriate EJB components and render retrieved information Developed Session Beans to process requests and used Entity Beans to retrieve and update Implemented Executor Framework in Multithreading Designing and implementing Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Frontend is designed by using HTML CSS JSP Servlets JSTL Ajax and Struts Used JavaScript for page validation and XML with SAX to transfer data between applications Wrote PLSQL stored procedures Prepared statement and used API Involved in writing and executing stored procedures functions and triggers for Oracle Developed web application using Struts JSP Servlets Java beans that uses MVC design pattern Involved in writing the exception and validation classes using Struts validation rules Used Eclipse as IDE tool for creating Servlets JSP and XML Designed and developed Messagedriven beans that consumed the messages from the Java message queue Wrote SQL for JDBC prepared statements to retrieve the data from the database The application was deployed on the Tomcat Server Environment Java Multithreading EJB Session Beans HTML CSS JavaScript Servlet Struts JSP Oracle JDBC Eclipse Tomcat Java Developer Axis Services May 2010 to September 2013 Worked on Mail order validation web services project Technologies involved in this project are Web services JAXWS SOAP and XML Hibernate WebSphere MQ and Mainframe DB2CICS Responsibilities Developed GUI using JSP JavaScript and CSS Used MS Visio for creating business process diagrams Developed Action Servlets Action Form Java Bean classes for implementing business logic for the Struts Framework Developed Servlets and JSP based on MVC pattern using struts Action framework Developed all the tiers of the J2EE application Developed data objects to communicate with the database using JDBC in the database tier implemented business logic using EJBs in the middle tier developed Java Beans and helper classes to communicate with the presentation tier which consists of JSPs and Servlets Developed persistence layer modules using EJB Java Persistence API JPA annotations and Entity manager Developed Action and Form Bean classes to retrieve data and process server side validations Designed various tables required for the project in SQL server database and used Stored Procedures in the application Used SQL Server to create update and manipulate tables Used IntellIJ as IDE and Clear Case for version control Involved in impact analysis of Change requests and Bug fixes Used Tortoise SVN as a version controller for the source code check in and check outs Involved in development of User Interface using XSLT HTML JavaScript Ajax and JSTL Developed Automated Test Scripts to perform Functional Testing Performance Testing Wrote JUnit Test cases which support the application Used JIRA as the task and project management tool to assign track report and manage bugs on daily basis Wrote entities in Scala and Java along with named queries to interact with the desired database Environment Java 5 Struts PLSQL SQL server EJB IntellIJ Clear Case MS Visio Firebug Apache Tomcat JSP Java Script CSS Bugzilla Toad 90 Education Bachelors",
    "entities": [
        "Spring Controllers",
        "Spring Framework",
        "Indigo Oracle",
        "AJAX",
        "Spring MVC JSP JSTL",
        "IDE",
        "JQuery Upgraded",
        "Apache Camel Consumed",
        "Sequence Diagrams Created",
        "XMLJSON",
        "Hibernate Criteria API",
        "Ajax Used",
        "UNIX",
        "Spring Configuration",
        "JMS",
        "Jersey",
        "HTTP",
        "JTA",
        "Spring IOC",
        "Frontend",
        "Session Faade Business Delegate Bean Factory Singleton",
        "JSON",
        "Present Responsibilities Involved",
        "IBM",
        "CVS",
        "Oracle MS",
        "Amazon Web Services AWS",
        "Ajax",
        "Indepth",
        "Camel",
        "JAR",
        "SOAP",
        "XML",
        "DHTML",
        "Atlanta",
        "Multiple Process Service",
        "Developed Summarization WebServices",
        "WebLogic",
        "JUnit",
        "ClearCase",
        "Integrated Hibernate",
        "Java object Proficient",
        "JavaJ2EE",
        "Amazon",
        "TX",
        "Consumed",
        "the Tomcat Server Environment",
        "Created REST",
        "WebSphere",
        "SQL Server",
        "Implemented Executor Framework",
        "Developed",
        "Data Access",
        "Mockito TECHNOLOGY",
        "Dallas",
        "Used Hibernate for Object mapping Developed Message Driven Beans",
        "Tomcat WebSphere WebLogic",
        "Restful",
        "Developed Hibernate",
        "EJB JSON AJAX XML ESAPI JQuery AngularJS",
        "Spring MVC IOC",
        "MQ",
        "Technologies",
        "SpringHibernate API",
        "Spring and Hibernate",
        "HTML CSS JSP Servlets",
        "AGILE",
        "Spring Security",
        "Control Tools",
        "Software Development Life Cycle SDLC Used Rational Rose for the Use Case Object Class Collaboration",
        "Linux",
        "JSP",
        "Hibernate Developed",
        "MQ Series Used JSON",
        "REST Easy to Implement RESTbased",
        "Lambda Advanced",
        "JAXP SAX DOM",
        "jQuery Implemented",
        "Configure",
        "JBoss Servers",
        "MVC",
        "Observer Developed Web",
        "Spring AOP Configured",
        "Elastic Bean Stalk Implemented",
        "Integration Testing",
        "Agile",
        "EJB",
        "GIT",
        "User Interface",
        "Oracle 12",
        "Spring IOC Implemented",
        "API",
        "US",
        "Oracle Developed",
        "MQSeries WebSphere JUnit Subversion",
        "Created",
        "AWS",
        "Scala",
        "MDB",
        "Hibernate QL Wrote",
        "JSF",
        "SAX",
        "HTML",
        "Clear Quest",
        "JSF UI",
        "Java Developer Apollo Hospitals",
        "the Struts Framework Developed Servlets",
        "Tomcat Server",
        "RESTFUL",
        "SQL",
        "XML Hibernate",
        "GitHub",
        "Transactional",
        "JQuery Worked in Service Oriented Architecture",
        "JDBC Servlets",
        "IO",
        "Chart Specific",
        "Struts JSP Servlets Java",
        "MAVEN",
        "J2EE",
        "Mongo DB RDBMS PostgreSQL",
        "JAXRS",
        "Developed Action Servlets Action",
        "Amazon AWS",
        "Handson",
        "Soap Web",
        "Jersey SOAP",
        "File IO",
        "JSP Spring",
        "GIT Experienced",
        "Spring Hibernate",
        "Maven",
        "XSLT",
        "lJavaspan",
        "GWT",
        "JavaScript",
        "Servlets Developed",
        "ANT",
        "queues Created",
        "UI",
        "API Involved",
        "Python Django PHP Angular",
        "J2EE Technologies Servlets JSP",
        "Experienced",
        "Inversion of Control IOC",
        "SVN",
        "CSS",
        "SpringHibernate",
        "Maven Ant",
        "JaxRS",
        "ATT",
        "jQuery",
        "Tomcat",
        "REST",
        "Oracle MySQL and PostgreSQL",
        "NIO",
        "NoSQL",
        "Application",
        "Software Development Life Cycle",
        "Amazon Web Services AWS Extensive",
        "WebSphere Application Server",
        "DOJO",
        "Web Services Apache CXF SOAP WSDL",
        "UI Experienced"
    ],
    "experience": "Experience in developing web applications using technologies like HTML Java Script AJAX DOJO JSON CSS JSP Tag libraries and GWT Experience in developing webbased applications using Python Django PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Worked in Service Oriented Architecture to develop language independent services using Web Services Apache CXF SOAP WSDL and Axis 20 soap stack Proficient in writing ANT Maven builds script to automate the application build and deployment Good experience in developing and updating a web page using HTML5 CSS3 AngularJS Reactjs Java Script backbonejs and JQuery across various browsers Experienced in UI frameworks such as jQuery Ajax Google Web Toolkit GWT JavaScript Node JS React JS Backbone JS Angular2 AngularJS Tag Libraries Custom Tags Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache Good experience in using Amazon Web Services AWS and AWS SNSSQS for delivering messages Deploy application updates to AWS and monitored the load balancing of different instances Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing clientserver business applications using Microservices Designed and developed Microservices business components using Spring Boot Indepth knowledge of core java concepts such as OOPS Collections Multithreading generics exception handling Thread pools concurrent utilities File IO and Serialization Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML into Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement RESTbased applications Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using JUnit Easy mock and Mockito TECHNOLOGY AND TOOLS Languages Java J2EE C C PLSQL Web Technologies HTML5 RWD jQuery JavaScript CSS NODE JS EJB JSON AJAX XML ESAPI JQuery AngularJS J2EE Technologies Servlets JSP EJB JMS JNDI Web Services JDBC SOAP AppWeb servers Apache Tomcat 5x IBM WebSphere 7x OC4J AWS Web Logic Frameworks Jakarta Struts spring IBM JADE Log4J SLF4J JPA Spring IOC Databases Oracle MS SQL Server My SQL and IBM DB2 Mongo DB RDBMS PostgreSQL 89 Operating Systems Windows UNIX Linux Web Services SOAP REST WADL XML JSON Source Control Tools WinCVS Serena Dimension SVN Git GitHub Clear Case Testing Tools HP Load Runner SOAP UI Mockito JUnit Jasmine Karma Selenium Jenkins Other Tools FileZilla BugZilla Putty Rapid SQL IBM DB2 client CISM JIRA SQL Developer Build Tools Maven ANT Grunt Gradle Work Experience Sr Java Developer Liberty Dover NH US May 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on localhost Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10 g Spring boot Java J2EE Developer Disney FL August 2016 to April 2017 Responsibilities Developed application using Spring Framework that leverages classical Model View Controller MVC architecture and Hibernate as the ORM Developed Chart Web Services controllers with generic interfaces and default implementations exposed as Java Spring RESTful Web services with Chart Specific parameters passed as query string Developed Summarization WebServices for synchronization of Transactional data with archived data the Java layer services used to intercept the main transactional classes were refactored to provide a general interception layer for any kind of transactional data in the system Created custom directives utilizing AngularJS Created REST based web services using JAXRS Extensively used Hibernate Criteria API in data access layer to access and update information in the database Utilized multithreading concurrency memory management and NIO and concurrent package in extensively Written complex SQL statementsJoins and procedures to fetch the data from the database Designed and developed persistence layer build on ORM framework and developed it using Hibernate Developed application service components and configured beans using Spring IOC Implemented multi inputoutput Spring AOP for various requirements Implementing or exposing the Microservices based on RESTful API utilizing Spring Boot with Spring MVC Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Spring framework AOP features and JDBC module features to persist the data to the database for few applications Used HTTP methods extensively to retrieve the data from the Rest API and used that data to update the page dynamically Used Spring Security for implementing authentication authorization and access control features Implemented Java 18 features including Lambda Advanced for each loop and Streams Used GIT for version control Log4J for logging and developed the pomxml using Maven for compiling the dependencies Developed and executed unit test cases using JUnit Mockito and deployed application on AWS by using Elastic Bean Stalk Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQ Series Used JSON as response type in REST services Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Built ANT scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10 g XML MVC Hibernate MQSeries WebSphere JUnit Subversion JProfiler Ant ClearCase Clear Quest Java Developer Xerox Inc Atlanta GA US January 2016 to July 2016 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful webservices to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as microservices Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12 g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Implemented the project in Agile methodology participated actively in daily stand up calls Served as POC for on call support in the production team on a rotation basis Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Java Developer ATT Dallas TX US April 2015 to December 2015 Responsibilities Reviewed the functional nonfunctional requirements and high level designs Worked with Agile Methodologies Used Spring Web flow for integration purpose in application development SOAP UI is used for web services testing Developed and integrated with server components using spring Hibernate Developed user interfaces using JSF UI components Validators Events and Listeners Developed server side validations using JSF Extensively worked with core java like Collections String Builder and Interfaces Developed code participating in different layers of the application such as JSPs for presentation Servlets as controller and EJBs for holding business logic Compiled and built the application using Maven scripts and deployed the application Implemented Hash table and hash set for inserting and retrieving values Extensively used Spring and Hibernate in Spring MVC Implemented enterprise applications using WSDL SOAP and XML schema Developed different design methodology such as MVC patterns Used Hibernate for Object mapping Developed Message Driven Beans as Queue listeners for JMS queues Worked extensively in the backend SQL Server database Used Log4J for any errors in the application Analyze and fix issues related to Soap Web services and Application responses Used HTML CSS and Java Script Bootstrap for developing user interface Used Spring Batch for scheduling and maintenance of batch jobs Used MAVEN as build management tool Used WSDL to post the services in the UDDI Worked with XPATH when need to identify objects in the screen Developed lookup tables and views to speed up queries Provide critical support to current order management systems being used as and when required Worked in Quality analysis and testing Environment Java EJB Hibernate JSF Spring Selenium SQL Server 2008 R2 XML JUnit XSLT IDE HTML CSS JavaScript Apache Tomcat JMS SOAP Agile Bootstrap Maven Spring Batch UDDI JSP Log4j Java Developer Apollo Hospitals October 2013 to March 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC Used Rational Rose for the Use Case Object Class Collaboration and Sequence Diagrams Created Servlets which route to appropriate EJB components and render retrieved information Developed Session Beans to process requests and used Entity Beans to retrieve and update Implemented Executor Framework in Multithreading Designing and implementing Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Frontend is designed by using HTML CSS JSP Servlets JSTL Ajax and Struts Used JavaScript for page validation and XML with SAX to transfer data between applications Wrote PLSQL stored procedures Prepared statement and used API Involved in writing and executing stored procedures functions and triggers for Oracle Developed web application using Struts JSP Servlets Java beans that uses MVC design pattern Involved in writing the exception and validation classes using Struts validation rules Used Eclipse as IDE tool for creating Servlets JSP and XML Designed and developed Messagedriven beans that consumed the messages from the Java message queue Wrote SQL for JDBC prepared statements to retrieve the data from the database The application was deployed on the Tomcat Server Environment Java Multithreading EJB Session Beans HTML CSS JavaScript Servlet Struts JSP Oracle JDBC Eclipse Tomcat Java Developer Axis Services May 2010 to September 2013 Worked on Mail order validation web services project Technologies involved in this project are Web services JAXWS SOAP and XML Hibernate WebSphere MQ and Mainframe DB2CICS Responsibilities Developed GUI using JSP JavaScript and CSS Used MS Visio for creating business process diagrams Developed Action Servlets Action Form Java Bean classes for implementing business logic for the Struts Framework Developed Servlets and JSP based on MVC pattern using struts Action framework Developed all the tiers of the J2EE application Developed data objects to communicate with the database using JDBC in the database tier implemented business logic using EJBs in the middle tier developed Java Beans and helper classes to communicate with the presentation tier which consists of JSPs and Servlets Developed persistence layer modules using EJB Java Persistence API JPA annotations and Entity manager Developed Action and Form Bean classes to retrieve data and process server side validations Designed various tables required for the project in SQL server database and used Stored Procedures in the application Used SQL Server to create update and manipulate tables Used IntellIJ as IDE and Clear Case for version control Involved in impact analysis of Change requests and Bug fixes Used Tortoise SVN as a version controller for the source code check in and check outs Involved in development of User Interface using XSLT HTML JavaScript Ajax and JSTL Developed Automated Test Scripts to perform Functional Testing Performance Testing Wrote JUnit Test cases which support the application Used JIRA as the task and project management tool to assign track report and manage bugs on daily basis Wrote entities in Scala and Java along with named queries to interact with the desired database Environment Java 5 Struts PLSQL SQL server EJB IntellIJ Clear Case MS Visio Firebug Apache Tomcat JSP Java Script CSS Bugzilla Toad 90 Education Bachelors",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Liberty",
        "Dover",
        "NH",
        "years",
        "experience",
        "designanalysis",
        "Java",
        "development",
        "web",
        "services",
        "architecture",
        "data",
        "problem",
        "statement",
        "designs",
        "code",
        "RDBMS",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "IBM",
        "DB2",
        "knowledge",
        "work",
        "experience",
        "NoSQL",
        "databases",
        "MongoDB",
        "Cassandra",
        "load",
        "transactions",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodologies",
        "Agile",
        "Scrum",
        "Strong",
        "working",
        "experience",
        "application",
        "development",
        "JDBC",
        "Servlets",
        "JSP",
        "Java",
        "Beans",
        "JMS",
        "Struts",
        "spring",
        "Hibernate",
        "Web",
        "services",
        "Experience",
        "web",
        "applications",
        "technologies",
        "HTML",
        "Java",
        "Script",
        "AJAX",
        "DOJO",
        "JSON",
        "CSS",
        "JSP",
        "Tag",
        "libraries",
        "GWT",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Worked",
        "Service",
        "Oriented",
        "Architecture",
        "language",
        "services",
        "Web",
        "Services",
        "Apache",
        "CXF",
        "SOAP",
        "WSDL",
        "Axis",
        "soap",
        "stack",
        "Proficient",
        "ANT",
        "Maven",
        "script",
        "application",
        "build",
        "deployment",
        "experience",
        "web",
        "page",
        "HTML5",
        "CSS3",
        "AngularJS",
        "Reactjs",
        "Java",
        "Script",
        "backbonejs",
        "JQuery",
        "browsers",
        "UI",
        "frameworks",
        "jQuery",
        "Ajax",
        "Google",
        "Web",
        "Toolkit",
        "GWT",
        "JavaScript",
        "Node",
        "JS",
        "React",
        "JS",
        "Backbone",
        "JS",
        "Angular2",
        "Tag",
        "Custom",
        "Tags",
        "experience",
        "data",
        "models",
        "Java",
        "applications",
        "SQL",
        "PLSQL",
        "ORM",
        "tool",
        "Hibernate",
        "experience",
        "databases",
        "MongoDB",
        "Cassandra",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "experience",
        "services",
        "EC2",
        "VPC",
        "Cloud",
        "Watch",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "Amazon",
        "RDS",
        "Elastic",
        "Cache",
        "Good",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "messages",
        "application",
        "updates",
        "AWS",
        "load",
        "balancing",
        "instances",
        "web",
        "services",
        "SOAP",
        "REST",
        "web",
        "services",
        "Python",
        "Scala",
        "Java",
        "features",
        "expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "stack",
        "UI",
        "technologies",
        "Grunt",
        "JS",
        "Gulp",
        "Server",
        "Yeoman",
        "generator",
        "Angular",
        "Expertise",
        "design",
        "development",
        "web",
        "enterpriselevel",
        "applications",
        "JavaJ2EE",
        "technologies",
        "Spring",
        "Hibernate",
        "EJB",
        "JPA",
        "JSF",
        "Struts",
        "framework",
        "Strong",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Annotations",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "Experience",
        "business",
        "applications",
        "Microservices",
        "Microservices",
        "business",
        "components",
        "Spring",
        "Boot",
        "knowledge",
        "core",
        "concepts",
        "Collections",
        "Multithreading",
        "generics",
        "exception",
        "Thread",
        "pools",
        "utilities",
        "File",
        "IO",
        "Serialization",
        "Hands",
        "experience",
        "XML",
        "technologies",
        "JAXP",
        "SAX",
        "DOM",
        "parsers",
        "XML",
        "Java",
        "object",
        "Proficient",
        "Web",
        "Services",
        "technologies",
        "frame",
        "WSDL",
        "SOAP",
        "REST",
        "JAXWS",
        "JAXB",
        "JAXRPC",
        "AXIS",
        "Jersey",
        "SOAP",
        "UI",
        "JAXRS",
        "specification",
        "Jersey",
        "REST",
        "Easy",
        "applications",
        "Experience",
        "applications",
        "Tomcat",
        "WebSphere",
        "WebLogic",
        "JBoss",
        "Servers",
        "UNIX",
        "shell",
        "scripts",
        "batch",
        "Hands",
        "experience",
        "Maven",
        "Ant",
        "build",
        "tools",
        "Jenkins",
        "builds",
        "environments",
        "Expert",
        "version",
        "control",
        "tools",
        "SVN",
        "CSV",
        "GIT",
        "writing",
        "unit",
        "test",
        "cases",
        "JUnit",
        "Easy",
        "mock",
        "Mockito",
        "TECHNOLOGY",
        "TOOLS",
        "Languages",
        "Java",
        "J2EE",
        "C",
        "C",
        "PLSQL",
        "Web",
        "Technologies",
        "HTML5",
        "RWD",
        "jQuery",
        "JavaScript",
        "CSS",
        "NODE",
        "JS",
        "EJB",
        "JSON",
        "AJAX",
        "XML",
        "ESAPI",
        "JQuery",
        "AngularJS",
        "J2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "EJB",
        "JMS",
        "JNDI",
        "Web",
        "Services",
        "JDBC",
        "SOAP",
        "AppWeb",
        "servers",
        "Apache",
        "Tomcat",
        "IBM",
        "WebSphere",
        "7x",
        "OC4J",
        "AWS",
        "Web",
        "Logic",
        "Frameworks",
        "Jakarta",
        "Struts",
        "IBM",
        "JADE",
        "Log4J",
        "SLF4J",
        "JPA",
        "Spring",
        "IOC",
        "Databases",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "SQL",
        "IBM",
        "DB2",
        "Mongo",
        "DB",
        "RDBMS",
        "PostgreSQL",
        "Operating",
        "Systems",
        "Windows",
        "UNIX",
        "Linux",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "JSON",
        "Source",
        "Control",
        "Tools",
        "WinCVS",
        "Serena",
        "Dimension",
        "SVN",
        "Git",
        "GitHub",
        "Clear",
        "Case",
        "Testing",
        "Tools",
        "HP",
        "Load",
        "Runner",
        "SOAP",
        "UI",
        "Mockito",
        "JUnit",
        "Jasmine",
        "Karma",
        "Selenium",
        "Jenkins",
        "Tools",
        "FileZilla",
        "BugZilla",
        "Putty",
        "Rapid",
        "SQL",
        "IBM",
        "DB2",
        "client",
        "CISM",
        "JIRA",
        "SQL",
        "Developer",
        "Build",
        "Tools",
        "Maven",
        "ANT",
        "Grunt",
        "Gradle",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Liberty",
        "Dover",
        "NH",
        "US",
        "May",
        "Present",
        "Responsibilities",
        "Full",
        "Life",
        "Cycle",
        "Software",
        "Development",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "testing",
        "phases",
        "System",
        "ModelViewController",
        "MVC",
        "architecture",
        "application",
        "principles",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Bean",
        "Factory",
        "Singleton",
        "Observer",
        "Developed",
        "Web",
        "services",
        "communication",
        "applications",
        "REST",
        "HTTP",
        "Metro",
        "Designed",
        "application",
        "JSP",
        "Spring",
        "MVC",
        "JNDI",
        "Spring",
        "IOC",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "Configured",
        "JPA",
        "Hibernate",
        "ORM",
        "tool",
        "jQuery",
        "scripting",
        "HTML",
        "DOJO",
        "widgets",
        "package",
        "browser",
        "incompatibilities",
        "IO",
        "package",
        "AJAX",
        "support",
        "Configured",
        "Maven",
        "dependencies",
        "application",
        "building",
        "processes",
        "directives",
        "HTML",
        "foundation",
        "web",
        "application",
        "Web",
        "services",
        "REST",
        "credit",
        "card",
        "information",
        "party",
        "Restful",
        "web",
        "services",
        "data",
        "UNIX",
        "commands",
        "shell",
        "scripting",
        "Angular",
        "JS",
        "http",
        "service",
        "services",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "Jasmine",
        "Karma",
        "unit",
        "testing",
        "JS",
        "modules",
        "JavaScript",
        "utility",
        "routines",
        "JaxRS",
        "framework",
        "results",
        "format",
        "Results",
        "UI",
        "pages",
        "Maven",
        "application",
        "server",
        "AGILE",
        "methodology",
        "Scrum",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Spring",
        "Validators",
        "persistence",
        "layer",
        "service",
        "layer",
        "components",
        "SpringHibernate",
        "API",
        "SpringHibernate",
        "annotations",
        "Hibernate",
        "QL",
        "Wrote",
        "services",
        "user",
        "data",
        "MongoDB",
        "application",
        "devices",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "web",
        "services",
        "representation",
        "AJAX",
        "requests",
        "Rest",
        "Client",
        "plugin",
        "rest",
        "APIs",
        "localhost",
        "Tomcat",
        "Server",
        "Unit",
        "Configure",
        "MongoDB",
        "NoSQL",
        "Web",
        "pages",
        "UI",
        "frameworks",
        "Html5",
        "CSS",
        "JavaScript",
        "JQuery",
        "UI",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "Responsible",
        "instance",
        "Amazon",
        "EC2",
        "AWS",
        "application",
        "AWS",
        "cloud",
        "servers",
        "Amazon",
        "AWS",
        "servers",
        "Linux",
        "environment",
        "SDLC",
        "tools",
        "GIT",
        "Jira",
        "Jenkins",
        "Maven",
        "build",
        "packaging",
        "deployments",
        "application",
        "components",
        "Grunt",
        "JavaScript",
        "task",
        "runner",
        "Jenkins",
        "ANT",
        "tools",
        "part",
        "build",
        "management",
        "Maven",
        "WAR",
        "JAR",
        "application",
        "Spring",
        "MVC",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "views",
        "controllers",
        "client",
        "manager",
        "modules",
        "Spring",
        "Batch",
        "Spring",
        "Bootand",
        "Spring",
        "Core",
        "Developed",
        "REST",
        "Web",
        "Services",
        "XMLJSON",
        "messages",
        "end",
        "Consumed",
        "SOAP",
        "web",
        "services",
        "stubs",
        "Apache",
        "Axis",
        "PLSQL",
        "queries",
        "oracle",
        "procedures",
        "client",
        "request",
        "validations",
        "processing",
        "JavaScript",
        "Deployed",
        "applications",
        "WebSphere",
        "Application",
        "Server",
        "configuration",
        "changes",
        "monitoring",
        "practices",
        "usage",
        "search",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "JUnit",
        "Log4j",
        "log",
        "runtime",
        "exception",
        "info",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "Spring",
        "Hibernate",
        "JMS",
        "XML",
        "REST",
        "AngularJS",
        "Grunt",
        "WSDL",
        "AJAX",
        "HTML",
        "JAVASCRIPT",
        "JQuery",
        "CSS",
        "GIT",
        "Log4J",
        "JAXB",
        "JSF",
        "JUnit38",
        "WebLogic",
        "Eclipse",
        "Indigo",
        "Oracle",
        "g",
        "Spring",
        "boot",
        "Java",
        "J2EE",
        "Developer",
        "Disney",
        "FL",
        "August",
        "April",
        "Responsibilities",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Hibernate",
        "ORM",
        "Chart",
        "Web",
        "Services",
        "controllers",
        "interfaces",
        "default",
        "implementations",
        "Java",
        "Spring",
        "Web",
        "services",
        "Chart",
        "Specific",
        "parameters",
        "query",
        "string",
        "Developed",
        "Summarization",
        "WebServices",
        "synchronization",
        "data",
        "data",
        "Java",
        "layer",
        "services",
        "classes",
        "interception",
        "layer",
        "kind",
        "data",
        "system",
        "custom",
        "directives",
        "Created",
        "REST",
        "web",
        "services",
        "JAXRS",
        "Hibernate",
        "Criteria",
        "API",
        "data",
        "access",
        "layer",
        "information",
        "database",
        "concurrency",
        "memory",
        "management",
        "NIO",
        "package",
        "SQL",
        "statementsJoins",
        "procedures",
        "data",
        "database",
        "persistence",
        "layer",
        "build",
        "ORM",
        "framework",
        "Hibernate",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IOC",
        "multi",
        "Spring",
        "AOP",
        "requirements",
        "Microservices",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "business",
        "components",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "Injection",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "Annotations",
        "Spring",
        "framework",
        "AOP",
        "features",
        "JDBC",
        "module",
        "features",
        "data",
        "database",
        "applications",
        "HTTP",
        "methods",
        "data",
        "API",
        "data",
        "page",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "access",
        "control",
        "features",
        "Java",
        "features",
        "Lambda",
        "Advanced",
        "loop",
        "Streams",
        "GIT",
        "version",
        "control",
        "pomxml",
        "Maven",
        "dependencies",
        "unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "application",
        "AWS",
        "Elastic",
        "Bean",
        "Stalk",
        "XML",
        "page",
        "contents",
        "JAXB",
        "XML",
        "Development",
        "Spring",
        "Framework",
        "Controllers",
        "Controller",
        "request",
        "response",
        "paradigm",
        "Spring",
        "Controllers",
        "SpringMVC",
        "Data",
        "UI",
        "layer",
        "JMS",
        "layer",
        "MDB",
        "message",
        "Messages",
        "MQ",
        "Series",
        "JSON",
        "response",
        "type",
        "REST",
        "services",
        "Hibernate",
        "Persistence",
        "Strategy",
        "database",
        "Developed",
        "Hibernate",
        "mapping",
        "files",
        "mapping",
        "strategies",
        "table",
        "class",
        "hierarchy",
        "Integrated",
        "Hibernate",
        "Spring",
        "Spring",
        "Configuration",
        "file",
        "tool",
        "data",
        "party",
        "service",
        "provider",
        "feature",
        "REST",
        "ANT",
        "scripts",
        "deployment",
        "build",
        "operation",
        "application",
        "Handson",
        "version",
        "controller",
        "tools",
        "ClearCase",
        "Clear",
        "Quest",
        "issue",
        "software",
        "RESTFUL",
        "client",
        "services",
        "RESTFUL",
        "URL",
        "mapping",
        "Subversion",
        "version",
        "control",
        "build",
        "scripts",
        "Environment",
        "Java",
        "J2EE",
        "Servlets",
        "AJAX",
        "Spring",
        "JMS",
        "HTML5",
        "JavaScript",
        "JSP",
        "EJB",
        "CVS",
        "CSS",
        "MVC",
        "JDBC",
        "J",
        "Profiler",
        "Oracle",
        "g",
        "XML",
        "MVC",
        "Hibernate",
        "MQSeries",
        "WebSphere",
        "JUnit",
        "Subversion",
        "JProfiler",
        "Ant",
        "ClearCase",
        "Clear",
        "Quest",
        "Java",
        "Developer",
        "Xerox",
        "Inc",
        "Atlanta",
        "GA",
        "US",
        "January",
        "July",
        "Responsibilities",
        "Requirements",
        "Designing",
        "Coding",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "phases",
        "project",
        "design",
        "development",
        "UI",
        "screens",
        "application",
        "HTML5",
        "JavaScript",
        "jQuery",
        "webservices",
        "rest",
        "calls",
        "client",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "Spring",
        "JDBC",
        "Spring",
        "Hibernate",
        "Data",
        "Access",
        "DAO",
        "design",
        "pattern",
        "Spring",
        "Boot",
        "application",
        "microservices",
        "Developed",
        "Spring",
        "Batch",
        "processing",
        "application",
        "file",
        "formats",
        "database",
        "JMS",
        "Spring",
        "JMS",
        "module",
        "queues",
        "builds",
        "Maven",
        "project",
        "code",
        "GitHub",
        "repositories",
        "Jenkins",
        "CI",
        "tool",
        "Wrote",
        "Stored",
        "Procedures",
        "queries",
        "Oracle",
        "g",
        "database",
        "integration",
        "modules",
        "clients",
        "Apache",
        "Camel",
        "Consumed",
        "web",
        "services",
        "SOAP",
        "REST",
        "XML",
        "JSON",
        "advantage",
        "Spring",
        "technologies",
        "Presentation",
        "layer",
        "HTML",
        "JavaScript",
        "AJAX",
        "jQuery",
        "UI",
        "customer",
        "experience",
        "page",
        "application",
        "Angular",
        "JS",
        "Integrated",
        "Camel",
        "MQ",
        "bus",
        "Linux",
        "environment",
        "Tomcat",
        "application",
        "server",
        "UNIX",
        "shell",
        "scripts",
        "data",
        "migration",
        "batch",
        "processing",
        "test",
        "cases",
        "Junit",
        "TestNG",
        "stubs",
        "JMockito",
        "framework",
        "project",
        "methodology",
        "calls",
        "POC",
        "call",
        "support",
        "production",
        "team",
        "rotation",
        "basis",
        "Environment",
        "JDK",
        "J2EE",
        "Core",
        "Java",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "JSON",
        "Maven",
        "Spring",
        "4x",
        "JPA",
        "JDBC",
        "Jenkins",
        "Apache",
        "Tomcat",
        "Apache",
        "Camel",
        "Active",
        "MQ",
        "Git",
        "Eclipse",
        "IDE",
        "Junit",
        "Linux",
        "Windows",
        "Java",
        "Developer",
        "ATT",
        "Dallas",
        "TX",
        "US",
        "April",
        "December",
        "Responsibilities",
        "requirements",
        "level",
        "designs",
        "Agile",
        "Methodologies",
        "Spring",
        "Web",
        "flow",
        "integration",
        "purpose",
        "application",
        "development",
        "SOAP",
        "UI",
        "web",
        "services",
        "Developed",
        "server",
        "components",
        "spring",
        "Hibernate",
        "user",
        "interfaces",
        "JSF",
        "UI",
        "components",
        "Validators",
        "Events",
        "Listeners",
        "server",
        "side",
        "validations",
        "JSF",
        "core",
        "Collections",
        "String",
        "Builder",
        "Interfaces",
        "code",
        "layers",
        "application",
        "JSPs",
        "presentation",
        "Servlets",
        "controller",
        "EJBs",
        "business",
        "logic",
        "application",
        "Maven",
        "scripts",
        "application",
        "Hash",
        "table",
        "hash",
        "values",
        "Spring",
        "Hibernate",
        "Spring",
        "MVC",
        "enterprise",
        "applications",
        "WSDL",
        "SOAP",
        "XML",
        "schema",
        "design",
        "methodology",
        "MVC",
        "patterns",
        "Hibernate",
        "Object",
        "mapping",
        "Message",
        "Beans",
        "Queue",
        "listeners",
        "JMS",
        "queues",
        "SQL",
        "Server",
        "database",
        "Log4J",
        "errors",
        "application",
        "Analyze",
        "issues",
        "Soap",
        "Web",
        "services",
        "Application",
        "responses",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "Bootstrap",
        "user",
        "interface",
        "Spring",
        "Batch",
        "scheduling",
        "maintenance",
        "batch",
        "jobs",
        "MAVEN",
        "management",
        "tool",
        "WSDL",
        "services",
        "UDDI",
        "XPATH",
        "objects",
        "screen",
        "lookup",
        "tables",
        "views",
        "queries",
        "support",
        "order",
        "management",
        "systems",
        "Worked",
        "Quality",
        "analysis",
        "testing",
        "Environment",
        "Java",
        "EJB",
        "Hibernate",
        "JSF",
        "Spring",
        "Selenium",
        "SQL",
        "Server",
        "R2",
        "XML",
        "JUnit",
        "XSLT",
        "IDE",
        "HTML",
        "CSS",
        "JavaScript",
        "Apache",
        "Tomcat",
        "JMS",
        "SOAP",
        "Agile",
        "Bootstrap",
        "Maven",
        "Spring",
        "Batch",
        "UDDI",
        "JSP",
        "Log4j",
        "Java",
        "Developer",
        "Apollo",
        "Hospitals",
        "October",
        "March",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Rational",
        "Rose",
        "Use",
        "Case",
        "Object",
        "Class",
        "Collaboration",
        "Sequence",
        "Diagrams",
        "Created",
        "Servlets",
        "EJB",
        "components",
        "information",
        "Developed",
        "Session",
        "Beans",
        "requests",
        "Entity",
        "Beans",
        "Executor",
        "Framework",
        "Multithreading",
        "Designing",
        "Multiple",
        "Process",
        "Service",
        "Multithreading",
        "Concurrency",
        "concepts",
        "jobs",
        "Frontend",
        "HTML",
        "CSS",
        "JSP",
        "Servlets",
        "JSTL",
        "Ajax",
        "Struts",
        "JavaScript",
        "page",
        "validation",
        "XML",
        "SAX",
        "data",
        "applications",
        "Wrote",
        "PLSQL",
        "procedures",
        "statement",
        "API",
        "writing",
        "procedures",
        "functions",
        "triggers",
        "Oracle",
        "Developed",
        "web",
        "application",
        "Struts",
        "JSP",
        "Servlets",
        "Java",
        "beans",
        "MVC",
        "design",
        "pattern",
        "exception",
        "validation",
        "classes",
        "Struts",
        "validation",
        "rules",
        "Eclipse",
        "IDE",
        "tool",
        "Servlets",
        "JSP",
        "XML",
        "Messagedriven",
        "beans",
        "messages",
        "Java",
        "message",
        "queue",
        "Wrote",
        "SQL",
        "JDBC",
        "statements",
        "data",
        "database",
        "application",
        "Tomcat",
        "Server",
        "Environment",
        "Java",
        "Multithreading",
        "EJB",
        "Session",
        "Beans",
        "HTML",
        "CSS",
        "JavaScript",
        "Servlet",
        "Struts",
        "JSP",
        "Oracle",
        "JDBC",
        "Eclipse",
        "Tomcat",
        "Java",
        "Developer",
        "Axis",
        "Services",
        "May",
        "September",
        "Mail",
        "order",
        "validation",
        "web",
        "services",
        "project",
        "Technologies",
        "project",
        "Web",
        "services",
        "JAXWS",
        "SOAP",
        "XML",
        "Hibernate",
        "WebSphere",
        "MQ",
        "Mainframe",
        "DB2CICS",
        "Responsibilities",
        "GUI",
        "JSP",
        "JavaScript",
        "CSS",
        "MS",
        "Visio",
        "business",
        "process",
        "diagrams",
        "Developed",
        "Action",
        "Servlets",
        "Action",
        "Form",
        "Java",
        "Bean",
        "classes",
        "business",
        "logic",
        "Struts",
        "Framework",
        "Developed",
        "Servlets",
        "JSP",
        "MVC",
        "pattern",
        "struts",
        "Action",
        "framework",
        "tiers",
        "J2EE",
        "application",
        "data",
        "database",
        "JDBC",
        "database",
        "tier",
        "business",
        "logic",
        "EJBs",
        "tier",
        "Java",
        "Beans",
        "helper",
        "classes",
        "presentation",
        "tier",
        "JSPs",
        "Servlets",
        "persistence",
        "layer",
        "modules",
        "EJB",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "annotations",
        "Entity",
        "manager",
        "Developed",
        "Action",
        "Form",
        "Bean",
        "classes",
        "data",
        "process",
        "server",
        "side",
        "validations",
        "tables",
        "project",
        "SQL",
        "server",
        "database",
        "Stored",
        "Procedures",
        "application",
        "SQL",
        "Server",
        "update",
        "manipulate",
        "tables",
        "IntellIJ",
        "IDE",
        "Clear",
        "Case",
        "version",
        "control",
        "impact",
        "analysis",
        "Change",
        "requests",
        "Bug",
        "fixes",
        "Tortoise",
        "SVN",
        "version",
        "controller",
        "source",
        "code",
        "check",
        "outs",
        "development",
        "User",
        "Interface",
        "XSLT",
        "HTML",
        "JavaScript",
        "Ajax",
        "JSTL",
        "Automated",
        "Test",
        "Scripts",
        "Functional",
        "Testing",
        "Performance",
        "Testing",
        "JUnit",
        "Test",
        "cases",
        "application",
        "JIRA",
        "task",
        "project",
        "management",
        "tool",
        "track",
        "report",
        "bugs",
        "basis",
        "Wrote",
        "entities",
        "Scala",
        "Java",
        "queries",
        "database",
        "Environment",
        "Java",
        "Struts",
        "PLSQL",
        "SQL",
        "server",
        "EJB",
        "IntellIJ",
        "Clear",
        "Case",
        "MS",
        "Visio",
        "Firebug",
        "Apache",
        "Tomcat",
        "JSP",
        "Java",
        "Script",
        "CSS",
        "Bugzilla",
        "Toad",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:11:29.057838",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Liberty Dover NH Overall around 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modelling skilled at progressing from problem statement to welldocumented designs and code Experienced in RDBMS such as Oracle MySQL and PostgreSQL and IBM DB2 databases Indepth knowledge and work experience in managing NoSQL based databases specifically like MongoDB and Cassandra managing the very high load of transactions Proficient with various Software Development Life Cycle SDLC methodologies like Agile Scrum Strong working experience in application development using JDBC Servlets JSP Java Beans JMS Struts spring Hibernate and Web services Experience in developing web applications using technologies like HTML Java Script AJAX DOJO JSON CSS JSP Tag libraries and GWT Experience in developing webbased applications using Python Django PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Worked in Service Oriented Architecture to develop language independent services using Web Services Apache CXF SOAP WSDL and Axis 20 soap stack Proficient in writing ANT Maven builds script to automate the application build and deployment Good experience in developing and updating a web page using HTML5 CSS3 AngularJS Reactjs Java Script backbonejs and JQuery across various browsers Experienced in UI frameworks such as jQuery Ajax Google Web Toolkit GWT JavaScript Node JS React JS Backbone JS Angular2 AngularJS Tag Libraries Custom Tags Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache Good experience in using Amazon Web Services AWS and AWS SNSSQS for delivering messages Deploy application updates to AWS and monitored the load balancing of different instances Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing clientserver business applications using Microservices Designed and developed Microservices business components using Spring Boot Indepth knowledge of core java concepts such as OOPS Collections Multithreading generics exception handling Thread pools concurrent utilities File IO and Serialization Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML into Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement RESTbased applications Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using JUnit Easy mock and Mockito TECHNOLOGY AND TOOLS Languages Java J2EE C C PLSQL Web Technologies HTML5 RWD jQuery JavaScript CSS NODE JS EJB JSON AJAX XML ESAPI JQuery AngularJS J2EE Technologies Servlets JSP EJB JMS JNDI Web Services JDBC SOAP AppWeb servers Apache Tomcat 5x IBM WebSphere 7x OC4J AWS Web Logic Frameworks Jakarta Struts spring IBM JADE Log4J SLF4J JPA Spring IOC Databases Oracle MS SQL Server My SQL and IBM DB2 Mongo DB RDBMS PostgreSQL 89 Operating Systems Windows UNIX Linux Web Services SOAP REST WADL XML JSON Source Control Tools WinCVS Serena Dimension SVN Git GitHub Clear Case Testing Tools HP Load Runner SOAP UI Mockito JUnit Jasmine Karma Selenium Jenkins Other Tools FileZilla BugZilla Putty Rapid SQL IBM DB2 client CISM JIRA SQL Developer Build Tools Maven ANT Grunt Gradle Work Experience Sr Java Developer Liberty Dover NH US May 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on localhost Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot Java J2EE Developer Disney FL August 2016 to April 2017 Responsibilities Developed application using Spring Framework that leverages classical Model View Controller MVC architecture and Hibernate as the ORM Developed Chart Web Services controllers with generic interfaces and default implementations exposed as Java Spring RESTful Web services with Chart Specific parameters passed as query string Developed Summarization WebServices for synchronization of Transactional data with archived data the Java layer services used to intercept the main transactional classes were refactored to provide a general interception layer for any kind of transactional data in the system Created custom directives utilizing AngularJS Created REST based web services using JAXRS Extensively used Hibernate Criteria API in data access layer to access and update information in the database Utilized multithreading concurrency memory management and NIO and concurrent package in extensively Written complex SQL statementsJoins and procedures to fetch the data from the database Designed and developed persistence layer build on ORM framework and developed it using Hibernate Developed application service components and configured beans using Spring IOC Implemented multi inputoutput Spring AOP for various requirements Implementing or exposing the Microservices based on RESTful API utilizing Spring Boot with Spring MVC Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Spring framework AOP features and JDBC module features to persist the data to the database for few applications Used HTTP methods extensively to retrieve the data from the Rest API and used that data to update the page dynamically Used Spring Security for implementing authentication authorization and access control features Implemented Java 18 features including Lambda Advanced for each loop and Streams Used GIT for version control Log4J for logging and developed the pomxml using Maven for compiling the dependencies Developed and executed unit test cases using JUnit Mockito and deployed application on AWS by using Elastic Bean Stalk Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQ Series Used JSON as response type in REST services Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Built ANT scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10g XML MVC Hibernate MQSeries WebSphere JUnit Subversion JProfiler Ant ClearCase Clear Quest Java Developer Xerox Inc Atlanta GA US January 2016 to July 2016 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful webservices to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as microservices Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Implemented the project in Agile methodology participated actively in daily stand up calls Served as POC for on call support in the production team on a rotation basis Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Java Developer ATT Dallas TX US April 2015 to December 2015 Responsibilities Reviewed the functional nonfunctional requirements and high level designs Worked with Agile Methodologies Used Spring Web flow for integration purpose in application development SOAP UI is used for web services testing Developed and integrated with server components using spring Hibernate Developed user interfaces using JSF UI components Validators Events and Listeners Developed server side validations using JSF Extensively worked with core java like Collections String Builder and Interfaces Developed code participating in different layers of the application such as JSPs for presentation Servlets as controller and EJBs for holding business logic Compiled and built the application using Maven scripts and deployed the application Implemented Hash table and hash set for inserting and retrieving values Extensively used Spring and Hibernate in Spring MVC Implemented enterprise applications using WSDL SOAP and XML schema Developed different design methodology such as MVC patterns Used Hibernate for Object mapping Developed Message Driven Beans as Queue listeners for JMS queues Worked extensively in the backend SQL Server database Used Log4J for any errors in the application Analyze and fix issues related to Soap Web services and Application responses Used HTML CSS and Java Script Bootstrap for developing user interface Used Spring Batch for scheduling and maintenance of batch jobs Used MAVEN as build management tool Used WSDL to post the services in the UDDI Worked with XPATH when need to identify objects in the screen Developed lookup tables and views to speed up queries Provide critical support to current order management systems being used as and when required Worked in Quality analysis and testing Environment Java EJB Hibernate JSF Spring Selenium SQL Server 2008 R2 XML JUnit XSLT IDE HTML CSS JavaScript Apache Tomcat JMS SOAP Agile Bootstrap Maven Spring Batch UDDI JSP Log4j Java Developer Apollo Hospitals October 2013 to March 2015 Responsibilities Involved in various phases of Software Development Life Cycle SDLC Used Rational Rose for the Use Case Object Class Collaboration and Sequence Diagrams Created Servlets which route to appropriate EJB components and render retrieved information Developed Session Beans to process requests and used Entity Beans to retrieve and update Implemented Executor Framework in Multithreading Designing and implementing Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Frontend is designed by using HTML CSS JSP Servlets JSTL Ajax and Struts Used JavaScript for page validation and XML with SAX to transfer data between applications Wrote PLSQL stored procedures Prepared statement and used API Involved in writing and executing stored procedures functions and triggers for Oracle Developed web application using Struts JSP Servlets Java beans that uses MVC design pattern Involved in writing the exception and validation classes using Struts validation rules Used Eclipse as IDE tool for creating Servlets JSP and XML Designed and developed Messagedriven beans that consumed the messages from the Java message queue Wrote SQL for JDBC prepared statements to retrieve the data from the database The application was deployed on the Tomcat Server Environment Java Multithreading EJB Session Beans HTML CSS JavaScript Servlet Struts JSP Oracle JDBC Eclipse Tomcat Java Developer Axis Services May 2010 to September 2013 Worked on Mail order validation web services project Technologies involved in this project are Web services JAXWS SOAP and XML Hibernate WebSphere MQ and Mainframe DB2CICS Responsibilities Developed GUI using JSP JavaScript and CSS Used MS Visio for creating business process diagrams Developed Action Servlets Action Form Java Bean classes for implementing business logic for the Struts Framework Developed Servlets and JSP based on MVC pattern using struts Action framework Developed all the tiers of the J2EE application Developed data objects to communicate with the database using JDBC in the database tier implemented business logic using EJBs in the middle tier developed Java Beans and helper classes to communicate with the presentation tier which consists of JSPs and Servlets Developed persistence layer modules using EJB Java Persistence API JPA annotations and Entity manager Developed Action and Form Bean classes to retrieve data and process server side validations Designed various tables required for the project in SQL server database and used Stored Procedures in the application Used SQL Server to create update and manipulate tables Used IntellIJ as IDE and Clear Case for version control Involved in impact analysis of Change requests and Bug fixes Used Tortoise SVN as a version controller for the source code check in and check outs Involved in development of User Interface using XSLT HTML JavaScript Ajax and JSTL Developed Automated Test Scripts to perform Functional Testing Performance Testing Wrote JUnit Test cases which support the application Used JIRA as the task and project management tool to assign track report and manage bugs on daily basis Wrote entities in Scala and Java along with named queries to interact with the desired database Environment Java 5 Struts PLSQL SQL server EJB IntellIJ Clear Case MS Visio Firebug Apache Tomcat JSP Java Script CSS Bugzilla Toad 90 Education Bachelors",
    "unique_id": "40f8c8c5-a625-45c2-8662-9135553ff238"
}