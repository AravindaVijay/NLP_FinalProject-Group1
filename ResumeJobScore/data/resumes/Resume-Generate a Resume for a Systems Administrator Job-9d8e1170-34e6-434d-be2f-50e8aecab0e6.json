{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sunnyvale CA Seeking a Python Developer position in the IT industry that will leverage my Technical Skills Python Expertise to support organizations in successfully leading their strategic initiatives 7 Years of thriving IT experience in Python Development and Scripting on UNIXLinux and Windows platforms Have worked primarily in the domain of Internet of Things Automation Automotive and ecommerce Professional experience in designing development testing deployment and support of applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Expertise in building full stack web applications using Python programming and web frameworks Excellent in writing customized Python scripts for automation data parsing database operations data extraction text manipulation files parsing and reports generation Good hands on experience with Relational databases MySQL PostgreSQL SQL and knowledge on EAV and Timeseries database Expertise in data scraping and web crawling techniques Expertise in designing and developing complete IOT and automation cloud solutions Good hands on experience in performing data analytics and applying machine learning algorithms using NLP OpenCV Scikit Scipy Experienced in version control systems CVS Bazaar SVN and Git Experienced in Automation using Python specifically automating unitmanual test cases Good hands on experience in building user interface using HTML JavaScript CSS jQuery AJAX Bootstrap Great ability to write clear maintainable and efficient codebase by following PEP8 standards Proficiency working in a UnixLinux environment have good Unix shell scripting skills Knowledge of DevOps work Expertise in building RESTful web services Good hands on experience in Amazon EC2 and IBM Bluemix cloud deployment and cloud services Expertise in TCPIP socket programming and building solutions using MQTT protocol Managed a team being senior resource and involved in activities customer engagement requirements gathering efforts estimations sprint planning design development guidance to team members project deliverables project management Quick at identifying errors and debugging code doing bug fixes and enhancements to legacy code Selfstarter selfmotivated with excellent communication interpersonal and facilitation skills Ability to multitask and work against deadlinespriorities possess a sense of ownership and desire to take on an expanded role over time Capable of working independently as well as with a global team development environment Demonstrated work in a dynamic and agile environment with minimal documentation Served as primary customer contact and liaison person Exceptional ability to quickly master new concepts Work Experience Python Developer Infinity Methods Corp Sunnyvale CA May 2018 to Present Python Developer Embitel Technologies Inc March 2017 to May 2018 Southfield MI Project Solar Tracker Industrial Automation Role Python Developer Project Description Solar tracker automation solution is to generate power from solar energy efficiently Solar panels deployed in large plants will be controlled by cloud application and rotates them to an angle with respect to sun position automatically Cloud communicates the commands to devices through gateway using IoT protocol called MQTT Devices from different plants and regions can be controlled and monitored by using SCADA application which is built using Django web framework SCADA provides graphical reports live stats and detailed daily reports of each device It triggers email alarms to staff users in case of device failure It records all the actions performed by devices and analytics is performed over the data to derive daily stats on energy stored and consumed My Work Responsibilities Business requirement gathering and converting business requirements to technical requirements Served as primary customer contact and liaison person Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Researched and proposed technological advancements to a product line based on the current market trends Managing and Leading different teams working on Hardware Embedded and Backend As a Full stack developer involved in end to end backend application development Developed web application SCADA using python and Django framework Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Developed automation solution to communicate commands from cloud to devices Implemented TCP IP socket programming application using MQTT module which communicates data from cloud to devices and vice versa Developed python MQTT device client for embedded devices Designed and implemented Graphical and PDF reports which will be autogenerated by using python script REST APIs design and implementation for Firmware upgrade over the air Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Nginx and Gunicorn web servers on Amazon EC2 Direct communication with client on day to day basis for requirement gathering and production issue resolution Providing help to peers in development and doing their code reviews Analyzed and provided fix for most of the critical issues raised by testing team and users Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Provided extended support for Production releases and assisted in validating the releases Worked closely with the Business users acting as liaison between the Business and technology to identify the requirements for new projects Provided regular status updates to the client and senior management for the ongoing development work projectsproductions issues Suggested and implemented changes to the existing processes and Applications to improve the availability of the applications to the Business Environment Python Django PostgreSQL MQTT Nginx Gunicorn Linux HTML Amazon EC2 Python Developer Embitel Technologies Inc Southfield MI January 2016 to March 2017 Project Description Home Automation is a solution for controlling home appliances or devices remotely Users can manage control and monitor their home devices sensors from web mobile application from anywhere via cloud Cloud application has been built using python and Django web framework and communication between the cloud and devices happens seamlessly via MQTT protocol Web application has feature called Modes where user can group different devices and can control all the grouped devices with single command It also has webbased service to create chains of simple conditional statements which is nothing but IFTTT where user can create his own rules and actions from user interface Data analytics are performed on top of data stored at cloud to identify patterns and to extract reports My Work Responsibilities Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Managing and Leading different teams working on Embedded and Backend Developed web application using python Django framework MySQL Explored and evaluated IBM Bluemix Watson services Integrated IBM Internet of Things Foundation service to cloud application for device management and communication Implemented live video streaming from device which is compatible with sockets Involved in Embedded programming for ZigBee communication which works over Mesh network Designed and Developed user and device management module which stores data dynamically Implemented color and movement detection using OpenCV module which alerts user in real time incase of any theft at home Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Implemented TCP IP socket programming application using IBM IoTF module which communicates data from cloud to devices and vice versa Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Apache web server on IBM Bluemix Direct communication with client on day to day basis for requirement gathering and production issue resolution Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Django MySQL IBM IoTF IBM Bluemix Apache Linux HTML Python Developer Eicher Polaris Industries Inc Medina MN September 2015 to January 2016 Project Description Vehicle Fault Analysis is an automation solution to find the defect at component level in the vehicle Complex algorithms are implemented in this solution which will evaluate the data generated by the vehicle and compares the same with the reference data stored at cloud using machine learning classifiers Reference data is provided by OEMs which indicates the data of a vehicle in good and bad conditions with respect to automobiles industrial standards Runtime analytics will be performed to identify the condition of the vehicle and fault component if any User Manufacturer can input the vehicles data using web interface and view the test results and runtime analysis My Work Responsibilities Responsible for Architecture and design implementation Developed web application using Python Flask MySQL Developed an automation module which processes chunks of csv file uploaded by an end user in an asynchronous manner Implemented machine learning algorithms and applied different classifiers on top of data to extract accurate results Worked on User Interface using HTML CSS JavaScript Bootstrap Developed automation scripts to automate the batch process which processes huge files and stores test results in to database Responsible for code reviews and sprint planning Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Direct communication with client on weekly basis for status updates and production deliverables Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Scikit Scipy Flask MySQL Linux Nginx Gunicorn Python Developer Embitel Technologies Inc Southfield MI September 2014 to August 2015 Project Description Vehicle OnBoard Diagnostics is a tool to monitor vehicle OBD parameters and to ensure vehicle is in good condition Web dashboard is provided to users where user can monitor his vehicles parameters and their values in real time and user can configure set of rules to alert him if threshold breaches Vehicles CAN data will be collected by cloud at regular intervals of time which helps the OEMs to analyze and fix the issues online if possible Cloud services computes the data and insists driver by sending an alert or notification to the mobile application Vehicles OBD helps the driver by sharing location to mechanic if any breakdown or issue occurs Cloud constantly monitor threshold levels like tyre pressure Fuel level Engine heat level and any malfunction which helps user as well as OEMs to maintain the vehicle in good condition My Work Responsibilities Responsible for Architecture design implementation and database schema Implemented asynchronous multithreading in TCPIP programming Developed module for device and user management Developed web dashboard using HTML CSS Bootstrap JavaScript Designed and implemented Graphical and PDF reports which will be autogenerated by using python script Implemented automation tool which monitors data in near real time and triggers actions on any event which is configured by user Handling relevant Technical Communication with Client Working independently and within challenging time frames Reviewing code of junior team mates Multitasked and work against deadlinespriorities Contributed in streamlining the code migration process by syncing up the application scripts between different environments like Production QA Dev and UAT Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Environment Python Flask HTML PostgreSQL Linux Nginx Python Developer Tata Trent Novi MI September 2013 to August 2014 Project Description Inventory management application is an enterprise web application for Trent staff and admin users to manage and maintain catalogs products orders and users Staff users can perform add edit delete operations and will be able to review orders done by end users In B2B scenarios bulk orders will be received by Trent and to supply the same to end users there are several inspection stages that the products must go through This tool servers the purpose where Trent staff will fill the form online and submit the inspection results All the inspection levels inspection dates and assignments will be auto computed in the backend which reduces manual effort By using this tool Trent team is able to successfully deliver quality products to end users without slippages My Work Responsibilities Developed web application using Python programming Django and Django Oscar framework Involved in database design and architecture discussions Developed view functions to automate stages based on inspection results Implemented logic for inspection assignments to staff users and scheduling Written Python automation scripts to evaluate and reschedule assignments with automated alerts in case of inspection delays or failures Built custom templates using HTML CSS Bootstrap and JavaScript Implemented analytics to derive daily turnover and turnover made by each staff user Developed scripts to send automated emails to senior management users which details overall assignments completed pending on weekly basis Written Unit test cases using Unit testing framework with 95 of code coverage Implemented automation testing using selenium Identified user needs and provided strategic direction Environment Python Django Django Oscar MySQL HTML Linux Python Developer Veveo Inc Boston MA May 2012 to August 2013 Project Description Crawling Engine which helps for data scraping or crawling from different websites media sites tv showsmovies sites app stores and other social networking sites Data mining techniques regular expressions have been used to identify patterns and to extract relevant data from websites Scraped data will be validated and the same will be stored into MySQL database post to validation Scrapers are scheduled to run daily at fixed timings using cron tools My Work Responsibilities Performed analysis on websites to identify the patterns and to crawl data Developed APIs to crawl data for similar web templates Implemented custom script for pumping records into database Scheduling the Crawler for fetching data recursively Developed automation scripts to send alerts if any of the scraper is not responding Performed manual testing to validate scraped details Environment Python MySQL Linux Python Developer Span Across IT Solutions IN January 2011 to April 2012 Project Description TaxSpanner is a portal from where users can efile their income tax returns It has been built using python and Django Framework User can upload their income documents through user friendly interface application computes the data and decides the type of ITR to be filed based on the inputs Automated system has been built at backend to take care of end to end process with single click TaxSpanner provides different easy platforms to efile the income tax returns User can simply send an email with proper income details attachments where automation tools will read emails and attachments in real time and processes the data and efile the return My Work Responsibilities Developed and automated a logic to read csv xls xlsx share transactions and dump the transactions to database Designed and developed algorithm to compute and display the users income and tax summary Developed and implemented Django URLs views and templates for UI Implemented an algorithm to detect the type of the ITR and type of the return Custom scripts to extract the actions performed by individual user Developed Messaging framework which takes care of sending emails based on admin inputs Written Unit test cases using Unit testing framework Implemented python automation scripts using selenium which uploads the transactions files to BillDesk gateway Performed black box manual and automation testing Environment Python Django PostgreSQL HTML Education Bachelors in Information Science Technology Acharya Nagarjuna University August 2006 to April 2010 Skills DJANGO 6 years HTML5 3 years JAVASCRIPT 3 years PYTHON 7 years LINUX 8 years MySQL 4 years PostgresSQL 4 years Apache 3 years Nginix 4 years IBM Watson 1 year Flask 1 year Additional Information TECHNICAL SKILLS Technology Python Django Flask Tornado HTML CSS JavaScript Bootstrap Tools PyCharm Visual Studio Putty Vagrant SQL Alchemy Vim Data Bases MySQL SQL PostgreSQL TimeSeries EAV Application Servers Apache Nginx Gunicorn Supervisor Operating Systems UNIX Linux Windows Version Control CVS SVN Bazaar Git",
    "entities": [
        "CVS Bazaar SVN",
        "Project Description Vehicle",
        "Timeseries",
        "MQTT",
        "UI Implemented",
        "Technical Communication",
        "IBM Bluemix Direct",
        "Developed",
        "EAV",
        "TaxSpanner",
        "TimeSeries EAV Application Servers Apache Nginx",
        "QA",
        "Hardware Embedded",
        "Present Python Developer Embitel Technologies Inc",
        "Relational",
        "Graphical",
        "PDF",
        "My Work Responsibilities Responsible",
        "IBM Bluemix Watson",
        "UAT Deployed",
        "Performed",
        "IOT",
        "the Business Environment Python Django PostgreSQL MQTT",
        "Written Unit",
        "Nagarjuna University",
        "Project Description Crawling Engine",
        "ITR",
        "Researched",
        "Custom",
        "IFTTT",
        "Trent",
        "Southfield MI Project",
        "IoT",
        "Project Description Home Automation",
        "Sunnyvale",
        "IBM",
        "Worked on User Interface",
        "Expertise",
        "Quick",
        "BillDesk",
        "Amazon EC2 Direct",
        "Contributed",
        "Eicher Polaris Industries Inc",
        "Python Developer Embitel Technologies Inc",
        "Suggested",
        "IBM Bluemix",
        "OBD",
        "REST",
        "UAT",
        "Things Foundation",
        "Project Description Inventory",
        "JavaScript Implemented",
        "MQTT Devices",
        "Additional Information TECHNICAL SKILLS Technology Python Django Flask Tornado HTML",
        "SQL PostgreSQL",
        "NLP",
        "lPythonspan",
        "Nginx",
        "Linux Windows Version",
        "PEP8",
        "SCADA",
        "Project Description Vehicle Fault Analysis",
        "Python Development and Scripting on",
        "HTML CSS Bootstrap JavaScript Designed",
        "Information Science Technology",
        "HTML CSS Bootstrap",
        "Amazon",
        "Developer Tata Trent Novi",
        "UnixLinux",
        "UNIXLinux",
        "Firmware",
        "HTML CSS JavaScript Bootstrap Developed"
    ],
    "experience": "Skills Python Expertise to support organizations in successfully leading their strategic initiatives 7 Years of thriving IT experience in Python Development and Scripting on UNIXLinux and Windows platforms Have worked primarily in the domain of Internet of Things Automation Automotive and ecommerce Professional experience in designing development testing deployment and support of applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Expertise in building full stack web applications using Python programming and web frameworks Excellent in writing customized Python scripts for automation data parsing database operations data extraction text manipulation files parsing and reports generation Good hands on experience with Relational databases MySQL PostgreSQL SQL and knowledge on EAV and Timeseries database Expertise in data scraping and web crawling techniques Expertise in designing and developing complete IOT and automation cloud solutions Good hands on experience in performing data analytics and applying machine learning algorithms using NLP OpenCV Scikit Scipy Experienced in version control systems CVS Bazaar SVN and Git Experienced in Automation using Python specifically automating unitmanual test cases Good hands on experience in building user interface using HTML JavaScript CSS jQuery AJAX Bootstrap Great ability to write clear maintainable and efficient codebase by following PEP8 standards Proficiency working in a UnixLinux environment have good Unix shell scripting skills Knowledge of DevOps work Expertise in building RESTful web services Good hands on experience in Amazon EC2 and IBM Bluemix cloud deployment and cloud services Expertise in TCPIP socket programming and building solutions using MQTT protocol Managed a team being senior resource and involved in activities customer engagement requirements gathering efforts estimations sprint planning design development guidance to team members project deliverables project management Quick at identifying errors and debugging code doing bug fixes and enhancements to legacy code Selfstarter selfmotivated with excellent communication interpersonal and facilitation skills Ability to multitask and work against deadlinespriorities possess a sense of ownership and desire to take on an expanded role over time Capable of working independently as well as with a global team development environment Demonstrated work in a dynamic and agile environment with minimal documentation Served as primary customer contact and liaison person Exceptional ability to quickly master new concepts Work Experience Python Developer Infinity Methods Corp Sunnyvale CA May 2018 to Present Python Developer Embitel Technologies Inc March 2017 to May 2018 Southfield MI Project Solar Tracker Industrial Automation Role Python Developer Project Description Solar tracker automation solution is to generate power from solar energy efficiently Solar panels deployed in large plants will be controlled by cloud application and rotates them to an angle with respect to sun position automatically Cloud communicates the commands to devices through gateway using IoT protocol called MQTT Devices from different plants and regions can be controlled and monitored by using SCADA application which is built using Django web framework SCADA provides graphical reports live stats and detailed daily reports of each device It triggers email alarms to staff users in case of device failure It records all the actions performed by devices and analytics is performed over the data to derive daily stats on energy stored and consumed My Work Responsibilities Business requirement gathering and converting business requirements to technical requirements Served as primary customer contact and liaison person Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Researched and proposed technological advancements to a product line based on the current market trends Managing and Leading different teams working on Hardware Embedded and Backend As a Full stack developer involved in end to end backend application development Developed web application SCADA using python and Django framework Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Developed automation solution to communicate commands from cloud to devices Implemented TCP IP socket programming application using MQTT module which communicates data from cloud to devices and vice versa Developed python MQTT device client for embedded devices Designed and implemented Graphical and PDF reports which will be autogenerated by using python script REST APIs design and implementation for Firmware upgrade over the air Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Nginx and Gunicorn web servers on Amazon EC2 Direct communication with client on day to day basis for requirement gathering and production issue resolution Providing help to peers in development and doing their code reviews Analyzed and provided fix for most of the critical issues raised by testing team and users Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Provided extended support for Production releases and assisted in validating the releases Worked closely with the Business users acting as liaison between the Business and technology to identify the requirements for new projects Provided regular status updates to the client and senior management for the ongoing development work projectsproductions issues Suggested and implemented changes to the existing processes and Applications to improve the availability of the applications to the Business Environment Python Django PostgreSQL MQTT Nginx Gunicorn Linux HTML Amazon EC2 Python Developer Embitel Technologies Inc Southfield MI January 2016 to March 2017 Project Description Home Automation is a solution for controlling home appliances or devices remotely Users can manage control and monitor their home devices sensors from web mobile application from anywhere via cloud Cloud application has been built using python and Django web framework and communication between the cloud and devices happens seamlessly via MQTT protocol Web application has feature called Modes where user can group different devices and can control all the grouped devices with single command It also has webbased service to create chains of simple conditional statements which is nothing but IFTTT where user can create his own rules and actions from user interface Data analytics are performed on top of data stored at cloud to identify patterns and to extract reports My Work Responsibilities Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Managing and Leading different teams working on Embedded and Backend Developed web application using python Django framework MySQL Explored and evaluated IBM Bluemix Watson services Integrated IBM Internet of Things Foundation service to cloud application for device management and communication Implemented live video streaming from device which is compatible with sockets Involved in Embedded programming for ZigBee communication which works over Mesh network Designed and Developed user and device management module which stores data dynamically Implemented color and movement detection using OpenCV module which alerts user in real time incase of any theft at home Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Implemented TCP IP socket programming application using IBM IoTF module which communicates data from cloud to devices and vice versa Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Apache web server on IBM Bluemix Direct communication with client on day to day basis for requirement gathering and production issue resolution Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Django MySQL IBM IoTF IBM Bluemix Apache Linux HTML Python Developer Eicher Polaris Industries Inc Medina MN September 2015 to January 2016 Project Description Vehicle Fault Analysis is an automation solution to find the defect at component level in the vehicle Complex algorithms are implemented in this solution which will evaluate the data generated by the vehicle and compares the same with the reference data stored at cloud using machine learning classifiers Reference data is provided by OEMs which indicates the data of a vehicle in good and bad conditions with respect to automobiles industrial standards Runtime analytics will be performed to identify the condition of the vehicle and fault component if any User Manufacturer can input the vehicles data using web interface and view the test results and runtime analysis My Work Responsibilities Responsible for Architecture and design implementation Developed web application using Python Flask MySQL Developed an automation module which processes chunks of csv file uploaded by an end user in an asynchronous manner Implemented machine learning algorithms and applied different classifiers on top of data to extract accurate results Worked on User Interface using HTML CSS JavaScript Bootstrap Developed automation scripts to automate the batch process which processes huge files and stores test results in to database Responsible for code reviews and sprint planning Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Direct communication with client on weekly basis for status updates and production deliverables Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Scikit Scipy Flask MySQL Linux Nginx Gunicorn Python Developer Embitel Technologies Inc Southfield MI September 2014 to August 2015 Project Description Vehicle OnBoard Diagnostics is a tool to monitor vehicle OBD parameters and to ensure vehicle is in good condition Web dashboard is provided to users where user can monitor his vehicles parameters and their values in real time and user can configure set of rules to alert him if threshold breaches Vehicles CAN data will be collected by cloud at regular intervals of time which helps the OEMs to analyze and fix the issues online if possible Cloud services computes the data and insists driver by sending an alert or notification to the mobile application Vehicles OBD helps the driver by sharing location to mechanic if any breakdown or issue occurs Cloud constantly monitor threshold levels like tyre pressure Fuel level Engine heat level and any malfunction which helps user as well as OEMs to maintain the vehicle in good condition My Work Responsibilities Responsible for Architecture design implementation and database schema Implemented asynchronous multithreading in TCPIP programming Developed module for device and user management Developed web dashboard using HTML CSS Bootstrap JavaScript Designed and implemented Graphical and PDF reports which will be autogenerated by using python script Implemented automation tool which monitors data in near real time and triggers actions on any event which is configured by user Handling relevant Technical Communication with Client Working independently and within challenging time frames Reviewing code of junior team mates Multitasked and work against deadlinespriorities Contributed in streamlining the code migration process by syncing up the application scripts between different environments like Production QA Dev and UAT Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Environment Python Flask HTML PostgreSQL Linux Nginx Python Developer Tata Trent Novi MI September 2013 to August 2014 Project Description Inventory management application is an enterprise web application for Trent staff and admin users to manage and maintain catalogs products orders and users Staff users can perform add edit delete operations and will be able to review orders done by end users In B2B scenarios bulk orders will be received by Trent and to supply the same to end users there are several inspection stages that the products must go through This tool servers the purpose where Trent staff will fill the form online and submit the inspection results All the inspection levels inspection dates and assignments will be auto computed in the backend which reduces manual effort By using this tool Trent team is able to successfully deliver quality products to end users without slippages My Work Responsibilities Developed web application using Python programming Django and Django Oscar framework Involved in database design and architecture discussions Developed view functions to automate stages based on inspection results Implemented logic for inspection assignments to staff users and scheduling Written Python automation scripts to evaluate and reschedule assignments with automated alerts in case of inspection delays or failures Built custom templates using HTML CSS Bootstrap and JavaScript Implemented analytics to derive daily turnover and turnover made by each staff user Developed scripts to send automated emails to senior management users which details overall assignments completed pending on weekly basis Written Unit test cases using Unit testing framework with 95 of code coverage Implemented automation testing using selenium Identified user needs and provided strategic direction Environment Python Django Django Oscar MySQL HTML Linux Python Developer Veveo Inc Boston MA May 2012 to August 2013 Project Description Crawling Engine which helps for data scraping or crawling from different websites media sites tv showsmovies sites app stores and other social networking sites Data mining techniques regular expressions have been used to identify patterns and to extract relevant data from websites Scraped data will be validated and the same will be stored into MySQL database post to validation Scrapers are scheduled to run daily at fixed timings using cron tools My Work Responsibilities Performed analysis on websites to identify the patterns and to crawl data Developed APIs to crawl data for similar web templates Implemented custom script for pumping records into database Scheduling the Crawler for fetching data recursively Developed automation scripts to send alerts if any of the scraper is not responding Performed manual testing to validate scraped details Environment Python MySQL Linux Python Developer Span Across IT Solutions IN January 2011 to April 2012 Project Description TaxSpanner is a portal from where users can efile their income tax returns It has been built using python and Django Framework User can upload their income documents through user friendly interface application computes the data and decides the type of ITR to be filed based on the inputs Automated system has been built at backend to take care of end to end process with single click TaxSpanner provides different easy platforms to efile the income tax returns User can simply send an email with proper income details attachments where automation tools will read emails and attachments in real time and processes the data and efile the return My Work Responsibilities Developed and automated a logic to read csv xls xlsx share transactions and dump the transactions to database Designed and developed algorithm to compute and display the users income and tax summary Developed and implemented Django URLs views and templates for UI Implemented an algorithm to detect the type of the ITR and type of the return Custom scripts to extract the actions performed by individual user Developed Messaging framework which takes care of sending emails based on admin inputs Written Unit test cases using Unit testing framework Implemented python automation scripts using selenium which uploads the transactions files to BillDesk gateway Performed black box manual and automation testing Environment Python Django PostgreSQL HTML Education Bachelors in Information Science Technology Acharya Nagarjuna University August 2006 to April 2010 Skills DJANGO 6 years HTML5 3 years JAVASCRIPT 3 years PYTHON 7 years LINUX 8 years MySQL 4 years PostgresSQL 4 years Apache 3 years Nginix 4 years IBM Watson 1 year Flask 1 year Additional Information TECHNICAL SKILLS Technology Python Django Flask Tornado HTML CSS JavaScript Bootstrap Tools PyCharm Visual Studio Putty Vagrant SQL Alchemy Vim Data Bases MySQL SQL PostgreSQL TimeSeries EAV Application Servers Apache Nginx Gunicorn Supervisor Operating Systems UNIX Linux Windows Version Control CVS SVN Bazaar Git",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Sunnyvale",
        "CA",
        "Python",
        "Developer",
        "position",
        "IT",
        "industry",
        "Technical",
        "Skills",
        "Python",
        "Expertise",
        "organizations",
        "initiatives",
        "Years",
        "IT",
        "experience",
        "Python",
        "Development",
        "Scripting",
        "UNIXLinux",
        "Windows",
        "platforms",
        "domain",
        "Internet",
        "Things",
        "Automation",
        "Automotive",
        "Professional",
        "experience",
        "development",
        "testing",
        "deployment",
        "support",
        "applications",
        "Python",
        "Django",
        "Flask",
        "MySQL",
        "PostgreSQL",
        "Apache",
        "Nginx",
        "Gunicorn",
        "Expertise",
        "stack",
        "web",
        "applications",
        "Python",
        "programming",
        "web",
        "frameworks",
        "Python",
        "scripts",
        "automation",
        "data",
        "database",
        "operations",
        "data",
        "extraction",
        "text",
        "manipulation",
        "reports",
        "hands",
        "experience",
        "Relational",
        "databases",
        "MySQL",
        "PostgreSQL",
        "SQL",
        "knowledge",
        "EAV",
        "Timeseries",
        "database",
        "Expertise",
        "data",
        "web",
        "techniques",
        "Expertise",
        "IOT",
        "automation",
        "cloud",
        "solutions",
        "hands",
        "experience",
        "data",
        "analytics",
        "machine",
        "algorithms",
        "NLP",
        "Scikit",
        "Scipy",
        "version",
        "control",
        "systems",
        "CVS",
        "Bazaar",
        "SVN",
        "Git",
        "Experienced",
        "Automation",
        "Python",
        "test",
        "cases",
        "hands",
        "experience",
        "user",
        "interface",
        "HTML",
        "JavaScript",
        "CSS",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "ability",
        "codebase",
        "PEP8",
        "standards",
        "Proficiency",
        "UnixLinux",
        "environment",
        "Unix",
        "shell",
        "scripting",
        "skills",
        "Knowledge",
        "DevOps",
        "work",
        "Expertise",
        "web",
        "services",
        "hands",
        "experience",
        "Amazon",
        "EC2",
        "IBM",
        "Bluemix",
        "cloud",
        "deployment",
        "cloud",
        "services",
        "Expertise",
        "TCPIP",
        "socket",
        "programming",
        "building",
        "solutions",
        "MQTT",
        "protocol",
        "team",
        "resource",
        "activities",
        "customer",
        "engagement",
        "requirements",
        "efforts",
        "estimations",
        "design",
        "development",
        "guidance",
        "team",
        "members",
        "deliverables",
        "project",
        "management",
        "Quick",
        "errors",
        "code",
        "bug",
        "fixes",
        "enhancements",
        "legacy",
        "code",
        "Selfstarter",
        "communication",
        "facilitation",
        "Ability",
        "deadlinespriorities",
        "sense",
        "ownership",
        "desire",
        "role",
        "time",
        "team",
        "development",
        "environment",
        "work",
        "environment",
        "documentation",
        "customer",
        "contact",
        "liaison",
        "person",
        "ability",
        "concepts",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Infinity",
        "Methods",
        "Corp",
        "Sunnyvale",
        "CA",
        "May",
        "Present",
        "Python",
        "Developer",
        "Embitel",
        "Technologies",
        "Inc",
        "March",
        "May",
        "Southfield",
        "MI",
        "Project",
        "Solar",
        "Tracker",
        "Industrial",
        "Automation",
        "Role",
        "Python",
        "Developer",
        "Project",
        "Description",
        "Solar",
        "tracker",
        "automation",
        "solution",
        "power",
        "energy",
        "panels",
        "plants",
        "cloud",
        "application",
        "angle",
        "respect",
        "sun",
        "position",
        "Cloud",
        "commands",
        "devices",
        "gateway",
        "protocol",
        "MQTT",
        "Devices",
        "plants",
        "regions",
        "SCADA",
        "application",
        "Django",
        "web",
        "framework",
        "SCADA",
        "reports",
        "stats",
        "reports",
        "device",
        "email",
        "alarms",
        "users",
        "case",
        "device",
        "failure",
        "actions",
        "devices",
        "analytics",
        "data",
        "stats",
        "energy",
        "Work",
        "Responsibilities",
        "Business",
        "requirement",
        "gathering",
        "business",
        "requirements",
        "requirements",
        "customer",
        "contact",
        "liaison",
        "person",
        "stories",
        "tasks",
        "efforts",
        "timelines",
        "level",
        "Architecture",
        "design",
        "implementation",
        "database",
        "schema",
        "advancements",
        "product",
        "line",
        "market",
        "trends",
        "teams",
        "Hardware",
        "Embedded",
        "Backend",
        "stack",
        "developer",
        "end",
        "application",
        "development",
        "Developed",
        "web",
        "application",
        "SCADA",
        "python",
        "Django",
        "framework",
        "User",
        "Interface",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "automation",
        "solution",
        "commands",
        "cloud",
        "devices",
        "TCP",
        "IP",
        "socket",
        "programming",
        "application",
        "MQTT",
        "module",
        "data",
        "cloud",
        "devices",
        "vice",
        "python",
        "MQTT",
        "device",
        "client",
        "devices",
        "Graphical",
        "PDF",
        "reports",
        "python",
        "script",
        "REST",
        "APIs",
        "design",
        "implementation",
        "Firmware",
        "air",
        "code",
        "reviews",
        "sprint",
        "planning",
        "scrum",
        "master",
        "application",
        "deployment",
        "Nginx",
        "Gunicorn",
        "web",
        "servers",
        "Amazon",
        "EC2",
        "Direct",
        "communication",
        "client",
        "day",
        "day",
        "basis",
        "requirement",
        "gathering",
        "production",
        "issue",
        "resolution",
        "help",
        "peers",
        "development",
        "code",
        "reviews",
        "fix",
        "issues",
        "testing",
        "team",
        "users",
        "workflow",
        "design",
        "details",
        "flowchart",
        "testing",
        "procedures",
        "QA",
        "team",
        "data",
        "quality",
        "processes",
        "business",
        "requirements",
        "support",
        "Production",
        "releases",
        "releases",
        "Business",
        "users",
        "liaison",
        "Business",
        "technology",
        "requirements",
        "projects",
        "status",
        "updates",
        "client",
        "management",
        "development",
        "work",
        "projectsproductions",
        "issues",
        "changes",
        "processes",
        "Applications",
        "availability",
        "applications",
        "Business",
        "Environment",
        "Python",
        "Django",
        "PostgreSQL",
        "MQTT",
        "Nginx",
        "Gunicorn",
        "Linux",
        "HTML",
        "Amazon",
        "EC2",
        "Python",
        "Developer",
        "Embitel",
        "Technologies",
        "Inc",
        "Southfield",
        "MI",
        "January",
        "March",
        "Project",
        "Description",
        "Home",
        "Automation",
        "solution",
        "home",
        "appliances",
        "devices",
        "Users",
        "control",
        "home",
        "devices",
        "sensors",
        "web",
        "application",
        "cloud",
        "Cloud",
        "application",
        "python",
        "Django",
        "web",
        "framework",
        "communication",
        "cloud",
        "devices",
        "MQTT",
        "protocol",
        "Web",
        "application",
        "feature",
        "Modes",
        "user",
        "devices",
        "devices",
        "command",
        "service",
        "chains",
        "statements",
        "IFTTT",
        "user",
        "rules",
        "actions",
        "user",
        "interface",
        "Data",
        "analytics",
        "top",
        "data",
        "cloud",
        "patterns",
        "reports",
        "Work",
        "stories",
        "tasks",
        "efforts",
        "timelines",
        "level",
        "Architecture",
        "design",
        "implementation",
        "database",
        "schema",
        "teams",
        "Embedded",
        "Backend",
        "Developed",
        "web",
        "application",
        "python",
        "Django",
        "framework",
        "MySQL",
        "IBM",
        "Bluemix",
        "Watson",
        "services",
        "Integrated",
        "IBM",
        "Internet",
        "Things",
        "Foundation",
        "service",
        "application",
        "device",
        "management",
        "communication",
        "video",
        "streaming",
        "device",
        "sockets",
        "programming",
        "ZigBee",
        "communication",
        "Mesh",
        "network",
        "user",
        "device",
        "management",
        "module",
        "stores",
        "data",
        "color",
        "movement",
        "detection",
        "module",
        "user",
        "time",
        "incase",
        "theft",
        "home",
        "Worked",
        "User",
        "Interface",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "TCP",
        "IP",
        "socket",
        "programming",
        "application",
        "IBM",
        "IoTF",
        "module",
        "data",
        "cloud",
        "devices",
        "vice",
        "versa",
        "code",
        "reviews",
        "sprint",
        "planning",
        "scrum",
        "master",
        "application",
        "deployment",
        "Apache",
        "web",
        "server",
        "IBM",
        "Bluemix",
        "communication",
        "client",
        "day",
        "day",
        "basis",
        "requirement",
        "gathering",
        "production",
        "issue",
        "resolution",
        "workflow",
        "design",
        "details",
        "flowchart",
        "testing",
        "procedures",
        "QA",
        "team",
        "data",
        "quality",
        "processes",
        "business",
        "requirements",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "IBM",
        "IoTF",
        "IBM",
        "Bluemix",
        "Apache",
        "Linux",
        "HTML",
        "Python",
        "Developer",
        "Eicher",
        "Polaris",
        "Industries",
        "Inc",
        "Medina",
        "MN",
        "September",
        "January",
        "Project",
        "Description",
        "Vehicle",
        "Fault",
        "Analysis",
        "automation",
        "solution",
        "defect",
        "component",
        "level",
        "vehicle",
        "Complex",
        "algorithms",
        "solution",
        "data",
        "vehicle",
        "reference",
        "data",
        "cloud",
        "machine",
        "learning",
        "classifiers",
        "Reference",
        "data",
        "OEMs",
        "data",
        "vehicle",
        "conditions",
        "respect",
        "automobiles",
        "standards",
        "Runtime",
        "analytics",
        "condition",
        "vehicle",
        "fault",
        "component",
        "User",
        "Manufacturer",
        "vehicles",
        "data",
        "web",
        "interface",
        "test",
        "results",
        "runtime",
        "analysis",
        "Work",
        "Responsibilities",
        "Architecture",
        "design",
        "implementation",
        "web",
        "application",
        "Python",
        "Flask",
        "MySQL",
        "automation",
        "module",
        "chunks",
        "csv",
        "file",
        "end",
        "user",
        "manner",
        "machine",
        "algorithms",
        "classifiers",
        "top",
        "data",
        "results",
        "User",
        "Interface",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "automation",
        "scripts",
        "batch",
        "process",
        "files",
        "stores",
        "test",
        "results",
        "code",
        "reviews",
        "sprint",
        "application",
        "cloud",
        "Supervisor",
        "Nginx",
        "Gunicorn",
        "web",
        "servers",
        "communication",
        "client",
        "basis",
        "status",
        "updates",
        "production",
        "deliverables",
        "workflow",
        "design",
        "details",
        "flowchart",
        "testing",
        "procedures",
        "QA",
        "team",
        "data",
        "quality",
        "processes",
        "business",
        "requirements",
        "Environment",
        "Python",
        "Scikit",
        "Scipy",
        "Flask",
        "MySQL",
        "Linux",
        "Nginx",
        "Gunicorn",
        "Python",
        "Developer",
        "Embitel",
        "Technologies",
        "Inc",
        "Southfield",
        "MI",
        "September",
        "August",
        "Project",
        "Description",
        "Vehicle",
        "OnBoard",
        "Diagnostics",
        "tool",
        "vehicle",
        "OBD",
        "parameters",
        "vehicle",
        "condition",
        "Web",
        "dashboard",
        "users",
        "user",
        "vehicles",
        "parameters",
        "values",
        "time",
        "user",
        "rules",
        "threshold",
        "Vehicles",
        "data",
        "cloud",
        "intervals",
        "time",
        "OEMs",
        "issues",
        "Cloud",
        "services",
        "data",
        "driver",
        "alert",
        "notification",
        "application",
        "Vehicles",
        "OBD",
        "driver",
        "location",
        "breakdown",
        "issue",
        "Cloud",
        "threshold",
        "levels",
        "tyre",
        "pressure",
        "Fuel",
        "level",
        "Engine",
        "heat",
        "level",
        "malfunction",
        "user",
        "OEMs",
        "vehicle",
        "condition",
        "Work",
        "Responsibilities",
        "Architecture",
        "design",
        "implementation",
        "database",
        "schema",
        "multithreading",
        "TCPIP",
        "module",
        "device",
        "user",
        "management",
        "Developed",
        "web",
        "dashboard",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Graphical",
        "PDF",
        "reports",
        "python",
        "script",
        "automation",
        "tool",
        "data",
        "time",
        "actions",
        "event",
        "user",
        "Technical",
        "Communication",
        "Client",
        "Working",
        "time",
        "frames",
        "code",
        "team",
        "mates",
        "Multitasked",
        "deadlinespriorities",
        "Contributed",
        "code",
        "migration",
        "process",
        "application",
        "scripts",
        "environments",
        "Production",
        "QA",
        "Dev",
        "UAT",
        "Deployed",
        "application",
        "cloud",
        "Supervisor",
        "Nginx",
        "Gunicorn",
        "web",
        "servers",
        "Environment",
        "Python",
        "Flask",
        "HTML",
        "PostgreSQL",
        "Linux",
        "Nginx",
        "Python",
        "Developer",
        "Tata",
        "Trent",
        "Novi",
        "MI",
        "September",
        "August",
        "Project",
        "Description",
        "Inventory",
        "management",
        "application",
        "enterprise",
        "web",
        "application",
        "Trent",
        "staff",
        "users",
        "catalogs",
        "products",
        "orders",
        "users",
        "Staff",
        "users",
        "edit",
        "operations",
        "orders",
        "end",
        "users",
        "B2B",
        "scenarios",
        "orders",
        "Trent",
        "users",
        "inspection",
        "stages",
        "products",
        "tool",
        "purpose",
        "Trent",
        "staff",
        "form",
        "inspection",
        "results",
        "inspection",
        "levels",
        "inspection",
        "dates",
        "assignments",
        "auto",
        "backend",
        "effort",
        "tool",
        "Trent",
        "team",
        "quality",
        "products",
        "users",
        "slippages",
        "Work",
        "Responsibilities",
        "web",
        "application",
        "Python",
        "programming",
        "Django",
        "Django",
        "Oscar",
        "framework",
        "database",
        "design",
        "architecture",
        "discussions",
        "view",
        "functions",
        "stages",
        "inspection",
        "results",
        "logic",
        "inspection",
        "assignments",
        "users",
        "scheduling",
        "Written",
        "Python",
        "automation",
        "scripts",
        "reschedule",
        "assignments",
        "alerts",
        "case",
        "inspection",
        "delays",
        "failures",
        "custom",
        "templates",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "analytics",
        "turnover",
        "turnover",
        "staff",
        "user",
        "scripts",
        "emails",
        "management",
        "users",
        "assignments",
        "basis",
        "Written",
        "Unit",
        "test",
        "cases",
        "Unit",
        "testing",
        "framework",
        "code",
        "coverage",
        "automation",
        "testing",
        "selenium",
        "user",
        "needs",
        "direction",
        "Environment",
        "Python",
        "Django",
        "Django",
        "Oscar",
        "MySQL",
        "HTML",
        "Linux",
        "Python",
        "Developer",
        "Veveo",
        "Inc",
        "Boston",
        "MA",
        "May",
        "August",
        "Project",
        "Description",
        "Crawling",
        "Engine",
        "data",
        "websites",
        "media",
        "sites",
        "tv",
        "showsmovies",
        "sites",
        "app",
        "stores",
        "networking",
        "sites",
        "Data",
        "mining",
        "techniques",
        "expressions",
        "patterns",
        "data",
        "websites",
        "data",
        "MySQL",
        "database",
        "post",
        "validation",
        "Scrapers",
        "timings",
        "cron",
        "tools",
        "Work",
        "Responsibilities",
        "analysis",
        "websites",
        "patterns",
        "crawl",
        "data",
        "APIs",
        "data",
        "web",
        "templates",
        "custom",
        "script",
        "records",
        "database",
        "Scheduling",
        "Crawler",
        "data",
        "automation",
        "scripts",
        "alerts",
        "scraper",
        "Performed",
        "testing",
        "details",
        "Environment",
        "Python",
        "MySQL",
        "Linux",
        "Python",
        "Developer",
        "Span",
        "IT",
        "Solutions",
        "January",
        "April",
        "Project",
        "Description",
        "TaxSpanner",
        "portal",
        "users",
        "income",
        "tax",
        "returns",
        "python",
        "Django",
        "Framework",
        "User",
        "income",
        "documents",
        "user",
        "interface",
        "application",
        "data",
        "type",
        "ITR",
        "inputs",
        "system",
        "backend",
        "care",
        "end",
        "end",
        "process",
        "TaxSpanner",
        "platforms",
        "income",
        "tax",
        "returns",
        "User",
        "email",
        "income",
        "details",
        "attachments",
        "automation",
        "tools",
        "emails",
        "attachments",
        "time",
        "data",
        "return",
        "Work",
        "Responsibilities",
        "logic",
        "csv",
        "xls",
        "xlsx",
        "share",
        "transactions",
        "transactions",
        "database",
        "algorithm",
        "users",
        "income",
        "tax",
        "summary",
        "Django",
        "URLs",
        "views",
        "templates",
        "UI",
        "algorithm",
        "type",
        "ITR",
        "type",
        "return",
        "Custom",
        "scripts",
        "actions",
        "user",
        "Developed",
        "Messaging",
        "framework",
        "care",
        "emails",
        "admin",
        "inputs",
        "Written",
        "Unit",
        "test",
        "cases",
        "Unit",
        "testing",
        "framework",
        "python",
        "automation",
        "scripts",
        "selenium",
        "transactions",
        "files",
        "BillDesk",
        "gateway",
        "box",
        "manual",
        "automation",
        "Environment",
        "Python",
        "Django",
        "PostgreSQL",
        "HTML",
        "Education",
        "Bachelors",
        "Information",
        "Science",
        "Technology",
        "Acharya",
        "Nagarjuna",
        "University",
        "August",
        "April",
        "Skills",
        "DJANGO",
        "years",
        "HTML5",
        "years",
        "JAVASCRIPT",
        "years",
        "PYTHON",
        "years",
        "LINUX",
        "years",
        "MySQL",
        "years",
        "PostgresSQL",
        "years",
        "Apache",
        "years",
        "Nginix",
        "years",
        "IBM",
        "Watson",
        "year",
        "Flask",
        "year",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Technology",
        "Python",
        "Django",
        "Flask",
        "Tornado",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Tools",
        "PyCharm",
        "Visual",
        "Studio",
        "Putty",
        "Vagrant",
        "SQL",
        "Alchemy",
        "Vim",
        "Data",
        "Bases",
        "MySQL",
        "SQL",
        "PostgreSQL",
        "TimeSeries",
        "EAV",
        "Application",
        "Servers",
        "Apache",
        "Nginx",
        "Gunicorn",
        "Supervisor",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Windows",
        "Version",
        "Control",
        "CVS",
        "SVN",
        "Bazaar",
        "Git"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:37:05.071006",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sunnyvale CA Seeking a Python Developer position in the IT industry that will leverage my Technical Skills Python Expertise to support organizations in successfully leading their strategic initiatives 7 Years of thriving IT experience in Python Development and Scripting on UNIXLinux and Windows platforms Have worked primarily in the domain of Internet of Things Automation Automotive and ecommerce Professional experience in designing development testing deployment and support of applications programmed in Python Django Flask MySQL PostgreSQL Apache Nginx Gunicorn Expertise in building full stack web applications using Python programming and web frameworks Excellent in writing customized Python scripts for automation data parsing database operations data extraction text manipulation files parsing and reports generation Good hands on experience with Relational databases MySQL PostgreSQL SQL and knowledge on EAV and Timeseries database Expertise in data scraping and web crawling techniques Expertise in designing and developing complete IOT and automation cloud solutions Good hands on experience in performing data analytics and applying machine learning algorithms using NLP OpenCV Scikit Scipy Experienced in version control systems CVS Bazaar SVN and Git Experienced in Automation using Python specifically automating unitmanual test cases Good hands on experience in building user interface using HTML JavaScript CSS jQuery AJAX Bootstrap Great ability to write clear maintainable and efficient codebase by following PEP8 standards Proficiency working in a UnixLinux environment have good Unix shell scripting skills Knowledge of DevOps work Expertise in building RESTful web services Good hands on experience in Amazon EC2 and IBM Bluemix cloud deployment and cloud services Expertise in TCPIP socket programming and building solutions using MQTT protocol Managed a team being senior resource and involved in activities customer engagement requirements gathering efforts estimations sprint planning design development guidance to team members project deliverables project management Quick at identifying errors and debugging code doing bug fixes and enhancements to legacy code Selfstarter selfmotivated with excellent communication interpersonal and facilitation skills Ability to multitask and work against deadlinespriorities possess a sense of ownership and desire to take on an expanded role over time Capable of working independently as well as with a global team development environment Demonstrated work in a dynamic and agile environment with minimal documentation Served as primary customer contact and liaison person Exceptional ability to quickly master new concepts Work Experience Python Developer Infinity Methods Corp Sunnyvale CA May 2018 to Present Python Developer Embitel Technologies Inc March 2017 to May 2018 Southfield MI Project Solar Tracker Industrial Automation Role Python Developer Project Description Solar tracker automation solution is to generate power from solar energy efficiently Solar panels deployed in large plants will be controlled by cloud application and rotates them to an angle with respect to sun position automatically Cloud communicates the commands to devices through gateway using IoT protocol called MQTT Devices from different plants and regions can be controlled and monitored by using SCADA application which is built using Django web framework SCADA provides graphical reports live stats and detailed daily reports of each device It triggers email alarms to staff users in case of device failure It records all the actions performed by devices and analytics is performed over the data to derive daily stats on energy stored and consumed My Work Responsibilities Business requirement gathering and converting business requirements to technical requirements Served as primary customer contact and liaison person Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Researched and proposed technological advancements to a product line based on the current market trends Managing and Leading different teams working on Hardware Embedded and Backend As a Full stack developer involved in end to end backend application development Developed web application SCADA using python and Django framework Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Developed automation solution to communicate commands from cloud to devices Implemented TCP IP socket programming application using MQTT module which communicates data from cloud to devices and vice versa Developed python MQTT device client for embedded devices Designed and implemented Graphical and PDF reports which will be autogenerated by using python script REST APIs design and implementation for Firmware upgrade over the air Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Nginx and Gunicorn web servers on Amazon EC2 Direct communication with client on day to day basis for requirement gathering and production issue resolution Providing help to peers in development and doing their code reviews Analyzed and provided fix for most of the critical issues raised by testing team and users Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Provided extended support for Production releases and assisted in validating the releases Worked closely with the Business users acting as liaison between the Business and technology to identify the requirements for new projects Provided regular status updates to the client and senior management for the ongoing development work projectsproductions issues Suggested and implemented changes to the existing processes and Applications to improve the availability of the applications to the Business Environment Python Django PostgreSQL MQTT Nginx Gunicorn Linux HTML Amazon EC2 Python Developer Embitel Technologies Inc Southfield MI January 2016 to March 2017 Project Description Home Automation is a solution for controlling home appliances or devices remotely Users can manage control and monitor their home devices sensors from web mobile application from anywhere via cloud Cloud application has been built using python and Django web framework and communication between the cloud and devices happens seamlessly via MQTT protocol Web application has feature called Modes where user can group different devices and can control all the grouped devices with single command It also has webbased service to create chains of simple conditional statements which is nothing but IFTTT where user can create his own rules and actions from user interface Data analytics are performed on top of data stored at cloud to identify patterns and to extract reports My Work Responsibilities Responsible for identifying stories tasks and estimating efforts and timelines at granular level Responsible for Architecture and design implementation including database schema Managing and Leading different teams working on Embedded and Backend Developed web application using python Django framework MySQL Explored and evaluated IBM Bluemix Watson services Integrated IBM Internet of Things Foundation service to cloud application for device management and communication Implemented live video streaming from device which is compatible with sockets Involved in Embedded programming for ZigBee communication which works over Mesh network Designed and Developed user and device management module which stores data dynamically Implemented color and movement detection using OpenCV module which alerts user in real time incase of any theft at home Worked on User Interface using Django templating HTML CSS JavaScript Bootstrap Implemented TCP IP socket programming application using IBM IoTF module which communicates data from cloud to devices and vice versa Responsible for code reviews sprint planning and served as a scrum master Involved in cloud application deployment using Apache web server on IBM Bluemix Direct communication with client on day to day basis for requirement gathering and production issue resolution Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Django MySQL IBM IoTF IBM Bluemix Apache Linux HTML Python Developer Eicher Polaris Industries Inc Medina MN September 2015 to January 2016 Project Description Vehicle Fault Analysis is an automation solution to find the defect at component level in the vehicle Complex algorithms are implemented in this solution which will evaluate the data generated by the vehicle and compares the same with the reference data stored at cloud using machine learning classifiers Reference data is provided by OEMs which indicates the data of a vehicle in good and bad conditions with respect to automobiles industrial standards Runtime analytics will be performed to identify the condition of the vehicle and fault component if any User Manufacturer can input the vehicles data using web interface and view the test results and runtime analysis My Work Responsibilities Responsible for Architecture and design implementation Developed web application using Python Flask MySQL Developed an automation module which processes chunks of csv file uploaded by an end user in an asynchronous manner Implemented machine learning algorithms and applied different classifiers on top of data to extract accurate results Worked on User Interface using HTML CSS JavaScript Bootstrap Developed automation scripts to automate the batch process which processes huge files and stores test results in to database Responsible for code reviews and sprint planning Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Direct communication with client on weekly basis for status updates and production deliverables Documented all the workflow with design details and flowchart Followed proper UAT testing procedures by working closely with the QA team to ensure good data quality and the processes meet the business requirements Environment Python Scikit Scipy Flask MySQL Linux Nginx Gunicorn Python Developer Embitel Technologies Inc Southfield MI September 2014 to August 2015 Project Description Vehicle OnBoard Diagnostics is a tool to monitor vehicle OBD parameters and to ensure vehicle is in good condition Web dashboard is provided to users where user can monitor his vehicles parameters and their values in real time and user can configure set of rules to alert him if threshold breaches Vehicles CAN data will be collected by cloud at regular intervals of time which helps the OEMs to analyze and fix the issues online if possible Cloud services computes the data and insists driver by sending an alert or notification to the mobile application Vehicles OBD helps the driver by sharing location to mechanic if any breakdown or issue occurs Cloud constantly monitor threshold levels like tyre pressure Fuel level Engine heat level and any malfunction which helps user as well as OEMs to maintain the vehicle in good condition My Work Responsibilities Responsible for Architecture design implementation and database schema Implemented asynchronous multithreading in TCPIP programming Developed module for device and user management Developed web dashboard using HTML CSS Bootstrap JavaScript Designed and implemented Graphical and PDF reports which will be autogenerated by using python script Implemented automation tool which monitors data in near real time and triggers actions on any event which is configured by user Handling relevant Technical Communication with Client Working independently and within challenging time frames Reviewing code of junior team mates Multitasked and work against deadlinespriorities Contributed in streamlining the code migration process by syncing up the application scripts between different environments like Production QA Dev and UAT Deployed application on private cloud using Supervisor Nginx Gunicorn web servers Environment Python Flask HTML PostgreSQL Linux Nginx Python Developer Tata Trent Novi MI September 2013 to August 2014 Project Description Inventory management application is an enterprise web application for Trent staff and admin users to manage and maintain catalogs products orders and users Staff users can perform add edit delete operations and will be able to review orders done by end users In B2B scenarios bulk orders will be received by Trent and to supply the same to end users there are several inspection stages that the products must go through This tool servers the purpose where Trent staff will fill the form online and submit the inspection results All the inspection levels inspection dates and assignments will be auto computed in the backend which reduces manual effort By using this tool Trent team is able to successfully deliver quality products to end users without slippages My Work Responsibilities Developed web application using Python programming Django and Django Oscar framework Involved in database design and architecture discussions Developed view functions to automate stages based on inspection results Implemented logic for inspection assignments to staff users and scheduling Written Python automation scripts to evaluate and reschedule assignments with automated alerts in case of inspection delays or failures Built custom templates using HTML CSS Bootstrap and JavaScript Implemented analytics to derive daily turnover and turnover made by each staff user Developed scripts to send automated emails to senior management users which details overall assignments completed pending on weekly basis Written Unit test cases using Unit testing framework with 95 of code coverage Implemented automation testing using selenium Identified user needs and provided strategic direction Environment Python Django Django Oscar MySQL HTML Linux Python Developer Veveo Inc Boston MA May 2012 to August 2013 Project Description Crawling Engine which helps for data scraping or crawling from different websites media sites tv showsmovies sites app stores and other social networking sites Data mining techniques regular expressions have been used to identify patterns and to extract relevant data from websites Scraped data will be validated and the same will be stored into MySQL database post to validation Scrapers are scheduled to run daily at fixed timings using cron tools My Work Responsibilities Performed analysis on websites to identify the patterns and to crawl data Developed APIs to crawl data for similar web templates Implemented custom script for pumping records into database Scheduling the Crawler for fetching data recursively Developed automation scripts to send alerts if any of the scraper is not responding Performed manual testing to validate scraped details Environment Python MySQL Linux Python Developer Span Across IT Solutions IN January 2011 to April 2012 Project Description TaxSpanner is a portal from where users can efile their income tax returns It has been built using python and Django Framework User can upload their income documents through user friendly interface application computes the data and decides the type of ITR to be filed based on the inputs Automated system has been built at backend to take care of end to end process with single click TaxSpanner provides different easy platforms to efile the income tax returns User can simply send an email with proper income details attachments where automation tools will read emails and attachments in real time and processes the data and efile the return My Work Responsibilities Developed and automated a logic to read csv xls xlsx share transactions and dump the transactions to database Designed and developed algorithm to compute and display the users income and tax summary Developed and implemented Django URLs views and templates for UI Implemented an algorithm to detect the type of the ITR and type of the return Custom scripts to extract the actions performed by individual user Developed Messaging framework which takes care of sending emails based on admin inputs Written Unit test cases using Unit testing framework Implemented python automation scripts using selenium which uploads the transactions files to BillDesk gateway Performed black box manual and automation testing Environment Python Django PostgreSQL HTML Education Bachelors in Information Science Technology Acharya Nagarjuna University August 2006 to April 2010 Skills DJANGO 6 years HTML5 3 years JAVASCRIPT 3 years PYTHON 7 years LINUX 8 years MySQL 4 years PostgresSQL 4 years Apache 3 years Nginix 4 years IBM Watson 1 year Flask 1 year Additional Information TECHNICAL SKILLS Technology Python Django Flask Tornado HTML CSS JavaScript Bootstrap Tools PyCharm Visual Studio Putty Vagrant SQL Alchemy Vim Data Bases MySQL SQL PostgreSQL TimeSeries EAV Application Servers Apache Nginx Gunicorn Supervisor Operating Systems UNIX Linux Windows Version Control CVS SVN Bazaar Git",
    "unique_id": "9d8e1170-34e6-434d-be2f-50e8aecab0e6"
}