{
    "clean_data": "Java Lead span lJavaspan Lead Java Lead Bank of America Jersey CityNJ Phoenix AZ Over 9 years of IT experience Finance Domain in design development testing and documentation of Enterprise applications using JAVAJ2EE technologies Worked extensivelyin COREJAVA SCALA Multithreading WEBSPHERE WEBLOGIC DOCKER HIBERNATE SPRINGBOOT IBMMQ ANGULARPLAY JMS MICROSERVICE XML MONGODB ORACLE EXADATA SQL PLSQL Elastic SEARCH PERLPYTHON INFORMATICABig Data DB2 and SYBASE Java Developer with experience in Design Development and Implementation of multitier client webbased applications using Object Oriented Methodologies Highly experienced in core javadata structure algorithmand problemsolving skills Proven ability to solve any type of complex problems independently Experienced to produce of high volume low latency systems Highly experiencedin Multithreading Extensive use of the Java Collection API Concurrent Reflection API Well experienced forJMS in creating JMS Topic Subscribers and Publishers and MQ Experienced in usingWEBLOGIC DOCKERand WEBSPHEREApplication Servers Thorough understanding and hands on experience on Relational Databases like Oracle SybaseDB2 and EXADATA Strong Database development experience in writing functions procedures triggers and views in PLSQL Well experienced inservice development using ServiceOriented Architecture technologies SOA like Web ServicesSOAP Spring MVCpattern has been implemented successfully in three applications Used DroolsMVEL as rule engine for business logic integration in Java Experience in testing the application with JUNIT Strong in writing build files with ANT Good experience with Hibernate and Spring JDBC in Persistence layer Developed and deployed REST web service by SPRINGto process JSON data Experienced in Local and distributed caching frameworks EHCACHE and Coherence WebLogic cache Worked on migration from java 16 to 18function API Stream API Lambda Expressions Collection and Concurrent API Memory management Experienced in ETL INFORMATICACLOVERETL HADOOP HDFS Hive Impala SQOOP and Map reduce SPARK KAFKAAVRO Developed and implemented UI controls and APIs with Angular JSPLAY Key role in several assignments reviewing design docs code reviews bug fixing designing QA systems and working with business analysts and shared innovation and automation Ability to quickly adjust priorities and take on projects with limited specifications Effective team player with excellent logical and analytical abilities and passion for technology and self starter Experienced in capital market frontoffice back office settlement and clearance Authorized to work in the US for any employer Work Experience Java Lead Bank of America Jersey CityNJ September 2018 to Present ProjectPME Product Master Environment Its a global authorized data center for any sort of information about a financial instrument which is required to trade or hold an instrument and properly identifies an instrument identifies characteristics of an instrument It is being used across the bank and other outside financial body for regulatory point of view Holds golden copy of data for bank for all market segments Responsibilities Developed the project using Agile and TDD Methodology Implemented Multithreading and Concurrent API for processing Developed java API and functional programming to calculate liquidity ratio of an asset for different market segments using core java collection memory management and OOPS Developed and deployed Rest web service to process JSON data Involved inschema design and SQL queries and messaging tuning to increase the through put Enhanced new feature using python Developed various transformations and mapping Involved to implementdata objects for bitemporal data Involved parsing different code base and published data set into RDFNo SQL using SCALA for data lineage Involved writing SPARQL query to fetch data from RDF Processed regulatory data for MIFID II for OTC Fixed Incomeand derivative products Involved to design UI by Play framework using SCALA and AKKA framework for actor model Delivered one module in and out with innovation and automation Participated in store writing architecture deployment and code review and mentoring junior Involved solving production issue with no time and message tuning as part of MQ messaging Communicated with multiple BAs and stake holders to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA SCALASPRINGWEBSPHERE REST API ANGULARXML XSD INFORMATICACOLVER ETL UNIXLog4j PuttyHADOOPSPARK Hibernate Oracle EXADATA No SQL Db2 Jenkins PerlPython TIBCO MQ AUTOSYS Java Lead Amadeus New York NY August 2016 to September 2018 ProjectReservation system Its a global product which is helping to manage inventory reservation and payment processing Responsibilities Developed the project using Agile and TDD Methodology Implemented Concurrent API for processing Developed java API and functional programming Developed and deployed micro service to process highly volume of JSON data Involved in schema design and SQL queries for new projects along with distributed DB Enhanced new feature using python Involved in design front end and back end communication Provided design to produce of high volume low latency systems Involved in participating in heap thread dump and GC log analysis Participated in store writing architecture code review and mentoring junior Communicated with BAs and product owner to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA18 SPRINGBOOT MICROSERVICE DOCKER Swagger XMLXSDUNIXLog4j Putty Angular5 coherence cache Goldengate Oracle EXADATA MONGO DB Jenkins Splunk GIT Maven ElasticsearchSPARK ShellPythonMQ Java Lead GAP Inc San Francisco CA July 2014 to August 2016 ProjectCAP Commission Allocation Program It is a very critical webbased application as this application is visible to external clients along with internal use Business around this application CS acts as a broker for institutional client in trading business There is huge volume trading involved when we are dealing with institutional clients Hence acting as broker provides huge commission to CS A deal is finalized between CS and the client on the amount of commission to be owned by CS for execution of each trade done by the client This commission is split into two parts CS Portion and the client portion RX Research  commission CS gives this benefit to the client of giving back some portion of this commission back to the client This commission is not given back to the client in form of money but instead CS pays invoices of services used by client from other vendors or vendors provided by CS to the client Client sends the invoices to CS and CAPS users upload these invoices using the application The invoices are then accessed by the clients using the CAPS external website internet application Clients will be able to see those invoices and accordingly provide a feedback of either paying the invoices pay it partially or reject the invoices Based on the feedback provided by the client CAPS users generate a transmittal request and sends to the PeopleSoft account department for clearing Responsibilities Developed the project using Agile Methodology Implemented the application using Spring Framework which is based on IOCDependency injection design pattern Involved in consuming XML Web ServicesSOA using SOAP SAX and DOM XML parsers Implemented Multithreading and Concurrent API for processing the file and statements Developed shell Python script ETL Transformationsand PLSQL for Control M JOB Developed and deployed REST web service by Jersey to process JSON data Developed and implemented UI controls and APIs with Angular JS Developed Perlpython script for batch processing Importing and exporting data in HDFS and Hive using Sqoop Extracted files from Oracle Database through Sqoop and placed in HDFS and processed Written Hive UDFS to extract data from staging tables Provided innovation and automation to save maintenance cost Provides support in extended hours and weekends whenever needed Worked on migration from java 16 to 18functional interface Stream API Lambda Expressions Collection and Concurrent APImemory management Worked on integration testing and system testing to test the application functionality EnvironmentEclipse JDK 16 JDK 18 JMS SpringAngularWEB LOGICJersey XML XSD ANT Log4j Putty Oracle SYBASEPerlPython Db2 HADOOP Jenkins Visio UML Eclipse Soap UI ProjectIMANSMAN Globalization ISS supports the settlement of nonUS equity transactions that are done at Credit Suisse The equity trades are booked in the NTPA and Vision upstream systems Every day staff in the International Operations Group must perform the following actions as part of the settlement process Capture and analyze open trades Open trades are trades which have not yet settledEscalate any unknown trades to Managers and Trade Support Clear the ISS MERVA and CAMS queuesISS is used to format SWIFT messages automaticallyMERVA is used to send and track SWIFT messages sent through to other financial systems Responsibilities Developed the project using TDD Methodology Used SPRING to decouple Java components ORM connectivity and transaction management Designing Architectingdeveloping Restful Web Services for all the emember functionalities Used Hibernate for data persistency Developed response triggering system using CRON trigger of Quartz Scheduler API Used Drools as rule engine for business logic integration in Java Tested all the struts2 action using EASYMOCK framework Developed and implemented UI controls and APIs with Angular JS Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Reviewing the code to make sure it follows the best practices and the code Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment Java JSP Angular JS JMS Spring Hibernate Oracle 10g DB2 Sybase PerlPython BEA Web logicAJAX XML EASYMOCK XSD Maven Log4j SVN Putty Project Allocation Transaction Processing ATP Prime Brokerage Prime Brokerage processes feeds from customers in different formats such as CSV files excel documents xml documents etc These feeds are received in different protocols such as FTP and PGP encrypted Email attachments For each new feed IT is required to analyze the file format and build transformations using custom code to recognize the file format apply a set of common transformation rules and load the data to an operational data storeThis includes new processes for retrieving parsing normalizing and storing client data as well as an interface for CS CSRs to provide greater transparency for internal users Scope Includes File Mover The client can send the allocation and reconciliation information files through various delivery channels like FTP Email attachments move those files to INFORMATICA DX location for further processing Before moving file to DX location file goes through various rules like decryption file name renaming file size check etc All these rules configured against client profile INFORMATICA fetch those files and performs data validation deduplication and transformation through various workflows Once these activities are completed as per record status data will be routed to mentioned destination systems GUI screens are developed to show Allocation Clearing and Exception related data to end user Responsibilities Involved in the design and implementation of the architecture for the project using OOAD UML Design Patterns Developed the code using Test driven Development Interpreting complicated requirements and implementing them in a userfriendly application that meets the needs of the users Used  in developing user interfaces using UI Components and interceptors Implemented Multithreading for processing the file Implemented Struts 2 interceptors which are responsible for most of the request and response processing Used Ajax for interactive and dynamic interfaces on web pages Developed PLSQL code for backend validation and processing Reviewing the code to make sure it follows the best practices and the code Setup of Development Environment and Source Control Tested all the struts2 action using Easy Mock framework Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment JavaJSPOracle 10gInformaticaBEA Web logic 103 JavaScriptAJAXXMLANT PuttyRapid SQLUML Eclipse Sr Java Developer Apex Systems Inc June 2012 to July 2014 Project Intellect Flow Description Workflow driven processing is mainly used to draw the BPM process of a product and for Maintenance Process It provides flexibility to define the entire workflow as per the existing legacy business requirements and allowing the users to automate several intermediate activities which in turn effectively reducing the total business turnover time Combined with the imaging solution it provides the users with a powerful Document Management System Indexer Helpful for create User defined screen for the maintenance of Transaction and to view the work item details Imaging Imaging mainly used for maintaining the transactions data of different productsGenerally the documents are coming through different sources like Scanner Fax and Email from different location into a main server in the imaging IMGTFT format After that we are uploading the images by linking to the corresponding transactions that bank user can easily process the transactions by editing the imagesWe can also crop print zooming magnify and reject the images according to user choice To perform the operation it uses RMI socket connection ISS is used to format SWIFT messages automatically Responsibilities Responsible for Technical document design depends on the Business flow Responsible for conducting the technical lowlevel code and design review process and web navigation control flow and error handling Implemented Multithreading for clearing the instrument Developed web interface using JSPtag libraries and JavaScript for clientside validations Designed and developed messaging frameworkand integratingwith IBM MQ Handling the build activity for the environment WEBLOGICand WEBSPHERE Worked on integration testing and system testing to test the application functionality Developed new feature and application enhancement for the current iteration Implemented workflow with other different product Involved in SQL queries tuning database design Used the Ant build script to build and deploy the application in UNIX Server Used various UNIX commands for manipulation of directories and files Environment WindowsUnix Java JavaScript SERVLET EJB JMS Web Service Oracle Weblogic WebSphere MQ SeriesJSP JSTL Custom tags JDBC JMS Ant JUNIT Java Developer Apple Sunnyvale CA Sunnyvale CA April 2010 to May 2010 Project KPAYTRACK DescriptionThe KPay track has developed to enable KLI to track and update statuses of payment and other service requests Salient features are listed below Update Payment Status Description This module was designed and developed to enable users of KPAYTRACK to update the payment status for a given remittance type All Cash payments are by default considered has cleared The display layout of the search page and the records that the user can update is Based on the hierarchy of the user Account Level 1Account Level Update Exception Description This module was designed and developed to enable users of KPAYTRACK to update exceptions TertiarySecondaryPrimary that are generated when the user uploads an excel in Upload Payment Status moduleView All Exception Description This module was designed and developed to enable users of KPAYTRACK to view all the exception Primary Secondary and Tertiary which may remain unhandled by the user Responsibilities Analysis and Design of the module Wrote tested components like JSPs SERVLETS PROTLETS Java beans Involved in development java classes using Strings Collections Lists and Interfaces Used WEBSPEHRE 51 console and web sphere portal server to deploy J2EE components Enterprise Archive involved in production support Configured Hibernate ORM methodologies and writing SQL and HQL queries Developed hibernate mapping and hibernate configuration files EnvironmentIBM Rational Application Developer RADWindows XPOracle9i database web sphereIBM web sphere portal server IBM Tivoli Directory Server V 52 Java PORTLET JSPJavaScript EJB Hibernate PLSQL Log4jANTToad Education Bachelors Skills ECLIPSE JAVA HIBERNATE SPRING JAX Additional Information SKILL SET Languages Java SCALAJavaScript Type script CSS PLSQL PerlPython Web Technologies JAVASERVELT 23 JDBC 20 CSSJavaScriptJSP JNDIJQUERY 0 JMS Spring Web FlowWebservice using AXIS2JAXRPCJAXWS Java Mail JSON ANGULAR Application Servers IBM Websphere Application Server WebLogic and Web sphere portal server Web Server Apache Tomcat Frameworks APIs Spring framework Struts 111220TilesJUNIT41 Log4j Ant WEB SERVICES SOAP WSDL UDDI Restful webservices Development Tools IDE EclipseRAD XML XSL DOM XML Schema JAXBSAX XSLT and Designing DTDs Development Build Tools ANTMaven SBT Database IBM DB2Oracle Sybase and EXADATAMONGO DB Operating Systems Microsoft Windows 982000NTXP UNIX Version controlling tools SVN GIT ETL INFORMATICACOLVER ETL ORM Hibernate Big Data HADOOP HDFS RDFSPARK KAFKAYARNAVRO Database query tools TOADOracle SQL Developer SQLDBX Development Methodologies Agile Methodologies and TDD Project ManagementSupport tools Visio JIRA WIKIJENKINS SUPERPUTTYFEDELLERCrucible",
    "entities": [
        "WebSphere MQ",
        "Spring Framework",
        "Holds",
        "GUI",
        "New York",
        "HDFS",
        "UNIX",
        "JMS",
        "AXIS2JAXRPCJAXWS Java Mail JSON ANGULAR Application Servers IBM Websphere Application Server WebLogic",
        "CS Portion",
        "Jersey",
        "Object Oriented Methodologies Highly",
        "Design Development and Implementation",
        "CS",
        "RMI",
        "Salient",
        "IBM",
        "JSPtag",
        "Java",
        "EnvironmentEclipse",
        "JMS Spring Hibernate Oracle",
        "XML",
        "CRON",
        "ServiceOriented Architecture",
        "Developer Apex Systems Inc",
        "Phoenix AZ",
        "ETL INFORMATICACLOVERETL HADOOP",
        "Publishers",
        "KLI",
        "Responsibilities Analysis and Design",
        "Scanner Fax",
        "Stream API Lambda Expressions Collection and Concurrent",
        "JAVAJ2EE",
        "Ant WEB SERVICES SOAP WSDL UDDI Restful",
        "KPAYTRACK",
        "Developed",
        "SVN GIT ETL INFORMATICACOLVER ETL",
        "ANT Good",
        "java collection memory management and OOPS Developed",
        "ETL Transformationsand",
        "CS A",
        "San Francisco",
        "the Business flow Responsible",
        "Relational Databases like",
        "Responsibilities Involved",
        "SWIFT",
        "MQ",
        "Control M JOB Developed",
        "GAP Inc",
        "TDD Project ManagementSupport",
        "Communicated",
        "GC",
        "SOA",
        "Vision",
        "Allocation Clearing and Exception",
        "Easy Mock",
        "Scope Includes",
        "WEBSPHERE Worked",
        "ORACLE EXADATA",
        "Oracle Database",
        "Agile",
        "EXADATAMONGO DB Operating Systems",
        "EJB",
        "GIT",
        "SVN Putty Project Allocation Transaction Processing",
        "CSV",
        "API",
        "PeopleSoft",
        "EASYMOCK",
        "Development Tools",
        "US",
        "Sybase",
        "Sqoop",
        "NTPA",
        "QA",
        "the International Operations Group",
        "Oracle SybaseDB2",
        "Drools",
        "INFORMATICA",
        "EnvironmentIBM Rational Application Developer RADWindows",
        "RDF",
        "PGP",
        "RX Research",
        "UNIX Version",
        "Sunnyvale",
        "SAX",
        "Transaction",
        "SQL",
        "ProjectCAP Commission Allocation Program",
        "AKKA",
        "Implemented Multithreading and Concurrent API",
        "Hive",
        "JUNIT",
        "Web Server Apache Tomcat Frameworks",
        "UI Components",
        "FTP",
        "Agile Methodology Implemented",
        "Visio JIRA WIKIJENKINS SUPERPUTTYFEDELLERCrucible",
        "OOAD UML Design Patterns Developed",
        "Managers and Trade Support Clear the ISS MERVA",
        "Document Management System Indexer Helpful",
        "DOM XML",
        "MQ Experienced",
        "Impala",
        "Tertiary",
        "JavaScript",
        "UI",
        "DB Enhanced",
        "BPM",
        "Microsoft",
        "XSD",
        "IOCDependency",
        "Imaging Imaging",
        "CAMS",
        "Update Payment Status Description",
        "Goldengate Oracle EXADATA MONGO DB Jenkins Splunk",
        "usingWEBLOGIC DOCKERand WEBSPHEREApplication Servers Thorough",
        "SCALA",
        "Local",
        "Credit Suisse",
        "Responsibilities Responsible for Technical"
    ],
    "experience": "Experience in testing the application with JUNIT Strong in writing build files with ANT Good experience with Hibernate and Spring JDBC in Persistence layer Developed and deployed REST web service by SPRINGto process JSON data Experienced in Local and distributed caching frameworks EHCACHE and Coherence WebLogic cache Worked on migration from java 16 to 18function API Stream API Lambda Expressions Collection and Concurrent API Memory management Experienced in ETL INFORMATICACLOVERETL HADOOP HDFS Hive Impala SQOOP and Map reduce SPARK KAFKAAVRO Developed and implemented UI controls and APIs with Angular JSPLAY Key role in several assignments reviewing design docs code reviews bug fixing designing QA systems and working with business analysts and shared innovation and automation Ability to quickly adjust priorities and take on projects with limited specifications Effective team player with excellent logical and analytical abilities and passion for technology and self starter Experienced in capital market frontoffice back office settlement and clearance Authorized to work in the US for any employer Work Experience Java Lead Bank of America Jersey CityNJ September 2018 to Present ProjectPME Product Master Environment Its a global authorized data center for any sort of information about a financial instrument which is required to trade or hold an instrument and properly identifies an instrument identifies characteristics of an instrument It is being used across the bank and other outside financial body for regulatory point of view Holds golden copy of data for bank for all market segments Responsibilities Developed the project using Agile and TDD Methodology Implemented Multithreading and Concurrent API for processing Developed java API and functional programming to calculate liquidity ratio of an asset for different market segments using core java collection memory management and OOPS Developed and deployed Rest web service to process JSON data Involved inschema design and SQL queries and messaging tuning to increase the through put Enhanced new feature using python Developed various transformations and mapping Involved to implementdata objects for bitemporal data Involved parsing different code base and published data set into RDFNo SQL using SCALA for data lineage Involved writing SPARQL query to fetch data from RDF Processed regulatory data for MIFID II for OTC Fixed Incomeand derivative products Involved to design UI by Play framework using SCALA and AKKA framework for actor model Delivered one module in and out with innovation and automation Participated in store writing architecture deployment and code review and mentoring junior Involved solving production issue with no time and message tuning as part of MQ messaging Communicated with multiple BAs and stake holders to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA SCALASPRINGWEBSPHERE REST API ANGULARXML XSD INFORMATICACOLVER ETL UNIXLog4j PuttyHADOOPSPARK Hibernate Oracle EXADATA No SQL Db2 Jenkins PerlPython TIBCO MQ AUTOSYS Java Lead Amadeus New York NY August 2016 to September 2018 ProjectReservation system Its a global product which is helping to manage inventory reservation and payment processing Responsibilities Developed the project using Agile and TDD Methodology Implemented Concurrent API for processing Developed java API and functional programming Developed and deployed micro service to process highly volume of JSON data Involved in schema design and SQL queries for new projects along with distributed DB Enhanced new feature using python Involved in design front end and back end communication Provided design to produce of high volume low latency systems Involved in participating in heap thread dump and GC log analysis Participated in store writing architecture code review and mentoring junior Communicated with BAs and product owner to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA18 SPRINGBOOT MICROSERVICE DOCKER Swagger XMLXSDUNIXLog4j Putty Angular5 coherence cache Goldengate Oracle EXADATA MONGO DB Jenkins Splunk GIT Maven ElasticsearchSPARK ShellPythonMQ Java Lead GAP Inc San Francisco CA July 2014 to August 2016 ProjectCAP Commission Allocation Program It is a very critical webbased application as this application is visible to external clients along with internal use Business around this application CS acts as a broker for institutional client in trading business There is huge volume trading involved when we are dealing with institutional clients Hence acting as broker provides huge commission to CS A deal is finalized between CS and the client on the amount of commission to be owned by CS for execution of each trade done by the client This commission is split into two parts CS Portion and the client portion RX Research   commission CS gives this benefit to the client of giving back some portion of this commission back to the client This commission is not given back to the client in form of money but instead CS pays invoices of services used by client from other vendors or vendors provided by CS to the client Client sends the invoices to CS and CAPS users upload these invoices using the application The invoices are then accessed by the clients using the CAPS external website internet application Clients will be able to see those invoices and accordingly provide a feedback of either paying the invoices pay it partially or reject the invoices Based on the feedback provided by the client CAPS users generate a transmittal request and sends to the PeopleSoft account department for clearing Responsibilities Developed the project using Agile Methodology Implemented the application using Spring Framework which is based on IOCDependency injection design pattern Involved in consuming XML Web ServicesSOA using SOAP SAX and DOM XML parsers Implemented Multithreading and Concurrent API for processing the file and statements Developed shell Python script ETL Transformationsand PLSQL for Control M JOB Developed and deployed REST web service by Jersey to process JSON data Developed and implemented UI controls and APIs with Angular JS Developed Perlpython script for batch processing Importing and exporting data in HDFS and Hive using Sqoop Extracted files from Oracle Database through Sqoop and placed in HDFS and processed Written Hive UDFS to extract data from staging tables Provided innovation and automation to save maintenance cost Provides support in extended hours and weekends whenever needed Worked on migration from java 16 to 18functional interface Stream API Lambda Expressions Collection and Concurrent APImemory management Worked on integration testing and system testing to test the application functionality EnvironmentEclipse JDK 16 JDK 18 JMS SpringAngularWEB LOGICJersey XML XSD ANT Log4j Putty Oracle SYBASEPerlPython Db2 HADOOP Jenkins Visio UML Eclipse Soap UI ProjectIMANSMAN Globalization ISS supports the settlement of nonUS equity transactions that are done at Credit Suisse The equity trades are booked in the NTPA and Vision upstream systems Every day staff in the International Operations Group must perform the following actions as part of the settlement process Capture and analyze open trades Open trades are trades which have not yet settledEscalate any unknown trades to Managers and Trade Support Clear the ISS MERVA and CAMS queuesISS is used to format SWIFT messages automaticallyMERVA is used to send and track SWIFT messages sent through to other financial systems Responsibilities Developed the project using TDD Methodology Used SPRING to decouple Java components ORM connectivity and transaction management Designing Architectingdeveloping Restful Web Services for all the emember functionalities Used Hibernate for data persistency Developed response triggering system using CRON trigger of Quartz Scheduler API Used Drools as rule engine for business logic integration in Java Tested all the struts2 action using EASYMOCK framework Developed and implemented UI controls and APIs with Angular JS Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Reviewing the code to make sure it follows the best practices and the code Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment Java JSP Angular JS JMS Spring Hibernate Oracle 10 g DB2 Sybase PerlPython BEA Web logicAJAX XML EASYMOCK XSD Maven Log4j SVN Putty Project Allocation Transaction Processing ATP Prime Brokerage Prime Brokerage processes feeds from customers in different formats such as CSV files excel documents xml documents etc These feeds are received in different protocols such as FTP and PGP encrypted Email attachments For each new feed IT is required to analyze the file format and build transformations using custom code to recognize the file format apply a set of common transformation rules and load the data to an operational data storeThis includes new processes for retrieving parsing normalizing and storing client data as well as an interface for CS CSRs to provide greater transparency for internal users Scope Includes File Mover The client can send the allocation and reconciliation information files through various delivery channels like FTP Email attachments move those files to INFORMATICA DX location for further processing Before moving file to DX location file goes through various rules like decryption file name renaming file size check etc All these rules configured against client profile INFORMATICA fetch those files and performs data validation deduplication and transformation through various workflows Once these activities are completed as per record status data will be routed to mentioned destination systems GUI screens are developed to show Allocation Clearing and Exception related data to end user Responsibilities Involved in the design and implementation of the architecture for the project using OOAD UML Design Patterns Developed the code using Test driven Development Interpreting complicated requirements and implementing them in a userfriendly application that meets the needs of the users Used   in developing user interfaces using UI Components and interceptors Implemented Multithreading for processing the file Implemented Struts 2 interceptors which are responsible for most of the request and response processing Used Ajax for interactive and dynamic interfaces on web pages Developed PLSQL code for backend validation and processing Reviewing the code to make sure it follows the best practices and the code Setup of Development Environment and Source Control Tested all the struts2 action using Easy Mock framework Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment JavaJSPOracle 10gInformaticaBEA Web logic 103 JavaScriptAJAXXMLANT PuttyRapid SQLUML Eclipse Sr Java Developer Apex Systems Inc June 2012 to July 2014 Project Intellect Flow Description Workflow driven processing is mainly used to draw the BPM process of a product and for Maintenance Process It provides flexibility to define the entire workflow as per the existing legacy business requirements and allowing the users to automate several intermediate activities which in turn effectively reducing the total business turnover time Combined with the imaging solution it provides the users with a powerful Document Management System Indexer Helpful for create User defined screen for the maintenance of Transaction and to view the work item details Imaging Imaging mainly used for maintaining the transactions data of different productsGenerally the documents are coming through different sources like Scanner Fax and Email from different location into a main server in the imaging IMGTFT format After that we are uploading the images by linking to the corresponding transactions that bank user can easily process the transactions by editing the imagesWe can also crop print zooming magnify and reject the images according to user choice To perform the operation it uses RMI socket connection ISS is used to format SWIFT messages automatically Responsibilities Responsible for Technical document design depends on the Business flow Responsible for conducting the technical lowlevel code and design review process and web navigation control flow and error handling Implemented Multithreading for clearing the instrument Developed web interface using JSPtag libraries and JavaScript for clientside validations Designed and developed messaging frameworkand integratingwith IBM MQ Handling the build activity for the environment WEBLOGICand WEBSPHERE Worked on integration testing and system testing to test the application functionality Developed new feature and application enhancement for the current iteration Implemented workflow with other different product Involved in SQL queries tuning database design Used the Ant build script to build and deploy the application in UNIX Server Used various UNIX commands for manipulation of directories and files Environment WindowsUnix Java JavaScript SERVLET EJB JMS Web Service Oracle Weblogic WebSphere MQ SeriesJSP JSTL Custom tags JDBC JMS Ant JUNIT Java Developer Apple Sunnyvale CA Sunnyvale CA April 2010 to May 2010 Project KPAYTRACK DescriptionThe KPay track has developed to enable KLI to track and update statuses of payment and other service requests Salient features are listed below Update Payment Status Description This module was designed and developed to enable users of KPAYTRACK to update the payment status for a given remittance type All Cash payments are by default considered has cleared The display layout of the search page and the records that the user can update is Based on the hierarchy of the user Account Level 1Account Level Update Exception Description This module was designed and developed to enable users of KPAYTRACK to update exceptions TertiarySecondaryPrimary that are generated when the user uploads an excel in Upload Payment Status moduleView All Exception Description This module was designed and developed to enable users of KPAYTRACK to view all the exception Primary Secondary and Tertiary which may remain unhandled by the user Responsibilities Analysis and Design of the module Wrote tested components like JSPs SERVLETS PROTLETS Java beans Involved in development java classes using Strings Collections Lists and Interfaces Used WEBSPEHRE 51 console and web sphere portal server to deploy J2EE components Enterprise Archive involved in production support Configured Hibernate ORM methodologies and writing SQL and HQL queries Developed hibernate mapping and hibernate configuration files EnvironmentIBM Rational Application Developer RADWindows XPOracle9i database web sphereIBM web sphere portal server IBM Tivoli Directory Server V 52 Java PORTLET JSPJavaScript EJB Hibernate PLSQL Log4jANTToad Education Bachelors Skills ECLIPSE JAVA HIBERNATE SPRING JAX Additional Information SKILL SET Languages Java SCALAJavaScript Type script CSS PLSQL PerlPython Web Technologies JAVASERVELT 23 JDBC 20 CSSJavaScriptJSP JNDIJQUERY 0 JMS Spring Web FlowWebservice using AXIS2JAXRPCJAXWS Java Mail JSON ANGULAR Application Servers IBM Websphere Application Server WebLogic and Web sphere portal server Web Server Apache Tomcat Frameworks APIs Spring framework Struts 111220TilesJUNIT41 Log4j Ant WEB SERVICES SOAP WSDL UDDI Restful webservices Development Tools IDE EclipseRAD XML XSL DOM XML Schema JAXBSAX XSLT and Designing DTDs Development Build Tools ANTMaven SBT Database IBM DB2Oracle Sybase and EXADATAMONGO DB Operating Systems Microsoft Windows 982000NTXP UNIX Version controlling tools SVN GIT ETL INFORMATICACOLVER ETL ORM Hibernate Big Data HADOOP HDFS RDFSPARK KAFKAYARNAVRO Database query tools TOADOracle SQL Developer SQLDBX Development Methodologies Agile Methodologies and TDD Project ManagementSupport tools Visio JIRA WIKIJENKINS SUPERPUTTYFEDELLERCrucible",
    "extracted_keywords": [
        "Java",
        "Lead",
        "lJavaspan",
        "Lead",
        "Java",
        "Lead",
        "Bank",
        "America",
        "Jersey",
        "CityNJ",
        "Phoenix",
        "AZ",
        "years",
        "IT",
        "experience",
        "Finance",
        "Domain",
        "design",
        "development",
        "testing",
        "documentation",
        "Enterprise",
        "applications",
        "JAVAJ2EE",
        "technologies",
        "extensivelyin",
        "COREJAVA",
        "SCALA",
        "Multithreading",
        "WEBSPHERE",
        "WEBLOGIC",
        "HIBERNATE",
        "SPRINGBOOT",
        "IBMMQ",
        "ANGULARPLAY",
        "JMS",
        "XML",
        "MONGODB",
        "ORACLE",
        "EXADATA",
        "SQL",
        "PLSQL",
        "Elastic",
        "SEARCH",
        "PERLPYTHON",
        "INFORMATICABig",
        "Data",
        "DB2",
        "SYBASE",
        "Java",
        "Developer",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "client",
        "applications",
        "Object",
        "Oriented",
        "Methodologies",
        "javadata",
        "structure",
        "algorithmand",
        "skills",
        "ability",
        "type",
        "problems",
        "volume",
        "latency",
        "systems",
        "use",
        "Java",
        "Collection",
        "API",
        "Concurrent",
        "Reflection",
        "API",
        "Well",
        "forJMS",
        "JMS",
        "Topic",
        "Subscribers",
        "Publishers",
        "MQ",
        "usingWEBLOGIC",
        "WEBSPHEREApplication",
        "Servers",
        "Thorough",
        "understanding",
        "hands",
        "experience",
        "Relational",
        "Databases",
        "Oracle",
        "SybaseDB2",
        "Strong",
        "Database",
        "development",
        "experience",
        "functions",
        "procedures",
        "triggers",
        "views",
        "PLSQL",
        "development",
        "ServiceOriented",
        "Architecture",
        "technologies",
        "SOA",
        "Web",
        "ServicesSOAP",
        "Spring",
        "MVCpattern",
        "applications",
        "DroolsMVEL",
        "rule",
        "engine",
        "business",
        "logic",
        "integration",
        "Java",
        "Experience",
        "application",
        "JUNIT",
        "Strong",
        "build",
        "files",
        "ANT",
        "experience",
        "Hibernate",
        "Spring",
        "JDBC",
        "Persistence",
        "layer",
        "REST",
        "web",
        "service",
        "process",
        "JSON",
        "data",
        "Local",
        "frameworks",
        "EHCACHE",
        "Coherence",
        "WebLogic",
        "cache",
        "migration",
        "API",
        "Stream",
        "API",
        "Lambda",
        "Expressions",
        "Collection",
        "Concurrent",
        "API",
        "Memory",
        "management",
        "ETL",
        "INFORMATICACLOVERETL",
        "HADOOP",
        "HDFS",
        "Hive",
        "Impala",
        "SQOOP",
        "Map",
        "SPARK",
        "KAFKAAVRO",
        "Developed",
        "UI",
        "controls",
        "APIs",
        "Angular",
        "JSPLAY",
        "role",
        "assignments",
        "design",
        "docs",
        "code",
        "reviews",
        "bug",
        "QA",
        "systems",
        "business",
        "analysts",
        "innovation",
        "automation",
        "Ability",
        "priorities",
        "projects",
        "specifications",
        "team",
        "player",
        "abilities",
        "passion",
        "technology",
        "self",
        "starter",
        "capital",
        "market",
        "frontoffice",
        "office",
        "settlement",
        "clearance",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Lead",
        "Bank",
        "America",
        "Jersey",
        "CityNJ",
        "September",
        "Present",
        "Product",
        "Master",
        "Environment",
        "data",
        "center",
        "sort",
        "information",
        "instrument",
        "instrument",
        "instrument",
        "characteristics",
        "instrument",
        "bank",
        "body",
        "point",
        "view",
        "copy",
        "data",
        "bank",
        "market",
        "segments",
        "Responsibilities",
        "project",
        "Agile",
        "TDD",
        "Methodology",
        "Multithreading",
        "Concurrent",
        "API",
        "API",
        "programming",
        "liquidity",
        "ratio",
        "asset",
        "market",
        "segments",
        "core",
        "java",
        "collection",
        "memory",
        "management",
        "Developed",
        "Rest",
        "web",
        "service",
        "JSON",
        "data",
        "inschema",
        "design",
        "SQL",
        "tuning",
        "feature",
        "python",
        "transformations",
        "mapping",
        "objects",
        "data",
        "code",
        "base",
        "data",
        "RDFNo",
        "SQL",
        "SCALA",
        "data",
        "lineage",
        "SPARQL",
        "query",
        "data",
        "RDF",
        "data",
        "MIFID",
        "II",
        "OTC",
        "Fixed",
        "Incomeand",
        "products",
        "UI",
        "Play",
        "framework",
        "SCALA",
        "AKKA",
        "framework",
        "actor",
        "model",
        "module",
        "innovation",
        "automation",
        "store",
        "writing",
        "architecture",
        "deployment",
        "code",
        "review",
        "production",
        "issue",
        "time",
        "message",
        "tuning",
        "part",
        "MQ",
        "Communicated",
        "BAs",
        "stake",
        "holders",
        "business",
        "defect",
        "deliverables",
        "vision",
        "Environment",
        "Eclipse",
        "SCALASPRINGWEBSPHERE",
        "REST",
        "API",
        "ANGULARXML",
        "XSD",
        "INFORMATICACOLVER",
        "ETL",
        "UNIXLog4j",
        "PuttyHADOOPSPARK",
        "Hibernate",
        "Oracle",
        "EXADATA",
        "SQL",
        "Db2",
        "Jenkins",
        "PerlPython",
        "TIBCO",
        "MQ",
        "AUTOSYS",
        "Java",
        "Lead",
        "Amadeus",
        "New",
        "York",
        "NY",
        "August",
        "September",
        "ProjectReservation",
        "system",
        "product",
        "inventory",
        "reservation",
        "payment",
        "processing",
        "Responsibilities",
        "project",
        "Agile",
        "TDD",
        "Methodology",
        "API",
        "API",
        "programming",
        "Developed",
        "micro",
        "service",
        "volume",
        "data",
        "schema",
        "design",
        "SQL",
        "projects",
        "DB",
        "feature",
        "python",
        "design",
        "end",
        "end",
        "communication",
        "design",
        "volume",
        "latency",
        "systems",
        "heap",
        "thread",
        "dump",
        "GC",
        "analysis",
        "store",
        "writing",
        "architecture",
        "code",
        "review",
        "Communicated",
        "BAs",
        "product",
        "owner",
        "business",
        "defect",
        "deliverables",
        "vision",
        "Environment",
        "Eclipse",
        "JAVA18",
        "SPRINGBOOT",
        "MICROSERVICE",
        "DOCKER",
        "Swagger",
        "Putty",
        "Angular5",
        "coherence",
        "cache",
        "Goldengate",
        "Oracle",
        "EXADATA",
        "MONGO",
        "DB",
        "Jenkins",
        "Splunk",
        "GIT",
        "Maven",
        "ElasticsearchSPARK",
        "ShellPythonMQ",
        "Java",
        "Lead",
        "GAP",
        "Inc",
        "San",
        "Francisco",
        "CA",
        "July",
        "August",
        "ProjectCAP",
        "Commission",
        "Allocation",
        "Program",
        "application",
        "application",
        "clients",
        "use",
        "Business",
        "application",
        "CS",
        "broker",
        "client",
        "trading",
        "business",
        "volume",
        "trading",
        "clients",
        "broker",
        "commission",
        "CS",
        "A",
        "deal",
        "CS",
        "client",
        "amount",
        "commission",
        "CS",
        "execution",
        "trade",
        "client",
        "commission",
        "parts",
        "CS",
        "Portion",
        "client",
        "portion",
        "RX",
        "Research",
        "commission",
        "CS",
        "benefit",
        "client",
        "portion",
        "commission",
        "client",
        "commission",
        "client",
        "form",
        "money",
        "CS",
        "invoices",
        "services",
        "client",
        "vendors",
        "vendors",
        "CS",
        "client",
        "Client",
        "invoices",
        "CS",
        "users",
        "invoices",
        "application",
        "invoices",
        "clients",
        "website",
        "internet",
        "application",
        "Clients",
        "invoices",
        "feedback",
        "invoices",
        "invoices",
        "feedback",
        "client",
        "CAPS",
        "users",
        "request",
        "PeopleSoft",
        "account",
        "department",
        "Responsibilities",
        "project",
        "Agile",
        "Methodology",
        "application",
        "Spring",
        "Framework",
        "IOCDependency",
        "injection",
        "design",
        "pattern",
        "XML",
        "Web",
        "ServicesSOA",
        "SOAP",
        "SAX",
        "DOM",
        "XML",
        "parsers",
        "Multithreading",
        "Concurrent",
        "API",
        "file",
        "shell",
        "Python",
        "script",
        "ETL",
        "Transformationsand",
        "PLSQL",
        "Control",
        "M",
        "JOB",
        "Developed",
        "REST",
        "web",
        "service",
        "Jersey",
        "JSON",
        "data",
        "UI",
        "controls",
        "APIs",
        "JS",
        "Developed",
        "Perlpython",
        "script",
        "batch",
        "processing",
        "Importing",
        "data",
        "HDFS",
        "Hive",
        "Sqoop",
        "files",
        "Oracle",
        "Database",
        "Sqoop",
        "HDFS",
        "Written",
        "Hive",
        "UDFS",
        "data",
        "tables",
        "innovation",
        "automation",
        "maintenance",
        "cost",
        "support",
        "hours",
        "weekends",
        "Worked",
        "migration",
        "interface",
        "Stream",
        "API",
        "Lambda",
        "Expressions",
        "Collection",
        "Concurrent",
        "APImemory",
        "management",
        "integration",
        "testing",
        "system",
        "testing",
        "application",
        "functionality",
        "EnvironmentEclipse",
        "JDK",
        "JDK",
        "JMS",
        "SpringAngularWEB",
        "LOGICJersey",
        "XML",
        "XSD",
        "ANT",
        "Log4j",
        "Putty",
        "Oracle",
        "SYBASEPerlPython",
        "HADOOP",
        "Jenkins",
        "Visio",
        "UML",
        "Eclipse",
        "Soap",
        "UI",
        "Globalization",
        "ISS",
        "settlement",
        "nonUS",
        "equity",
        "transactions",
        "Credit",
        "Suisse",
        "equity",
        "trades",
        "NTPA",
        "Vision",
        "systems",
        "day",
        "staff",
        "International",
        "Operations",
        "Group",
        "actions",
        "part",
        "settlement",
        "process",
        "trades",
        "trades",
        "trades",
        "trades",
        "Managers",
        "Trade",
        "Support",
        "Clear",
        "ISS",
        "MERVA",
        "CAMS",
        "queuesISS",
        "SWIFT",
        "messages",
        "automaticallyMERVA",
        "SWIFT",
        "messages",
        "systems",
        "Responsibilities",
        "project",
        "TDD",
        "Methodology",
        "SPRING",
        "Java",
        "components",
        "ORM",
        "connectivity",
        "transaction",
        "management",
        "Designing",
        "Architectingdeveloping",
        "Restful",
        "Web",
        "Services",
        "emember",
        "functionalities",
        "Hibernate",
        "data",
        "persistency",
        "response",
        "system",
        "CRON",
        "trigger",
        "Quartz",
        "Scheduler",
        "API",
        "Drools",
        "rule",
        "engine",
        "business",
        "logic",
        "integration",
        "Java",
        "action",
        "EASYMOCK",
        "framework",
        "UI",
        "controls",
        "APIs",
        "JS",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "code",
        "practices",
        "code",
        "JUNIT",
        "testing",
        "suite",
        "testing",
        "Peer",
        "Reviews",
        "code",
        "Environment",
        "Java",
        "JSP",
        "Angular",
        "JS",
        "JMS",
        "Spring",
        "Hibernate",
        "Oracle",
        "g",
        "DB2",
        "Sybase",
        "PerlPython",
        "BEA",
        "Web",
        "logicAJAX",
        "XML",
        "EASYMOCK",
        "XSD",
        "Maven",
        "Log4j",
        "SVN",
        "Putty",
        "Project",
        "Allocation",
        "Transaction",
        "Processing",
        "ATP",
        "Prime",
        "Brokerage",
        "Prime",
        "Brokerage",
        "processes",
        "customers",
        "formats",
        "CSV",
        "files",
        "documents",
        "documents",
        "feeds",
        "protocols",
        "FTP",
        "PGP",
        "Email",
        "attachments",
        "feed",
        "file",
        "format",
        "transformations",
        "custom",
        "code",
        "file",
        "format",
        "set",
        "transformation",
        "rules",
        "data",
        "data",
        "processes",
        "client",
        "data",
        "interface",
        "CS",
        "CSRs",
        "transparency",
        "users",
        "Scope",
        "File",
        "Mover",
        "client",
        "allocation",
        "reconciliation",
        "information",
        "delivery",
        "channels",
        "FTP",
        "Email",
        "attachments",
        "files",
        "INFORMATICA",
        "DX",
        "location",
        "processing",
        "file",
        "DX",
        "location",
        "file",
        "rules",
        "decryption",
        "file",
        "name",
        "file",
        "size",
        "check",
        "rules",
        "client",
        "profile",
        "INFORMATICA",
        "files",
        "data",
        "validation",
        "deduplication",
        "transformation",
        "workflows",
        "activities",
        "record",
        "status",
        "data",
        "destination",
        "systems",
        "GUI",
        "screens",
        "Allocation",
        "Clearing",
        "Exception",
        "data",
        "user",
        "Responsibilities",
        "design",
        "implementation",
        "architecture",
        "project",
        "OOAD",
        "UML",
        "Design",
        "Patterns",
        "code",
        "Test",
        "Development",
        "Interpreting",
        "requirements",
        "application",
        "needs",
        "users",
        "user",
        "interfaces",
        "UI",
        "Components",
        "interceptors",
        "Multithreading",
        "file",
        "Struts",
        "interceptors",
        "request",
        "response",
        "Ajax",
        "interfaces",
        "web",
        "pages",
        "PLSQL",
        "code",
        "validation",
        "processing",
        "code",
        "practices",
        "code",
        "Setup",
        "Development",
        "Environment",
        "Source",
        "Control",
        "action",
        "Easy",
        "framework",
        "JUNIT",
        "testing",
        "suite",
        "testing",
        "Peer",
        "Reviews",
        "code",
        "Environment",
        "JavaJSPOracle",
        "10gInformaticaBEA",
        "Web",
        "logic",
        "JavaScriptAJAXXMLANT",
        "PuttyRapid",
        "SQLUML",
        "Eclipse",
        "Sr",
        "Java",
        "Developer",
        "Apex",
        "Systems",
        "Inc",
        "June",
        "July",
        "Project",
        "Intellect",
        "Flow",
        "Description",
        "Workflow",
        "processing",
        "BPM",
        "process",
        "product",
        "Maintenance",
        "Process",
        "flexibility",
        "workflow",
        "legacy",
        "business",
        "requirements",
        "users",
        "activities",
        "turn",
        "business",
        "turnover",
        "time",
        "imaging",
        "solution",
        "users",
        "Document",
        "Management",
        "System",
        "Indexer",
        "User",
        "screen",
        "maintenance",
        "Transaction",
        "work",
        "item",
        "details",
        "Imaging",
        "Imaging",
        "transactions",
        "data",
        "documents",
        "sources",
        "Scanner",
        "Fax",
        "Email",
        "location",
        "server",
        "IMGTFT",
        "format",
        "images",
        "transactions",
        "bank",
        "user",
        "transactions",
        "imagesWe",
        "print",
        "zooming",
        "magnify",
        "images",
        "user",
        "choice",
        "operation",
        "RMI",
        "socket",
        "connection",
        "ISS",
        "SWIFT",
        "messages",
        "document",
        "design",
        "Business",
        "flow",
        "lowlevel",
        "code",
        "design",
        "review",
        "process",
        "web",
        "navigation",
        "control",
        "flow",
        "error",
        "handling",
        "Multithreading",
        "Developed",
        "web",
        "interface",
        "JSPtag",
        "libraries",
        "JavaScript",
        "validations",
        "frameworkand",
        "IBM",
        "MQ",
        "build",
        "activity",
        "environment",
        "WEBSPHERE",
        "integration",
        "testing",
        "system",
        "testing",
        "application",
        "functionality",
        "feature",
        "application",
        "enhancement",
        "iteration",
        "workflow",
        "product",
        "SQL",
        "queries",
        "database",
        "design",
        "Ant",
        "build",
        "script",
        "application",
        "UNIX",
        "Server",
        "UNIX",
        "commands",
        "manipulation",
        "directories",
        "files",
        "Environment",
        "WindowsUnix",
        "Java",
        "JavaScript",
        "SERVLET",
        "EJB",
        "JMS",
        "Web",
        "Service",
        "Oracle",
        "Weblogic",
        "WebSphere",
        "MQ",
        "SeriesJSP",
        "JSTL",
        "Custom",
        "JDBC",
        "JMS",
        "Ant",
        "JUNIT",
        "Java",
        "Developer",
        "Apple",
        "Sunnyvale",
        "CA",
        "Sunnyvale",
        "CA",
        "April",
        "May",
        "Project",
        "KPAYTRACK",
        "DescriptionThe",
        "track",
        "KLI",
        "statuses",
        "payment",
        "service",
        "requests",
        "Salient",
        "features",
        "Update",
        "Payment",
        "Status",
        "Description",
        "module",
        "users",
        "KPAYTRACK",
        "payment",
        "status",
        "remittance",
        "type",
        "Cash",
        "payments",
        "default",
        "display",
        "layout",
        "search",
        "page",
        "records",
        "user",
        "hierarchy",
        "user",
        "Account",
        "Level",
        "1Account",
        "Level",
        "Update",
        "Exception",
        "Description",
        "module",
        "users",
        "KPAYTRACK",
        "exceptions",
        "TertiarySecondaryPrimary",
        "user",
        "excel",
        "Upload",
        "Payment",
        "Status",
        "Exception",
        "Description",
        "module",
        "users",
        "KPAYTRACK",
        "exception",
        "Primary",
        "Secondary",
        "Tertiary",
        "user",
        "Responsibilities",
        "Analysis",
        "Design",
        "module",
        "Wrote",
        "components",
        "JSPs",
        "SERVLETS",
        "PROTLETS",
        "Java",
        "beans",
        "development",
        "java",
        "classes",
        "Strings",
        "Collections",
        "Lists",
        "Interfaces",
        "WEBSPEHRE",
        "console",
        "web",
        "sphere",
        "server",
        "J2EE",
        "components",
        "Enterprise",
        "Archive",
        "production",
        "support",
        "Configured",
        "Hibernate",
        "ORM",
        "methodologies",
        "SQL",
        "HQL",
        "hibernate",
        "mapping",
        "hibernate",
        "configuration",
        "files",
        "EnvironmentIBM",
        "Rational",
        "Application",
        "Developer",
        "XPOracle9i",
        "database",
        "web",
        "sphereIBM",
        "web",
        "server",
        "IBM",
        "Tivoli",
        "Directory",
        "Server",
        "V",
        "Java",
        "PORTLET",
        "JSPJavaScript",
        "EJB",
        "Hibernate",
        "PLSQL",
        "Log4jANTToad",
        "Education",
        "Bachelors",
        "Skills",
        "HIBERNATE",
        "SPRING",
        "JAX",
        "Additional",
        "Information",
        "SKILL",
        "SET",
        "Languages",
        "Java",
        "SCALAJavaScript",
        "Type",
        "script",
        "CSS",
        "PLSQL",
        "PerlPython",
        "Web",
        "Technologies",
        "JAVASERVELT",
        "JDBC",
        "CSSJavaScriptJSP",
        "JNDIJQUERY",
        "JMS",
        "Spring",
        "Web",
        "FlowWebservice",
        "AXIS2JAXRPCJAXWS",
        "Java",
        "Mail",
        "JSON",
        "ANGULAR",
        "Application",
        "Servers",
        "IBM",
        "Websphere",
        "Application",
        "Server",
        "WebLogic",
        "Web",
        "sphere",
        "server",
        "Web",
        "Server",
        "Apache",
        "Tomcat",
        "Frameworks",
        "APIs",
        "Spring",
        "framework",
        "Struts",
        "Log4j",
        "Ant",
        "WEB",
        "SERVICES",
        "SOAP",
        "WSDL",
        "UDDI",
        "Restful",
        "webservices",
        "Development",
        "Tools",
        "IDE",
        "EclipseRAD",
        "XML",
        "XSL",
        "DOM",
        "XML",
        "Schema",
        "JAXBSAX",
        "XSLT",
        "Designing",
        "DTDs",
        "Development",
        "Build",
        "Tools",
        "ANTMaven",
        "SBT",
        "Database",
        "IBM",
        "DB2Oracle",
        "Sybase",
        "EXADATAMONGO",
        "DB",
        "Operating",
        "Systems",
        "Microsoft",
        "Windows",
        "UNIX",
        "Version",
        "tools",
        "SVN",
        "GIT",
        "ETL",
        "INFORMATICACOLVER",
        "ETL",
        "ORM",
        "Hibernate",
        "Big",
        "Data",
        "HADOOP",
        "HDFS",
        "RDFSPARK",
        "KAFKAYARNAVRO",
        "Database",
        "query",
        "TOADOracle",
        "SQL",
        "Developer",
        "SQLDBX",
        "Development",
        "Methodologies",
        "Agile",
        "Methodologies",
        "TDD",
        "Project",
        "ManagementSupport",
        "Visio",
        "JIRA",
        "WIKIJENKINS",
        "SUPERPUTTYFEDELLERCrucible"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:16:14.858266",
    "resume_data": "Java Lead span lJavaspan Lead Java Lead Bank of America Jersey CityNJ Phoenix AZ Over 9 years of IT experience Finance Domain in design development testing and documentation of Enterprise applications using JAVAJ2EE technologies Worked extensivelyin COREJAVA SCALA Multithreading WEBSPHERE WEBLOGIC DOCKER HIBERNATE SPRINGBOOT IBMMQ ANGULARPLAY JMS MICROSERVICE XML MONGODB ORACLE EXADATA SQL PLSQL Elastic SEARCH PERLPYTHON INFORMATICABig Data DB2 and SYBASE Java Developer with experience in Design Development and Implementation of multitier client webbased applications using Object Oriented Methodologies Highly experienced in core javadata structure algorithmand problemsolving skills Proven ability to solve any type of complex problems independently Experienced to produce of high volume low latency systems Highly experiencedin Multithreading Extensive use of the Java Collection API Concurrent Reflection API Well experienced forJMS in creating JMS Topic Subscribers and Publishers and MQ Experienced in usingWEBLOGIC DOCKERand WEBSPHEREApplication Servers Thorough understanding and hands on experience on Relational Databases like Oracle SybaseDB2 and EXADATA Strong Database development experience in writing functions procedures triggers and views in PLSQL Well experienced inservice development using ServiceOriented Architecture technologies SOA like Web ServicesSOAP Spring MVCpattern has been implemented successfully in three applications Used DroolsMVEL as rule engine for business logic integration in Java Experience in testing the application with JUNIT Strong in writing build files with ANT Good experience with Hibernate and Spring JDBC in Persistence layer Developed and deployed REST web service by SPRINGto process JSON data Experienced in Local and distributed caching frameworks EHCACHE and Coherence WebLogic cache Worked on migration from java 16 to 18function API Stream API Lambda Expressions Collection and Concurrent API Memory management Experienced in ETL INFORMATICACLOVERETL HADOOP HDFS Hive Impala SQOOP and Map reduce SPARK KAFKAAVRO Developed and implemented UI controls and APIs with Angular JSPLAY Key role in several assignments reviewing design docs code reviews bug fixing designing QA systems and working with business analysts and shared innovation and automation Ability to quickly adjust priorities and take on projects with limited specifications Effective team player with excellent logical and analytical abilities and passion for technology and self starter Experienced in capital market frontoffice back office settlement and clearance Authorized to work in the US for any employer Work Experience Java Lead Bank of America Jersey CityNJ September 2018 to Present ProjectPME Product Master Environment Its a global authorized data center for any sort of information about a financial instrument which is required to trade or hold an instrument and properly identifies an instrument identifies characteristics of an instrument It is being used across the bank and other outside financial body for regulatory point of view Holds golden copy of data for bank for all market segments Responsibilities Developed the project using Agile and TDD Methodology Implemented Multithreading and Concurrent API for processing Developed java API and functional programming to calculate liquidity ratio of an asset for different market segments using core java collection memory management and OOPS Developed and deployed Rest web service to process JSON data Involved inschema design and SQL queries and messaging tuning to increase the through put Enhanced new feature using python Developed various transformations and mapping Involved to implementdata objects for bitemporal data Involved parsing different code base and published data set into RDFNo SQL using SCALA for data lineage Involved writing SPARQL query to fetch data from RDF Processed regulatory data for MIFID II for OTC Fixed Incomeand derivative products Involved to design UI by Play framework using SCALA and AKKA framework for actor model Delivered one module in and out with innovation and automation Participated in store writing architecture deployment and code review and mentoring junior Involved solving production issue with no time and message tuning as part of MQ messaging Communicated with multiple BAs and stake holders to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA SCALASPRINGWEBSPHERE REST API ANGULARXML XSD INFORMATICACOLVER ETL UNIXLog4j PuttyHADOOPSPARK Hibernate Oracle EXADATA No SQL Db2 Jenkins PerlPython TIBCO MQ AUTOSYS Java Lead Amadeus New York NY August 2016 to September 2018 ProjectReservation system Its a global product which is helping to manage inventory reservation and payment processing Responsibilities Developed the project using Agile and TDD Methodology Implemented Concurrent API for processing Developed java API and functional programming Developed and deployed micro service to process highly volume of JSON data Involved in schema design and SQL queries for new projects along with distributed DB Enhanced new feature using python Involved in design front end and back end communication Provided design to produce of high volume low latency systems Involved in participating in heap thread dump and GC log analysis Participated in store writing architecture code review and mentoring junior Communicated with BAs and product owner to understand the business for zero defect deliverables with minimum super vision Environment Eclipse JAVA18 SPRINGBOOT MICROSERVICE DOCKER Swagger XMLXSDUNIXLog4j Putty Angular5 coherence cache Goldengate Oracle EXADATA MONGO DB Jenkins Splunk GIT Maven ElasticsearchSPARK ShellPythonMQ Java Lead GAP Inc San Francisco CA July 2014 to August 2016 ProjectCAP Commission Allocation Program It is a very critical webbased application as this application is visible to external clients along with internal use Business around this application CS acts as a broker for institutional client in trading business There is huge volume trading involved when we are dealing with institutional clients Hence acting as broker provides huge commission to CS A deal is finalized between CS and the client on the amount of commission to be owned by CS for execution of each trade done by the client This commission is split into two parts CS Portion and the client portion RX Research exchangeNet commission CS gives this benefit to the client of giving back some portion of this commission back to the client This commission is not given back to the client in form of money but instead CS pays invoices of services used by client from other vendors or vendors provided by CS to the client Client sends the invoices to CS and CAPS users upload these invoices using the application The invoices are then accessed by the clients using the CAPS external website internet application Clients will be able to see those invoices and accordingly provide a feedback of either paying the invoices pay it partially or reject the invoices Based on the feedback provided by the client CAPS users generate a transmittal request and sends to the PeopleSoft account department for clearing Responsibilities Developed the project using Agile Methodology Implemented the application using Spring Framework which is based on IOCDependency injection design pattern Involved in consuming XML Web ServicesSOA using SOAP SAX and DOM XML parsers Implemented Multithreading and Concurrent API for processing the file and statements Developed shell Python script ETL Transformationsand PLSQL for Control M JOB Developed and deployed REST web service by Jersey to process JSON data Developed and implemented UI controls and APIs with Angular JS Developed Perlpython script for batch processing Importing and exporting data in HDFS and Hive using Sqoop Extracted files from Oracle Database through Sqoop and placed in HDFS and processed Written Hive UDFS to extract data from staging tables Provided innovation and automation to save maintenance cost Provides support in extended hours and weekends whenever needed Worked on migration from java 16 to 18functional interface Stream API Lambda Expressions Collection and Concurrent APImemory management Worked on integration testing and system testing to test the application functionality EnvironmentEclipse JDK 16 JDK 18 JMS SpringAngularWEB LOGICJersey XML XSD ANT Log4j Putty Oracle SYBASEPerlPython Db2 HADOOP Jenkins Visio UML Eclipse Soap UI ProjectIMANSMAN Globalization ISS supports the settlement of nonUS equity transactions that are done at Credit Suisse The equity trades are booked in the NTPA and Vision upstream systems Every day staff in the International Operations Group must perform the following actions as part of the settlement process Capture and analyze open trades Open trades are trades which have not yet settledEscalate any unknown trades to Managers and Trade Support Clear the ISS MERVA and CAMS queuesISS is used to format SWIFT messages automaticallyMERVA is used to send and track SWIFT messages sent through to other financial systems Responsibilities Developed the project using TDD Methodology Used SPRING to decouple Java components ORM connectivity and transaction management Designing Architectingdeveloping Restful Web Services for all the emember functionalities Used Hibernate for data persistency Developed response triggering system using CRON trigger of Quartz Scheduler API Used Drools as rule engine for business logic integration in Java Tested all the struts2 action using EASYMOCK framework Developed and implemented UI controls and APIs with Angular JS Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Reviewing the code to make sure it follows the best practices and the code Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment Java JSP Angular JS JMS Spring Hibernate Oracle 10g DB2 Sybase PerlPython BEA Web logicAJAX XML EASYMOCK XSD Maven Log4j SVN Putty Project Allocation Transaction Processing ATP Prime Brokerage Prime Brokerage processes feeds from customers in different formats such as CSV files excel documents xml documents etc These feeds are received in different protocols such as FTP and PGP encrypted Email attachments For each new feed IT is required to analyze the file format and build transformations using custom code to recognize the file format apply a set of common transformation rules and load the data to an operational data storeThis includes new processes for retrieving parsing normalizing and storing client data as well as an interface for CS CSRs to provide greater transparency for internal users Scope Includes File Mover The client can send the allocation and reconciliation information files through various delivery channels like FTP Email attachments move those files to INFORMATICA DX location for further processing Before moving file to DX location file goes through various rules like decryption file name renaming file size check etc All these rules configured against client profile INFORMATICA fetch those files and performs data validation deduplication and transformation through various workflows Once these activities are completed as per record status data will be routed to mentioned destination systems GUI screens are developed to show Allocation Clearing and Exception related data to end user Responsibilities Involved in the design and implementation of the architecture for the project using OOAD UML Design Patterns Developed the code using Test driven Development Interpreting complicated requirements and implementing them in a userfriendly application that meets the needs of the users Used Struts2 in developing user interfaces using UI Components and interceptors Implemented Multithreading for processing the file Implemented Struts 2 interceptors which are responsible for most of the request and response processing Used Ajax for interactive and dynamic interfaces on web pages Developed PLSQL code for backend validation and processing Reviewing the code to make sure it follows the best practices and the code Setup of Development Environment and Source Control Tested all the struts2 action using Easy Mock framework Extensively used the JUNIT testing suite for testing and Log4J for logging Involved in Peer Reviews of the code Environment JavaJSPStruts2Oracle 10gInformaticaBEA Web logic 103 JavaScriptAJAXXMLANT PuttyRapid SQLUML Eclipse Sr Java Developer Apex Systems Inc June 2012 to July 2014 Project Intellect Flow Description Workflow driven processing is mainly used to draw the BPM process of a product and for Maintenance Process It provides flexibility to define the entire workflow as per the existing legacy business requirements and allowing the users to automate several intermediate activities which in turn effectively reducing the total business turnover time Combined with the imaging solution it provides the users with a powerful Document Management System Indexer Helpful for create User defined screen for the maintenance of Transaction and to view the work item details Imaging Imaging mainly used for maintaining the transactions data of different productsGenerally the documents are coming through different sources like Scanner Fax and Email from different location into a main server in the imaging IMGTFT format After that we are uploading the images by linking to the corresponding transactions that bank user can easily process the transactions by editing the imagesWe can also crop print zooming magnify and reject the images according to user choice To perform the operation it uses RMI socket connection ISS is used to format SWIFT messages automatically Responsibilities Responsible for Technical document design depends on the Business flow Responsible for conducting the technical lowlevel code and design review process and web navigation control flow and error handling Implemented Multithreading for clearing the instrument Developed web interface using JSPtag libraries and JavaScript for clientside validations Designed and developed messaging frameworkand integratingwith IBM MQ Handling the build activity for the environment WEBLOGICand WEBSPHERE Worked on integration testing and system testing to test the application functionality Developed new feature and application enhancement for the current iteration Implemented workflow with other different product Involved in SQL queries tuning database design Used the Ant build script to build and deploy the application in UNIX Server Used various UNIX commands for manipulation of directories and files Environment WindowsUnix Java JavaScript SERVLET EJB JMS Web Service Oracle Weblogic WebSphere MQ SeriesJSP JSTL Custom tags JDBC JMS Ant JUNIT Java Developer Apple Sunnyvale CA Sunnyvale CA April 2010 to May 2010 Project KPAYTRACK DescriptionThe KPay track has developed to enable KLI to track and update statuses of payment and other service requests Salient features are listed below Update Payment Status Description This module was designed and developed to enable users of KPAYTRACK to update the payment status for a given remittance type All Cash payments are by default considered has cleared The display layout of the search page and the records that the user can update is Based on the hierarchy of the user Account Level 1Account Level Update Exception Description This module was designed and developed to enable users of KPAYTRACK to update exceptions TertiarySecondaryPrimary that are generated when the user uploads an excel in Upload Payment Status moduleView All Exception Description This module was designed and developed to enable users of KPAYTRACK to view all the exception Primary Secondary and Tertiary which may remain unhandled by the user Responsibilities Analysis and Design of the module Wrote tested components like JSPs SERVLETS PROTLETS Java beans Involved in development java classes using Strings Collections Lists and Interfaces Used WEBSPEHRE 51 console and web sphere portal server to deploy J2EE components Enterprise Archive involved in production support Configured Hibernate ORM methodologies and writing SQL and HQL queries Developed hibernate mapping and hibernate configuration files EnvironmentIBM Rational Application Developer RADWindows XPOracle9i database web sphereIBM web sphere portal server IBM Tivoli Directory Server V 52 Java PORTLET JSPJavaScript EJB Hibernate PLSQL Log4jANTToad Education Bachelors Skills ECLIPSE JAVA HIBERNATE SPRING JAX Additional Information SKILL SET Languages Java SCALAJavaScript Type script CSS PLSQL PerlPython Web Technologies JAVASERVELT 23 JDBC 20 CSSJavaScriptJSP JNDIJQUERY Struts20 JMS Spring Web FlowWebservice using AXIS2JAXRPCJAXWS Java Mail JSON ANGULAR Application Servers IBM Websphere Application Server WebLogic and Web sphere portal server Web Server Apache Tomcat Frameworks APIs Spring framework Struts 111220TilesJUNIT41 Log4j Ant WEB SERVICES SOAP WSDL UDDI Restful webservices Development Tools IDE EclipseRAD XML XSL DOM XML Schema JAXBSAX XSLT and Designing DTDs Development Build Tools ANTMaven SBT Database IBM DB2Oracle Sybase and EXADATAMONGO DB Operating Systems Microsoft Windows 982000NTXP UNIX Version controlling tools SVN GIT ETL INFORMATICACOLVER ETL ORM Hibernate Big Data HADOOP HDFS RDFSPARK KAFKAYARNAVRO Database query tools TOADOracle SQL Developer SQLDBX Development Methodologies Agile Methodologies and TDD Project ManagementSupport tools Visio JIRA WIKIJENKINS SUPERPUTTYFEDELLERCrucible",
    "unique_id": "27529fc5-6d38-4be2-ac6e-e174e79f53ff"
}