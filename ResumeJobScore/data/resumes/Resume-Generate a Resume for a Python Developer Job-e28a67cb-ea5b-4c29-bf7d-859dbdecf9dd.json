{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer CapitalOne Working as a Java Consultant with over 7 years of experience in capturing Business Process Requirements Design Development Testing and Implementation for various client server based applications using Java and J2EE technologies Expertise in UI Design and Development using HTML5 CSS3 SASS LESS Bootstrap and AJAX that follows W3C Web standards and successfully managing all facts of application development Extensively used JavaScriptTypescript Ajax and JSON to build highly interactive web pages Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Expertise in building strong websites confirming standards using Dojo JQueryto develop valid code and tablefree sites Developed numbers of TypescriptsES6 objects including Components ng Modules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced inVarious Angular46 Backbone JS Knockout JS and Ext JS for rapid frontend app development and to achieve MVVMMVC design flow Proficient in creating custom pipes in multiple components to modify interpolated values in templates in developing Angular4 application along with declarative templates dependency injection observables and end to end testing Included validation in template driven forms in developing dynamic web application using Angular 4 with directives to match attributes with validator functions using HTML validation Proficient in usingHapi JS that enabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Developed various Single Page ApplicationsSPA using REACT JS Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and redux to root the URLs properly Worked with Expressjs for development of RESTful web services and middleware configurations Developed serverside application using Nodejs using Expressjs as a framework Used hapijs for building REST API s for routing caching and input and output validations and served to build single page application Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience withRelational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like Couch DB and Cassandra Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed a micro service using Spring Boot which included Aspect Oriented Programming and deployed the application in distributed systems using Spring Cloud Implemented Spring Boot to create a CRUD operations backend for our Angularfronted application Built a Spring Boot architectureon Spring Cloud by creating Configuration service using twelve factor app methodology to handle the configurations for all the services through a simple point call Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Designed and developed RESTFUL Web Services using Spring Boot and Jersey framework Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed projects with RESTful services JAXRS Spring Boot SOAP JAXWS Apache CXF WSDL Apache Axis2 and automated the documentation using Swagger and WADL Used Gradle as a build tool for Spring Boot used for better dependency management and testing the application until deployment Included Apache Kafka in Spring Boot application for integration and Data Processing Pipeline for persistent messaging worked with Apache Kafka with Spring Integration which provides inbound adapters for working with low level and highlevel Apache Kafka API Used JMS messaging using Apache ActiveMQ as Spring Boot application starters which is used for running the consistently and quickly Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Apache Axis2 Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Implemented DevOps practice in Spring boot microservice based platform Have very good understanding and handson working CICD pipelines Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using client side JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Seleniumautomation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch CloudTrial RDS SNS SQS Worked with spring cloud config Ribbon Hystrix and Zul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWTJason Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic SearchLogData and Kibana Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated java based integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Work Experience Java Developer CapitalOne Richmond VA August 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loansbanking and savings accounts I worked withAuthorization team supporting technical initiatives for card users such as virtual credit card numbers backend development for customer preferences platform resiliency and data modeling Responsibilities Involved in the complete Software Development Life Cycle using Agile methodology including design development implementation verification and validation Involved in agile scrum methodology with sprint cycle for every 2 weeks Designed and Implemented SPA single page application using Angular 6 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular 6 Creating generic service which have async capability and detailed description about observables Optimized the performance of application using Angular 6 Lazy Loading and ahead of time compilation To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 6 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Architected and implemented the application modules using Spring boot Spring framework and integrated the application using Microservices architecture Provided authentication and authorization by using Spring Security and OAuth Used Spring AOP terminologies to handle transaction management and address the problem of crosscutting concerns Involved in producing and consuming the RESTful Web Services using Spring Produced SOAP Web Services for communicating with external components Created Hibernate configuration mapping files and defined persistence classes to persist the data into Oracle Database and used Hibernate Query Language HQL toquery the database Used MongoDB to retrieve most recent transactions of the users Deployed the application as a microservice into Docker container and made easily accessible at runtime using AWS services like EC2 Used AWSS3 buckets for online backup and archiving of the data Implemented Java Message Service JMS to exchange information over reliable channel in an asynchronous way by using Kafka as a message queue Followed Test Driven Development TDD methodology for developing test cases using Junit and Mockito Implemented complete Mavenbuild life cycle to achieve organized application structure and conflict free dependencies in pomxml file and deploy on Tomcat Server Generated reports using JasperReports and interactive visualization using tools such as D3js Implemented Continuous Integration and ContinuousDeployment CICD using Jenkins Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs Hands on with Drools written business rules for credit authorizations Used Splunk DataDog for alert monitoring and querying Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Utilized Log4j to debug and record the logs in application Used JIRA tool for Issuebug tracking monitoring of work assignment in the system Developed GIT to track and maintain the different version of the project Environment Java 8 Spring IOC Spring Boot Spring Security Spring AOP Spring Batch Hibernate 4HTML5 CSS3 Ajax Bootstrap 30 Angular 60 JSON OAuth 20 JUnit Mockito Maven Tomcat Kafka JAXRS RESTful SOAP JIRA Micro Services Log4j Mongo DB 35EC2S3IAMDocker Git Jenkins D3js and Spring Tool Suite Java Full Stack Developer Express Scripts Franklin Lakes NJ December 2016 to August 2018 Description The express script a Medicare based company which is setting up the benefits to the individuals depending up on their claims benefits setups there is a client website application used by the accounts team to document client requirements used to install and change the benefits over 60 functional areas Manage status of each client requirement from initial entry point through functional area review and client approval process Responsibilities Developed a Micro Service Oriented applicationwith React JS in the front end and Spring Boot services Involved in development design and implementation front end part of the widget based application using HTML5 CSS3LESS AJAX Bootstrap 40 For clientside view rendering servicesused React JS typically used various predefined Redux libraries Configured ReactRedux for state management and ReactRouter for programmatic navigation Implemented StoreRedux for holding the whole state tree of application and ReducerRedux for describing actions Used AJAX request to data from backend based on user interface input and post updated data back to backend Mocha test runner and Chai test framework are used to test React JS components Web pack module bundler and Babel java script compiler are used accompanying React JS Implemented Spring Boot to create a CRUDoperations backend for our Reactfronted application Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Implemented modules into Node JS to coordinate with plans and necessities Implemented JSON web tokens for authentication and authorization security configurations using Nodejs Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Integrated Nodejs with Expressjs and communicated with databasefor CRUD operations on the data repository Developed the web application based on the NodeJS micro services architecture using Express and MongoDB Extensive experience in designing MongoDB multishared cluster and monitoring with MMS Junit is implemented along withMokitoto perform unit testing on our RESTful web application Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Published message services using Spring AMQPs Rabbit Template and subscribes to the messages on a POJO using Message Listener Adapter Created dynamic schema design through NOSQLMongo DB by writing rich queriesand achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Developing internal Web Application in GroovyGrails with Mongo DB as a data store Using the IntelliJ Idea 1504 IDE with the latest Grails 311 SDK Java 8 Splunk is implemented in the application for log errors exceptions business logic and log analytics Engineered Splunk to build configure and maintain heterogeneous environments and indepth knowledge of log analysis generated by various systems including security products and worked on setup of various dashboards reports and alerts in Splunk Gradle build tool is used to deploy the application on the web servers ie JBoss Integration of automation batch run job with Jenkins Worked with Jenkins Continuous Integration and Continuous DeploymentCICD Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Developed Kafka consumers to consume data from Kafka topics and integrated Kafka source to read the payment confirmation messages Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Implemented Spring CloudNetflixOSSStack along with using Ribbon for clientside load balancing NetflixZuulApi Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Deployed the Dockerized Spring Boot application that is intended to be run on dev local machine using PCF Pivotal Cloud Foundry Behavioral and Integration testing is done using Cucumber and Selenium respectively EnvironmentJavaScript React JSRedux HTML5 CSS3LESS AJAX Bootstrap jquery Spring Security Rabbit MQ Spring Data Spring Batch Quartz Scheduler Hibernate Spring Boot Microservices Restful services Netflix OSS Eclipse Java EE IDE Jenkins Spring CloudNetflix Splunk Mongo DB MySQL Docker Apache tomcat Jenkins Netflix ZuulApi Ribbon Eureka Hystrix JUnit Mokito Mocha Chai Selenium Cucumber Cassandra DB Cassandra Node Connector Gradle JBoss JIRA JWT WADL Web pack Babel Java Full Stack Developer C2N IT Services 2016 to December 2016 Description C2N offers a range of IT services including infrastructure support software development integration support web development web hosting quality assurance testing cyber security certification accreditation CA services as well as program project management services Built a Java application for a recruitment startup This application was be used by workers and hiring companies As part of the marketing strategy we used referral codes to reward our customers for referring Responsibilities Worked with all phases of SDLC as a scrum member following agile methodology and Test Driven Development TDD Created the frontend web pages using HTML5 CSS 3using SASS Twitter Bootstrap CSS framework media queries and JavaScript to develop the UI for our login and customer enrolment portals Created Dynamic Responsive Designs using HTML5CSS3 using SASS Bootstrap Followed the strict patterns of implementing modelviewcontroller MVC architecture using Angular 2 Framework Design and implementation of accessibility features and collaborating with customer up to date Experience with the features of Angular 2 such as directives modules and routing Used Angular 2 as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed the server side application on Angular 2 platform using JavaScript programming Developed custom Directives in Angular 2 to make reusable components custom views using Bootstrap components and involved in configuring routing for various modules in the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used Hapi JS which is configured on top of Node JS to attain better performance to use built in authentication and authorization techniques Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Developed data tables using AGGridand implemented Sorting Filtering and Pagination functionalities Tested the frontend application using Jasmine and Karma testing frameworks Implemented microservices based architecture using Spring Boot interacting through REST API Worked with ORM frameworks such as Spring Data Worked on various features in ECMAScript 6 ES6 such as Arrow functions Classes and enhanced object literals Used React Router to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Implemented modules into Node JS to coordinate with plans and necessities Authenticated Users accessing RESTful services using Oauth 20 and OIDC Worked with Web pack build tool and automated the process of building using Jenkins for React based frontend application Worked with Spring Cloud and Netflix OSSEureka for service registration and discovery Used spring boot Actuator to externalize applications configuration properties for different environments Proficient in deploying and configuring Elastic search Log Stash KibanaELK and AWS Kinesis for log analytics Worked with AWS IAM service to create various groups and attached appropriate policy documents to the users within that group Designed built and deployed a multitude application utilizing almost all the AWS stack Including EC2 Docker focusing on highavailability fault tolerance and autoscaling Implemented Spring Boot to createCRUDoperations backend for our fronted application Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Developed the application as a Spring Boot App to get range of nonfunctional features Deployed Spring Boot based micro services on Dockercontainers using Amazon ECS and used Docker Hub for registering the Docker images Good Knowledge in documentation of REST APIs using Swagger and WADL Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Worked with Cassandra Node Connector for database persistence to interact with Cassandra NOSQL DB with Spring Data to unify and ease the access to Cassandra persistence stores Maintained structured and surveyed documents within the Cassandra database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Wrote comprehensive test cases and test plans using JUnit Spock and Mockito for backend Wrote complex SQL queries using joins Stored Procedures Functions Triggers cursors and indexes in MySQL database Installed Kafka manager for consumer lags and for monitoring Kafka metrics also this has been used for adding topics partitions Very Proficient Knowledge of JIRA to track issues and communicate with other teams at various environments Used GIT for source code management and worked with Visual Studioand Spring Tool Suite IDEs Professional experience in Log4J for extensible logging debugging and error tracing EnvironmentHTML5 CSS3 SASS 35JQuery 30 ECMAScript 6ES6 Typescript AJAX 41 JSON 3 Bootstrap DOM React v15 Redux NPM 55 Java8 OOPS Lambda expressions Angular 4 Spring MVC Spring Boot v12 Micro Services Apache Kafka v010 Spring Batch v30 Netflix OSSEureka v15 Spring cloud Jenkins v20 PLSQL MySQL DB2 MongoDB v32 Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit Selenium SLF4J Visual Studio STS Jasmine JIRA GIT POSTMANREST Client Jenkins Windows Agile Scrum Java Full Stack Developer MTW Labs Hyderabad Telangana December 2013 to November 2014 Description The project deals with development of a website to enable the people to select the medicines and place order from different pharmacies The agent or the customer chooses any product from the website after registering The admin of the company will see the order accept or deny it When all terms and conditions are satisfied the customeragent will be given the delivery date on which he will be paying the required amount and receiving the product Responsibilities Developed the SOA Service Oriented Architecture application using Spring REST and Jersey to build restbased Web services Developed the web interface for end users using AngularJS along with jQuery and included twoway binding and DOM manipulation Built Web pages those are more userinteractive using jQuery plugins for Drag and Drop Validator AutoComplete AJAX JSON Angular JS Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Developed RESTful services that are reusable based on SpringRESTful Services using Jerseyframework Used Spring MVC to develop REST webservices within the application Developed RESTful Web services to create new subscriptionaccount and updating them for mobile value chain in JSON format and consumed RestWeb services from the browser using AngularJS Performed testing for SOAPREST Web services using SoapUI and Postman Rest client Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using HibernateSessionManager functionality to provide independent database connectivity Implemented Hibernate EH Cache technique for the critical objects in the application Used Hibernate ORM framework used to interact with database through Hibernate query languageHQL Used Hibernate for connecting the database and mapping the entities by using hibernateannotations Developed components using core Java concepts like Collections Serialization and Java Threads Used Spring MVC Interceptors Spring core modules and native Spring AOP facets of Logging and transactional management Implemented Pivotal Cloud FoundryPCF as a platform as a service for RESTfulservices Provided installation configuration maintenance of preprod and production Cloud environments including servicessuch as Tomcat Apache Jetty MySQL and JIRA Done load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Developed a GUI to help to read the logs generated by the scripts which was created using D3JS jQuery table sorter Used Spring Validation framework to implement the serverside validations and used jQuery calls to get the data from the server asynchronously by using JSON objects Used JMS Java Mailing ServiceAPI to setup mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Develop Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Modules for the Frontend are integrated to Backend using Hibernate framework Implemented Spring Batch for processing large volumes of records including loggingtracing transaction management job processing statistics job restart skip and resource management in the application using Quartzscheduler Implemented validation rules using JBossBRMS Business Rule Management System version of Drools Wrote Test classes using JUnit and EasyMock and test coverage using EMMA plugin Deployed the services using Dockercontainer to host in AWS and utilized AWS platform to upload data into S3 buckets EC2 instances Used Jenkins automation for building pipelines and GitHub repositories using web hooks plugin Environment JavaJ2EE UNIX JBoss 30 Spring core JMeter Cassandra Hibernate Jetty Core java Perl Spring MVC Hibernate SOAPRESTful Web services FileNet Ajax XML AWS jQuery Jersey AngularJS 1x HTML CSS SaaS Google Charts API Git Maven Jenkins DroolsBRE AWS Pivotal Cloud Foundry PCF Java Developer MicroSpark Software Solutions 2012 to December 2013 Description Microspark Software Solutions Inc provides systems integration and data management solutions to commercial and government clients The company offers applications development services and solutions such as systems engineering and technical assistance Responsibilities Designed the user interface screen and its functionality as per user requirements and developed RESTful Web services on Service Oriented Architecture SOA Responsible for Agile Framework implementation and practices Have good working background with J2EE Frameworks like Servlets JSP Worked with BackboneJS as use interface which offers MVC framework and abstracts data into models and bind objects with custom events and also written dynamic logic in model Created responsive UI modules using BackboneJS with hard coded dependency of Underscore JS The Backbone Router and Backbone sync components can help handle navigation throughout an application and syncing data back to a server Used BackboneJS Router for routing client applications and defining URL representation of the applications object Used Jasmine behaviordriven development BDD testing framework and library Sinonfor testing of BackboneJS which included specs representing single example of behavior Developed Thread Safe blocks for multithread access and distributed transaction management Created and injected Spring services controllers and DAOs to achieve dependency injection Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to spring Spring Quartz for scheduling tasks to generate reports and emails to clients Used SOAP UI Postman Rest Client Spring Mock MVC for testing the Web Services Upgraded Spring Rest Controllers and Services classes to support migration to Spring framework Involved inHTML5 CSS code optimization DOMloading and cross browser compatibility Used CSS features such as creating borders and background and used LESSSASS Preprocessor Developed changes on AdobeFlex frontend with changes in business logics on legacy application Implemented REST based Web Services using JAXRS annotations Jersey provider and consumed using HTTP services Used jQuery to create drop downs progressmenu bar and other drag and drop components Experience in Building Web Service Contracts in SOA Service Manager Orchestration performance tuning Developed quality code adhering to Scala coding Standards and best practices Implemented Authentication Authorization with Spring security Used Magento Connector Connecting to Magento API with java using SOAP Used PLSQL stored procedures for applications needed to execute as part of scheduling mechanisms Used Toad to interact with oracle data base performance tuning db execution plans Heavily used joins stored procedures views Unions in Oracle data base to fetch the data Developed Applications using Rule EnginesJboss Drools4xWork flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Extensively used Hibernate Relational mappingsOneToMany ManyToMany worked on Hibernate Cache Query Criteria and Transactions Worked with the Node package managerNPM along with Karma Jasmine Grunt and Bower fortest and build Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with SVN Jenkins and Jenkins Jobs Resolved bugsdefects in application by coordinated with team members of the project to assure a positive outcome using JIRA Used GIT as version management developed test cases and performed unit testing using JUnit Environment Web Services Spring Hibernate HTML JSP JavaScript jQuery AJAX CSS3 Angular JS SOAP UI XML WSDL Java J2EE Scala Kafka Agile Methodology JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse CVS and Oracle 11g Education Bachelors in Computer Science and Engineering in SRIT JNTU Hyderabad Telangana Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsf Jsp Servlets net Visual studio C Docker Additional Information TECHNICAL SKILLS Programming Languages Java C C PLSQL Net Web Technologies HTML5 CSS3 JavaScript AJAX JSON Bootstrap jquery Angular2040 React JS with Flux Redux Ember JS Knockout JS Back Bone JS Handlebar JS NodeJS Express JS Hapi JS J2EE Technologies frameworks Servlets EJB JSP JSF JDBC SOAP WSDL REST XML JAXP JAXB JPA JMS  Hibernate Spring MVC Spring Boot Spring Data Spring Batch Spring cloud Dump Analysis Databases Oracle 8i9i10g11i DB2 SQL Server 08 MYSQL MongoDB Raven DB Cassandra ApplicationWeb Servers Oracle Web logic IBM Web Sphere JBoss Glassfish Apache Tomcat Messaging Services JMS Active MQ Rabbit MQ IBM MQ Apache kafka Web service frameworks JAXRS JAXWS Apache CXF Axis Jersey Software Methodologies Agile Scrum TDD Waterfall Build Configuration Tools Ant Maven Gradle Jenkins Bamboo Gulp Grunt Webpack NPM Bower Testing Tools Junit TestNG Mockito Jasmine Karma Mocha Chai Spock Protractor Version Control Tools GIT SVN CVS Bitbucket TFS Project Management Tools JIRA Rally Microsoft Project Cloud Technologies DevOps Tools AWS PCF EC2 EBS S3 Docker ECS EBS EKS SQS RDS S3 Glacier Lambda Kubernetes Operating System Windows Linux Unix MAC MSDOS IDEs Eclipse Visual Studio Intellij Spring Tool Suite Sublime Text WinSCP Putty",
    "entities": [
        "Micro Services",
        "RestWeb",
        "Responsibilities Developed",
        "Oracle SQL Server",
        "Backend using Hibernate framework Implemented Spring Batch",
        "REST XML JAXP",
        "AJAX",
        "AJAX Bootstrap",
        "GUI",
        "Reactfronted",
        "Nodejs",
        "ISOMORPHIC",
        "RESTFUL Web Services",
        "Unions",
        "Jersey",
        "Applications using Karma Jasmine Mocha",
        "MMS Junit",
        "HTTP",
        "KibanaELK",
        "Singleton Business Delegate MVC",
        "Computer Science and Engineering",
        "Karma Jasmine Grunt",
        "JSON",
        "Ajax Bootstrap 30 Angular",
        "IBM",
        "CVS",
        "Ajax",
        "Stored Procedures Functions Triggers",
        "Application using ReactJS",
        "Tomcat Server Generated",
        "JAR",
        "Express",
        "Hibernate Cache Query Criteria",
        "Pivotal Functional Service Authenticated Users",
        "OAuth",
        "Business Rules Management System",
        "a Single Page Application",
        "MAC",
        "WebLogic",
        "JUnit",
        "Architected",
        "DevOps",
        "Collections Serialization",
        "Building Web Service Contracts",
        "MQ IBM",
        "SVN Jenkins",
        "JUnit Spock",
        "Amazon",
        "ReactRouter",
        "Maven Jenkins DroolsBRE AWS",
        "NodeJS Express",
        "ELK",
        "Description Microspark Software Solutions Inc",
        "J2EE Frameworks",
        "Puppet Chef",
        "CRUDoperations",
        "JSF Spring",
        "React JS Implemented Spring Boot",
        "Test Driven Development TDD Created",
        "Hibernate Spring",
        "Developed",
        "IAAS",
        "IDE Jenkins Spring CloudNetflix Splunk",
        "Mockito",
        "Spring MVC",
        "Used React Router",
        "Magento Connector Connecting",
        "Magento API",
        "Responsibilities Involved",
        "Git",
        "Heavily",
        "Ant Maven",
        "PCF Pivotal Cloud Foundry Behavioral",
        "Hibernate Spring Data",
        "Business Process Requirements Design Development Testing and Implementation",
        "MQ",
        "New Relic and Dyna Trace Strong",
        "Angular 6 Module Component Template",
        "HTML5 CSS3LESS AJAX Bootstrap 40",
        "MEAN Mongo Express Angular",
        "Data Processing Pipeline",
        "Redux Flux",
        "JNDI",
        "Spring Security",
        "JBoss Integration",
        "Reactjs Closely",
        "Visual Studioand Spring Tool Suite IDEs Professional",
        "Control Tools",
        "Modules Providers Services Interfaces",
        "the RESTful Web Services",
        "JasperReports",
        "Visual",
        "Cucumber and Selenium",
        "SDLC",
        "NOSQLMongo DB",
        "SOAP JIRA Micro Services",
        "SQL Server Configured",
        "Docker",
        "DOM",
        "Hibernate EH Cache",
        "EMMA",
        "Oracle Database",
        "MVC",
        "JMS IBM",
        "Agile",
        "Jenkins Continuous Integration",
        "EJB",
        "GIT",
        "Node JS",
        "Amazon ECS",
        "Data Access Objects",
        "Hibernate Relational",
        "SOAP Web Services",
        "FileNet Ajax XML",
        "Angular 6 Lazy Loading",
        "Web Services",
        "Spring Data",
        "SOA Service",
        "Drools",
        "Created Hibernate",
        "SOAPREST",
        "Tomcat Apache Jetty",
        "Created",
        "BDD",
        "UI Design and Development",
        "AWS",
        "CA",
        "ECS",
        "Perl",
        "JBossBRMS Business Rule Management System",
        "Oracle",
        "Handlebar JS",
        "Business Rules Engine Proficient",
        "React JS",
        "Hystrix Circuit Breaker",
        "Actuator",
        "Nodejs using Expressjs",
        "jQuery Jersey",
        "Implemented Authentication Authorization",
        "Boot v12 Micro Services",
        "Jerseyframework Used Spring",
        "SQL",
        "Nodejs Used Nodejs",
        "Environment JavaJ2EE",
        "Spring Integration",
        "Aspect Oriented Programming",
        "GitHub",
        "ReducerRedux",
        "Bootstrap",
        "Deploying and Configuring Application Web Servers",
        "D3js Implemented Continuous Integration and ContinuousDeployment CICD",
        "JAXRS",
        "CICD",
        "Present Description Capital One Financial Corporation",
        "Jenkins Netflix",
        "SOA Service Oriented Architecture and Microservices Architecture",
        "RESTfulservices Provided",
        "Seleniumautomation using Selenium WebDriver Selenium Grid Proficient",
        "JUnit Environment Web Services Spring Hibernate HTML JSP JavaScript jQuery AJAX",
        "CRUD",
        "Pivotal Application Service Pivotal Container Service",
        "Hibernate Query Language",
        "Spring MVC Controller",
        "Oracle WebLogic IBM",
        "Medicare",
        "StoreRedux",
        "Business Customers",
        "Postman Rest",
        "the Web Services",
        "Maven",
        "Created Dynamic Responsive Designs",
        "lJavaspan",
        "Drools Dashboard for Business",
        "JavaScript",
        "MQ Active",
        "Followed Test Driven Development TDD",
        "UI",
        "Selenium",
        "Node JS Implemented",
        "Microsoft",
        "AGGridand",
        "Angular 2 Framework Design",
        "Java Hibernate Spring Jax Jaxb Jaxp Jaxws Jboss Jms",
        "Kafka System",
        "withMokitoto",
        "Jenkins for React",
        "SOAP UI",
        "CSS",
        "Mongoose Connector",
        "jQuery",
        "MVC Object Orient Design Singleton Factory",
        "REST",
        "Integrated Nodejs with Expressjs",
        "Used Express",
        "Ribbon Hystrix",
        "DevOps Tools AWS PCF",
        "Quartzscheduler Implemented",
        "NoSQL",
        "HTML5CSS3",
        "C Docker Additional Information TECHNICAL SKILLS Programming Languages Java C C PLSQL Net Web Technologies HTML5",
        "Jetty",
        "Software Development Life Cycle",
        "Implemented Java Message Service JMS",
        "EBS",
        "Single Page Application",
        "Mongo DB",
        "Oracle 8i9i10g11i",
        "Drools Wrote Test",
        "Underscore JS",
        "Node",
        "Mongoose connector Proficient"
    ],
    "experience": "Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Expertise in building strong websites confirming standards using Dojo JQueryto develop valid code and tablefree sites Developed numbers of TypescriptsES6 objects including Components ng Modules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced inVarious Angular46 Backbone JS Knockout JS and Ext JS for rapid frontend app development and to achieve MVVMMVC design flow Proficient in creating custom pipes in multiple components to modify interpolated values in templates in developing Angular4 application along with declarative templates dependency injection observables and end to end testing Included validation in template driven forms in developing dynamic web application using Angular 4 with directives to match attributes with validator functions using HTML validation Proficient in usingHapi JS that enabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Developed various Single Page ApplicationsSPA using REACT JS Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and redux to root the URLs properly Worked with Expressjs for development of RESTful web services and middleware configurations Developed serverside application using Nodejs using Expressjs as a framework Used hapijs for building REST API s for routing caching and input and output validations and served to build single page application Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience withRelational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like Couch DB and Cassandra Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed a micro service using Spring Boot which included Aspect Oriented Programming and deployed the application in distributed systems using Spring Cloud Implemented Spring Boot to create a CRUD operations backend for our Angularfronted application Built a Spring Boot architectureon Spring Cloud by creating Configuration service using twelve factor app methodology to handle the configurations for all the services through a simple point call Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Designed and developed RESTFUL Web Services using Spring Boot and Jersey framework Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed projects with RESTful services JAXRS Spring Boot SOAP JAXWS Apache CXF WSDL Apache Axis2 and automated the documentation using Swagger and WADL Used Gradle as a build tool for Spring Boot used for better dependency management and testing the application until deployment Included Apache Kafka in Spring Boot application for integration and Data Processing Pipeline for persistent messaging worked with Apache Kafka with Spring Integration which provides inbound adapters for working with low level and highlevel Apache Kafka API Used JMS messaging using Apache ActiveMQ as Spring Boot application starters which is used for running the consistently and quickly Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Apache Axis2 Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Implemented DevOps practice in Spring boot microservice based platform Have very good understanding and handson working CICD pipelines Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using client side JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Seleniumautomation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch CloudTrial RDS SNS SQS Worked with spring cloud config Ribbon Hystrix and Zul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWTJason Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic SearchLogData and Kibana Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated java based integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Work Experience Java Developer CapitalOne Richmond VA August 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loansbanking and savings accounts I worked withAuthorization team supporting technical initiatives for card users such as virtual credit card numbers backend development for customer preferences platform resiliency and data modeling Responsibilities Involved in the complete Software Development Life Cycle using Agile methodology including design development implementation verification and validation Involved in agile scrum methodology with sprint cycle for every 2 weeks Designed and Implemented SPA single page application using Angular 6 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular 6 Creating generic service which have async capability and detailed description about observables Optimized the performance of application using Angular 6 Lazy Loading and ahead of time compilation To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 6 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Architected and implemented the application modules using Spring boot Spring framework and integrated the application using Microservices architecture Provided authentication and authorization by using Spring Security and OAuth Used Spring AOP terminologies to handle transaction management and address the problem of crosscutting concerns Involved in producing and consuming the RESTful Web Services using Spring Produced SOAP Web Services for communicating with external components Created Hibernate configuration mapping files and defined persistence classes to persist the data into Oracle Database and used Hibernate Query Language HQL toquery the database Used MongoDB to retrieve most recent transactions of the users Deployed the application as a microservice into Docker container and made easily accessible at runtime using AWS services like EC2 Used AWSS3 buckets for online backup and archiving of the data Implemented Java Message Service JMS to exchange information over reliable channel in an asynchronous way by using Kafka as a message queue Followed Test Driven Development TDD methodology for developing test cases using Junit and Mockito Implemented complete Mavenbuild life cycle to achieve organized application structure and conflict free dependencies in pomxml file and deploy on Tomcat Server Generated reports using JasperReports and interactive visualization using tools such as D3js Implemented Continuous Integration and ContinuousDeployment CICD using Jenkins Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs Hands on with Drools written business rules for credit authorizations Used Splunk DataDog for alert monitoring and querying Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Utilized Log4j to debug and record the logs in application Used JIRA tool for Issuebug tracking monitoring of work assignment in the system Developed GIT to track and maintain the different version of the project Environment Java 8 Spring IOC Spring Boot Spring Security Spring AOP Spring Batch Hibernate 4HTML5 CSS3 Ajax Bootstrap 30 Angular 60 JSON OAuth 20 JUnit Mockito Maven Tomcat Kafka JAXRS RESTful SOAP JIRA Micro Services Log4j Mongo DB 35EC2S3IAMDocker Git Jenkins D3js and Spring Tool Suite Java Full Stack Developer Express Scripts Franklin Lakes NJ December 2016 to August 2018 Description The express script a Medicare based company which is setting up the benefits to the individuals depending up on their claims benefits setups there is a client website application used by the accounts team to document client requirements used to install and change the benefits over 60 functional areas Manage status of each client requirement from initial entry point through functional area review and client approval process Responsibilities Developed a Micro Service Oriented applicationwith React JS in the front end and Spring Boot services Involved in development design and implementation front end part of the widget based application using HTML5 CSS3LESS AJAX Bootstrap 40 For clientside view rendering servicesused React JS typically used various predefined Redux libraries Configured ReactRedux for state management and ReactRouter for programmatic navigation Implemented StoreRedux for holding the whole state tree of application and ReducerRedux for describing actions Used AJAX request to data from backend based on user interface input and post updated data back to backend Mocha test runner and Chai test framework are used to test React JS components Web pack module bundler and Babel java script compiler are used accompanying React JS Implemented Spring Boot to create a CRUDoperations backend for our Reactfronted application Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Implemented modules into Node JS to coordinate with plans and necessities Implemented JSON web tokens for authentication and authorization security configurations using Nodejs Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Integrated Nodejs with Expressjs and communicated with databasefor CRUD operations on the data repository Developed the web application based on the NodeJS micro services architecture using Express and MongoDB Extensive experience in designing MongoDB multishared cluster and monitoring with MMS Junit is implemented along withMokitoto perform unit testing on our RESTful web application Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Published message services using Spring AMQPs Rabbit Template and subscribes to the messages on a POJO using Message Listener Adapter Created dynamic schema design through NOSQLMongo DB by writing rich queriesand achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Developing internal Web Application in GroovyGrails with Mongo DB as a data store Using the IntelliJ Idea 1504 IDE with the latest Grails 311 SDK Java 8 Splunk is implemented in the application for log errors exceptions business logic and log analytics Engineered Splunk to build configure and maintain heterogeneous environments and indepth knowledge of log analysis generated by various systems including security products and worked on setup of various dashboards reports and alerts in Splunk Gradle build tool is used to deploy the application on the web servers ie JBoss Integration of automation batch run job with Jenkins Worked with Jenkins Continuous Integration and Continuous DeploymentCICD Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Developed Kafka consumers to consume data from Kafka topics and integrated Kafka source to read the payment confirmation messages Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Implemented Spring CloudNetflixOSSStack along with using Ribbon for clientside load balancing NetflixZuulApi Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Deployed the Dockerized Spring Boot application that is intended to be run on dev local machine using PCF Pivotal Cloud Foundry Behavioral and Integration testing is done using Cucumber and Selenium respectively EnvironmentJavaScript React JSRedux HTML5 CSS3LESS AJAX Bootstrap jquery Spring Security Rabbit MQ Spring Data Spring Batch Quartz Scheduler Hibernate Spring Boot Microservices Restful services Netflix OSS Eclipse Java EE IDE Jenkins Spring CloudNetflix Splunk Mongo DB MySQL Docker Apache tomcat Jenkins Netflix ZuulApi Ribbon Eureka Hystrix JUnit Mokito Mocha Chai Selenium Cucumber Cassandra DB Cassandra Node Connector Gradle JBoss JIRA JWT WADL Web pack Babel Java Full Stack Developer C2N IT Services 2016 to December 2016 Description C2N offers a range of IT services including infrastructure support software development integration support web development web hosting quality assurance testing cyber security certification accreditation CA services as well as program project management services Built a Java application for a recruitment startup This application was be used by workers and hiring companies As part of the marketing strategy we used referral codes to reward our customers for referring Responsibilities Worked with all phases of SDLC as a scrum member following agile methodology and Test Driven Development TDD Created the frontend web pages using HTML5 CSS 3using SASS Twitter Bootstrap CSS framework media queries and JavaScript to develop the UI for our login and customer enrolment portals Created Dynamic Responsive Designs using HTML5CSS3 using SASS Bootstrap Followed the strict patterns of implementing modelviewcontroller MVC architecture using Angular 2 Framework Design and implementation of accessibility features and collaborating with customer up to date Experience with the features of Angular 2 such as directives modules and routing Used Angular 2 as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed the server side application on Angular 2 platform using JavaScript programming Developed custom Directives in Angular 2 to make reusable components custom views using Bootstrap components and involved in configuring routing for various modules in the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used Hapi JS which is configured on top of Node JS to attain better performance to use built in authentication and authorization techniques Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Developed data tables using AGGridand implemented Sorting Filtering and Pagination functionalities Tested the frontend application using Jasmine and Karma testing frameworks Implemented microservices based architecture using Spring Boot interacting through REST API Worked with ORM frameworks such as Spring Data Worked on various features in ECMAScript 6 ES6 such as Arrow functions Classes and enhanced object literals Used React Router to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Implemented modules into Node JS to coordinate with plans and necessities Authenticated Users accessing RESTful services using Oauth 20 and OIDC Worked with Web pack build tool and automated the process of building using Jenkins for React based frontend application Worked with Spring Cloud and Netflix OSSEureka for service registration and discovery Used spring boot Actuator to externalize applications configuration properties for different environments Proficient in deploying and configuring Elastic search Log Stash KibanaELK and AWS Kinesis for log analytics Worked with AWS IAM service to create various groups and attached appropriate policy documents to the users within that group Designed built and deployed a multitude application utilizing almost all the AWS stack Including EC2 Docker focusing on highavailability fault tolerance and autoscaling Implemented Spring Boot to createCRUDoperations backend for our fronted application Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Developed the application as a Spring Boot App to get range of nonfunctional features Deployed Spring Boot based micro services on Dockercontainers using Amazon ECS and used Docker Hub for registering the Docker images Good Knowledge in documentation of REST APIs using Swagger and WADL Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Worked with Cassandra Node Connector for database persistence to interact with Cassandra NOSQL DB with Spring Data to unify and ease the access to Cassandra persistence stores Maintained structured and surveyed documents within the Cassandra database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Wrote comprehensive test cases and test plans using JUnit Spock and Mockito for backend Wrote complex SQL queries using joins Stored Procedures Functions Triggers cursors and indexes in MySQL database Installed Kafka manager for consumer lags and for monitoring Kafka metrics also this has been used for adding topics partitions Very Proficient Knowledge of JIRA to track issues and communicate with other teams at various environments Used GIT for source code management and worked with Visual Studioand Spring Tool Suite IDEs Professional experience in Log4J for extensible logging debugging and error tracing EnvironmentHTML5 CSS3 SASS 35JQuery 30 ECMAScript 6ES6 Typescript AJAX 41 JSON 3 Bootstrap DOM React v15 Redux NPM 55 Java8 OOPS Lambda expressions Angular 4 Spring MVC Spring Boot v12 Micro Services Apache Kafka v010 Spring Batch v30 Netflix OSSEureka v15 Spring cloud Jenkins v20 PLSQL MySQL DB2 MongoDB v32 Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit Selenium SLF4J Visual Studio STS Jasmine JIRA GIT POSTMANREST Client Jenkins Windows Agile Scrum Java Full Stack Developer MTW Labs Hyderabad Telangana December 2013 to November 2014 Description The project deals with development of a website to enable the people to select the medicines and place order from different pharmacies The agent or the customer chooses any product from the website after registering The admin of the company will see the order accept or deny it When all terms and conditions are satisfied the customeragent will be given the delivery date on which he will be paying the required amount and receiving the product Responsibilities Developed the SOA Service Oriented Architecture application using Spring REST and Jersey to build restbased Web services Developed the web interface for end users using AngularJS along with jQuery and included twoway binding and DOM manipulation Built Web pages those are more userinteractive using jQuery plugins for Drag and Drop Validator AutoComplete AJAX JSON Angular JS Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Developed RESTful services that are reusable based on SpringRESTful Services using Jerseyframework Used Spring MVC to develop REST webservices within the application Developed RESTful Web services to create new subscriptionaccount and updating them for mobile value chain in JSON format and consumed RestWeb services from the browser using AngularJS Performed testing for SOAPREST Web services using SoapUI and Postman Rest client Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using HibernateSessionManager functionality to provide independent database connectivity Implemented Hibernate EH Cache technique for the critical objects in the application Used Hibernate ORM framework used to interact with database through Hibernate query languageHQL Used Hibernate for connecting the database and mapping the entities by using hibernateannotations Developed components using core Java concepts like Collections Serialization and Java Threads Used Spring MVC Interceptors Spring core modules and native Spring AOP facets of Logging and transactional management Implemented Pivotal Cloud FoundryPCF as a platform as a service for RESTfulservices Provided installation configuration maintenance of preprod and production Cloud environments including servicessuch as Tomcat Apache Jetty MySQL and JIRA Done load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Developed a GUI to help to read the logs generated by the scripts which was created using D3JS jQuery table sorter Used Spring Validation framework to implement the serverside validations and used jQuery calls to get the data from the server asynchronously by using JSON objects Used JMS Java Mailing ServiceAPI to setup mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Develop Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Modules for the Frontend are integrated to Backend using Hibernate framework Implemented Spring Batch for processing large volumes of records including loggingtracing transaction management job processing statistics job restart skip and resource management in the application using Quartzscheduler Implemented validation rules using JBossBRMS Business Rule Management System version of Drools Wrote Test classes using JUnit and EasyMock and test coverage using EMMA plugin Deployed the services using Dockercontainer to host in AWS and utilized AWS platform to upload data into S3 buckets EC2 instances Used Jenkins automation for building pipelines and GitHub repositories using web hooks plugin Environment JavaJ2EE UNIX JBoss 30 Spring core JMeter Cassandra Hibernate Jetty Core java Perl Spring MVC Hibernate SOAPRESTful Web services FileNet Ajax XML AWS jQuery Jersey AngularJS 1x HTML CSS SaaS Google Charts API Git Maven Jenkins DroolsBRE AWS Pivotal Cloud Foundry PCF Java Developer MicroSpark Software Solutions 2012 to December 2013 Description Microspark Software Solutions Inc provides systems integration and data management solutions to commercial and government clients The company offers applications development services and solutions such as systems engineering and technical assistance Responsibilities Designed the user interface screen and its functionality as per user requirements and developed RESTful Web services on Service Oriented Architecture SOA Responsible for Agile Framework implementation and practices Have good working background with J2EE Frameworks like Servlets JSP Worked with BackboneJS as use interface which offers MVC framework and abstracts data into models and bind objects with custom events and also written dynamic logic in model Created responsive UI modules using BackboneJS with hard coded dependency of Underscore JS The Backbone Router and Backbone sync components can help handle navigation throughout an application and syncing data back to a server Used BackboneJS Router for routing client applications and defining URL representation of the applications object Used Jasmine behaviordriven development BDD testing framework and library Sinonfor testing of BackboneJS which included specs representing single example of behavior Developed Thread Safe blocks for multithread access and distributed transaction management Created and injected Spring services controllers and DAOs to achieve dependency injection Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to spring Spring Quartz for scheduling tasks to generate reports and emails to clients Used SOAP UI Postman Rest Client Spring Mock MVC for testing the Web Services Upgraded Spring Rest Controllers and Services classes to support migration to Spring framework Involved inHTML5 CSS code optimization DOMloading and cross browser compatibility Used CSS features such as creating borders and background and used LESSSASS Preprocessor Developed changes on AdobeFlex frontend with changes in business logics on legacy application Implemented REST based Web Services using JAXRS annotations Jersey provider and consumed using HTTP services Used jQuery to create drop downs progressmenu bar and other drag and drop components Experience in Building Web Service Contracts in SOA Service Manager Orchestration performance tuning Developed quality code adhering to Scala coding Standards and best practices Implemented Authentication Authorization with Spring security Used Magento Connector Connecting to Magento API with java using SOAP Used PLSQL stored procedures for applications needed to execute as part of scheduling mechanisms Used Toad to interact with oracle data base performance tuning db execution plans Heavily used joins stored procedures views Unions in Oracle data base to fetch the data Developed Applications using Rule EnginesJboss Drools4xWork flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Extensively used Hibernate Relational mappingsOneToMany ManyToMany worked on Hibernate Cache Query Criteria and Transactions Worked with the Node package managerNPM along with Karma Jasmine Grunt and Bower fortest and build Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with SVN Jenkins and Jenkins Jobs Resolved bugsdefects in application by coordinated with team members of the project to assure a positive outcome using JIRA Used GIT as version management developed test cases and performed unit testing using JUnit Environment Web Services Spring Hibernate HTML JSP JavaScript jQuery AJAX CSS3 Angular JS SOAP UI XML WSDL Java J2EE Scala Kafka Agile Methodology JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse CVS and Oracle 11 g Education Bachelors in Computer Science and Engineering in SRIT JNTU Hyderabad Telangana Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsf Jsp Servlets net Visual studio C Docker Additional Information TECHNICAL SKILLS Programming Languages Java C C PLSQL Net Web Technologies HTML5 CSS3 JavaScript AJAX JSON Bootstrap jquery Angular2040 React JS with Flux Redux Ember JS Knockout JS Back Bone JS Handlebar JS NodeJS Express JS Hapi JS J2EE Technologies frameworks Servlets EJB JSP JSF JDBC SOAP WSDL REST XML JAXP JAXB JPA JMS   Hibernate Spring MVC Spring Boot Spring Data Spring Batch Spring cloud Dump Analysis Databases Oracle 8i9i10g11i DB2 SQL Server 08 MYSQL MongoDB Raven DB Cassandra ApplicationWeb Servers Oracle Web logic IBM Web Sphere JBoss Glassfish Apache Tomcat Messaging Services JMS Active MQ Rabbit MQ IBM MQ Apache kafka Web service frameworks JAXRS JAXWS Apache CXF Axis Jersey Software Methodologies Agile Scrum TDD Waterfall Build Configuration Tools Ant Maven Gradle Jenkins Bamboo Gulp Grunt Webpack NPM Bower Testing Tools Junit TestNG Mockito Jasmine Karma Mocha Chai Spock Protractor Version Control Tools GIT SVN CVS Bitbucket TFS Project Management Tools JIRA Rally Microsoft Project Cloud Technologies DevOps Tools AWS PCF EC2 EBS S3 Docker ECS EBS EKS SQS RDS S3 Glacier Lambda Kubernetes Operating System Windows Linux Unix MAC MSDOS IDEs Eclipse Visual Studio Intellij Spring Tool Suite Sublime Text WinSCP Putty",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "CapitalOne",
        "Working",
        "Java",
        "Consultant",
        "years",
        "experience",
        "Business",
        "Process",
        "Requirements",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "client",
        "server",
        "applications",
        "Java",
        "J2EE",
        "technologies",
        "Expertise",
        "UI",
        "Design",
        "Development",
        "HTML5",
        "CSS3",
        "SASS",
        "Bootstrap",
        "AJAX",
        "W3C",
        "Web",
        "standards",
        "facts",
        "application",
        "development",
        "JavaScriptTypescript",
        "Ajax",
        "JSON",
        "web",
        "pages",
        "Experience",
        "frameworks",
        "Spring",
        "MVC",
        "Struts",
        "MVC",
        "architecture",
        "interceptors",
        "action",
        "mappings",
        "resource",
        "builders",
        "frameworks",
        "spring",
        "Spring",
        "IOC",
        "AOP",
        "Spring",
        "transaction",
        "Management",
        "Spring",
        "Data",
        "Spring",
        "JDBC",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "Spring",
        "REST",
        "Spring",
        "JTA",
        "Spring",
        "IO",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "Spring",
        "security",
        "Site",
        "Minder",
        "Strong",
        "experience",
        "Single",
        "Page",
        "Application",
        "SPA",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "stack",
        "Expertise",
        "websites",
        "standards",
        "Dojo",
        "JQueryto",
        "code",
        "tablefree",
        "sites",
        "numbers",
        "objects",
        "Components",
        "ng",
        "Modules",
        "Providers",
        "Services",
        "Interfaces",
        "classes",
        "arrow",
        "function",
        "types",
        "Angular46",
        "Backbone",
        "JS",
        "Knockout",
        "JS",
        "Ext",
        "JS",
        "frontend",
        "app",
        "development",
        "MVVMMVC",
        "design",
        "flow",
        "Proficient",
        "custom",
        "pipes",
        "components",
        "values",
        "templates",
        "Angular4",
        "application",
        "templates",
        "dependency",
        "injection",
        "observables",
        "end",
        "testing",
        "validation",
        "template",
        "forms",
        "web",
        "application",
        "Angular",
        "directives",
        "attributes",
        "validator",
        "functions",
        "HTML",
        "validation",
        "Proficient",
        "JS",
        "application",
        "logic",
        "support",
        "input",
        "validation",
        "authentication",
        "facilities",
        "building",
        "web",
        "services",
        "applications",
        "Single",
        "Page",
        "ApplicationsSPA",
        "REACT",
        "JS",
        "design",
        "ISOMORPHIC",
        "website",
        "Tablets",
        "users",
        "Reactjs",
        "Application",
        "ReactJS",
        "Nodejs",
        "NPM",
        "gulp",
        "directories",
        "view",
        "redux",
        "URLs",
        "Expressjs",
        "development",
        "web",
        "services",
        "middleware",
        "configurations",
        "serverside",
        "application",
        "Nodejs",
        "Expressjs",
        "framework",
        "hapijs",
        "REST",
        "API",
        "input",
        "output",
        "validations",
        "page",
        "application",
        "REST",
        "API",
        "server",
        "source",
        "NoSQL",
        "database",
        "data",
        "model",
        "MongoDB",
        "Mongoose",
        "connector",
        "Proficient",
        "RDBMS",
        "concepts",
        "Oracle",
        "SQL",
        "server",
        "experience",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "JDBC",
        "ODBC",
        "JNDI",
        "WebLogic",
        "server",
        "experience",
        "databases",
        "MySQL",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "SQL",
        "Databases",
        "Couch",
        "DB",
        "Cassandra",
        "Solid",
        "experience",
        "web",
        "MVC",
        "frameworks",
        "JSF",
        "Spring",
        "MVC",
        "Struts",
        "service",
        "Spring",
        "Boot",
        "Aspect",
        "Oriented",
        "Programming",
        "application",
        "systems",
        "Spring",
        "Cloud",
        "Spring",
        "Boot",
        "CRUD",
        "operations",
        "backend",
        "application",
        "Spring",
        "Boot",
        "architectureon",
        "Spring",
        "Cloud",
        "Configuration",
        "service",
        "factor",
        "app",
        "methodology",
        "configurations",
        "services",
        "point",
        "call",
        "Spring",
        "Boot",
        "applications",
        "Spring",
        "Tool",
        "Suite",
        "Maven",
        "project",
        "Jetty",
        "server",
        "Spring",
        "MVC",
        "Controller",
        "request",
        "post",
        "Swagger",
        "APIs",
        "RESTFUL",
        "Web",
        "Services",
        "Spring",
        "Boot",
        "Jersey",
        "framework",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "projects",
        "services",
        "JAXRS",
        "Spring",
        "Boot",
        "JAXWS",
        "Apache",
        "CXF",
        "WSDL",
        "Apache",
        "Axis2",
        "documentation",
        "Swagger",
        "Gradle",
        "build",
        "tool",
        "Spring",
        "Boot",
        "dependency",
        "management",
        "application",
        "deployment",
        "Apache",
        "Kafka",
        "Spring",
        "Boot",
        "application",
        "integration",
        "Data",
        "Processing",
        "Pipeline",
        "messaging",
        "Apache",
        "Kafka",
        "Spring",
        "Integration",
        "adapters",
        "level",
        "highlevel",
        "Apache",
        "Kafka",
        "API",
        "JMS",
        "Apache",
        "ActiveMQ",
        "Spring",
        "Boot",
        "application",
        "starters",
        "understanding",
        "React",
        "JS",
        "Redux",
        "Flux",
        "architecture",
        "security",
        "functionality",
        "projects",
        "spring",
        "security",
        "Site",
        "minder",
        "SSO",
        "Professional",
        "experience",
        "Log4J",
        "debugging",
        "error",
        "projects",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Microservices",
        "Architecture",
        "services",
        "JAXRS",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "SOAP",
        "JAXWS",
        "Apache",
        "CXF",
        "WADL",
        "WSDL",
        "Apache",
        "Axis2",
        "Experience",
        "Java",
        "ORM",
        "frameworks",
        "Hibernate",
        "Spring",
        "Data",
        "Ibatis",
        "Proficient",
        "Spring",
        "Data",
        "JPA",
        "Data",
        "Access",
        "DAOs",
        "compile",
        "time",
        "NoSQL",
        "ORM",
        "frameworks",
        "Mongoose",
        "Connector",
        "Cassandra",
        "Node",
        "Driver",
        "Experience",
        "build",
        "tools",
        "Ant",
        "Maven",
        "Gradle",
        "building",
        "applications",
        "environments",
        "hands",
        "experience",
        "CDCI",
        "pipelines",
        "Jenkins",
        "Bamboo",
        "GoCD",
        "DevOps",
        "practice",
        "Spring",
        "boot",
        "microservice",
        "platform",
        "understanding",
        "handson",
        "CICD",
        "expertise",
        "cloud",
        "platform",
        "Amazon",
        "web",
        "services",
        "scripts",
        "infrastructure",
        "automation",
        "tools",
        "Experience",
        "DevOps",
        "tools",
        "Puppet",
        "Chef",
        "Docker",
        "Good",
        "Knowledge",
        "documentation",
        "REST",
        "APIs",
        "Swagger",
        "WADL",
        "client",
        "side",
        "JavaScript",
        "build",
        "runners",
        "Bower",
        "Grunt",
        "Gulp",
        "Web",
        "pack",
        "Expertise",
        "integration",
        "testing",
        "automation",
        "framework",
        "Seleniumautomation",
        "Selenium",
        "WebDriver",
        "Selenium",
        "Grid",
        "Proficient",
        "unit",
        "tests",
        "JavaScript",
        "Applications",
        "Karma",
        "Jasmine",
        "Mocha",
        "Chai",
        "testing",
        "frameworks",
        "test",
        "cases",
        "test",
        "plans",
        "JUnit",
        "TestNG",
        "Spock",
        "Mockito",
        "Java",
        "applications",
        "fault",
        "infrastructure",
        "IAAS",
        "AWS",
        "EC2",
        "S3",
        "SQS",
        "EBS",
        "ELB",
        "API",
        "Gateway",
        "Route",
        "CloudFront",
        "Auto",
        "Scaling",
        "Elastic",
        "Bean",
        "Stalk",
        "IAM",
        "ECS",
        "VPC",
        "Cloud",
        "Watch",
        "CloudTrial",
        "RDS",
        "SNS",
        "SQS",
        "spring",
        "cloud",
        "config",
        "Ribbon",
        "Hystrix",
        "Zul",
        "APIGateway",
        "spring",
        "cloud",
        "Netflix",
        "Eureka",
        "service",
        "load",
        "factors",
        "traffic",
        "resource",
        "usage",
        "authentication",
        "monitoring",
        "services",
        "Hands",
        "experience",
        "implementation",
        "Cloud",
        "Foundry",
        "PCF",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "Authenticated",
        "Users",
        "services",
        "Oauth",
        "OIDC",
        "JWTJason",
        "Web",
        "token",
        "Experience",
        "queue",
        "services",
        "JMS",
        "IBM",
        "MQ",
        "Rabbit",
        "MQ",
        "MQ",
        "Apache",
        "Kafka",
        "experience",
        "Deploying",
        "Configuring",
        "Application",
        "Web",
        "Servers",
        "Oracle",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Glassfish",
        "Apache",
        "Tomcat",
        "Log",
        "Monitoring",
        "tools",
        "Splunk",
        "ELK",
        "Elastic",
        "SearchLogData",
        "Kibana",
        "Drools",
        "Business",
        "Rules",
        "Management",
        "System",
        "BRMS",
        "solution",
        "core",
        "Business",
        "Rules",
        "Engine",
        "Proficient",
        "design",
        "patterns",
        "MVC",
        "Object",
        "Orient",
        "Design",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Experience",
        "Java",
        "Thread",
        "Dump",
        "Analysis",
        "thread",
        "dump",
        "techniques",
        "knowledge",
        "Application",
        "monitoring",
        "tools",
        "New",
        "Relic",
        "Dyna",
        "Trace",
        "Strong",
        "Knowledge",
        "java",
        "integration",
        "testing",
        "testing",
        "applications",
        "Selenium",
        "Cucumber",
        "Experience",
        "Java",
        "Developer",
        "CapitalOne",
        "Richmond",
        "VA",
        "August",
        "Present",
        "Description",
        "Capital",
        "One",
        "Financial",
        "Corporation",
        "bank",
        "company",
        "credit",
        "cards",
        "auto",
        "loansbanking",
        "savings",
        "accounts",
        "withAuthorization",
        "team",
        "initiatives",
        "card",
        "users",
        "credit",
        "card",
        "numbers",
        "development",
        "customer",
        "preferences",
        "platform",
        "resiliency",
        "data",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "methodology",
        "design",
        "development",
        "implementation",
        "verification",
        "validation",
        "scrum",
        "methodology",
        "sprint",
        "cycle",
        "weeks",
        "SPA",
        "page",
        "application",
        "Angular",
        "Module",
        "Component",
        "Template",
        "Metadata",
        "Data",
        "Binding",
        "Directives",
        "Dependency",
        "Injection",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "architecture",
        "Angular",
        "service",
        "async",
        "capability",
        "description",
        "observables",
        "performance",
        "application",
        "Angular",
        "Lazy",
        "Loading",
        "time",
        "compilation",
        "custom",
        "elements",
        "custom",
        "elements",
        "HTML",
        "imports",
        "Shadow",
        "Dom",
        "Angular",
        "Angular",
        "Router",
        "navigation",
        "view",
        "user",
        "application",
        "task",
        "security",
        "APIs",
        "access",
        "Api",
        "key",
        "consumers",
        "application",
        "modules",
        "Spring",
        "boot",
        "Spring",
        "framework",
        "application",
        "Microservices",
        "architecture",
        "authentication",
        "authorization",
        "Spring",
        "Security",
        "OAuth",
        "Used",
        "Spring",
        "AOP",
        "terminologies",
        "transaction",
        "management",
        "problem",
        "concerns",
        "RESTful",
        "Web",
        "Services",
        "Spring",
        "Produced",
        "SOAP",
        "Web",
        "Services",
        "components",
        "Hibernate",
        "configuration",
        "mapping",
        "files",
        "persistence",
        "classes",
        "data",
        "Oracle",
        "Database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "toquery",
        "database",
        "transactions",
        "users",
        "application",
        "microservice",
        "Docker",
        "container",
        "runtime",
        "AWS",
        "services",
        "EC2",
        "AWSS3",
        "buckets",
        "backup",
        "archiving",
        "data",
        "Java",
        "Message",
        "Service",
        "JMS",
        "information",
        "channel",
        "way",
        "Kafka",
        "message",
        "queue",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "test",
        "cases",
        "Junit",
        "Mockito",
        "Mavenbuild",
        "life",
        "cycle",
        "application",
        "structure",
        "conflict",
        "dependencies",
        "pomxml",
        "file",
        "Tomcat",
        "Server",
        "Generated",
        "reports",
        "JasperReports",
        "visualization",
        "tools",
        "D3js",
        "Continuous",
        "Integration",
        "ContinuousDeployment",
        "CICD",
        "Jenkins",
        "Set",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "Git",
        "source",
        "control",
        "system",
        "day",
        "builds",
        "development",
        "Hands",
        "Drools",
        "business",
        "rules",
        "credit",
        "authorizations",
        "Splunk",
        "DataDog",
        "monitoring",
        "expertise",
        "cloud",
        "platform",
        "Amazon",
        "web",
        "services",
        "scripts",
        "infrastructure",
        "automation",
        "tools",
        "Log4j",
        "logs",
        "application",
        "JIRA",
        "tool",
        "Issuebug",
        "tracking",
        "monitoring",
        "work",
        "assignment",
        "system",
        "GIT",
        "version",
        "project",
        "Environment",
        "Java",
        "Spring",
        "IOC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "Spring",
        "Batch",
        "Hibernate",
        "CSS3",
        "Ajax",
        "Bootstrap",
        "Angular",
        "JSON",
        "OAuth",
        "JUnit",
        "Mockito",
        "Maven",
        "Tomcat",
        "Kafka",
        "JAXRS",
        "SOAP",
        "JIRA",
        "Micro",
        "Services",
        "Log4j",
        "Mongo",
        "DB",
        "35EC2S3IAMDocker",
        "Git",
        "Jenkins",
        "D3js",
        "Spring",
        "Tool",
        "Suite",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Express",
        "Scripts",
        "Franklin",
        "Lakes",
        "NJ",
        "December",
        "August",
        "Description",
        "express",
        "script",
        "Medicare",
        "company",
        "benefits",
        "individuals",
        "claims",
        "benefits",
        "setups",
        "client",
        "website",
        "application",
        "accounts",
        "team",
        "document",
        "client",
        "requirements",
        "benefits",
        "areas",
        "status",
        "client",
        "requirement",
        "entry",
        "point",
        "area",
        "review",
        "client",
        "approval",
        "process",
        "Responsibilities",
        "Micro",
        "Service",
        "React",
        "JS",
        "end",
        "Spring",
        "Boot",
        "services",
        "development",
        "design",
        "implementation",
        "part",
        "widget",
        "application",
        "HTML5",
        "CSS3LESS",
        "AJAX",
        "Bootstrap",
        "view",
        "React",
        "JS",
        "Redux",
        "libraries",
        "Configured",
        "ReactRedux",
        "state",
        "management",
        "ReactRouter",
        "navigation",
        "StoreRedux",
        "state",
        "tree",
        "application",
        "ReducerRedux",
        "actions",
        "AJAX",
        "request",
        "data",
        "backend",
        "user",
        "interface",
        "input",
        "data",
        "Mocha",
        "test",
        "runner",
        "Chai",
        "test",
        "framework",
        "React",
        "JS",
        "components",
        "Web",
        "pack",
        "module",
        "bundler",
        "Babel",
        "java",
        "script",
        "compiler",
        "React",
        "JS",
        "Spring",
        "Boot",
        "CRUDoperations",
        "backend",
        "application",
        "Bottle",
        "microframework",
        "service",
        "WADL",
        "Web",
        "Application",
        "Description",
        "Language",
        "resources",
        "services",
        "relationships",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "Node",
        "JS",
        "modules",
        "Node",
        "JS",
        "plans",
        "necessities",
        "web",
        "tokens",
        "authentication",
        "authorization",
        "security",
        "configurations",
        "Nodejs",
        "Nodejs",
        "POC",
        "Bower",
        "development",
        "automation",
        "tasks",
        "Express",
        "JS",
        "web",
        "framework",
        "Nodejs",
        "sever",
        "Integrated",
        "Nodejs",
        "Expressjs",
        "CRUD",
        "operations",
        "data",
        "repository",
        "web",
        "application",
        "NodeJS",
        "micro",
        "services",
        "architecture",
        "Express",
        "experience",
        "cluster",
        "monitoring",
        "MMS",
        "Junit",
        "withMokitoto",
        "unit",
        "web",
        "application",
        "JWT",
        "JSON",
        "Web",
        "Tokens",
        "tokens",
        "claims",
        "application",
        "authentication",
        "services",
        "message",
        "services",
        "Spring",
        "AMQPs",
        "Rabbit",
        "Template",
        "messages",
        "POJO",
        "Message",
        "Listener",
        "Adapter",
        "schema",
        "NOSQLMongo",
        "DB",
        "queriesand",
        "data",
        "collection",
        "systems",
        "scalability",
        "data",
        "volumes",
        "Automatic",
        "Sharding",
        "Web",
        "Application",
        "GroovyGrails",
        "Mongo",
        "DB",
        "data",
        "store",
        "IntelliJ",
        "Idea",
        "IDE",
        "Grails",
        "SDK",
        "Java",
        "Splunk",
        "application",
        "log",
        "errors",
        "exceptions",
        "business",
        "logic",
        "analytics",
        "Splunk",
        "configure",
        "environments",
        "knowledge",
        "log",
        "analysis",
        "systems",
        "security",
        "products",
        "setup",
        "dashboards",
        "reports",
        "alerts",
        "Splunk",
        "Gradle",
        "build",
        "tool",
        "application",
        "web",
        "servers",
        "JBoss",
        "Integration",
        "automation",
        "batch",
        "run",
        "job",
        "Jenkins",
        "Worked",
        "Jenkins",
        "Continuous",
        "Integration",
        "DeploymentCICD",
        "Apache",
        "Kafka",
        "Message",
        "Queues",
        "exchange",
        "information",
        "business",
        "applications",
        "Kafka",
        "consumers",
        "data",
        "Kafka",
        "topics",
        "Kafka",
        "source",
        "payment",
        "confirmation",
        "messages",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "Spring",
        "CloudNetflixOSSStack",
        "Ribbon",
        "load",
        "NetflixZuulApi",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "Dockerized",
        "Spring",
        "Boot",
        "application",
        "dev",
        "machine",
        "PCF",
        "Cloud",
        "Foundry",
        "Behavioral",
        "Integration",
        "testing",
        "Cucumber",
        "Selenium",
        "EnvironmentJavaScript",
        "React",
        "JSRedux",
        "HTML5",
        "CSS3LESS",
        "AJAX",
        "Bootstrap",
        "jquery",
        "Spring",
        "Security",
        "Rabbit",
        "MQ",
        "Spring",
        "Data",
        "Spring",
        "Batch",
        "Quartz",
        "Scheduler",
        "Hibernate",
        "Spring",
        "Boot",
        "Microservices",
        "services",
        "Netflix",
        "OSS",
        "Eclipse",
        "Java",
        "EE",
        "IDE",
        "Jenkins",
        "Spring",
        "CloudNetflix",
        "Splunk",
        "Mongo",
        "DB",
        "MySQL",
        "Docker",
        "Apache",
        "tomcat",
        "Jenkins",
        "Netflix",
        "ZuulApi",
        "Ribbon",
        "Eureka",
        "Hystrix",
        "JUnit",
        "Mokito",
        "Mocha",
        "Chai",
        "Selenium",
        "Cucumber",
        "Cassandra",
        "DB",
        "Cassandra",
        "Node",
        "Connector",
        "Gradle",
        "JBoss",
        "JIRA",
        "JWT",
        "WADL",
        "Web",
        "pack",
        "Babel",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "C2N",
        "IT",
        "Services",
        "December",
        "Description",
        "C2N",
        "range",
        "IT",
        "services",
        "infrastructure",
        "support",
        "software",
        "development",
        "integration",
        "support",
        "web",
        "development",
        "web",
        "quality",
        "assurance",
        "testing",
        "cyber",
        "security",
        "certification",
        "accreditation",
        "CA",
        "services",
        "program",
        "project",
        "management",
        "services",
        "Java",
        "application",
        "recruitment",
        "startup",
        "application",
        "workers",
        "companies",
        "part",
        "marketing",
        "strategy",
        "codes",
        "customers",
        "Responsibilities",
        "phases",
        "SDLC",
        "scrum",
        "member",
        "methodology",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "frontend",
        "web",
        "pages",
        "HTML5",
        "CSS",
        "SASS",
        "Twitter",
        "Bootstrap",
        "CSS",
        "framework",
        "media",
        "queries",
        "JavaScript",
        "UI",
        "login",
        "customer",
        "enrolment",
        "Dynamic",
        "Responsive",
        "Designs",
        "HTML5CSS3",
        "SASS",
        "Bootstrap",
        "patterns",
        "MVC",
        "architecture",
        "Angular",
        "Framework",
        "Design",
        "implementation",
        "accessibility",
        "features",
        "customer",
        "date",
        "Experience",
        "features",
        "Angular",
        "directives",
        "modules",
        "Used",
        "Angular",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "server",
        "side",
        "application",
        "Angular",
        "platform",
        "JavaScript",
        "programming",
        "custom",
        "Directives",
        "Angular",
        "components",
        "custom",
        "views",
        "Bootstrap",
        "components",
        "modules",
        "application",
        "Configured",
        "Hapi",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "Hapi",
        "JS",
        "top",
        "Node",
        "JS",
        "performance",
        "authentication",
        "authorization",
        "techniques",
        "Apache",
        "CXF",
        "web",
        "service",
        "documentation",
        "web",
        "services",
        "application",
        "Swagger",
        "Drools",
        "Business",
        "Rules",
        "Management",
        "System",
        "BRMS",
        "solution",
        "core",
        "Business",
        "Rules",
        "Engine",
        "data",
        "tables",
        "AGGridand",
        "Sorting",
        "Filtering",
        "Pagination",
        "functionalities",
        "frontend",
        "application",
        "Jasmine",
        "Karma",
        "testing",
        "frameworks",
        "microservices",
        "architecture",
        "Spring",
        "Boot",
        "REST",
        "API",
        "ORM",
        "frameworks",
        "Spring",
        "Data",
        "features",
        "ECMAScript",
        "ES6",
        "Arrow",
        "functions",
        "Classes",
        "object",
        "literals",
        "React",
        "Router",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "modules",
        "Node",
        "JS",
        "plans",
        "necessities",
        "Authenticated",
        "Users",
        "services",
        "Oauth",
        "OIDC",
        "Web",
        "pack",
        "build",
        "tool",
        "process",
        "building",
        "Jenkins",
        "React",
        "frontend",
        "application",
        "Spring",
        "Cloud",
        "Netflix",
        "OSSEureka",
        "service",
        "registration",
        "discovery",
        "spring",
        "boot",
        "Actuator",
        "applications",
        "configuration",
        "properties",
        "environments",
        "search",
        "Log",
        "Stash",
        "KibanaELK",
        "AWS",
        "Kinesis",
        "log",
        "analytics",
        "AWS",
        "IAM",
        "service",
        "groups",
        "policy",
        "documents",
        "users",
        "group",
        "multitude",
        "application",
        "AWS",
        "stack",
        "EC2",
        "Docker",
        "highavailability",
        "fault",
        "tolerance",
        "Spring",
        "Boot",
        "createCRUDoperations",
        "application",
        "Spring",
        "Boot",
        "applications",
        "Spring",
        "Tool",
        "Suite",
        "Maven",
        "project",
        "Jetty",
        "server",
        "Spring",
        "MVC",
        "Controller",
        "request",
        "post",
        "Swagger",
        "APIs",
        "application",
        "Spring",
        "Boot",
        "App",
        "range",
        "features",
        "Deployed",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Dockercontainers",
        "Amazon",
        "ECS",
        "Docker",
        "Hub",
        "Docker",
        "Good",
        "Knowledge",
        "documentation",
        "REST",
        "APIs",
        "Swagger",
        "fundamentals",
        "Java",
        "streams",
        "filters",
        "expressions",
        "application",
        "industry",
        "design",
        "patterns",
        "Singleton",
        "Business",
        "Delegate",
        "MVC",
        "Factory",
        "Pattern",
        "reusability",
        "Cassandra",
        "Node",
        "Connector",
        "database",
        "persistence",
        "Cassandra",
        "NOSQL",
        "DB",
        "Spring",
        "Data",
        "access",
        "Cassandra",
        "persistence",
        "stores",
        "documents",
        "Cassandra",
        "database",
        "data",
        "integrity",
        "anomalies",
        "maintainability",
        "database",
        "Wrote",
        "test",
        "cases",
        "test",
        "plans",
        "JUnit",
        "Spock",
        "Mockito",
        "Wrote",
        "SQL",
        "queries",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "cursors",
        "indexes",
        "MySQL",
        "database",
        "Installed",
        "Kafka",
        "manager",
        "consumer",
        "lags",
        "Kafka",
        "metrics",
        "topics",
        "partitions",
        "Proficient",
        "Knowledge",
        "JIRA",
        "issues",
        "teams",
        "environments",
        "GIT",
        "source",
        "code",
        "management",
        "Visual",
        "Studioand",
        "Spring",
        "Tool",
        "Suite",
        "Professional",
        "experience",
        "Log4J",
        "debugging",
        "error",
        "EnvironmentHTML5",
        "CSS3",
        "SASS",
        "35JQuery",
        "ECMAScript",
        "Typescript",
        "AJAX",
        "JSON",
        "Bootstrap",
        "DOM",
        "React",
        "Redux",
        "NPM",
        "Java8",
        "Lambda",
        "expressions",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "Apache",
        "Kafka",
        "v010",
        "Spring",
        "Batch",
        "v30",
        "Netflix",
        "OSSEureka",
        "Spring",
        "cloud",
        "Jenkins",
        "v20",
        "PLSQL",
        "MySQL",
        "DB2",
        "MongoDB",
        "Cassandra",
        "AWS",
        "S3",
        "EC2",
        "ECS",
        "ECR",
        "IAM",
        "EBS",
        "JUnit",
        "Selenium",
        "SLF4J",
        "Visual",
        "Studio",
        "STS",
        "Jasmine",
        "JIRA",
        "GIT",
        "POSTMANREST",
        "Client",
        "Jenkins",
        "Windows",
        "Agile",
        "Scrum",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "MTW",
        "Labs",
        "Hyderabad",
        "Telangana",
        "December",
        "November",
        "Description",
        "project",
        "development",
        "website",
        "people",
        "medicines",
        "place",
        "order",
        "pharmacies",
        "agent",
        "customer",
        "product",
        "website",
        "admin",
        "company",
        "order",
        "terms",
        "conditions",
        "customeragent",
        "delivery",
        "date",
        "amount",
        "product",
        "Responsibilities",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "application",
        "Spring",
        "REST",
        "Jersey",
        "Web",
        "services",
        "web",
        "interface",
        "end",
        "users",
        "jQuery",
        "twoway",
        "DOM",
        "manipulation",
        "Web",
        "pages",
        "jQuery",
        "plugins",
        "Drag",
        "Drop",
        "Validator",
        "AutoComplete",
        "JSON",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "data",
        "web",
        "pages",
        "features",
        "application",
        "jQuery",
        "concepts",
        "selectors",
        "filters",
        "services",
        "Services",
        "Jerseyframework",
        "Used",
        "Spring",
        "MVC",
        "REST",
        "webservices",
        "application",
        "Web",
        "services",
        "subscriptionaccount",
        "value",
        "chain",
        "format",
        "RestWeb",
        "services",
        "browser",
        "testing",
        "SOAPREST",
        "Web",
        "services",
        "SoapUI",
        "Postman",
        "Rest",
        "client",
        "Developed",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Configured",
        "data",
        "source",
        "HibernateSessionManager",
        "functionality",
        "database",
        "connectivity",
        "Hibernate",
        "EH",
        "Cache",
        "technique",
        "objects",
        "application",
        "Hibernate",
        "ORM",
        "framework",
        "database",
        "Hibernate",
        "query",
        "Hibernate",
        "database",
        "mapping",
        "entities",
        "hibernateannotations",
        "components",
        "core",
        "Java",
        "concepts",
        "Collections",
        "Serialization",
        "Java",
        "Threads",
        "Spring",
        "MVC",
        "Interceptors",
        "Spring",
        "core",
        "modules",
        "Spring",
        "AOP",
        "facets",
        "Logging",
        "management",
        "Cloud",
        "FoundryPCF",
        "platform",
        "service",
        "RESTfulservices",
        "installation",
        "configuration",
        "maintenance",
        "preprod",
        "production",
        "Cloud",
        "environments",
        "Tomcat",
        "Apache",
        "Jetty",
        "MySQL",
        "JIRA",
        "load",
        "testing",
        "SOAP",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "Apache",
        "JMeter",
        "tools",
        "GUI",
        "logs",
        "scripts",
        "D3JS",
        "jQuery",
        "table",
        "sorter",
        "Spring",
        "Validation",
        "framework",
        "serverside",
        "validations",
        "jQuery",
        "calls",
        "data",
        "server",
        "objects",
        "JMS",
        "Java",
        "Mailing",
        "ServiceAPI",
        "setup",
        "mail",
        "notifications",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "problems",
        "Develop",
        "Spring",
        "Batch",
        "processes",
        "reporting",
        "applications",
        "modules",
        "Perl",
        "Korn",
        "shell",
        "scripts",
        "Oracle",
        "database",
        "partitions",
        "subpartitions",
        "Modules",
        "Frontend",
        "Backend",
        "Hibernate",
        "framework",
        "Spring",
        "Batch",
        "volumes",
        "records",
        "transaction",
        "management",
        "job",
        "processing",
        "statistics",
        "job",
        "restart",
        "skip",
        "resource",
        "management",
        "application",
        "Quartzscheduler",
        "validation",
        "rules",
        "JBossBRMS",
        "Business",
        "Rule",
        "Management",
        "System",
        "version",
        "Drools",
        "Wrote",
        "Test",
        "classes",
        "JUnit",
        "EasyMock",
        "test",
        "coverage",
        "EMMA",
        "plugin",
        "services",
        "Dockercontainer",
        "AWS",
        "AWS",
        "platform",
        "data",
        "S3",
        "buckets",
        "EC2",
        "instances",
        "Jenkins",
        "automation",
        "pipelines",
        "GitHub",
        "repositories",
        "web",
        "hooks",
        "Environment",
        "JavaJ2EE",
        "UNIX",
        "JBoss",
        "Spring",
        "core",
        "JMeter",
        "Cassandra",
        "Hibernate",
        "Jetty",
        "Core",
        "java",
        "Perl",
        "Spring",
        "MVC",
        "Hibernate",
        "Web",
        "services",
        "FileNet",
        "Ajax",
        "XML",
        "AWS",
        "jQuery",
        "Jersey",
        "AngularJS",
        "1x",
        "HTML",
        "CSS",
        "SaaS",
        "Google",
        "Charts",
        "API",
        "Git",
        "Maven",
        "Jenkins",
        "DroolsBRE",
        "AWS",
        "Cloud",
        "Foundry",
        "PCF",
        "Java",
        "Developer",
        "MicroSpark",
        "Software",
        "Solutions",
        "December",
        "Description",
        "Microspark",
        "Software",
        "Solutions",
        "Inc",
        "systems",
        "integration",
        "data",
        "management",
        "solutions",
        "government",
        "clients",
        "company",
        "applications",
        "development",
        "services",
        "solutions",
        "systems",
        "engineering",
        "assistance",
        "Responsibilities",
        "user",
        "interface",
        "screen",
        "functionality",
        "user",
        "requirements",
        "Web",
        "services",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Agile",
        "Framework",
        "implementation",
        "practices",
        "working",
        "background",
        "J2EE",
        "Frameworks",
        "Servlets",
        "JSP",
        "BackboneJS",
        "use",
        "interface",
        "MVC",
        "framework",
        "data",
        "models",
        "bind",
        "objects",
        "custom",
        "events",
        "logic",
        "model",
        "UI",
        "modules",
        "BackboneJS",
        "dependency",
        "Underscore",
        "JS",
        "Backbone",
        "Router",
        "Backbone",
        "sync",
        "components",
        "navigation",
        "application",
        "data",
        "server",
        "BackboneJS",
        "Router",
        "client",
        "applications",
        "URL",
        "representation",
        "applications",
        "object",
        "Jasmine",
        "behaviordriven",
        "development",
        "BDD",
        "testing",
        "framework",
        "library",
        "Sinonfor",
        "testing",
        "BackboneJS",
        "specs",
        "example",
        "behavior",
        "Thread",
        "Safe",
        "blocks",
        "multithread",
        "access",
        "transaction",
        "management",
        "Spring",
        "services",
        "controllers",
        "DAOs",
        "dependency",
        "injection",
        "Spring",
        "Inheritance",
        "Autowiring",
        "Core",
        "Container",
        "Security",
        "AOP",
        "ORM",
        "modules",
        "part",
        "migration",
        "EJB",
        "Spring",
        "Quartz",
        "scheduling",
        "tasks",
        "reports",
        "emails",
        "clients",
        "SOAP",
        "UI",
        "Postman",
        "Rest",
        "Client",
        "Spring",
        "Mock",
        "MVC",
        "Web",
        "Services",
        "Spring",
        "Rest",
        "Controllers",
        "Services",
        "classes",
        "migration",
        "Spring",
        "framework",
        "inHTML5",
        "CSS",
        "code",
        "optimization",
        "browser",
        "compatibility",
        "CSS",
        "features",
        "borders",
        "background",
        "LESSSASS",
        "Preprocessor",
        "changes",
        "AdobeFlex",
        "frontend",
        "changes",
        "business",
        "logics",
        "legacy",
        "application",
        "REST",
        "Web",
        "Services",
        "JAXRS",
        "annotations",
        "Jersey",
        "provider",
        "HTTP",
        "services",
        "jQuery",
        "drop",
        "downs",
        "progressmenu",
        "bar",
        "drag",
        "components",
        "Experience",
        "Building",
        "Web",
        "Service",
        "Contracts",
        "SOA",
        "Service",
        "Manager",
        "Orchestration",
        "performance",
        "quality",
        "code",
        "Scala",
        "Standards",
        "practices",
        "Authentication",
        "Authorization",
        "Spring",
        "security",
        "Magento",
        "Connector",
        "Magento",
        "API",
        "SOAP",
        "procedures",
        "applications",
        "part",
        "scheduling",
        "mechanisms",
        "Toad",
        "oracle",
        "data",
        "base",
        "performance",
        "execution",
        "plans",
        "procedures",
        "Unions",
        "Oracle",
        "data",
        "base",
        "data",
        "Developed",
        "Applications",
        "Rule",
        "EnginesJboss",
        "Drools4xWork",
        "tasks",
        "Business",
        "rules",
        "validations",
        "Drools",
        "Dashboard",
        "Business",
        "users",
        "Hibernate",
        "Relational",
        "ManyToMany",
        "Hibernate",
        "Cache",
        "Query",
        "Criteria",
        "Transactions",
        "Node",
        "package",
        "managerNPM",
        "Karma",
        "Jasmine",
        "Grunt",
        "Bower",
        "Maven",
        "build",
        "dependency",
        "management",
        "tool",
        "EAR",
        "WAR",
        "JAR",
        "file",
        "application",
        "servers",
        "SVN",
        "Jenkins",
        "Jenkins",
        "Jobs",
        "bugsdefects",
        "application",
        "team",
        "members",
        "project",
        "outcome",
        "JIRA",
        "GIT",
        "version",
        "management",
        "test",
        "cases",
        "unit",
        "testing",
        "JUnit",
        "Environment",
        "Web",
        "Services",
        "Spring",
        "Hibernate",
        "HTML",
        "JSP",
        "JavaScript",
        "jQuery",
        "AJAX",
        "CSS3",
        "Angular",
        "JS",
        "SOAP",
        "UI",
        "XML",
        "WSDL",
        "Java",
        "J2EE",
        "Scala",
        "Kafka",
        "Agile",
        "Methodology",
        "JIRA",
        "GIT",
        "Design",
        "Patterns",
        "PLSQL",
        "Junit",
        "WebSphere",
        "MQ",
        "Maven",
        "Eclipse",
        "CVS",
        "Oracle",
        "g",
        "Education",
        "Bachelors",
        "Computer",
        "Science",
        "Engineering",
        "SRIT",
        "JNTU",
        "Hyderabad",
        "Telangana",
        "Skills",
        "Eclipse",
        "Ejb",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxb",
        "Jaxp",
        "Jaxws",
        "Jboss",
        "Jms",
        "jquery",
        "Jsf",
        "Jsp",
        "Servlets",
        "studio",
        "C",
        "Docker",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "Java",
        "C",
        "C",
        "PLSQL",
        "Net",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "JSON",
        "Bootstrap",
        "jquery",
        "Angular2040",
        "React",
        "JS",
        "Flux",
        "Redux",
        "Ember",
        "JS",
        "Knockout",
        "JS",
        "Back",
        "Bone",
        "JS",
        "Handlebar",
        "JS",
        "NodeJS",
        "Express",
        "JS",
        "Hapi",
        "JS",
        "J2EE",
        "Technologies",
        "frameworks",
        "Servlets",
        "EJB",
        "JSP",
        "JSF",
        "JDBC",
        "SOAP",
        "WSDL",
        "REST",
        "XML",
        "JAXP",
        "JAXB",
        "JPA",
        "JMS",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "Spring",
        "Batch",
        "Spring",
        "cloud",
        "Dump",
        "Analysis",
        "Oracle",
        "8i9i10g11i",
        "DB2",
        "SQL",
        "Server",
        "MYSQL",
        "MongoDB",
        "Raven",
        "DB",
        "Cassandra",
        "ApplicationWeb",
        "Servers",
        "Oracle",
        "Web",
        "logic",
        "IBM",
        "Web",
        "Sphere",
        "JBoss",
        "Glassfish",
        "Apache",
        "Tomcat",
        "Messaging",
        "Services",
        "JMS",
        "MQ",
        "Rabbit",
        "MQ",
        "IBM",
        "MQ",
        "Apache",
        "Web",
        "service",
        "frameworks",
        "JAXRS",
        "JAXWS",
        "Apache",
        "CXF",
        "Axis",
        "Jersey",
        "Software",
        "Methodologies",
        "Agile",
        "Scrum",
        "TDD",
        "Waterfall",
        "Build",
        "Configuration",
        "Tools",
        "Ant",
        "Maven",
        "Gradle",
        "Jenkins",
        "Bamboo",
        "Gulp",
        "Grunt",
        "Webpack",
        "NPM",
        "Bower",
        "Testing",
        "Tools",
        "Junit",
        "TestNG",
        "Mockito",
        "Jasmine",
        "Karma",
        "Mocha",
        "Chai",
        "Spock",
        "Protractor",
        "Version",
        "Control",
        "Tools",
        "GIT",
        "SVN",
        "CVS",
        "Bitbucket",
        "TFS",
        "Project",
        "Management",
        "Tools",
        "JIRA",
        "Rally",
        "Microsoft",
        "Project",
        "Cloud",
        "Technologies",
        "DevOps",
        "Tools",
        "AWS",
        "PCF",
        "EC2",
        "EBS",
        "S3",
        "Docker",
        "ECS",
        "EBS",
        "EKS",
        "SQS",
        "RDS",
        "S3",
        "Glacier",
        "Lambda",
        "Kubernetes",
        "System",
        "Windows",
        "Linux",
        "Unix",
        "MAC",
        "MSDOS",
        "IDEs",
        "Eclipse",
        "Visual",
        "Studio",
        "Intellij",
        "Spring",
        "Tool",
        "Suite",
        "Sublime",
        "Text",
        "WinSCP",
        "Putty"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:05:00.434021",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer CapitalOne Working as a Java Consultant with over 7 years of experience in capturing Business Process Requirements Design Development Testing and Implementation for various client server based applications using Java and J2EE technologies Expertise in UI Design and Development using HTML5 CSS3 SASS LESS Bootstrap and AJAX that follows W3C Web standards and successfully managing all facts of application development Extensively used JavaScriptTypescript Ajax and JSON to build highly interactive web pages Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Expertise in building strong websites confirming standards using Dojo JQueryto develop valid code and tablefree sites Developed numbers of TypescriptsES6 objects including Components ng Modules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced inVarious Angular46 Backbone JS Knockout JS and Ext JS for rapid frontend app development and to achieve MVVMMVC design flow Proficient in creating custom pipes in multiple components to modify interpolated values in templates in developing Angular4 application along with declarative templates dependency injection observables and end to end testing Included validation in template driven forms in developing dynamic web application using Angular 4 with directives to match attributes with validator functions using HTML validation Proficient in usingHapi JS that enabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Developed various Single Page ApplicationsSPA using REACT JS Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using Reactjs Closely worked with Application using ReactJS and Nodejs libraries NPM gulp directories to generate desired view and redux to root the URLs properly Worked with Expressjs for development of RESTful web services and middleware configurations Developed serverside application using Nodejs using Expressjs as a framework Used hapijs for building REST API s for routing caching and input and output validations and served to build single page application Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience withRelational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like Couch DB and Cassandra Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed a micro service using Spring Boot which included Aspect Oriented Programming and deployed the application in distributed systems using Spring Cloud Implemented Spring Boot to create a CRUD operations backend for our Angularfronted application Built a Spring Boot architectureon Spring Cloud by creating Configuration service using twelve factor app methodology to handle the configurations for all the services through a simple point call Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Designed and developed RESTFUL Web Services using Spring Boot and Jersey framework Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed projects with RESTful services JAXRS Spring Boot SOAP JAXWS Apache CXF WSDL Apache Axis2 and automated the documentation using Swagger and WADL Used Gradle as a build tool for Spring Boot used for better dependency management and testing the application until deployment Included Apache Kafka in Spring Boot application for integration and Data Processing Pipeline for persistent messaging worked with Apache Kafka with Spring Integration which provides inbound adapters for working with low level and highlevel Apache Kafka API Used JMS messaging using Apache ActiveMQ as Spring Boot application starters which is used for running the consistently and quickly Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Apache Axis2 Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Implemented DevOps practice in Spring boot microservice based platform Have very good understanding and handson working CICD pipelines Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using client side JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Seleniumautomation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch CloudTrial RDS SNS SQS Worked with spring cloud config Ribbon Hystrix and Zul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWTJason Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic SearchLogData and Kibana Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated java based integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Work Experience Java Developer CapitalOne Richmond VA August 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loansbanking and savings accounts I worked withAuthorization team supporting technical initiatives for card users such as virtual credit card numbers backend development for customer preferences platform resiliency and data modeling Responsibilities Involved in the complete Software Development Life Cycle using Agile methodology including design development implementation verification and validation Involved in agile scrum methodology with sprint cycle for every 2 weeks Designed and Implemented SPA single page application using Angular 6 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular 6 Creating generic service which have async capability and detailed description about observables Optimized the performance of application using Angular 6 Lazy Loading and ahead of time compilation To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 6 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Architected and implemented the application modules using Spring boot Spring framework and integrated the application using Microservices architecture Provided authentication and authorization by using Spring Security and OAuth Used Spring AOP terminologies to handle transaction management and address the problem of crosscutting concerns Involved in producing and consuming the RESTful Web Services using Spring Produced SOAP Web Services for communicating with external components Created Hibernate configuration mapping files and defined persistence classes to persist the data into Oracle Database and used Hibernate Query Language HQL toquery the database Used MongoDB to retrieve most recent transactions of the users Deployed the application as a microservice into Docker container and made easily accessible at runtime using AWS services like EC2 Used AWSS3 buckets for online backup and archiving of the data Implemented Java Message Service JMS to exchange information over reliable channel in an asynchronous way by using Kafka as a message queue Followed Test Driven Development TDD methodology for developing test cases using Junit and Mockito Implemented complete Mavenbuild life cycle to achieve organized application structure and conflict free dependencies in pomxml file and deploy on Tomcat Server Generated reports using JasperReports and interactive visualization using tools such as D3js Implemented Continuous Integration and ContinuousDeployment CICD using Jenkins Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs Hands on with Drools written business rules for credit authorizations Used Splunk DataDog for alert monitoring and querying Intermediate expertise in public cloud platform Amazon web services Comfortable creating scripts for infrastructure automation using cloud native tools Utilized Log4j to debug and record the logs in application Used JIRA tool for Issuebug tracking monitoring of work assignment in the system Developed GIT to track and maintain the different version of the project Environment Java 8 Spring IOC Spring Boot Spring Security Spring AOP Spring Batch Hibernate 4HTML5 CSS3 Ajax Bootstrap 30 Angular 60 JSON OAuth 20 JUnit Mockito Maven Tomcat Kafka JAXRS RESTful SOAP JIRA Micro Services Log4j Mongo DB 35EC2S3IAMDocker Git Jenkins D3js and Spring Tool Suite Java Full Stack Developer Express Scripts Franklin Lakes NJ December 2016 to August 2018 Description The express script a Medicare based company which is setting up the benefits to the individuals depending up on their claims benefits setups there is a client website application used by the accounts team to document client requirements used to install and change the benefits over 60 functional areas Manage status of each client requirement from initial entry point through functional area review and client approval process Responsibilities Developed a Micro Service Oriented applicationwith React JS in the front end and Spring Boot services Involved in development design and implementation front end part of the widget based application using HTML5 CSS3LESS AJAX Bootstrap 40 For clientside view rendering servicesused React JS typically used various predefined Redux libraries Configured ReactRedux for state management and ReactRouter for programmatic navigation Implemented StoreRedux for holding the whole state tree of application and ReducerRedux for describing actions Used AJAX request to data from backend based on user interface input and post updated data back to backend Mocha test runner and Chai test framework are used to test React JS components Web pack module bundler and Babel java script compiler are used accompanying React JS Implemented Spring Boot to create a CRUDoperations backend for our Reactfronted application Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Developed dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Node JS Implemented modules into Node JS to coordinate with plans and necessities Implemented JSON web tokens for authentication and authorization security configurations using Nodejs Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Express JS which is fast assertive essential and moderate web framework of Nodejs that helps manage a sever and routes Integrated Nodejs with Expressjs and communicated with databasefor CRUD operations on the data repository Developed the web application based on the NodeJS micro services architecture using Express and MongoDB Extensive experience in designing MongoDB multishared cluster and monitoring with MMS Junit is implemented along withMokitoto perform unit testing on our RESTful web application Implemented JWT JSON Web Tokens for creating tokens to assert claims in the application and thus providing authentication of RESTful services Published message services using Spring AMQPs Rabbit Template and subscribes to the messages on a POJO using Message Listener Adapter Created dynamic schema design through NOSQLMongo DB by writing rich queriesand achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Developing internal Web Application in GroovyGrails with Mongo DB as a data store Using the IntelliJ Idea 1504 IDE with the latest Grails 311 SDK Java 8 Splunk is implemented in the application for log errors exceptions business logic and log analytics Engineered Splunk to build configure and maintain heterogeneous environments and indepth knowledge of log analysis generated by various systems including security products and worked on setup of various dashboards reports and alerts in Splunk Gradle build tool is used to deploy the application on the web servers ie JBoss Integration of automation batch run job with Jenkins Worked with Jenkins Continuous Integration and Continuous DeploymentCICD Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Developed Kafka consumers to consume data from Kafka topics and integrated Kafka source to read the payment confirmation messages Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Implemented Spring CloudNetflixOSSStack along with using Ribbon for clientside load balancing NetflixZuulApi Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Deployed the Dockerized Spring Boot application that is intended to be run on dev local machine using PCF Pivotal Cloud Foundry Behavioral and Integration testing is done using Cucumber and Selenium respectively EnvironmentJavaScript React JSRedux HTML5 CSS3LESS AJAX Bootstrap jquery Spring Security Rabbit MQ Spring Data Spring Batch Quartz Scheduler Hibernate Spring Boot Microservices Restful services Netflix OSS Eclipse Java EE IDE Jenkins Spring CloudNetflix Splunk Mongo DB MySQL Docker Apache tomcat Jenkins Netflix ZuulApi Ribbon Eureka Hystrix JUnit Mokito Mocha Chai Selenium Cucumber Cassandra DB Cassandra Node Connector Gradle JBoss JIRA JWT WADL Web pack Babel Java Full Stack Developer C2N IT Services 2016 to December 2016 Description C2N offers a range of IT services including infrastructure support software development integration support web development web hosting quality assurance testing cyber security certification accreditation CA services as well as program project management services Built a Java application for a recruitment startup This application was be used by workers and hiring companies As part of the marketing strategy we used referral codes to reward our customers for referring Responsibilities Worked with all phases of SDLC as a scrum member following agile methodology and Test Driven Development TDD Created the frontend web pages using HTML5 CSS 3using SASS Twitter Bootstrap CSS framework media queries and JavaScript to develop the UI for our login and customer enrolment portals Created Dynamic Responsive Designs using HTML5CSS3 using SASS Bootstrap Followed the strict patterns of implementing modelviewcontroller MVC architecture using Angular 2 Framework Design and implementation of accessibility features and collaborating with customer up to date Experience with the features of Angular 2 such as directives modules and routing Used Angular 2 as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed the server side application on Angular 2 platform using JavaScript programming Developed custom Directives in Angular 2 to make reusable components custom views using Bootstrap components and involved in configuring routing for various modules in the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used Hapi JS which is configured on top of Node JS to attain better performance to use built in authentication and authorization techniques Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Developed data tables using AGGridand implemented Sorting Filtering and Pagination functionalities Tested the frontend application using Jasmine and Karma testing frameworks Implemented microservices based architecture using Spring Boot interacting through REST API Worked with ORM frameworks such as Spring Data Worked on various features in ECMAScript 6 ES6 such as Arrow functions Classes and enhanced object literals Used React Router to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Implemented modules into Node JS to coordinate with plans and necessities Authenticated Users accessing RESTful services using Oauth 20 and OIDC Worked with Web pack build tool and automated the process of building using Jenkins for React based frontend application Worked with Spring Cloud and Netflix OSSEureka for service registration and discovery Used spring boot Actuator to externalize applications configuration properties for different environments Proficient in deploying and configuring Elastic search Log Stash KibanaELK and AWS Kinesis for log analytics Worked with AWS IAM service to create various groups and attached appropriate policy documents to the users within that group Designed built and deployed a multitude application utilizing almost all the AWS stack Including EC2 Docker focusing on highavailability fault tolerance and autoscaling Implemented Spring Boot to createCRUDoperations backend for our fronted application Used Spring Boot for developing standalone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server added a RESTful Spring MVC Controller that responds to a request using post used Swagger for describing and documenting the RESTful APIs Developed the application as a Spring Boot App to get range of nonfunctional features Deployed Spring Boot based micro services on Dockercontainers using Amazon ECS and used Docker Hub for registering the Docker images Good Knowledge in documentation of REST APIs using Swagger and WADL Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Worked with Cassandra Node Connector for database persistence to interact with Cassandra NOSQL DB with Spring Data to unify and ease the access to Cassandra persistence stores Maintained structured and surveyed documents within the Cassandra database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Wrote comprehensive test cases and test plans using JUnit Spock and Mockito for backend Wrote complex SQL queries using joins Stored Procedures Functions Triggers cursors and indexes in MySQL database Installed Kafka manager for consumer lags and for monitoring Kafka metrics also this has been used for adding topics partitions Very Proficient Knowledge of JIRA to track issues and communicate with other teams at various environments Used GIT for source code management and worked with Visual Studioand Spring Tool Suite IDEs Professional experience in Log4J for extensible logging debugging and error tracing EnvironmentHTML5 CSS3 SASS 35JQuery 30 ECMAScript 6ES6 Typescript AJAX 41 JSON 3 Bootstrap DOM React v15 Redux NPM 55 Java8 OOPS Lambda expressions Angular 4 Spring MVC Spring Boot v12 Micro Services Apache Kafka v010 Spring Batch v30 Netflix OSSEureka v15 Spring cloud Jenkins v20 PLSQL MySQL DB2 MongoDB v32 Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit Selenium SLF4J Visual Studio STS Jasmine JIRA GIT POSTMANREST Client Jenkins Windows Agile Scrum Java Full Stack Developer MTW Labs Hyderabad Telangana December 2013 to November 2014 Description The project deals with development of a website to enable the people to select the medicines and place order from different pharmacies The agent or the customer chooses any product from the website after registering The admin of the company will see the order accept or deny it When all terms and conditions are satisfied the customeragent will be given the delivery date on which he will be paying the required amount and receiving the product Responsibilities Developed the SOA Service Oriented Architecture application using Spring REST and Jersey to build restbased Web services Developed the web interface for end users using AngularJS along with jQuery and included twoway binding and DOM manipulation Built Web pages those are more userinteractive using jQuery plugins for Drag and Drop Validator AutoComplete AJAX JSON Angular JS Extensively used the JavaScript and jQuery plugin to fetch and display the data on web pages and create interactive features in the application Worked with jQuery concepts like selectors and filters Developed RESTful services that are reusable based on SpringRESTful Services using Jerseyframework Used Spring MVC to develop REST webservices within the application Developed RESTful Web services to create new subscriptionaccount and updating them for mobile value chain in JSON format and consumed RestWeb services from the browser using AngularJS Performed testing for SOAPREST Web services using SoapUI and Postman Rest client Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Configured multiple data source using HibernateSessionManager functionality to provide independent database connectivity Implemented Hibernate EH Cache technique for the critical objects in the application Used Hibernate ORM framework used to interact with database through Hibernate query languageHQL Used Hibernate for connecting the database and mapping the entities by using hibernateannotations Developed components using core Java concepts like Collections Serialization and Java Threads Used Spring MVC Interceptors Spring core modules and native Spring AOP facets of Logging and transactional management Implemented Pivotal Cloud FoundryPCF as a platform as a service for RESTfulservices Provided installation configuration maintenance of preprod and production Cloud environments including servicessuch as Tomcat Apache Jetty MySQL and JIRA Done load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Developed a GUI to help to read the logs generated by the scripts which was created using D3JS jQuery table sorter Used Spring Validation framework to implement the serverside validations and used jQuery calls to get the data from the server asynchronously by using JSON objects Used JMS Java Mailing ServiceAPI to setup mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Develop Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Modules for the Frontend are integrated to Backend using Hibernate framework Implemented Spring Batch for processing large volumes of records including loggingtracing transaction management job processing statistics job restart skip and resource management in the application using Quartzscheduler Implemented validation rules using JBossBRMS Business Rule Management System version of Drools Wrote Test classes using JUnit and EasyMock and test coverage using EMMA plugin Deployed the services using Dockercontainer to host in AWS and utilized AWS platform to upload data into S3 buckets EC2 instances Used Jenkins automation for building pipelines and GitHub repositories using web hooks plugin Environment JavaJ2EE UNIX JBoss 30 Spring core JMeter Cassandra Hibernate Jetty Core java Perl Spring MVC Hibernate SOAPRESTful Web services FileNet Ajax XML AWS jQuery Jersey AngularJS 1x HTML CSS SaaS Google Charts API Git Maven Jenkins DroolsBRE AWS Pivotal Cloud Foundry PCF Java Developer MicroSpark Software Solutions 2012 to December 2013 Description Microspark Software Solutions Inc provides systems integration and data management solutions to commercial and government clients The company offers applications development services and solutions such as systems engineering and technical assistance Responsibilities Designed the user interface screen and its functionality as per user requirements and developed RESTful Web services on Service Oriented Architecture SOA Responsible for Agile Framework implementation and practices Have good working background with J2EE Frameworks like Servlets JSP Worked with BackboneJS as use interface which offers MVC framework and abstracts data into models and bind objects with custom events and also written dynamic logic in model Created responsive UI modules using BackboneJS with hard coded dependency of Underscore JS The Backbone Router and Backbone sync components can help handle navigation throughout an application and syncing data back to a server Used BackboneJS Router for routing client applications and defining URL representation of the applications object Used Jasmine behaviordriven development BDD testing framework and library Sinonfor testing of BackboneJS which included specs representing single example of behavior Developed Thread Safe blocks for multithread access and distributed transaction management Created and injected Spring services controllers and DAOs to achieve dependency injection Heavily used Spring Inheritance Autowiring Core Container Security AOP ORM modules as part of migration from EJB to spring Spring Quartz for scheduling tasks to generate reports and emails to clients Used SOAP UI Postman Rest Client Spring Mock MVC for testing the Web Services Upgraded Spring Rest Controllers and Services classes to support migration to Spring framework Involved inHTML5 CSS code optimization DOMloading and cross browser compatibility Used CSS features such as creating borders and background and used LESSSASS Preprocessor Developed changes on AdobeFlex frontend with changes in business logics on legacy application Implemented REST based Web Services using JAXRS annotations Jersey provider and consumed using HTTP services Used jQuery to create drop downs progressmenu bar and other drag and drop components Experience in Building Web Service Contracts in SOA Service Manager Orchestration performance tuning Developed quality code adhering to Scala coding Standards and best practices Implemented Authentication Authorization with Spring security Used Magento Connector Connecting to Magento API with java using SOAP Used PLSQL stored procedures for applications needed to execute as part of scheduling mechanisms Used Toad to interact with oracle data base performance tuning db execution plans Heavily used joins stored procedures views Unions in Oracle data base to fetch the data Developed Applications using Rule EnginesJboss Drools4xWork flows Human tasks to implement Business rules validations and provided Drools Dashboard for Business users Extensively used Hibernate Relational mappingsOneToMany ManyToMany worked on Hibernate Cache Query Criteria and Transactions Worked with the Node package managerNPM along with Karma Jasmine Grunt and Bower fortest and build Used Maven as build and dependency management tool for creating EAR WAR and JAR file to be deployed in application servers and integrated with SVN Jenkins and Jenkins Jobs Resolved bugsdefects in application by coordinated with team members of the project to assure a positive outcome using JIRA Used GIT as version management developed test cases and performed unit testing using JUnit Environment Web Services Spring Hibernate HTML JSP JavaScript jQuery AJAX CSS3 Angular JS SOAP UI XML WSDL Java J2EE Scala Kafka Agile Methodology JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse CVS and Oracle 11g Education Bachelors in Computer Science and Engineering in SRIT JNTU Hyderabad Telangana Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsf Jsp Servlets net Visual studio C Docker Additional Information TECHNICAL SKILLS Programming Languages Java C C PLSQL Net Web Technologies HTML5 CSS3 JavaScript AJAX JSON Bootstrap jquery Angular2040 React JS with Flux Redux Ember JS Knockout JS Back Bone JS Handlebar JS NodeJS Express JS Hapi JS J2EE Technologies frameworks Servlets EJB JSP JSF JDBC SOAP WSDL REST XML JAXP JAXB JPA JMS Spring3x4x5x Hibernate Spring MVC Spring Boot Spring Data Spring Batch Spring cloud Dump Analysis Databases Oracle 8i9i10g11i DB2 SQL Server 200020052008 MYSQL MongoDB Raven DB Cassandra ApplicationWeb Servers Oracle Web logic IBM Web Sphere JBoss Glassfish Apache Tomcat Messaging Services JMS Active MQ Rabbit MQ IBM MQ Apache kafka Web service frameworks JAXRS JAXWS Apache CXF Axis Jersey Software Methodologies Agile Scrum TDD Waterfall Build Configuration Tools Ant Maven Gradle Jenkins Bamboo Gulp Grunt Webpack NPM Bower Testing Tools Junit TestNG Mockito Jasmine Karma Mocha Chai Spock Protractor Version Control Tools GIT SVN CVS Bitbucket TFS Project Management Tools JIRA Rally Microsoft Project Cloud Technologies DevOps Tools AWS PCF EC2 EBS S3 Docker ECS EBS EKS SQS RDS S3 Glacier Lambda Kubernetes Operating System Windows Linux Unix MAC MSDOS IDEs Eclipse Visual Studio Intellij Spring Tool Suite Sublime Text WinSCP Putty",
    "unique_id": "e28a67cb-ea5b-4c29-bf7d-859dbdecf9dd"
}