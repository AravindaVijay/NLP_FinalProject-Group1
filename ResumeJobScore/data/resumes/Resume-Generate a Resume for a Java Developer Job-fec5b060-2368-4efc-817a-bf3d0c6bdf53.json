{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Vecna Technologies Cambridge MA Highly motivated creative versatile IT professional with 7 years of experience in design and development of clientserver applications using JavaJ2EE technologies Extensive experience in all phases of software development life cycle SDLC including requirements gathering analysis design implementation deployment and support of applications Strong database connectivity skills which include Oracle MYSQL and DB2 and in programming with SQL PLSQL Participates in Agile and Scrum Methodology with daily standups weekly planning games and retrospectives Insight into JavaJ2EE technologies such as Core Java Servlets JSP JDBC spring Hibernate Broad knowledge and hands on experience in Web development using HTML DHTML AJAX CSS JavaScript Jquery Angular JS Bootstrap NodeJS Expertise in frame works like springHibernate Struts and JSF Executes Restful Web services using Spring MVC Rest frameworks Involved in creating and consuming SOAP based and Restful web services using WSDL JAXWS SOAP UIJAXRS and JERSEY framework Experienced in working with Jenkins for Continuous Integration CI and Continuous Deployment CD Involved in automated testing using Selenium JUnit TestNg frameworks Experience in using application servers like Tomcat Web sphere and Glass Fish Experience in implementing persistence layer using JDBC Spring Dao and Hibernate Implemented MVC Frameworks such as spring MVC Extensively working on XML DTD XML Schema XSL XPath DOM and SOAP Exposure to different IDEs like Eclipse IntelliJ and Net Beans Supported Testers with Unit Testing User Acceptance Testing and Bug Fixing Familiar with JBoss Web Application server Significant knowledge of Google Web Toolkit Highly organized with the ability to prioritize workload manage multiple tasks and meet project deadlines by following project standards and routines as per customer specs Authorized to work in the US for any employer Work Experience Full Stack Developer Vecna Technologies Cambridge MA January 2018 to Present Vecna Medicals patient selfservice products include a Patient Portal Patient Kiosk and Patient Queuing The Patient Portal is an online application that patients use to complete administrative tasks such as scheduling appointments registering for appointments paying bills and exchanging secure messages with providers Patients can also view clinical information such as lab results medication and patient problem lists A data exchange platform supports bidirectional data exchange with any brand of hospital EMREHR system via a range of interfaces including HL7 X12 XML and webservices The Patient Kiosk is a hospital kiosk that lets patients review their demographic information verify insurance coverage pay bills and check in at the pointofservice It uses the same data exchange platform as the Patient Portal which allows patients who have completed registration activities online to check in with a barcode Responsibilities Followed Agile Scrum methodology for development of the product Using Atlassian Jira Agile for Agile scrum project managementupdate Implemented the application with XP methodology as Agile process refactoring the existing code and writing new code Developed the web pages Java JavaScript JQuery Angularjs HTML5 CSS and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Developed and consumed restful web services using Apache CXF Framework Worked on Hibernate objectrelational mapping according to database schema Involved in creation of Test Cases for JUnit Testing Performing code deployments to local Tomcat server for testing in Ubuntu Linux environment Worked on Git Repository for code integration and version control Continuous integration using Jenkins on tomcat Used Maven and Ant for Build Automation ensuring proper settings avoidingsolving any errors Participating in and performing Code Reviews andor Pair programming of peer development Executed tasks on XML registry XSLTXQuery and transformation capabilities Worked on AJAX implementation for retrieving the content and display it without reloading the existing page Worked on JSON to populate required modules in jQuery Worked on designing and executing the automation scripts using Selenium Involved in improving the site tuning and performance of webpages by HTTP profiling in chrome and Firefox Developed an HTML parser and then build the DOM tree with that and using this DOM tree one can split out the XML document Environment J2EE Eclipse 3x Java Script JQuery 1x Angularjs 14 nodejs Apache CXF Tomcat 6x CSS AJAX XML XSLT ANT JUNIT WSDL PostgreSQL 9 log4j Jenkins Git JSON Ubuntu Java Full Stack Developer Wells Fargo Richmond CA May 2015 to December 2017 CORE is dynamic web based project that allows Wells Fargo Home Mortgage Lending Team Members to process a loan from originating to funding It helps to process a loan by collecting information from the customers like borrower information Credit Assets Liabilities Purchase price and all other information required to process a loan Core improves the communication between sales and fulfillment team to provide an enhanced experience Responsibilities Involved in Designing front end development using JavaScript Angular JS Framework Worked on configuring Spring MVC with Angular JS using Request Mapping Used Spring Security to implement Single Page Application functionality Developed the Web Interface using AngularJS Java Script HTML5 CSS Used the Spring Rest Services to interact with Business Objects Used ObjectRelational mapping tool HibernateJPA to perform data base activities and transactions Implemented Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Written test plans and test cases setup test configurations and executed the tests for different modules and TestNG used for unit testing Request and Response mapping using Spring AOP from and to the application server by annotation based spring configuration in Eclipse IDE Used Eclipse as IDE for development Used WebStorm to develop Angular JS Pages and integration with the server Used JIRA for creating tasks subtasks and also for defect tracking Performed end to end testing using Protractor and UI testing using Jasmine Module testing using TestNG and Mockito Involved in peer to peer code reviews and cross checked whether coding standards are being followed and performed integration testing of the module Involved in code versioning CheckIn Checkouts and code merging using SubVersion Used Maven to build and deploy application onto JBOSS Application Server Used Java Messaging Services for developing messaging services to interact with different application modules Involved actively in Application Production Support Environment Java J2EE JDK 17 Spring 32 AngularJS 15 HTML CSS JSON Bootstrap MS VISIO Restful Web services Hibernate JMS MAVEN SVN Oracle 10g XML11 JBoss EAP 645 Eclipse Juno TestNG JIRA Senior Java J2EE Developer Beach Body March 2014 to April 2015 Responsibilities Developed spring daemons for different modules involved in the process of publishing documents Participated in Scrum Meetings Developed High level and detailed level design documents based on business requirements provided Designed interactive static HTML using HTML5 and CSS3 as screen level prototype JavaScript for client side validation Used core JAVA to implement data Structures including linked lists stacks queues trees hash tables and different sorting and searching algorithms Used RESTFUL in conjunction with Ajax calls using JAXRS and Jersey Designed and developed the Application using spring and hibernate frame work Enable DSAuthentication for the web Service APIs to make it accessible only for valid users by using spring Interceptors Implement Spring AOP for logging to avoid code redundancy Developed DAO and service layers using the Spring Dao support and hibernate ORM mappings Created interactive websites and website features using JavaScript and JqueryJquery UI Wrote Page level code using JavaScript with Angularjs framework along with JQUERY and other JavaScript libraries NodeJS Develop JUnit test cases for all the functional flows in the application Passes all test cases successfully Developed and implemented Spring and J2EE based MVC ModelViewController Handled response data from RESTFUL web services using XML JSON andJqueryto update UI Interacted with java controllers Jquery Ajax and JSON to writeread data from back end systems Used Eclipse IDE for development configured and deployed the application using ANT and tested using JUnit Developed several REST web services supporting both XML and JSON to perform tasks such as remote thermostat and demandresponse management Restful web services leveraged by both web and mobile applications Created Jenkins jobs and running the jobs to check for any build issues Environment Java 17 JavaScript Spring 405x Hibernate3x JUnit Eclipse Tomcat UNIX Oracle JSF HTML XML Spring MVC Hibernate 30 Log4j Web Sphere 61 REST Services Angular JS Jquery Jenkins JAXRSJAXWS JavaJ2EE Developer 3iInfotech Ltd April 2012 to February 2014 Project AMLock AMLock is a stateoftheart Anti Money Laundering and fraud detection application developed for banks and other financial institutions which helps to achieve compliance with Anti Money Laundering regulations and thereby protect their integrity and reputation AMLock enables Banks and Financial Institutions to process transactions either in realtime or on offline basis and checks for the abnormal behavior of a customer It enables banks to identify those transactions that involve them in illegal transactions and harm their stability and reputation from the viewpoint of money laundering Responsibilities Actively participated in the complete software lifecycle of requirement gathering design development and implementation for various new business features Brainstormed with the team and created the scope and functional specifications to lay out the project phases Worked with the DBA team to develop the initial draft for the data model from the requirements Developed application using JSP HTML CSS Struts framework client side data validations using JavaScript Created Stored Procedures using PlSQL functions triggers in MSSQL server and Oracle to fetch required data Analyze the pattern of transactions for abnormal behavior and generate reports Designed developed and deployed EJB components Session and Message Driven beans Written code for generating reports in PDF using iText Escalate the consolidated report on dailyweekly basis to the respective authority to meet the statutory requirements Used AJAX to load a part of the page dynamically and CSS for styling Implemented localization and customized features for different client requirements Developed prototype versions of the application for enhancement to new domainsector Deployed source code control processes across the CVS Provided implementation support and defect management to ensure a successful golive Documentation of common problems prior to golive and while actively in a Production Support role Provided mentoring for the team members to complete the tasks efficiently and in time Environment Struts12 Java Servlets Java Beans EJB Struts Framework Java JSP AJAX HTML CSS JavaScript MS SQL Server 2000 and Oracle CVS Education Bachelors Skills PHP MySQL ASP Android Javascript",
    "entities": [
        "JBoss Web Application",
        "Business Objects Used ObjectRelational",
        "Oracle CVS Education",
        "AJAX",
        "Responsibilities Actively",
        "Request",
        "XP",
        "WebStorm",
        "Test Cases for JUnit Testing Performing",
        "Cambridge",
        "EMREHR",
        "Brainstormed",
        "HTTP",
        "CVS",
        "Ajax",
        "Insight",
        "Selenium JUnit TestNg",
        "XML",
        "Implemented Hibernate POJO Classes Hibernate Configuration",
        "JUnit",
        "Present Vecna Medicals",
        "JavaJ2EE",
        "JqueryJquery UI",
        "SQL PLSQL Participates",
        "Ant for Build Automation",
        "Developed",
        "Response",
        "Restful",
        "Apache CXF Framework Worked",
        "Richmond",
        "UI Interacted",
        "HTML5",
        "JSP",
        "Patient Portal",
        "DOM",
        "MSSQL",
        "Angular JS",
        "MVC",
        "Agile",
        "EJB",
        "Jenkins for Continuous Integration CI",
        "Net Beans Supported Testers",
        "US",
        "Core Java Servlets JSP JDBC",
        "PDF",
        "SubVersion",
        "CheckIn Checkouts",
        "Oracle",
        "JBOSS Application",
        "RESTFUL",
        "CORE",
        "J2EE",
        "Mockito Involved",
        "Angular JS Pages",
        "JDBC Spring Dao and",
        "JAXRS",
        "HibernateJPA",
        "Java Messaging Services",
        "CSS Struts",
        "HTML DHTML AJAX CSS",
        "Maven",
        "Hibernate Mapping",
        "NodeJS Develop JUnit",
        "The Patient Kiosk",
        "JavaScript",
        "ANT",
        "TestNG",
        "UI",
        "XSLTXQuery",
        "Wells Fargo Home Mortgage Lending Team Members",
        "Continuous Deployment CD Involved",
        "JavaScript Created Stored Procedures",
        "CSS",
        "Tomcat",
        "REST",
        "Selenium Involved",
        "Application",
        "Google Web Toolkit Highly",
        "Application Production Support Environment",
        "MA Highly",
        "Single Page Application",
        "Ubuntu Linux",
        "Patient Portal Patient",
        "Oracle MYSQL"
    ],
    "experience": "Experience in using application servers like Tomcat Web sphere and Glass Fish Experience in implementing persistence layer using JDBC Spring Dao and Hibernate Implemented MVC Frameworks such as spring MVC Extensively working on XML DTD XML Schema XSL XPath DOM and SOAP Exposure to different IDEs like Eclipse IntelliJ and Net Beans Supported Testers with Unit Testing User Acceptance Testing and Bug Fixing Familiar with JBoss Web Application server Significant knowledge of Google Web Toolkit Highly organized with the ability to prioritize workload manage multiple tasks and meet project deadlines by following project standards and routines as per customer specs Authorized to work in the US for any employer Work Experience Full Stack Developer Vecna Technologies Cambridge MA January 2018 to Present Vecna Medicals patient selfservice products include a Patient Portal Patient Kiosk and Patient Queuing The Patient Portal is an online application that patients use to complete administrative tasks such as scheduling appointments registering for appointments paying bills and exchanging secure messages with providers Patients can also view clinical information such as lab results medication and patient problem lists A data exchange platform supports bidirectional data exchange with any brand of hospital EMREHR system via a range of interfaces including HL7 X12 XML and webservices The Patient Kiosk is a hospital kiosk that lets patients review their demographic information verify insurance coverage pay bills and check in at the pointofservice It uses the same data exchange platform as the Patient Portal which allows patients who have completed registration activities online to check in with a barcode Responsibilities Followed Agile Scrum methodology for development of the product Using Atlassian Jira Agile for Agile scrum project managementupdate Implemented the application with XP methodology as Agile process refactoring the existing code and writing new code Developed the web pages Java JavaScript JQuery Angularjs HTML5 CSS and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Developed and consumed restful web services using Apache CXF Framework Worked on Hibernate objectrelational mapping according to database schema Involved in creation of Test Cases for JUnit Testing Performing code deployments to local Tomcat server for testing in Ubuntu Linux environment Worked on Git Repository for code integration and version control Continuous integration using Jenkins on tomcat Used Maven and Ant for Build Automation ensuring proper settings avoidingsolving any errors Participating in and performing Code Reviews andor Pair programming of peer development Executed tasks on XML registry XSLTXQuery and transformation capabilities Worked on AJAX implementation for retrieving the content and display it without reloading the existing page Worked on JSON to populate required modules in jQuery Worked on designing and executing the automation scripts using Selenium Involved in improving the site tuning and performance of webpages by HTTP profiling in chrome and Firefox Developed an HTML parser and then build the DOM tree with that and using this DOM tree one can split out the XML document Environment J2EE Eclipse 3x Java Script JQuery 1x Angularjs 14 nodejs Apache CXF Tomcat 6x CSS AJAX XML XSLT ANT JUNIT WSDL PostgreSQL 9 log4j Jenkins Git JSON Ubuntu Java Full Stack Developer Wells Fargo Richmond CA May 2015 to December 2017 CORE is dynamic web based project that allows Wells Fargo Home Mortgage Lending Team Members to process a loan from originating to funding It helps to process a loan by collecting information from the customers like borrower information Credit Assets Liabilities Purchase price and all other information required to process a loan Core improves the communication between sales and fulfillment team to provide an enhanced experience Responsibilities Involved in Designing front end development using JavaScript Angular JS Framework Worked on configuring Spring MVC with Angular JS using Request Mapping Used Spring Security to implement Single Page Application functionality Developed the Web Interface using AngularJS Java Script HTML5 CSS Used the Spring Rest Services to interact with Business Objects Used ObjectRelational mapping tool HibernateJPA to perform data base activities and transactions Implemented Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Written test plans and test cases setup test configurations and executed the tests for different modules and TestNG used for unit testing Request and Response mapping using Spring AOP from and to the application server by annotation based spring configuration in Eclipse IDE Used Eclipse as IDE for development Used WebStorm to develop Angular JS Pages and integration with the server Used JIRA for creating tasks subtasks and also for defect tracking Performed end to end testing using Protractor and UI testing using Jasmine Module testing using TestNG and Mockito Involved in peer to peer code reviews and cross checked whether coding standards are being followed and performed integration testing of the module Involved in code versioning CheckIn Checkouts and code merging using SubVersion Used Maven to build and deploy application onto JBOSS Application Server Used Java Messaging Services for developing messaging services to interact with different application modules Involved actively in Application Production Support Environment Java J2EE JDK 17 Spring 32 AngularJS 15 HTML CSS JSON Bootstrap MS VISIO Restful Web services Hibernate JMS MAVEN SVN Oracle 10 g XML11 JBoss EAP 645 Eclipse Juno TestNG JIRA Senior Java J2EE Developer Beach Body March 2014 to April 2015 Responsibilities Developed spring daemons for different modules involved in the process of publishing documents Participated in Scrum Meetings Developed High level and detailed level design documents based on business requirements provided Designed interactive static HTML using HTML5 and CSS3 as screen level prototype JavaScript for client side validation Used core JAVA to implement data Structures including linked lists stacks queues trees hash tables and different sorting and searching algorithms Used RESTFUL in conjunction with Ajax calls using JAXRS and Jersey Designed and developed the Application using spring and hibernate frame work Enable DSAuthentication for the web Service APIs to make it accessible only for valid users by using spring Interceptors Implement Spring AOP for logging to avoid code redundancy Developed DAO and service layers using the Spring Dao support and hibernate ORM mappings Created interactive websites and website features using JavaScript and JqueryJquery UI Wrote Page level code using JavaScript with Angularjs framework along with JQUERY and other JavaScript libraries NodeJS Develop JUnit test cases for all the functional flows in the application Passes all test cases successfully Developed and implemented Spring and J2EE based MVC ModelViewController Handled response data from RESTFUL web services using XML JSON andJqueryto update UI Interacted with java controllers Jquery Ajax and JSON to writeread data from back end systems Used Eclipse IDE for development configured and deployed the application using ANT and tested using JUnit Developed several REST web services supporting both XML and JSON to perform tasks such as remote thermostat and demandresponse management Restful web services leveraged by both web and mobile applications Created Jenkins jobs and running the jobs to check for any build issues Environment Java 17 JavaScript Spring 405x Hibernate3x JUnit Eclipse Tomcat UNIX Oracle JSF HTML XML Spring MVC Hibernate 30 Log4j Web Sphere 61 REST Services Angular JS Jquery Jenkins JAXRSJAXWS JavaJ2EE Developer 3iInfotech Ltd April 2012 to February 2014 Project AMLock AMLock is a stateoftheart Anti Money Laundering and fraud detection application developed for banks and other financial institutions which helps to achieve compliance with Anti Money Laundering regulations and thereby protect their integrity and reputation AMLock enables Banks and Financial Institutions to process transactions either in realtime or on offline basis and checks for the abnormal behavior of a customer It enables banks to identify those transactions that involve them in illegal transactions and harm their stability and reputation from the viewpoint of money laundering Responsibilities Actively participated in the complete software lifecycle of requirement gathering design development and implementation for various new business features Brainstormed with the team and created the scope and functional specifications to lay out the project phases Worked with the DBA team to develop the initial draft for the data model from the requirements Developed application using JSP HTML CSS Struts framework client side data validations using JavaScript Created Stored Procedures using PlSQL functions triggers in MSSQL server and Oracle to fetch required data Analyze the pattern of transactions for abnormal behavior and generate reports Designed developed and deployed EJB components Session and Message Driven beans Written code for generating reports in PDF using iText Escalate the consolidated report on dailyweekly basis to the respective authority to meet the statutory requirements Used AJAX to load a part of the page dynamically and CSS for styling Implemented localization and customized features for different client requirements Developed prototype versions of the application for enhancement to new domainsector Deployed source code control processes across the CVS Provided implementation support and defect management to ensure a successful golive Documentation of common problems prior to golive and while actively in a Production Support role Provided mentoring for the team members to complete the tasks efficiently and in time Environment Struts12 Java Servlets Java Beans EJB Struts Framework Java JSP AJAX HTML CSS JavaScript MS SQL Server 2000 and Oracle CVS Education Bachelors Skills PHP MySQL ASP Android Javascript",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "Vecna",
        "Technologies",
        "Cambridge",
        "MA",
        "IT",
        "years",
        "experience",
        "design",
        "development",
        "clientserver",
        "applications",
        "JavaJ2EE",
        "technologies",
        "experience",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "implementation",
        "deployment",
        "support",
        "applications",
        "database",
        "connectivity",
        "skills",
        "Oracle",
        "MYSQL",
        "DB2",
        "programming",
        "SQL",
        "PLSQL",
        "Participates",
        "Agile",
        "Scrum",
        "Methodology",
        "standups",
        "planning",
        "games",
        "Insight",
        "JavaJ2EE",
        "technologies",
        "Core",
        "Java",
        "Servlets",
        "JSP",
        "JDBC",
        "spring",
        "Hibernate",
        "knowledge",
        "hands",
        "experience",
        "Web",
        "development",
        "HTML",
        "DHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Jquery",
        "Angular",
        "JS",
        "Bootstrap",
        "NodeJS",
        "Expertise",
        "frame",
        "Struts",
        "JSF",
        "Restful",
        "Web",
        "services",
        "Spring",
        "MVC",
        "Rest",
        "frameworks",
        "SOAP",
        "web",
        "services",
        "WSDL",
        "JAXWS",
        "SOAP",
        "UIJAXRS",
        "JERSEY",
        "framework",
        "Jenkins",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Deployment",
        "CD",
        "testing",
        "Selenium",
        "JUnit",
        "TestNg",
        "Experience",
        "application",
        "servers",
        "Tomcat",
        "Web",
        "sphere",
        "Glass",
        "Fish",
        "Experience",
        "persistence",
        "layer",
        "JDBC",
        "Spring",
        "Dao",
        "Hibernate",
        "MVC",
        "Frameworks",
        "spring",
        "MVC",
        "XML",
        "DTD",
        "XML",
        "Schema",
        "XSL",
        "XPath",
        "DOM",
        "SOAP",
        "Exposure",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Net",
        "Beans",
        "Testers",
        "Unit",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Bug",
        "Familiar",
        "JBoss",
        "Web",
        "Application",
        "server",
        "knowledge",
        "Google",
        "Web",
        "Toolkit",
        "ability",
        "workload",
        "tasks",
        "project",
        "deadlines",
        "project",
        "standards",
        "routines",
        "customer",
        "specs",
        "US",
        "employer",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Vecna",
        "Technologies",
        "Cambridge",
        "MA",
        "January",
        "Present",
        "Vecna",
        "Medicals",
        "patient",
        "selfservice",
        "products",
        "Patient",
        "Portal",
        "Patient",
        "Kiosk",
        "Patient",
        "Queuing",
        "Patient",
        "Portal",
        "application",
        "patients",
        "tasks",
        "scheduling",
        "appointments",
        "appointments",
        "bills",
        "messages",
        "providers",
        "Patients",
        "information",
        "lab",
        "results",
        "medication",
        "problem",
        "data",
        "exchange",
        "platform",
        "data",
        "exchange",
        "brand",
        "hospital",
        "EMREHR",
        "system",
        "range",
        "interfaces",
        "HL7",
        "X12",
        "XML",
        "Patient",
        "Kiosk",
        "hospital",
        "kiosk",
        "patients",
        "information",
        "insurance",
        "coverage",
        "pay",
        "bills",
        "pointofservice",
        "data",
        "exchange",
        "platform",
        "Patient",
        "Portal",
        "patients",
        "registration",
        "activities",
        "barcode",
        "Responsibilities",
        "Agile",
        "Scrum",
        "methodology",
        "development",
        "product",
        "Atlassian",
        "Jira",
        "Agile",
        "scrum",
        "project",
        "application",
        "XP",
        "methodology",
        "process",
        "code",
        "code",
        "web",
        "pages",
        "Java",
        "JavaScript",
        "JQuery",
        "Angularjs",
        "HTML5",
        "CSS",
        "J2EE",
        "technology",
        "framework",
        "Spring",
        "MVC",
        "JDBC",
        "Hibernate",
        "Web",
        "Services",
        "J2EE",
        "design",
        "patterns",
        "Eclipse",
        "Developed",
        "web",
        "services",
        "Apache",
        "CXF",
        "Framework",
        "Hibernate",
        "mapping",
        "database",
        "schema",
        "creation",
        "Test",
        "Cases",
        "JUnit",
        "Testing",
        "Performing",
        "code",
        "deployments",
        "Tomcat",
        "server",
        "testing",
        "Ubuntu",
        "Linux",
        "environment",
        "Git",
        "Repository",
        "code",
        "integration",
        "version",
        "control",
        "integration",
        "Jenkins",
        "tomcat",
        "Maven",
        "Ant",
        "Build",
        "Automation",
        "settings",
        "errors",
        "Code",
        "Reviews",
        "Pair",
        "programming",
        "peer",
        "development",
        "tasks",
        "XML",
        "registry",
        "XSLTXQuery",
        "transformation",
        "capabilities",
        "AJAX",
        "implementation",
        "content",
        "page",
        "JSON",
        "modules",
        "jQuery",
        "automation",
        "scripts",
        "Selenium",
        "site",
        "tuning",
        "performance",
        "webpages",
        "HTTP",
        "profiling",
        "chrome",
        "Firefox",
        "HTML",
        "parser",
        "DOM",
        "tree",
        "DOM",
        "tree",
        "XML",
        "document",
        "Environment",
        "J2EE",
        "Eclipse",
        "Java",
        "Script",
        "JQuery",
        "1x",
        "Angularjs",
        "Apache",
        "CXF",
        "Tomcat",
        "6x",
        "CSS",
        "AJAX",
        "XML",
        "XSLT",
        "ANT",
        "JUNIT",
        "WSDL",
        "PostgreSQL",
        "log4j",
        "Jenkins",
        "Git",
        "JSON",
        "Ubuntu",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "Richmond",
        "CA",
        "May",
        "December",
        "CORE",
        "web",
        "project",
        "Wells",
        "Fargo",
        "Home",
        "Mortgage",
        "Lending",
        "Team",
        "Members",
        "loan",
        "funding",
        "loan",
        "information",
        "customers",
        "borrower",
        "information",
        "Credit",
        "Assets",
        "Liabilities",
        "Purchase",
        "price",
        "information",
        "loan",
        "Core",
        "communication",
        "sales",
        "fulfillment",
        "team",
        "experience",
        "Responsibilities",
        "end",
        "development",
        "JavaScript",
        "Angular",
        "JS",
        "Framework",
        "Spring",
        "MVC",
        "Angular",
        "JS",
        "Request",
        "Mapping",
        "Spring",
        "Security",
        "Single",
        "Page",
        "Application",
        "functionality",
        "Web",
        "Interface",
        "Java",
        "Script",
        "HTML5",
        "CSS",
        "Spring",
        "Rest",
        "Services",
        "Business",
        "Objects",
        "mapping",
        "tool",
        "HibernateJPA",
        "data",
        "base",
        "activities",
        "transactions",
        "Hibernate",
        "POJO",
        "Classes",
        "Hibernate",
        "Configuration",
        "file",
        "Hibernate",
        "Mapping",
        "files",
        "test",
        "plans",
        "test",
        "cases",
        "setup",
        "test",
        "configurations",
        "tests",
        "modules",
        "TestNG",
        "unit",
        "testing",
        "Request",
        "Response",
        "mapping",
        "Spring",
        "AOP",
        "application",
        "server",
        "annotation",
        "spring",
        "configuration",
        "Eclipse",
        "IDE",
        "Eclipse",
        "IDE",
        "development",
        "WebStorm",
        "JS",
        "Pages",
        "integration",
        "server",
        "JIRA",
        "tasks",
        "subtasks",
        "defect",
        "Performed",
        "end",
        "end",
        "testing",
        "Protractor",
        "UI",
        "testing",
        "Jasmine",
        "Module",
        "testing",
        "TestNG",
        "Mockito",
        "peer",
        "peer",
        "code",
        "reviews",
        "cross",
        "standards",
        "integration",
        "testing",
        "module",
        "code",
        "CheckIn",
        "Checkouts",
        "code",
        "merging",
        "SubVersion",
        "Used",
        "Maven",
        "application",
        "JBOSS",
        "Application",
        "Server",
        "Java",
        "Messaging",
        "Services",
        "services",
        "application",
        "modules",
        "Application",
        "Production",
        "Support",
        "Environment",
        "Java",
        "J2EE",
        "JDK",
        "Spring",
        "HTML",
        "CSS",
        "JSON",
        "Bootstrap",
        "MS",
        "VISIO",
        "Restful",
        "Web",
        "services",
        "Hibernate",
        "JMS",
        "MAVEN",
        "SVN",
        "Oracle",
        "g",
        "XML11",
        "JBoss",
        "EAP",
        "Eclipse",
        "Juno",
        "TestNG",
        "JIRA",
        "Senior",
        "Java",
        "J2EE",
        "Developer",
        "Beach",
        "Body",
        "March",
        "April",
        "Responsibilities",
        "spring",
        "daemons",
        "modules",
        "process",
        "documents",
        "Scrum",
        "Meetings",
        "level",
        "level",
        "design",
        "documents",
        "business",
        "requirements",
        "HTML",
        "HTML5",
        "CSS3",
        "screen",
        "level",
        "prototype",
        "JavaScript",
        "client",
        "side",
        "validation",
        "core",
        "data",
        "Structures",
        "lists",
        "queues",
        "trees",
        "hash",
        "tables",
        "sorting",
        "algorithms",
        "RESTFUL",
        "conjunction",
        "calls",
        "JAXRS",
        "Jersey",
        "Designed",
        "Application",
        "spring",
        "hibernate",
        "frame",
        "work",
        "Enable",
        "DSAuthentication",
        "web",
        "Service",
        "APIs",
        "users",
        "spring",
        "Interceptors",
        "Implement",
        "Spring",
        "AOP",
        "code",
        "redundancy",
        "Developed",
        "DAO",
        "service",
        "layers",
        "Spring",
        "Dao",
        "support",
        "hibernate",
        "ORM",
        "mappings",
        "websites",
        "website",
        "features",
        "JavaScript",
        "JqueryJquery",
        "UI",
        "Wrote",
        "Page",
        "level",
        "code",
        "JavaScript",
        "Angularjs",
        "framework",
        "JQUERY",
        "JavaScript",
        "NodeJS",
        "Develop",
        "JUnit",
        "test",
        "cases",
        "flows",
        "application",
        "test",
        "cases",
        "Spring",
        "J2EE",
        "MVC",
        "ModelViewController",
        "response",
        "data",
        "RESTFUL",
        "web",
        "services",
        "XML",
        "JSON",
        "UI",
        "controllers",
        "Jquery",
        "Ajax",
        "JSON",
        "data",
        "end",
        "systems",
        "Eclipse",
        "IDE",
        "development",
        "application",
        "ANT",
        "JUnit",
        "REST",
        "web",
        "services",
        "XML",
        "JSON",
        "tasks",
        "thermostat",
        "demandresponse",
        "management",
        "Restful",
        "web",
        "services",
        "web",
        "applications",
        "Jenkins",
        "jobs",
        "jobs",
        "build",
        "issues",
        "Environment",
        "Java",
        "JavaScript",
        "Spring",
        "405x",
        "Hibernate3x",
        "JUnit",
        "Eclipse",
        "Tomcat",
        "UNIX",
        "Oracle",
        "JSF",
        "HTML",
        "XML",
        "Spring",
        "MVC",
        "Hibernate",
        "Log4j",
        "Web",
        "Sphere",
        "REST",
        "Services",
        "Angular",
        "JS",
        "Jquery",
        "Jenkins",
        "JAXRSJAXWS",
        "JavaJ2EE",
        "Developer",
        "Ltd",
        "April",
        "February",
        "Project",
        "AMLock",
        "AMLock",
        "Anti",
        "Money",
        "Laundering",
        "fraud",
        "detection",
        "application",
        "banks",
        "institutions",
        "compliance",
        "Anti",
        "Money",
        "Laundering",
        "regulations",
        "integrity",
        "reputation",
        "AMLock",
        "Banks",
        "Financial",
        "Institutions",
        "transactions",
        "realtime",
        "basis",
        "checks",
        "behavior",
        "customer",
        "banks",
        "transactions",
        "transactions",
        "stability",
        "reputation",
        "viewpoint",
        "money",
        "laundering",
        "Responsibilities",
        "software",
        "lifecycle",
        "requirement",
        "gathering",
        "design",
        "development",
        "implementation",
        "business",
        "team",
        "scope",
        "specifications",
        "project",
        "DBA",
        "team",
        "draft",
        "data",
        "model",
        "requirements",
        "application",
        "JSP",
        "HTML",
        "CSS",
        "Struts",
        "framework",
        "client",
        "side",
        "data",
        "validations",
        "JavaScript",
        "Created",
        "Stored",
        "Procedures",
        "PlSQL",
        "functions",
        "triggers",
        "MSSQL",
        "server",
        "Oracle",
        "data",
        "pattern",
        "transactions",
        "behavior",
        "reports",
        "EJB",
        "components",
        "Session",
        "Message",
        "Driven",
        "beans",
        "code",
        "generating",
        "reports",
        "PDF",
        "iText",
        "Escalate",
        "report",
        "basis",
        "authority",
        "requirements",
        "AJAX",
        "part",
        "page",
        "CSS",
        "localization",
        "features",
        "client",
        "requirements",
        "prototype",
        "versions",
        "application",
        "enhancement",
        "domainsector",
        "Deployed",
        "source",
        "code",
        "control",
        "processes",
        "CVS",
        "implementation",
        "support",
        "management",
        "Documentation",
        "problems",
        "Production",
        "Support",
        "role",
        "mentoring",
        "team",
        "members",
        "tasks",
        "time",
        "Environment",
        "Struts12",
        "Java",
        "Servlets",
        "Java",
        "Beans",
        "EJB",
        "Struts",
        "Framework",
        "Java",
        "JSP",
        "AJAX",
        "HTML",
        "CSS",
        "JavaScript",
        "MS",
        "SQL",
        "Server",
        "Oracle",
        "CVS",
        "Education",
        "Bachelors",
        "Skills",
        "PHP",
        "MySQL",
        "ASP",
        "Android",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:10:21.467736",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Vecna Technologies Cambridge MA Highly motivated creative versatile IT professional with 7 years of experience in design and development of clientserver applications using JavaJ2EE technologies Extensive experience in all phases of software development life cycle SDLC including requirements gathering analysis design implementation deployment and support of applications Strong database connectivity skills which include Oracle MYSQL and DB2 and in programming with SQL PLSQL Participates in Agile and Scrum Methodology with daily standups weekly planning games and retrospectives Insight into JavaJ2EE technologies such as Core Java Servlets JSP JDBC spring Hibernate Broad knowledge and hands on experience in Web development using HTML DHTML AJAX CSS JavaScript Jquery Angular JS Bootstrap NodeJS Expertise in frame works like springHibernate Struts and JSF Executes Restful Web services using Spring MVC Rest frameworks Involved in creating and consuming SOAP based and Restful web services using WSDL JAXWS SOAP UIJAXRS and JERSEY framework Experienced in working with Jenkins for Continuous Integration CI and Continuous Deployment CD Involved in automated testing using Selenium JUnit TestNg frameworks Experience in using application servers like Tomcat Web sphere and Glass Fish Experience in implementing persistence layer using JDBC Spring Dao and Hibernate Implemented MVC Frameworks such as spring MVC Extensively working on XML DTD XML Schema XSL XPath DOM and SOAP Exposure to different IDEs like Eclipse IntelliJ and Net Beans Supported Testers with Unit Testing User Acceptance Testing and Bug Fixing Familiar with JBoss Web Application server Significant knowledge of Google Web Toolkit Highly organized with the ability to prioritize workload manage multiple tasks and meet project deadlines by following project standards and routines as per customer specs Authorized to work in the US for any employer Work Experience Full Stack Developer Vecna Technologies Cambridge MA January 2018 to Present Vecna Medicals patient selfservice products include a Patient Portal Patient Kiosk and Patient Queuing The Patient Portal is an online application that patients use to complete administrative tasks such as scheduling appointments registering for appointments paying bills and exchanging secure messages with providers Patients can also view clinical information such as lab results medication and patient problem lists A data exchange platform supports bidirectional data exchange with any brand of hospital EMREHR system via a range of interfaces including HL7 X12 XML and webservices The Patient Kiosk is a hospital kiosk that lets patients review their demographic information verify insurance coverage pay bills and check in at the pointofservice It uses the same data exchange platform as the Patient Portal which allows patients who have completed registration activities online to check in with a barcode Responsibilities Followed Agile Scrum methodology for development of the product Using Atlassian Jira Agile for Agile scrum project managementupdate Implemented the application with XP methodology as Agile process refactoring the existing code and writing new code Developed the web pages Java JavaScript JQuery Angularjs HTML5 CSS and J2EE technology framework using Spring 2 MVC JDBC Hibernate and Web Services with J2EE design patterns using Eclipse Developed and consumed restful web services using Apache CXF Framework Worked on Hibernate objectrelational mapping according to database schema Involved in creation of Test Cases for JUnit Testing Performing code deployments to local Tomcat server for testing in Ubuntu Linux environment Worked on Git Repository for code integration and version control Continuous integration using Jenkins on tomcat Used Maven and Ant for Build Automation ensuring proper settings avoidingsolving any errors Participating in and performing Code Reviews andor Pair programming of peer development Executed tasks on XML registry XSLTXQuery and transformation capabilities Worked on AJAX implementation for retrieving the content and display it without reloading the existing page Worked on JSON to populate required modules in jQuery Worked on designing and executing the automation scripts using Selenium Involved in improving the site tuning and performance of webpages by HTTP profiling in chrome and Firefox Developed an HTML parser and then build the DOM tree with that and using this DOM tree one can split out the XML document Environment J2EE Eclipse 3x Java Script JQuery 1x Angularjs 14 nodejs Apache CXF Tomcat 6x CSS AJAX XML XSLT ANT JUNIT WSDL PostgreSQL 9 log4j Jenkins Git JSON Ubuntu Java Full Stack Developer Wells Fargo Richmond CA May 2015 to December 2017 CORE is dynamic web based project that allows Wells Fargo Home Mortgage Lending Team Members to process a loan from originating to funding It helps to process a loan by collecting information from the customers like borrower information Credit Assets Liabilities Purchase price and all other information required to process a loan Core improves the communication between sales and fulfillment team to provide an enhanced experience Responsibilities Involved in Designing front end development using JavaScript Angular JS Framework Worked on configuring Spring MVC with Angular JS using Request Mapping Used Spring Security to implement Single Page Application functionality Developed the Web Interface using AngularJS Java Script HTML5 CSS Used the Spring Rest Services to interact with Business Objects Used ObjectRelational mapping tool HibernateJPA to perform data base activities and transactions Implemented Hibernate POJO Classes Hibernate Configuration file and Hibernate Mapping files Written test plans and test cases setup test configurations and executed the tests for different modules and TestNG used for unit testing Request and Response mapping using Spring AOP from and to the application server by annotation based spring configuration in Eclipse IDE Used Eclipse as IDE for development Used WebStorm to develop Angular JS Pages and integration with the server Used JIRA for creating tasks subtasks and also for defect tracking Performed end to end testing using Protractor and UI testing using Jasmine Module testing using TestNG and Mockito Involved in peer to peer code reviews and cross checked whether coding standards are being followed and performed integration testing of the module Involved in code versioning CheckIn Checkouts and code merging using SubVersion Used Maven to build and deploy application onto JBOSS Application Server Used Java Messaging Services for developing messaging services to interact with different application modules Involved actively in Application Production Support Environment Java J2EE JDK 17 Spring 32 AngularJS 15 HTML CSS JSON Bootstrap MS VISIO Restful Web services Hibernate JMS MAVEN SVN Oracle 10g XML11 JBoss EAP 645 Eclipse Juno TestNG JIRA Senior Java J2EE Developer Beach Body March 2014 to April 2015 Responsibilities Developed spring daemons for different modules involved in the process of publishing documents Participated in Scrum Meetings Developed High level and detailed level design documents based on business requirements provided Designed interactive static HTML using HTML5 and CSS3 as screen level prototype JavaScript for client side validation Used core JAVA to implement data Structures including linked lists stacks queues trees hash tables and different sorting and searching algorithms Used RESTFUL in conjunction with Ajax calls using JAXRS and Jersey Designed and developed the Application using spring and hibernate frame work Enable DSAuthentication for the web Service APIs to make it accessible only for valid users by using spring Interceptors Implement Spring AOP for logging to avoid code redundancy Developed DAO and service layers using the Spring Dao support and hibernate ORM mappings Created interactive websites and website features using JavaScript and JqueryJquery UI Wrote Page level code using JavaScript with Angularjs framework along with JQUERY and other JavaScript libraries NodeJS Develop JUnit test cases for all the functional flows in the application Passes all test cases successfully Developed and implemented Spring and J2EE based MVC ModelViewController Handled response data from RESTFUL web services using XML JSON andJqueryto update UI Interacted with java controllers Jquery Ajax and JSON to writeread data from back end systems Used Eclipse IDE for development configured and deployed the application using ANT and tested using JUnit Developed several REST web services supporting both XML and JSON to perform tasks such as remote thermostat and demandresponse management Restful web services leveraged by both web and mobile applications Created Jenkins jobs and running the jobs to check for any build issues Environment Java 17 JavaScript Spring 405x Hibernate3x JUnit Eclipse Tomcat UNIX Oracle JSF HTML XML Spring MVC Hibernate 30 Log4j Web Sphere 61 REST Services Angular JS Jquery Jenkins JAXRSJAXWS JavaJ2EE Developer 3iInfotech Ltd April 2012 to February 2014 Project AMLock AMLock is a stateoftheart Anti Money Laundering and fraud detection application developed for banks and other financial institutions which helps to achieve compliance with Anti Money Laundering regulations and thereby protect their integrity and reputation AMLock enables Banks and Financial Institutions to process transactions either in realtime or on offline basis and checks for the abnormal behavior of a customer It enables banks to identify those transactions that involve them in illegal transactions and harm their stability and reputation from the viewpoint of money laundering Responsibilities Actively participated in the complete software lifecycle of requirement gathering design development and implementation for various new business features Brainstormed with the team and created the scope and functional specifications to lay out the project phases Worked with the DBA team to develop the initial draft for the data model from the requirements Developed application using JSP HTML CSS Struts framework client side data validations using JavaScript Created Stored Procedures using PlSQL functions triggers in MSSQL server and Oracle to fetch required data Analyze the pattern of transactions for abnormal behavior and generate reports Designed developed and deployed EJB components Session and Message Driven beans Written code for generating reports in PDF using iText Escalate the consolidated report on dailyweekly basis to the respective authority to meet the statutory requirements Used AJAX to load a part of the page dynamically and CSS for styling Implemented localization and customized features for different client requirements Developed prototype versions of the application for enhancement to new domainsector Deployed source code control processes across the CVS Provided implementation support and defect management to ensure a successful golive Documentation of common problems prior to golive and while actively in a Production Support role Provided mentoring for the team members to complete the tasks efficiently and in time Environment Struts12 Java Servlets Java Beans EJB Struts Framework Java JSP AJAX HTML CSS JavaScript MS SQL Server 2000 and Oracle CVS Education Bachelors Skills PHP MySQL ASP Android Javascript",
    "unique_id": "fec5b060-2368-4efc-817a-bf3d0c6bdf53"
}