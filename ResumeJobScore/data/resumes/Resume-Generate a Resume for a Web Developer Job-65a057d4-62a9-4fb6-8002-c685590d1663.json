{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Liberty Mutual Insurance Philadelphia PA Work Experience Sr Python Developer Liberty Mutual Insurance Philadelphia PA April 2016 to Present Responsibilities Mainly used Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Developed an embedded software data driven test automation framework in Linux Python Designed test cases and authored test plans Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Python with OpenStack OpenERP now ODOO SQL Alchemy DJango CMS etc Provide team guidance from agile experiencelearning and daytoday support to the scrum team Configured SiteMinder web agents Affiliate agents and RADIUS agents to provide federation of web services in the SSO environment Developed website based on Django CMS Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Dell Computer Corporation Philadelphia PA October 2014 to March 2016 Responsibilities Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets and Action classes Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less BootstrapJs JavaScript JQuery JSON and AJAX Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implementation of fully API based SSO architecture using CA SiteMinder CA IDM PingFederate and Radiant Logic Virtual Directory Server which accomplishes end applications integration with SSO easier Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Mercedes Benz Credit Corporation Philadelphia PA October 2013 to September 2014 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Created UI using JavaScript and HTML and CSS Also involved in the analysis and design of application Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango and created backend database TSQL stored procedures and Jasper Reports Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from Python using Python MySQL connector and MySQL dB package Worked in various front end tools like HTML CSS JavaScript XML JQuery Angular JS and AJAX Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Seattle WA April 2012 to August 2013 Responsibilities Coding and implementation of routing software for handling customer queries and rerouting to appropriate divisions The customers calls are automatically answered and place into a holding the queue until an agent becomes available Involved in the code and requirement reviews of work products developed by team members Involved in Application development with C and python on IDE Tool Eclipse and web server Tomcat Writing stored procedures in SQL Server and integrated into the application to access the customers calls departments data from databases and store the customers calls departments data into database Developed coded tested debugged and deployed webservices MQ for the input and output forms on the webservices Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Implementing and extending functionality of Cisco Cloud Services and Open stack Horizon using Python Django Django REST framework JavaScript HTML JQuery CSS and AngularJS Create and enhanced existing automated solutions Parse JSON and XML data using Python Responsible for debugging and troubleshooting the web application Implementation under Red Hat CentOS7 Ubuntu and Windows 7 both locally and on Cisco Cloud Team working and version control using Gerrit Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts Gerrit buggingagile Restfull UNIX and Windows Program Analyst Bitra Net Pvt Ltd Denver CO March 2009 to February 2012 Responsibilities Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the client side validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Used JQuery for all client side Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Software Developer Innovative Solutions Reston VA September 2007 to February 2009 Responsibilities Used Django framework to develop entire frontend and backend modules in Python Developed Unit test cases to check the functionality of new code by using unittest Python library Designed and developed data management system using MySQL Involved in development of SQL and stored procedures on MySQL Created database by using MySQL and wrote several SQL queries to extract data from database and wrote queries for performing various CRUD operations includes create read update and delete operations Rewrite existing Python Django module to deliver certain data format of data Experience in designing coding and developing the application in python using Django MVC Used Django Database APIs to access database objects Designed and developed UseCase Diagrams Class Diagrams Object Diagrams using UML Rational Rose for OOAOOD techniques Programmed the components using CC Software release to internal clients by compiling the code into CC libraries and implementing the APIs Created UI using HTML CSS and Javascript Created Servlets and Beans to implement Business Logic Used SAXDOM Parser for parsing the data to Oracle Database Implemented the presentation layer with HTML DHTML AJAX CSS and JavaScript Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Designed and created backend data access modules using PLSQL stored procedures and Oracle Developed and executed User Acceptance Testing portion of test plan Debugging Software for Bugs Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Used Django framework for application development Created entire application using Python MySQL and Linux Enhanced existing automated solutions such as the Editorial Tool for automated request reporting and the Whos Who site by adding new features and fixing bugs Created database using MySQL wrote several queries to extractstore data Used Perforce for the version control Environment C C HTML CSS Shell Scripting PLSQL JDBC PVCS Oracle Linux and Windows Python Django MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Perforce Education Masters in Masters in Science Western Washington University Skills Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL BIG DATA Python Framework Django Databases MySQL SQL Server 2008 Oracle 10g Web Technologies AJAX JavaScript HTML DHTML XHTML XML Versioning Tools Subversion GIT Perforce SVN CVS Web servers Apache IIS Operating systems LinuxUnix Windows",
    "entities": [
        "CSS HTML JavaScript",
        "RADIUS",
        "GUI",
        "HTML AJAX CSS",
        "UNIX",
        "Net Pvt Ltd",
        "IDE Tool Eclipse",
        "UML Rational Rose for Object Oriented AnalysisObject Oriented Design",
        "Interfacing",
        "Working",
        "REST JSON",
        "Object Diagrams",
        "OpenStack",
        "Design Development and Deployment Testing and Implementation",
        "Python Developer GE Energy",
        "XML",
        "JavaScript Implemented",
        "SSO",
        "HTML CSS JavaScript XML JQuery Angular JS",
        "Present Responsibilities Mainly",
        "Shell",
        "CC",
        "Gerrit Environment Python Django XML",
        "Creation of Python",
        "Radiant Logic Virtual Directory Server",
        "UseCase Diagrams Class Diagrams Object Diagrams",
        "Python",
        "SQL Server",
        "Create",
        "Amazon AWS S3",
        "Developed",
        "UML Rational Rose for OOAOOD",
        "JIRA Creating",
        "Bash",
        "PayPal Holdings Inc",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Responsibilities Created UI",
        "Developed Business Logic",
        "Git",
        "MQ",
        "Django CMS Responsible",
        "HTML CSS JQuery JSON",
        "HTML5",
        "JavaScript Involved",
        "API RESTful Web Service",
        "Created Data",
        "Developed Unit Integration",
        "Done Job",
        "DOM",
        "RDS",
        "Affiliate",
        "Views",
        "XML BIG DATA",
        "PyQt",
        "MVC",
        "PythonDjango",
        "GIT",
        "Parse JSON",
        "HTML CSS",
        "API",
        "Oracle Developed",
        "Debugging Software",
        "Created",
        "BDD",
        "Science Western Washington University",
        "Djangos Test Module Used Django",
        "Bash Designed",
        "Cisco Cloud Services",
        "Seattle",
        "Windows Program",
        "HTML",
        "GitHub Build",
        "SQL",
        "Provided GUI",
        "Fiddler",
        "lPythonspan",
        "Python Django",
        "Wireshark",
        "Amazon AWS",
        "Pandas",
        "Mercedes Benz Credit Corporation",
        "CRUD",
        "API Integration Implementation of fully",
        "HTML DHTML AJAX CSS",
        "Cisco Cloud Team",
        "CC Software",
        "RESTFull API like Twilio Facebook",
        "Created UI",
        "Python Responsible",
        "Djangos",
        "JavaScript",
        "UI",
        "AJAX Created Python",
        "Python Bootstrap CSS",
        "JSP Servlets",
        "Python Developed Unit",
        "Django Database",
        "SVN",
        "CSS",
        "Linux Perforce Education Masters",
        "LinuxUnix Windows",
        "Oracle Database Designed",
        "Oracle Database Implemented",
        "MySQL Created",
        "PHP",
        "Javascript Created Servlets",
        "Djangocms",
        "BIG DATA Created Business Logic"
    ],
    "experience": "Experience Sr Python Developer Liberty Mutual Insurance Philadelphia PA April 2016 to Present Responsibilities Mainly used Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Developed an embedded software data driven test automation framework in Linux Python Designed test cases and authored test plans Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Python with OpenStack OpenERP now ODOO SQL Alchemy DJango CMS etc Provide team guidance from agile experiencelearning and daytoday support to the scrum team Configured SiteMinder web agents Affiliate agents and RADIUS agents to provide federation of web services in the SSO environment Developed website based on Django CMS Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Dell Computer Corporation Philadelphia PA October 2014 to March 2016 Responsibilities Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets and Action classes Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less BootstrapJs JavaScript JQuery JSON and AJAX Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implementation of fully API based SSO architecture using CA SiteMinder CA IDM PingFederate and Radiant Logic Virtual Directory Server which accomplishes end applications integration with SSO easier Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Mercedes Benz Credit Corporation Philadelphia PA October 2013 to September 2014 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Created UI using JavaScript and HTML and CSS Also involved in the analysis and design of application Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango and created backend database TSQL stored procedures and Jasper Reports Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from Python using Python MySQL connector and MySQL dB package Worked in various front end tools like HTML CSS JavaScript XML JQuery Angular JS and AJAX Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Seattle WA April 2012 to August 2013 Responsibilities Coding and implementation of routing software for handling customer queries and rerouting to appropriate divisions The customers calls are automatically answered and place into a holding the queue until an agent becomes available Involved in the code and requirement reviews of work products developed by team members Involved in Application development with C and python on IDE Tool Eclipse and web server Tomcat Writing stored procedures in SQL Server and integrated into the application to access the customers calls departments data from databases and store the customers calls departments data into database Developed coded tested debugged and deployed webservices MQ for the input and output forms on the webservices Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Implementing and extending functionality of Cisco Cloud Services and Open stack Horizon using Python Django Django REST framework JavaScript HTML JQuery CSS and AngularJS Create and enhanced existing automated solutions Parse JSON and XML data using Python Responsible for debugging and troubleshooting the web application Implementation under Red Hat CentOS7 Ubuntu and Windows 7 both locally and on Cisco Cloud Team working and version control using Gerrit Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts Gerrit buggingagile Restfull UNIX and Windows Program Analyst Bitra Net Pvt Ltd Denver CO March 2009 to February 2012 Responsibilities Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the client side validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Used JQuery for all client side Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Software Developer Innovative Solutions Reston VA September 2007 to February 2009 Responsibilities Used Django framework to develop entire frontend and backend modules in Python Developed Unit test cases to check the functionality of new code by using unittest Python library Designed and developed data management system using MySQL Involved in development of SQL and stored procedures on MySQL Created database by using MySQL and wrote several SQL queries to extract data from database and wrote queries for performing various CRUD operations includes create read update and delete operations Rewrite existing Python Django module to deliver certain data format of data Experience in designing coding and developing the application in python using Django MVC Used Django Database APIs to access database objects Designed and developed UseCase Diagrams Class Diagrams Object Diagrams using UML Rational Rose for OOAOOD techniques Programmed the components using CC Software release to internal clients by compiling the code into CC libraries and implementing the APIs Created UI using HTML CSS and Javascript Created Servlets and Beans to implement Business Logic Used SAXDOM Parser for parsing the data to Oracle Database Implemented the presentation layer with HTML DHTML AJAX CSS and JavaScript Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Designed and created backend data access modules using PLSQL stored procedures and Oracle Developed and executed User Acceptance Testing portion of test plan Debugging Software for Bugs Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Used Django framework for application development Created entire application using Python MySQL and Linux Enhanced existing automated solutions such as the Editorial Tool for automated request reporting and the Who s Who site by adding new features and fixing bugs Created database using MySQL wrote several queries to extractstore data Used Perforce for the version control Environment C C HTML CSS Shell Scripting PLSQL JDBC PVCS Oracle Linux and Windows Python Django MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Perforce Education Masters in Masters in Science Western Washington University Skills Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL BIG DATA Python Framework Django Databases MySQL SQL Server 2008 Oracle 10 g Web Technologies AJAX JavaScript HTML DHTML XHTML XML Versioning Tools Subversion GIT Perforce SVN CVS Web servers Apache IIS Operating systems LinuxUnix Windows",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Liberty",
        "Mutual",
        "Insurance",
        "Philadelphia",
        "PA",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Liberty",
        "Mutual",
        "Insurance",
        "Philadelphia",
        "PA",
        "April",
        "Present",
        "Responsibilities",
        "Python",
        "libraries",
        "matplotlib",
        "charts",
        "graphs",
        "MySQL",
        "database",
        "connectivity",
        "Python",
        "twitter",
        "PySide",
        "Pickle",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "software",
        "data",
        "test",
        "automation",
        "framework",
        "Linux",
        "Python",
        "test",
        "cases",
        "test",
        "plans",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Python",
        "OpenStack",
        "OpenERP",
        "SQL",
        "Alchemy",
        "DJango",
        "CMS",
        "team",
        "guidance",
        "experiencelearning",
        "daytoday",
        "support",
        "scrum",
        "team",
        "Configured",
        "SiteMinder",
        "web",
        "agents",
        "Affiliate",
        "agents",
        "RADIUS",
        "agents",
        "federation",
        "web",
        "services",
        "SSO",
        "environment",
        "website",
        "Django",
        "CMS",
        "Responsible",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "Database",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "experience",
        "BIG",
        "DATA",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Djangocms",
        "SSO",
        "database",
        "access",
        "Djangocms",
        "plugins",
        "Bootstrap",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Agile",
        "JavaScript",
        "Eclipse",
        "Weblogic",
        "Git",
        "GitHub",
        "Junit",
        "Agile",
        "UML",
        "JSP",
        "Xml",
        "SOA",
        "Sr",
        "Python",
        "Developer",
        "Dell",
        "Computer",
        "Corporation",
        "Philadelphia",
        "PA",
        "October",
        "March",
        "Responsibilities",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "Developed",
        "MVC",
        "Architectural",
        "Pattern",
        "Struts",
        "Framework",
        "JSP",
        "Servlets",
        "Action",
        "classes",
        "client",
        "website",
        "DJANGO",
        "CMS",
        "system",
        "website",
        "UI",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "JSON",
        "AJAX",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Implementation",
        "API",
        "SSO",
        "architecture",
        "CA",
        "SiteMinder",
        "CA",
        "IDM",
        "PingFederate",
        "Radiant",
        "Logic",
        "Virtual",
        "Directory",
        "Server",
        "end",
        "applications",
        "integration",
        "SSO",
        "requirement",
        "gathering",
        "architect",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "BIG",
        "DATA",
        "tasks",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "UWSGI",
        "SQL",
        "admin",
        "tools",
        "BDD",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Creation",
        "Python",
        "scripts",
        "data",
        "access",
        "analysis",
        "Scripts",
        "DataFeeds",
        "XLS",
        "FIXML",
        "process",
        "system",
        "monitoring",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "UI",
        "website",
        "HTML5",
        "XHTML",
        "AJAX",
        "CSS3",
        "BIG",
        "DATA",
        "JavaScript",
        "client",
        "side",
        "validation",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Git",
        "repository",
        "project",
        "GitHub",
        "Build",
        "development",
        "environment",
        "JIRA",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Angularjs",
        "Bootstrap",
        "Bash",
        "PyQt",
        "XML",
        "Shell",
        "Scripting",
        "MySQL",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Jenkins",
        "Apache",
        "Web",
        "Server",
        "Linux",
        "Python",
        "Developer",
        "Mercedes",
        "Benz",
        "Credit",
        "Corporation",
        "Philadelphia",
        "PA",
        "October",
        "September",
        "PayPal",
        "Holdings",
        "Inc",
        "company",
        "payments",
        "Online",
        "money",
        "transfers",
        "alternatives",
        "paper",
        "methods",
        "checks",
        "money",
        "orders",
        "Responsibilities",
        "UI",
        "JavaScript",
        "HTML",
        "CSS",
        "analysis",
        "design",
        "application",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "business",
        "logic",
        "PythonDjango",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "millions",
        "database",
        "records",
        "basis",
        "errors",
        "data",
        "patterns",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "BIG",
        "DATA",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Django",
        "APIs",
        "database",
        "access",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "backend",
        "client",
        "web",
        "application",
        "Python",
        "information",
        "XML",
        "files",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "XSD",
        "XSLT",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "vendors",
        "queries",
        "GIT",
        "version",
        "control",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "CSS",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "Python",
        "Developer",
        "GE",
        "Energy",
        "Seattle",
        "WA",
        "April",
        "August",
        "Responsibilities",
        "Coding",
        "implementation",
        "software",
        "customer",
        "queries",
        "divisions",
        "customers",
        "place",
        "queue",
        "agent",
        "code",
        "requirement",
        "reviews",
        "work",
        "products",
        "team",
        "members",
        "Application",
        "development",
        "C",
        "python",
        "IDE",
        "Tool",
        "Eclipse",
        "web",
        "server",
        "Tomcat",
        "procedures",
        "SQL",
        "Server",
        "application",
        "customers",
        "departments",
        "data",
        "databases",
        "customers",
        "departments",
        "data",
        "database",
        "Developed",
        "webservices",
        "MQ",
        "input",
        "output",
        "forms",
        "webservices",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Django",
        "web",
        "apps",
        "Insurance",
        "premium",
        "calculations",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "scripting",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "client",
        "side",
        "validation",
        "JavaScript",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "Python",
        "programs",
        "block",
        "codes",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "RESTFull",
        "API",
        "Twilio",
        "Facebook",
        "Twitter",
        "data",
        "management",
        "system",
        "MySQL",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "SDLC",
        "process",
        "functionality",
        "Cisco",
        "Cloud",
        "Services",
        "stack",
        "Horizon",
        "Python",
        "Django",
        "Django",
        "REST",
        "framework",
        "JavaScript",
        "HTML",
        "JQuery",
        "CSS",
        "AngularJS",
        "solutions",
        "Parse",
        "JSON",
        "XML",
        "data",
        "Python",
        "Responsible",
        "web",
        "application",
        "Implementation",
        "Red",
        "Hat",
        "CentOS7",
        "Ubuntu",
        "Windows",
        "Cisco",
        "Cloud",
        "Team",
        "version",
        "control",
        "Gerrit",
        "Environment",
        "Python",
        "Django",
        "XML",
        "Java",
        "Apache",
        "CSS",
        "MySQL",
        "JSON",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Gerrit",
        "buggingagile",
        "Restfull",
        "UNIX",
        "Windows",
        "Program",
        "Analyst",
        "Bitra",
        "Net",
        "Pvt",
        "Ltd",
        "Denver",
        "CO",
        "March",
        "February",
        "Responsibilities",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "web",
        "services",
        "database",
        "calls",
        "inserts",
        "updates",
        "Developed",
        "Unit",
        "Integration",
        "Performance",
        "Test",
        "Cases",
        "Junit",
        "Selenium",
        "Rational",
        "Function",
        "Tester",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Python",
        "library",
        "BeautifulSoup",
        "webscrappingss",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Design",
        "test",
        "deploy",
        "website",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "client",
        "side",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "JQuery",
        "client",
        "side",
        "Java",
        "script",
        "manipulation",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "SVN",
        "CSS",
        "AJAX",
        "Bugzilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Software",
        "Developer",
        "Innovative",
        "Solutions",
        "Reston",
        "VA",
        "September",
        "February",
        "Responsibilities",
        "Django",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Developed",
        "Unit",
        "test",
        "cases",
        "functionality",
        "code",
        "Python",
        "library",
        "data",
        "management",
        "system",
        "MySQL",
        "development",
        "SQL",
        "procedures",
        "MySQL",
        "database",
        "MySQL",
        "SQL",
        "queries",
        "data",
        "database",
        "queries",
        "CRUD",
        "operations",
        "read",
        "update",
        "operations",
        "Rewrite",
        "Python",
        "Django",
        "module",
        "data",
        "format",
        "data",
        "Experience",
        "application",
        "python",
        "Django",
        "MVC",
        "Django",
        "Database",
        "APIs",
        "database",
        "UseCase",
        "Diagrams",
        "Class",
        "Diagrams",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "techniques",
        "components",
        "CC",
        "Software",
        "release",
        "clients",
        "code",
        "CC",
        "libraries",
        "APIs",
        "UI",
        "HTML",
        "CSS",
        "Javascript",
        "Created",
        "Servlets",
        "Beans",
        "Business",
        "Logic",
        "SAXDOM",
        "Parser",
        "data",
        "Oracle",
        "Database",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "object",
        "model",
        "data",
        "model",
        "tables",
        "constraints",
        "procedures",
        "functions",
        "triggers",
        "packages",
        "Oracle",
        "Database",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "Developed",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "test",
        "plan",
        "Software",
        "Bugs",
        "Participated",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Used",
        "Django",
        "framework",
        "application",
        "development",
        "application",
        "Python",
        "MySQL",
        "Linux",
        "solutions",
        "Editorial",
        "Tool",
        "request",
        "reporting",
        "site",
        "features",
        "bugs",
        "database",
        "MySQL",
        "queries",
        "data",
        "Perforce",
        "version",
        "control",
        "Environment",
        "C",
        "C",
        "HTML",
        "CSS",
        "Shell",
        "Scripting",
        "PLSQL",
        "JDBC",
        "PVCS",
        "Oracle",
        "Linux",
        "Windows",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Perforce",
        "Education",
        "Masters",
        "Masters",
        "Science",
        "Western",
        "Washington",
        "University",
        "Skills",
        "Python",
        "Django",
        "Djangocms",
        "SSO",
        "database",
        "access",
        "Djangocms",
        "plugins",
        "Bootstrap",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Agile",
        "JavaScript",
        "Eclipse",
        "Weblogic",
        "Git",
        "GitHub",
        "Junit",
        "Agile",
        "UML",
        "JSP",
        "Xml",
        "SOA",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "C",
        "Java",
        "Shell",
        "Script",
        "Perl",
        "SQL",
        "BIG",
        "DATA",
        "Python",
        "Framework",
        "Django",
        "MySQL",
        "SQL",
        "Server",
        "Oracle",
        "g",
        "Web",
        "Technologies",
        "AJAX",
        "JavaScript",
        "HTML",
        "DHTML",
        "XML",
        "Versioning",
        "Tools",
        "Subversion",
        "GIT",
        "Perforce",
        "SVN",
        "CVS",
        "Web",
        "servers",
        "Apache",
        "IIS",
        "Operating",
        "systems",
        "LinuxUnix",
        "Windows"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:57:02.758900",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Liberty Mutual Insurance Philadelphia PA Work Experience Sr Python Developer Liberty Mutual Insurance Philadelphia PA April 2016 to Present Responsibilities Mainly used Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Developed an embedded software data driven test automation framework in Linux Python Designed test cases and authored test plans Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Python with OpenStack OpenERP now ODOO SQL Alchemy DJango CMS etc Provide team guidance from agile experiencelearning and daytoday support to the scrum team Configured SiteMinder web agents Affiliate agents and RADIUS agents to provide federation of web services in the SSO environment Developed website based on Django CMS Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Having very good experience with BIG DATA Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Dell Computer Corporation Philadelphia PA October 2014 to March 2016 Responsibilities Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets and Action classes Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less BootstrapJs JavaScript JQuery JSON and AJAX Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implementation of fully API based SSO architecture using CA SiteMinder CA IDM PingFederate and Radiant Logic Virtual Directory Server which accomplishes end applications integration with SSO easier Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 BIG DATA and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Mercedes Benz Credit Corporation Philadelphia PA October 2013 to September 2014 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Created UI using JavaScript and HTML and CSS Also involved in the analysis and design of application Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango and created backend database TSQL stored procedures and Jasper Reports Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from Python using Python MySQL connector and MySQL dB package Worked in various front end tools like HTML CSS JavaScript XML JQuery Angular JS and AJAX Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python Used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used Python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Used GIT for the version control Environment Python JavaScript Django Framework CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Seattle WA April 2012 to August 2013 Responsibilities Coding and implementation of routing software for handling customer queries and rerouting to appropriate divisions The customers calls are automatically answered and place into a holding the queue until an agent becomes available Involved in the code and requirement reviews of work products developed by team members Involved in Application development with C and python on IDE Tool Eclipse and web server Tomcat Writing stored procedures in SQL Server and integrated into the application to access the customers calls departments data from databases and store the customers calls departments data into database Developed coded tested debugged and deployed webservices MQ for the input and output forms on the webservices Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Participated in the complete SDLC process Implementing and extending functionality of Cisco Cloud Services and Open stack Horizon using Python Django Django REST framework JavaScript HTML JQuery CSS and AngularJS Create and enhanced existing automated solutions Parse JSON and XML data using Python Responsible for debugging and troubleshooting the web application Implementation under Red Hat CentOS7 Ubuntu and Windows 7 both locally and on Cisco Cloud Team working and version control using Gerrit Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts Gerrit buggingagile Restfull UNIX and Windows Program Analyst Bitra Net Pvt Ltd Denver CO March 2009 to February 2012 Responsibilities Designed the user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Used Python library BeautifulSoup for webscrappingss Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the client side validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Used JQuery for all client side Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Software Developer Innovative Solutions Reston VA September 2007 to February 2009 Responsibilities Used Django framework to develop entire frontend and backend modules in Python Developed Unit test cases to check the functionality of new code by using unittest Python library Designed and developed data management system using MySQL Involved in development of SQL and stored procedures on MySQL Created database by using MySQL and wrote several SQL queries to extract data from database and wrote queries for performing various CRUD operations includes create read update and delete operations Rewrite existing Python Django module to deliver certain data format of data Experience in designing coding and developing the application in python using Django MVC Used Django Database APIs to access database objects Designed and developed UseCase Diagrams Class Diagrams Object Diagrams using UML Rational Rose for OOAOOD techniques Programmed the components using CC Software release to internal clients by compiling the code into CC libraries and implementing the APIs Created UI using HTML CSS and Javascript Created Servlets and Beans to implement Business Logic Used SAXDOM Parser for parsing the data to Oracle Database Implemented the presentation layer with HTML DHTML AJAX CSS and JavaScript Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Designed and created backend data access modules using PLSQL stored procedures and Oracle Developed and executed User Acceptance Testing portion of test plan Debugging Software for Bugs Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Used Django framework for application development Created entire application using Python MySQL and Linux Enhanced existing automated solutions such as the Editorial Tool for automated request reporting and the Whos Who site by adding new features and fixing bugs Created database using MySQL wrote several queries to extractstore data Used Perforce for the version control Environment C C HTML CSS Shell Scripting PLSQL JDBC PVCS Oracle Linux and Windows Python Django MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Perforce Education Masters in Masters in Science Western Washington University Skills Python Django Djangocms SSO database access Djangocms plugins Bootstrap JavaScript HTML5 CSS3 Agile JavaScript Eclipse Weblogic Git GitHub Junit Agile UML JSP Xml SOA Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL BIG DATA Python Framework Django Databases MySQL SQL Server 2008 Oracle 10g Web Technologies AJAX JavaScript HTML DHTML XHTML XML Versioning Tools Subversion GIT Perforce SVN CVS Web servers Apache IIS Operating systems LinuxUnix Windows",
    "unique_id": "65a057d4-62a9-4fb6-8002-c685590d1663"
}