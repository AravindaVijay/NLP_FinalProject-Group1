{
    "clean_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Verizon Dayton OH Work Experience Sr Python Developer Verizon Dayton OH January 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Elasticsearch Web Framework Designed and developed the UI of the website using HTML AJAX CSS and Ruby Designed and developed data management system using MySQL Developed Business Logic using Python on Elasticsearch Web Framework Write scripts using python modules and its libraries to develop programs that improve processing of access requests Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Sr Python Developer Nordstrom Seattle WA March 2014 to December 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Elasticsearch and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Elasticsearch15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Created a PythonElasticsearch based web application using Python scripting for data processing MySQL for the database and HTMLCSSRuby and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch HTML CSS Ruby Bootstrap Ruby and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Python Developer Vanguard Wayne PA September 2012 to February 2014 Responsibilities Used Elasticsearch Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonElasticsearch based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used RESTful for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using RESTful and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Comcast Philadelphia PA September 2010 to August 2012 Responsibilities Developed web applications and RESTful web services and APIs using Python Elasticsearch Tornado and PHP Created and integrated APIs on RESTful Created element locking mechanism using SSE and RESTful To fetch data of definite options that are selected Python routines were written to log into websites Responsible for setting up Python REST API framework using Elasticsearch Developed ETL jobs in Python to extract transform and load data into MySQL database Developing Python Framework using Elasticsearch to perform scan software unit monitoring Design and development of user interfaces and client displays using Ruby CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython Used python modules like RESTful Matplotlib and Pandas library for statistical analysis and generating complex graphical data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Hosted various companywide training sessions on Pandas RESTful Microservices Built various graphs for business decision making using Python matplotlib Developed and tested many features for dashboard using Python Bootstrap CSS and Ruby Research on Data mining techniques using python and comparing data mining algorithms Developed new C encapsulation wrapper classes for OCCI classes Responsible for setting up Python REST API framework using Elasticsearch Developed views and templates with Python and Elasticsearch view controller and templating language to create a userfriendly website interface Used Ruby AJAX and JSON to update a portion of a webpage Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Created database using MySQL and Postgres wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and Ruby Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Education Bachelors Skills Java Drupal Hadoop Cobol AEM",
    "entities": [
        "GIT",
        "PHP Created",
        "Python",
        "Ruby Designed",
        "Hosted",
        "Bugzilla Planning",
        "Pandas",
        "RESTful Created",
        "Amazon AWS S3",
        "Developed",
        "CRUD",
        "GUI",
        "Test Driven Development TDD",
        "Elasticsearch Developed",
        "Present Responsibilities Responsible",
        "Bash",
        "SQLite",
        "Pandas RESTful Microservices Built",
        "Created a PythonElasticsearch",
        "QA",
        "MySQL and Postgres",
        "Ruby Followed AGILE",
        "HTML AJAX CSS",
        "Performed",
        "Developed GUI",
        "Used Ruby AJAX",
        "Created",
        "SQM",
        "Developed Business Logic",
        "Sqlite3",
        "Kanban",
        "MultiThreading",
        "Agile Software Methodology",
        "Python Bootstrap CSS",
        "the Silent Circle Management System SCMC",
        "webapp2",
        "Selenium",
        "Interfacing",
        "SMTP",
        "MySQL Developed Business Logic using Python on Elasticsearch Web Framework Write",
        "Used Ruby and Ajax",
        "Elasticsearch Developed ETL",
        "Heroku",
        "Created Data",
        "Panda",
        "Elasticsearch",
        "Ruby CSS",
        "SQL",
        "Flask",
        "Ruby Research on Data",
        "Data",
        "XML",
        "Sr Python Developer Nordstrom Seattle WA",
        "VMWare API",
        "AEM",
        "TDD",
        "Maintained",
        "Bash Design",
        "RDS",
        "Shell",
        "API Integration Used Celery",
        "JS Angular JS CSS",
        "PythonElasticsearch",
        "Views",
        "RESTAPI",
        "Automated",
        "PyQt",
        "Integration",
        "Team Foundation",
        "Troubleshoot",
        "SSE",
        "Python Developer Comcast Philadelphia",
        "Python Elasticsearch Tornado",
        "Python Implemented"
    ],
    "experience": "Experience Sr Python Developer Verizon Dayton OH January 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Elasticsearch Web Framework Designed and developed the UI of the website using HTML AJAX CSS and Ruby Designed and developed data management system using MySQL Developed Business Logic using Python on Elasticsearch Web Framework Write scripts using python modules and its libraries to develop programs that improve processing of access requests Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Sr Python Developer Nordstrom Seattle WA March 2014 to December 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Elasticsearch and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Elasticsearch15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Created a PythonElasticsearch based web application using Python scripting for data processing MySQL for the database and HTMLCSSRuby and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch HTML CSS Ruby Bootstrap Ruby and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Python Developer Vanguard Wayne PA September 2012 to February 2014 Responsibilities Used Elasticsearch Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonElasticsearch based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used RESTful for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using RESTful and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Comcast Philadelphia PA September 2010 to August 2012 Responsibilities Developed web applications and RESTful web services and APIs using Python Elasticsearch Tornado and PHP Created and integrated APIs on RESTful Created element locking mechanism using SSE and RESTful To fetch data of definite options that are selected Python routines were written to log into websites Responsible for setting up Python REST API framework using Elasticsearch Developed ETL jobs in Python to extract transform and load data into MySQL database Developing Python Framework using Elasticsearch to perform scan software unit monitoring Design and development of user interfaces and client displays using Ruby CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython Used python modules like RESTful Matplotlib and Pandas library for statistical analysis and generating complex graphical data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Hosted various companywide training sessions on Pandas RESTful Microservices Built various graphs for business decision making using Python matplotlib Developed and tested many features for dashboard using Python Bootstrap CSS and Ruby Research on Data mining techniques using python and comparing data mining algorithms Developed new C encapsulation wrapper classes for OCCI classes Responsible for setting up Python REST API framework using Elasticsearch Developed views and templates with Python and Elasticsearch view controller and templating language to create a userfriendly website interface Used Ruby AJAX and JSON to update a portion of a webpage Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Created database using MySQL and Postgres wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and Ruby Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Education Bachelors Skills Java Drupal Hadoop Cobol AEM",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Srspan",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Verizon",
        "Dayton",
        "OH",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Verizon",
        "Dayton",
        "OH",
        "January",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Elasticsearch",
        "Web",
        "Framework",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "Ruby",
        "data",
        "management",
        "system",
        "MySQL",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Elasticsearch",
        "Web",
        "Framework",
        "scripts",
        "modules",
        "libraries",
        "programs",
        "processing",
        "access",
        "requests",
        "Ruby",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Ruby",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Sr",
        "Python",
        "Developer",
        "Nordstrom",
        "Seattle",
        "WA",
        "March",
        "December",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "Rabbit",
        "MQ",
        "MySQL",
        "Elasticsearch",
        "Flask",
        "worker",
        "framework",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "Soap",
        "UI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "architecture",
        "Python",
        "Elasticsearch15",
        "JSF",
        "HTML",
        "CSS",
        "frontend",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Elasticsearch",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "Dev",
        "Centre",
        "Data",
        "stax",
        "Ops",
        "center",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Elasticsearch",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonElasticsearch",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSRuby",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Strong",
        "Socket",
        "programming",
        "experience",
        "Python",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Python",
        "modules",
        "eg",
        "csv",
        "robot",
        "parser",
        "iter",
        "tools",
        "jinja2",
        "lxml",
        "development",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Elasticsearch",
        "HTML",
        "CSS",
        "Ruby",
        "Bootstrap",
        "Ruby",
        "RESTAPI",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "methodologies",
        "scrum",
        "stand",
        "ups",
        "Kanban",
        "mode",
        "requirements",
        "clients",
        "Python",
        "Developer",
        "Vanguard",
        "Wayne",
        "PA",
        "September",
        "February",
        "Responsibilities",
        "Elasticsearch",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "MultiThreading",
        "factory",
        "model",
        "learning",
        "process",
        "worker",
        "processes",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Elasticsearch",
        "Oracle",
        "DB",
        "VMWare",
        "API",
        "configuration",
        "changes",
        "data",
        "models",
        "solutions",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Selenium",
        "testing",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "PythonElasticsearch",
        "web",
        "application",
        "Postgresql",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Design",
        "custom",
        "scripts",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Test",
        "custom",
        "scripts",
        "solutions",
        "science",
        "models",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "process",
        "execution",
        "team",
        "members",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "packages",
        "AON",
        "unit",
        "test",
        "data",
        "models",
        "issues",
        "domain",
        "L2",
        "team",
        "basis",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "point",
        "L2",
        "support",
        "team",
        "application",
        "database",
        "SQM",
        "project",
        "managements",
        "team",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "SQL",
        "alchemy",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Python",
        "Developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "September",
        "August",
        "Responsibilities",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Elasticsearch",
        "Tornado",
        "PHP",
        "APIs",
        "element",
        "mechanism",
        "SSE",
        "data",
        "options",
        "Python",
        "routines",
        "websites",
        "Python",
        "REST",
        "API",
        "framework",
        "Elasticsearch",
        "Developed",
        "ETL",
        "jobs",
        "Python",
        "transform",
        "data",
        "MySQL",
        "database",
        "Python",
        "Framework",
        "Elasticsearch",
        "software",
        "unit",
        "Design",
        "development",
        "user",
        "interfaces",
        "client",
        "displays",
        "Ruby",
        "CSS",
        "issues",
        "Python",
        "code",
        "code",
        "enhancements",
        "code",
        "python",
        "libraries",
        "Jython",
        "python",
        "modules",
        "RESTful",
        "Matplotlib",
        "Pandas",
        "library",
        "analysis",
        "data",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Wrote",
        "MapReduce",
        "code",
        "data",
        "data",
        "Hive",
        "tables",
        "companywide",
        "training",
        "sessions",
        "Pandas",
        "Microservices",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "Ruby",
        "Research",
        "Data",
        "mining",
        "techniques",
        "python",
        "data",
        "mining",
        "C",
        "encapsulation",
        "wrapper",
        "classes",
        "classes",
        "Python",
        "REST",
        "API",
        "framework",
        "Elasticsearch",
        "Developed",
        "views",
        "templates",
        "Python",
        "Elasticsearch",
        "view",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Used",
        "Ruby",
        "AJAX",
        "JSON",
        "portion",
        "webpage",
        "project",
        "JIRA",
        "Agile",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "database",
        "MySQL",
        "Postgres",
        "queries",
        "data",
        "database",
        "Setup",
        "cron",
        "jobs",
        "data",
        "database",
        "graphs",
        "bar",
        "charts",
        "charts",
        "wiki",
        "database",
        "Elasticsearch",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "Ruby",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Education",
        "Bachelors",
        "Skills",
        "Java",
        "Drupal",
        "Hadoop",
        "Cobol",
        "AEM"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:13:42.240320",
    "resume_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Verizon Dayton OH Work Experience Sr Python Developer Verizon Dayton OH January 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Elasticsearch Web Framework Designed and developed the UI of the website using HTML AJAX CSS and Ruby Designed and developed data management system using MySQL Developed Business Logic using Python on Elasticsearch Web Framework Write scripts using python modules and its libraries to develop programs that improve processing of access requests Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Ruby and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Sr Python Developer Nordstrom Seattle WA March 2014 to December 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Elasticsearch and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Elasticsearch15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Elasticsearch app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Created a PythonElasticsearch based web application using Python scripting for data processing MySQL for the database and HTMLCSSRuby and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch HTML CSS Ruby Bootstrap Ruby and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Python Developer Vanguard Wayne PA September 2012 to February 2014 Responsibilities Used Elasticsearch Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Elasticsearch Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonElasticsearch based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used RESTful for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using RESTful and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Comcast Philadelphia PA September 2010 to August 2012 Responsibilities Developed web applications and RESTful web services and APIs using Python Elasticsearch Tornado and PHP Created and integrated APIs on RESTful Created element locking mechanism using SSE and RESTful To fetch data of definite options that are selected Python routines were written to log into websites Responsible for setting up Python REST API framework using Elasticsearch Developed ETL jobs in Python to extract transform and load data into MySQL database Developing Python Framework using Elasticsearch to perform scan software unit monitoring Design and development of user interfaces and client displays using Ruby CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as Jython Used python modules like RESTful Matplotlib and Pandas library for statistical analysis and generating complex graphical data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Hosted various companywide training sessions on Pandas RESTful Microservices Built various graphs for business decision making using Python matplotlib Developed and tested many features for dashboard using Python Bootstrap CSS and Ruby Research on Data mining techniques using python and comparing data mining algorithms Developed new C encapsulation wrapper classes for OCCI classes Responsible for setting up Python REST API framework using Elasticsearch Developed views and templates with Python and Elasticsearch view controller and templating language to create a userfriendly website interface Used Ruby AJAX and JSON to update a portion of a webpage Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Created database using MySQL and Postgres wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and Ruby Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Education Bachelors Skills Java Drupal Hadoop Cobol AEM",
    "unique_id": "3e7c1707-0bec-43c8-806b-a88718cc3c48"
}