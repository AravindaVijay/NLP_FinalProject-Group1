{
    "clean_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Texas Department of Transportation Austin TX 9 years of IT experience in analysis design development testing and deployment of webbased and Enterprise based ClientServer business applications using JavaJ2EE technologies Expertise in the implementation of Core Java SE 8 concepts like Streams API Lambda functions Functional programming Extensive experience with Core Java concepts like Multithreading Exception Handling and Collections Expertise in designing and developing frontend UI using HTML5 XHTML DHTML CSS3 JavaScript ES5 ES6 TypeScript jQuery Bootstrap JS proficient with Typescript ES6 new features block scope type restrictions decorators arrow functions classes interfaces modules import and exports Experience in using MVC based JavaScript frameworks like Angular JS Back Bone JS Ext JS Ember JS and Knockout JS Extensive experience on MVVM frameworks like Angular 40 Angular 20 to develop dynamic web applications Experience in designing and developing various Angular 2040 Components ngModules Servicesobservablepromises Directive and Pipes Extensively used view rendering JavaScript frameworks like jQuery React JS and Ember JS Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Experience in application of clientside JavaScript frameworks such as Backbone Js Ember JS to create Controllers to handle events triggered by clients and send request to server Solid experience in developing the rendering view React JS components forms events routers and Redux asynchronous functions and implemented React Flux pattern for core dependency Expert level knowledge on Serverside JavaScript structures like Node JS Hapi JS and Express JS Good understanding of Client side build tools like Gulp NPM Webpack Grunt and Bower Strong experience in unit testing tools of JavaScript framework like Karma Jasmine and Protractor for Angular Mocha and Chai for React JS Experience in developing and deploying Microservice oriented applications using Spring Boot and Spring Cloud and used Spring Boot to modularize code and implemented Rest APIs using Spring Rest Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Achieved Advanced Monitoring and Tracing of applications with Spring Boot Actuator Expertise in developing webbased enterprise applications using J2EE technologies such as Servlets JSP EJB JMS and JDBC Expertise with various web MVC frameworks such as Spring MVC and Struts Master level aptitudes in Spring system modules like Spring IOC Spring MVC Spring Data Spring REST Spring JTA Spring IO Spring AOP Spring JDBC Spring Transaction Management Spring Batch Spring Cloud and Spring Boot Experience in implementing security functionality for various projects using Spring Security and Site Minder SSO Expertise in developing SOA Service Oriented Architectures and Microservice architectures using J2EE web services based on Restful JAXRS SOAPJAX_WS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Apache Axis Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF framework Extensive experience with Java based ORM frameworks involving Hibernate JPA Spring Data and iBATIS Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MY SQL MS SQL DB2 and PostgreSQL Exceptional Experience with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience in working with NoSQL databases Mongo DB Apache Cassandra DynamoDB Couch DB Graph DB Optimized Widecolumn stores such as Apache Cassandra for queries over large datasets and store columns of data together instead of rows synchronized the data between databases and machines using Couch DBs schemafree document model Hands on experience with build tools like Maven Gradle and ANT Experience in building continuous integration and continuous deployment using Jenkins Travis and AWS Code Pipeline with any cloud repository Solid experience in integration tools like Spring Integration Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Developed realtime dashboard applications for visualization and analytics on Apache web servers using Elastic Search and Kibana 40ELK Analyzed and visualized the machinegenerated data gathered from the websites using SPLUNK Experience in using various Amazon Web Services AWS components like EC2 for virtual servers S3 and Glacier for storing objects Elastic Beanstalk Elastic Cache and Dynamo DB for storing data Used Elastic Load Balancer ELB for distributing incoming application traffic and scaling resources to meet traffic demands Experience in Windows Azure services like PAAS IAAS and worked on storages like Blob and SQL Azure Good understanding of PAAS platforms like Open shift and Pivotal Cloud Foundry Good Experience in software configuration management using SVN Clear Case Bitbucket Gitlab and Git Experience in Message Queue MQ services like Apache Kafka Rabbit MQ Active MQ and IBM MQ Experience in developing Apache Kafka as a distributed publishsubscribe messaging system and a robust queue that can handle a high volume of data created windowing parameters and performed joins of data within a stream using Streams API within Apache Kafka Worked with Kafka Cluster using Zookeeper Strong understanding in implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancing Hystrix Circuit Breaker Zuul Edge Proxy and Monitoring and centralized log analyses ELK Experience in Spring Security Framework for User Access Management JWT tokenbased authentication and involved OAuth 20 configuration for authentication and authorization Hands on experience using Docker for installing testing upgrading removing and running software applications Experience in deploying the applications using Docker container services and building continuous integration and deployment pipeline using Jenkins with GitHub Extensively used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Experience on performing unit Testing utilizing JUnit TestNG Spock and ridiculing systems like JMock and Mockito and ensured code changes wont break existing Unit Tests Implemented the TestDriven Development TDD process to develop the quality and design of code using Junit Framework Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Authorized to work in the US for any employer Work Experience Software Developer Texas Department of Transportation Austin TX September 2018 to Present Duties Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Experience in building or supporting web applications with Sencha Ext JS HTML5 CSS jQuery Ajax Developed crossbrowserplatform using Ext JS to desired design specs for single page layout using code standards Worked on Ext JS and created reusable components like Menu Navigation Session monitor which was very useful in the application Developed user interactive web pages using jQuery UI plugins like Draggable Resizable Autocomplete AJAX JSON Utilized Core Java concepts like Collections Multithreading and Exception handling to develop business components Performed Installation Configuration and Maintenance of production Cloud Environments such as Tomcat Apache Jetty and JIRA Designed application to meet international market standards using Spring MVC Internationalization and spring core modules Developed RESTful services based on Spring REST using Jersey framework Performed Load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Serverside validations are achieved using Spring Validation framework Deployed and monitored web services using Spring Cloud Foundry Managed Domains and Routes with Spring Cloud Service Registry Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used iBATIS framework with Spring Framework for data persistence and transaction management Utilized Apache Cassandra for storing the external stream of data and building real time analytics dashboard using Google Charts API with Angular JS Components Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Implemented various validations rules using JBoss Business rules in the drl drools file using Drools rule engine Used Rabbit MQ for transport of data in Queue in between components of the application Developed Test classes using Junit and Easy Mock and test coverage using EMMA plugin Utilized AWS Services platform to upload data into AWS S3 buckets creating EC2 instances and to deploy the Dockerized Container services Used Log4J to capture the log that includes runtime exceptions Developed the ANT scripts for preparing WAR files used to deploy J2EE components Environment JavaJ2EE JBoss 30 Spring Core JMeter Cassandra Hibernate Jetty Perl Spring MVC Angular Js JavaScript BackboneJS HTML5 CSS3 AJAX Bootstrap JMS jQuery Spring MVC Jenkin Amazon Ec2 Amazon S3 Rabbit MQ Oracle Drools Software Engineer Bechtel San Francisco CA August 2016 to September 2018 Duties Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript jQuery and Angular JS Worked on writing AngularJS controllers views services and scripts on jQuerybased Ajax Requests Used Angular JS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications Worked with AngularJS and jQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Experience in developing RESTful web service that usually defines a URI Uniform Resource Identifier which is a service that provides resource representation such as JSON and a set of HTTP Methods Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Responsible for creating ModelValue Objects in MVC Design Pattern Involved in writing Spring Container and Controller classes Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Performing unit Testing utilizing JUnit and configured Log4j for adding the debugging information in the code base Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Integrated testing methods implemented by using Karma Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Environment HTML CSS3 jQuery JavaScript Agile Angular JS AJAX Spring MVC Spring Container Spring AOP REST Hibernate Oracle PLSQL Junit Log4j Pivotal Cloud Foundry Karma Software Developer State Street Corporation Boston MA June 2014 to August 2016 Duties Used features like concurrency streams Filters API and Lambda functions and Functional Interface Java 18 programming Designed and Developed dynamic and responsive Web pages using HTML5 CSS3 and JavaScript Implemented Angular 6 component router for navigation Worked with Angular 4 Directives Injectables pipes Components Followed Testdriven development TDD process and wrote automated UI test cases in Ruby language Created Typescript reusable services and components to consume RESTAPIs using Componentbased architecture provided by Angular 6 Experienced in writing Gherkin that can be understandable by Cucumber Created single Page Application with loading multiple views using route services and adding more user experience to make dynamic by using Angular 6 framework and Node JS Worked on Angular 6 by consuming Restful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms to perform form validations both on server and client side Created Angular 6 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the click event Component decorator binding to the hidden property Developed Good knowledge on creating services with Angular 6 Injectable property to make the service available for dependency Injection when creating components Worked with Application using Node and React libraries NPM gulp directories to generate desired view Worked with Cucumber a tool for BDD a part of TDD Worked on AWS like EC2 S3 VPC RDS SQS SNS Developed various Typescripts ES6 objects including Components ngModules Providers Services and classes using arrow functions and optional types Worked with Express for development of RESTful web services and middleware configurations Using Express framework built RESTful RealTime web applications and services with Nodejs Performed verification and validation process for the code written by making use of Karma and Jasmine Worked with JavaScript testing framework by testing across various scenarios of the Angular 6 applications Worked with the Node package manager NPM along with Gulp Used JavaScript build tools and task runners like Webpack for Angular 6 Worked with SASS to build better and optimized Style sheets Designed and developed RESTful web services using Spring boot and Jersey framework Used Spring boot which is radically faster in building cloud micro services and develop Spring based application with very less configuration Migrated existing application into REST based Microservices to provide all the CRUD capabilities using Spring boot Implemented data modeling for Relational Databases that includes MySQL Used Spring Data JPA as the ORM framework to connect with MYSQL database Worked with various features in Spring such as Spring AOP Spring Transaction management Implementation of Spring Bean Factory using IOC configured Bean properties using dependency injection Using Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Handled consumer logs and monitor Kafka Metrics using Kafka Manager Developed data transformer for converting legacy data from source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implementation of Hystrix circuit breaker to avoid loss of messages during handling of messages at the consumer level Built realtime dashboard applications for visualization on Apache web servers using Elastic Search Splunk Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social Module Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Worked on performance tuning of cluster using MongoDB configured internode communication between MongoDB nodes and client using SSL encryption by Mongoose Connector Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and managing and maintaining Oracle and NoSQL databases in production domain Worked in setting up Docker daemon Docker client Docker hub Docker registries Created Docker images from Docker file and handled multiple images by storing them in containers to deploy Written Kubernetes deployment and service files for the Docker images Experience in designed micro services deployment using Docker and Kubernetes Deployed docker containers on server nodes with master node using Kubernetes by creating pods and managing on the cluster environment on Kubernetes Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Pivotal Cloud Foundry for injecting the connectionservice binding details from the deployed cloud platform itself Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Extensively used Git for version controlling and regularly Pushed the code to GitHub Designed and prepared Unit test case using JUnit and Log4j as logging tool Used JIRA as the bug tracking system to track and maintain the history of budsissues on everyday basis Used Git for version control and Jenkins for Continuous Integration and Continuous Deployment CICD Developed build and deployment scripts using MAVEN as build tool in Jenkins to move from one environment to other environments Environment Java 18 Angular 60 HTML 5 CSS3 typescript Jasmine Karma Junit GULP NPM Spring Boot MongoDB Spring Data Nodejs OAuth 2 MySQL Elastic Search React with Redux Apache Kafka Docker Kubernetes Pivotal Cloud Foundry EC2 Jenkins MAVEN Spring AOP Spring Cloud NetflixZuul Hystrix Swagger Java Developer Shannon Medical Center San Angelo TX May 2012 to June 2014 Duties Coordinated with project managers analyzed new proposed ideas and Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux CouchDB Responsible for the style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Using Couch DB provided RESTful interface for NoSQL database by creating and replicating Data Insertion via HTTP and stored JSON documents via RESTful interface Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Worked on Oracle Database management system configuring tuning the DBMS with the middleware systems Developed various SQL queries and implemented SQL stored Procedures in Oracle DB for the Application Implemented the caching mechanism in Hibernate to load data from database maintained mapping files of ORM while implementing transaction control layer Hibernate Session Manger used to configure multiple data source and provide independent database connectivity Worked with Micro services architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest with microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Implemented Spring CloudNetflix OSS Stack along with Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Created AWS Lambda EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Used build tools to bundle the application through webpack and used Grunt for task automation and minification Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Used Kubernetes to deploy scale load balance and manage Docker containers with multiple name spaced versions Deploying the applications using Docker container services and building continuous integration CI and continuous deployment CD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Involved in writing test cases for testing the Business components developed in spring using Junit and ridiculing systems like jMock and Mockito and ensured code changes wont break existing Unit Tests Developed build and deployment scripts for automating tasks using Gradle as a build tool Environment HTML5 CSS3 Express JS JavaScript React js Redux Node JS Bootstrap REST API Load Balancer Couch DB Oracle DB REST administrations Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Gradle and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Junior Java Developer Google LLC Mountain View CA April 2010 to May 2012 Duties Analyzed and implemented Model View Controller MVC architecture and developed Form classes Action Classes for the entire application using Spring Framework Adopted Hibernate Framework to develop Data Layer and configured XML mapping files Persisted java objects to relational database using Hibernate ORM Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP Implemented Multithreading concept to load data from files to table transforming files from one format to other Made multiple service calls in individual thread safety for a request Designed and developed frontend User Interface using HTML CSS JavaScript and jQuery Framework Involved in design development and implementation of frontend part widgetbased application Clientside validations are performed using JavaScript and jQuery Framework Used JMS for asynchronous exchange of message by applications on different platforms Developed the view components using JSP HTML Struts Logic tags libraries Performed testing of SOAP web services using SOAP UI tool Used JUnit Testing Framework for performing Unit testing Installed WebSphere Application Web Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Designed and developed Use Case Class and Sequence Diagram based on UML standards using Rational Rose Environment J2EE Java Struts Tiles JSP JNDI Clear Case SOAP WSDL UDDI JAXB JAXP Schema XST EJB 20 ANT JavaScript JMS Rational Rose WSAD DB 2 Education Bachelors in Software Engineering The University of Texas at Dallas Dallas TX",
    "entities": [
        "Performed Installation Configuration",
        "Spring Bootbased",
        "Spring Framework",
        "Used Hibernate",
        "Nodejs Performed",
        "MQ Oracle Drools Software Engineer Bechtel",
        "Redux Node",
        "Serverside JavaScript",
        "ORM",
        "Kubernetes Deployed our Application on Pivotal Cloud Foundry",
        "Written Kubernetes",
        "Nodejs",
        "Sequence Diagram",
        "Using Express",
        "Angular 2040 Components",
        "Spring Integration Apache CXF",
        "HAProxy",
        "Jersey",
        "GitHub Implemented",
        "SVN Clear Case Bitbucket Gitlab",
        "Spring Framework Adopted Hibernate Framework",
        "IBM",
        "Page Application",
        "Amazon Web Services AWS",
        "Requirements",
        "Hibernate JPA Spring Data",
        "Ajax",
        "Camel",
        "Controller",
        "Controller Advice",
        "Jenkins for Continuous Integration",
        "Express",
        "SOAP",
        "Created Typescript",
        "Developed User Interface",
        "XML",
        "Used JUnit Testing Framework",
        "OAuth",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "Texas Department",
        "Elastic Beanstalk Elastic Cache",
        "ModelValue Objects",
        "JavaJ2EE",
        "TX",
        "Amazon",
        "NodeJS Express",
        "ELK",
        "Implemented Cross",
        "Load Balancing Hystrix Circuit",
        "Continuous Deployment CICD Developed",
        "Tabular",
        "JMock",
        "Developed",
        "Jenkins",
        "AWS S3",
        "Dallas",
        "MVC Design Pattern Involved",
        "Oracle MY SQL MS",
        "Mockito",
        "UML",
        "Spring",
        "Relational Databases",
        "Git",
        "Client",
        "Restful",
        "MQ",
        "Exception",
        "Angular 6 Experienced",
        "MVC Spring Container",
        "Spring Container",
        "Cucumber Created",
        "HTML5",
        "Implementation of Spring Bean Factory",
        "SOA",
        "MEAN Mongo Express Angular",
        "Spring Cloud Service Registry Adopted JMS API",
        "TDD Worked",
        "Components ngModules Providers Services",
        "JSP",
        "Ember",
        "the Software Development Life Cycle",
        "Node JS Worked on Angular 6",
        "jQuery Framework Involved",
        "SPLUNK Experience",
        "Google Charts API",
        "jQuery Framework Used JMS",
        "Utilized AWS Services",
        "Tracing",
        "IOC",
        "Docker",
        "DOM",
        "EMMA",
        "Nodejs Used Expressjs",
        "SSL",
        "Data Insertion",
        "Created Docker",
        "Modern Driven Reactive",
        "Oracle Database",
        "jQuery UI",
        "MVC",
        "Interface",
        "Worked with Express",
        "Created AWS",
        "Agile",
        "Redux",
        "The University of Texas",
        "Node JS",
        "Exception Handler",
        "SOAP Web Services",
        "API",
        "Spring Security Framework",
        "Foundry",
        "JBoss Business",
        "US",
        "Karma Used Jenkins",
        "HTML CSS JavaScript",
        "Form classes Action Classes",
        "Using Couch DB",
        "Gulp NPM Webpack Grunt",
        "Tomcat Apache Jetty",
        "Drools",
        "BDD",
        "Couch",
        "Apache CXF",
        "Perl",
        "AWS",
        "Oracle",
        "Windows Azure",
        "Annotated",
        "RESTful Services",
        "Webpack for Angular 6 Worked",
        "Oracle DB",
        "Software Engineering",
        "ClientServer",
        "React JS",
        "Hystrix Circuit Breaker",
        "DBMS",
        "Message Queue",
        "Menu Navigation Session",
        "Utilized Apache Cassandra",
        "Spring MVC Internationalization",
        "fed",
        "BodyParse",
        "SQL",
        "Log4j",
        "GitHub",
        "React Flux",
        "Axis2",
        "MAVEN",
        "Kubernetes",
        "jQuery React JS",
        "NPM",
        "Maven Gradle",
        "Table Grid",
        "Worked with Application",
        "Implementation of Hystrix",
        "Spring Social Module Created",
        "Typescript",
        "SOA Service Oriented Architectures",
        "Serverside",
        "Mongoose Connector Composed",
        "the Application Implemented",
        "Ruby",
        "CRUD",
        "Business Customers",
        "User Access Management JWT",
        "Maven",
        "Node JS Express",
        "React Developed",
        "Site Minder",
        "JavaScript",
        "MQ Active",
        "ANT",
        "Implemented Spring CloudNetflix OSS Stack",
        "UI",
        "Redux CouchDB Responsible",
        "Work Experience Software Developer Texas Department",
        "San Angelo",
        "Ext JS",
        "Spring Validation",
        "Netflix Zuul API Gateway",
        "Created Angular 6",
        "Dockerized Container",
        "SOAP UI",
        "Queue",
        "Spring Security and Site Minder SSO Expertise",
        "building cloud micro services",
        "Mongoose Connector",
        "jQuery",
        "Boston",
        "REST",
        "JavaScript React",
        "Present Duties Involved",
        "Hibernate DAO",
        "TDD",
        "NoSQL",
        "Implemented Spring Netflix Zuul API",
        "Routes",
        "Relational Database Management Systems",
        "Installed WebSphere Application",
        "Angular 6 Injectable",
        "Single Page Application",
        "Template Driven",
        "Microservice",
        "Node",
        "Bower Strong"
    ],
    "experience": "Experience in using MVC based JavaScript frameworks like Angular JS Back Bone JS Ext JS Ember JS and Knockout JS Extensive experience on MVVM frameworks like Angular 40 Angular 20 to develop dynamic web applications Experience in designing and developing various Angular 2040 Components ngModules Servicesobservablepromises Directive and Pipes Extensively used view rendering JavaScript frameworks like jQuery React JS and Ember JS Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Experience in application of clientside JavaScript frameworks such as Backbone Js Ember JS to create Controllers to handle events triggered by clients and send request to server Solid experience in developing the rendering view React JS components forms events routers and Redux asynchronous functions and implemented React Flux pattern for core dependency Expert level knowledge on Serverside JavaScript structures like Node JS Hapi JS and Express JS Good understanding of Client side build tools like Gulp NPM Webpack Grunt and Bower Strong experience in unit testing tools of JavaScript framework like Karma Jasmine and Protractor for Angular Mocha and Chai for React JS Experience in developing and deploying Microservice oriented applications using Spring Boot and Spring Cloud and used Spring Boot to modularize code and implemented Rest APIs using Spring Rest Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Achieved Advanced Monitoring and Tracing of applications with Spring Boot Actuator Expertise in developing webbased enterprise applications using J2EE technologies such as Servlets JSP EJB JMS and JDBC Expertise with various web MVC frameworks such as Spring MVC and Struts Master level aptitudes in Spring system modules like Spring IOC Spring MVC Spring Data Spring REST Spring JTA Spring IO Spring AOP Spring JDBC Spring Transaction Management Spring Batch Spring Cloud and Spring Boot Experience in implementing security functionality for various projects using Spring Security and Site Minder SSO Expertise in developing SOA Service Oriented Architectures and Microservice architectures using J2EE web services based on Restful JAXRS SOAPJAX_WS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Apache Axis Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF framework Extensive experience with Java based ORM frameworks involving Hibernate JPA Spring Data and iBATIS Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MY SQL MS SQL DB2 and PostgreSQL Exceptional Experience with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience in working with NoSQL databases Mongo DB Apache Cassandra DynamoDB Couch DB Graph DB Optimized Widecolumn stores such as Apache Cassandra for queries over large datasets and store columns of data together instead of rows synchronized the data between databases and machines using Couch DBs schemafree document model Hands on experience with build tools like Maven Gradle and ANT Experience in building continuous integration and continuous deployment using Jenkins Travis and AWS Code Pipeline with any cloud repository Solid experience in integration tools like Spring Integration Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Developed realtime dashboard applications for visualization and analytics on Apache web servers using Elastic Search and Kibana 40ELK Analyzed and visualized the machinegenerated data gathered from the websites using SPLUNK Experience in using various Amazon Web Services AWS components like EC2 for virtual servers S3 and Glacier for storing objects Elastic Beanstalk Elastic Cache and Dynamo DB for storing data Used Elastic Load Balancer ELB for distributing incoming application traffic and scaling resources to meet traffic demands Experience in Windows Azure services like PAAS IAAS and worked on storages like Blob and SQL Azure Good understanding of PAAS platforms like Open shift and Pivotal Cloud Foundry Good Experience in software configuration management using SVN Clear Case Bitbucket Gitlab and Git Experience in Message Queue MQ services like Apache Kafka Rabbit MQ Active MQ and IBM MQ Experience in developing Apache Kafka as a distributed publishsubscribe messaging system and a robust queue that can handle a high volume of data created windowing parameters and performed joins of data within a stream using Streams API within Apache Kafka Worked with Kafka Cluster using Zookeeper Strong understanding in implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancing Hystrix Circuit Breaker Zuul Edge Proxy and Monitoring and centralized log analyses ELK Experience in Spring Security Framework for User Access Management JWT tokenbased authentication and involved OAuth 20 configuration for authentication and authorization Hands on experience using Docker for installing testing upgrading removing and running software applications Experience in deploying the applications using Docker container services and building continuous integration and deployment pipeline using Jenkins with GitHub Extensively used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Experience on performing unit Testing utilizing JUnit TestNG Spock and ridiculing systems like JMock and Mockito and ensured code changes wo nt break existing Unit Tests Implemented the TestDriven Development TDD process to develop the quality and design of code using Junit Framework Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Authorized to work in the US for any employer Work Experience Software Developer Texas Department of Transportation Austin TX September 2018 to Present Duties Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Experience in building or supporting web applications with Sencha Ext JS HTML5 CSS jQuery Ajax Developed crossbrowserplatform using Ext JS to desired design specs for single page layout using code standards Worked on Ext JS and created reusable components like Menu Navigation Session monitor which was very useful in the application Developed user interactive web pages using jQuery UI plugins like Draggable Resizable Autocomplete AJAX JSON Utilized Core Java concepts like Collections Multithreading and Exception handling to develop business components Performed Installation Configuration and Maintenance of production Cloud Environments such as Tomcat Apache Jetty and JIRA Designed application to meet international market standards using Spring MVC Internationalization and spring core modules Developed RESTful services based on Spring REST using Jersey framework Performed Load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Serverside validations are achieved using Spring Validation framework Deployed and monitored web services using Spring Cloud Foundry Managed Domains and Routes with Spring Cloud Service Registry Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used iBATIS framework with Spring Framework for data persistence and transaction management Utilized Apache Cassandra for storing the external stream of data and building real time analytics dashboard using Google Charts API with Angular JS Components Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Implemented various validations rules using JBoss Business rules in the drl drools file using Drools rule engine Used Rabbit MQ for transport of data in Queue in between components of the application Developed Test classes using Junit and Easy Mock and test coverage using EMMA plugin Utilized AWS Services platform to upload data into AWS S3 buckets creating EC2 instances and to deploy the Dockerized Container services Used Log4J to capture the log that includes runtime exceptions Developed the ANT scripts for preparing WAR files used to deploy J2EE components Environment JavaJ2EE JBoss 30 Spring Core JMeter Cassandra Hibernate Jetty Perl Spring MVC Angular Js JavaScript BackboneJS HTML5 CSS3 AJAX Bootstrap JMS jQuery Spring MVC Jenkin Amazon Ec2 Amazon S3 Rabbit MQ Oracle Drools Software Engineer Bechtel San Francisco CA August 2016 to September 2018 Duties Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript jQuery and Angular JS Worked on writing AngularJS controllers views services and scripts on jQuerybased Ajax Requests Used Angular JS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications Worked with AngularJS and jQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Experience in developing RESTful web service that usually defines a URI Uniform Resource Identifier which is a service that provides resource representation such as JSON and a set of HTTP Methods Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Responsible for creating ModelValue Objects in MVC Design Pattern Involved in writing Spring Container and Controller classes Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Performing unit Testing utilizing JUnit and configured Log4j for adding the debugging information in the code base Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Integrated testing methods implemented by using Karma Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Environment HTML CSS3 jQuery JavaScript Agile Angular JS AJAX Spring MVC Spring Container Spring AOP REST Hibernate Oracle PLSQL Junit Log4j Pivotal Cloud Foundry Karma Software Developer State Street Corporation Boston MA June 2014 to August 2016 Duties Used features like concurrency streams Filters API and Lambda functions and Functional Interface Java 18 programming Designed and Developed dynamic and responsive Web pages using HTML5 CSS3 and JavaScript Implemented Angular 6 component router for navigation Worked with Angular 4 Directives Injectables pipes Components Followed Testdriven development TDD process and wrote automated UI test cases in Ruby language Created Typescript reusable services and components to consume RESTAPIs using Componentbased architecture provided by Angular 6 Experienced in writing Gherkin that can be understandable by Cucumber Created single Page Application with loading multiple views using route services and adding more user experience to make dynamic by using Angular 6 framework and Node JS Worked on Angular 6 by consuming Restful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms to perform form validations both on server and client side Created Angular 6 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the click event Component decorator binding to the hidden property Developed Good knowledge on creating services with Angular 6 Injectable property to make the service available for dependency Injection when creating components Worked with Application using Node and React libraries NPM gulp directories to generate desired view Worked with Cucumber a tool for BDD a part of TDD Worked on AWS like EC2 S3 VPC RDS SQS SNS Developed various Typescripts ES6 objects including Components ngModules Providers Services and classes using arrow functions and optional types Worked with Express for development of RESTful web services and middleware configurations Using Express framework built RESTful RealTime web applications and services with Nodejs Performed verification and validation process for the code written by making use of Karma and Jasmine Worked with JavaScript testing framework by testing across various scenarios of the Angular 6 applications Worked with the Node package manager NPM along with Gulp Used JavaScript build tools and task runners like Webpack for Angular 6 Worked with SASS to build better and optimized Style sheets Designed and developed RESTful web services using Spring boot and Jersey framework Used Spring boot which is radically faster in building cloud micro services and develop Spring based application with very less configuration Migrated existing application into REST based Microservices to provide all the CRUD capabilities using Spring boot Implemented data modeling for Relational Databases that includes MySQL Used Spring Data JPA as the ORM framework to connect with MYSQL database Worked with various features in Spring such as Spring AOP Spring Transaction management Implementation of Spring Bean Factory using IOC configured Bean properties using dependency injection Using Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Handled consumer logs and monitor Kafka Metrics using Kafka Manager Developed data transformer for converting legacy data from source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implementation of Hystrix circuit breaker to avoid loss of messages during handling of messages at the consumer level Built realtime dashboard applications for visualization on Apache web servers using Elastic Search Splunk Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social Module Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Worked on performance tuning of cluster using MongoDB configured internode communication between MongoDB nodes and client using SSL encryption by Mongoose Connector Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and managing and maintaining Oracle and NoSQL databases in production domain Worked in setting up Docker daemon Docker client Docker hub Docker registries Created Docker images from Docker file and handled multiple images by storing them in containers to deploy Written Kubernetes deployment and service files for the Docker images Experience in designed micro services deployment using Docker and Kubernetes Deployed docker containers on server nodes with master node using Kubernetes by creating pods and managing on the cluster environment on Kubernetes Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Pivotal Cloud Foundry for injecting the connectionservice binding details from the deployed cloud platform itself Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Extensively used Git for version controlling and regularly Pushed the code to GitHub Designed and prepared Unit test case using JUnit and Log4j as logging tool Used JIRA as the bug tracking system to track and maintain the history of budsissues on everyday basis Used Git for version control and Jenkins for Continuous Integration and Continuous Deployment CICD Developed build and deployment scripts using MAVEN as build tool in Jenkins to move from one environment to other environments Environment Java 18 Angular 60 HTML 5 CSS3 typescript Jasmine Karma Junit GULP NPM Spring Boot MongoDB Spring Data Nodejs OAuth 2 MySQL Elastic Search React with Redux Apache Kafka Docker Kubernetes Pivotal Cloud Foundry EC2 Jenkins MAVEN Spring AOP Spring Cloud NetflixZuul Hystrix Swagger Java Developer Shannon Medical Center San Angelo TX May 2012 to June 2014 Duties Coordinated with project managers analyzed new proposed ideas and Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux CouchDB Responsible for the style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Using Couch DB provided RESTful interface for NoSQL database by creating and replicating Data Insertion via HTTP and stored JSON documents via RESTful interface Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Worked on Oracle Database management system configuring tuning the DBMS with the middleware systems Developed various SQL queries and implemented SQL stored Procedures in Oracle DB for the Application Implemented the caching mechanism in Hibernate to load data from database maintained mapping files of ORM while implementing transaction control layer Hibernate Session Manger used to configure multiple data source and provide independent database connectivity Worked with Micro services architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest with microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Implemented Spring CloudNetflix OSS Stack along with Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Created AWS Lambda EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Used build tools to bundle the application through webpack and used Grunt for task automation and minification Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Used Kubernetes to deploy scale load balance and manage Docker containers with multiple name spaced versions Deploying the applications using Docker container services and building continuous integration CI and continuous deployment CD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Involved in writing test cases for testing the Business components developed in spring using Junit and ridiculing systems like jMock and Mockito and ensured code changes wo nt break existing Unit Tests Developed build and deployment scripts for automating tasks using Gradle as a build tool Environment HTML5 CSS3 Express JS JavaScript React js Redux Node JS Bootstrap REST API Load Balancer Couch DB Oracle DB REST administrations Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Gradle and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Junior Java Developer Google LLC Mountain View CA April 2010 to May 2012 Duties Analyzed and implemented Model View Controller MVC architecture and developed Form classes Action Classes for the entire application using Spring Framework Adopted Hibernate Framework to develop Data Layer and configured XML mapping files Persisted java objects to relational database using Hibernate ORM Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP Implemented Multithreading concept to load data from files to table transforming files from one format to other Made multiple service calls in individual thread safety for a request Designed and developed frontend User Interface using HTML CSS JavaScript and jQuery Framework Involved in design development and implementation of frontend part widgetbased application Clientside validations are performed using JavaScript and jQuery Framework Used JMS for asynchronous exchange of message by applications on different platforms Developed the view components using JSP HTML Struts Logic tags libraries Performed testing of SOAP web services using SOAP UI tool Used JUnit Testing Framework for performing Unit testing Installed WebSphere Application Web Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Designed and developed Use Case Class and Sequence Diagram based on UML standards using Rational Rose Environment J2EE Java Struts Tiles JSP JNDI Clear Case SOAP WSDL UDDI JAXB JAXP Schema XST EJB 20 ANT JavaScript JMS Rational Rose WSAD DB 2 Education Bachelors in Software Engineering The University of Texas at Dallas Dallas TX",
    "extracted_keywords": [
        "Software",
        "Developer",
        "lSoftwarespan",
        "span",
        "lDeveloperspan",
        "Software",
        "Developer",
        "Texas",
        "Department",
        "Transportation",
        "Austin",
        "TX",
        "years",
        "IT",
        "experience",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Enterprise",
        "ClientServer",
        "business",
        "applications",
        "JavaJ2EE",
        "technologies",
        "Expertise",
        "implementation",
        "Core",
        "Java",
        "SE",
        "concepts",
        "Streams",
        "API",
        "Lambda",
        "functions",
        "programming",
        "experience",
        "Core",
        "Java",
        "concepts",
        "Multithreading",
        "Exception",
        "Handling",
        "Collections",
        "Expertise",
        "frontend",
        "UI",
        "HTML5",
        "XHTML",
        "DHTML",
        "CSS3",
        "JavaScript",
        "ES5",
        "ES6",
        "TypeScript",
        "jQuery",
        "Bootstrap",
        "JS",
        "proficient",
        "Typescript",
        "ES6",
        "features",
        "scope",
        "type",
        "restrictions",
        "decorators",
        "arrow",
        "functions",
        "classes",
        "modules",
        "import",
        "exports",
        "Experience",
        "MVC",
        "JavaScript",
        "frameworks",
        "JS",
        "Back",
        "Bone",
        "JS",
        "Ext",
        "JS",
        "Ember",
        "JS",
        "Knockout",
        "JS",
        "experience",
        "MVVM",
        "frameworks",
        "Angular",
        "Angular",
        "web",
        "applications",
        "Experience",
        "Angular",
        "Components",
        "ngModules",
        "Servicesobservablepromises",
        "Directive",
        "Pipes",
        "view",
        "JavaScript",
        "frameworks",
        "jQuery",
        "React",
        "JS",
        "Ember",
        "JS",
        "Strong",
        "experience",
        "Single",
        "Page",
        "Application",
        "SPA",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "stack",
        "Experience",
        "application",
        "JavaScript",
        "frameworks",
        "Backbone",
        "Js",
        "Ember",
        "JS",
        "Controllers",
        "events",
        "clients",
        "request",
        "experience",
        "view",
        "React",
        "JS",
        "components",
        "forms",
        "events",
        "routers",
        "Redux",
        "functions",
        "React",
        "Flux",
        "pattern",
        "core",
        "dependency",
        "Expert",
        "level",
        "knowledge",
        "Serverside",
        "JavaScript",
        "structures",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "Express",
        "JS",
        "understanding",
        "Client",
        "side",
        "build",
        "tools",
        "Gulp",
        "NPM",
        "Webpack",
        "Grunt",
        "Bower",
        "Strong",
        "experience",
        "unit",
        "testing",
        "tools",
        "JavaScript",
        "framework",
        "Karma",
        "Jasmine",
        "Protractor",
        "Angular",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Experience",
        "Microservice",
        "applications",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "exception",
        "handling",
        "Java",
        "Spring",
        "boot",
        "REST",
        "API",
        "use",
        "Exception",
        "Handler",
        "Controller",
        "Advice",
        "annotations",
        "Advanced",
        "Monitoring",
        "Tracing",
        "applications",
        "Spring",
        "Boot",
        "Actuator",
        "Expertise",
        "enterprise",
        "applications",
        "J2EE",
        "technologies",
        "Servlets",
        "JSP",
        "EJB",
        "JMS",
        "JDBC",
        "Expertise",
        "web",
        "MVC",
        "frameworks",
        "Spring",
        "MVC",
        "Struts",
        "Master",
        "level",
        "Spring",
        "system",
        "modules",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "Data",
        "Spring",
        "REST",
        "Spring",
        "JTA",
        "Spring",
        "IO",
        "Spring",
        "AOP",
        "Spring",
        "JDBC",
        "Spring",
        "Transaction",
        "Management",
        "Spring",
        "Batch",
        "Spring",
        "Cloud",
        "Spring",
        "Boot",
        "Experience",
        "security",
        "functionality",
        "projects",
        "Spring",
        "Security",
        "Site",
        "Minder",
        "SSO",
        "Expertise",
        "SOA",
        "Service",
        "Oriented",
        "Architectures",
        "Microservice",
        "J2EE",
        "web",
        "services",
        "Restful",
        "JAXRS",
        "JAXRPC",
        "JAXR",
        "Java",
        "API",
        "XML",
        "Registries",
        "frameworks",
        "Apache",
        "CXF",
        "Jersey",
        "Apache",
        "Axis",
        "WSDL",
        "services",
        "Apache",
        "CXF",
        "framework",
        "experience",
        "Java",
        "ORM",
        "frameworks",
        "Hibernate",
        "JPA",
        "Spring",
        "Data",
        "Experience",
        "SQL",
        "PLSQL",
        "Relational",
        "Database",
        "Management",
        "Systems",
        "Oracle",
        "MY",
        "SQL",
        "MS",
        "SQL",
        "DB2",
        "PostgreSQL",
        "Exceptional",
        "Experience",
        "NoSQL",
        "ORM",
        "frameworks",
        "Mongoose",
        "Connector",
        "Cassandra",
        "Node",
        "Driver",
        "Experience",
        "NoSQL",
        "Mongo",
        "DB",
        "Apache",
        "Cassandra",
        "DynamoDB",
        "Couch",
        "DB",
        "Graph",
        "DB",
        "Optimized",
        "Widecolumn",
        "stores",
        "Apache",
        "Cassandra",
        "queries",
        "datasets",
        "store",
        "columns",
        "data",
        "rows",
        "data",
        "databases",
        "machines",
        "Couch",
        "DBs",
        "document",
        "model",
        "Hands",
        "experience",
        "build",
        "tools",
        "Maven",
        "Gradle",
        "ANT",
        "Experience",
        "integration",
        "deployment",
        "Jenkins",
        "Travis",
        "AWS",
        "Code",
        "Pipeline",
        "cloud",
        "repository",
        "experience",
        "integration",
        "tools",
        "Spring",
        "Integration",
        "Apache",
        "CXF",
        "Apache",
        "Kafka",
        "Apache",
        "Camel",
        "enterprise",
        "application",
        "technologies",
        "JVM",
        "environment",
        "dashboard",
        "applications",
        "visualization",
        "analytics",
        "Apache",
        "web",
        "servers",
        "Elastic",
        "Search",
        "Kibana",
        "40ELK",
        "data",
        "websites",
        "SPLUNK",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "components",
        "EC2",
        "servers",
        "S3",
        "Glacier",
        "objects",
        "Elastic",
        "Beanstalk",
        "Elastic",
        "Cache",
        "Dynamo",
        "DB",
        "data",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "application",
        "traffic",
        "resources",
        "traffic",
        "demands",
        "Experience",
        "Windows",
        "Azure",
        "services",
        "PAAS",
        "IAAS",
        "storages",
        "Blob",
        "SQL",
        "Azure",
        "understanding",
        "PAAS",
        "platforms",
        "shift",
        "Cloud",
        "Foundry",
        "Good",
        "Experience",
        "software",
        "configuration",
        "management",
        "SVN",
        "Clear",
        "Case",
        "Bitbucket",
        "Gitlab",
        "Git",
        "Experience",
        "Message",
        "Queue",
        "MQ",
        "services",
        "Apache",
        "Kafka",
        "Rabbit",
        "MQ",
        "MQ",
        "IBM",
        "MQ",
        "Experience",
        "Apache",
        "Kafka",
        "publishsubscribe",
        "system",
        "queue",
        "volume",
        "data",
        "parameters",
        "joins",
        "data",
        "stream",
        "Streams",
        "API",
        "Apache",
        "Kafka",
        "Kafka",
        "Cluster",
        "Zookeeper",
        "Strong",
        "understanding",
        "implementation",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Eureka",
        "Service",
        "Discovery",
        "Server",
        "Ribbon",
        "Dynamic",
        "Routing",
        "Load",
        "Balancing",
        "Hystrix",
        "Circuit",
        "Breaker",
        "Zuul",
        "Edge",
        "Proxy",
        "Monitoring",
        "log",
        "ELK",
        "Experience",
        "Spring",
        "Security",
        "Framework",
        "User",
        "Access",
        "Management",
        "JWT",
        "authentication",
        "OAuth",
        "configuration",
        "authentication",
        "authorization",
        "Hands",
        "experience",
        "Docker",
        "testing",
        "upgrading",
        "software",
        "applications",
        "Experience",
        "applications",
        "Docker",
        "container",
        "services",
        "integration",
        "deployment",
        "pipeline",
        "Jenkins",
        "GitHub",
        "Orchestration",
        "container",
        "Kubernetes",
        "load",
        "tasks",
        "computer",
        "cluster",
        "load",
        "balancers",
        "API",
        "services",
        "Good",
        "Knowledge",
        "documentation",
        "REST",
        "APIs",
        "Swagger",
        "WADL",
        "Experience",
        "unit",
        "Testing",
        "JUnit",
        "TestNG",
        "Spock",
        "systems",
        "JMock",
        "Mockito",
        "code",
        "changes",
        "Unit",
        "Tests",
        "TestDriven",
        "Development",
        "TDD",
        "process",
        "quality",
        "design",
        "code",
        "Junit",
        "Framework",
        "Experience",
        "conveying",
        "application",
        "servers",
        "example",
        "IBM",
        "WebSphere",
        "Oracle",
        "WebLogic",
        "Jboss",
        "Apache",
        "Tomcat",
        "US",
        "employer",
        "Work",
        "Experience",
        "Software",
        "Developer",
        "Texas",
        "Department",
        "Transportation",
        "Austin",
        "TX",
        "September",
        "Present",
        "Duties",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Experience",
        "building",
        "web",
        "applications",
        "Sencha",
        "Ext",
        "JS",
        "HTML5",
        "CSS",
        "jQuery",
        "crossbrowserplatform",
        "Ext",
        "JS",
        "design",
        "specs",
        "page",
        "layout",
        "code",
        "standards",
        "Ext",
        "JS",
        "components",
        "Menu",
        "Navigation",
        "Session",
        "monitor",
        "application",
        "user",
        "web",
        "pages",
        "jQuery",
        "UI",
        "plugins",
        "Autocomplete",
        "AJAX",
        "JSON",
        "Core",
        "Java",
        "concepts",
        "Collections",
        "Multithreading",
        "Exception",
        "business",
        "components",
        "Performed",
        "Installation",
        "Configuration",
        "Maintenance",
        "production",
        "Cloud",
        "Environments",
        "Tomcat",
        "Apache",
        "Jetty",
        "JIRA",
        "application",
        "market",
        "standards",
        "Spring",
        "MVC",
        "Internationalization",
        "spring",
        "core",
        "modules",
        "services",
        "Spring",
        "REST",
        "Jersey",
        "framework",
        "Performed",
        "Load",
        "testing",
        "SOAP",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "Apache",
        "JMeter",
        "tools",
        "Serverside",
        "validations",
        "Spring",
        "Validation",
        "framework",
        "Deployed",
        "web",
        "services",
        "Spring",
        "Cloud",
        "Foundry",
        "Managed",
        "Domains",
        "Routes",
        "Spring",
        "Cloud",
        "Service",
        "Registry",
        "JMS",
        "API",
        "mail",
        "notification",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "problems",
        "framework",
        "Spring",
        "Framework",
        "data",
        "persistence",
        "transaction",
        "management",
        "Apache",
        "Cassandra",
        "stream",
        "data",
        "time",
        "analytics",
        "dashboard",
        "Google",
        "Charts",
        "API",
        "Angular",
        "JS",
        "Components",
        "Developed",
        "Spring",
        "Batch",
        "processes",
        "reporting",
        "applications",
        "modules",
        "Perl",
        "Korn",
        "shell",
        "scripts",
        "Oracle",
        "database",
        "partitions",
        "subpartitions",
        "Quartz",
        "scheduler",
        "batch",
        "programming",
        "Spring",
        "Batch",
        "validations",
        "rules",
        "JBoss",
        "Business",
        "rules",
        "drl",
        "drools",
        "file",
        "Drools",
        "rule",
        "engine",
        "Rabbit",
        "MQ",
        "transport",
        "data",
        "Queue",
        "components",
        "application",
        "Test",
        "classes",
        "Junit",
        "Easy",
        "Mock",
        "test",
        "coverage",
        "EMMA",
        "AWS",
        "Services",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "EC2",
        "instances",
        "Dockerized",
        "Container",
        "services",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "ANT",
        "scripts",
        "WAR",
        "files",
        "J2EE",
        "components",
        "Environment",
        "JavaJ2EE",
        "JBoss",
        "Spring",
        "Core",
        "JMeter",
        "Cassandra",
        "Hibernate",
        "Jetty",
        "Perl",
        "Spring",
        "MVC",
        "Angular",
        "Js",
        "JavaScript",
        "BackboneJS",
        "HTML5",
        "CSS3",
        "AJAX",
        "Bootstrap",
        "JMS",
        "jQuery",
        "Spring",
        "MVC",
        "Jenkin",
        "Amazon",
        "Amazon",
        "S3",
        "Rabbit",
        "MQ",
        "Oracle",
        "Drools",
        "Software",
        "Engineer",
        "Bechtel",
        "San",
        "Francisco",
        "CA",
        "August",
        "September",
        "Duties",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "viewcontroller",
        "components",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "controllers",
        "views",
        "services",
        "scripts",
        "jQuerybased",
        "Requests",
        "JS",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Applications",
        "AngularJS",
        "jQuery",
        "DOM",
        "manipulation",
        "twoway",
        "controllers",
        "entity",
        "models",
        "Web",
        "service",
        "modules",
        "SOA",
        "architecture",
        "SOAP",
        "RESTful",
        "Services",
        "Experience",
        "web",
        "service",
        "URI",
        "Uniform",
        "Resource",
        "Identifier",
        "service",
        "resource",
        "representation",
        "JSON",
        "set",
        "HTTP",
        "Methods",
        "Spring",
        "MVC",
        "Design",
        "Pattern",
        "UI",
        "data",
        "request",
        "response",
        "ModelValue",
        "Objects",
        "MVC",
        "Design",
        "Pattern",
        "Spring",
        "Container",
        "Controller",
        "classes",
        "Dependency",
        "Injection",
        "IOC",
        "feature",
        "Spring",
        "Framework",
        "beans",
        "User",
        "Interface",
        "AOP",
        "Logging",
        "Developed",
        "Oracle",
        "PLSQL",
        "packages",
        "procedures",
        "data",
        "warehouse",
        "loan",
        "information",
        "systems",
        "platforms",
        "Hibernate",
        "database",
        "mapping",
        "entities",
        "hibernate",
        "annotations",
        "unit",
        "Testing",
        "JUnit",
        "Log4j",
        "information",
        "code",
        "base",
        "Application",
        "Cloud",
        "Foundry",
        "development",
        "platform",
        "testing",
        "methods",
        "Karma",
        "Used",
        "Jenkins",
        "Maven",
        "builds",
        "deployments",
        "track",
        "issues",
        "tasks",
        "individuals",
        "JIRA",
        "system",
        "Environment",
        "HTML",
        "CSS3",
        "jQuery",
        "JavaScript",
        "Agile",
        "Angular",
        "JS",
        "AJAX",
        "Spring",
        "MVC",
        "Spring",
        "Container",
        "Spring",
        "AOP",
        "REST",
        "Hibernate",
        "Oracle",
        "PLSQL",
        "Junit",
        "Log4j",
        "Cloud",
        "Foundry",
        "Karma",
        "Software",
        "Developer",
        "State",
        "Street",
        "Corporation",
        "Boston",
        "MA",
        "June",
        "August",
        "Duties",
        "features",
        "concurrency",
        "Filters",
        "API",
        "Lambda",
        "functions",
        "Functional",
        "Interface",
        "Java",
        "programming",
        "Web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "component",
        "router",
        "navigation",
        "Angular",
        "Directives",
        "Injectables",
        "pipes",
        "Components",
        "Followed",
        "Testdriven",
        "development",
        "TDD",
        "process",
        "UI",
        "test",
        "cases",
        "Ruby",
        "language",
        "Created",
        "Typescript",
        "services",
        "components",
        "RESTAPIs",
        "architecture",
        "Angular",
        "Gherkin",
        "Cucumber",
        "Created",
        "Page",
        "Application",
        "loading",
        "views",
        "route",
        "services",
        "user",
        "experience",
        "Angular",
        "framework",
        "Node",
        "JS",
        "Angular",
        "web",
        "services",
        "forms",
        "Template",
        "forms",
        "Modern",
        "Driven",
        "Reactive",
        "forms",
        "form",
        "validations",
        "server",
        "client",
        "side",
        "Angular",
        "components",
        "Interpolation",
        "input",
        "variables",
        "Bootstrapping",
        "NgFor",
        "NgIf",
        "Router",
        "Outlet",
        "event",
        "Component",
        "decorator",
        "property",
        "knowledge",
        "services",
        "Angular",
        "property",
        "service",
        "dependency",
        "Injection",
        "components",
        "Application",
        "Node",
        "React",
        "NPM",
        "gulp",
        "directories",
        "view",
        "Cucumber",
        "tool",
        "BDD",
        "part",
        "TDD",
        "AWS",
        "EC2",
        "S3",
        "VPC",
        "RDS",
        "SQS",
        "SNS",
        "Typescripts",
        "objects",
        "Components",
        "ngModules",
        "Providers",
        "Services",
        "classes",
        "arrow",
        "functions",
        "types",
        "Express",
        "development",
        "web",
        "services",
        "middleware",
        "configurations",
        "Express",
        "framework",
        "RESTful",
        "RealTime",
        "web",
        "applications",
        "services",
        "Nodejs",
        "verification",
        "validation",
        "process",
        "code",
        "use",
        "Karma",
        "Jasmine",
        "Worked",
        "JavaScript",
        "testing",
        "framework",
        "scenarios",
        "Angular",
        "applications",
        "Node",
        "package",
        "manager",
        "NPM",
        "Gulp",
        "JavaScript",
        "build",
        "tools",
        "task",
        "runners",
        "Webpack",
        "Angular",
        "SASS",
        "Style",
        "sheets",
        "web",
        "services",
        "Spring",
        "boot",
        "Jersey",
        "framework",
        "Spring",
        "boot",
        "cloud",
        "micro",
        "services",
        "Spring",
        "application",
        "configuration",
        "application",
        "REST",
        "Microservices",
        "CRUD",
        "capabilities",
        "Spring",
        "boot",
        "data",
        "modeling",
        "Relational",
        "Databases",
        "MySQL",
        "Spring",
        "Data",
        "JPA",
        "ORM",
        "framework",
        "MYSQL",
        "database",
        "features",
        "Spring",
        "Spring",
        "AOP",
        "Spring",
        "Transaction",
        "management",
        "Implementation",
        "Spring",
        "Bean",
        "Factory",
        "IOC",
        "Bean",
        "properties",
        "dependency",
        "injection",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "consumer",
        "logs",
        "Kafka",
        "Metrics",
        "Kafka",
        "Manager",
        "Developed",
        "data",
        "transformer",
        "legacy",
        "data",
        "source",
        "tables",
        "Avro",
        "format",
        "Kafka",
        "Camel",
        "file",
        "routes",
        "host",
        "locations",
        "Spring",
        "Netflix",
        "Zuul",
        "API",
        "gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "service",
        "discovery",
        "APIs",
        "Implementation",
        "Hystrix",
        "circuit",
        "breaker",
        "loss",
        "messages",
        "handling",
        "messages",
        "consumer",
        "level",
        "dashboard",
        "applications",
        "visualization",
        "Apache",
        "web",
        "servers",
        "Elastic",
        "Search",
        "Splunk",
        "Spring",
        "Security",
        "OAuth",
        "mechanism",
        "authentication",
        "websites",
        "Spring",
        "Social",
        "Module",
        "pipeline",
        "Mongo",
        "DB",
        "cluster",
        "Mongoose",
        "Connector",
        "sources",
        "Elastic",
        "Search",
        "Mongo",
        "DB",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "MongoDB",
        "communication",
        "nodes",
        "client",
        "SSL",
        "encryption",
        "Mongoose",
        "Connector",
        "Composed",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "data",
        "changes",
        "reporting",
        "Oracle",
        "NoSQL",
        "production",
        "domain",
        "Docker",
        "daemon",
        "Docker",
        "client",
        "Docker",
        "hub",
        "Docker",
        "Created",
        "Docker",
        "images",
        "Docker",
        "file",
        "images",
        "containers",
        "Written",
        "Kubernetes",
        "deployment",
        "service",
        "files",
        "Docker",
        "Experience",
        "micro",
        "services",
        "deployment",
        "Docker",
        "Kubernetes",
        "docker",
        "containers",
        "server",
        "nodes",
        "master",
        "node",
        "Kubernetes",
        "pods",
        "cluster",
        "environment",
        "Kubernetes",
        "Application",
        "Cloud",
        "Foundry",
        "development",
        "platform",
        "Cloud",
        "Foundry",
        "connectionservice",
        "details",
        "cloud",
        "platform",
        "Load",
        "Balancer",
        "Cloud",
        "Foundry",
        "performance",
        "reliability",
        "server",
        "instance",
        "HAProxy",
        "test",
        "environments",
        "cloud",
        "Foundry",
        "Git",
        "version",
        "code",
        "GitHub",
        "Unit",
        "test",
        "case",
        "JUnit",
        "Log4j",
        "tool",
        "JIRA",
        "bug",
        "system",
        "history",
        "budsissues",
        "basis",
        "Git",
        "version",
        "control",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "CICD",
        "build",
        "deployment",
        "scripts",
        "MAVEN",
        "build",
        "tool",
        "Jenkins",
        "environment",
        "environments",
        "Environment",
        "Java",
        "Angular",
        "HTML",
        "CSS3",
        "typescript",
        "Jasmine",
        "Karma",
        "Junit",
        "GULP",
        "NPM",
        "Spring",
        "Boot",
        "MongoDB",
        "Spring",
        "Data",
        "Nodejs",
        "OAuth",
        "MySQL",
        "Elastic",
        "Search",
        "React",
        "Redux",
        "Apache",
        "Kafka",
        "Docker",
        "Kubernetes",
        "Cloud",
        "Foundry",
        "EC2",
        "Jenkins",
        "MAVEN",
        "Spring",
        "AOP",
        "Spring",
        "Cloud",
        "NetflixZuul",
        "Hystrix",
        "Swagger",
        "Java",
        "Developer",
        "Shannon",
        "Medical",
        "Center",
        "San",
        "Angelo",
        "TX",
        "May",
        "June",
        "Duties",
        "project",
        "managers",
        "ideas",
        "Requirements",
        "tool",
        "modules",
        "Developed",
        "User",
        "Interface",
        "React",
        "JS",
        "HTML5",
        "CSSCSS3SAAS",
        "Bootstrap",
        "Redux",
        "CouchDB",
        "Responsible",
        "style",
        "web",
        "page",
        "CSS",
        "behavior",
        "mixing",
        "operations",
        "functions",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Redux",
        "library",
        "Reactjs",
        "Router",
        "Forms",
        "Animations",
        "Keys",
        "Events",
        "Flux",
        "concept",
        "React",
        "UI",
        "architecture",
        "Tree",
        "Building",
        "components",
        "library",
        "Table",
        "Grid",
        "React",
        "components",
        "functions",
        "pages",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "Nodejs",
        "Expressjs",
        "web",
        "framework",
        "Nodejs",
        "server",
        "Postprocessors",
        "tests",
        "build",
        "target",
        "Developed",
        "REST",
        "API",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "BodyParse",
        "node",
        "modules",
        "web",
        "application",
        "data",
        "streams",
        "Node",
        "JS",
        "data",
        "means",
        "application",
        "Added",
        "ExcelBuilding",
        "Tabular",
        "data",
        "Excel",
        "Format",
        "React",
        "unit",
        "test",
        "scripts",
        "Karma",
        "Jasmine",
        "Angular",
        "framework",
        "Mocha",
        "Node",
        "JS",
        "API",
        "end",
        "Couch",
        "DB",
        "interface",
        "NoSQL",
        "database",
        "Data",
        "Insertion",
        "HTTP",
        "documents",
        "RESTful",
        "interface",
        "Replication",
        "Filters",
        "CouchDB",
        "data",
        "nodes",
        "Oracle",
        "Database",
        "management",
        "system",
        "DBMS",
        "middleware",
        "systems",
        "SQL",
        "queries",
        "SQL",
        "Procedures",
        "Oracle",
        "DB",
        "Application",
        "mechanism",
        "Hibernate",
        "data",
        "database",
        "mapping",
        "files",
        "ORM",
        "transaction",
        "control",
        "layer",
        "Hibernate",
        "Session",
        "Manger",
        "data",
        "source",
        "database",
        "connectivity",
        "Micro",
        "services",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "microservice",
        "architecture",
        "web",
        "services",
        "Apache",
        "CXF",
        "Spring",
        "Boot",
        "framework",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "Spring",
        "bean",
        "Spring",
        "CloudNetflix",
        "OSS",
        "Stack",
        "Netflix",
        "Zuul",
        "API",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "AWS",
        "Lambda",
        "EC2",
        "AWS",
        "environment",
        "security",
        "groups",
        "Amazon",
        "VPCs",
        "node",
        "Elasticsearch",
        "cluster",
        "index",
        "MongoDB",
        "use",
        "NodeJS",
        "Express",
        "AWS",
        "EC2",
        "Ubuntu",
        "instances",
        "build",
        "tools",
        "application",
        "webpack",
        "Grunt",
        "task",
        "automation",
        "minification",
        "application",
        "AWS",
        "stack",
        "EC2",
        "Mongo",
        "DB",
        "Docker",
        "Kubernetes",
        "Orchestration",
        "container",
        "EKS",
        "highavailability",
        "fault",
        "tolerance",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "name",
        "versions",
        "applications",
        "Docker",
        "container",
        "services",
        "integration",
        "CI",
        "CD",
        "pipeline",
        "Jenkins",
        "GitHub",
        "Kibana",
        "logging",
        "monitoring",
        "Elasticsearch",
        "application",
        "data",
        "analytics",
        "visualization",
        "users",
        "Employed",
        "Sign",
        "SSO",
        "authentication",
        "Site",
        "Minder",
        "application",
        "websites",
        "test",
        "cases",
        "Business",
        "components",
        "spring",
        "Junit",
        "systems",
        "jMock",
        "Mockito",
        "code",
        "changes",
        "Unit",
        "Tests",
        "build",
        "deployment",
        "scripts",
        "tasks",
        "Gradle",
        "build",
        "tool",
        "Environment",
        "HTML5",
        "CSS3",
        "Express",
        "JS",
        "JavaScript",
        "React",
        "Redux",
        "Node",
        "JS",
        "Bootstrap",
        "REST",
        "API",
        "Load",
        "Balancer",
        "Couch",
        "DB",
        "Oracle",
        "DB",
        "REST",
        "administrations",
        "Docker",
        "Mocha",
        "Jasmine",
        "Karma",
        "Gulp",
        "SSO",
        "Authentication",
        "Web",
        "Pack",
        "Kubernetes",
        "Gradle",
        "Jenkins",
        "GIT",
        "Jenkins",
        "AWS",
        "Services",
        "Elastic",
        "Cloud",
        "ComputeEC2",
        "Junior",
        "Java",
        "Developer",
        "Google",
        "LLC",
        "Mountain",
        "View",
        "CA",
        "April",
        "May",
        "Duties",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Form",
        "classes",
        "Action",
        "Classes",
        "application",
        "Spring",
        "Framework",
        "Adopted",
        "Hibernate",
        "Framework",
        "Data",
        "Layer",
        "XML",
        "mapping",
        "files",
        "database",
        "Hibernate",
        "ORM",
        "Hibernate",
        "Annotations",
        "time",
        "configuration",
        "level",
        "Annotated",
        "bean",
        "Hibernate",
        "DAO",
        "layer",
        "view",
        "components",
        "Dispatcher",
        "Servlet",
        "View",
        "Resolver",
        "requests",
        "Spring",
        "MVC",
        "flow",
        "Cross",
        "concerns",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "Multithreading",
        "concept",
        "data",
        "files",
        "table",
        "files",
        "format",
        "service",
        "calls",
        "thread",
        "safety",
        "request",
        "frontend",
        "User",
        "Interface",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Framework",
        "design",
        "development",
        "implementation",
        "frontend",
        "part",
        "application",
        "validations",
        "JavaScript",
        "jQuery",
        "Framework",
        "JMS",
        "exchange",
        "message",
        "applications",
        "platforms",
        "view",
        "components",
        "JSP",
        "HTML",
        "Struts",
        "Logic",
        "tags",
        "testing",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "UI",
        "tool",
        "JUnit",
        "Testing",
        "Framework",
        "Unit",
        "testing",
        "Installed",
        "WebSphere",
        "Application",
        "Web",
        "Server",
        "HTTP",
        "RequestResponse",
        "request",
        "response",
        "client",
        "Session",
        "Tracking",
        "JSP",
        "Use",
        "Case",
        "Class",
        "Sequence",
        "Diagram",
        "UML",
        "standards",
        "Rational",
        "Rose",
        "Environment",
        "J2EE",
        "Java",
        "Struts",
        "JSP",
        "JNDI",
        "Clear",
        "Case",
        "SOAP",
        "WSDL",
        "UDDI",
        "JAXB",
        "JAXP",
        "Schema",
        "XST",
        "EJB",
        "ANT",
        "JavaScript",
        "JMS",
        "Rational",
        "Rose",
        "WSAD",
        "DB",
        "Education",
        "Bachelors",
        "Software",
        "Engineering",
        "University",
        "Texas",
        "Dallas",
        "Dallas",
        "TX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:54:22.536837",
    "resume_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Texas Department of Transportation Austin TX 9 years of IT experience in analysis design development testing and deployment of webbased and Enterprise based ClientServer business applications using JavaJ2EE technologies Expertise in the implementation of Core Java SE 8 concepts like Streams API Lambda functions Functional programming Extensive experience with Core Java concepts like Multithreading Exception Handling and Collections Expertise in designing and developing frontend UI using HTML5 XHTML DHTML CSS3 JavaScript ES5 ES6 TypeScript jQuery Bootstrap JS proficient with Typescript ES6 new features block scope type restrictions decorators arrow functions classes interfaces modules import and exports Experience in using MVC based JavaScript frameworks like Angular JS Back Bone JS Ext JS Ember JS and Knockout JS Extensive experience on MVVM frameworks like Angular 40 Angular 20 to develop dynamic web applications Experience in designing and developing various Angular 2040 Components ngModules Servicesobservablepromises Directive and Pipes Extensively used view rendering JavaScript frameworks like jQuery React JS and Ember JS Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Experience in application of clientside JavaScript frameworks such as Backbone Js Ember JS to create Controllers to handle events triggered by clients and send request to server Solid experience in developing the rendering view React JS components forms events routers and Redux asynchronous functions and implemented React Flux pattern for core dependency Expert level knowledge on Serverside JavaScript structures like Node JS Hapi JS and Express JS Good understanding of Client side build tools like Gulp NPM Webpack Grunt and Bower Strong experience in unit testing tools of JavaScript framework like Karma Jasmine and Protractor for Angular Mocha and Chai for React JS Experience in developing and deploying Microservice oriented applications using Spring Boot and Spring Cloud and used Spring Boot to modularize code and implemented Rest APIs using Spring Rest Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Achieved Advanced Monitoring and Tracing of applications with Spring Boot Actuator Expertise in developing webbased enterprise applications using J2EE technologies such as Servlets JSP EJB JMS and JDBC Expertise with various web MVC frameworks such as Spring MVC and Struts Master level aptitudes in Spring system modules like Spring IOC Spring MVC Spring Data Spring REST Spring JTA Spring IO Spring AOP Spring JDBC Spring Transaction Management Spring Batch Spring Cloud and Spring Boot Experience in implementing security functionality for various projects using Spring Security and Site Minder SSO Expertise in developing SOA Service Oriented Architectures and Microservice architectures using J2EE web services based on Restful JAXRS SOAPJAX_WS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Apache Axis Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF framework Extensive experience with Java based ORM frameworks involving Hibernate JPA Spring Data and iBATIS Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MY SQL MS SQL DB2 and PostgreSQL Exceptional Experience with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience in working with NoSQL databases Mongo DB Apache Cassandra DynamoDB Couch DB Graph DB Optimized Widecolumn stores such as Apache Cassandra for queries over large datasets and store columns of data together instead of rows synchronized the data between databases and machines using Couch DBs schemafree document model Hands on experience with build tools like Maven Gradle and ANT Experience in building continuous integration and continuous deployment using Jenkins Travis and AWS Code Pipeline with any cloud repository Solid experience in integration tools like Spring Integration Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Developed realtime dashboard applications for visualization and analytics on Apache web servers using Elastic Search and Kibana 40ELK Analyzed and visualized the machinegenerated data gathered from the websites using SPLUNK Experience in using various Amazon Web Services AWS components like EC2 for virtual servers S3 and Glacier for storing objects Elastic Beanstalk Elastic Cache and Dynamo DB for storing data Used Elastic Load Balancer ELB for distributing incoming application traffic and scaling resources to meet traffic demands Experience in Windows Azure services like PAAS IAAS and worked on storages like Blob and SQL Azure Good understanding of PAAS platforms like Open shift and Pivotal Cloud Foundry Good Experience in software configuration management using SVN Clear Case Bitbucket Gitlab and Git Experience in Message Queue MQ services like Apache Kafka Rabbit MQ Active MQ and IBM MQ Experience in developing Apache Kafka as a distributed publishsubscribe messaging system and a robust queue that can handle a high volume of data created windowing parameters and performed joins of data within a stream using Streams API within Apache Kafka Worked with Kafka Cluster using Zookeeper Strong understanding in implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancing Hystrix Circuit Breaker Zuul Edge Proxy and Monitoring and centralized log analyses ELK Experience in Spring Security Framework for User Access Management JWT tokenbased authentication and involved OAuth 20 configuration for authentication and authorization Hands on experience using Docker for installing testing upgrading removing and running software applications Experience in deploying the applications using Docker container services and building continuous integration and deployment pipeline using Jenkins with GitHub Extensively used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Experience on performing unit Testing utilizing JUnit TestNG Spock and ridiculing systems like JMock and Mockito and ensured code changes wont break existing Unit Tests Implemented the TestDriven Development TDD process to develop the quality and design of code using Junit Framework Experience in conveying and arranging application servers for example IBM WebSphere Oracle WebLogic Jboss and Apache Tomcat Authorized to work in the US for any employer Work Experience Software Developer Texas Department of Transportation Austin TX September 2018 to Present Duties Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Experience in building or supporting web applications with Sencha Ext JS HTML5 CSS jQuery Ajax Developed crossbrowserplatform using Ext JS to desired design specs for single page layout using code standards Worked on Ext JS and created reusable components like Menu Navigation Session monitor which was very useful in the application Developed user interactive web pages using jQuery UI plugins like Draggable Resizable Autocomplete AJAX JSON Utilized Core Java concepts like Collections Multithreading and Exception handling to develop business components Performed Installation Configuration and Maintenance of production Cloud Environments such as Tomcat Apache Jetty and JIRA Designed application to meet international market standards using Spring MVC Internationalization and spring core modules Developed RESTful services based on Spring REST using Jersey framework Performed Load testing of SOAP Web Services using SOAP UI and Apache JMeter tools Serverside validations are achieved using Spring Validation framework Deployed and monitored web services using Spring Cloud Foundry Managed Domains and Routes with Spring Cloud Service Registry Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used iBATIS framework with Spring Framework for data persistence and transaction management Utilized Apache Cassandra for storing the external stream of data and building real time analytics dashboard using Google Charts API with Angular JS Components Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database with partitions and subpartitions Implemented Quartz scheduler to execute batch programming using Spring Batch Implemented various validations rules using JBoss Business rules in the drl drools file using Drools rule engine Used Rabbit MQ for transport of data in Queue in between components of the application Developed Test classes using Junit and Easy Mock and test coverage using EMMA plugin Utilized AWS Services platform to upload data into AWS S3 buckets creating EC2 instances and to deploy the Dockerized Container services Used Log4J to capture the log that includes runtime exceptions Developed the ANT scripts for preparing WAR files used to deploy J2EE components Environment JavaJ2EE JBoss 30 Spring Core JMeter Cassandra Hibernate Jetty Perl Spring MVC Angular Js JavaScript BackboneJS HTML5 CSS3 AJAX Bootstrap JMS jQuery Spring MVC Jenkin Amazon Ec2 Amazon S3 Rabbit MQ Oracle Drools Software Engineer Bechtel San Francisco CA August 2016 to September 2018 Duties Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology Developed the viewcontroller components using HTML5 CSS3 JavaScript jQuery and Angular JS Worked on writing AngularJS controllers views services and scripts on jQuerybased Ajax Requests Used Angular JS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications Worked with AngularJS and jQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services Experience in developing RESTful web service that usually defines a URI Uniform Resource Identifier which is a service that provides resource representation such as JSON and a set of HTTP Methods Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response Responsible for creating ModelValue Objects in MVC Design Pattern Involved in writing Spring Container and Controller classes Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging Developed Oracle PLSQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Performing unit Testing utilizing JUnit and configured Log4j for adding the debugging information in the code base Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Integrated testing methods implemented by using Karma Used Jenkins and Maven for automated builds and deployments To keep track of issues and tasks on individuals used JIRA ticketing system Environment HTML CSS3 jQuery JavaScript Agile Angular JS AJAX Spring MVC Spring Container Spring AOP REST Hibernate Oracle PLSQL Junit Log4j Pivotal Cloud Foundry Karma Software Developer State Street Corporation Boston MA June 2014 to August 2016 Duties Used features like concurrency streams Filters API and Lambda functions and Functional Interface Java 18 programming Designed and Developed dynamic and responsive Web pages using HTML5 CSS3 and JavaScript Implemented Angular 6 component router for navigation Worked with Angular 4 Directives Injectables pipes Components Followed Testdriven development TDD process and wrote automated UI test cases in Ruby language Created Typescript reusable services and components to consume RESTAPIs using Componentbased architecture provided by Angular 6 Experienced in writing Gherkin that can be understandable by Cucumber Created single Page Application with loading multiple views using route services and adding more user experience to make dynamic by using Angular 6 framework and Node JS Worked on Angular 6 by consuming Restful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms to perform form validations both on server and client side Created Angular 6 components implemented Interpolation input variables Bootstrapping NgFor NgIf Router Outlet binding the click event Component decorator binding to the hidden property Developed Good knowledge on creating services with Angular 6 Injectable property to make the service available for dependency Injection when creating components Worked with Application using Node and React libraries NPM gulp directories to generate desired view Worked with Cucumber a tool for BDD a part of TDD Worked on AWS like EC2 S3 VPC RDS SQS SNS Developed various Typescripts ES6 objects including Components ngModules Providers Services and classes using arrow functions and optional types Worked with Express for development of RESTful web services and middleware configurations Using Express framework built RESTful RealTime web applications and services with Nodejs Performed verification and validation process for the code written by making use of Karma and Jasmine Worked with JavaScript testing framework by testing across various scenarios of the Angular 6 applications Worked with the Node package manager NPM along with Gulp Used JavaScript build tools and task runners like Webpack for Angular 6 Worked with SASS to build better and optimized Style sheets Designed and developed RESTful web services using Spring boot and Jersey framework Used Spring boot which is radically faster in building cloud micro services and develop Spring based application with very less configuration Migrated existing application into REST based Microservices to provide all the CRUD capabilities using Spring boot Implemented data modeling for Relational Databases that includes MySQL Used Spring Data JPA as the ORM framework to connect with MYSQL database Worked with various features in Spring such as Spring AOP Spring Transaction management Implementation of Spring Bean Factory using IOC configured Bean properties using dependency injection Using Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Handled consumer logs and monitor Kafka Metrics using Kafka Manager Developed data transformer for converting legacy data from source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implementation of Hystrix circuit breaker to avoid loss of messages during handling of messages at the consumer level Built realtime dashboard applications for visualization on Apache web servers using Elastic Search Splunk Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social Module Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Worked on performance tuning of cluster using MongoDB configured internode communication between MongoDB nodes and client using SSL encryption by Mongoose Connector Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and managing and maintaining Oracle and NoSQL databases in production domain Worked in setting up Docker daemon Docker client Docker hub Docker registries Created Docker images from Docker file and handled multiple images by storing them in containers to deploy Written Kubernetes deployment and service files for the Docker images Experience in designed micro services deployment using Docker and Kubernetes Deployed docker containers on server nodes with master node using Kubernetes by creating pods and managing on the cluster environment on Kubernetes Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Pivotal Cloud Foundry for injecting the connectionservice binding details from the deployed cloud platform itself Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Extensively used Git for version controlling and regularly Pushed the code to GitHub Designed and prepared Unit test case using JUnit and Log4j as logging tool Used JIRA as the bug tracking system to track and maintain the history of budsissues on everyday basis Used Git for version control and Jenkins for Continuous Integration and Continuous Deployment CICD Developed build and deployment scripts using MAVEN as build tool in Jenkins to move from one environment to other environments Environment Java 18 Angular 60 HTML 5 CSS3 typescript Jasmine Karma Junit GULP NPM Spring Boot MongoDB Spring Data Nodejs OAuth 2 MySQL Elastic Search React with Redux Apache Kafka Docker Kubernetes Pivotal Cloud Foundry EC2 Jenkins MAVEN Spring AOP Spring Cloud NetflixZuul Hystrix Swagger Java Developer Shannon Medical Center San Angelo TX May 2012 to June 2014 Duties Coordinated with project managers analyzed new proposed ideas and Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux CouchDB Responsible for the style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Using Couch DB provided RESTful interface for NoSQL database by creating and replicating Data Insertion via HTTP and stored JSON documents via RESTful interface Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Worked on Oracle Database management system configuring tuning the DBMS with the middleware systems Developed various SQL queries and implemented SQL stored Procedures in Oracle DB for the Application Implemented the caching mechanism in Hibernate to load data from database maintained mapping files of ORM while implementing transaction control layer Hibernate Session Manger used to configure multiple data source and provide independent database connectivity Worked with Micro services architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest with microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Implemented Spring CloudNetflix OSS Stack along with Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Created AWS Lambda EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Used build tools to bundle the application through webpack and used Grunt for task automation and minification Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Used Kubernetes to deploy scale load balance and manage Docker containers with multiple name spaced versions Deploying the applications using Docker container services and building continuous integration CI and continuous deployment CD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Involved in writing test cases for testing the Business components developed in spring using Junit and ridiculing systems like jMock and Mockito and ensured code changes wont break existing Unit Tests Developed build and deployment scripts for automating tasks using Gradle as a build tool Environment HTML5 CSS3 Express JS JavaScript React js Redux Node JS Bootstrap REST API Load Balancer Couch DB Oracle DB REST administrations Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Gradle and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Junior Java Developer Google LLC Mountain View CA April 2010 to May 2012 Duties Analyzed and implemented Model View Controller MVC architecture and developed Form classes Action Classes for the entire application using Spring Framework Adopted Hibernate Framework to develop Data Layer and configured XML mapping files Persisted java objects to relational database using Hibernate ORM Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP Implemented Multithreading concept to load data from files to table transforming files from one format to other Made multiple service calls in individual thread safety for a request Designed and developed frontend User Interface using HTML CSS JavaScript and jQuery Framework Involved in design development and implementation of frontend part widgetbased application Clientside validations are performed using JavaScript and jQuery Framework Used JMS for asynchronous exchange of message by applications on different platforms Developed the view components using JSP HTML Struts Logic tags libraries Performed testing of SOAP web services using SOAP UI tool Used JUnit Testing Framework for performing Unit testing Installed WebSphere Application Web Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Designed and developed Use Case Class and Sequence Diagram based on UML standards using Rational Rose Environment J2EE Java Struts Tiles JSP JNDI Clear Case SOAP WSDL UDDI JAXB JAXP Schema XST EJB 20 ANT JavaScript JMS Rational Rose WSAD DB 2 Education Bachelors in Software Engineering The University of Texas at Dallas Dallas TX",
    "unique_id": "95f5c2a7-8f7a-471b-a0cf-1c6d7810c2c8"
}