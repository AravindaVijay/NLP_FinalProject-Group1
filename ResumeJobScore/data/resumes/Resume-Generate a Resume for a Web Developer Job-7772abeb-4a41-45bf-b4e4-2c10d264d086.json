{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Charter Communications Alpena MI Authorized to work in the US for any employer Work Experience Python Developer Charter Communications Alpena MI July 2017 to Present Responsibilities Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and Highcharts for data visualization of the served pages Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed server based web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built Webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax JQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Sr Python Developer Eliassen Group Austin TX March 2015 to July 2017 Responsibilities Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requiremen Python Developer GE Health Care Waukesha WI December 2012 to March 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Web developer Comcast Englewood CO August 2010 to December 2012 Responsibilities High Performing Reliable collection platform development UnixLinux infrastructure application development including performance tuning and trouble shooting Technologies Ruby Python Oracle Linux Red Hat Centos Ubuntu Bash Korn sed gawk regex iptables ssh Developed software framework used for event collection encompassing all Comcast business lines Framework includes stream and file collection pushpull proxying distribution and load balancing Used Collection framework to replace a 7 million dollar 3rd party Video On Demand system and 82 million back office system Application supports over 345 million transactions per week with 23s of the markets rolled out System footprint is less than 150M of memory and work load of less than 12 Used framework to create data Collection for Interactive TV system The application proxies user interactions from the set top box to content providers System is currently in trial with approximately 20 million transactions per week Framework was put against commercialvendor applications in a performance test Framework collected streamed data at a rate of 56k per second with the nearest competitor at 44k Used framework to create the Canoe system for national voting and polling Comcast was recognized as the first MBO nationally to complete an end to end test with Canoe Ventures using this application Utilize sysctls ulimits and other tools to profile and performance tune applications at the OS kernel and network level Trouble shoot across all spectrums from application environment OS network hardware and security using various linux tools ranging from traceroute to tcpdump Created a virtual test environment using Apache iptables and other software to mimic real system failures ranging from network to service level Provide technical guidance and solutions on software hardware security and networking to department and throughout Comcast Components from the framework exist in every major Comcast business line Education Bachelors",
    "entities": [
        "TestDriven",
        "GIT",
        "Python",
        "Amazon Cloud Responsible",
        "AJAX",
        "Amazon AWS S3",
        "Developed",
        "Present Responsibilities Created",
        "GUI",
        "US",
        "Model APIs Views",
        "Developed MVC",
        "HTML AJAX CSS",
        "Build",
        "Comcast",
        "Created UI",
        "Bash Used Restful",
        "PHP HTML CSS",
        "Python Unit",
        "MBO",
        "Created",
        "JavaScript",
        "Python Developer GE Health",
        "UnixLinux",
        "Canoe",
        "Framework",
        "UI",
        "Unit Test Framework Created Selenium",
        "Coding",
        "Comcast Englewood CO",
        "Microsoft",
        "Interfacing",
        "Continuous Integration",
        "Canoe Ventures",
        "Test Plans and Test Cases Verifying",
        "Django Improved",
        "HTML",
        "Implemented Data",
        "API RESTful Web Service",
        "Panda",
        "Heroku",
        "Collection for Interactive TV",
        "SQL",
        "FLASK Framework Developed",
        "SDK",
        "XML",
        "Jenkins Nexus Extensive",
        "the Data Security",
        "lPythonspan",
        "JavaScript Added",
        "PHP",
        "NoSQL",
        "Python Django",
        "HTMLCSSJQuery and Highcharts",
        "Sr Python Developer Eliassen Group",
        "Maintained",
        "RDS",
        "Shell",
        "FLASK",
        "AzureAws Established",
        "Technologies Ruby Python Oracle Linux Red Hat",
        "Views",
        "Comcast Components",
        "PyQt",
        "Monitoring Service MMS",
        "TX",
        "JSP Developed",
        "PythonDjango",
        "AWS Environment Created Test",
        "Built Webservices",
        "Created PHPMySQL"
    ],
    "experience": "Experience Python Developer Charter Communications Alpena MI July 2017 to Present Responsibilities Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and Highcharts for data visualization of the served pages Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed server based web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built Webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax JQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Sr Python Developer Eliassen Group Austin TX March 2015 to July 2017 Responsibilities Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requiremen Python Developer GE Health Care Waukesha WI December 2012 to March 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Web developer Comcast Englewood CO August 2010 to December 2012 Responsibilities High Performing Reliable collection platform development UnixLinux infrastructure application development including performance tuning and trouble shooting Technologies Ruby Python Oracle Linux Red Hat Centos Ubuntu Bash Korn sed gawk regex iptables ssh Developed software framework used for event collection encompassing all Comcast business lines Framework includes stream and file collection pushpull proxying distribution and load balancing Used Collection framework to replace a 7 million dollar 3rd party Video On Demand system and 82 million back office system Application supports over 345 million transactions per week with 23s of the markets rolled out System footprint is less than 150 M of memory and work load of less than 12 Used framework to create data Collection for Interactive TV system The application proxies user interactions from the set top box to content providers System is currently in trial with approximately 20 million transactions per week Framework was put against commercialvendor applications in a performance test Framework collected streamed data at a rate of 56k per second with the nearest competitor at 44k Used framework to create the Canoe system for national voting and polling Comcast was recognized as the first MBO nationally to complete an end to end test with Canoe Ventures using this application Utilize sysctls ulimits and other tools to profile and performance tune applications at the OS kernel and network level Trouble shoot across all spectrums from application environment OS network hardware and security using various linux tools ranging from traceroute to tcpdump Created a virtual test environment using Apache iptables and other software to mimic real system failures ranging from network to service level Provide technical guidance and solutions on software hardware security and networking to department and throughout Comcast Components from the framework exist in every major Comcast business line Education Bachelors",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Charter",
        "Communications",
        "Alpena",
        "MI",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Charter",
        "Communications",
        "Alpena",
        "MI",
        "July",
        "Present",
        "Responsibilities",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "Highcharts",
        "data",
        "visualization",
        "pages",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "Designed",
        "Cassandra",
        "schema",
        "APIs",
        "XML",
        "file",
        "Python",
        "data",
        "database",
        "Python",
        "stack",
        "APIs",
        "NoSQL",
        "database",
        "Python",
        "testdriven",
        "development",
        "techniques",
        "server",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "premise",
        "Monitoring",
        "Service",
        "MMS",
        "dashboards",
        "MongoDB",
        "environment",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Restful",
        "web",
        "service",
        "validation",
        "AWS",
        "Cloud",
        "Watch",
        "Monitoring",
        "metrics",
        "file",
        "Webservices",
        "SOAP",
        "business",
        "application",
        "legacy",
        "applications",
        "applications",
        "applications",
        "JIRA",
        "methodology",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Responsible",
        "programming",
        "PHP",
        "functionality",
        "JavaScript",
        "Ajax",
        "JQuery",
        "libraries",
        "technologies",
        "GUI",
        "PHP",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Design",
        "development",
        "UI",
        "screens",
        "JSP",
        "Developed",
        "user",
        "registration",
        "login",
        "feature",
        "application",
        "process",
        "scratch",
        "Django",
        "user",
        "model",
        "framework",
        "response",
        "user",
        "request",
        "JavaScript",
        "validation",
        "Sr",
        "Python",
        "Developer",
        "Eliassen",
        "Group",
        "Austin",
        "TX",
        "March",
        "July",
        "Responsibilities",
        "serverside",
        "applications",
        "Python",
        "programming",
        "clients",
        "business",
        "requirements",
        "Django",
        "frameworks",
        "Python",
        "webpages",
        "tools",
        "monitoring",
        "notification",
        "Python",
        "application",
        "HTML",
        "Java",
        "script",
        "design",
        "development",
        "data",
        "structures",
        "directories",
        "tuples",
        "class",
        "inheritance",
        "algorithms",
        "networks",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "tandem",
        "Flash",
        "developer",
        "data",
        "query",
        "string",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "web",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Data",
        "tables",
        "update",
        "patient",
        "records",
        "policy",
        "information",
        "PyQt",
        "module",
        "status",
        "Apache",
        "Cassandra",
        "instance",
        "python",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "Data",
        "Security",
        "report",
        "data",
        "UI",
        "JavaScript",
        "HTML5CSS3",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "MySQL",
        "connector",
        "information",
        "MySQL",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "web",
        "application",
        "prototype",
        "jQuery",
        "Angular",
        "JS",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "application",
        "accordance",
        "clienteles",
        "Python",
        "Developer",
        "GE",
        "Health",
        "Care",
        "Waukesha",
        "WI",
        "December",
        "March",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Build",
        "database",
        "mapping",
        "classes",
        "FLASK",
        "models",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Created",
        "Test",
        "plans",
        "SQL",
        "scripts",
        "data",
        "tables",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "domain",
        "class",
        "business",
        "logic",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Expert",
        "knowledge",
        "application",
        "development",
        "patterns",
        "web",
        "concept",
        "business",
        "logic",
        "discussions",
        "use",
        "case",
        "design",
        "product",
        "requirement",
        "documents",
        "specifications",
        "test",
        "strategy",
        "test",
        "plan",
        "test",
        "case",
        "documents",
        "Experience",
        "Selenium",
        "Automation",
        "Selenium",
        "Web",
        "Driver",
        "Java",
        "Unit",
        "Test",
        "Framework",
        "Created",
        "Selenium",
        "webdriver",
        "automation",
        "scripts",
        "Python",
        "functionality",
        "browsers",
        "understanding",
        "Microsoft",
        "Azure",
        "cloud",
        "platform",
        "Experience",
        "cloud",
        "delivery",
        "platforms",
        "AzureAws",
        "framework",
        "Continuous",
        "Integration",
        "environment",
        "Jenkins",
        "Nexus",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "selenium",
        "automation",
        "framework",
        "TestNG",
        "Developed",
        "Maven",
        "targets",
        "automation",
        "suites",
        "command",
        "line",
        "AWS",
        "Cloud",
        "instances",
        "EC2",
        "Participated",
        "release",
        "meetings",
        "Technology",
        "stakeholders",
        "risks",
        "releases",
        "Test",
        "Plans",
        "Test",
        "Cases",
        "Verifying",
        "Web",
        "application",
        "applications",
        "Subversion",
        "SVN",
        "Web",
        "developer",
        "Comcast",
        "Englewood",
        "CO",
        "August",
        "December",
        "Responsibilities",
        "collection",
        "platform",
        "development",
        "UnixLinux",
        "infrastructure",
        "application",
        "development",
        "performance",
        "tuning",
        "trouble",
        "Technologies",
        "Ruby",
        "Python",
        "Oracle",
        "Linux",
        "Red",
        "Hat",
        "Centos",
        "Ubuntu",
        "Bash",
        "Korn",
        "gawk",
        "regex",
        "iptables",
        "ssh",
        "Developed",
        "software",
        "framework",
        "event",
        "collection",
        "Comcast",
        "business",
        "lines",
        "Framework",
        "stream",
        "collection",
        "pushpull",
        "proxying",
        "distribution",
        "load",
        "Collection",
        "framework",
        "dollar",
        "3rd",
        "party",
        "Video",
        "Demand",
        "system",
        "office",
        "system",
        "Application",
        "transactions",
        "week",
        "23s",
        "markets",
        "System",
        "footprint",
        "M",
        "memory",
        "work",
        "load",
        "framework",
        "data",
        "Collection",
        "Interactive",
        "TV",
        "system",
        "application",
        "user",
        "interactions",
        "box",
        "content",
        "providers",
        "System",
        "trial",
        "transactions",
        "week",
        "Framework",
        "commercialvendor",
        "applications",
        "performance",
        "test",
        "Framework",
        "data",
        "rate",
        "56k",
        "second",
        "competitor",
        "44k",
        "framework",
        "Canoe",
        "system",
        "voting",
        "polling",
        "Comcast",
        "MBO",
        "end",
        "test",
        "Canoe",
        "Ventures",
        "application",
        "Utilize",
        "sysctls",
        "ulimits",
        "tools",
        "performance",
        "tune",
        "applications",
        "OS",
        "kernel",
        "network",
        "level",
        "Trouble",
        "spectrums",
        "application",
        "environment",
        "OS",
        "network",
        "hardware",
        "security",
        "linux",
        "tools",
        "traceroute",
        "test",
        "environment",
        "Apache",
        "iptables",
        "software",
        "system",
        "failures",
        "network",
        "service",
        "level",
        "guidance",
        "solutions",
        "software",
        "hardware",
        "security",
        "department",
        "Comcast",
        "Components",
        "framework",
        "Comcast",
        "business",
        "line",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:01:51.017602",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Charter Communications Alpena MI Authorized to work in the US for any employer Work Experience Python Developer Charter Communications Alpena MI July 2017 to Present Responsibilities Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and Highcharts for data visualization of the served pages Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed server based web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built Webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax JQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Sr Python Developer Eliassen Group Austin TX March 2015 to July 2017 Responsibilities Worked on serverside applications using Python programming Worked in comprehending and examining the clients business requirements Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples object oriented class based inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive web based solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using Python MySQL connector and retrieved information using MySQL db Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Created web application prototype using jQuery and Angular JS Deployed the project into Heroku using GIT version control system Maintained and Updated the application in accordance to the clienteles requiremen Python Developer GE Health Care Waukesha WI December 2012 to March 2015 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Web developer Comcast Englewood CO August 2010 to December 2012 Responsibilities High Performing Reliable collection platform development UnixLinux infrastructure application development including performance tuning and trouble shooting Technologies Ruby Python Oracle Linux Red Hat Centos Ubuntu Bash Korn sed gawk regex iptables ssh Developed software framework used for event collection encompassing all Comcast business lines Framework includes stream and file collection pushpull proxying distribution and load balancing Used Collection framework to replace a 7 million dollar 3rd party Video On Demand system and 82 million back office system Application supports over 345 million transactions per week with 23s of the markets rolled out System footprint is less than 150M of memory and work load of less than 12 Used framework to create data Collection for Interactive TV system The application proxies user interactions from the set top box to content providers System is currently in trial with approximately 20 million transactions per week Framework was put against commercialvendor applications in a performance test Framework collected streamed data at a rate of 56k per second with the nearest competitor at 44k Used framework to create the Canoe system for national voting and polling Comcast was recognized as the first MBO nationally to complete an end to end test with Canoe Ventures using this application Utilize sysctls ulimits and other tools to profile and performance tune applications at the OS kernel and network level Trouble shoot across all spectrums from application environment OS network hardware and security using various linux tools ranging from traceroute to tcpdump Created a virtual test environment using Apache iptables and other software to mimic real system failures ranging from network to service level Provide technical guidance and solutions on software hardware security and networking to department and throughout Comcast Components from the framework exist in every major Comcast business line Education Bachelors",
    "unique_id": "7772abeb-4a41-45bf-b4e4-2c10d264d086"
}