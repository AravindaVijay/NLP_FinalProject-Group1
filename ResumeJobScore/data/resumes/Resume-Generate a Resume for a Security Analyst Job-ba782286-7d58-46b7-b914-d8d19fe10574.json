{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Client Bank of America Charlotte NC 8 years of experience working in all phases of Software Development Life Cycle SDLC which includes User Interaction Business Analysis DesignArchitecture Implementation and Deployment of Enterprise and Web based applications using Java J2EE technologies Strong application development practice in using Modern Software Development methodologies like Agile and Traditional software models like Waterfall Experience in developing static web pages using HTML5 CSS3 Bootstrap and responsive web design using JavaScript jQuery Ajax React JS and Redux Developed the application using Java 8 features like Streams Lambdas Expressions Functional Interfaces map and for each functions Used Spring MVC framework at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Worked on conversion of monolithic web application to Micro Services architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Dynamo DB Relational Database Services RDS Proficient in implementing applications using Spring framework Spring MVC Spring Dependency Injection Spring Boot Spring Data and ORM frameworks like Hibernate Proficient in developing Restful Web Services using Jackson and Jersey Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI AND XML over HTTP Apache CXF JAXB XSD Axis 2 Good knowledge in field of Data Structures Algorithms and various design patterns Experience in implementing Design Patterns like Singleton Factory MVC Composite Prototype and Facade Proficient in core java concepts like Collections Multithreading Generics Serialization Threads JavaBeans Files and Externalization Extensive experience working with RDBMS such as MySQL Oracle and PostgreSQL Experience in working with the NoSQL Database MongoDB to manage extremely large data sets Expertise in Creating Hibernate configuration file Hibernate Mapping files and defined persistence classes to persist the data into Oracle Database Secured the APIs by implementing OAuth2 tokenbased authenticationauthorization scheme using Spring Security Experience on different IDEs such as Eclipse IntelliJ and Spring Tool Suite STS and deployment using Application Servers like Apache Tomcat WebLogic WebSphere and JBOSS Actively involved in setup automated Continuous Integration CI and Continuous Development CD through Jenkins for the application Experience in working with version control systems like GIT GitHub and Bit Bucket Hands on experience in build tools like ANT Maven Gradle Authorized to work in the US for any employer Work Experience Sr Java Developer Client Bank of America Charlotte NC September 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot Sr Java Developer Client BCBS Detroit MI June 2015 to August 2017 Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Boot and Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot JavaJ2EE Developer Client Biogen Morrisville NC August 2013 to May 2015 Responsibilities Involved in the complete SDLC including design of System Architecture development of System Use Cases based on the functional requirements Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed and coded controller classes using J2SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI Used HTML5 CSS3 jQuery AngularJS and JavaScript to construct the dynamic web pages presentation Layer for the application Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Designed and developed application using Spring Framework modules like Spring IOC Spring AOP Spring boot and handled security using Spring Security OAuth Parsed the data to project to client and handled the security and Authorization using Spring Security Spring MVC model integration for frontend request action controller and Spring AOP for logging purposes Used Spring IOC for dependency injection and developed controllers for handling Http requests and providing Http response Developed REST and SOAP based Web Services for data retrieval to make it independent of the current application Implemented RESTful web services using JAXRS and Jersey as provider Implemented Service Oriented Architecture by SOAP based Web Services with JAXWS and WSDL Worked on XML and JSON for transferring and retrieving data between different applications Involved in using JPA Java Persistence API frameworks and APIs as JDO and Hibernate Developed the DAO layer for the application using Spring Integration and Hibernate template support Established connection to Oracle database with Spring Integration Hibernate and created POJOs for mapping with the database tables Implemented PLSQL procedures and views in My SQL Database Developed MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic Used Maven as build automation tool and deployments are on Web Sphere Application Server Worked with Apache Kafka as a messaging service for activity tracking of an application Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Jenkins for Continuous Integration and Spring Tool Suite STS IDE for application development Developed test cases for Unit Testing Integration Testing with JUnit Collaborated with testers and developers and prepared test plans for producing high quality software applications Worked on Log4j for logging errors messages and performance logs Retrieving code from the repository and deploying in Production using ANT Environment Java J2EE HTML5 CSS3 Bootstrap jQuery AngularJS Spring IOC Spring AOP Spring MVC Spring Security Hibernate JDBC REST SOAP JAXRS JAXWS WSDL JAXRS Jenkins MySQL Kafka Service Oriented Architecture Oracle PLSQL Unit Testing JUnit Log4j Maven Web Sphere Application Server Jenkins and Spring Tool Suite STS Java Developer Client Sprint Overland Park KS December 2011 to July 2013 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful web services to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as micro services Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Jr Java Developer Client Reliance Communications IN August 2010 to November 2011 Responsibilities Developed the application based on MVC architecture Captured all the functional and technical requirements of the Supply Chain Management System Adapted Java Design Patterns DAO Value Objects and Session Facade to develop business components Development of GUI for HTML and JSP Versions Java Servlets were used as the common gateway interface between the client and server Used cascading style sheet CSS in web pages to separate presentation from structure Java Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller Established connection with JDBC to persist data to My SQL database Involved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using Java Servlets EJB and JSP Front end validations are written using JavaScript Performed Unit Testing using JUnit Provided a User Manual and User Training on the new system to ease them into the new system Environment Java HTML JavaScript CSS JDBC JSP Servlets DAO My SQL Junit EJB Education Bachelors Skills BEA BEA WEBLOGIC ECLIPSE EJB J2EE Additional Information Skills Languages J2SE Core Java J2EE JSP JDBC JSON Ajax EJBs JavaScript JSF Angular JS Ext JS HTML5 Dhtml CSS 3 Bootstrap JSF XML XSD XSLT XPATH SQL PLSQL WSDL JUnit Regular Expressions FrameworksORM Spring Hibernate MyBatis Struts 12 JSF Apache CXF Apache Camel Web TechnologiesJ2EE JSP Servlets EJB Jquery JSTL AJAX XML JavaScript AngularJS EXT JS HTML5 CSS3 JSON XSLT XML JNDI IDEs Eclipse My Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Databases Oracle 10g11g MySQL SQL Server DB2 and Cassandra Mongo  NoSQL database Web Services RESTful web service SOAP WSDL JAXRS JAXWS JMS JAXB UDDI Axis2 Apache CXF MDB MQ Series AWS Amazon Web services Version controlBuild Tools Git SVN CVS Clear Case Jenkins Maven Ant Testing Tools JUnit JMock JMeter Selenium Mockito WebApplication Servers BEA WebLogic Tomcat and JBOSS 5160 IBM Web sphere 516061 Glass fish Operating Systems Windows XPVista Unix Linux Red Hat Ubuntu Fedora Design Patterns Singleton Abstract Factory Business delegate Service locator Model View Controller Session facade DAO Composite Adapter Proxy Project Management Tools JIRA HP Quality Centre QC Rally",
    "entities": [
        "Micro Services",
        "Indigo Oracle",
        "System Use Cases",
        "AJAX",
        "Spring MVC JSP JSTL",
        "Http",
        "JQuery Upgraded",
        "Apache Camel Consumed",
        "Creating Hibernate",
        "XMLJSON",
        "Ajax Used",
        "UNIX",
        "Used Spring IOC",
        "Prototype",
        "Jersey",
        "HTTP",
        "Spring IOC",
        "Session Faade Business Delegate Bean Factory Singleton",
        "JSON",
        "Detroit",
        "Present Responsibilities Involved",
        "IBM",
        "BEA BEA WEBLOGIC",
        "Continuous Integration CI",
        "Camel",
        "JAR",
        "XML",
        "Developer Client Bank of America Charlotte",
        "WebLogic",
        "JAXWS",
        "JUnit",
        "JavaJ2EE",
        "Amazon",
        "Consumed",
        "JavaScript jQuery Ajax React JS",
        "ANT Maven Gradle Authorized",
        "Developed",
        "Jenkins",
        "JUnit Collaborated",
        "Data Access",
        "NC",
        "Externalization Extensive",
        "Modern Software Development",
        "Layer for the application",
        "Waterfall",
        "Restful",
        "MQ",
        "SpringHibernate API",
        "GIT GitHub",
        "Web Sphere Application Server Worked",
        "AGILE",
        "Spring Security",
        "Maven Web Sphere Application",
        "Linux",
        "JSP",
        "Streams Lambdas Expressions Functional Interfaces",
        "Hibernate Developed",
        "Agile and Traditional",
        "JAXRPC JAXRS JAXWS SOAP",
        "System Architecture",
        "jQuery Implemented",
        "Configure",
        "Dynamo",
        "STS",
        "MVC",
        "Observer Developed Web",
        "Spring AOP Configured",
        "EXT",
        "Integration Testing",
        "Oracle 12",
        "the Supply Chain Management System",
        "Web Services",
        "US",
        "User Interaction Business Analysis DesignArchitecture Implementation and Deployment of Enterprise",
        "Oracle Database Secured",
        "Spring Integration Hibernate",
        "Business Users",
        "AWS",
        "Singleton",
        "Hibernate QL Wrote",
        "JSF",
        "Development of GUI",
        "HTML",
        "CXF",
        "Tomcat Server",
        "SQL",
        "GitHub",
        "IO",
        "SOA Web Services",
        "Hibernate Proficient",
        "JAXRS",
        "Data Structures Algorithms",
        "Amazon AWS",
        "JSP Spring",
        "Collections Multithreading Generics Serialization",
        "Spring Hibernate",
        "Maven",
        "Hibernate Mapping",
        "lJavaspan",
        "JavaScript Performed Unit Testing",
        "JDO",
        "JavaScript",
        "queues Created",
        "UI",
        "Inversion of Control IOC",
        "CSS",
        "SpringHibernate",
        "JaxRS",
        "Facade Proficient",
        "jQuery",
        "Restful Web Services",
        "Tomcat",
        "Authorization using Spring Security Spring",
        "NoSQL",
        "JBOSS Actively",
        "Implemented Service Oriented Architecture",
        "JSP Front",
        "java concepts",
        "Software Development Life Cycle",
        "WebSphere Application Server",
        "DOJO",
        "Jackson",
        "HTTP Apache CXF",
        "Model and Servlets"
    ],
    "experience": "Experience in developing static web pages using HTML5 CSS3 Bootstrap and responsive web design using JavaScript jQuery Ajax React JS and Redux Developed the application using Java 8 features like Streams Lambdas Expressions Functional Interfaces map and for each functions Used Spring MVC framework at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Worked on conversion of monolithic web application to Micro Services architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Dynamo DB Relational Database Services RDS Proficient in implementing applications using Spring framework Spring MVC Spring Dependency Injection Spring Boot Spring Data and ORM frameworks like Hibernate Proficient in developing Restful Web Services using Jackson and Jersey Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI AND XML over HTTP Apache CXF JAXB XSD Axis 2 Good knowledge in field of Data Structures Algorithms and various design patterns Experience in implementing Design Patterns like Singleton Factory MVC Composite Prototype and Facade Proficient in core java concepts like Collections Multithreading Generics Serialization Threads JavaBeans Files and Externalization Extensive experience working with RDBMS such as MySQL Oracle and PostgreSQL Experience in working with the NoSQL Database MongoDB to manage extremely large data sets Expertise in Creating Hibernate configuration file Hibernate Mapping files and defined persistence classes to persist the data into Oracle Database Secured the APIs by implementing OAuth2 tokenbased authenticationauthorization scheme using Spring Security Experience on different IDEs such as Eclipse IntelliJ and Spring Tool Suite STS and deployment using Application Servers like Apache Tomcat WebLogic WebSphere and JBOSS Actively involved in setup automated Continuous Integration CI and Continuous Development CD through Jenkins for the application Experience in working with version control systems like GIT GitHub and Bit Bucket Hands on experience in build tools like ANT Maven Gradle Authorized to work in the US for any employer Work Experience Sr Java Developer Client Bank of America Charlotte NC September 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10 g Spring boot Sr Java Developer Client BCBS Detroit MI June 2015 to August 2017 Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Boot and Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10 g Spring boot JavaJ2EE Developer Client Biogen Morrisville NC August 2013 to May 2015 Responsibilities Involved in the complete SDLC including design of System Architecture development of System Use Cases based on the functional requirements Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed and coded controller classes using J2SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI Used HTML5 CSS3 jQuery AngularJS and JavaScript to construct the dynamic web pages presentation Layer for the application Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Designed and developed application using Spring Framework modules like Spring IOC Spring AOP Spring boot and handled security using Spring Security OAuth Parsed the data to project to client and handled the security and Authorization using Spring Security Spring MVC model integration for frontend request action controller and Spring AOP for logging purposes Used Spring IOC for dependency injection and developed controllers for handling Http requests and providing Http response Developed REST and SOAP based Web Services for data retrieval to make it independent of the current application Implemented RESTful web services using JAXRS and Jersey as provider Implemented Service Oriented Architecture by SOAP based Web Services with JAXWS and WSDL Worked on XML and JSON for transferring and retrieving data between different applications Involved in using JPA Java Persistence API frameworks and APIs as JDO and Hibernate Developed the DAO layer for the application using Spring Integration and Hibernate template support Established connection to Oracle database with Spring Integration Hibernate and created POJOs for mapping with the database tables Implemented PLSQL procedures and views in My SQL Database Developed MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic Used Maven as build automation tool and deployments are on Web Sphere Application Server Worked with Apache Kafka as a messaging service for activity tracking of an application Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Jenkins for Continuous Integration and Spring Tool Suite STS IDE for application development Developed test cases for Unit Testing Integration Testing with JUnit Collaborated with testers and developers and prepared test plans for producing high quality software applications Worked on Log4j for logging errors messages and performance logs Retrieving code from the repository and deploying in Production using ANT Environment Java J2EE HTML5 CSS3 Bootstrap jQuery AngularJS Spring IOC Spring AOP Spring MVC Spring Security Hibernate JDBC REST SOAP JAXRS JAXWS WSDL JAXRS Jenkins MySQL Kafka Service Oriented Architecture Oracle PLSQL Unit Testing JUnit Log4j Maven Web Sphere Application Server Jenkins and Spring Tool Suite STS Java Developer Client Sprint Overland Park KS December 2011 to July 2013 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful web services to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as micro services Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12 g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Jr Java Developer Client Reliance Communications IN August 2010 to November 2011 Responsibilities Developed the application based on MVC architecture Captured all the functional and technical requirements of the Supply Chain Management System Adapted Java Design Patterns DAO Value Objects and Session Facade to develop business components Development of GUI for HTML and JSP Versions Java Servlets were used as the common gateway interface between the client and server Used cascading style sheet CSS in web pages to separate presentation from structure Java Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller Established connection with JDBC to persist data to My SQL database Involved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using Java Servlets EJB and JSP Front end validations are written using JavaScript Performed Unit Testing using JUnit Provided a User Manual and User Training on the new system to ease them into the new system Environment Java HTML JavaScript CSS JDBC JSP Servlets DAO My SQL Junit EJB Education Bachelors Skills BEA BEA WEBLOGIC ECLIPSE EJB J2EE Additional Information Skills Languages J2SE Core Java J2EE JSP JDBC JSON Ajax EJBs JavaScript JSF Angular JS Ext JS HTML5 Dhtml CSS 3 Bootstrap JSF XML XSD XSLT XPATH SQL PLSQL WSDL JUnit Regular Expressions FrameworksORM Spring Hibernate MyBatis Struts 12 JSF Apache CXF Apache Camel Web TechnologiesJ2EE JSP Servlets EJB Jquery JSTL AJAX XML JavaScript AngularJS EXT JS HTML5 CSS3 JSON XSLT XML JNDI IDEs Eclipse My Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Databases Oracle 10g11 g MySQL SQL Server DB2 and Cassandra Mongo   NoSQL database Web Services RESTful web service SOAP WSDL JAXRS JAXWS JMS JAXB UDDI Axis2 Apache CXF MDB MQ Series AWS Amazon Web services Version controlBuild Tools Git SVN CVS Clear Case Jenkins Maven Ant Testing Tools JUnit JMock JMeter Selenium Mockito WebApplication Servers BEA WebLogic Tomcat and JBOSS 5160 IBM Web sphere 516061 Glass fish Operating Systems Windows XPVista Unix Linux Red Hat Ubuntu Fedora Design Patterns Singleton Abstract Factory Business delegate Service locator Model View Controller Session facade DAO Composite Adapter Proxy Project Management Tools JIRA HP Quality Centre QC Rally",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Client",
        "Bank",
        "America",
        "Charlotte",
        "NC",
        "years",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "User",
        "Interaction",
        "Business",
        "Analysis",
        "DesignArchitecture",
        "Implementation",
        "Deployment",
        "Enterprise",
        "Web",
        "applications",
        "Java",
        "J2EE",
        "technologies",
        "application",
        "development",
        "practice",
        "Modern",
        "Software",
        "Development",
        "methodologies",
        "software",
        "models",
        "Waterfall",
        "Experience",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "web",
        "design",
        "JavaScript",
        "jQuery",
        "Ajax",
        "React",
        "JS",
        "Redux",
        "application",
        "Java",
        "features",
        "Streams",
        "Lambdas",
        "Expressions",
        "Functional",
        "Interfaces",
        "functions",
        "Spring",
        "MVC",
        "framework",
        "Web",
        "tier",
        "level",
        "layer",
        "application",
        "complexity",
        "integration",
        "maintenance",
        "conversion",
        "web",
        "application",
        "Micro",
        "Services",
        "architecture",
        "operations",
        "maintenance",
        "support",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "instances",
        "S3",
        "Dynamo",
        "DB",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "Proficient",
        "applications",
        "Spring",
        "framework",
        "Spring",
        "MVC",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "ORM",
        "frameworks",
        "Hibernate",
        "Proficient",
        "Restful",
        "Web",
        "Services",
        "Jackson",
        "Jersey",
        "Strong",
        "work",
        "experience",
        "application",
        "integration",
        "communicating",
        "SOA",
        "Web",
        "Services",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "HTTP",
        "Apache",
        "CXF",
        "JAXB",
        "XSD",
        "Axis",
        "knowledge",
        "field",
        "Data",
        "Structures",
        "Algorithms",
        "design",
        "patterns",
        "Experience",
        "Design",
        "Patterns",
        "Singleton",
        "Factory",
        "MVC",
        "Composite",
        "Prototype",
        "Facade",
        "Proficient",
        "core",
        "concepts",
        "Collections",
        "Multithreading",
        "Generics",
        "Serialization",
        "Threads",
        "JavaBeans",
        "Files",
        "Externalization",
        "experience",
        "RDBMS",
        "MySQL",
        "Oracle",
        "PostgreSQL",
        "Experience",
        "NoSQL",
        "Database",
        "MongoDB",
        "data",
        "Expertise",
        "Hibernate",
        "configuration",
        "file",
        "Hibernate",
        "Mapping",
        "files",
        "persistence",
        "classes",
        "data",
        "Oracle",
        "Database",
        "Secured",
        "APIs",
        "authenticationauthorization",
        "scheme",
        "Spring",
        "Security",
        "Experience",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "deployment",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "WebLogic",
        "WebSphere",
        "JBOSS",
        "setup",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Development",
        "CD",
        "Jenkins",
        "application",
        "Experience",
        "version",
        "control",
        "systems",
        "GIT",
        "GitHub",
        "Bit",
        "Bucket",
        "Hands",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Gradle",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Client",
        "Bank",
        "America",
        "Charlotte",
        "NC",
        "September",
        "Present",
        "Responsibilities",
        "Full",
        "Life",
        "Cycle",
        "Software",
        "Development",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "testing",
        "phases",
        "System",
        "ModelViewController",
        "MVC",
        "architecture",
        "application",
        "principles",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Bean",
        "Factory",
        "Singleton",
        "Observer",
        "Developed",
        "Web",
        "services",
        "communication",
        "applications",
        "REST",
        "HTTP",
        "Metro",
        "Designed",
        "application",
        "JSP",
        "Spring",
        "MVC",
        "JNDI",
        "Spring",
        "IOC",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "Configured",
        "JPA",
        "Hibernate",
        "ORM",
        "tool",
        "jQuery",
        "scripting",
        "HTML",
        "DOJO",
        "widgets",
        "package",
        "browser",
        "incompatibilities",
        "IO",
        "package",
        "AJAX",
        "support",
        "Configured",
        "Maven",
        "dependencies",
        "application",
        "building",
        "processes",
        "directives",
        "HTML",
        "foundation",
        "web",
        "application",
        "Web",
        "services",
        "REST",
        "credit",
        "card",
        "information",
        "party",
        "Restful",
        "web",
        "services",
        "data",
        "UNIX",
        "commands",
        "shell",
        "scripting",
        "Angular",
        "JS",
        "http",
        "service",
        "services",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "Jasmine",
        "Karma",
        "unit",
        "testing",
        "JS",
        "modules",
        "JavaScript",
        "utility",
        "routines",
        "JaxRS",
        "framework",
        "results",
        "format",
        "Results",
        "UI",
        "pages",
        "Maven",
        "application",
        "server",
        "AGILE",
        "methodology",
        "Scrum",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Spring",
        "Validators",
        "persistence",
        "layer",
        "service",
        "layer",
        "components",
        "SpringHibernate",
        "API",
        "SpringHibernate",
        "annotations",
        "Hibernate",
        "QL",
        "Wrote",
        "services",
        "user",
        "data",
        "MongoDB",
        "application",
        "devices",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "web",
        "services",
        "representation",
        "AJAX",
        "requests",
        "Rest",
        "Client",
        "plugin",
        "rest",
        "APIs",
        "host",
        "Tomcat",
        "Server",
        "Unit",
        "Configure",
        "MongoDB",
        "NoSQL",
        "Web",
        "pages",
        "UI",
        "frameworks",
        "Html5",
        "CSS",
        "JavaScript",
        "JQuery",
        "UI",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "Responsible",
        "instance",
        "Amazon",
        "EC2",
        "AWS",
        "application",
        "AWS",
        "cloud",
        "servers",
        "Amazon",
        "AWS",
        "servers",
        "Linux",
        "environment",
        "SDLC",
        "tools",
        "GIT",
        "Jira",
        "Jenkins",
        "Maven",
        "build",
        "packaging",
        "deployments",
        "application",
        "components",
        "Grunt",
        "JavaScript",
        "task",
        "runner",
        "Jenkins",
        "ANT",
        "tools",
        "part",
        "build",
        "management",
        "Maven",
        "WAR",
        "JAR",
        "application",
        "Spring",
        "MVC",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "views",
        "controllers",
        "client",
        "manager",
        "modules",
        "Spring",
        "Batch",
        "Spring",
        "Bootand",
        "Spring",
        "Core",
        "Developed",
        "REST",
        "Web",
        "Services",
        "XMLJSON",
        "messages",
        "end",
        "Consumed",
        "SOAP",
        "web",
        "services",
        "stubs",
        "Apache",
        "Axis",
        "PLSQL",
        "queries",
        "oracle",
        "procedures",
        "client",
        "request",
        "validations",
        "processing",
        "JavaScript",
        "Deployed",
        "applications",
        "WebSphere",
        "Application",
        "Server",
        "configuration",
        "changes",
        "monitoring",
        "practices",
        "usage",
        "search",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "JUnit",
        "Log4j",
        "log",
        "runtime",
        "exception",
        "info",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "Spring",
        "Hibernate",
        "JMS",
        "XML",
        "REST",
        "AngularJS",
        "Grunt",
        "WSDL",
        "AJAX",
        "HTML",
        "JAVASCRIPT",
        "JQuery",
        "CSS",
        "GIT",
        "Log4J",
        "JAXB",
        "JSF",
        "JUnit38",
        "WebLogic",
        "Eclipse",
        "Indigo",
        "Oracle",
        "g",
        "Spring",
        "boot",
        "Sr",
        "Java",
        "Developer",
        "Client",
        "BCBS",
        "Detroit",
        "MI",
        "June",
        "August",
        "Responsibilities",
        "Full",
        "Life",
        "Cycle",
        "Software",
        "Development",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "testing",
        "phases",
        "System",
        "ModelViewController",
        "MVC",
        "architecture",
        "application",
        "principles",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Bean",
        "Factory",
        "Singleton",
        "Observer",
        "Developed",
        "Web",
        "services",
        "communication",
        "applications",
        "REST",
        "HTTP",
        "Metro",
        "Designed",
        "application",
        "JSP",
        "Spring",
        "MVC",
        "JNDI",
        "Spring",
        "IOC",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "Configured",
        "JPA",
        "Hibernate",
        "ORM",
        "tool",
        "jQuery",
        "scripting",
        "HTML",
        "DOJO",
        "widgets",
        "package",
        "browser",
        "incompatibilities",
        "IO",
        "package",
        "AJAX",
        "support",
        "Configured",
        "Maven",
        "dependencies",
        "application",
        "building",
        "processes",
        "directives",
        "HTML",
        "foundation",
        "web",
        "application",
        "Web",
        "services",
        "REST",
        "credit",
        "card",
        "information",
        "party",
        "Restful",
        "web",
        "services",
        "data",
        "UNIX",
        "commands",
        "shell",
        "scripting",
        "Angular",
        "JS",
        "http",
        "service",
        "services",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "Jasmine",
        "Karma",
        "unit",
        "testing",
        "JS",
        "modules",
        "JavaScript",
        "utility",
        "routines",
        "JaxRS",
        "framework",
        "results",
        "format",
        "Results",
        "UI",
        "pages",
        "Maven",
        "application",
        "server",
        "AGILE",
        "methodology",
        "Scrum",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Spring",
        "Validators",
        "persistence",
        "layer",
        "service",
        "layer",
        "components",
        "SpringHibernate",
        "API",
        "SpringHibernate",
        "annotations",
        "Hibernate",
        "QL",
        "Wrote",
        "services",
        "user",
        "data",
        "MongoDB",
        "application",
        "devices",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "web",
        "services",
        "representation",
        "AJAX",
        "requests",
        "Rest",
        "Client",
        "plugin",
        "rest",
        "APIs",
        "host",
        "Tomcat",
        "Server",
        "Unit",
        "Configure",
        "MongoDB",
        "NoSQL",
        "Web",
        "pages",
        "UI",
        "frameworks",
        "Html5",
        "CSS",
        "JavaScript",
        "JQuery",
        "UI",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "Responsible",
        "instance",
        "Amazon",
        "EC2",
        "AWS",
        "application",
        "AWS",
        "cloud",
        "servers",
        "Amazon",
        "AWS",
        "servers",
        "Linux",
        "environment",
        "SDLC",
        "tools",
        "GIT",
        "Jira",
        "Jenkins",
        "Maven",
        "build",
        "packaging",
        "deployments",
        "application",
        "components",
        "Grunt",
        "JavaScript",
        "task",
        "runner",
        "Jenkins",
        "ANT",
        "tools",
        "part",
        "build",
        "management",
        "Maven",
        "WAR",
        "JAR",
        "application",
        "Spring",
        "MVC",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "views",
        "controllers",
        "client",
        "manager",
        "modules",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "Spring",
        "Core",
        "Developed",
        "REST",
        "Web",
        "Services",
        "XMLJSON",
        "messages",
        "end",
        "Consumed",
        "SOAP",
        "web",
        "services",
        "stubs",
        "Apache",
        "Axis",
        "PLSQL",
        "queries",
        "oracle",
        "procedures",
        "client",
        "request",
        "validations",
        "processing",
        "JavaScript",
        "Deployed",
        "applications",
        "WebSphere",
        "Application",
        "Server",
        "configuration",
        "changes",
        "monitoring",
        "practices",
        "usage",
        "search",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "JUnit",
        "Log4j",
        "log",
        "runtime",
        "exception",
        "info",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "Spring",
        "Hibernate",
        "JMS",
        "XML",
        "REST",
        "AngularJS",
        "Grunt",
        "WSDL",
        "AJAX",
        "HTML",
        "JAVASCRIPT",
        "JQuery",
        "CSS",
        "GIT",
        "Log4J",
        "JAXB",
        "JSF",
        "JUnit38",
        "WebLogic",
        "Eclipse",
        "Indigo",
        "Oracle",
        "g",
        "Spring",
        "boot",
        "JavaJ2EE",
        "Developer",
        "Client",
        "Biogen",
        "Morrisville",
        "NC",
        "August",
        "May",
        "Responsibilities",
        "SDLC",
        "design",
        "System",
        "Architecture",
        "development",
        "System",
        "Use",
        "Cases",
        "requirements",
        "Daily",
        "Scrum",
        "Agile",
        "meetings",
        "Sprint",
        "planning",
        "estimation",
        "tasks",
        "user",
        "stories",
        "Demo",
        "end",
        "sprint",
        "controller",
        "classes",
        "J2SE",
        "hardware",
        "controller",
        "states",
        "user",
        "control",
        "hardware",
        "UI",
        "HTML5",
        "CSS3",
        "jQuery",
        "AngularJS",
        "JavaScript",
        "web",
        "pages",
        "presentation",
        "Layer",
        "application",
        "Spring",
        "Transaction",
        "degree",
        "isolation",
        "transactions",
        "transaction",
        "scope",
        "transaction",
        "transaction",
        "application",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "boot",
        "security",
        "Spring",
        "Security",
        "OAuth",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "Spring",
        "MVC",
        "model",
        "integration",
        "frontend",
        "request",
        "action",
        "controller",
        "Spring",
        "AOP",
        "purposes",
        "Spring",
        "IOC",
        "dependency",
        "injection",
        "controllers",
        "Http",
        "requests",
        "Http",
        "response",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "data",
        "retrieval",
        "application",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "provider",
        "Service",
        "Oriented",
        "Architecture",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "WSDL",
        "XML",
        "JSON",
        "data",
        "applications",
        "JPA",
        "Java",
        "Persistence",
        "API",
        "frameworks",
        "APIs",
        "JDO",
        "Hibernate",
        "DAO",
        "layer",
        "application",
        "Spring",
        "Integration",
        "Hibernate",
        "template",
        "support",
        "connection",
        "Oracle",
        "database",
        "Spring",
        "Integration",
        "Hibernate",
        "POJOs",
        "mapping",
        "database",
        "tables",
        "PLSQL",
        "procedures",
        "views",
        "SQL",
        "Database",
        "Developed",
        "MySQL",
        "procedures",
        "triggers",
        "SQL",
        "tables",
        "business",
        "logic",
        "Maven",
        "build",
        "automation",
        "tool",
        "deployments",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Worked",
        "Apache",
        "Kafka",
        "service",
        "activity",
        "tracking",
        "application",
        "DAOs",
        "data",
        "source",
        "Databases",
        "formats",
        "Kafka",
        "Streams",
        "Jenkins",
        "Continuous",
        "Integration",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "IDE",
        "application",
        "development",
        "test",
        "cases",
        "Unit",
        "Testing",
        "Integration",
        "Testing",
        "JUnit",
        "Collaborated",
        "testers",
        "developers",
        "test",
        "plans",
        "quality",
        "software",
        "applications",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "logs",
        "code",
        "repository",
        "Production",
        "ANT",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Hibernate",
        "JDBC",
        "REST",
        "JAXRS",
        "JAXWS",
        "WSDL",
        "JAXRS",
        "Jenkins",
        "MySQL",
        "Kafka",
        "Service",
        "Oriented",
        "Architecture",
        "Oracle",
        "PLSQL",
        "Unit",
        "Testing",
        "JUnit",
        "Log4j",
        "Maven",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Jenkins",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Java",
        "Developer",
        "Client",
        "Sprint",
        "Overland",
        "Park",
        "KS",
        "December",
        "July",
        "Responsibilities",
        "Requirements",
        "Designing",
        "Coding",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "phases",
        "project",
        "design",
        "development",
        "UI",
        "screens",
        "application",
        "HTML5",
        "JavaScript",
        "jQuery",
        "web",
        "services",
        "rest",
        "calls",
        "client",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "Spring",
        "JDBC",
        "Spring",
        "Hibernate",
        "Data",
        "Access",
        "DAO",
        "design",
        "pattern",
        "Spring",
        "Boot",
        "application",
        "micro",
        "Spring",
        "Batch",
        "processing",
        "application",
        "file",
        "formats",
        "database",
        "JMS",
        "Spring",
        "JMS",
        "module",
        "queues",
        "builds",
        "Maven",
        "project",
        "code",
        "GitHub",
        "repositories",
        "Jenkins",
        "CI",
        "tool",
        "Wrote",
        "Stored",
        "Procedures",
        "queries",
        "Oracle",
        "g",
        "database",
        "integration",
        "modules",
        "clients",
        "Apache",
        "Camel",
        "Consumed",
        "web",
        "services",
        "SOAP",
        "REST",
        "XML",
        "JSON",
        "advantage",
        "Spring",
        "technologies",
        "Presentation",
        "layer",
        "HTML",
        "JavaScript",
        "AJAX",
        "jQuery",
        "UI",
        "customer",
        "experience",
        "page",
        "application",
        "Angular",
        "JS",
        "Integrated",
        "Camel",
        "MQ",
        "bus",
        "Linux",
        "environment",
        "Tomcat",
        "application",
        "server",
        "UNIX",
        "shell",
        "scripts",
        "data",
        "migration",
        "batch",
        "processing",
        "test",
        "cases",
        "Junit",
        "TestNG",
        "stubs",
        "JMockito",
        "framework",
        "Environment",
        "JDK",
        "J2EE",
        "Core",
        "Java",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "JSON",
        "Maven",
        "Spring",
        "4x",
        "JPA",
        "JDBC",
        "Jenkins",
        "Apache",
        "Tomcat",
        "Apache",
        "Camel",
        "Active",
        "MQ",
        "Git",
        "Eclipse",
        "IDE",
        "Junit",
        "Linux",
        "Windows",
        "Jr",
        "Java",
        "Developer",
        "Client",
        "Reliance",
        "Communications",
        "August",
        "November",
        "Responsibilities",
        "application",
        "MVC",
        "architecture",
        "requirements",
        "Supply",
        "Chain",
        "Management",
        "System",
        "Java",
        "Design",
        "Patterns",
        "DAO",
        "Value",
        "Objects",
        "Session",
        "Facade",
        "business",
        "components",
        "Development",
        "GUI",
        "HTML",
        "JSP",
        "Versions",
        "Java",
        "Servlets",
        "gateway",
        "interface",
        "client",
        "server",
        "style",
        "sheet",
        "CSS",
        "web",
        "pages",
        "presentation",
        "structure",
        "Java",
        "Beans",
        "business",
        "logic",
        "Model",
        "Servlets",
        "flow",
        "application",
        "Controller",
        "Established",
        "connection",
        "JDBC",
        "data",
        "SQL",
        "database",
        "requirements",
        "Business",
        "Users",
        "Data",
        "Modeling",
        "designing",
        "Tools",
        "Java",
        "Servlets",
        "EJB",
        "JSP",
        "Front",
        "end",
        "validations",
        "JavaScript",
        "Performed",
        "Unit",
        "Testing",
        "JUnit",
        "User",
        "Manual",
        "User",
        "Training",
        "system",
        "system",
        "Environment",
        "Java",
        "HTML",
        "JavaScript",
        "CSS",
        "JDBC",
        "JSP",
        "Servlets",
        "DAO",
        "SQL",
        "Junit",
        "EJB",
        "Education",
        "Bachelors",
        "Skills",
        "BEA",
        "BEA",
        "WEBLOGIC",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "Additional",
        "Information",
        "Skills",
        "Languages",
        "J2SE",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "JDBC",
        "JSON",
        "EJBs",
        "JavaScript",
        "JSF",
        "Angular",
        "JS",
        "Ext",
        "JS",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSF",
        "XML",
        "XSD",
        "XSLT",
        "XPATH",
        "SQL",
        "PLSQL",
        "WSDL",
        "JUnit",
        "Regular",
        "Expressions",
        "FrameworksORM",
        "Spring",
        "Hibernate",
        "MyBatis",
        "Struts",
        "JSF",
        "Apache",
        "CXF",
        "Apache",
        "Camel",
        "Web",
        "TechnologiesJ2EE",
        "JSP",
        "Servlets",
        "EJB",
        "Jquery",
        "JSTL",
        "AJAX",
        "XML",
        "JavaScript",
        "EXT",
        "JS",
        "HTML5",
        "CSS3",
        "JSON",
        "XSLT",
        "XML",
        "JNDI",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "NetBeans",
        "IDEA",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Oracle",
        "g",
        "MySQL",
        "SQL",
        "Server",
        "DB2",
        "Cassandra",
        "Mongo",
        "NoSQL",
        "database",
        "Web",
        "Services",
        "web",
        "service",
        "SOAP",
        "WSDL",
        "JAXRS",
        "JAXWS",
        "JMS",
        "JAXB",
        "UDDI",
        "Apache",
        "CXF",
        "MDB",
        "MQ",
        "Series",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "Version",
        "controlBuild",
        "Tools",
        "Git",
        "SVN",
        "CVS",
        "Clear",
        "Case",
        "Jenkins",
        "Maven",
        "Ant",
        "Testing",
        "Tools",
        "JUnit",
        "JMock",
        "JMeter",
        "Selenium",
        "Mockito",
        "WebApplication",
        "Servers",
        "BEA",
        "WebLogic",
        "Tomcat",
        "JBOSS",
        "IBM",
        "Web",
        "sphere",
        "Glass",
        "fish",
        "Operating",
        "Systems",
        "Windows",
        "XPVista",
        "Unix",
        "Linux",
        "Red",
        "Hat",
        "Ubuntu",
        "Fedora",
        "Design",
        "Patterns",
        "Singleton",
        "Abstract",
        "Factory",
        "Business",
        "delegate",
        "Service",
        "locator",
        "Model",
        "View",
        "Controller",
        "Session",
        "facade",
        "DAO",
        "Composite",
        "Adapter",
        "Proxy",
        "Project",
        "Management",
        "Tools",
        "JIRA",
        "HP",
        "Quality",
        "Centre",
        "QC",
        "Rally"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:23:02.363767",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Client Bank of America Charlotte NC 8 years of experience working in all phases of Software Development Life Cycle SDLC which includes User Interaction Business Analysis DesignArchitecture Implementation and Deployment of Enterprise and Web based applications using Java J2EE technologies Strong application development practice in using Modern Software Development methodologies like Agile and Traditional software models like Waterfall Experience in developing static web pages using HTML5 CSS3 Bootstrap and responsive web design using JavaScript jQuery Ajax React JS and Redux Developed the application using Java 8 features like Streams Lambdas Expressions Functional Interfaces map and for each functions Used Spring MVC framework at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Worked on conversion of monolithic web application to Micro Services architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Dynamo DB Relational Database Services RDS Proficient in implementing applications using Spring framework Spring MVC Spring Dependency Injection Spring Boot Spring Data and ORM frameworks like Hibernate Proficient in developing Restful Web Services using Jackson and Jersey Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI AND XML over HTTP Apache CXF JAXB XSD Axis 2 Good knowledge in field of Data Structures Algorithms and various design patterns Experience in implementing Design Patterns like Singleton Factory MVC Composite Prototype and Facade Proficient in core java concepts like Collections Multithreading Generics Serialization Threads JavaBeans Files and Externalization Extensive experience working with RDBMS such as MySQL Oracle and PostgreSQL Experience in working with the NoSQL Database MongoDB to manage extremely large data sets Expertise in Creating Hibernate configuration file Hibernate Mapping files and defined persistence classes to persist the data into Oracle Database Secured the APIs by implementing OAuth2 tokenbased authenticationauthorization scheme using Spring Security Experience on different IDEs such as Eclipse IntelliJ and Spring Tool Suite STS and deployment using Application Servers like Apache Tomcat WebLogic WebSphere and JBOSS Actively involved in setup automated Continuous Integration CI and Continuous Development CD through Jenkins for the application Experience in working with version control systems like GIT GitHub and Bit Bucket Hands on experience in build tools like ANT Maven Gradle Authorized to work in the US for any employer Work Experience Sr Java Developer Client Bank of America Charlotte NC September 2017 to Present Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Bootand Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot Sr Java Developer Client BCBS Detroit MI June 2015 to August 2017 Responsibilities Involved in Full Life Cycle of Software Development from Analysis through Design Development Integration and testing phases System built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Session Faade Business Delegate Bean Factory Singleton and Observer Developed Web services to allow communication between applications through REST over HTTP using Metro Designed and implemented application using JSP Spring MVC JNDI Spring IOC Implemented transaction management using Spring AOP Configured JPA to use Hibernate as ORM tool Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Configured Maven dependencies for application building processes Used AngularJS directives to extend HTML to create the foundation for rich and complex web application Used Web services REST for getting credit card information from third party The Restful web services have been used to retrieve and update the data using Ajax Used UNIX commands and shell scripting Used Angular JS http service to consume RESTful services Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Jasmine Karma for unit testing and endtoend testing to verify Angular JS modules and JavaScript utility routines JaxRS is the framework used and results are made to be in JSON format Results are used for displaying on UI pages Used Maven to build application and deploy on the server Used AGILE methodology and actively participated in Scrum meetings to produce quality deliverables within time Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Wrote services to store and retrieve user data from the MongoDB for the application on devices Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Installed application on AWS EC2 instances and also configured the storage on S3 buckets Designed RESTful web services with JSON representation for handling AJAX requests Used Advanced Rest Client plugin to run the rest APIs on local host Tomcat Server for Unit testing Configure and monitor numerous MongoDB and NoSQL instances Developed Web pages using UI frameworks AngularJS Html5 CSS JavaScript and JQuery Upgraded existing UI with HTML5 CSS3 jQuery Bootstrap Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux Worked in an Agile environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Used Grunt as the JavaScript task runner Jenkins ANT tools were used part of build management Used Maven in building and deploying the WAR and JAR files Created application using Spring MVC JSP JSTL and AJAX on the presentation layer business layer is built using spring Developed views and controllers for client and manager modules using Spring Batch Spring Boot and Spring Core Developed REST based Web Services using XMLJSON messages that were used by the front end Consumed SOAP based web services created stubs using Apache Axis Implemented PLSQL queries and used oracle stored procedures Developed client request validations and processing using JavaScript Deployed applications on WebSphere Application Server and performed required configuration changes Implemented monitoring and established best practices around usage of Elastic search Worked in Test Driven Development TDD using JUnit Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Environment Java J2EE JSP Spring 40 Hibernate 41 JMS XML REST AngularJS Grunt WSDL AJAX HTML JAVASCRIPT JQuery CSS GIT Log4J JAXB JSF JUnit38 WebLogic 1035 Eclipse Indigo Oracle 10g Spring boot JavaJ2EE Developer Client Biogen Morrisville NC August 2013 to May 2015 Responsibilities Involved in the complete SDLC including design of System Architecture development of System Use Cases based on the functional requirements Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed and coded controller classes using J2SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI Used HTML5 CSS3 jQuery AngularJS and JavaScript to construct the dynamic web pages presentation Layer for the application Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Designed and developed application using Spring Framework modules like Spring IOC Spring AOP Spring boot and handled security using Spring Security OAuth Parsed the data to project to client and handled the security and Authorization using Spring Security Spring MVC model integration for frontend request action controller and Spring AOP for logging purposes Used Spring IOC for dependency injection and developed controllers for handling Http requests and providing Http response Developed REST and SOAP based Web Services for data retrieval to make it independent of the current application Implemented RESTful web services using JAXRS and Jersey as provider Implemented Service Oriented Architecture by SOAP based Web Services with JAXWS and WSDL Worked on XML and JSON for transferring and retrieving data between different applications Involved in using JPA Java Persistence API frameworks and APIs as JDO and Hibernate Developed the DAO layer for the application using Spring Integration and Hibernate template support Established connection to Oracle database with Spring Integration Hibernate and created POJOs for mapping with the database tables Implemented PLSQL procedures and views in My SQL Database Developed MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic Used Maven as build automation tool and deployments are on Web Sphere Application Server Worked with Apache Kafka as a messaging service for activity tracking of an application Worked on DAOs to pull the data from the source Databases and converted into JSON formats and then published into Kafka Streams Jenkins for Continuous Integration and Spring Tool Suite STS IDE for application development Developed test cases for Unit Testing Integration Testing with JUnit Collaborated with testers and developers and prepared test plans for producing high quality software applications Worked on Log4j for logging errors messages and performance logs Retrieving code from the repository and deploying in Production using ANT Environment Java J2EE HTML5 CSS3 Bootstrap jQuery AngularJS Spring IOC Spring AOP Spring MVC Spring Security Hibernate JDBC REST SOAP JAXRS JAXWS WSDL JAXRS Jenkins MySQL Kafka Service Oriented Architecture Oracle PLSQL Unit Testing JUnit Log4j Maven Web Sphere Application Server Jenkins and Spring Tool Suite STS Java Developer Client Sprint Overland Park KS December 2011 to July 2013 Responsibilities Involved in Requirements gathering Designing Coding Unit testing and Integration Testing phases of the project Responsible for design and development of UI screens for the application using HTML5 JavaScript AngularJS jQuery Implemented RESTful web services to make rest calls from client to server Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC Used Spring JDBC and Spring Hibernate to manage Data Access with DAO design pattern Used Spring Boot and developed the application as micro services Developed Spring Batch processing java application to read different file formats which feeds to the database Implemented JMS using Spring JMS module to communicate with queues Created builds using Maven and pulled the project code from GitHub repositories Used Jenkins as CI tool Wrote Stored Procedures and complex queries in Oracle 12g database Developed integration modules for disparate clients using Apache Camel Consumed and built web services in SOAP REST supporting both XML and JSON by taking advantage of Spring technologies Developed the Presentation layer using HTML 5 JavaScript and used AJAX jQuery based rich UI for improved customer experience Developed single page application by using Angular JS Integrated configured Camel with Active MQ to use it as bus Deployed in Linux environment and used Tomcat as application server UNIX shell scripts for data migration and batch processing Developed test cases using Junit TestNG and created stubs using JMockito framework Environment JDK 1718 J2EE Core Java HTML5 CSS3 JavaScript Angular JS 20 jQuery 20 JSON Maven 30 Spring 4x JPA JDBC Jenkins Apache Tomcat 8 Apache Camel Active MQ Git Eclipse IDE Junit Linux Windows Jr Java Developer Client Reliance Communications IN August 2010 to November 2011 Responsibilities Developed the application based on MVC architecture Captured all the functional and technical requirements of the Supply Chain Management System Adapted Java Design Patterns DAO Value Objects and Session Facade to develop business components Development of GUI for HTML and JSP Versions Java Servlets were used as the common gateway interface between the client and server Used cascading style sheet CSS in web pages to separate presentation from structure Java Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller Established connection with JDBC to persist data to My SQL database Involved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using Java Servlets EJB and JSP Front end validations are written using JavaScript Performed Unit Testing using JUnit Provided a User Manual and User Training on the new system to ease them into the new system Environment Java HTML JavaScript CSS JDBC JSP Servlets DAO My SQL Junit EJB Education Bachelors Skills BEA BEA WEBLOGIC ECLIPSE EJB J2EE Additional Information Skills Languages J2SE Core Java J2EE JSP JDBC JSON Ajax EJBs JavaScript JSF Angular JS Ext JS HTML5 Dhtml CSS 3 Bootstrap JSF XML XSD XSLT XPATH SQL PLSQL WSDL JUnit Regular Expressions FrameworksORM Spring Hibernate MyBatis Struts 12 JSF Apache CXF Apache Camel Web TechnologiesJ2EE JSP Servlets EJB Jquery JSTL AJAX XML JavaScript AngularJS EXT JS HTML5 CSS3 JSON XSLT XML JNDI IDEs Eclipse My Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STS Databases Oracle 10g11g MySQL SQL Server DB2 and Cassandra Mongo dB NoSQL database Web Services RESTful web service SOAP WSDL JAXRS JAXWS JMS JAXB UDDI Axis2 Apache CXF MDB MQ Series AWS Amazon Web services Version controlBuild Tools Git SVN CVS Clear Case Jenkins Maven Ant Testing Tools JUnit JMock JMeter Selenium Mockito WebApplication Servers BEA WebLogic Tomcat and JBOSS 5160 IBM Web sphere 516061 Glass fish Operating Systems Windows XPVista Unix Linux Red Hat Ubuntu Fedora Design Patterns Singleton Abstract Factory Business delegate Service locator Model View Controller Session facade DAO Composite Adapter Proxy Project Management Tools JIRA HP Quality Centre QC Rally",
    "unique_id": "ba782286-7d58-46b7-b914-d8d19fe10574"
}