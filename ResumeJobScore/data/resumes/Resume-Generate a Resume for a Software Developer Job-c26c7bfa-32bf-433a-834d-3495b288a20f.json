{
    "clean_data": "SR Java Developer SRspan lJavaspan span lDeveloperspan SR Java Developer Caterpillar IL IL IL Authorized to work in the US for any employer Work Experience SR Java Developer Caterpillar IL February 2015 to Present Project Assembly Quality Events AQE Description Assembly Quality Events is a Caterpillardeveloped webbased application used primarily in the assemblymachining operations of a shop floor The software enables shop floor and associated support personnel to record and analyze assemblymachining quality events that occur during the assembly process Roles Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using AngularJS HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngifngshow nghidengchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery AngularJS Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Java Developer ATT Atlanta GA February 2014 to January 2015 Project CSI Adapter Development Description ATT is the worlds largest telecommunications company providing robust and reliable services to its end clients in various fields CSI Adapter is a layer of code which provides a standard set of methods to access Service Providers and for isolating the Business Components The goal of the CSI Adapter is to maximize the isolation of the Business Components from the majority of changes that may be made in the Service Providers and to minimize Business Component coding requirements through reusable objects There are more than 200 Adapters involved in this project where each Adapter consists of more than 10 handlers Each handler is designed and coded for performing a specific functionality by accessing the database or Service Providers The handlers are grouped into an Adapter based on its usage and functionality Generally ATT stores and its clients Best Buy Apple etc use these handlers functionality in its kiosks and websites to provide reliable services to its customers Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Babilify Browserify HttpFetch BodyParser Express etcto create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the React Web UI components using Atom IDE and made backend REST calls using whatwgfetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using reactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using apache HttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to new Gradle based build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Used extensively Eclipse in development and debugging the application Environment Java 16 Junit 4 JBoss 7 Oracle 10g HTMLJSP Javascript ReactJS NodeJSMongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS Senior Java J2EE Developer Continental Airlines Chicago IL August 2012 to January 2014 Project Online Ticket Booking System Description As part of its strategic goal to achieve 80 percent of bookings over the Internet Continental Airlines undertook a project to upgrade the Online Booking Service With the integration of the BEA Weblogic Server for their online ticket sales they had to be able to accommodate the independence of frontend applications that will develop and change to meet new business requirements and integrate the existing operational systems that are used to run and monitor business on a daytoday basis With the help of struts framework we developed UI and we used oracle as the database Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project life cycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML Java Script CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logic Integrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibility Used Spring JDBC Template and implemented DAO Design Pattern to connect and retrieving data Developed the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using Ibatis developed POJOs mapped to the relational tables in database using Ibatis mapping files Worked on Oracle as the backend database and used Ibatis to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to third company Followed top down approach to implement SOAP based web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application and Implemented Unit and Integration test cases with JUNIT Framework based on Functional Flow Environment J2EE JSP Servlets DHTML Java Script CSS HTML Spring Struts ibatis SOAP based WebServices Oracle PLSQL Toad 961 JUnit Jquery Oracle PLSQL SQL Navigator SVN Gradle 24 and WebLogic Server JAVA J2EE Developer Ing Direct India IN January 2011 to July 2012 Project Refund Anticipation Loan RAL Description RAL enables tax applicants to apply for loans on anticipated taxreturns with the bank This application helps tax officers transmitters and employees of the bank in conducting the regular business The website functionality includes keeping track of customer tax offices brokers transmitters and applicants The application processes all stages of the life cycle of the bank loansontax refunds business such as processing applications for service contract for service actual revenues earned etc The web application also provides various types of reports eg applicant reports tax officer performance reports loan account reports etc This is an ntier client server application deployed on application server using JBOSS Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactions Developed Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag libraries Used struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the application Analyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application on JBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnit Used Jira for tracking bugs Used Maven script for building and deploying the application Environment J2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion Java J2EE Programmer Analyst ICICI Bank IN June 2008 to December 2010 Project Payroll management systems Description Payroll Management System is an application program which is used by the company to manage the records of the employees working in the company Using Payroll Management System Payroll can be generated based on employees job type pay rate and hours worked Employees can log on to the system to see their current status Payroll system is to create records delete records and save records for employees according to their information given to the administration of the company Project Objectives is to improve efficiency of the companys administration to store uptodate information of the employees and to reduce extra cost for the security of the database A payroll system involves everything that has to do with the payment of the employees and filing of the employment taxes keeping track of hours printing and delivering checks etc Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PLSQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for Build Deployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors of Engineering in Computer Science in Computer Science VMRF University Skills frontend 9 years Java 9 years JQuery 9 years Oracle 9 years testing 9 years Additional Information EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS and participated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript JQuery AngularJS and ReactJS Experienced in developing and implementing web applications using Java J2EE JSP Servlets JSF HTML 5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services and hands on experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphere and JBoss Application Servers including hands on experience in using Tomcat web Server Expertise in developing XML documents with XSD validations SAX and DOM parsers to parse the data held in XML documents and experience in other XML related technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in using Java IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans to develop dynamic web applications Expertise in Bootstrap Angular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Maven deploy tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUI and performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL Databases MongoDB and CouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Category ExpertiseTools Application Development Java 17 JavaScript Servlets Struts framework JSP XML Hibernate JPA MyBatis NodeJS SOAP11 JAXWS 20 JAXRS Restful Services Jersey Spring NodeJS Java Skills J2EE JDBC EJB JAXM JAXP JAXB Java Server Pages JSP Multithreading JMS Configuration Management Tools CVS Clear Case SVN Git and Suround SCM Servers IBM Websphere JBOSS Weblogic Tomcat Node server Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database DB2 MYSQL Oracle 11g 10g 9i 8i SQL Server 20002005 MongoDB Couchdb IDE Websphere RAD 60 Eclipse 421 Spring tool suite WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans Operating System Windows Linux Unix Tools TOAD Putty SQL Developer Squirrel MY SQL workbench RoboMongo Languages SQL PLSQL UNIX Shell Scripting Java",
    "entities": [
        "Functions",
        "Rational Application Developer RAD Web Sphere Application Developer WSAD Eclipse",
        "Spring Framework",
        "Used Hibernate",
        "JBoss Application Servers",
        "AJAX",
        "Worked on Construction Changes",
        "Tibco",
        "JUnit DbUnit",
        "GUI",
        "UI Took",
        "HTTP Developed",
        "the Business Components",
        "Description Payroll Management System",
        "the DAO Service",
        "WebServices Oracle PLSQL Toad",
        "User Interactive UI Web Pages",
        "User Interfaces",
        "IBM",
        "JavaScript Servlets Struts",
        "Build Deployed",
        "J2EE Technologies Servlets",
        "Roles Responsibilities Designed and Developed User Interactive UI",
        "Controller",
        "SOAP",
        "XML",
        "Atlanta",
        "Project Payroll",
        "NOSQL",
        "Bean Component Repository",
        "Adapter",
        "WebLogic",
        "ReactDOM Bootstrap",
        "JUnit",
        "Daily Rolling Log",
        "EJB JAXM JAXP",
        "StrutsSwings",
        "Project Objectives",
        "Procedures Created",
        "Developed Angular",
        "JNDI Expertise",
        "WebSphere",
        "Front End UI",
        "Create",
        "Request Parameters",
        "Developed",
        "Mongo",
        "DAO",
        "Middleware",
        "Java Server Faces",
        "FirePoster",
        "Best Buy Apple",
        "Developed additional UI Components",
        "Mockito",
        "Spring MVC",
        "Session Facade Service Locator",
        "RAD",
        "Spring Core Annotations for Dependency Injection",
        "DTD XSL",
        "Groovy Unit Testing the Gradle",
        "Reflux",
        "Front Controller Factory Abstract Factory Command",
        "JUNIT Framework",
        "Present Project Assembly Quality Events AQE Description Assembly Quality Events",
        "HTML5",
        "REST API",
        "Enterprise",
        "Prepared Documentation for Unit Test Plan",
        "NodeJS Involved",
        "JSP",
        "Model View Architecture",
        "Spring Security ACEGI",
        "CSI Adapter Development Description ATT",
        "Bootstrap Developed",
        "Test Result Responsible",
        "RoboMongo",
        "Angular UI",
        "IOC",
        "Couchdb",
        "Bank",
        "Business Component",
        "DOM",
        "NodeJS Created",
        "Software",
        "Panel",
        "Implemented Data Access Layer",
        "Developed Servlets",
        "Atom IDE",
        "Action Mapping Action",
        "Java J2EE JSP Servlets",
        "MVC",
        "Interface",
        "Agile",
        "POJO MDP",
        "the Java Objects Constructed",
        "GIT",
        "JAXRS Consumed SOAP",
        "EJB",
        "Node JS",
        "Defect Fixing Feature Enhancements Testing and Documentation Used CVS",
        "Hibernate Annotations Involved",
        "JAXRS Restful Services",
        "US",
        "jQuery Ajax",
        "QA",
        "Spring MVC Dependency Injection",
        "WebLogic WebSphere",
        "Applied Struts",
        "Created",
        "Using Payroll Management System Payroll",
        "AWS",
        "Project Online Ticket Booking System Description",
        "Oracle",
        "Developed Junit",
        "JBoss Server Responsible",
        "JBOSS Application",
        "JSF",
        "Developed Data",
        "MVC Framework",
        "SAX",
        "Test",
        "Transaction",
        "DAO Leveraged",
        "SQL",
        "Slickgrid",
        "NPM",
        "Microsoft Visual Explorer for Agile Methodology",
        "CVS Maven Waterfall Education Bachelors of Engineering in",
        "the Online Booking Service",
        "JavaScript Subversion Jenkins AWS",
        "Chicago",
        "HttpClient",
        "Ibatis",
        "Continental Airlines",
        "Functional Flow Environment J2EE",
        "Display Tags",
        "Handson",
        "Node Js Express",
        "XHTML",
        "Consumed SOAP",
        "Mongoose API",
        "Spring Hibernate",
        "Build",
        "Maven",
        "Flex 30 Action Script",
        "FireBug",
        "Developed Grids",
        "UI Implementation",
        "XSL",
        "JavaScript",
        "Webservices",
        "Implemented Unit",
        "Tiles and Validation",
        "UI",
        "Value Object Pattern MVC Factory",
        "Webservices Oracle Rational Application Developer",
        "Payroll",
        "XSD",
        "ATT",
        "Insertion Updating Deletion",
        "Good Exposure to Service Oriented Architecture SOA",
        "Tomcat",
        "REST",
        "UAT Team Used",
        "Oracle SQL Developer GUI Graphical User Interface",
        "Nodejs Server",
        "Action Classes Developed Action forms Action",
        "TOAD",
        "WebLogic Application Server",
        "Integration",
        "Action Form",
        "Node",
        "Implemented Struts Bean Tags Logical Tags",
        "Gradle with Jenkins",
        "JSP XML Hibernate"
    ],
    "experience": "Experience SR Java Developer Caterpillar IL February 2015 to Present Project Assembly Quality Events AQE Description Assembly Quality Events is a Caterpillardeveloped webbased application used primarily in the assemblymachining operations of a shop floor The software enables shop floor and associated support personnel to record and analyze assemblymachining quality events that occur during the assembly process Roles Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using AngularJS HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngifngshow nghidengchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery AngularJS Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Java Developer ATT Atlanta GA February 2014 to January 2015 Project CSI Adapter Development Description ATT is the worlds largest telecommunications company providing robust and reliable services to its end clients in various fields CSI Adapter is a layer of code which provides a standard set of methods to access Service Providers and for isolating the Business Components The goal of the CSI Adapter is to maximize the isolation of the Business Components from the majority of changes that may be made in the Service Providers and to minimize Business Component coding requirements through reusable objects There are more than 200 Adapters involved in this project where each Adapter consists of more than 10 handlers Each handler is designed and coded for performing a specific functionality by accessing the database or Service Providers The handlers are grouped into an Adapter based on its usage and functionality Generally ATT stores and its clients Best Buy Apple etc use these handlers functionality in its kiosks and websites to provide reliable services to its customers Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Babilify Browserify HttpFetch BodyParser Express etcto create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the React Web UI components using Atom IDE and made backend REST calls using whatwgfetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using reactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using apache HttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to new Gradle based build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Used extensively Eclipse in development and debugging the application Environment Java 16 Junit 4 JBoss 7 Oracle 10 g HTMLJSP Javascript ReactJS NodeJSMongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS Senior Java J2EE Developer Continental Airlines Chicago IL August 2012 to January 2014 Project Online Ticket Booking System Description As part of its strategic goal to achieve 80 percent of bookings over the Internet Continental Airlines undertook a project to upgrade the Online Booking Service With the integration of the BEA Weblogic Server for their online ticket sales they had to be able to accommodate the independence of frontend applications that will develop and change to meet new business requirements and integrate the existing operational systems that are used to run and monitor business on a daytoday basis With the help of struts framework we developed UI and we used oracle as the database Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project life cycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML Java Script CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logic Integrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibility Used Spring JDBC Template and implemented DAO Design Pattern to connect and retrieving data Developed the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using Ibatis developed POJOs mapped to the relational tables in database using Ibatis mapping files Worked on Oracle as the backend database and used Ibatis to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to third company Followed top down approach to implement SOAP based web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application and Implemented Unit and Integration test cases with JUNIT Framework based on Functional Flow Environment J2EE JSP Servlets DHTML Java Script CSS HTML Spring Struts ibatis SOAP based WebServices Oracle PLSQL Toad 961 JUnit Jquery Oracle PLSQL SQL Navigator SVN Gradle 24 and WebLogic Server JAVA J2EE Developer Ing Direct India IN January 2011 to July 2012 Project Refund Anticipation Loan RAL Description RAL enables tax applicants to apply for loans on anticipated taxreturns with the bank This application helps tax officers transmitters and employees of the bank in conducting the regular business The website functionality includes keeping track of customer tax offices brokers transmitters and applicants The application processes all stages of the life cycle of the bank loansontax refunds business such as processing applications for service contract for service actual revenues earned etc The web application also provides various types of reports eg applicant reports tax officer performance reports loan account reports etc This is an ntier client server application deployed on application server using JBOSS Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactions Developed Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag libraries Used struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the application Analyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application on JBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnit Used Jira for tracking bugs Used Maven script for building and deploying the application Environment J2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion Java J2EE Programmer Analyst ICICI Bank IN June 2008 to December 2010 Project Payroll management systems Description Payroll Management System is an application program which is used by the company to manage the records of the employees working in the company Using Payroll Management System Payroll can be generated based on employees job type pay rate and hours worked Employees can log on to the system to see their current status Payroll system is to create records delete records and save records for employees according to their information given to the administration of the company Project Objectives is to improve efficiency of the companys administration to store uptodate information of the employees and to reduce extra cost for the security of the database A payroll system involves everything that has to do with the payment of the employees and filing of the employment taxes keeping track of hours printing and delivering checks etc Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PLSQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for Build Deployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors of Engineering in Computer Science in Computer Science VMRF University Skills frontend 9 years Java 9 years JQuery 9 years Oracle 9 years testing 9 years Additional Information EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS and participated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript JQuery AngularJS and ReactJS Experienced in developing and implementing web applications using Java J2EE JSP Servlets JSF HTML 5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services and hands on experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphere and JBoss Application Servers including hands on experience in using Tomcat web Server Expertise in developing XML documents with XSD validations SAX and DOM parsers to parse the data held in XML documents and experience in other XML related technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in using Java IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans to develop dynamic web applications Expertise in Bootstrap Angular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Maven deploy tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUI and performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL Databases MongoDB and CouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Category ExpertiseTools Application Development Java 17 JavaScript Servlets Struts framework JSP XML Hibernate JPA MyBatis NodeJS SOAP11 JAXWS 20 JAXRS Restful Services Jersey Spring NodeJS Java Skills J2EE JDBC EJB JAXM JAXP JAXB Java Server Pages JSP Multithreading JMS Configuration Management Tools CVS Clear Case SVN Git and Suround SCM Servers IBM Websphere JBOSS Weblogic Tomcat Node server Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database DB2 MYSQL Oracle 11 g 10 g 9i 8i SQL Server 20002005 MongoDB Couchdb IDE Websphere RAD 60 Eclipse 421 Spring tool suite WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans Operating System Windows Linux Unix Tools TOAD Putty SQL Developer Squirrel MY SQL workbench RoboMongo Languages SQL PLSQL UNIX Shell Scripting Java",
    "extracted_keywords": [
        "SR",
        "Java",
        "Developer",
        "SRspan",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "SR",
        "Java",
        "Developer",
        "Caterpillar",
        "IL",
        "IL",
        "IL",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "SR",
        "Java",
        "Developer",
        "Caterpillar",
        "IL",
        "February",
        "Present",
        "Project",
        "Assembly",
        "Quality",
        "Events",
        "AQE",
        "Description",
        "Assembly",
        "Quality",
        "Events",
        "Caterpillardeveloped",
        "application",
        "assemblymachining",
        "operations",
        "shop",
        "floor",
        "software",
        "shop",
        "floor",
        "support",
        "personnel",
        "quality",
        "events",
        "assembly",
        "process",
        "Roles",
        "Responsibilities",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "frontend",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "Spring",
        "Boot",
        "Developed",
        "Angular",
        "controllers",
        "services",
        "filters",
        "HTML",
        "templates",
        "directives",
        "ngapp",
        "ngcontroller",
        "ngrepeat",
        "ngifngshow",
        "nghidengchange",
        "ngblur",
        "Developed",
        "Grids",
        "system",
        "Slickgrid",
        "custom",
        "grid",
        "directive",
        "component",
        "Angular",
        "UI",
        "Bootstrap",
        "components",
        "calendars",
        "masks",
        "uploaders",
        "sliders",
        "modal",
        "dialogs",
        "UI",
        "part",
        "configuration",
        "Angular",
        "UI",
        "router",
        "views",
        "sub",
        "Configured",
        "Gulp",
        "UI",
        "build",
        "tasks",
        "NodeJS",
        "NPM",
        "Bower",
        "dependencies",
        "Angular",
        "services",
        "use",
        "resource",
        "service",
        "REST",
        "API",
        "unit",
        "test",
        "cases",
        "Jasmine",
        "Karma",
        "end",
        "tesing",
        "Protractor",
        "Selenium",
        "Developed",
        "REST",
        "controllers",
        "Spring",
        "Data",
        "REST",
        "UI",
        "JSON",
        "data",
        "REST",
        "exception",
        "controller",
        "advices",
        "requests",
        "server",
        "side",
        "exceptions",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "Spring",
        "bean",
        "Consumed",
        "SOAP",
        "JAXWS",
        "web",
        "services",
        "Spring",
        "framework",
        "SOAP",
        "UI",
        "services",
        "REST",
        "Client",
        "POSTMAN",
        "rest",
        "services",
        "Junit",
        "Mockito",
        "middleware",
        "services",
        "Middleware",
        "Message",
        "POJO",
        "MDP",
        "QCF",
        "Queue",
        "WebSphere",
        "server",
        "JMS",
        "template",
        "functionality",
        "users",
        "Hibernate",
        "persistence",
        "layer",
        "DAOs",
        "data",
        "database",
        "Nodejs",
        "Grunt",
        "tasks",
        "project",
        "compile",
        "minify",
        "concat",
        "modules",
        "Node",
        "JS",
        "designs",
        "requirements",
        "GruntJS",
        "BowerJS",
        "Express",
        "NodeJS",
        "MEAN",
        "Express",
        "Angular",
        "Node",
        "stack",
        "applications",
        "support",
        "Build",
        "REST",
        "web",
        "service",
        "Nodejs",
        "Server",
        "backend",
        "requests",
        "end",
        "jQuery",
        "Ajax",
        "calls",
        "integration",
        "data",
        "applications",
        "favor",
        "documents",
        "schemas",
        "MongoDB",
        "NOSQL",
        "database",
        "MongoDB",
        "collections",
        "services",
        "user",
        "data",
        "application",
        "devices",
        "Mongoose",
        "API",
        "order",
        "MongoDB",
        "NodeJS",
        "GIT",
        "version",
        "control",
        "system",
        "track",
        "work",
        "changes",
        "developers",
        "Maven",
        "build",
        "configuration",
        "tool",
        "Jenkins",
        "integration",
        "tool",
        "configuration",
        "usage",
        "Apache",
        "Log4J",
        "purposes",
        "RAD",
        "IDE",
        "tool",
        "application",
        "Prepared",
        "Documentation",
        "Unit",
        "Test",
        "Plan",
        "Unit",
        "Test",
        "Results",
        "QA",
        "purpose",
        "release",
        "night",
        "shakeoutsover",
        "night",
        "deliveries",
        "QA",
        "Support",
        "Veracode",
        "application",
        "security",
        "scanning",
        "flaws",
        "code",
        "part",
        "application",
        "Jenkins",
        "AWS",
        "builds",
        "deployments",
        "Tomcat",
        "server",
        "Environment",
        "Java",
        "STS",
        "Tomcat",
        "Gulp",
        "Spring",
        "Tool",
        "Suite",
        "Spring",
        "Spring",
        "Boot",
        "Hibernate",
        "MongoDB",
        "RESTful",
        "Web",
        "Service",
        "Oracle",
        "HTML5",
        "CSS3",
        "JQuery",
        "Node",
        "Js",
        "Express",
        "JavaScript",
        "GIT",
        "JMS",
        "Jenkins",
        "Agile",
        "JIRA",
        "tool",
        "Selenium",
        "Log4j",
        "Maven",
        "AWS",
        "Sr",
        "Java",
        "Developer",
        "ATT",
        "Atlanta",
        "GA",
        "February",
        "January",
        "Project",
        "CSI",
        "Adapter",
        "Development",
        "Description",
        "ATT",
        "worlds",
        "telecommunications",
        "company",
        "services",
        "end",
        "clients",
        "fields",
        "CSI",
        "Adapter",
        "layer",
        "code",
        "set",
        "methods",
        "Service",
        "Providers",
        "Business",
        "Components",
        "goal",
        "CSI",
        "Adapter",
        "isolation",
        "Business",
        "Components",
        "majority",
        "changes",
        "Service",
        "Providers",
        "Business",
        "Component",
        "requirements",
        "objects",
        "Adapters",
        "project",
        "Adapter",
        "handlers",
        "handler",
        "functionality",
        "database",
        "Service",
        "Providers",
        "handlers",
        "Adapter",
        "usage",
        "functionality",
        "Generally",
        "ATT",
        "stores",
        "clients",
        "Best",
        "Buy",
        "Apple",
        "handlers",
        "functionality",
        "kiosks",
        "websites",
        "services",
        "customers",
        "Roles",
        "Responsibilities",
        "Developed",
        "User",
        "Interactive",
        "UI",
        "Web",
        "pages",
        "HTML5",
        "ReactJS",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "NodeJS",
        "components",
        "modules",
        "ReactJS",
        "ReactDOM",
        "Bootstrap",
        "JSX",
        "NPM",
        "modules",
        "Watchify",
        "Babilify",
        "Browserify",
        "HttpFetch",
        "BodyParser",
        "Express",
        "etcto",
        "application",
        "REST",
        "services",
        "NodeJS",
        "ExpressJS",
        "Mongoose",
        "BodyParser",
        "NPM",
        "modules",
        "Reflux",
        "architecture",
        "actions",
        "stores",
        "controller",
        "components",
        "callbacks",
        "React",
        "Web",
        "UI",
        "components",
        "Atom",
        "IDE",
        "REST",
        "whatwgfetch",
        "Bootstrap",
        "CSS",
        "dialogs",
        "tabs",
        "date",
        "picker",
        "model",
        "pop",
        "ups",
        "components",
        "UI",
        "model",
        "Create",
        "edit",
        "sites",
        "design",
        "themes",
        "frontend",
        "development",
        "frameworks",
        "Bootstrap",
        "Developed",
        "components",
        "application",
        "reactrouter",
        "module",
        "components",
        "views",
        "DAO",
        "layer",
        "applications",
        "Spring",
        "Hibernate",
        "business",
        "logic",
        "reports",
        "HQL",
        "Hibernate",
        "Criteria",
        "Consumed",
        "web",
        "services",
        "apache",
        "HttpClient",
        "data",
        "systems",
        "team",
        "development",
        "requirements",
        "Code",
        "Reviews",
        "Experience",
        "versions",
        "Mongo",
        "database",
        "platforms",
        "custom",
        "Mongo",
        "applications",
        "clients",
        "Developed",
        "Spring",
        "JMS",
        "message",
        "listeners",
        "JMS",
        "messages",
        "queues",
        "Spring",
        "transaction",
        "management",
        "transactions",
        "application",
        "Spring",
        "Framework",
        "Business",
        "Tier",
        "Spring",
        "container",
        "services",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Bean",
        "Component",
        "Repository",
        "Autowired",
        "Spring",
        "Framework",
        "Hibernate",
        "Oracle",
        "database",
        "mapping",
        "Hibernate",
        "Annotations",
        "application",
        "AWS",
        "environment",
        "EC2",
        "instances",
        "ELBs",
        "Jenkins",
        "Application",
        "Deploying",
        "testing",
        "JBoss",
        "Server",
        "Responsible",
        "code",
        "quality",
        "coding",
        "implementation",
        "standards",
        "code",
        "reviews",
        "unit",
        "test",
        "cases",
        "integration",
        "tests",
        "DAO",
        "Service",
        "Controller",
        "components",
        "JUnit",
        "DbUnit",
        "Spring",
        "Test",
        "support",
        "legacy",
        "Ant",
        "infrastructure",
        "Gradle",
        "build",
        "system",
        "test",
        "build",
        "release",
        "procedures",
        "Integration",
        "testing",
        "bugs",
        "change",
        "requests",
        "code",
        "reviews",
        "Database",
        "Schemas",
        "domain",
        "Integration",
        "Code",
        "build",
        "Team",
        "Eclipse",
        "development",
        "application",
        "Environment",
        "Java",
        "Junit",
        "JBoss",
        "Oracle",
        "g",
        "HTMLJSP",
        "Javascript",
        "ReactJS",
        "NodeJSMongodb",
        "Spring",
        "Hibernate",
        "Eclipse",
        "Atom",
        "Restful",
        "Web",
        "services",
        "Gradle",
        "Junit",
        "log4j",
        "JavaScript",
        "Subversion",
        "Jenkins",
        "AWS",
        "Senior",
        "Java",
        "J2EE",
        "Developer",
        "Continental",
        "Airlines",
        "Chicago",
        "IL",
        "August",
        "January",
        "Project",
        "Online",
        "Ticket",
        "Booking",
        "System",
        "Description",
        "part",
        "goal",
        "percent",
        "bookings",
        "Internet",
        "Continental",
        "Airlines",
        "project",
        "Online",
        "Booking",
        "Service",
        "integration",
        "BEA",
        "Weblogic",
        "Server",
        "ticket",
        "sales",
        "independence",
        "frontend",
        "applications",
        "business",
        "requirements",
        "systems",
        "business",
        "basis",
        "help",
        "struts",
        "framework",
        "UI",
        "oracle",
        "database",
        "Roles",
        "Responsibilities",
        "analysis",
        "design",
        "projects",
        "sizes",
        "exposure",
        "aspects",
        "project",
        "life",
        "cycle",
        "documentation",
        "conformance",
        "standards",
        "UI",
        "screens",
        "ticket",
        "information",
        "bookings",
        "Struts",
        "MVC",
        "presentation",
        "layers",
        "Development",
        "frontend",
        "content",
        "JSP",
        "Servlets",
        "DHTML",
        "Java",
        "Script",
        "CSS",
        "HTML",
        "Spring",
        "Beans",
        "IOC",
        "Transaction",
        "management",
        "transactions",
        "business",
        "logic",
        "Integrated",
        "Struts",
        "framework",
        "Spring",
        "framework",
        "use",
        "Struts",
        "Framework",
        "Controller",
        "components",
        "View",
        "components",
        "Simulator",
        "Spring",
        "Source",
        "Tool",
        "Suite",
        "Developing",
        "application",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "usability",
        "flexibility",
        "Spring",
        "JDBC",
        "Template",
        "DAO",
        "Design",
        "Pattern",
        "data",
        "application",
        "Stripes",
        "framework",
        "part",
        "action",
        "bean",
        "classes",
        "Data",
        "Access",
        "Layer",
        "Ibatis",
        "POJOs",
        "tables",
        "database",
        "Ibatis",
        "mapping",
        "files",
        "Oracle",
        "database",
        "Ibatis",
        "mapping",
        "SQL",
        "Databases",
        "Java",
        "database",
        "Packages",
        "Procedures",
        "Functions",
        "Batches",
        "SQL",
        "Queries",
        "Views",
        "Indexes",
        "Exceptions",
        "Toad",
        "Wrote",
        "PLSQL",
        "procedures",
        "Oracle",
        "database",
        "Created",
        "SOAP",
        "web",
        "service",
        "payment",
        "processing",
        "data",
        "company",
        "approach",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "UI",
        "Java",
        "Mailing",
        "Messaging",
        "Service",
        "JMS",
        "APIs",
        "notifications",
        "success",
        "failure",
        "process",
        "administrator",
        "system",
        "problems",
        "Configured",
        "WebLogic",
        "Application",
        "Server",
        "code",
        "reviews",
        "walkthroughs",
        "Support",
        "installation",
        "application",
        "releases",
        "production",
        "Used",
        "Jira",
        "bugs",
        "Gradle",
        "Jenkins",
        "application",
        "environments",
        "Daily",
        "Rolling",
        "Log",
        "Log4j",
        "Microsoft",
        "Visual",
        "Explorer",
        "Agile",
        "Methodology",
        "NetBeans",
        "IDE",
        "TOAD",
        "database",
        "query",
        "process",
        "queries",
        "Construction",
        "Changes",
        "Code",
        "Unit",
        "testing",
        "Test",
        "Result",
        "unit",
        "testing",
        "integration",
        "testing",
        "bugs",
        "change",
        "requests",
        "Developed",
        "Junit",
        "test",
        "cases",
        "test",
        "coverage",
        "application",
        "Implemented",
        "Unit",
        "Integration",
        "test",
        "cases",
        "JUNIT",
        "Framework",
        "Functional",
        "Flow",
        "Environment",
        "J2EE",
        "JSP",
        "Servlets",
        "DHTML",
        "Java",
        "Script",
        "CSS",
        "HTML",
        "Spring",
        "Struts",
        "SOAP",
        "WebServices",
        "Oracle",
        "PLSQL",
        "Toad",
        "JUnit",
        "Jquery",
        "Oracle",
        "PLSQL",
        "SQL",
        "Navigator",
        "SVN",
        "Gradle",
        "WebLogic",
        "Server",
        "J2EE",
        "Developer",
        "Ing",
        "Direct",
        "India",
        "January",
        "July",
        "Project",
        "Refund",
        "Anticipation",
        "Loan",
        "RAL",
        "Description",
        "RAL",
        "tax",
        "applicants",
        "loans",
        "taxreturns",
        "bank",
        "application",
        "tax",
        "officers",
        "transmitters",
        "employees",
        "bank",
        "business",
        "website",
        "functionality",
        "track",
        "customer",
        "tax",
        "offices",
        "brokers",
        "transmitters",
        "applicants",
        "application",
        "stages",
        "life",
        "cycle",
        "bank",
        "loansontax",
        "refunds",
        "business",
        "processing",
        "applications",
        "service",
        "contract",
        "service",
        "revenues",
        "web",
        "application",
        "types",
        "reports",
        "eg",
        "applicant",
        "tax",
        "officer",
        "performance",
        "loan",
        "account",
        "reports",
        "ntier",
        "client",
        "server",
        "application",
        "application",
        "server",
        "JBOSS",
        "Roles",
        "Responsibilities",
        "event",
        "UI",
        "layer",
        "code",
        "JavaScript",
        "applets",
        "JSPs",
        "sequence",
        "diagram",
        "transactions",
        "Popin",
        "Dialog",
        "JSPs",
        "Request",
        "Parameters",
        "JavaScript",
        "Jquery",
        "JSTL",
        "UI",
        "Implementation",
        "Struts",
        "JavaScript",
        "Struts",
        "Validation",
        "framework",
        "MyEclipse",
        "IDE",
        "Applied",
        "Struts",
        "Tiles",
        "Validation",
        "framework",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "form",
        "validation",
        "UI",
        "Implementation",
        "Struts",
        "JavaScript",
        "Struts",
        "Validation",
        "framework",
        "MyEclipse",
        "IDE",
        "Applied",
        "Struts",
        "Tiles",
        "Validation",
        "framework",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "form",
        "validation",
        "MVC",
        "architecture",
        "StrutsSwings",
        "data",
        "frontend",
        "business",
        "layer",
        "Integrated",
        "Struts",
        "Hibernate",
        "Object",
        "mapping",
        "apache",
        "struts",
        "components",
        "DAO",
        "strutsvalidations",
        "strutsbeans",
        "struts",
        "Action",
        "Servlet",
        "request",
        "Action",
        "Classes",
        "Action",
        "forms",
        "Action",
        "classes",
        "Struts",
        "framework",
        "user",
        "requests",
        "Struts",
        "Bean",
        "Tags",
        "Logical",
        "Tags",
        "Display",
        "Tags",
        "JSPs",
        "development",
        "modules",
        "Flex",
        "Action",
        "Script",
        "J2EE",
        "layer",
        "Blaze",
        "DS",
        "Spring",
        "MVC",
        "frame",
        "work",
        "development",
        "server",
        "side",
        "modules",
        "SpringMVC",
        "SpringIOC",
        "Spring",
        "AOP",
        "AspectJ",
        "application",
        "Struts",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "layer",
        "Hibernate",
        "Developed",
        "procedures",
        "functions",
        "application",
        "DAO",
        "persistence",
        "layers",
        "data",
        "manipulation",
        "information",
        "transactions",
        "webservices",
        "topics",
        "TIBCO",
        "EMSJMSqueues",
        "MQs",
        "databases",
        "automation",
        "areas",
        "software",
        "development",
        "test",
        "automation",
        "framework",
        "data",
        "schema",
        "development",
        "SOAP",
        "web",
        "services",
        "implementation",
        "REST",
        "web",
        "services",
        "JAXRS",
        "Consumed",
        "SOAP",
        "REST",
        "web",
        "services",
        "data",
        "databases",
        "Configured",
        "Strutsconfig",
        "XML",
        "action",
        "mappings",
        "Message",
        "Middleware",
        "communication",
        "Enterprise",
        "application",
        "Experience",
        "user",
        "requests",
        "programs",
        "program",
        "components",
        "feasibility",
        "cost",
        "time",
        "compatibility",
        "systems",
        "computer",
        "capabilities",
        "Value",
        "Object",
        "Pattern",
        "MVC",
        "Factory",
        "Pattern",
        "Tibco",
        "Ecommerce",
        "part",
        "checkout",
        "flow",
        "application",
        "JBOSS",
        "Application",
        "server",
        "Subversion",
        "version",
        "control",
        "management",
        "quality",
        "code",
        "unit",
        "JUnit",
        "Jira",
        "bugs",
        "Maven",
        "script",
        "building",
        "application",
        "Environment",
        "J2EE",
        "JBOSS",
        "Application",
        "Server",
        "JSP",
        "Jquery",
        "Struts",
        "Spring",
        "Hibernate",
        "SOAP",
        "Webservices",
        "Oracle",
        "Rational",
        "Application",
        "Developer",
        "Maven",
        "JUnit",
        "Subversion",
        "Java",
        "J2EE",
        "Programmer",
        "Analyst",
        "ICICI",
        "Bank",
        "June",
        "December",
        "Project",
        "Payroll",
        "management",
        "systems",
        "Description",
        "Payroll",
        "Management",
        "System",
        "application",
        "program",
        "company",
        "records",
        "employees",
        "company",
        "Payroll",
        "Management",
        "System",
        "Payroll",
        "employees",
        "job",
        "type",
        "pay",
        "rate",
        "hours",
        "Employees",
        "system",
        "status",
        "Payroll",
        "system",
        "records",
        "records",
        "records",
        "employees",
        "information",
        "administration",
        "company",
        "Project",
        "Objectives",
        "efficiency",
        "companys",
        "administration",
        "information",
        "employees",
        "cost",
        "security",
        "database",
        "payroll",
        "system",
        "payment",
        "employees",
        "filing",
        "employment",
        "taxes",
        "track",
        "hours",
        "printing",
        "checks",
        "Roles",
        "Responsibilities",
        "User",
        "Interface",
        "Java",
        "Server",
        "Faces",
        "JSF",
        "HTML",
        "Cascading",
        "Style",
        "Sheets",
        "CSS",
        "XML",
        "JSF",
        "user",
        "Interface",
        "components",
        "JSF",
        "tab",
        "panels",
        "Panel",
        "groups",
        "data",
        "components",
        "triggers",
        "calendar",
        "change",
        "listeners",
        "JSF",
        "end",
        "GUI",
        "layout",
        "UI",
        "Components",
        "JSF",
        "AJAX",
        "communication",
        "JQuery",
        "client",
        "customer",
        "experience",
        "user",
        "interface",
        "screens",
        "JSF20",
        "Prime",
        "component",
        "library",
        "Rich",
        "faces",
        "components",
        "pages",
        "presentation",
        "layer",
        "Model",
        "View",
        "Architecture",
        "Spring",
        "MVC",
        "Managed",
        "Spring",
        "Core",
        "dependency",
        "injectionInversion",
        "control",
        "IOC",
        "security",
        "help",
        "Spring",
        "Security",
        "ACEGI",
        "web",
        "services",
        "SOAPUI",
        "Web",
        "Service",
        "Explorer",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "XSL",
        "SOAP",
        "XML",
        "vice",
        "versa",
        "Developed",
        "SOAP",
        "Web",
        "services",
        "information",
        "party",
        "EJBs",
        "session",
        "entity",
        "beans",
        "business",
        "logic",
        "data",
        "manipulations",
        "database",
        "Developed",
        "Data",
        "access",
        "bean",
        "EJBs",
        "data",
        "database",
        "Developed",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "design",
        "pattern",
        "business",
        "logic",
        "Servlets",
        "Java",
        "Bean",
        "components",
        "modules",
        "System",
        "database",
        "connection",
        "JDBC",
        "access",
        "system",
        "Oracle",
        "data",
        "validation",
        "load",
        "processes",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "functionality",
        "business",
        "processing",
        "time",
        "SQL",
        "DBMS_SQL",
        "DBMS_DDL",
        "Functions",
        "Procedures",
        "database",
        "Insertion",
        "Deletion",
        "audit",
        "routines",
        "Code",
        "Reviews",
        "PLSQL",
        "Code",
        "Tuning",
        "systems",
        "support",
        "maintenance",
        "services",
        "Defect",
        "Fixing",
        "Feature",
        "Enhancements",
        "Testing",
        "Documentation",
        "CVS",
        "version",
        "control",
        "management",
        "Maven",
        "Build",
        "application",
        "Tomcat",
        "server",
        "Environment",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JSP",
        "JSF",
        "EJB",
        "Spring",
        "SOAP",
        "Webservices",
        "Eclipse",
        "Tomcat",
        "Oracle",
        "PLSQL",
        "CVS",
        "Maven",
        "Waterfall",
        "Education",
        "Bachelors",
        "Engineering",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "VMRF",
        "University",
        "Skills",
        "years",
        "Java",
        "years",
        "JQuery",
        "years",
        "Oracle",
        "years",
        "years",
        "Additional",
        "Information",
        "EXPERTISE",
        "SPECIALIZATION",
        "Experience",
        "J2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JDBC",
        "EJB",
        "JNDI",
        "JMS",
        "designing",
        "developing",
        "Software",
        "Agile",
        "Waterfall",
        "methodologies",
        "Experience",
        "User",
        "Experience",
        "UX",
        "design",
        "development",
        "User",
        "Interactive",
        "UI",
        "Web",
        "Pages",
        "User",
        "Interfaces",
        "HTML",
        "CSS3",
        "Bootstrap",
        "SASSJavaScript",
        "JQuery",
        "AngularJS",
        "ReactJS",
        "web",
        "applications",
        "Java",
        "J2EE",
        "JSP",
        "Servlets",
        "JSF",
        "HTML",
        "JavaScript",
        "AJAX",
        "JSON",
        "JQuery",
        "CSS3",
        "XML",
        "JDBC",
        "JNDI",
        "Expertise",
        "development",
        "deployment",
        "web",
        "enterprise",
        "applications",
        "J2EE",
        "technologies",
        "Servlets",
        "JSP",
        "Struts",
        "JMS",
        "Hibernate",
        "Spring",
        "JDBC",
        "JNDI",
        "JSF",
        "JS",
        "Java",
        "Beans",
        "Web",
        "services",
        "SOAP",
        "Rest",
        "Knowledge",
        "J2EE",
        "design",
        "patterns",
        "MVC",
        "Front",
        "Controller",
        "Factory",
        "Abstract",
        "Factory",
        "Command",
        "Pattern",
        "Singleton",
        "Session",
        "Facade",
        "Transfer",
        "Object",
        "Business",
        "Delegate",
        "Data",
        "Access",
        "Object",
        "Expertise",
        "MVC",
        "architecture",
        "Web",
        "Framework",
        "Struts",
        "Spring",
        "Dependency",
        "Injection",
        "Data",
        "Access",
        "MVC",
        "Framework",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Framework",
        "business",
        "layer",
        "Dependency",
        "Injection",
        "AOP",
        "Spring",
        "MVC",
        "transaction",
        "management",
        "Hibernate",
        "persistence",
        "layer",
        "POJOs",
        "persistence",
        "database",
        "Good",
        "Exposure",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Web",
        "Services",
        "hands",
        "experience",
        "web",
        "services",
        "JAXRPC",
        "JAXWS",
        "SAAJ",
        "JAXRS",
        "SOAP",
        "RESTful",
        "WSDL",
        "UDDI",
        "registry",
        "Experience",
        "web",
        "applications",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "Application",
        "Servers",
        "hands",
        "experience",
        "Tomcat",
        "web",
        "Server",
        "Expertise",
        "XML",
        "documents",
        "XSD",
        "validations",
        "SAX",
        "DOM",
        "parsers",
        "data",
        "XML",
        "documents",
        "experience",
        "XML",
        "technologies",
        "DTD",
        "XSL",
        "XSLT",
        "XPATH",
        "JAXB",
        "JAXP",
        "Expertise",
        "Java",
        "IDE",
        "tools",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Web",
        "Sphere",
        "Application",
        "Developer",
        "WSAD",
        "Eclipse",
        "EE",
        "Weblogic",
        "Workshop",
        "RSA",
        "Netbeans",
        "web",
        "applications",
        "Expertise",
        "Bootstrap",
        "Angular",
        "JS",
        "Node",
        "JSExpress",
        "Mongoose",
        "BodyParser",
        "Sequelize",
        "HTTP",
        "FileSystem",
        "BrowserSync",
        "etc",
        "Log",
        "4j",
        "Handson",
        "experience",
        "source",
        "control",
        "tools",
        "CVS",
        "Clear",
        "Case",
        "SVN",
        "Git",
        "Surround",
        "SCM",
        "deployment",
        "ear",
        "jars",
        "Jenkins",
        "ANT",
        "Maven",
        "tools",
        "configuration",
        "changes",
        "application",
        "integration",
        "testing",
        "environment",
        "training",
        "materials",
        "Groovy",
        "Unit",
        "Gradle",
        "build",
        "framework",
        "others",
        "Experience",
        "testing",
        "tools",
        "applications",
        "JUnit",
        "Mockito",
        "FireBug",
        "FirePoster",
        "SoapUI",
        "Unit",
        "testing",
        "QA",
        "team",
        "preparation",
        "Test",
        "plans",
        "concepts",
        "SQL",
        "Queries",
        "Functions",
        "Stored",
        "Procedures",
        "PLSQL",
        "Packages",
        "knowledge",
        "NoSQL",
        "Databases",
        "MongoDB",
        "CouchDB",
        "Expertise",
        "Oracle",
        "SQL",
        "Developer",
        "GUI",
        "Graphical",
        "User",
        "Interface",
        "tool",
        "database",
        "development",
        "browse",
        "database",
        "SQL",
        "PLSQL",
        "understanding",
        "AgileSCRUM",
        "ability",
        "SCRUM",
        "meetings",
        "team",
        "activities",
        "strictdeadline",
        "environment",
        "client",
        "communication",
        "exposure",
        "clients",
        "application",
        "environment",
        "issues",
        "people",
        "levels",
        "stakeholders",
        "teams",
        "management",
        "TECHNICAL",
        "PROFICIENCY",
        "Category",
        "ExpertiseTools",
        "Application",
        "Development",
        "Java",
        "JavaScript",
        "Servlets",
        "Struts",
        "JSP",
        "XML",
        "Hibernate",
        "JPA",
        "MyBatis",
        "NodeJS",
        "SOAP11",
        "JAXWS",
        "JAXRS",
        "Restful",
        "Services",
        "Jersey",
        "Spring",
        "NodeJS",
        "Java",
        "Skills",
        "J2EE",
        "JDBC",
        "EJB",
        "JAXM",
        "JAXP",
        "JAXB",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "Multithreading",
        "JMS",
        "Configuration",
        "Management",
        "Tools",
        "CVS",
        "Clear",
        "Case",
        "SVN",
        "Git",
        "Suround",
        "SCM",
        "Servers",
        "IBM",
        "Websphere",
        "JBOSS",
        "Weblogic",
        "Tomcat",
        "Node",
        "server",
        "End",
        "UI",
        "HTML",
        "XML",
        "JavaScript",
        "JQuery",
        "CSS",
        "Bootstrap",
        "AJAX",
        "SASS",
        "Selenium",
        "Cucumber",
        "Database",
        "DB2",
        "MYSQL",
        "Oracle",
        "g",
        "g",
        "9i",
        "SQL",
        "Server",
        "MongoDB",
        "Couchdb",
        "IDE",
        "Websphere",
        "RAD",
        "Eclipse",
        "Spring",
        "tool",
        "suite",
        "WSAD",
        "Eclipse",
        "EE",
        "Weblogic",
        "Workshop",
        "RSA",
        "Netbeans",
        "System",
        "Windows",
        "Linux",
        "Unix",
        "Tools",
        "TOAD",
        "Putty",
        "SQL",
        "Developer",
        "Squirrel",
        "MY",
        "SQL",
        "workbench",
        "RoboMongo",
        "Languages",
        "SQL",
        "PLSQL",
        "UNIX",
        "Shell",
        "Scripting",
        "Java"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:16:22.929050",
    "resume_data": "SR Java Developer SRspan lJavaspan span lDeveloperspan SR Java Developer Caterpillar IL IL IL Authorized to work in the US for any employer Work Experience SR Java Developer Caterpillar IL February 2015 to Present Project Assembly Quality Events AQE Description Assembly Quality Events is a Caterpillardeveloped webbased application used primarily in the assemblymachining operations of a shop floor The software enables shop floor and associated support personnel to record and analyze assemblymachining quality events that occur during the assembly process Roles Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Designed the frontend screens using AngularJS HTML5 CSS3 JavaScript JQuery Bootstrap and Spring Boot Developed Angular controllers services filters and developed HTML templates with various Angular directives such as ngapp ngcontroller ngrepeat ngifngshow nghidengchange ngblur etc Developed Grids used in the system using Slickgrid and created custom grid directive to make the component reusable Used various Angular UI Bootstrap components such as calendars masks uploaders sliders alerts modal dialogs etcfor developing the UI Took part in setting up the routing configuration using Angular UI router for various views and sub views Configured Gulp to perform various UI build and test related tasks and used NodeJS NPM and Bower to manage the dependencies Developed Angular services making use of resource service to perform REST API calls to the backend Developed unit test cases using Jasmine and Karma and performed end to end tesing using Protractor and Selenium Developed REST controllers using Spring Data REST to serve the UI with required JSON data Developed REST exception handling controller advices to respond to bad requests and server side exceptions Used complete annotation driven approach to develop the application using Spring Boot and was also involved in setting up the Spring bean profiling Consumed SOAP JAXWS based web services using Spring framework and used SOAP UI for testing these services Used REST Client and POSTMAN to test the rest based services and used Junit and Mockito to test the middleware services Worked with Middleware using Message driven by POJO MDP after creating QCF Queue on WebSphere server and using JMS template for asynchronous functionality for multiple users Used Hibernate in the persistence layer and implemented DAOs to access data from database Used Nodejs to run Grunt tasks and build properly the project compile minify concat etc and Implement modules into Node JS to integrate with designs and requirements Used GruntJS BowerJS Express from NodeJS Involved in enhancing existing MEAN MongoDB Express Angular and Node stack applications and provided the required support Build REST web service by building Nodejs Server in the backend to handle requests sent from the front end jQuery Ajax calls Made the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB NOSQL database Created various MongoDB collections and wrote services to store and retrieve user data from for the application on devices and used Mongoose API in order to access the MongoDB from NodeJS Used GIT as version control system to keep track of all the work all changes allowing several developers to collaborate and used Maven as build and configuration tool and Jenkins for continuous integration tool Involved in configuration and usage of Apache Log4J for logging and debugging purposes Used RAD as IDE tool to develop the application Prepared Documentation for Unit Test Plan and Unit Test Results for the QA purpose Participated in the release night shakeoutsover night deliveries and QA Support Used Veracode for application security scanning and remediated the flaws that were identified in the code Took part in setting up the application with Jenkins and AWS and is involved in builds and deployments to Tomcat server Environment Java 7 STS Tomcat 7 Gulp Spring Tool Suite Spring Spring Boot Hibernate MongoDB RESTful Web Service Oracle HTML5 CSS3 JQuery AngularJS Node Js Express JavaScript GIT JMS Jenkins Agile JIRA tool Selenium Log4j Maven AWS Sr Java Developer ATT Atlanta GA February 2014 to January 2015 Project CSI Adapter Development Description ATT is the worlds largest telecommunications company providing robust and reliable services to its end clients in various fields CSI Adapter is a layer of code which provides a standard set of methods to access Service Providers and for isolating the Business Components The goal of the CSI Adapter is to maximize the isolation of the Business Components from the majority of changes that may be made in the Service Providers and to minimize Business Component coding requirements through reusable objects There are more than 200 Adapters involved in this project where each Adapter consists of more than 10 handlers Each handler is designed and coded for performing a specific functionality by accessing the database or Service Providers The handlers are grouped into an Adapter based on its usage and functionality Generally ATT stores and its clients Best Buy Apple etc use these handlers functionality in its kiosks and websites to provide reliable services to its customers Roles Responsibilities Designed and Developed User Interactive UI Web pages using HTML5 ReactJS Bootstrap CSS JavaScript JQuery AJAX and NodeJS Created reusable components used across various modules using ReactJS ReactDOM Bootstrap and JSX Used various NPM modules like Watchify Babilify Browserify HttpFetch BodyParser Express etcto create the application Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Followed Reflux architecture in creating the actions stores and controller components for callbacks Developed the React Web UI components using Atom IDE and made backend REST calls using whatwgfetch Used Bootstrap CSS for dialogs tabs date picker model pop ups and advanced components to implement UI model Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Developed routing components in the application using reactrouter module for various components and views Developed the DAO layer for the existing applications using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Consumed restful web services using apache HttpClient for the data coming from external systems Interacting with the offshore team to assist them in the development and help them understand the requirements and performed Code Reviews Experience in upgrading and migrating various versions of Mongo database on different platforms Designed and developed custom Mongo applications specific to clients needs Developed Spring JMS message listeners to consume JMS messages from queues and used Spring transaction management to manage the transactions in the application Used Spring Framework at Business Tier and uses Spring container for initializing services and used Spring Core Annotations for Dependency Injection such as Bean Component Repository Autowired etc Used Spring Framework with Hibernate to map to Oracle database and mapping using Hibernate Annotations Involved in setting up the application to run on AWS environment on multiple EC2 instances with ELBs using Jenkins Validating the Application by Deploying and testing on JBoss Server Responsible for maintaining the code quality coding and implementation standards by code reviews Created various unit test cases and integration tests for the DAO Service and Controller components using JUnit DbUnit and Spring Test support Updated legacy Ant build infrastructure to new Gradle based build system enabling more robust test build and release procedures Integration testing bugs fixing handling change requests and code reviews Reviewing the Database Schemas across the different domain Worked on the Integration of the Code and deliver the build to UAT Team Used extensively Eclipse in development and debugging the application Environment Java 16 Junit 4 JBoss 7 Oracle 10g HTMLJSP Javascript ReactJS NodeJSMongodb Spring Hibernate Eclipse Atom Restful Web services Gradle Junit log4j JavaScript Subversion Jenkins AWS Senior Java J2EE Developer Continental Airlines Chicago IL August 2012 to January 2014 Project Online Ticket Booking System Description As part of its strategic goal to achieve 80 percent of bookings over the Internet Continental Airlines undertook a project to upgrade the Online Booking Service With the integration of the BEA Weblogic Server for their online ticket sales they had to be able to accommodate the independence of frontend applications that will develop and change to meet new business requirements and integrate the existing operational systems that are used to run and monitor business on a daytoday basis With the help of struts framework we developed UI and we used oracle as the database Roles Responsibilities Experienced in performing extensive analysis and design by working on projects of all sizes that require exposure to all aspects of the project life cycle and creating and maintaining documentation in conformance with established standards Designed various UI screens required for the ticket information and bookings Used Struts MVC at presentation layers Development frontend content using JSP Servlets DHTML Java Script CSS HTML Implemented Spring Beans using IOC and Transaction management features to handle the transactions and business logic Integrated the Struts framework and the Spring framework together Extensive use of Struts Framework for Controller components and View components Created and maintained Simulator using Spring Source Tool Suite Developing application using Spring MVC Dependency Injection to improve usability and flexibility Used Spring JDBC Template and implemented DAO Design Pattern to connect and retrieving data Developed the application using the Stripes framework and worked as a part of developing the most of the action bean classes Implemented Data Access Layer using Ibatis developed POJOs mapped to the relational tables in database using Ibatis mapping files Worked on Oracle as the backend database and used Ibatis to automate the mapping between the SQL Databases and the Java Objects Constructed database objects like Packages Procedures Functions Batches SQL Queries Views Indexes and Exceptions using Toad Wrote PLSQL stored procedures for Oracle database Created SOAP web service for sending payment processing informational data to third company Followed top down approach to implement SOAP based web services Tested SOAP web services using SOAP UI Used Java Mailing or Messaging Service JMS APIs for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used Jira for tracking bugs and used Gradle with Jenkins for building and deploying the application to multiple environments and created Daily Rolling Log using Log4j Used Microsoft Visual Explorer for Agile Methodology and Used NetBeans IDE Used TOAD for database query testing in the process of optimizing the queries Worked on Construction Changes in Code Unit testing and Test Result Responsible for unit testing and integration testing bugs fixing handling change requests Developed Junit test cases for test coverage of the application and Implemented Unit and Integration test cases with JUNIT Framework based on Functional Flow Environment J2EE JSP Servlets DHTML Java Script CSS HTML Spring Struts ibatis SOAP based WebServices Oracle PLSQL Toad 961 JUnit Jquery Oracle PLSQL SQL Navigator SVN Gradle 24 and WebLogic Server JAVA J2EE Developer Ing Direct India IN January 2011 to July 2012 Project Refund Anticipation Loan RAL Description RAL enables tax applicants to apply for loans on anticipated taxreturns with the bank This application helps tax officers transmitters and employees of the bank in conducting the regular business The website functionality includes keeping track of customer tax offices brokers transmitters and applicants The application processes all stages of the life cycle of the bank loansontax refunds business such as processing applications for service contract for service actual revenues earned etc The web application also provides various types of reports eg applicant reports tax officer performance reports loan account reports etc This is an ntier client server application deployed on application server using JBOSS Roles Responsibilities Analyzed and extracted the event flows of the UI layer code written in JavaScript struts java applets and JSPs to come up with the sequence diagram for various transactions Developed Popin Dialog JSPs and passing Request Parameters using JavaScript Jquery JSTL UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation UI Implementation with Struts JavaScript Struts Validation framework on MyEclipse IDE Applied Struts features like Tiles and Validation framework Designed and implemented Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean and a form set for validation Implemented MVC architecture by using StrutsSwings to send and receive the data from frontend to business layer Integrated the Struts and Hibernate to achieve Object relational mapping Used apache struts to develop the webbased components and implemented DAO Leveraged strutsvalidations strutsbeans tag libraries Used struts Action Servlet to route the request to corresponding Action Classes Developed Action forms Action classes using Struts framework to handle user requests and Implemented Struts Bean Tags Logical Tags and Display Tags in JSPs Involved in the development modules using Flex 30 Action Script and integrating with J2EE layer using Blaze DS and Spring MVC frame work Involved in development of server side modules using SpringMVC SpringIOC Spring AOP and AspectJ Developed application using Struts JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Developed stored procedures triggers functions for the application Analyzed the DAO and persistence layers to extract the data manipulation information for various transactions Identified the webservices SOAP topics TIBCO EMSJMSqueues MQs underlying databases and other automation areas that will be impacted with the new software development and develop a test automation framework Involved in designing data schema and development of SOAP web services with Axis implementation and REST web services with JAXRS Consumed SOAP and REST web services to get the persisted data from different databases Configured Strutsconfig XML for action mappings Involved in implementing the Message Oriented Middleware for Asynchronous communication in Enterprise application Experience evaluating user requests for new programs or modified program components to determine feasibility cost and time required compatibility with current systems and computer capabilities Involved in implementing Value Object Pattern MVC Factory Pattern Worked with Tibco and Ecommerce as a part of checkout flow Deployed application on JBOSS Application server Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing JUnit Used Jira for tracking bugs Used Maven script for building and deploying the application Environment J2EE JBOSS Application Server JSP Jquery Struts Spring Hibernate SOAP based Webservices Oracle Rational Application Developer 60 Maven JUnit and Subversion Java J2EE Programmer Analyst ICICI Bank IN June 2008 to December 2010 Project Payroll management systems Description Payroll Management System is an application program which is used by the company to manage the records of the employees working in the company Using Payroll Management System Payroll can be generated based on employees job type pay rate and hours worked Employees can log on to the system to see their current status Payroll system is to create records delete records and save records for employees according to their information given to the administration of the company Project Objectives is to improve efficiency of the companys administration to store uptodate information of the employees and to reduce extra cost for the security of the database A payroll system involves everything that has to do with the payment of the employees and filing of the employment taxes keeping track of hours printing and delivering checks etc Roles Responsibilities Designed User Interface using Java Server Faces JSF HTML Cascading Style Sheets CSS and XML Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar and actionvalue change listeners with JSF for enhancing the front end GUI layout Developed additional UI Components using JSF and implemented an asynchronous AJAX communication JQuery based rich client to improve customer experience Developed the user interface screens using JSF20 and Prime faces component library Also used Rich faces to customize some of the components in XHTML pages Developed the presentation layer using Model View Architecture implemented by Spring MVC Managed Spring Core for dependency injectionInversion of control IOC and managed the security with the help of Spring Security ACEGI Tested the web services using SOAPUI and Web Service Explorer Used SOAP for Web Services by exchanging XML data between applications over HTTP Developed the XSL to convert and compare the SOAP to simple XML and vice versa Developed SOAP Web services for getting information from third party Developed various EJBs session and entity beans for handling business logic and data manipulations from the database Developed Data access bean and developed EJBs that are used to access data from the database Developed Servlets and Java Server Pages JSP to route the submittals to the EJB components and renderretrieved information using Session Facade Service Locator design pattern Implemented the business logic under the Servlets and simple Java Bean components to be used under the various modules in the System and developed and database connection using JDBC Analyzed the existing access system and redesigned it in Oracle 8i by developing data validation and load processes using PLSQL Stored Procedures Functions and Triggers to enhance and improve functionality requested by business for reducing manual processing time Used Dynamic SQL DBMS_SQL DBMS_DDL in Functions and Procedures Created database Triggers to record Insertion Updating Deletion and all other audit routines Responsible for Code Reviews and PLSQL Code Tuning Involved in the overall systems support and maintenance services such as Defect Fixing Feature Enhancements Testing and Documentation Used CVS for version control management and Maven for Build Deployed an application in Tomcat server Environment HTML CSS Java Script JSP JSF EJB Spring SOAP based Webservices Eclipse Tomcat Oracle 8i PLSQL CVS Maven Waterfall Education Bachelors of Engineering in Computer Science in Computer Science VMRF University Skills frontend 9 years Java 9 years JQuery 9 years Oracle 9 years testing 9 years Additional Information EXPERTISE AND SPECIALIZATION Experience in J2EE Technologies Servlets JSP JDBC EJB JNDI and JMS and participated in the designing and developing of Software using Agile and Waterfall methodologies Experience in User Experience UX design and development User Interactive UI Web Pages and visually appealing User Interfaces using HTML 5 CSS3 Bootstrap SASSJavaScript JQuery AngularJS and ReactJS Experienced in developing and implementing web applications using Java J2EE JSP Servlets JSF HTML 5 JavaScript AJAX JSON JQuery CSS3 XML JDBC and JNDI Expertise in development and deployment of multitiered web based enterprise applications using J2EE technologies like Servlets 3025 JSP 1120 Struts 20 JMS Hibernate 3040 Spring 3040 JDBC JNDI JSF angular JS Java Beans and Web services SOAP Rest Knowledge of J2EE design patterns like MVC Front Controller Factory Abstract Factory Command Pattern Singleton Session Facade Transfer Object Business Delegate and Data Access Object etc Expertise in MVC architecture Web Framework Struts 20 Spring 40 Dependency Injection Data Access Objects MVC Framework and Spring Web Flow and know how to use Spring Framework in business layer for Dependency Injection AOP Spring MVC transaction management and used Hibernate as a persistence layer that use the POJOs to represent the persistence database Good Exposure to Service Oriented Architecture SOA such as Web Services and hands on experience in developing and registering web services using JAXRPC JAXWS SAAJ JAXRS SOAP RESTful WSDL UDDI registry Experience in configuring and deploying the web applications on WebLogic WebSphere and JBoss Application Servers including hands on experience in using Tomcat web Server Expertise in developing XML documents with XSD validations SAX and DOM parsers to parse the data held in XML documents and experience in other XML related technologies like DTD XSL XSLT XPATH JAXB and JAXP Expertise in using Java IDE tools of Rational Application Developer RAD Web Sphere Application Developer WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans to develop dynamic web applications Expertise in Bootstrap Angular JS and Node JSExpress Mongoose BodyParser Sequelize HTTP FileSystem BrowserSync etc and used Log 4j for logging Handson experience working with source control tools such as CVS Clear Case SVN Git and Surround SCM Experienced in the deployment of the ear and jars using Jenkins ANT Maven deploy tools and performing other configuration changes for setting up the application in the integration testing environment Created and presented training materials for Groovy Unit Testing the Gradle build framework and others Work Experience with testing tools and applications such as JUnit Mockito FireBug FirePoster SoapUI and performed Unit testing integrated testing and closely worked with QA team in preparation of Test plans Proficient in RDBMS concepts like writing SQL Queries Functions Stored Procedures and PLSQL Packages and have knowledge on NoSQL Databases MongoDB and CouchDB Expertise in using Oracle SQL Developer GUI Graphical User Interface tool for database development browse database objects implement and edit SQL as well PLSQL statements Complete understanding of AgileSCRUM with the ability to conduct SCRUM meetings coordinate team activities in a strictdeadline driven environment and maintain excellent client communication Good exposure in interacting with clients and solving application environment issues and can communicate effectively with people at different levels including stakeholders internal teams and the senior management TECHNICAL PROFICIENCY Category ExpertiseTools Application Development Java 17 JavaScript Servlets Struts framework JSP XML Hibernate JPA MyBatis NodeJS SOAP11 JAXWS 20 JAXRS Restful Services Jersey Spring NodeJS Java Skills J2EE JDBC EJB JAXM JAXP JAXB Java Server Pages JSP Multithreading JMS Configuration Management Tools CVS Clear Case SVN Git and Suround SCM Servers IBM Websphere JBOSS Weblogic Tomcat Node server Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database DB2 MYSQL Oracle 11g 10g 9i 8i SQL Server 20002005 MongoDB Couchdb IDE Websphere RAD 60 Eclipse 421 Spring tool suite WSAD Eclipse EE 3032 Weblogic Workshop RSA 70 and Netbeans Operating System Windows Linux Unix Tools TOAD Putty SQL Developer Squirrel MY SQL workbench RoboMongo Languages SQL PLSQL UNIX Shell Scripting Java",
    "unique_id": "c26c7bfa-32bf-433a-834d-3495b288a20f"
}