{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Deutsche Bank Jersey City NJ 7 years of experience IT Industry with proficiency in Design Development of Python JavaJ2EE Django flask project Experience in working with number of public and private cloud platforms like Amazon Web Services AWS Microsoft Azure Rackspace Cloud and Openstack Experience in Infrastructure as service IaaS Platform as service PaaS Software as a service SaaS end user computing Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Bootstrap Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript JQuery AngularJS AJAX XML and JSON Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Strong expertise in development of web based applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and Jquery Worked on several python packages like Numpy matPlotLib Beautiful Soup Pickle PySide Scipy wxPython PyTables etc Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with server side technologies including databases restful API and MVC design patterns Good experience in Python Django Shell Scripting SQL Server Unix and Linux and Open stack Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Knowledge about setting up Python REST API Frame work using Django Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Expertise in working with server side technologies including databases Restful API and MVC design patterns Having good exposure over working with deployment of Python and Java projects using cloud architecture Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs DOJO Jquery while using HTMLCSSJS for serverside rendered applications Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Extensive experience with Amazon Web Services AWS Openstack Docker Puppet Chef Ansible AWS CloudFormation AWS CloudFront Experience in handling database issues and connections with SQL and NoSQL databases like MongoDB 26 24 by installing and configuring various packages in python Teradata MySQL  Pyodbc MySQL connector Pymongo and SQLAlchemy Good knowledge in working with Webapplication server Apache Tomcat 60 70 80 Tornado Cherrypy Chaussette Rocket Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Experience in working with Python ORM Libraries including Django ORM Have good knowledge on Project management tools JIRA Redmine and Bugzilla Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Experience in working with multiple Servers like Apache Tomcat IBM Web Sphere Web Logic and Jboss Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in Test Driven Development and Behavior Driven Development methodologies for consulting firms and enterprise projects Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with GUI frameworksPyJamas Jytho guidata  PyQt PyWebkitGtk Experienced with Elasticsearch Logstash and Kibana ELK Having good knowledge in using NoSQL databases various version control systems like Git GitHub SVN CVS Sound knowledge in Spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Experience in writing reusable and in test driven development using Unit Testing and Selenium Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experienced in working on Celery Task queue and service broker using RabbitMQ Work Experience Python Developer Deutsche Bank New York NY April 2017 to Present Description Deutsche Bank is a Germany based multinational bank involved in commercial and investment banking operations across the globe I was part of rates team in investment banking division who are responsible for valuations and trading various Fixed income and FX derivatives Responsibilities Create activate and program in Anaconda environment Worked on predictive analytics usecases using R language and Python Use Python unit and functional testing modules such as unit test unit test2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL  package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack numpy scipy pandasand matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJS Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features using Django HTML and Test Driven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django  PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM Pycharm Shell Scripting AngularJS JIRA Python Developer Anthem Inc Mason OH April 2016 to March 2017 is an American health insurance company founded in the 1940s prior to 2014 known as WellPoint Inc It is the largest forprofit managed health care company in the Blue Cross and Blue Shield Association It was formed when Anthem Insurance Company acquired WellPoint Health Networks Inc with the combined company adopting the name WellPoint Inc Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQLand Linux Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Involved in development of the enterprise social network application using Python Twisted and Cassandra Responsible for setting up Python REST API framework and spring framework using Django Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked in Python on a SQL database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX Java JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Humana Health Insurance Lancaster SC December 2014 to March 2016 Humana Healthcare Insurance is a Fortune 100 company that markets and administers health insurance in The United States Humana is committed to helping employers manage their healthcare costs guiding consumers to make informed health and benefits decisions and giving back to the communities they serve Responsibilities Design develop test deploy and maintain the website by coding and execution of scripts in PythonUnix Implemented MVC architecture in developing web applications using Django framework Closely worked with business system analyst to understand the requirements to ensure that right set of UI modules been built Designed the frontend applications user interactive UI web pages using web technologies like HTML XHTML CSS JavaScript and jQuery Rewrite existing PythonDjango modules to deliver certain format of data Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using PythonTwitter library Used PyPi while installing the project Used Beautiful Soap a Python library for web Scraping Used Django database APIs to access database objects Using Django and manual SQL modifications were able to modify Django models while retaining all data while the site was in production mode Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were the main source of data for both customers and internal customer service team Used Bootstrap extensively for organizing the web page created Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL  package Developed and maintained ETL Data Extraction Transformation and Loading mappings Developed Spark scripts by using Scala shell commands as per the requirement Using Subversion version control tool to coordinate teamdevelopment Actively involved in generating graphical reports using tableau Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in data loading using PLSQL Responsible for debugging and troubleshooting the web application Involved in writing applicationlevel code to interact with APIs Web Services using AJAX JSON and XML Define technical requirements based on business requirements Wrote Python scripts to parse XML documents and load the data in the database Actively worked as a part of a team with managers and other staff to meet the goals of the project in the stipulated time Environment Python Django  CSS Bootstrap MySQL PLSQL MS SQL JavaScript SVN Linux Shell Scripting Apache Web Server Pyramid Spark Python Developer Reck Solutions San Diego CA August 2013 to November 2014 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the client Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Production Engineer BHEL Hyderabad Telangana April 2012 to July 2013 BHEL is an Indian government owned entity that is involved in research and manufacturing of heavy electrical equipment It also offer services for maintaining the clients in electrical network design load management Responsibilities Responsible for creating the efficient design and developing User Interaction screens as per the client requirements using HTML CSS AngularJS JavaScript jQuery AJAX and JSON Used D jango frame work for application development Running Robot Frame work on Python using the ipybotrunner script Assisted in reduction of cost and optimization of suppliers election for the CRM Applications Provides a command line interface and XML based outputs for integration into existing build infrastructure by using Robot Frame work Created and maintained technical documentation for launching Hadoop clusters and for executing Hive queries and Pig Scripts Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that support complex data structures first class functions by using PERL Experience in working on Free form Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Frame work using python Developed presentation layer components using ASPNET Designed and developed the UI of the web site using HTML XHTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Sub version version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all data base mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east time stamp data manipulation and retrieval Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python27 scipy Pandas SVN C Java JQuery MySQL Linux Eclipse ShellScripting AngularJS  RedhatLinux Apache Skills AJAX 5 years AWS 3 years Bootstrap 5 years CSS 6 years databases 3 years Django 7 years Hadoop 3 years Java 4 years JavaScript 7 years Jquery 6 years Linux 5 years MongoDB 3 years MySQL 7 years Python 7 years RESTful web services 3 years SOAP 3 years SQL 5 years UNIX 3 years web services 4 years XML 7 years",
    "entities": [
        "CSS HTML JavaScript",
        "RAD Experienced",
        "Infrastructure",
        "NLTK",
        "PythonPHP Architecture Having",
        "PyCharm PyScripter PyStudio",
        "Responsibilities Design",
        "CVS Git GitHub",
        "Test Driven Development and Behavior Driven Development",
        "Tableau Implementing Robot Frame",
        "RedhatLinux Apache Skills",
        "Created UseCase",
        "AJAX JSON",
        "webapp2",
        "Developed Spark",
        "HTTP",
        "Interfacing",
        "REST JSON",
        "JSON",
        "Blue Shield Association",
        "LAMP Linux",
        "Cloud",
        "Heroku",
        "Panda",
        "PyPi",
        "Germany",
        "Hadoop",
        "XML",
        "SOAP",
        "Python Django Shell Scripting",
        "Amazon Web Services AWS Microsoft",
        "POST",
        "Pandas PyUnit",
        "Maintained",
        "Creating",
        "Shell",
        "WellPoint Inc Responsibilities Developed",
        "State",
        "San Diego",
        "SASAccess SAS SQL",
        "Apache Spark",
        "GitHub Bit Bucket",
        "Python Developer Deutsche Bank New York",
        "Amazon",
        "Jquery Develop",
        "Integrated Development Environments",
        "Developed",
        "Bash",
        "Python REST API Frame",
        "ETL Data Extraction Transformation",
        "User Interaction",
        "NodeJS Design",
        "Django",
        "Project Status",
        "Python Use Python",
        "Bash Python",
        "FX",
        "jQuery Rewrite",
        "Design Development of Python JavaJ2EE Django",
        "Communicated",
        "PythonPHP",
        "Develop",
        "PyQt PyWebkitGtk Experienced",
        "XML Outputting",
        "Linux",
        "API RESTful Web Service",
        "Git GitHub SVN CVS Sound",
        "Python Beautiful Soup",
        "Robot Frame",
        "Oracle DB2",
        "Python Twisted",
        "Spark Streaming",
        "HerokuJenkins",
        "MVC",
        "Flask SQL Alchemy",
        "PythonDjango",
        "Spark",
        "Python Developer Deutsche Bank",
        "BHEL",
        "Export Test",
        "jQuery Participated",
        "CSV",
        "HTML CSS",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "NGINX",
        "HTTP GET",
        "Created",
        "AWS",
        "WAMP Windows Apache",
        "the Blue Cross",
        "Anthem Insurance Company",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PIG",
        "SAS",
        "Responsibilities Responsible",
        "Python ORM Libraries",
        "SQL",
        "WellPoint Inc",
        "Amazon Web Services",
        "lPythonspan",
        "Humana Healthcare Insurance",
        "NMS",
        "Scala Wrote",
        "Amazon Web Services AWS EC2",
        "Responsibilities Create",
        "Webapplication",
        "Model View Control",
        "Hive",
        "Anaconda",
        "Running Robot Frame",
        "Amazon AWS",
        "matPlotLib Using",
        "Virtual",
        "Pandas",
        "Python Integrated Development Environments",
        "Agile Software Development",
        "CRUD",
        "Python Webservices",
        "Humana",
        "HTMLHTML5",
        "API Integration Created",
        "UI",
        "The United States",
        "Delivered",
        "Selenium",
        "WebApplication",
        "Version Control Systems",
        "ASPNET Designed",
        "Pymongo",
        "Utilized PyUnit",
        "SQL Queries Stored",
        "SVN",
        "MS Visio Created",
        "PythonTwitter",
        "CSS",
        "Pandas SVN C",
        "the Global Shipping Team Created",
        "Used Beautiful Soap",
        "Python Developer Humana Health Insurance",
        "REST",
        "MapReduce",
        "HTMLCSSJS",
        "NoSQL",
        "Tableau",
        "Machine Learning",
        "WellPoint Health Networks Inc",
        "PaaS Software",
        "PyTest",
        "PythonTornado",
        "Python ScikitLearn Experience",
        "DevTest"
    ],
    "experience": "Experience in working with number of public and private cloud platforms like Amazon Web Services AWS Microsoft Azure Rackspace Cloud and Openstack Experience in Infrastructure as service IaaS Platform as service PaaS Software as a service SaaS end user computing Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Bootstrap Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript JQuery AngularJS AJAX XML and JSON Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Strong expertise in development of web based applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and Jquery Worked on several python packages like Numpy matPlotLib Beautiful Soup Pickle PySide Scipy wxPython PyTables etc Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with server side technologies including databases restful API and MVC design patterns Good experience in Python Django Shell Scripting SQL Server Unix and Linux and Open stack Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Knowledge about setting up Python REST API Frame work using Django Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Expertise in working with server side technologies including databases Restful API and MVC design patterns Having good exposure over working with deployment of Python and Java projects using cloud architecture Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs DOJO Jquery while using HTMLCSSJS for serverside rendered applications Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Extensive experience with Amazon Web Services AWS Openstack Docker Puppet Chef Ansible AWS CloudFormation AWS CloudFront Experience in handling database issues and connections with SQL and NoSQL databases like MongoDB 26 24 by installing and configuring various packages in python Teradata MySQL   Pyodbc MySQL connector Pymongo and SQLAlchemy Good knowledge in working with Webapplication server Apache Tomcat 60 70 80 Tornado Cherrypy Chaussette Rocket Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Experience in working with Python ORM Libraries including Django ORM Have good knowledge on Project management tools JIRA Redmine and Bugzilla Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Experience in working with multiple Servers like Apache Tomcat IBM Web Sphere Web Logic and Jboss Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in Test Driven Development and Behavior Driven Development methodologies for consulting firms and enterprise projects Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with GUI frameworksPyJamas Jytho guidata   PyQt PyWebkitGtk Experienced with Elasticsearch Logstash and Kibana ELK Having good knowledge in using NoSQL databases various version control systems like Git GitHub SVN CVS Sound knowledge in Spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Experience in writing reusable and in test driven development using Unit Testing and Selenium Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experienced in working on Celery Task queue and service broker using RabbitMQ Work Experience Python Developer Deutsche Bank New York NY April 2017 to Present Description Deutsche Bank is a Germany based multinational bank involved in commercial and investment banking operations across the globe I was part of rates team in investment banking division who are responsible for valuations and trading various Fixed income and FX derivatives Responsibilities Create activate and program in Anaconda environment Worked on predictive analytics usecases using R language and Python Use Python unit and functional testing modules such as unit test unit test2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL   package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack numpy scipy pandasand matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJS Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features using Django HTML and Test Driven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django   PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM Pycharm Shell Scripting AngularJS JIRA Python Developer Anthem Inc Mason OH April 2016 to March 2017 is an American health insurance company founded in the 1940s prior to 2014 known as WellPoint Inc It is the largest forprofit managed health care company in the Blue Cross and Blue Shield Association It was formed when Anthem Insurance Company acquired WellPoint Health Networks Inc with the combined company adopting the name WellPoint Inc Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQLand Linux Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Involved in development of the enterprise social network application using Python Twisted and Cassandra Responsible for setting up Python REST API framework and spring framework using Django Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked in Python on a SQL database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX Java JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Humana Health Insurance Lancaster SC December 2014 to March 2016 Humana Healthcare Insurance is a Fortune 100 company that markets and administers health insurance in The United States Humana is committed to helping employers manage their healthcare costs guiding consumers to make informed health and benefits decisions and giving back to the communities they serve Responsibilities Design develop test deploy and maintain the website by coding and execution of scripts in PythonUnix Implemented MVC architecture in developing web applications using Django framework Closely worked with business system analyst to understand the requirements to ensure that right set of UI modules been built Designed the frontend applications user interactive UI web pages using web technologies like HTML XHTML CSS JavaScript and jQuery Rewrite existing PythonDjango modules to deliver certain format of data Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using PythonTwitter library Used PyPi while installing the project Used Beautiful Soap a Python library for web Scraping Used Django database APIs to access database objects Using Django and manual SQL modifications were able to modify Django models while retaining all data while the site was in production mode Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were the main source of data for both customers and internal customer service team Used Bootstrap extensively for organizing the web page created Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL   package Developed and maintained ETL Data Extraction Transformation and Loading mappings Developed Spark scripts by using Scala shell commands as per the requirement Using Subversion version control tool to coordinate teamdevelopment Actively involved in generating graphical reports using tableau Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in data loading using PLSQL Responsible for debugging and troubleshooting the web application Involved in writing applicationlevel code to interact with APIs Web Services using AJAX JSON and XML Define technical requirements based on business requirements Wrote Python scripts to parse XML documents and load the data in the database Actively worked as a part of a team with managers and other staff to meet the goals of the project in the stipulated time Environment Python Django   CSS Bootstrap MySQL PLSQL MS SQL JavaScript SVN Linux Shell Scripting Apache Web Server Pyramid Spark Python Developer Reck Solutions San Diego CA August 2013 to November 2014 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the client Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Production Engineer BHEL Hyderabad Telangana April 2012 to July 2013 BHEL is an Indian government owned entity that is involved in research and manufacturing of heavy electrical equipment It also offer services for maintaining the clients in electrical network design load management Responsibilities Responsible for creating the efficient design and developing User Interaction screens as per the client requirements using HTML CSS AngularJS JavaScript jQuery AJAX and JSON Used D jango frame work for application development Running Robot Frame work on Python using the ipybotrunner script Assisted in reduction of cost and optimization of suppliers election for the CRM Applications Provides a command line interface and XML based outputs for integration into existing build infrastructure by using Robot Frame work Created and maintained technical documentation for launching Hadoop clusters and for executing Hive queries and Pig Scripts Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that support complex data structures first class functions by using PERL Experience in working on Free form Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Frame work using python Developed presentation layer components using ASPNET Designed and developed the UI of the web site using HTML XHTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Sub version version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all data base mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east time stamp data manipulation and retrieval Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python27 scipy Pandas SVN C Java JQuery MySQL Linux Eclipse ShellScripting AngularJS   RedhatLinux Apache Skills AJAX 5 years AWS 3 years Bootstrap 5 years CSS 6 years databases 3 years Django 7 years Hadoop 3 years Java 4 years JavaScript 7 years Jquery 6 years Linux 5 years MongoDB 3 years MySQL 7 years Python 7 years RESTful web services 3 years SOAP 3 years SQL 5 years UNIX 3 years web services 4 years XML 7 years",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Deutsche",
        "Bank",
        "Jersey",
        "City",
        "NJ",
        "years",
        "experience",
        "IT",
        "Industry",
        "proficiency",
        "Design",
        "Development",
        "Python",
        "JavaJ2EE",
        "Django",
        "flask",
        "project",
        "Experience",
        "number",
        "cloud",
        "platforms",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Microsoft",
        "Azure",
        "Rackspace",
        "Cloud",
        "Openstack",
        "Experience",
        "Infrastructure",
        "service",
        "IaaS",
        "Platform",
        "service",
        "PaaS",
        "Software",
        "service",
        "SaaS",
        "end",
        "user",
        "computing",
        "Well",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "HTMLHTML5",
        "DHTML",
        "CSSCSS3",
        "JavaScript",
        "JQuery",
        "AJAX",
        "XML",
        "JSON",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "expertise",
        "development",
        "web",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Dojo",
        "HTML",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "Jquery",
        "python",
        "packages",
        "Numpy",
        "matPlotLib",
        "Beautiful",
        "Soup",
        "Pickle",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "experience",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "Unix",
        "Linux",
        "stack",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Orient",
        "DB",
        "Expertise",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "exposure",
        "deployment",
        "Python",
        "Java",
        "projects",
        "cloud",
        "architecture",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "Nodejs",
        "Angularjs",
        "DOJO",
        "Jquery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Experience",
        "version",
        "control",
        "systems",
        "CVS",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Worked",
        "Cloud",
        "NMS",
        "application",
        "CPUMemory",
        "parameters",
        "machines",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Openstack",
        "Docker",
        "Puppet",
        "Chef",
        "Ansible",
        "AWS",
        "CloudFormation",
        "AWS",
        "CloudFront",
        "Experience",
        "database",
        "issues",
        "connections",
        "SQL",
        "NoSQL",
        "MongoDB",
        "packages",
        "python",
        "Teradata",
        "MySQL",
        "Pyodbc",
        "MySQL",
        "connector",
        "Pymongo",
        "SQLAlchemy",
        "knowledge",
        "Webapplication",
        "server",
        "Apache",
        "Tomcat",
        "Tornado",
        "Cherrypy",
        "Chaussette",
        "Rocket",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHat",
        "Linux",
        "Fedora",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "knowledge",
        "Project",
        "management",
        "tools",
        "JIRA",
        "Redmine",
        "Bugzilla",
        "Hands",
        "experience",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "CVS",
        "SVN",
        "Experience",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "Sphere",
        "Web",
        "Logic",
        "Jboss",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Experience",
        "version",
        "control",
        "systems",
        "CVS",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Experience",
        "Test",
        "Driven",
        "Development",
        "Behavior",
        "Driven",
        "Development",
        "methodologies",
        "firms",
        "enterprise",
        "projects",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Expertise",
        "GUI",
        "frameworksPyJamas",
        "Jytho",
        "PyQt",
        "PyWebkitGtk",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "knowledge",
        "version",
        "control",
        "systems",
        "Git",
        "GitHub",
        "SVN",
        "CVS",
        "Sound",
        "knowledge",
        "Spring",
        "Hibernate",
        "RDBMS",
        "Web",
        "XML",
        "AntMaven",
        "HTML",
        "Python",
        "Shell",
        "Scripting",
        "Experience",
        "test",
        "development",
        "Unit",
        "Testing",
        "Selenium",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Deutsche",
        "Bank",
        "New",
        "York",
        "NY",
        "April",
        "Present",
        "Description",
        "Deutsche",
        "Bank",
        "Germany",
        "bank",
        "investment",
        "banking",
        "operations",
        "globe",
        "part",
        "rates",
        "team",
        "investment",
        "banking",
        "division",
        "valuations",
        "income",
        "FX",
        "derivatives",
        "Responsibilities",
        "program",
        "Anaconda",
        "environment",
        "analytics",
        "usecases",
        "R",
        "language",
        "Python",
        "Use",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "unit",
        "test2",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "Added",
        "licensing",
        "feature",
        "products",
        "CCLEAR",
        "CSTOR",
        "scratch",
        "modules",
        "code",
        "runs",
        "html",
        "pages",
        "EULA",
        "End",
        "User",
        "License",
        "Agreement",
        "Developed",
        "micro",
        "APIS",
        "module",
        "results",
        "format",
        "Bottle",
        "framework",
        "development",
        "testing",
        "frameworks",
        "selenium",
        "web",
        "driver",
        "Automation",
        "Docker",
        "Container",
        "setup",
        "environment",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "POST",
        "requests",
        "HTML",
        "data",
        "website",
        "JIRA",
        "issue",
        "tracking",
        "bug",
        "tracking",
        "sprint",
        "confluence",
        "design",
        "documents",
        "Installed",
        "Hadoop",
        "Map",
        "HDFS",
        "AWS",
        "MapReduce",
        "jobs",
        "PIG",
        "Hive",
        "data",
        "Manage",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "WebApplication",
        "development",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "Jquery",
        "Develop",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Jquery",
        "Generate",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "format",
        "Excel",
        "macros",
        "python",
        "libraries",
        "NumPy",
        "SQLAlchemy",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "manipulation",
        "retrieval",
        "data",
        "migration",
        "server",
        "Jira",
        "database",
        "Matching",
        "Fields",
        "Python",
        "scripts",
        "information",
        "Analyze",
        "Format",
        "data",
        "Machine",
        "Learning",
        "algorithm",
        "Python",
        "ScikitLearn",
        "Experience",
        "python",
        "Jupyter",
        "Scientific",
        "computing",
        "stack",
        "numpy",
        "pandasand",
        "Perform",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "Numpy",
        "matplotlib",
        "logs",
        "occurrence",
        "event",
        "Python",
        "page",
        "application",
        "Angular",
        "JS",
        "MongoDB",
        "NodeJS",
        "Design",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Manage",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Use",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "Design",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Develop",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "implementation",
        "Apache",
        "Spark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plotlib",
        "library",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Export",
        "Test",
        "case",
        "Scripts",
        "selenium",
        "scripts",
        "Selenium",
        "environment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "website",
        "Python",
        "Beautiful",
        "Soup",
        "XML",
        "data",
        "JSONBSON",
        "Used",
        "NLTK",
        "StanfordNLP",
        "text",
        "data",
        "intelligence",
        "Querying",
        "data",
        "MongoDB",
        "input",
        "machine",
        "learning",
        "models",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "Wrote",
        "UNIX",
        "shell",
        "scripting",
        "automation",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "Language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "consumer",
        "features",
        "Django",
        "HTML",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Increase",
        "speed",
        "search",
        "indexes",
        "Django",
        "ORM",
        "optimizations",
        "Develop",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "Environment",
        "Python",
        "Django",
        "PostgreSQL",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Jupyter",
        "Notebook",
        "VIM",
        "Pycharm",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Developer",
        "Anthem",
        "Inc",
        "Mason",
        "OH",
        "April",
        "March",
        "health",
        "insurance",
        "company",
        "1940s",
        "WellPoint",
        "Inc",
        "forprofit",
        "health",
        "care",
        "company",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "Anthem",
        "Insurance",
        "Company",
        "WellPoint",
        "Health",
        "Networks",
        "Inc",
        "company",
        "name",
        "WellPoint",
        "Inc",
        "Responsibilities",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "Created",
        "UseCase",
        "diagrams",
        "State",
        "diagrams",
        "MS",
        "Visio",
        "application",
        "Python",
        "Django",
        "MySQLand",
        "Linux",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "Postgre",
        "SQL",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "python",
        "manipulate",
        "data",
        "SQL",
        "functions",
        "triggers",
        "cursors",
        "types",
        "sequences",
        "indexes",
        "development",
        "enterprise",
        "network",
        "application",
        "Python",
        "Twisted",
        "Cassandra",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "Python",
        "SQL",
        "database",
        "property",
        "list",
        "application",
        "python",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "presentations",
        "Project",
        "Status",
        "Current",
        "Open",
        "Issues",
        "Report",
        "Users",
        "Stakeholders",
        "groups",
        "meetings",
        "development",
        "testing",
        "team",
        "requirements",
        "updates",
        "development",
        "testing",
        "role",
        "planning",
        "testing",
        "system",
        "enhancements",
        "conversions",
        "project",
        "manager",
        "project",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyUnit",
        "MS",
        "Visio",
        "HTTP",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "Java",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Humana",
        "Health",
        "Insurance",
        "Lancaster",
        "SC",
        "December",
        "March",
        "Humana",
        "Healthcare",
        "Insurance",
        "Fortune",
        "company",
        "health",
        "insurance",
        "United",
        "States",
        "Humana",
        "employers",
        "healthcare",
        "costs",
        "consumers",
        "health",
        "benefits",
        "decisions",
        "communities",
        "Responsibilities",
        "Design",
        "test",
        "deploy",
        "website",
        "coding",
        "execution",
        "scripts",
        "PythonUnix",
        "MVC",
        "architecture",
        "web",
        "applications",
        "Django",
        "framework",
        "business",
        "system",
        "analyst",
        "requirements",
        "set",
        "UI",
        "modules",
        "frontend",
        "applications",
        "user",
        "UI",
        "web",
        "pages",
        "web",
        "technologies",
        "HTML",
        "XHTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "graphs",
        "business",
        "decision",
        "Python",
        "Matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "PythonTwitter",
        "library",
        "PyPi",
        "project",
        "Beautiful",
        "Soap",
        "Python",
        "library",
        "web",
        "Django",
        "database",
        "APIs",
        "database",
        "Django",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Bootstrap",
        "web",
        "page",
        "program",
        "users",
        "manuals",
        "documentation",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "ETL",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "mappings",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "reports",
        "tableau",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "data",
        "loading",
        "PLSQL",
        "web",
        "application",
        "applicationlevel",
        "code",
        "APIs",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "XML",
        "Define",
        "requirements",
        "business",
        "requirements",
        "Wrote",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "Bootstrap",
        "MySQL",
        "PLSQL",
        "MS",
        "SQL",
        "JavaScript",
        "SVN",
        "Linux",
        "Shell",
        "Scripting",
        "Apache",
        "Web",
        "Server",
        "Pyramid",
        "Spark",
        "Python",
        "Developer",
        "Reck",
        "Solutions",
        "San",
        "Diego",
        "CA",
        "August",
        "November",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "code",
        "Python",
        "manipulate",
        "data",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "packages",
        "soup",
        "data",
        "writing",
        "data",
        "CSV",
        "file",
        "formats",
        "Python",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQL",
        "Alchemy",
        "reports",
        "application",
        "Tableau",
        "companys",
        "framework",
        "Python",
        "framework",
        "basement",
        "services",
        "development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "MongoDB",
        "Design",
        "environment",
        "MongoDB",
        "shards",
        "replica",
        "DevTest",
        "productions",
        "components",
        "Python",
        "Django",
        "framework",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "CherryPy",
        "Bootstrap",
        "jQuery",
        "Pythonbased",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "Experience",
        "applications",
        "Spark",
        "Scala",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "SDLC",
        "process",
        "tasks",
        "Ansible",
        "Extracting",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "sets",
        "PLSQL",
        "scripts",
        "data",
        "conversions",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "vendors",
        "queries",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "jQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Quality",
        "Centre",
        "Ansible",
        "PLSQL",
        "Production",
        "Engineer",
        "BHEL",
        "Hyderabad",
        "Telangana",
        "April",
        "July",
        "BHEL",
        "government",
        "entity",
        "research",
        "manufacturing",
        "equipment",
        "services",
        "clients",
        "network",
        "design",
        "load",
        "management",
        "Responsibilities",
        "design",
        "User",
        "Interaction",
        "screens",
        "client",
        "requirements",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "JSON",
        "D",
        "jango",
        "frame",
        "work",
        "application",
        "development",
        "Running",
        "Robot",
        "Frame",
        "work",
        "Python",
        "ipybotrunner",
        "script",
        "reduction",
        "cost",
        "optimization",
        "suppliers",
        "election",
        "CRM",
        "Applications",
        "command",
        "line",
        "interface",
        "XML",
        "outputs",
        "integration",
        "build",
        "infrastructure",
        "Robot",
        "Frame",
        "work",
        "documentation",
        "Hadoop",
        "clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "Graphical",
        "User",
        "Interface",
        "Testing",
        "API",
        "Testing",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "features",
        "data",
        "structures",
        "class",
        "functions",
        "PERL",
        "Experience",
        "form",
        "Calculation",
        "Lasso",
        "Radial",
        "Selection",
        "Tableau",
        "Implementing",
        "Robot",
        "Frame",
        "work",
        "presentation",
        "layer",
        "components",
        "ASPNET",
        "UI",
        "web",
        "site",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "property",
        "list",
        "application",
        "python",
        "Sub",
        "version",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Build",
        "data",
        "base",
        "mapping",
        "classes",
        "Django",
        "models",
        "Cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "time",
        "stamp",
        "data",
        "manipulation",
        "retrieval",
        "data",
        "management",
        "system",
        "MySQL",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Environment",
        "Python27",
        "Pandas",
        "SVN",
        "C",
        "Java",
        "JQuery",
        "MySQL",
        "Linux",
        "Eclipse",
        "ShellScripting",
        "RedhatLinux",
        "Apache",
        "Skills",
        "AJAX",
        "years",
        "AWS",
        "years",
        "Bootstrap",
        "years",
        "CSS",
        "years",
        "years",
        "Django",
        "years",
        "Hadoop",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "Jquery",
        "years",
        "Linux",
        "years",
        "MongoDB",
        "years",
        "MySQL",
        "years",
        "Python",
        "years",
        "web",
        "services",
        "years",
        "SOAP",
        "years",
        "SQL",
        "years",
        "UNIX",
        "years",
        "web",
        "services",
        "years",
        "XML",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:26:18.883627",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Deutsche Bank Jersey City NJ 7 years of experience IT Industry with proficiency in Design Development of Python JavaJ2EE Django flask project Experience in working with number of public and private cloud platforms like Amazon Web Services AWS Microsoft Azure Rackspace Cloud and Openstack Experience in Infrastructure as service IaaS Platform as service PaaS Software as a service SaaS end user computing Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Bootstrap Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in HTMLHTML5 DHTML CSSCSS3 JavaScript JQuery AngularJS AJAX XML and JSON Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Strong expertise in development of web based applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and Jquery Worked on several python packages like Numpy matPlotLib Beautiful Soup Pickle PySide Scipy wxPython PyTables etc Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with server side technologies including databases restful API and MVC design patterns Good experience in Python Django Shell Scripting SQL Server Unix and Linux and Open stack Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Knowledge about setting up Python REST API Frame work using Django Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Expertise in working with server side technologies including databases Restful API and MVC design patterns Having good exposure over working with deployment of Python and Java projects using cloud architecture Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs DOJO Jquery while using HTMLCSSJS for serverside rendered applications Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Extensive experience with Amazon Web Services AWS Openstack Docker Puppet Chef Ansible AWS CloudFormation AWS CloudFront Experience in handling database issues and connections with SQL and NoSQL databases like MongoDB 26 24 by installing and configuring various packages in python Teradata MySQL dB Pyodbc MySQL connector Pymongo and SQLAlchemy Good knowledge in working with Webapplication server Apache Tomcat 60 70 80 Tornado Cherrypy Chaussette Rocket Experience with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Experience in working with Python ORM Libraries including Django ORM Have good knowledge on Project management tools JIRA Redmine and Bugzilla Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Experience in working with multiple Servers like Apache Tomcat IBM Web Sphere Web Logic and Jboss Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in Test Driven Development and Behavior Driven Development methodologies for consulting firms and enterprise projects Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with GUI frameworksPyJamas Jytho guidata PyGUI PyQt PyWebkitGtk Experienced with Elasticsearch Logstash and Kibana ELK Having good knowledge in using NoSQL databases various version control systems like Git GitHub SVN CVS Sound knowledge in Spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Experience in writing reusable and in test driven development using Unit Testing and Selenium Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experienced in working on Celery Task queue and service broker using RabbitMQ Work Experience Python Developer Deutsche Bank New York NY April 2017 to Present Description Deutsche Bank is a Germany based multinational bank involved in commercial and investment banking operations across the globe I was part of rates team in investment banking division who are responsible for valuations and trading various Fixed income and FX derivatives Responsibilities Create activate and program in Anaconda environment Worked on predictive analytics usecases using R language and Python Use Python unit and functional testing modules such as unit test unit test2 mock and custom frameworks inline with Agile Software Development methodologies Added licensing feature for 3 products CVUS CCLEAR CSTOR from scratch by going through most modules of code runs at backend and created html pages to view the EULA End User License Agreement Developed micro services APIS for an individual module and exposed the results in JSON format using Bottle framework Involved in development of testing frameworks used selenium web driver for Automation Worked with Docker Container have setup an environment and used accordingly Wrote Python code embedded with JSON and XML to produce HTTP GET and POST requests for parsing HTML data from website Used JIRA for issue tracking and bug tracking for each individual sprint and used confluence to create design documents Installed Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in PIG and Hive for data cleaning and preprocessing Manage datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python 35 HTML5 CSS3 AJAX JSON and Jquery Develop and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and Jquery Generate Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Clean data and processed third party spending data into maneuverable deliverables within specific format with Excel macros and python libraries such as NumPy SQLAlchemy and matplotlib Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Helped with the migration from the old server to Jira database Matching Fields with Python scripts for transferring and verifying the information Analyze Format data using Machine Learning algorithm by Python ScikitLearn Experience in python Jupyter Scientific computing stack numpy scipy pandasand matplotlib Perform troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Write Python scripts to parse JSON documents and load the data in database Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Analyzing various logs that are been generating and predictingforecasting next occurrence of event with various Python libraries Developed single page application by using Angular JS backed by MongoDB and NodeJS Design and maintain databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Manage code versioning with GitHub Bit Bucket and deployment to staging and production servers and implement MVC architecture in developing the web application with the help of Django framework Use Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Design and manage API system deployment using fast http server and Amazon AWS architecture Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Built various graphs for business decision making using Python mat plotlib library Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Export Test case Scripts and modified the selenium scripts and executed in Selenium environment Developed entire frontend and backend modules using Python on Django Web Framework Scraping website using Python Beautiful Soup and then parsed it with XML Outputting the parsed data as JSONBSON and stored into MongoDB Used NLTK and StanfordNLP to process text data and created offline intelligence Querying data from MongoDB and use them as input for the machine learning models Using AWS for application deployment and configuration Wrote UNIX shell scripting for automation Developed views and templates with Django view controller and template Language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features using Django HTML and Test Driven Development TDD Increase the speed of preexisting search indexes through Django ORM optimizations Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Environment Python Django HTML5CSS PostgreSQL MS SQL Server 2013 MySQL JavaScript Jupyter Notebook VIM Pycharm Shell Scripting AngularJS JIRA Python Developer Anthem Inc Mason OH April 2016 to March 2017 is an American health insurance company founded in the 1940s prior to 2014 known as WellPoint Inc It is the largest forprofit managed health care company in the Blue Cross and Blue Shield Association It was formed when Anthem Insurance Company acquired WellPoint Health Networks Inc with the combined company adopting the name WellPoint Inc Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQLand Linux Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Involved in development of the enterprise social network application using Python Twisted and Cassandra Responsible for setting up Python REST API framework and spring framework using Django Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked in Python on a SQL database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX Java JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Humana Health Insurance Lancaster SC December 2014 to March 2016 Humana Healthcare Insurance is a Fortune 100 company that markets and administers health insurance in The United States Humana is committed to helping employers manage their healthcare costs guiding consumers to make informed health and benefits decisions and giving back to the communities they serve Responsibilities Design develop test deploy and maintain the website by coding and execution of scripts in PythonUnix Implemented MVC architecture in developing web applications using Django framework Closely worked with business system analyst to understand the requirements to ensure that right set of UI modules been built Designed the frontend applications user interactive UI web pages using web technologies like HTML XHTML CSS JavaScript and jQuery Rewrite existing PythonDjango modules to deliver certain format of data Built various graphs for business decision making using Python Matplotlib library Fetched twitter feeds for certain important keyword using PythonTwitter library Used PyPi while installing the project Used Beautiful Soap a Python library for web Scraping Used Django database APIs to access database objects Using Django and manual SQL modifications were able to modify Django models while retaining all data while the site was in production mode Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were the main source of data for both customers and internal customer service team Used Bootstrap extensively for organizing the web page created Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL dB package Developed and maintained ETL Data Extraction Transformation and Loading mappings Developed Spark scripts by using Scala shell commands as per the requirement Using Subversion version control tool to coordinate teamdevelopment Actively involved in generating graphical reports using tableau Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved in data loading using PLSQL Responsible for debugging and troubleshooting the web application Involved in writing applicationlevel code to interact with APIs Web Services using AJAX JSON and XML Define technical requirements based on business requirements Wrote Python scripts to parse XML documents and load the data in the database Actively worked as a part of a team with managers and other staff to meet the goals of the project in the stipulated time Environment Python Django HTML5CSS CSS Bootstrap MySQL PLSQL MS SQL JavaScript SVN Linux Shell Scripting Apache Web Server Pyramid Spark Python Developer Reck Solutions San Diego CA August 2013 to November 2014 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Implemented code in Python to retrieve and manipulate data Used Python modules such as requests urllib and urllib2 for web crawling Used other packages such as Beautiful soup for data parsing Worked on writing and as well as read data from CSV and excel file formats using Python Webservices backend development using Python CherryPy Django SQL Alchemy Worked on resulting reports of the application and Tableau reports Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API MongoDB Design and setting up of the environment of MongoDB with shards and replica sets DevTest and productions Designed and developed components using Python with Django framework Private VPN using Ubuntu Python Django CherryPy Bootstrap jQuery Created a Pythonbased GUI application for Freight Tracking and processing Experience in designing and developing applications in Spark using Scala Wrote scripts in Python for extracting data from HTML file Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Developed rich user interface using CSS HTML JavaScript and jQuery Participated in the complete SDLC process Worked on automating the repetitive tasks using Ansible Extracting acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Created and modified PLSQL scripts for data conversions Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from the database Communicated effectively with the external vendors to resolve queries Held meetings with client and worked all alone for the entire project with limited help from the client Environment Python Django MySQL Windows Linux HTML CSS jQuery JavaScript Apache Linux Quality Centre Ansible PLSQL Production Engineer BHEL Hyderabad Telangana April 2012 to July 2013 BHEL is an Indian government owned entity that is involved in research and manufacturing of heavy electrical equipment It also offer services for maintaining the clients in electrical network design load management Responsibilities Responsible for creating the efficient design and developing User Interaction screens as per the client requirements using HTML CSS AngularJS JavaScript jQuery AJAX and JSON Used D jango frame work for application development Running Robot Frame work on Python using the ipybotrunner script Assisted in reduction of cost and optimization of suppliers election for the CRM Applications Provides a command line interface and XML based outputs for integration into existing build infrastructure by using Robot Frame work Created and maintained technical documentation for launching Hadoop clusters and for executing Hive queries and Pig Scripts Used Graphical User Interface Testing and API driven Testing Used several python libraries like wxPython numPY and matPlotLib Using features that support complex data structures first class functions by using PERL Experience in working on Free form Calculation and Lasso and Radial Selection by using Tableau Implementing Robot Frame work using python Developed presentation layer components using ASPNET Designed and developed the UI of the web site using HTML XHTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Generated property list for every application dynamically using python Using Sub version version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Build all data base mapping classes using Django models and Cassandra Used Pandas API to put the data as time series and tabular format for east time stamp data manipulation and retrieval Designed and developed data management system using MySQL Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Environment Python27 scipy Pandas SVN C Java JQuery MySQL Linux Eclipse ShellScripting AngularJS HTML5CSS RedhatLinux Apache Skills AJAX 5 years AWS 3 years Bootstrap 5 years CSS 6 years databases 3 years Django 7 years Hadoop 3 years Java 4 years JavaScript 7 years Jquery 6 years Linux 5 years MongoDB 3 years MySQL 7 years Python 7 years RESTful web services 3 years SOAP 3 years SQL 5 years UNIX 3 years web services 4 years XML 7 years",
    "unique_id": "f62cab91-590b-47ef-a22b-9616b42b7efc"
}