{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Work Experience Senior Python Developer Charlotte NC August 2017 to Present Responsibilities Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Executed various MySQL database queries from python using PythonMySQL connector and MySQL dB package Created and tested many features for dashboard using python and JavaScript Deployed many Python bugfixes of the two main applications that are main source of data for both customers and internal customer service team Created project designs using MVC architecture components Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Designed and developed PythonDjango framework for REST Services Developed web applications RESTful web services and APIs using Python Django good knowledge of web services with protocols SOAP REST Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Used Python based GUI components for the frontend functionality such as selection criteria Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Created Python scripts to automate AWS services which include web servers ELB Cloud front distribution databases security groups and application configuration Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Python Unit test library was used for the purpose of testing many programs on Python and other codes Environment Python Django  UNIX MySQL MS SQL Server 2013 TSQL Eclipse Linux Shell Scripting RESTful MVC UnixLinux VMware Ansible MAVEN C GIT Jenkins Chef Docker ANT Apache Senior Python Developer Panasonic Irvine CA July 2016 to August 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed Python batch processors to consume and produce various feeds Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in building database Model APIs and Views utilizing Python technologies to build webbased applications Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Installed Veritas Cluster Server on Solaris with Oracle agent Used Python scripts to update content in the database and manipulate files Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on Python Open stack APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using Python on Django including Web Framework using Git Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Performed Python scripting using the module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Tools used HTML CSS JavaScript MySQL Agile methodology SQL programming Python programming R Programming Rest Angular GitHub  PostgreSQL Amazon Web Service AWS EC2 EBS Microsoft Visual Code Linux Shell Scripting JIRA Python Programmer Zenith American Solutions Dallas TX April 2015 to July 2016 Responsibilities Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked on Machine Learning models and Computer Vision applications involving extensive use of Python programming Implemented Model View Control architecture in developing web applications using Django frame work Worked on Python OpenStack APIs and used NumPy for Numerical analysis Involved in the design and maintenance of the databases using Python and Python based API using SQL and PostgreSQL Builds SQL NOSQL queries implementing functions packages views triggers and tables Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Collaborated with other developers on best practices code reviews internal tools and process improvements Worked on projects involving writing and as well as reading data from CSV and excel file formats using Python Translated and refactored various old C codes into Python scripts based on various metrics such as efficiency throughput and functionality of each project Created various RESTful web services with Django MVT MySQL and MongoDB Worked with databases such as MongoDB touching concepts not limited to locking transactions indexes sharing replication and schema design Involved in the development of various Python APIs which work both in Linux as well as Windows and maintaining them using the Revision Control GIT Repository System Several queries were written using SQL for the manipulation of the data from the database and the database was created using MYSQL Worked with Python to manipulate data for data loading and extraction utilizing various Python libraries like SciPy NumPy and pandas for the data analysis Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Environment Python Django Web Framework HTML CSS Oracle NoSQL JavaScript jQuery Sublime Text Jira GIT PyBuilder unit test Firebug Toad Web Services Python Developer Juniper Networks Los Angeles CA May 2013 to March 2015 Responsibilities Developed Python with Django for the backend development and frontend application using Angular and PostgreSQL for the database Used Django Python webframework to develop application Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Carried out various mathematical operations for calculation purpose using Python libraries NumPy and Pandas Built some frameworks which allow writing scripts in python which will send and receive data over serial port to communicate with device firmware Involved in building database Model and Views utilizing Python to build an interactive webbased solution Experience in using Python to check for errors in Python code tries to enforce coding standards and get details about code complexity Developed Network modules Socket programming and Web server hosting capabilities of Python for some applications ex IoT devices Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Wrote Python scripts to parse JSON documents and load the data in database and used python scripts to update content in the database and manipulate files Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Developed Python classes and used decorated methods to create the dependency graphs for the business logic and core applications that are prebuilt using C Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Environment Python 27 NumPy Dockers Pandas JSON Oracle DB MySQL DB2 PLSQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14",
    "entities": [
        "TestDriven",
        "REST Services Developed",
        "Installed Veritas Cluster Server",
        "Python",
        "MVC UnixLinux VMware Ansible",
        "Python on Django",
        "CSV",
        "HTML CSS",
        "Developed",
        "Mongo",
        "GUI",
        "API",
        "SQS",
        "Python Django Worked on Dockers RabbitMQ",
        "Validation Controls",
        "Dallas",
        "HTML AJAX CSS",
        "Created Python",
        "Python Develop",
        "Created",
        "Python Unit",
        "Djangos",
        "Python Spring Security Environment Python Django Web Framework HTML",
        "AWS",
        "Computer Vision",
        "Model and Views",
        "Python Bootstrap CSS JavaScript",
        "Restful",
        "Python Bootstrap CSS",
        "webapp2",
        "Developed Views",
        "the Revision Control GIT Repository System",
        "Worked on",
        "Django MVT MySQL and MongoDB",
        "C Developed GUI",
        "Present Responsibilities Involved",
        "Git Developed Views",
        "Firebug Toad Web Services Python Developer Juniper Networks",
        "Amazon",
        "Amazon Web Services AWS",
        "Panda",
        "Linux",
        "Python Spring IOC Inversion",
        "Python REST API Framework Implemented",
        "Angular and PostgreSQL",
        "SQL",
        "Mongo restore Develop",
        "Solaris",
        "Collaborated",
        "REST",
        "XML",
        "Django PostgreSQL Executed",
        "PythonDjango",
        "lPythonspan",
        "Web Framework",
        "Python Django",
        "Machine Learning",
        "Celery",
        "MS",
        "Developed Restful Microservices",
        "EBS",
        "Views",
        "Python OOP Worked",
        "jQuery Used Python",
        "TX",
        "MVC",
        "Python Translated",
        "Bash Developed",
        "Wrote"
    ],
    "experience": "Experience Senior Python Developer Charlotte NC August 2017 to Present Responsibilities Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Executed various MySQL database queries from python using PythonMySQL connector and MySQL dB package Created and tested many features for dashboard using python and JavaScript Deployed many Python bugfixes of the two main applications that are main source of data for both customers and internal customer service team Created project designs using MVC architecture components Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Designed and developed PythonDjango framework for REST Services Developed web applications RESTful web services and APIs using Python Django good knowledge of web services with protocols SOAP REST Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Used Python based GUI components for the frontend functionality such as selection criteria Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Created Python scripts to automate AWS services which include web servers ELB Cloud front distribution databases security groups and application configuration Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Python Unit test library was used for the purpose of testing many programs on Python and other codes Environment Python Django   UNIX MySQL MS SQL Server 2013 TSQL Eclipse Linux Shell Scripting RESTful MVC UnixLinux VMware Ansible MAVEN C GIT Jenkins Chef Docker ANT Apache Senior Python Developer Panasonic Irvine CA July 2016 to August 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed Python batch processors to consume and produce various feeds Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in building database Model APIs and Views utilizing Python technologies to build webbased applications Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Installed Veritas Cluster Server on Solaris with Oracle agent Used Python scripts to update content in the database and manipulate files Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on Python Open stack APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using Python on Django including Web Framework using Git Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Performed Python scripting using the module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Tools used HTML CSS JavaScript MySQL Agile methodology SQL programming Python programming R Programming Rest Angular GitHub   PostgreSQL Amazon Web Service AWS EC2 EBS Microsoft Visual Code Linux Shell Scripting JIRA Python Programmer Zenith American Solutions Dallas TX April 2015 to July 2016 Responsibilities Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked on Machine Learning models and Computer Vision applications involving extensive use of Python programming Implemented Model View Control architecture in developing web applications using Django frame work Worked on Python OpenStack APIs and used NumPy for Numerical analysis Involved in the design and maintenance of the databases using Python and Python based API using SQL and PostgreSQL Builds SQL NOSQL queries implementing functions packages views triggers and tables Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Collaborated with other developers on best practices code reviews internal tools and process improvements Worked on projects involving writing and as well as reading data from CSV and excel file formats using Python Translated and refactored various old C codes into Python scripts based on various metrics such as efficiency throughput and functionality of each project Created various RESTful web services with Django MVT MySQL and MongoDB Worked with databases such as MongoDB touching concepts not limited to locking transactions indexes sharing replication and schema design Involved in the development of various Python APIs which work both in Linux as well as Windows and maintaining them using the Revision Control GIT Repository System Several queries were written using SQL for the manipulation of the data from the database and the database was created using MYSQL Worked with Python to manipulate data for data loading and extraction utilizing various Python libraries like SciPy NumPy and pandas for the data analysis Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Environment Python Django Web Framework HTML CSS Oracle NoSQL JavaScript jQuery Sublime Text Jira GIT PyBuilder unit test Firebug Toad Web Services Python Developer Juniper Networks Los Angeles CA May 2013 to March 2015 Responsibilities Developed Python with Django for the backend development and frontend application using Angular and PostgreSQL for the database Used Django Python webframework to develop application Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Carried out various mathematical operations for calculation purpose using Python libraries NumPy and Pandas Built some frameworks which allow writing scripts in python which will send and receive data over serial port to communicate with device firmware Involved in building database Model and Views utilizing Python to build an interactive webbased solution Experience in using Python to check for errors in Python code tries to enforce coding standards and get details about code complexity Developed Network modules Socket programming and Web server hosting capabilities of Python for some applications ex IoT devices Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Wrote Python scripts to parse JSON documents and load the data in database and used python scripts to update content in the database and manipulate files Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Developed Python classes and used decorated methods to create the dependency graphs for the business logic and core applications that are prebuilt using C Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Environment Python 27 NumPy Dockers Pandas JSON Oracle DB MySQL DB2 PLSQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Charlotte",
        "NC",
        "August",
        "Present",
        "Responsibilities",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "MySQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "features",
        "dashboard",
        "python",
        "JavaScript",
        "Python",
        "bugfixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "project",
        "designs",
        "MVC",
        "architecture",
        "components",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Designed",
        "PythonDjango",
        "framework",
        "REST",
        "Services",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Django",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Views",
        "Templates",
        "Python",
        "Website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "Python",
        "scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "distribution",
        "security",
        "groups",
        "application",
        "configuration",
        "Restful",
        "Microservices",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Python",
        "Unit",
        "test",
        "library",
        "purpose",
        "programs",
        "Python",
        "codes",
        "Environment",
        "Python",
        "Django",
        "UNIX",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "MVC",
        "UnixLinux",
        "VMware",
        "Ansible",
        "MAVEN",
        "C",
        "GIT",
        "Jenkins",
        "Chef",
        "Docker",
        "ANT",
        "Apache",
        "Senior",
        "Python",
        "Developer",
        "Panasonic",
        "Irvine",
        "CA",
        "July",
        "August",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Developed",
        "Python",
        "batch",
        "processors",
        "feeds",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "technologies",
        "applications",
        "Wrote",
        "code",
        "modelviewcontroller",
        "MVC",
        "pattern",
        "Python",
        "Django",
        "framework",
        "modules",
        "application",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Installed",
        "Veritas",
        "Cluster",
        "Server",
        "Solaris",
        "Oracle",
        "agent",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "Worked",
        "Python",
        "stack",
        "APIs",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Views",
        "Templates",
        "Python",
        "Website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "Performed",
        "Python",
        "scripting",
        "module",
        "xlsx",
        "files",
        "files",
        "Access",
        "data",
        "master",
        "inventory",
        "table",
        "Tools",
        "HTML",
        "CSS",
        "JavaScript",
        "MySQL",
        "methodology",
        "SQL",
        "programming",
        "Python",
        "programming",
        "R",
        "Programming",
        "Rest",
        "Angular",
        "GitHub",
        "PostgreSQL",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "EC2",
        "EBS",
        "Microsoft",
        "Visual",
        "Code",
        "Linux",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Programmer",
        "Zenith",
        "American",
        "Solutions",
        "Dallas",
        "TX",
        "April",
        "July",
        "Responsibilities",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Machine",
        "Learning",
        "models",
        "Computer",
        "Vision",
        "applications",
        "use",
        "Python",
        "programming",
        "Model",
        "View",
        "Control",
        "architecture",
        "web",
        "applications",
        "Django",
        "frame",
        "work",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "design",
        "maintenance",
        "databases",
        "Python",
        "Python",
        "API",
        "SQL",
        "PostgreSQL",
        "Builds",
        "SQL",
        "NOSQL",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "Amazon",
        "SQS",
        "work",
        "Amazon",
        "EC2",
        "nodes",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "developers",
        "practices",
        "code",
        "tools",
        "process",
        "improvements",
        "projects",
        "writing",
        "data",
        "CSV",
        "file",
        "formats",
        "Python",
        "Translated",
        "C",
        "codes",
        "Python",
        "scripts",
        "metrics",
        "efficiency",
        "throughput",
        "functionality",
        "project",
        "web",
        "services",
        "Django",
        "MVT",
        "MySQL",
        "MongoDB",
        "databases",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "development",
        "Python",
        "APIs",
        "Linux",
        "Windows",
        "Revision",
        "Control",
        "GIT",
        "Repository",
        "System",
        "queries",
        "SQL",
        "manipulation",
        "data",
        "database",
        "database",
        "MYSQL",
        "Worked",
        "Python",
        "data",
        "data",
        "loading",
        "extraction",
        "Python",
        "libraries",
        "SciPy",
        "NumPy",
        "pandas",
        "data",
        "analysis",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "Oracle",
        "NoSQL",
        "JavaScript",
        "jQuery",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "PyBuilder",
        "unit",
        "test",
        "Firebug",
        "Toad",
        "Web",
        "Services",
        "Python",
        "Developer",
        "Juniper",
        "Networks",
        "Los",
        "Angeles",
        "CA",
        "May",
        "March",
        "Responsibilities",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "Angular",
        "PostgreSQL",
        "database",
        "Django",
        "Python",
        "webframework",
        "application",
        "Validation",
        "Controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "Object",
        "Oriented",
        "JavaScript",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "NumPy",
        "Pandas",
        "frameworks",
        "writing",
        "scripts",
        "python",
        "data",
        "port",
        "device",
        "firmware",
        "database",
        "Model",
        "Views",
        "Python",
        "solution",
        "Experience",
        "Python",
        "errors",
        "Python",
        "code",
        "standards",
        "details",
        "code",
        "complexity",
        "Developed",
        "Network",
        "modules",
        "Socket",
        "programming",
        "Web",
        "server",
        "capabilities",
        "Python",
        "applications",
        "ex",
        "devices",
        "logs",
        "Python",
        "libraries",
        "occurrence",
        "event",
        "Python",
        "libraries",
        "Wrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Build",
        "application",
        "Python",
        "Django",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "Developed",
        "Python",
        "classes",
        "methods",
        "dependency",
        "graphs",
        "business",
        "logic",
        "core",
        "applications",
        "C",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "Environment",
        "Python",
        "NumPy",
        "Dockers",
        "JSON",
        "Oracle",
        "DB",
        "MySQL",
        "DB2",
        "PLSQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:55:32.185074",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Work Experience Senior Python Developer Charlotte NC August 2017 to Present Responsibilities Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Executed various MySQL database queries from python using PythonMySQL connector and MySQL dB package Created and tested many features for dashboard using python and JavaScript Deployed many Python bugfixes of the two main applications that are main source of data for both customers and internal customer service team Created project designs using MVC architecture components Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Designed and developed PythonDjango framework for REST Services Developed web applications RESTful web services and APIs using Python Django good knowledge of web services with protocols SOAP REST Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Used Python based GUI components for the frontend functionality such as selection criteria Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Created Python scripts to automate AWS services which include web servers ELB Cloud front distribution databases security groups and application configuration Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Python Unit test library was used for the purpose of testing many programs on Python and other codes Environment Python Django HTML5CSS UNIX MySQL MS SQL Server 2013 TSQL Eclipse Linux Shell Scripting RESTful MVC UnixLinux VMware Ansible MAVEN C GIT Jenkins Chef Docker ANT Apache Senior Python Developer Panasonic Irvine CA July 2016 to August 2017 Responsibilities Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed Python batch processors to consume and produce various feeds Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in building database Model APIs and Views utilizing Python technologies to build webbased applications Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Installed Veritas Cluster Server on Solaris with Oracle agent Used Python scripts to update content in the database and manipulate files Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Worked on Python Open stack APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using Python on Django including Web Framework using Git Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Performed Python scripting using the module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Tools used HTML CSS JavaScript MySQL Agile methodology SQL programming Python programming R Programming Rest Angular GitHub HTML5CSS PostgreSQL Amazon Web Service AWS EC2 EBS Microsoft Visual Code Linux Shell Scripting JIRA Python Programmer Zenith American Solutions Dallas TX April 2015 to July 2016 Responsibilities Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Worked on Machine Learning models and Computer Vision applications involving extensive use of Python programming Implemented Model View Control architecture in developing web applications using Django frame work Worked on Python OpenStack APIs and used NumPy for Numerical analysis Involved in the design and maintenance of the databases using Python and Python based API using SQL and PostgreSQL Builds SQL NOSQL queries implementing functions packages views triggers and tables Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Collaborated with other developers on best practices code reviews internal tools and process improvements Worked on projects involving writing and as well as reading data from CSV and excel file formats using Python Translated and refactored various old C codes into Python scripts based on various metrics such as efficiency throughput and functionality of each project Created various RESTful web services with Django MVT MySQL and MongoDB Worked with databases such as MongoDB touching concepts not limited to locking transactions indexes sharing replication and schema design Involved in the development of various Python APIs which work both in Linux as well as Windows and maintaining them using the Revision Control GIT Repository System Several queries were written using SQL for the manipulation of the data from the database and the database was created using MYSQL Worked with Python to manipulate data for data loading and extraction utilizing various Python libraries like SciPy NumPy and pandas for the data analysis Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Environment Python Django Web Framework HTML CSS Oracle NoSQL JavaScript jQuery Sublime Text Jira GIT PyBuilder unit test Firebug Toad Web Services Python Developer Juniper Networks Los Angeles CA May 2013 to March 2015 Responsibilities Developed Python with Django for the backend development and frontend application using Angular and PostgreSQL for the database Used Django Python webframework to develop application Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Carried out various mathematical operations for calculation purpose using Python libraries NumPy and Pandas Built some frameworks which allow writing scripts in python which will send and receive data over serial port to communicate with device firmware Involved in building database Model and Views utilizing Python to build an interactive webbased solution Experience in using Python to check for errors in Python code tries to enforce coding standards and get details about code complexity Developed Network modules Socket programming and Web server hosting capabilities of Python for some applications ex IoT devices Analyzed various logs that are been generated and used various Python libraries to predictforecast next occurrence of event with various Python libraries Wrote Python scripts to parse JSON documents and load the data in database and used python scripts to update content in the database and manipulate files Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Developed Python classes and used decorated methods to create the dependency graphs for the business logic and core applications that are prebuilt using C Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Environment Python 27 NumPy Dockers Pandas JSON Oracle DB MySQL DB2 PLSQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django 14",
    "unique_id": "23f9e3fd-b0b0-43dd-8224-3afb91173f33"
}