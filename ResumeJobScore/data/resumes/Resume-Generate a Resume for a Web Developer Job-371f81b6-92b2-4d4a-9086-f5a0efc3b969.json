{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Caterpillar Peoria IL Over 8 years of experience in analysis design implementation and testing of ObjectOriented Applications in ClientServer environments using JavaJ2EE Experienced in Java Webbased Desktop Based Development with Concepts of Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experience working with various Software Development Life Cycle SDLC methodologies based on Agile Scrum Waterfall Model Iteration Experienced in Middleware persistence framework like HibernateJPA for mapping Java classes to thedatabase and using Hibernate Query Language HQL Experience in working with cuttingedge frontend technologiesframework and libraries like JQuery Prototype DHTML JSON DOM CSS XML AJAX Extensive experience on Angular JS MVC Framework Angular JS Tables Modules Angular Filters and Angular Events Strong experience in developing web applications using various Spring framework features like Spring IOC Spring AOP Spring JDBC Spring ORM Spring Security Spring Boot and Spring MVC Expertise in databases such as My SQL Postgre SQL and IBM DB2 databases to manage tables views indexes sequences stored procedures functions triggers and packages Experience in developing User Interface UI rich Web Applications using Front EndUI Technologies like HTML5 CSS3LESS JavaScript JQuery Bootstrap JSP XML AJAX that follows W3C Web Standards and are browser compatible Experience with features of Angular 4 like Modules which configure the injector and the compiler and help organize related things together Extensive knowledge in developing applications on a single page SPAs using various JavaScript frameworks like Angular JS Backbonejs React JS Node JS and Bootstrap Having strong Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS Twitter Bootstrap HTML5 CSS3 DHTML XML XSLT AJAX JQuery JSON Experience in all phases of Software Development Life Cycle SDLC including Analysis Design Development Documentation Testing Deployment Version Control and production support Proficient in building Web User Interface UI using HTML5 CSS3 DHTML and JavaScript that follows W3C Web Standards and are browser compatible Developed and updated web pages quickly and effectively using HTML 5 CSS3 JavaScript and JQuery with the webpage crosses browser compatibility Experienced in implementing Serviceoriented architecture and Web Services using SOAP RESTFUL Experience with Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experience in developing and a solid understanding of Service Oriented Architecture and Micro services Architecture Proven experience in writing Queries Stored Procedures Triggers Cursors Functions and Packages using TOAD Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Expertise in using IDEs like Eclipse Net Beans and RAD for developing and debugging rapid web and enterprise Java applications Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Goal oriented individual with excellent analytical problemsolving communication and interpersonal skills with the ability to interact with individuals at all levels and work independently Work Experience Full Stack Java Developer Caterpillar Peoria IL July 2018 to Present Description Caterpillar Inc has been making sustainable progress possible and driving positive change on every continent Customers turn to Caterpillar to help them develop infrastructure energy and natural resource assets Caterpillar is the worlds leading manufacturer of construction and mining equipment diesel and natural gas engines industrial gas turbines and dieselelectric locomotives Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Designed and Developed application based on Micro service Oriented Architecture using Spring Boot and node with Express JS Analyzed business requirements to translate functional requirements into technical requirements and develop web application using Mongo DB Express ReactjsRedux and Nodejs MERN stack Implemented React JS with Redux architecture for fetching asynchronous data from the Restful webservices Worked in using React JS components of NPM Node packaging manager such as Forms Events Keys Router Animations and Flux concept Responsible for React UI and architecture building components library including Tree SlideView and Table Grid Created single page web application by creating templates with HTML5for pages CSS3styling Bootstrap speed development responsive consistency ES6 and responsive components by using event binding and routing services for great user experience with Angular 40 Created Reusable Angular 40 components using Typescript and services are obtained using Dependency Injection to consume REST APIs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Worked with Angular 40 using Angular CLI and generated various components routes services pipes and structured the application code using Componentbased architecture Created many custom filters using Angular 40 and an external module to manipulate the routing Extensively worked in writing minimal code in building reusable forms with their validations using React JS Used React JS to create Controllers to handle events triggered by clients and send a request to the server Works using React JS components Forms Events Keys Router Animations Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular 40 and Mocha and Chai for reacting testing Created Node JS services using Express JS which are consumed by Angular 4 components on the client side Developed Micro services using Spring Boot Spring Cloud with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as a message broker Used Spring Boot which is radically faster in building cloud Micro services and develop a Springbased application with very less configuration Used Spring Boot framework to write Presentation Layer Business Layers and Controller Servlets Used Spring Boot Actuator to externalize applications configuration properties for different environments Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Build a prototype for various required services such as Scheduling Logging and Notification Service using thirdparty Node JS based JavaScript library Experienced in all phases of UIUX implementation of a Travel Search and Booking web application including Design Prototyping Development and testing phases Met with the project manager frequently for reviewing project goals and for creating proposals for future developments and researching their fields for UI design Utilized various JavaScript and JQuery libraries AJAX for form validation and other interactive features Utilized Swagger framework for design documentation testing and deployment of REST APIs in Spring Boot Used Hibernate for Object Relational Mapping ORM to interact with the Oracle database Installed configured and administration of No SQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with No SQL database Mongo DB Unstructured data was handled using Mongo DB and used Mongoose Connector for connecting to the database Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Worked on the ELK Elastic Search Log stash Kibana stack to facilitate information processing and sharing Designed built and deployed a multitude application utilizing the Amazon Web Services stack Including EC2 S3 SQS focusing on highavailability fault tolerance and autoscaling Developed a thirdparty API with OAuth 20 authentication and used as a gateway for all the web services Used GIT as version control and regularly pushed the code to BitBucket and used Jenkins for Continuous Integration and Deployment CICD EnvironmentHTML5 CSS3 Bootstrap Angular 40 Type Script REACT JS ES6 Jasmine Karma Mocha Chai Spring Boot Nodejs Express JS Hibernate Mongo DB Apache Kafka ELK Docker AWS EC2 Jenkins Swagger OAuth 20 Full Stack Java Developer Ernest and young Atlanta GA April 2016 to July 2018 Description At EY our purpose is Building a better working world The insights and quality services we provide help build trust and confidence in the capital markets and in economies the world over We develop outstanding leaders who team to deliver on our promises to all of our stakeholders In so doing we play a critical role in building a better working world for our people for our clients and for our communities Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Designed and developed the UI using spring view component HTML 5 CSS 3 Bootstrap and Angular JS 40 Utilized MEAN stack REST design pattern MVC framework and Single Page Application framework based on Node JS Transaction management is done by JTA API specification by implementing them Worked with Angular 4 directives components pipes injectables Expertise in application development using Java 8 features like Lambda Expressions for array operations Collections J2EE Annotations Hibernate JUnit Ant Maven CSS XML Developed Spring Features like Spring DAO Spring Boot Spring Batch Spring Integration Spring frameworks Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Well exposed to Hibernate and spring and thorough knowledge on Hibernate configuration file Used Hibernate for accessing the database and mapping the entities by using annotations Used Hibernate as an ORM tool to store the persistent data and for communicating with the Oracle database Designing and coding Procedures Triggers Cursors Functions using PLSQL Oracle10g11g and SQL Servers Composed and executed Mongo DB scripts and queries to fetch and test data from No SQL databases Used a Micro service architecture with Spring Bootbased services interacting through a combination of REST Involved in developing Restful Web Services with JAXRS to provide functionality for future development Developed REST Web Services clients to consume those Web Services as well another enterprise Wide Web Services Experienced in transferring data from different data sources into HDFS systems using Kafka producers consumers and Kafka brokers Worked on creating Kafka topics writing custom petitioner classes Deployed the Application into Docker container and made easily accessible at runtime using cloud services like AWS Netflix Eureka Spring Hystrix as the fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Involved in Docker containerizing the applications and pushing them to quay and deploying on kubernetes Ensure the deliverables meets the design requirements and technical specifications Defined strategic initiatives on Continuous Integration and Delivery CICD model in the AGILE development environment to help respond quickly to business needs Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Used GIT as version management JIRA for defect management system Analyzing Maven dependency in the base code to annotate the dependency on Spring Boot application into Gradle and Developed Unit test cases using JUnit Mockito and Easy mock Jenkins Understanding big data technologies like Apache Kafka and Apache Spark Using Scala in Play framework Performed deployment of applications on Web Sphere Application Server WAS and tested Service and data access tier using TestNG and performed UI testing and frontend testing using Selenium Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment Core Java Tomcat Apache Kafka Swagger JMS J2EE Spring MVC Spring Boot Framework Micro service Mongo DB Angular 40 Spring Security Hibernate 4X JQUERY JSON AJAX Node js Web Services XML JavaBeans JavaScript Apache Maven Gradle JUnit HTMLUNIT XSLT HTMLDHTML JIRA Java UI Developer TMobile Atlanta GA January 2014 to April 2016 Description As Americas Uncarrier TMobile US Inc is redefining the way consumers and businesses buy wireless services through leading product and service innovation TMobile expand its products into banking TMobile would provide Visa card with banking features and a smart phone money management application with reducedfee for TMobile wireless customers Responsibilities Involved in analysis specification design implementation and testing phases of the Software Development Life Cycle SDLC based on the functional requirements Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Participated in scrum related activities and Daily Scrum Meetings Developed Customer GUI using HTML CSS LESS JavaScript Bootstrap JSON AJAX JQuery and Backbone JS to simplify the complexities of the application and to create a single page application Created several models with keyvalue binding custom events views and declarative event handling using the BackboneJS framework Implementing the Backbone JS and Spring MVC framework for data access SOAP web services were developed in a topdown approach using hibernate and Oracle and the clients were generated with JAXWS Designed and developed Spring Batch Applications to read data from flat files and databases Used spring batch framework to update data in databases Used spring batch framework to create custom readers and writers to work with the application Implemented Java EE components using Spring IOC Dependency Injection Spring Transactions and Spring security models Created spring batch jobs for reliability robustness and essential automatic processing using Spring Batch Used Spring Batch to develop batch processing to handle bulk requests from the clients Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of a large amount of data Extensive experience in developing batch jobs using an open source framework like Spring Batch framework Developed application using Frameworks Spring MVC Spring IOC Spring AOP Segregated functionality related to caching using Spring AOP and Ehcache framework using hibernate Used Spring Security for user Authentication and authorization Extensively worked on Jersey for creating REST APIs services Responsible for writingreviewing serverside code using IBATIS and DAO Framework for executing stored procedures and complicated SQL queries Created Data Access Objects to fetch data from the database and integrate them with IBATIS Implemented Web service calls using SOAP JAXWS frameworks Used Apache Camel for messaging technology glue with routing It joins together messaging start and end points allowing the transference of messages from different sources to different destinations Used Mockito for unit tests development of Testdriven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Developed automation test cases using Java and selenium on Eclipse for web 20 Ajax application Used Apache Maven builds tool to automate the build process and Jenkins CI for continuous integration Environment HTML CSS LESS JavaScript JSON AJAX JQuery Bootstrap Backbone JS Spring MVC Spring IOC Spring AOP Spring Security Spring Batch Jersey IBATIS My SQL SOAP JAXWS Apache Maven Jenkins SVN Java UI Developer CVS Health Dallas TX September 2012 to January 2014 Description CVS Health Corporation previously CVS Corporation and CVS Caremark Corporation is an American retail pharmacy and health care company headquartered in Woonsocket Rhode Island The company began in 1964 with three partners who grew the venture from a parent company Mark Steven Inc that helped retailers manage their health and beauty aid product lines Responsibilities Involved in design of application framework using J2EE guidelines and different J2EE design patterns and ObjectOriented Analysis and Design OOAD methodologies Developed UI using HTML5 JavaScript CSS3 AJAX Bootstrap responsive framework and JSP for interactive crossbrowser functionality and complex user interface Performed Front end validations for the screen using JavaScript Angular Js directives and core java Developed frontend code with Ajax call in Angular JS and JQuery to retrieve data as JSON Object from controllers in backend Restful Server then display the wellorganized result in web pages by writing Angular JS controller directives services and route providers Developed the application on Nodejs platform using JavaScript programming Applied data transformation business rules to transform code from one format to another format using Nodejs Created the Nodejs EXPRESS Server to build MVC framework from frontend side Angular JS to the backend Oracle Used Reacts for rendering views and to update the Document object model dynamically Used Springs ORM and DAO layers to offer abstraction for the business from the database related code Implemented design patterns like Session Faade Singleton Factory Service Locator and DAO Wrote services to store and retrieve user data from the Mongo DB for the application on devices Involved in mapping Java objects to database tables using Hibernate and Java annotations Used JDBC connectivity for querying inserting updating deleting data from Oracle database Used hibernate to store the persistence data into the Oracle database and written HQL to access the data from the database Used Jboss as an Application Server Experience working on Grunt for magnification of JavaScript files a compilation of LESS files into CSS and for monitoring the application Used Eclipse IDE for code development along with GIT for managing the code and JENKINS for continuous integration Involved in Test Driven Development by writing JUnit test case in the coding part of Java methods Used Cucumber to write test cases for new modules Created automated test cases for the web application using Selenium Used ApacheMaven as the software build tool and Log4J for logging errors and messages Used JENKINS for continuous integration Used JIRA for tracking bugs Environment JavaJ2EE D Design Pattern Servlets Hibernate JavaScript Ajax JQuery Web services React JS Angular JS JSON JUnit HTML5 CSS3 Bootstrap Restful API JENKINS GRUNT GIT LESS Jenkins Selenium JIRA Backbonejs and Eclipse Education Bachelors Skills Eclipse Ejb Java Hibernate Spring Jms jquery Jsf Jsp Servlets Struts C Design patterns Git Nodejs Oop Svn Xml Dhtml Security Additional Information TECHNICAL SKILLS Languages C C Java Java Swings Maven MethodologiesDesign patterns OOAD OOP UML MVC DAO Factory pattern Agile Scrum Test Driven Development Web Technologies JSP Servlets Angular JS JQuery ReactJS NodeJS EJB Hibernate Struts Spring JDBC HTML5 DHTML and XML CSS3 Web Services WSDL SOAP Apache Camel Kafka Spring Boot Expressjs Web Services SOAP Restful Web Services Tools Framework Struts Hibernate Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Mockito SOA JSP reports SOAP UI Spring Boot Spring Batch Spring Security Spring Data ApplicationWeb Servers Apache Tomcat Server IDE Tools Eclipse Rational Application Developer RAD and Net Beans STS Databases Oracle 11g My SQL SQL Mongo DB Cloud AWS Version Control Tools SVN Clear Case Git Operating System Windows Linux Unix Mac Solaris",
    "entities": [
        "Spring Bootbased",
        "Used Hibernate",
        "Maven Gradle JUnit",
        "AJAX Bootstrap",
        "ObjectOriented Applications",
        "Mongo DB Express",
        "My SQL SQL Mongo DB Cloud AWS Version",
        "Analysis Design Development Documentation Testing Deployment Version Control",
        "Nodejs",
        "Building",
        "Applied",
        "Testdriven Development",
        "Oracle Used Reacts",
        "Jersey",
        "Hibernate Mongo DB",
        "ObjectOriented Analysis and Design",
        "Nodejs Express",
        "Scheduling Logging and Notification Service",
        "MVC Spring",
        "IBM",
        "Controller Servlets",
        "SVN Subversion",
        "Express",
        "Atlanta",
        "Design Prototyping Development",
        "OAuth",
        "Software Development Life Cycle SDLC",
        "Maintained",
        "JUnit",
        "Spring IOC Dependency",
        "State",
        "Angular 40 Created Reusable Angular",
        "Created Data Access Objects",
        "TX",
        "Spring Boot",
        "ELK",
        "DAO Factory",
        "Mongo DB Angular",
        "Mongo DB Unstructured",
        "UNIX Sun Solaris Linux",
        "Ehcache",
        "Woonsocket",
        "Developed",
        "Visa",
        "DAO",
        "Middleware",
        "TMobile",
        "Dallas",
        "Jenkins for Continuous Integration and Deployment CICD EnvironmentHTML5",
        "RAD",
        "CICD Expertise",
        "Responsibilities Involved",
        "Session Faade Singleton Factory Service",
        "Restful",
        "Service Oriented Architecture and Micro services",
        "Springbased",
        "Lambda Expressions",
        "AGILE",
        "Spring Security",
        "Desktop Based Development with Concepts of Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP",
        "JSP",
        "Deployed the Application",
        "the Software Development Life Cycle",
        "Micro",
        "JTA API",
        "Docker",
        "Followed Agile Software Development Methodology",
        "CLI",
        "Collections J2EE Annotations Hibernate JUnit Ant Maven",
        "DROOLS",
        "Angular JS",
        "TestDriven Development",
        "MVC",
        "Boot Framework Micro",
        "Hibernate Query Language HQL Experience",
        "Redux",
        "EJB",
        "GIT",
        "JQuery Prototype DHTML JSON DOM CSS XML",
        "CVS Corporation",
        "Node JS",
        "Environment JavaJ2EE D Design Pattern Servlets Hibernate",
        "HTML CSS",
        "Mark Steven Inc",
        "BitBucket",
        "API",
        "DAO Framework",
        "Angular 4 like",
        "Tree SlideView and Table Grid Created",
        "Created",
        "Including EC2 S3 SQS",
        "Presentation Layer Business Layers",
        "Oracle",
        "Developed Micro",
        "Continuous Integration and Delivery CICD",
        "React JS",
        "java",
        "Front EndUI Technologies",
        "CVS Caremark Corporation",
        "SQL",
        "UIUX",
        "Nodejs Created",
        "Amazon Web Services",
        "Bootstrap",
        "EY",
        "JAXRS",
        "Present Description Caterpillar Inc",
        "Frameworks Spring",
        "Typescript",
        "Unit Test Cases",
        "JAXWS Designed",
        "Nodejs EXPRESS Server",
        "AWS Netflix Eureka Spring Hystrix",
        "Agile Software Development",
        "Description CVS Health Corporation",
        "Application Server",
        "Rhode Island",
        "DAO Wrote",
        "Maven",
        "Web Sphere Application Server WAS",
        "lJavaspan",
        "Wide Web Services Experienced",
        "Oriented Architecture",
        "JavaScript",
        "TestNG",
        "UI",
        "Node JS Transaction",
        "REST Involved",
        "CSS",
        "Mongoose Connector",
        "IBATIS",
        "Restful Web Services",
        "JavaJ2EE Experienced",
        "REST",
        "React JS Used React",
        "Works using React JS",
        "Created Node JS",
        "Software Development Life Cycle",
        "Caterpillar",
        "Sprint",
        "Single Page Application",
        "JQuery",
        "Node"
    ],
    "experience": "Experience working with various Software Development Life Cycle SDLC methodologies based on Agile Scrum Waterfall Model Iteration Experienced in Middleware persistence framework like HibernateJPA for mapping Java classes to thedatabase and using Hibernate Query Language HQL Experience in working with cuttingedge frontend technologiesframework and libraries like JQuery Prototype DHTML JSON DOM CSS XML AJAX Extensive experience on Angular JS MVC Framework Angular JS Tables Modules Angular Filters and Angular Events Strong experience in developing web applications using various Spring framework features like Spring IOC Spring AOP Spring JDBC Spring ORM Spring Security Spring Boot and Spring MVC Expertise in databases such as My SQL Postgre SQL and IBM DB2 databases to manage tables views indexes sequences stored procedures functions triggers and packages Experience in developing User Interface UI rich Web Applications using Front EndUI Technologies like HTML5 CSS3LESS JavaScript JQuery Bootstrap JSP XML AJAX that follows W3C Web Standards and are browser compatible Experience with features of Angular 4 like Modules which configure the injector and the compiler and help organize related things together Extensive knowledge in developing applications on a single page SPAs using various JavaScript frameworks like Angular JS Backbonejs React JS Node JS and Bootstrap Having strong Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS Twitter Bootstrap HTML5 CSS3 DHTML XML XSLT AJAX JQuery JSON Experience in all phases of Software Development Life Cycle SDLC including Analysis Design Development Documentation Testing Deployment Version Control and production support Proficient in building Web User Interface UI using HTML5 CSS3 DHTML and JavaScript that follows W3C Web Standards and are browser compatible Developed and updated web pages quickly and effectively using HTML 5 CSS3 JavaScript and JQuery with the webpage crosses browser compatibility Experienced in implementing Serviceoriented architecture and Web Services using SOAP RESTFUL Experience with Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experience in developing and a solid understanding of Service Oriented Architecture and Micro services Architecture Proven experience in writing Queries Stored Procedures Triggers Cursors Functions and Packages using TOAD Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Expertise in using IDEs like Eclipse Net Beans and RAD for developing and debugging rapid web and enterprise Java applications Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Goal oriented individual with excellent analytical problemsolving communication and interpersonal skills with the ability to interact with individuals at all levels and work independently Work Experience Full Stack Java Developer Caterpillar Peoria IL July 2018 to Present Description Caterpillar Inc has been making sustainable progress possible and driving positive change on every continent Customers turn to Caterpillar to help them develop infrastructure energy and natural resource assets Caterpillar is the worlds leading manufacturer of construction and mining equipment diesel and natural gas engines industrial gas turbines and dieselelectric locomotives Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Designed and Developed application based on Micro service Oriented Architecture using Spring Boot and node with Express JS Analyzed business requirements to translate functional requirements into technical requirements and develop web application using Mongo DB Express ReactjsRedux and Nodejs MERN stack Implemented React JS with Redux architecture for fetching asynchronous data from the Restful webservices Worked in using React JS components of NPM Node packaging manager such as Forms Events Keys Router Animations and Flux concept Responsible for React UI and architecture building components library including Tree SlideView and Table Grid Created single page web application by creating templates with HTML5for pages CSS3styling Bootstrap speed development responsive consistency ES6 and responsive components by using event binding and routing services for great user experience with Angular 40 Created Reusable Angular 40 components using Typescript and services are obtained using Dependency Injection to consume REST APIs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Worked with Angular 40 using Angular CLI and generated various components routes services pipes and structured the application code using Componentbased architecture Created many custom filters using Angular 40 and an external module to manipulate the routing Extensively worked in writing minimal code in building reusable forms with their validations using React JS Used React JS to create Controllers to handle events triggered by clients and send a request to the server Works using React JS components Forms Events Keys Router Animations Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular 40 and Mocha and Chai for reacting testing Created Node JS services using Express JS which are consumed by Angular 4 components on the client side Developed Micro services using Spring Boot Spring Cloud with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as a message broker Used Spring Boot which is radically faster in building cloud Micro services and develop a Springbased application with very less configuration Used Spring Boot framework to write Presentation Layer Business Layers and Controller Servlets Used Spring Boot Actuator to externalize applications configuration properties for different environments Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Build a prototype for various required services such as Scheduling Logging and Notification Service using thirdparty Node JS based JavaScript library Experienced in all phases of UIUX implementation of a Travel Search and Booking web application including Design Prototyping Development and testing phases Met with the project manager frequently for reviewing project goals and for creating proposals for future developments and researching their fields for UI design Utilized various JavaScript and JQuery libraries AJAX for form validation and other interactive features Utilized Swagger framework for design documentation testing and deployment of REST APIs in Spring Boot Used Hibernate for Object Relational Mapping ORM to interact with the Oracle database Installed configured and administration of No SQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with No SQL database Mongo DB Unstructured data was handled using Mongo DB and used Mongoose Connector for connecting to the database Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Worked on the ELK Elastic Search Log stash Kibana stack to facilitate information processing and sharing Designed built and deployed a multitude application utilizing the Amazon Web Services stack Including EC2 S3 SQS focusing on highavailability fault tolerance and autoscaling Developed a thirdparty API with OAuth 20 authentication and used as a gateway for all the web services Used GIT as version control and regularly pushed the code to BitBucket and used Jenkins for Continuous Integration and Deployment CICD EnvironmentHTML5 CSS3 Bootstrap Angular 40 Type Script REACT JS ES6 Jasmine Karma Mocha Chai Spring Boot Nodejs Express JS Hibernate Mongo DB Apache Kafka ELK Docker AWS EC2 Jenkins Swagger OAuth 20 Full Stack Java Developer Ernest and young Atlanta GA April 2016 to July 2018 Description At EY our purpose is Building a better working world The insights and quality services we provide help build trust and confidence in the capital markets and in economies the world over We develop outstanding leaders who team to deliver on our promises to all of our stakeholders In so doing we play a critical role in building a better working world for our people for our clients and for our communities Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Designed and developed the UI using spring view component HTML 5 CSS 3 Bootstrap and Angular JS 40 Utilized MEAN stack REST design pattern MVC framework and Single Page Application framework based on Node JS Transaction management is done by JTA API specification by implementing them Worked with Angular 4 directives components pipes injectables Expertise in application development using Java 8 features like Lambda Expressions for array operations Collections J2EE Annotations Hibernate JUnit Ant Maven CSS XML Developed Spring Features like Spring DAO Spring Boot Spring Batch Spring Integration Spring frameworks Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Well exposed to Hibernate and spring and thorough knowledge on Hibernate configuration file Used Hibernate for accessing the database and mapping the entities by using annotations Used Hibernate as an ORM tool to store the persistent data and for communicating with the Oracle database Designing and coding Procedures Triggers Cursors Functions using PLSQL Oracle10g11 g and SQL Servers Composed and executed Mongo DB scripts and queries to fetch and test data from No SQL databases Used a Micro service architecture with Spring Bootbased services interacting through a combination of REST Involved in developing Restful Web Services with JAXRS to provide functionality for future development Developed REST Web Services clients to consume those Web Services as well another enterprise Wide Web Services Experienced in transferring data from different data sources into HDFS systems using Kafka producers consumers and Kafka brokers Worked on creating Kafka topics writing custom petitioner classes Deployed the Application into Docker container and made easily accessible at runtime using cloud services like AWS Netflix Eureka Spring Hystrix as the fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Involved in Docker containerizing the applications and pushing them to quay and deploying on kubernetes Ensure the deliverables meets the design requirements and technical specifications Defined strategic initiatives on Continuous Integration and Delivery CICD model in the AGILE development environment to help respond quickly to business needs Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Used GIT as version management JIRA for defect management system Analyzing Maven dependency in the base code to annotate the dependency on Spring Boot application into Gradle and Developed Unit test cases using JUnit Mockito and Easy mock Jenkins Understanding big data technologies like Apache Kafka and Apache Spark Using Scala in Play framework Performed deployment of applications on Web Sphere Application Server WAS and tested Service and data access tier using TestNG and performed UI testing and frontend testing using Selenium Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment Core Java Tomcat Apache Kafka Swagger JMS J2EE Spring MVC Spring Boot Framework Micro service Mongo DB Angular 40 Spring Security Hibernate 4X JQUERY JSON AJAX Node js Web Services XML JavaBeans JavaScript Apache Maven Gradle JUnit HTMLUNIT XSLT HTMLDHTML JIRA Java UI Developer TMobile Atlanta GA January 2014 to April 2016 Description As Americas Uncarrier TMobile US Inc is redefining the way consumers and businesses buy wireless services through leading product and service innovation TMobile expand its products into banking TMobile would provide Visa card with banking features and a smart phone money management application with reducedfee for TMobile wireless customers Responsibilities Involved in analysis specification design implementation and testing phases of the Software Development Life Cycle SDLC based on the functional requirements Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Participated in scrum related activities and Daily Scrum Meetings Developed Customer GUI using HTML CSS LESS JavaScript Bootstrap JSON AJAX JQuery and Backbone JS to simplify the complexities of the application and to create a single page application Created several models with keyvalue binding custom events views and declarative event handling using the BackboneJS framework Implementing the Backbone JS and Spring MVC framework for data access SOAP web services were developed in a topdown approach using hibernate and Oracle and the clients were generated with JAXWS Designed and developed Spring Batch Applications to read data from flat files and databases Used spring batch framework to update data in databases Used spring batch framework to create custom readers and writers to work with the application Implemented Java EE components using Spring IOC Dependency Injection Spring Transactions and Spring security models Created spring batch jobs for reliability robustness and essential automatic processing using Spring Batch Used Spring Batch to develop batch processing to handle bulk requests from the clients Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of a large amount of data Extensive experience in developing batch jobs using an open source framework like Spring Batch framework Developed application using Frameworks Spring MVC Spring IOC Spring AOP Segregated functionality related to caching using Spring AOP and Ehcache framework using hibernate Used Spring Security for user Authentication and authorization Extensively worked on Jersey for creating REST APIs services Responsible for writingreviewing serverside code using IBATIS and DAO Framework for executing stored procedures and complicated SQL queries Created Data Access Objects to fetch data from the database and integrate them with IBATIS Implemented Web service calls using SOAP JAXWS frameworks Used Apache Camel for messaging technology glue with routing It joins together messaging start and end points allowing the transference of messages from different sources to different destinations Used Mockito for unit tests development of Testdriven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Developed automation test cases using Java and selenium on Eclipse for web 20 Ajax application Used Apache Maven builds tool to automate the build process and Jenkins CI for continuous integration Environment HTML CSS LESS JavaScript JSON AJAX JQuery Bootstrap Backbone JS Spring MVC Spring IOC Spring AOP Spring Security Spring Batch Jersey IBATIS My SQL SOAP JAXWS Apache Maven Jenkins SVN Java UI Developer CVS Health Dallas TX September 2012 to January 2014 Description CVS Health Corporation previously CVS Corporation and CVS Caremark Corporation is an American retail pharmacy and health care company headquartered in Woonsocket Rhode Island The company began in 1964 with three partners who grew the venture from a parent company Mark Steven Inc that helped retailers manage their health and beauty aid product lines Responsibilities Involved in design of application framework using J2EE guidelines and different J2EE design patterns and ObjectOriented Analysis and Design OOAD methodologies Developed UI using HTML5 JavaScript CSS3 AJAX Bootstrap responsive framework and JSP for interactive crossbrowser functionality and complex user interface Performed Front end validations for the screen using JavaScript Angular Js directives and core java Developed frontend code with Ajax call in Angular JS and JQuery to retrieve data as JSON Object from controllers in backend Restful Server then display the wellorganized result in web pages by writing Angular JS controller directives services and route providers Developed the application on Nodejs platform using JavaScript programming Applied data transformation business rules to transform code from one format to another format using Nodejs Created the Nodejs EXPRESS Server to build MVC framework from frontend side Angular JS to the backend Oracle Used Reacts for rendering views and to update the Document object model dynamically Used Springs ORM and DAO layers to offer abstraction for the business from the database related code Implemented design patterns like Session Faade Singleton Factory Service Locator and DAO Wrote services to store and retrieve user data from the Mongo DB for the application on devices Involved in mapping Java objects to database tables using Hibernate and Java annotations Used JDBC connectivity for querying inserting updating deleting data from Oracle database Used hibernate to store the persistence data into the Oracle database and written HQL to access the data from the database Used Jboss as an Application Server Experience working on Grunt for magnification of JavaScript files a compilation of LESS files into CSS and for monitoring the application Used Eclipse IDE for code development along with GIT for managing the code and JENKINS for continuous integration Involved in Test Driven Development by writing JUnit test case in the coding part of Java methods Used Cucumber to write test cases for new modules Created automated test cases for the web application using Selenium Used ApacheMaven as the software build tool and Log4J for logging errors and messages Used JENKINS for continuous integration Used JIRA for tracking bugs Environment JavaJ2EE D Design Pattern Servlets Hibernate JavaScript Ajax JQuery Web services React JS Angular JS JSON JUnit HTML5 CSS3 Bootstrap Restful API JENKINS GRUNT GIT LESS Jenkins Selenium JIRA Backbonejs and Eclipse Education Bachelors Skills Eclipse Ejb Java Hibernate Spring Jms jquery Jsf Jsp Servlets Struts C Design patterns Git Nodejs Oop Svn Xml Dhtml Security Additional Information TECHNICAL SKILLS Languages C C Java Java Swings Maven MethodologiesDesign patterns OOAD OOP UML MVC DAO Factory pattern Agile Scrum Test Driven Development Web Technologies JSP Servlets Angular JS JQuery ReactJS NodeJS EJB Hibernate Struts Spring JDBC HTML5 DHTML and XML CSS3 Web Services WSDL SOAP Apache Camel Kafka Spring Boot Expressjs Web Services SOAP Restful Web Services Tools Framework Struts Hibernate Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Mockito SOA JSP reports SOAP UI Spring Boot Spring Batch Spring Security Spring Data ApplicationWeb Servers Apache Tomcat Server IDE Tools Eclipse Rational Application Developer RAD and Net Beans STS Databases Oracle 11 g My SQL SQL Mongo DB Cloud AWS Version Control Tools SVN Clear Case Git Operating System Windows Linux Unix Mac Solaris",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Caterpillar",
        "Peoria",
        "IL",
        "years",
        "experience",
        "analysis",
        "design",
        "implementation",
        "testing",
        "ObjectOriented",
        "Applications",
        "ClientServer",
        "environments",
        "JavaJ2EE",
        "Java",
        "Webbased",
        "Desktop",
        "Based",
        "Development",
        "Concepts",
        "Object",
        "Oriented",
        "Design",
        "OOD",
        "Object",
        "Oriented",
        "Analysis",
        "OOA",
        "Object",
        "Programming",
        "OOP",
        "implementation",
        "Experience",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Model",
        "Iteration",
        "Middleware",
        "persistence",
        "framework",
        "HibernateJPA",
        "mapping",
        "Java",
        "classes",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "Experience",
        "cuttingedge",
        "frontend",
        "technologiesframework",
        "libraries",
        "JQuery",
        "Prototype",
        "DHTML",
        "DOM",
        "CSS",
        "XML",
        "experience",
        "JS",
        "MVC",
        "Framework",
        "Angular",
        "JS",
        "Tables",
        "Modules",
        "Angular",
        "Filters",
        "Angular",
        "Events",
        "Strong",
        "experience",
        "web",
        "applications",
        "Spring",
        "framework",
        "features",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Expertise",
        "databases",
        "SQL",
        "Postgre",
        "SQL",
        "IBM",
        "DB2",
        "tables",
        "views",
        "indexes",
        "sequences",
        "procedures",
        "functions",
        "triggers",
        "packages",
        "Experience",
        "User",
        "Interface",
        "UI",
        "Web",
        "Applications",
        "Front",
        "EndUI",
        "Technologies",
        "HTML5",
        "CSS3LESS",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "JSP",
        "XML",
        "AJAX",
        "W3C",
        "Web",
        "Standards",
        "browser",
        "Experience",
        "features",
        "Angular",
        "Modules",
        "injector",
        "compiler",
        "things",
        "knowledge",
        "applications",
        "page",
        "SPAs",
        "JavaScript",
        "frameworks",
        "JS",
        "Backbonejs",
        "React",
        "JS",
        "Node",
        "JS",
        "Bootstrap",
        "Experience",
        "Web",
        "Service",
        "Applications",
        "User",
        "Interface",
        "UI",
        "Technologies",
        "Object",
        "Oriented",
        "JavaScript",
        "JavaScript",
        "UI",
        "LibrariesFrameworks",
        "Angular",
        "JS",
        "Angular",
        "React",
        "JS",
        "Node",
        "JS",
        "Twitter",
        "Bootstrap",
        "HTML5",
        "CSS3",
        "DHTML",
        "XML",
        "XSLT",
        "AJAX",
        "JQuery",
        "JSON",
        "Experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Development",
        "Documentation",
        "Testing",
        "Deployment",
        "Version",
        "Control",
        "production",
        "support",
        "Proficient",
        "Web",
        "User",
        "Interface",
        "UI",
        "HTML5",
        "CSS3",
        "DHTML",
        "JavaScript",
        "W3C",
        "Web",
        "Standards",
        "browser",
        "Developed",
        "web",
        "pages",
        "HTML",
        "CSS3",
        "JavaScript",
        "JQuery",
        "webpage",
        "browser",
        "compatibility",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "RESTFUL",
        "Experience",
        "Java",
        "features",
        "expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "Experience",
        "understanding",
        "Service",
        "Oriented",
        "Architecture",
        "Micro",
        "services",
        "Architecture",
        "Proven",
        "experience",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "Packages",
        "TOAD",
        "Worked",
        "Building",
        "application",
        "platforms",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "source",
        "technologies",
        "engineering",
        "practices",
        "CICD",
        "Expertise",
        "IDEs",
        "Eclipse",
        "Net",
        "Beans",
        "RAD",
        "web",
        "enterprise",
        "Java",
        "experience",
        "operating",
        "systems",
        "UNIX",
        "Sun",
        "Solaris",
        "Linux",
        "Microsoft",
        "Windows",
        "Goal",
        "individual",
        "communication",
        "skills",
        "ability",
        "individuals",
        "levels",
        "work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Caterpillar",
        "Peoria",
        "IL",
        "July",
        "Present",
        "Description",
        "Caterpillar",
        "Inc",
        "progress",
        "change",
        "continent",
        "Customers",
        "Caterpillar",
        "infrastructure",
        "energy",
        "resource",
        "assets",
        "Caterpillar",
        "worlds",
        "manufacturer",
        "construction",
        "mining",
        "equipment",
        "diesel",
        "gas",
        "engines",
        "gas",
        "turbines",
        "locomotives",
        "Responsibilities",
        "Cycle",
        "Software",
        "Development",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "testing",
        "phases",
        "Agile",
        "Software",
        "Development",
        "Scrum",
        "methodology",
        "application",
        "Micro",
        "service",
        "Architecture",
        "Spring",
        "Boot",
        "node",
        "Express",
        "JS",
        "business",
        "requirements",
        "requirements",
        "requirements",
        "web",
        "application",
        "Mongo",
        "DB",
        "Express",
        "ReactjsRedux",
        "Nodejs",
        "MERN",
        "stack",
        "React",
        "JS",
        "Redux",
        "architecture",
        "data",
        "webservices",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "packaging",
        "manager",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "React",
        "UI",
        "architecture",
        "building",
        "components",
        "library",
        "Tree",
        "SlideView",
        "Table",
        "Grid",
        "page",
        "web",
        "application",
        "templates",
        "HTML5for",
        "pages",
        "Bootstrap",
        "speed",
        "development",
        "consistency",
        "ES6",
        "components",
        "event",
        "services",
        "user",
        "experience",
        "Angular",
        "Created",
        "Reusable",
        "Angular",
        "components",
        "Typescript",
        "services",
        "Dependency",
        "Injection",
        "REST",
        "APIs",
        "pages",
        "Angular",
        "Validations",
        "Modules",
        "Events",
        "Expressions",
        "Directives",
        "Controllers",
        "Filters",
        "Angular",
        "Angular",
        "CLI",
        "components",
        "services",
        "pipes",
        "application",
        "code",
        "architecture",
        "custom",
        "filters",
        "Angular",
        "module",
        "routing",
        "code",
        "forms",
        "validations",
        "React",
        "JS",
        "React",
        "JS",
        "Controllers",
        "events",
        "clients",
        "request",
        "server",
        "Works",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Unit",
        "Test",
        "Cases",
        "Jasmine",
        "Karma",
        "Testing",
        "Frameworks",
        "Angular",
        "Mocha",
        "Chai",
        "testing",
        "Created",
        "Node",
        "JS",
        "services",
        "Express",
        "JS",
        "Angular",
        "components",
        "client",
        "side",
        "Developed",
        "Micro",
        "services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "discovery",
        "Server",
        "service",
        "discovery",
        "clients",
        "Apache",
        "Kafka",
        "Zoo",
        "Keeper",
        "message",
        "broker",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "services",
        "application",
        "configuration",
        "Spring",
        "Boot",
        "framework",
        "Presentation",
        "Layer",
        "Business",
        "Layers",
        "Controller",
        "Servlets",
        "Spring",
        "Boot",
        "Actuator",
        "applications",
        "configuration",
        "properties",
        "environments",
        "custom",
        "message",
        "adapter",
        "components",
        "Apache",
        "Kafka",
        "message",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Build",
        "prototype",
        "services",
        "Scheduling",
        "Logging",
        "Notification",
        "Service",
        "thirdparty",
        "Node",
        "JS",
        "JavaScript",
        "library",
        "phases",
        "UIUX",
        "implementation",
        "Travel",
        "Search",
        "Booking",
        "web",
        "application",
        "Design",
        "Prototyping",
        "Development",
        "testing",
        "phases",
        "Met",
        "project",
        "manager",
        "project",
        "goals",
        "proposals",
        "developments",
        "fields",
        "UI",
        "design",
        "JavaScript",
        "JQuery",
        "AJAX",
        "form",
        "validation",
        "features",
        "Swagger",
        "framework",
        "design",
        "documentation",
        "testing",
        "deployment",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Hibernate",
        "Object",
        "Relational",
        "Mapping",
        "ORM",
        "Oracle",
        "database",
        "Installed",
        "administration",
        "SQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "architecture",
        "stack",
        "data",
        "access",
        "SQL",
        "database",
        "Mongo",
        "DB",
        "Unstructured",
        "data",
        "Mongo",
        "DB",
        "Mongoose",
        "Connector",
        "database",
        "log",
        "delivery",
        "system",
        "producer",
        "consumer",
        "broker",
        "architecture",
        "Apache",
        "Kafka",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "stash",
        "Kibana",
        "information",
        "processing",
        "multitude",
        "application",
        "Amazon",
        "Web",
        "Services",
        "stack",
        "EC2",
        "S3",
        "SQS",
        "highavailability",
        "fault",
        "tolerance",
        "thirdparty",
        "API",
        "OAuth",
        "authentication",
        "gateway",
        "web",
        "services",
        "GIT",
        "version",
        "control",
        "code",
        "BitBucket",
        "Jenkins",
        "Continuous",
        "Integration",
        "Deployment",
        "CICD",
        "EnvironmentHTML5",
        "CSS3",
        "Bootstrap",
        "Angular",
        "Type",
        "Script",
        "REACT",
        "JS",
        "ES6",
        "Jasmine",
        "Karma",
        "Mocha",
        "Chai",
        "Spring",
        "Boot",
        "Nodejs",
        "Express",
        "JS",
        "Hibernate",
        "Mongo",
        "DB",
        "Apache",
        "Kafka",
        "ELK",
        "Docker",
        "AWS",
        "EC2",
        "Jenkins",
        "Swagger",
        "OAuth",
        "Stack",
        "Java",
        "Developer",
        "Ernest",
        "Atlanta",
        "GA",
        "April",
        "July",
        "Description",
        "EY",
        "purpose",
        "world",
        "insights",
        "quality",
        "services",
        "help",
        "trust",
        "confidence",
        "capital",
        "markets",
        "economies",
        "world",
        "leaders",
        "promises",
        "stakeholders",
        "role",
        "world",
        "people",
        "clients",
        "communities",
        "Responsibilities",
        "Experience",
        "development",
        "SCRUM",
        "process",
        "Sprint",
        "standup",
        "meetings",
        "UI",
        "spring",
        "view",
        "component",
        "HTML",
        "CSS",
        "Bootstrap",
        "Angular",
        "JS",
        "MEAN",
        "REST",
        "design",
        "pattern",
        "MVC",
        "framework",
        "Single",
        "Page",
        "Application",
        "framework",
        "Node",
        "JS",
        "Transaction",
        "management",
        "JTA",
        "API",
        "specification",
        "Angular",
        "directives",
        "components",
        "pipes",
        "Expertise",
        "application",
        "development",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "array",
        "operations",
        "Collections",
        "J2EE",
        "Annotations",
        "Hibernate",
        "JUnit",
        "Ant",
        "Maven",
        "CSS",
        "XML",
        "Spring",
        "Features",
        "Spring",
        "DAO",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "Integration",
        "Spring",
        "frameworks",
        "Spring",
        "framework",
        "Spring",
        "coreIoC",
        "Spring",
        "AOP",
        "Spring",
        "ORM",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "features",
        "Spring",
        "Security",
        "Hibernate",
        "spring",
        "knowledge",
        "Hibernate",
        "configuration",
        "file",
        "Hibernate",
        "database",
        "mapping",
        "entities",
        "annotations",
        "Hibernate",
        "ORM",
        "tool",
        "data",
        "Oracle",
        "database",
        "Designing",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "PLSQL",
        "Oracle10g11",
        "g",
        "SQL",
        "Servers",
        "Mongo",
        "DB",
        "scripts",
        "queries",
        "test",
        "data",
        "SQL",
        "Micro",
        "service",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Restful",
        "Web",
        "Services",
        "JAXRS",
        "functionality",
        "development",
        "Developed",
        "REST",
        "Web",
        "Services",
        "clients",
        "Web",
        "Services",
        "enterprise",
        "Web",
        "Services",
        "data",
        "data",
        "sources",
        "HDFS",
        "systems",
        "Kafka",
        "producers",
        "consumers",
        "Kafka",
        "brokers",
        "Kafka",
        "topics",
        "custom",
        "petitioner",
        "classes",
        "Application",
        "Docker",
        "container",
        "runtime",
        "cloud",
        "services",
        "AWS",
        "Netflix",
        "Eureka",
        "Spring",
        "Hystrix",
        "method",
        "Spring",
        "Ribbon",
        "load",
        "balancing",
        "broker",
        "service",
        "status",
        "Spring",
        "Kafka",
        "Zookeeper",
        "Docker",
        "applications",
        "quay",
        "kubernetes",
        "deliverables",
        "design",
        "requirements",
        "specifications",
        "initiatives",
        "Continuous",
        "Integration",
        "Delivery",
        "CICD",
        "model",
        "AGILE",
        "development",
        "environment",
        "business",
        "needs",
        "DROOLS",
        "engine",
        "runtime",
        "rule",
        "engine",
        "business",
        "rule",
        "runtime",
        "GIT",
        "version",
        "management",
        "JIRA",
        "management",
        "system",
        "Maven",
        "dependency",
        "base",
        "code",
        "dependency",
        "Spring",
        "Boot",
        "application",
        "Gradle",
        "Developed",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "Easy",
        "mock",
        "Jenkins",
        "data",
        "technologies",
        "Apache",
        "Kafka",
        "Apache",
        "Spark",
        "Scala",
        "framework",
        "Performed",
        "deployment",
        "applications",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Service",
        "data",
        "access",
        "tier",
        "TestNG",
        "UI",
        "testing",
        "frontend",
        "testing",
        "Selenium",
        "Track",
        "production",
        "incidents",
        "scope",
        "bugs",
        "enhancements",
        "reviews",
        "State",
        "counterparts",
        "plan",
        "releases",
        "Environment",
        "Core",
        "Java",
        "Tomcat",
        "Apache",
        "Kafka",
        "Swagger",
        "JMS",
        "J2EE",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Framework",
        "Micro",
        "service",
        "Mongo",
        "DB",
        "Angular",
        "Spring",
        "Security",
        "Hibernate",
        "4X",
        "JQUERY",
        "JSON",
        "AJAX",
        "Node",
        "js",
        "Web",
        "Services",
        "XML",
        "JavaBeans",
        "JavaScript",
        "Apache",
        "Maven",
        "Gradle",
        "JUnit",
        "HTMLUNIT",
        "XSLT",
        "HTMLDHTML",
        "JIRA",
        "Java",
        "UI",
        "Developer",
        "TMobile",
        "Atlanta",
        "GA",
        "January",
        "April",
        "Description",
        "Americas",
        "Uncarrier",
        "TMobile",
        "US",
        "Inc",
        "way",
        "consumers",
        "businesses",
        "services",
        "product",
        "service",
        "innovation",
        "TMobile",
        "products",
        "banking",
        "TMobile",
        "Visa",
        "card",
        "banking",
        "features",
        "phone",
        "money",
        "management",
        "application",
        "reducedfee",
        "TMobile",
        "customers",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "Agile",
        "Software",
        "Development",
        "Methodology",
        "TestDriven",
        "Development",
        "TDD",
        "application",
        "activities",
        "Daily",
        "Scrum",
        "Meetings",
        "Developed",
        "Customer",
        "GUI",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "AJAX",
        "JQuery",
        "Backbone",
        "JS",
        "complexities",
        "application",
        "page",
        "application",
        "models",
        "custom",
        "events",
        "views",
        "event",
        "BackboneJS",
        "framework",
        "Backbone",
        "JS",
        "Spring",
        "MVC",
        "framework",
        "data",
        "access",
        "SOAP",
        "web",
        "services",
        "approach",
        "hibernate",
        "Oracle",
        "clients",
        "JAXWS",
        "Spring",
        "Batch",
        "Applications",
        "data",
        "files",
        "spring",
        "batch",
        "framework",
        "data",
        "databases",
        "spring",
        "batch",
        "framework",
        "custom",
        "readers",
        "writers",
        "application",
        "Java",
        "EE",
        "components",
        "Spring",
        "IOC",
        "Dependency",
        "Injection",
        "Spring",
        "Transactions",
        "Spring",
        "security",
        "models",
        "spring",
        "batch",
        "jobs",
        "reliability",
        "robustness",
        "processing",
        "Spring",
        "Batch",
        "Spring",
        "Batch",
        "batch",
        "processing",
        "requests",
        "clients",
        "Spring",
        "Batch",
        "spring",
        "batch",
        "jobs",
        "requirements",
        "reliability",
        "robustness",
        "traceability",
        "processing",
        "amount",
        "data",
        "experience",
        "batch",
        "jobs",
        "source",
        "framework",
        "Spring",
        "Batch",
        "framework",
        "application",
        "Frameworks",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "functionality",
        "Spring",
        "AOP",
        "Ehcache",
        "framework",
        "hibernate",
        "Spring",
        "Security",
        "user",
        "Authentication",
        "authorization",
        "Jersey",
        "REST",
        "APIs",
        "services",
        "serverside",
        "code",
        "IBATIS",
        "DAO",
        "Framework",
        "procedures",
        "SQL",
        "queries",
        "Created",
        "Data",
        "Access",
        "data",
        "database",
        "IBATIS",
        "Implemented",
        "Web",
        "service",
        "SOAP",
        "JAXWS",
        "frameworks",
        "Apache",
        "Camel",
        "technology",
        "glue",
        "start",
        "points",
        "transference",
        "messages",
        "sources",
        "destinations",
        "Mockito",
        "unit",
        "development",
        "Testdriven",
        "Development",
        "TDD",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "automation",
        "test",
        "cases",
        "Java",
        "selenium",
        "Eclipse",
        "web",
        "application",
        "Apache",
        "Maven",
        "tool",
        "build",
        "process",
        "Jenkins",
        "CI",
        "integration",
        "Environment",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "AJAX",
        "JQuery",
        "Bootstrap",
        "Backbone",
        "JS",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Spring",
        "Batch",
        "Jersey",
        "IBATIS",
        "SQL",
        "SOAP",
        "JAXWS",
        "Apache",
        "Maven",
        "Jenkins",
        "SVN",
        "Java",
        "UI",
        "Developer",
        "CVS",
        "Health",
        "Dallas",
        "TX",
        "September",
        "January",
        "Description",
        "CVS",
        "Health",
        "Corporation",
        "CVS",
        "Corporation",
        "CVS",
        "Caremark",
        "Corporation",
        "pharmacy",
        "health",
        "care",
        "company",
        "Woonsocket",
        "Rhode",
        "Island",
        "company",
        "partners",
        "venture",
        "parent",
        "company",
        "Mark",
        "Steven",
        "Inc",
        "retailers",
        "health",
        "beauty",
        "aid",
        "product",
        "lines",
        "Responsibilities",
        "design",
        "application",
        "framework",
        "J2EE",
        "guidelines",
        "J2EE",
        "design",
        "patterns",
        "ObjectOriented",
        "Analysis",
        "Design",
        "OOAD",
        "methodologies",
        "Developed",
        "UI",
        "HTML5",
        "JavaScript",
        "CSS3",
        "AJAX",
        "Bootstrap",
        "framework",
        "JSP",
        "crossbrowser",
        "functionality",
        "user",
        "interface",
        "Performed",
        "Front",
        "end",
        "validations",
        "screen",
        "JavaScript",
        "Angular",
        "Js",
        "directives",
        "core",
        "frontend",
        "code",
        "call",
        "JS",
        "JQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "Restful",
        "Server",
        "result",
        "web",
        "pages",
        "JS",
        "controller",
        "directives",
        "services",
        "route",
        "providers",
        "application",
        "Nodejs",
        "platform",
        "JavaScript",
        "programming",
        "data",
        "transformation",
        "business",
        "rules",
        "code",
        "format",
        "format",
        "Nodejs",
        "Nodejs",
        "EXPRESS",
        "Server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "JS",
        "Oracle",
        "Used",
        "Reacts",
        "views",
        "Document",
        "object",
        "model",
        "Springs",
        "ORM",
        "DAO",
        "layers",
        "abstraction",
        "business",
        "database",
        "code",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Singleton",
        "Factory",
        "Service",
        "Locator",
        "DAO",
        "Wrote",
        "services",
        "user",
        "data",
        "Mongo",
        "DB",
        "application",
        "devices",
        "mapping",
        "Java",
        "database",
        "tables",
        "Hibernate",
        "Java",
        "annotations",
        "JDBC",
        "connectivity",
        "data",
        "Oracle",
        "database",
        "hibernate",
        "persistence",
        "data",
        "Oracle",
        "database",
        "HQL",
        "data",
        "database",
        "Jboss",
        "Application",
        "Server",
        "Experience",
        "Grunt",
        "magnification",
        "JavaScript",
        "compilation",
        "files",
        "CSS",
        "application",
        "Eclipse",
        "IDE",
        "code",
        "development",
        "GIT",
        "code",
        "JENKINS",
        "integration",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "test",
        "case",
        "part",
        "Java",
        "methods",
        "Cucumber",
        "test",
        "cases",
        "modules",
        "test",
        "cases",
        "web",
        "application",
        "Selenium",
        "ApacheMaven",
        "software",
        "tool",
        "errors",
        "messages",
        "JENKINS",
        "integration",
        "JIRA",
        "bugs",
        "Environment",
        "JavaJ2EE",
        "D",
        "Design",
        "Pattern",
        "Servlets",
        "Hibernate",
        "JavaScript",
        "Ajax",
        "JQuery",
        "Web",
        "services",
        "React",
        "JS",
        "JS",
        "JSON",
        "JUnit",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Restful",
        "API",
        "JENKINS",
        "GRUNT",
        "GIT",
        "LESS",
        "Jenkins",
        "Selenium",
        "JIRA",
        "Backbonejs",
        "Eclipse",
        "Education",
        "Bachelors",
        "Skills",
        "Eclipse",
        "Ejb",
        "Java",
        "Hibernate",
        "Spring",
        "Jms",
        "jquery",
        "Jsf",
        "Jsp",
        "Servlets",
        "Struts",
        "C",
        "Design",
        "Git",
        "Nodejs",
        "Oop",
        "Svn",
        "Xml",
        "Dhtml",
        "Security",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Java",
        "Java",
        "Swings",
        "Maven",
        "MethodologiesDesign",
        "OOP",
        "UML",
        "MVC",
        "DAO",
        "Factory",
        "pattern",
        "Agile",
        "Scrum",
        "Test",
        "Driven",
        "Development",
        "Web",
        "Technologies",
        "JSP",
        "Servlets",
        "Angular",
        "JS",
        "JQuery",
        "ReactJS",
        "NodeJS",
        "EJB",
        "Hibernate",
        "Struts",
        "Spring",
        "JDBC",
        "HTML5",
        "DHTML",
        "XML",
        "CSS3",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "Apache",
        "Camel",
        "Kafka",
        "Spring",
        "Boot",
        "Expressjs",
        "Web",
        "Services",
        "SOAP",
        "Restful",
        "Web",
        "Services",
        "Tools",
        "Framework",
        "Struts",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "JMS",
        "JSF",
        "Mockito",
        "SOA",
        "JSP",
        "SOAP",
        "UI",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "ApplicationWeb",
        "Servers",
        "Apache",
        "Tomcat",
        "Server",
        "IDE",
        "Tools",
        "Eclipse",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "Net",
        "Beans",
        "STS",
        "Oracle",
        "g",
        "SQL",
        "SQL",
        "Mongo",
        "DB",
        "Cloud",
        "Version",
        "Control",
        "Tools",
        "SVN",
        "Clear",
        "Case",
        "Git",
        "Operating",
        "System",
        "Linux",
        "Unix",
        "Mac",
        "Solaris"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:55:02.222577",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Caterpillar Peoria IL Over 8 years of experience in analysis design implementation and testing of ObjectOriented Applications in ClientServer environments using JavaJ2EE Experienced in Java Webbased Desktop Based Development with Concepts of Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experience working with various Software Development Life Cycle SDLC methodologies based on Agile Scrum Waterfall Model Iteration Experienced in Middleware persistence framework like HibernateJPA for mapping Java classes to thedatabase and using Hibernate Query Language HQL Experience in working with cuttingedge frontend technologiesframework and libraries like JQuery Prototype DHTML JSON DOM CSS XML AJAX Extensive experience on Angular JS MVC Framework Angular JS Tables Modules Angular Filters and Angular Events Strong experience in developing web applications using various Spring framework features like Spring IOC Spring AOP Spring JDBC Spring ORM Spring Security Spring Boot and Spring MVC Expertise in databases such as My SQL Postgre SQL and IBM DB2 databases to manage tables views indexes sequences stored procedures functions triggers and packages Experience in developing User Interface UI rich Web Applications using Front EndUI Technologies like HTML5 CSS3LESS JavaScript JQuery Bootstrap JSP XML AJAX that follows W3C Web Standards and are browser compatible Experience with features of Angular 4 like Modules which configure the injector and the compiler and help organize related things together Extensive knowledge in developing applications on a single page SPAs using various JavaScript frameworks like Angular JS Backbonejs React JS Node JS and Bootstrap Having strong Experience with Web Service Applications using User Interface UI Technologies like Object Oriented JavaScript JavaScript UI LibrariesFrameworks Angular JS Angular 2 4 React JS Node JS Twitter Bootstrap HTML5 CSS3 DHTML XML XSLT AJAX JQuery JSON Experience in all phases of Software Development Life Cycle SDLC including Analysis Design Development Documentation Testing Deployment Version Control and production support Proficient in building Web User Interface UI using HTML5 CSS3 DHTML and JavaScript that follows W3C Web Standards and are browser compatible Developed and updated web pages quickly and effectively using HTML 5 CSS3 JavaScript and JQuery with the webpage crosses browser compatibility Experienced in implementing Serviceoriented architecture and Web Services using SOAP RESTFUL Experience with Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experience in developing and a solid understanding of Service Oriented Architecture and Micro services Architecture Proven experience in writing Queries Stored Procedures Triggers Cursors Functions and Packages using TOAD Worked in Building application platforms in the Cloud by leveraging Amazon Web Services open source technologies best engineering practices of CICD Expertise in using IDEs like Eclipse Net Beans and RAD for developing and debugging rapid web and enterprise Java applications Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Goal oriented individual with excellent analytical problemsolving communication and interpersonal skills with the ability to interact with individuals at all levels and work independently Work Experience Full Stack Java Developer Caterpillar Peoria IL July 2018 to Present Description Caterpillar Inc has been making sustainable progress possible and driving positive change on every continent Customers turn to Caterpillar to help them develop infrastructure energy and natural resource assets Caterpillar is the worlds leading manufacturer of construction and mining equipment diesel and natural gas engines industrial gas turbines and dieselelectric locomotives Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Designed and Developed application based on Micro service Oriented Architecture using Spring Boot and node with Express JS Analyzed business requirements to translate functional requirements into technical requirements and develop web application using Mongo DB Express ReactjsRedux and Nodejs MERN stack Implemented React JS with Redux architecture for fetching asynchronous data from the Restful webservices Worked in using React JS components of NPM Node packaging manager such as Forms Events Keys Router Animations and Flux concept Responsible for React UI and architecture building components library including Tree SlideView and Table Grid Created single page web application by creating templates with HTML5for pages CSS3styling Bootstrap speed development responsive consistency ES6 and responsive components by using event binding and routing services for great user experience with Angular 40 Created Reusable Angular 40 components using Typescript and services are obtained using Dependency Injection to consume REST APIs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Worked with Angular 40 using Angular CLI and generated various components routes services pipes and structured the application code using Componentbased architecture Created many custom filters using Angular 40 and an external module to manipulate the routing Extensively worked in writing minimal code in building reusable forms with their validations using React JS Used React JS to create Controllers to handle events triggered by clients and send a request to the server Works using React JS components Forms Events Keys Router Animations Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular 40 and Mocha and Chai for reacting testing Created Node JS services using Express JS which are consumed by Angular 4 components on the client side Developed Micro services using Spring Boot Spring Cloud with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as a message broker Used Spring Boot which is radically faster in building cloud Micro services and develop a Springbased application with very less configuration Used Spring Boot framework to write Presentation Layer Business Layers and Controller Servlets Used Spring Boot Actuator to externalize applications configuration properties for different environments Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Build a prototype for various required services such as Scheduling Logging and Notification Service using thirdparty Node JS based JavaScript library Experienced in all phases of UIUX implementation of a Travel Search and Booking web application including Design Prototyping Development and testing phases Met with the project manager frequently for reviewing project goals and for creating proposals for future developments and researching their fields for UI design Utilized various JavaScript and JQuery libraries AJAX for form validation and other interactive features Utilized Swagger framework for design documentation testing and deployment of REST APIs in Spring Boot Used Hibernate for Object Relational Mapping ORM to interact with the Oracle database Installed configured and administration of No SQL database clusters in AWS Virtual Private Cloud Network Created architecture stack for data access with No SQL database Mongo DB Unstructured data was handled using Mongo DB and used Mongoose Connector for connecting to the database Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Worked on the ELK Elastic Search Log stash Kibana stack to facilitate information processing and sharing Designed built and deployed a multitude application utilizing the Amazon Web Services stack Including EC2 S3 SQS focusing on highavailability fault tolerance and autoscaling Developed a thirdparty API with OAuth 20 authentication and used as a gateway for all the web services Used GIT as version control and regularly pushed the code to BitBucket and used Jenkins for Continuous Integration and Deployment CICD EnvironmentHTML5 CSS3 Bootstrap Angular 40 Type Script REACT JS ES6 Jasmine Karma Mocha Chai Spring Boot Nodejs Express JS Hibernate Mongo DB Apache Kafka ELK Docker AWS EC2 Jenkins Swagger OAuth 20 Full Stack Java Developer Ernest and young Atlanta GA April 2016 to July 2018 Description At EY our purpose is Building a better working world The insights and quality services we provide help build trust and confidence in the capital markets and in economies the world over We develop outstanding leaders who team to deliver on our promises to all of our stakeholders In so doing we play a critical role in building a better working world for our people for our clients and for our communities Responsibilities Experience working in Agile development following SCRUM process Sprint and daily standup meetings Designed and developed the UI using spring view component HTML 5 CSS 3 Bootstrap and Angular JS 40 Utilized MEAN stack REST design pattern MVC framework and Single Page Application framework based on Node JS Transaction management is done by JTA API specification by implementing them Worked with Angular 4 directives components pipes injectables Expertise in application development using Java 8 features like Lambda Expressions for array operations Collections J2EE Annotations Hibernate JUnit Ant Maven CSS XML Developed Spring Features like Spring DAO Spring Boot Spring Batch Spring Integration Spring frameworks Used Spring framework including Spring coreIoC Spring AOP Spring ORM Spring Batch Spring Security and implemented the authentication authorization and accesscontrol features by using Spring Security Well exposed to Hibernate and spring and thorough knowledge on Hibernate configuration file Used Hibernate for accessing the database and mapping the entities by using annotations Used Hibernate as an ORM tool to store the persistent data and for communicating with the Oracle database Designing and coding Procedures Triggers Cursors Functions using PLSQL Oracle10g11g and SQL Servers Composed and executed Mongo DB scripts and queries to fetch and test data from No SQL databases Used a Micro service architecture with Spring Bootbased services interacting through a combination of REST Involved in developing Restful Web Services with JAXRS to provide functionality for future development Developed REST Web Services clients to consume those Web Services as well another enterprise Wide Web Services Experienced in transferring data from different data sources into HDFS systems using Kafka producers consumers and Kafka brokers Worked on creating Kafka topics writing custom petitioner classes Deployed the Application into Docker container and made easily accessible at runtime using cloud services like AWS Netflix Eureka Spring Hystrix as the fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Involved in Docker containerizing the applications and pushing them to quay and deploying on kubernetes Ensure the deliverables meets the design requirements and technical specifications Defined strategic initiatives on Continuous Integration and Delivery CICD model in the AGILE development environment to help respond quickly to business needs Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Used GIT as version management JIRA for defect management system Analyzing Maven dependency in the base code to annotate the dependency on Spring Boot application into Gradle and Developed Unit test cases using JUnit Mockito and Easy mock Jenkins Understanding big data technologies like Apache Kafka and Apache Spark Using Scala in Play framework Performed deployment of applications on Web Sphere Application Server WAS and tested Service and data access tier using TestNG and performed UI testing and frontend testing using Selenium Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment Core Java Tomcat Apache Kafka Swagger JMS J2EE Spring MVC Spring Boot Framework Micro service Mongo DB Angular 40 Spring Security Hibernate 4X JQUERY JSON AJAX Node js Web Services XML JavaBeans JavaScript Apache Maven Gradle JUnit HTMLUNIT XSLT HTMLDHTML JIRA Java UI Developer TMobile Atlanta GA January 2014 to April 2016 Description As Americas Uncarrier TMobile US Inc is redefining the way consumers and businesses buy wireless services through leading product and service innovation TMobile expand its products into banking TMobile would provide Visa card with banking features and a smart phone money management application with reducedfee for TMobile wireless customers Responsibilities Involved in analysis specification design implementation and testing phases of the Software Development Life Cycle SDLC based on the functional requirements Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Participated in scrum related activities and Daily Scrum Meetings Developed Customer GUI using HTML CSS LESS JavaScript Bootstrap JSON AJAX JQuery and Backbone JS to simplify the complexities of the application and to create a single page application Created several models with keyvalue binding custom events views and declarative event handling using the BackboneJS framework Implementing the Backbone JS and Spring MVC framework for data access SOAP web services were developed in a topdown approach using hibernate and Oracle and the clients were generated with JAXWS Designed and developed Spring Batch Applications to read data from flat files and databases Used spring batch framework to update data in databases Used spring batch framework to create custom readers and writers to work with the application Implemented Java EE components using Spring IOC Dependency Injection Spring Transactions and Spring security models Created spring batch jobs for reliability robustness and essential automatic processing using Spring Batch Used Spring Batch to develop batch processing to handle bulk requests from the clients Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of a large amount of data Extensive experience in developing batch jobs using an open source framework like Spring Batch framework Developed application using Frameworks Spring MVC Spring IOC Spring AOP Segregated functionality related to caching using Spring AOP and Ehcache framework using hibernate Used Spring Security for user Authentication and authorization Extensively worked on Jersey for creating REST APIs services Responsible for writingreviewing serverside code using IBATIS and DAO Framework for executing stored procedures and complicated SQL queries Created Data Access Objects to fetch data from the database and integrate them with IBATIS Implemented Web service calls using SOAP JAXWS frameworks Used Apache Camel for messaging technology glue with routing It joins together messaging start and end points allowing the transference of messages from different sources to different destinations Used Mockito for unit tests development of Testdriven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Developed automation test cases using Java and selenium on Eclipse for web 20 Ajax application Used Apache Maven builds tool to automate the build process and Jenkins CI for continuous integration Environment HTML CSS LESS JavaScript JSON AJAX JQuery Bootstrap Backbone JS Spring MVC Spring IOC Spring AOP Spring Security Spring Batch Jersey IBATIS My SQL SOAP JAXWS Apache Maven Jenkins SVN Java UI Developer CVS Health Dallas TX September 2012 to January 2014 Description CVS Health Corporation previously CVS Corporation and CVS Caremark Corporation is an American retail pharmacy and health care company headquartered in Woonsocket Rhode Island The company began in 1964 with three partners who grew the venture from a parent company Mark Steven Inc that helped retailers manage their health and beauty aid product lines Responsibilities Involved in design of application framework using J2EE guidelines and different J2EE design patterns and ObjectOriented Analysis and Design OOAD methodologies Developed UI using HTML5 JavaScript CSS3 AJAX Bootstrap responsive framework and JSP for interactive crossbrowser functionality and complex user interface Performed Front end validations for the screen using JavaScript Angular Js directives and core java Developed frontend code with Ajax call in Angular JS and JQuery to retrieve data as JSON Object from controllers in backend Restful Server then display the wellorganized result in web pages by writing Angular JS controller directives services and route providers Developed the application on Nodejs platform using JavaScript programming Applied data transformation business rules to transform code from one format to another format using Nodejs Created the Nodejs EXPRESS Server to build MVC framework from frontend side Angular JS to the backend Oracle Used Reacts for rendering views and to update the Document object model dynamically Used Springs ORM and DAO layers to offer abstraction for the business from the database related code Implemented design patterns like Session Faade Singleton Factory Service Locator and DAO Wrote services to store and retrieve user data from the Mongo DB for the application on devices Involved in mapping Java objects to database tables using Hibernate and Java annotations Used JDBC connectivity for querying inserting updating deleting data from Oracle database Used hibernate to store the persistence data into the Oracle database and written HQL to access the data from the database Used Jboss as an Application Server Experience working on Grunt for magnification of JavaScript files a compilation of LESS files into CSS and for monitoring the application Used Eclipse IDE for code development along with GIT for managing the code and JENKINS for continuous integration Involved in Test Driven Development by writing JUnit test case in the coding part of Java methods Used Cucumber to write test cases for new modules Created automated test cases for the web application using Selenium Used ApacheMaven as the software build tool and Log4J for logging errors and messages Used JENKINS for continuous integration Used JIRA for tracking bugs Environment JavaJ2EE D Design Pattern Servlets Hibernate JavaScript Ajax JQuery Web services React JS Angular JS JSON JUnit HTML5 CSS3 Bootstrap Restful API JENKINS GRUNT GIT LESS Jenkins Selenium JIRA Backbonejs and Eclipse Education Bachelors Skills Eclipse Ejb Java Hibernate Spring Jms jquery Jsf Jsp Servlets Struts C Design patterns Git Nodejs Oop Svn Xml Dhtml Security Additional Information TECHNICAL SKILLS Languages C C Java Java Swings Maven MethodologiesDesign patterns OOAD OOP UML MVC DAO Factory pattern Agile Scrum Test Driven Development Web Technologies JSP Servlets Angular JS JQuery ReactJS NodeJS EJB Hibernate Struts Spring JDBC HTML5 DHTML and XML CSS3 Web Services WSDL SOAP Apache Camel Kafka Spring Boot Expressjs Web Services SOAP Restful Web Services Tools Framework Struts Hibernate Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Mockito SOA JSP reports SOAP UI Spring Boot Spring Batch Spring Security Spring Data ApplicationWeb Servers Apache Tomcat Server IDE Tools Eclipse Rational Application Developer RAD and Net Beans STS Databases Oracle 11g My SQL SQL Mongo DB Cloud AWS Version Control Tools SVN Clear Case Git Operating System Windows Linux Unix Mac Solaris",
    "unique_id": "371f81b6-92b2-4d4a-9086-f5a0efc3b969"
}