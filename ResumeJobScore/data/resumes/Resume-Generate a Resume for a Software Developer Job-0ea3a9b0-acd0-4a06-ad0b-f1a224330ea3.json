{
    "clean_data": "Sr Python Developer Sr Python span lDeveloperspan Sr Python Developer Columbus OH Software Developer Professional having more than 6 years of experience in building software application and programming Strong experience in design development and deployment and customer support and experience in Service oriented architecture Good experience in performing operations such as CRUD operations and writing complex queries with Oracle MS SQL Server and MongoDB and experience in developing web services WSDL SOAP and REST and consuming web services with python 23 programming language Experience in developing RESTful APIs using Django REST Framework consumed via Rectangular a 3rd party AngularJS service and Knowledge about setting up Python REST API Frame work using Django Experience with the data architecture including data ingestion pipeline design Hadoop information architecture data modeling data mining machine learning and advanced data processing frameworks Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front and Familiar with JSON based REST Web services and Amazon Web services Working Experience on various Python 20 and 30 packages such as NumPy SQL Alchemy big data software Matplotlib and scipy and Experienced in developing UNIX shell scripts and bash scripting Experience in Web Application Development hands on experience of PythonDjango Flask SQL Alchemy SQLite JavaScript jQuery HTML5CSS3 Bootstrap and JSONAJAX Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Cassandra Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Experience in Pythons modules NumPy Matplot for generating complex graphical data the creation of histograms and experience in working with serverside technologies including databases Restful API and MVC design patterns Experience with Django and Flask a highlevel Python Web framework and experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in Reactjs for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts and strong experience writing APIs and Web Services in PHP and Python Experience in developing web applications by following Model View Control MVC Architecture using serverside application Django and experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache and PythonPHP Architecture Expertise in software development environments with machine learning algorithms and deep learning frameworks such as TensorFlow scikitlearn Computational and Recurring Neural Network Skillful involvement in creating in python by developing softwares utilizing new tools libraries utilized Numpy SciPy Pyside Pythontwitter matplotlib Pickle MySQL to improve software development process Experienced with full software development life cycle SDLC architecting scalable platforms objectoriented programming database design and agile methodologies Authorized to work in the US for any employer Work Experience Sr Python Developer Pinterest San Francisco CA March 2018 to Present Involved in tasks Designing Developing and building a system using Python Shell Scripts Perl to automate Oracle patching Grid Patching Upgrade Migration rollback Used Python for data analytics data wrangling and extracting data using Pandas Matplotlib NumPy and SciPy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration and Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Worked with React JS components Redux Forms Events Animations and Router and Generated REST API using Flask Django Frame work and Worked on various Operating Systems like UNIX Linux Windows and MacOS Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Demonstrated experience in design and implementation of Statistical models Predictive models enterprise data model metadata solution and data life cycle management in both RDBMS Big Data environments Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark and Created Unix shell and Perl utilities for testing data parsing and manipulation Dealt with large amount of cloud data storage to Identify faces of same person from Image data storage and faces with similar features using Numpy PIL matplotlib Pandas OpenCV and Scikit learn Libraries Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest and worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Worked on virtual and physical LinuxUNIX hosts and involved in day to day administrative activities such as maintaining user accounts and providing advanced file permissions to specific users Used ReactJS to create Controllers to handle events triggered by clients and send request to server and Maintained states in the stores and dispatched the actions using redux Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Worked on PythonDjango based web application PostgreSql DB and integrations with 3rd party email messaging storage services and worked on Python OpenStack APIs and used Numpy for Numerical analysis Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib TensorFlow Jupyter Notebook and Anaconda Deployed Application using AWS EC2 Standard Deployment Techniques and Worked on Amazon web services AWS infrastructure with automation and configuration management tool such as chef Python Developer Eli Lilly San Diego CA December 2016 to February 2018 San Diego CA Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer and Worked with batch files and ran SAS programs using UNIX shell scripts Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression multivariate regression naive Bayes Random Forests Kmeans KNN for data analysis Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Worked and used shell scripting to make it easy to create scripts command and work with files directories and other shell commands Utilized Postgre SQL data warehousing programs Tableau and other dashboardvisualization tool sets for data intelligence and analysis and worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Developed crossbrowserplatform with ReactJs NodeJS jQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Built and maintained code libraries to support analytics using Numpy and SciPy and used Pygal and plotly for visualization of the data retrieved using Scrapy Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package and Engaged in understanding PHP Code and rebuild the code in Python Implemented clientside form validation to validate the user inputs before passing to backend using ES6 and ReactJS and Worked with Reactrouter JSX Babel and React bootstrap Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations and Worked with team of developers on Python applications for RISK management Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote Python modules to view and connect the Apache Cassandra instance and Involved in develop the REST Web services to expose the business methods to external services in the project Illustrated data analysis with python packages such as NumPy Matplotlib Pillow Scikit Learn and Pandas Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Python Engineer Dropbox New York NY May 2015 to June 2016 Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Reactjs for templating for faster compilation and developing reusable components and developed tools using Python Shell scripting XML to automate some of the menial tasks Worked on containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed Automation of the deployment of the Conductor application on AWS using highend AWS architectural components and Developed multithreaded standalone app in python and PHP to view performance Automated the existing scripts for performance calculations using NumPy SciPy Matplotlib and pandas Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL and Implemented clientside Interface using React JS Developed the REST API using Django for fetching the data from NoSQL MongoDB database Maintained the continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format and Used PHP language on lamp server to develop page Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities and Used PythonDjango MVC framework to design and develop the application Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used PHP to write dynamically generated pages quickly and performed Python on LINUX for execution Developed file cleaners using Python libraries and made it clean and worked on MVC architecture using PHP Python as controller Software Engineer Movado Paramus NJ January 2013 to April 2015 Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites and Implemented SOAPRESTful web services in JSON format Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format and Developed user interface using CSS PHP HTML JavaScript and jQuery Worked on several python packages like Matplotlib Pillow Numpy SQL Alchemy and sockets Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ReactJS and NodeJS and REST based API and worked on Extensive use of version controlling systems like GIT and SVN Redesign and maintain existing internal web application using HTML CSS JavaScript and jQuery React JS Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection and migrated applications to the AWS cloud Integrated RedisCache with the Djangorestframework for reading the data faster and Implemented RESTful WebServices for sending and receiving the data between multiple systems Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT and Developed multithreaded standalone applications using Python and PHP Created PHPMySQL backend for data entry from Flash and Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Developing python programs by using boto3 to implement security by using AWS Cognito service Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Education Bachelors Skills Javascript Jquery Git Android CSS MYSQL PHP python 6 years django 6 years flask 6 years mysql 6 years sql 6 years nosql 6 years HTML 5 6 years angularjs 6 years aws 6 years api 6 years numpy 6 years pandas 6 years matplotlib 6 years ajax 6 years scipy 6 years docker 6 years maven 6 years CICD 6 years jenkins 6 years spark 6 years reactjs 6 years nodejs 6 years cassandra 6 years mongodb 6 years mvc 6 years ASP",
    "entities": [
        "API Integration",
        "Resource",
        "Created Unix",
        "Spark Context",
        "AJAX",
        "jQuery Worked",
        "Identify",
        "Python Engineer Dropbox New York",
        "jQuery React JS Build",
        "PHP Code",
        "UNIX",
        "Django PostgreSQL Used Reactjs",
        "Router",
        "REST JSON",
        "JSON",
        "Created Terraform",
        "GIT Repository Setup",
        "OpenStack",
        "TensorFlow",
        "PHP Python",
        "Scrapy Wrote",
        "Operating Systems",
        "GitHub Experience",
        "Build Automation",
        "Hadoop",
        "XML",
        "Work Experience Sr Python Developer Pinterest",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "Maintained",
        "NodeJS",
        "Shell",
        "Implemented Terraform",
        "Reactjs",
        "Automated",
        "PythonDjango Flask",
        "Apache Spark",
        "Amazon",
        "Maven Repository and Deployment",
        "Bigdata Integration and Analytics",
        "Python",
        "Flask Django Frame",
        "Developed",
        "Bash",
        "Python REST API Frame",
        "Model View Control MVC Architecture",
        "Created Python",
        "Conductor",
        "Utilized",
        "Puppet",
        "Git",
        "DjangoREST",
        "PythonPHP",
        "Standard Deployment Techniques",
        "CSS PHP",
        "LAMP Linux Apache",
        "API RESTful Web Service",
        "ETL Worked",
        "Flask",
        "Rectangular",
        "Docker",
        "Python Developer Eli Lilly",
        "MVC",
        "Flask SQL Alchemy",
        "Interface",
        "SVN Redesign",
        "Spark",
        "PythonDjango",
        "GIT",
        "Pytorch TensorFlow Scikitlearn Apache Open",
        "linear",
        "Working Experience",
        "Oracle MS SQL Server",
        "API",
        "US",
        "Illustrated",
        "HTML CSS JavaScript",
        "KNN",
        "AI",
        "AWS",
        "Implemented",
        "WAMP Windows Apache",
        "PySpark",
        "React JS",
        "Worked with View Sets",
        "Web Application Development",
        "SAS",
        "PostgreSql DB",
        "San Diego CA Created",
        "SQL",
        "ReactJs Built",
        "Amazon Web Services",
        "Pandas for Statistical Analysis",
        "NLP",
        "Flash",
        "Bayes Random Forests Kmeans",
        "Built Elastic",
        "SQL Alchemy",
        "Worked with",
        "Oracle SQLite PostgreSQL MySQL DB2",
        "PHP Created PHPMySQL",
        "Pandas Implemented",
        "Computational",
        "Kubernetes Performed Automation",
        "LinuxUNIX",
        "Oracle patching Grid Patching Upgrade Migration",
        "Pandas",
        "Image",
        "ETL",
        "CRUD",
        "PythonPHP Architecture Expertise",
        "Maven",
        "Build",
        "NumPy SQL Alchemy",
        "Created UI",
        "the Silent Circle Management System SCMC",
        "Python and Flask Postgres Database Wrote Python",
        "Anaconda Deployed Application",
        "ASP",
        "Utilized PyUnit",
        "View Sets",
        "Redux Forms Events Animations",
        "REST",
        "Present Involved",
        "PHP",
        "NoSQL",
        "Tableau",
        "HTML5CSS3",
        "HTMLCSSjQuery",
        "NameNode Data",
        "Implemented RESTful WebServices",
        "Virtual DOM JSX React Native"
    ],
    "experience": "Experience in developing RESTful APIs using Django REST Framework consumed via Rectangular a 3rd party AngularJS service and Knowledge about setting up Python REST API Frame work using Django Experience with the data architecture including data ingestion pipeline design Hadoop information architecture data modeling data mining machine learning and advanced data processing frameworks Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front and Familiar with JSON based REST Web services and Amazon Web services Working Experience on various Python 20 and 30 packages such as NumPy SQL Alchemy big data software Matplotlib and scipy and Experienced in developing UNIX shell scripts and bash scripting Experience in Web Application Development hands on experience of PythonDjango Flask SQL Alchemy SQLite JavaScript jQuery HTML5CSS3 Bootstrap and JSONAJAX Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Cassandra Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Experience in Pythons modules NumPy Matplot for generating complex graphical data the creation of histograms and experience in working with serverside technologies including databases Restful API and MVC design patterns Experience with Django and Flask a highlevel Python Web framework and experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in Reactjs for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts and strong experience writing APIs and Web Services in PHP and Python Experience in developing web applications by following Model View Control MVC Architecture using serverside application Django and experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache and PythonPHP Architecture Expertise in software development environments with machine learning algorithms and deep learning frameworks such as TensorFlow scikitlearn Computational and Recurring Neural Network Skillful involvement in creating in python by developing softwares utilizing new tools libraries utilized Numpy SciPy Pyside Pythontwitter matplotlib Pickle MySQL to improve software development process Experienced with full software development life cycle SDLC architecting scalable platforms objectoriented programming database design and agile methodologies Authorized to work in the US for any employer Work Experience Sr Python Developer Pinterest San Francisco CA March 2018 to Present Involved in tasks Designing Developing and building a system using Python Shell Scripts Perl to automate Oracle patching Grid Patching Upgrade Migration rollback Used Python for data analytics data wrangling and extracting data using Pandas Matplotlib NumPy and SciPy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration and Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Worked with React JS components Redux Forms Events Animations and Router and Generated REST API using Flask Django Frame work and Worked on various Operating Systems like UNIX Linux Windows and MacOS Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Demonstrated experience in design and implementation of Statistical models Predictive models enterprise data model metadata solution and data life cycle management in both RDBMS Big Data environments Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark and Created Unix shell and Perl utilities for testing data parsing and manipulation Dealt with large amount of cloud data storage to Identify faces of same person from Image data storage and faces with similar features using Numpy PIL matplotlib Pandas OpenCV and Scikit learn Libraries Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest and worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Worked on virtual and physical LinuxUNIX hosts and involved in day to day administrative activities such as maintaining user accounts and providing advanced file permissions to specific users Used ReactJS to create Controllers to handle events triggered by clients and send request to server and Maintained states in the stores and dispatched the actions using redux Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Worked on PythonDjango based web application PostgreSql DB and integrations with 3rd party email messaging storage services and worked on Python OpenStack APIs and used Numpy for Numerical analysis Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib TensorFlow Jupyter Notebook and Anaconda Deployed Application using AWS EC2 Standard Deployment Techniques and Worked on Amazon web services AWS infrastructure with automation and configuration management tool such as chef Python Developer Eli Lilly San Diego CA December 2016 to February 2018 San Diego CA Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer and Worked with batch files and ran SAS programs using UNIX shell scripts Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression multivariate regression naive Bayes Random Forests Kmeans KNN for data analysis Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Worked and used shell scripting to make it easy to create scripts command and work with files directories and other shell commands Utilized Postgre SQL data warehousing programs Tableau and other dashboardvisualization tool sets for data intelligence and analysis and worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Developed crossbrowserplatform with ReactJs NodeJS jQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Built and maintained code libraries to support analytics using Numpy and SciPy and used Pygal and plotly for visualization of the data retrieved using Scrapy Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package and Engaged in understanding PHP Code and rebuild the code in Python Implemented clientside form validation to validate the user inputs before passing to backend using ES6 and ReactJS and Worked with Reactrouter JSX Babel and React bootstrap Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations and Worked with team of developers on Python applications for RISK management Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote Python modules to view and connect the Apache Cassandra instance and Involved in develop the REST Web services to expose the business methods to external services in the project Illustrated data analysis with python packages such as NumPy Matplotlib Pillow Scikit Learn and Pandas Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Python Engineer Dropbox New York NY May 2015 to June 2016 Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Reactjs for templating for faster compilation and developing reusable components and developed tools using Python Shell scripting XML to automate some of the menial tasks Worked on containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed Automation of the deployment of the Conductor application on AWS using highend AWS architectural components and Developed multithreaded standalone app in python and PHP to view performance Automated the existing scripts for performance calculations using NumPy SciPy Matplotlib and pandas Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL and Implemented clientside Interface using React JS Developed the REST API using Django for fetching the data from NoSQL MongoDB database Maintained the continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format and Used PHP language on lamp server to develop page Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities and Used PythonDjango MVC framework to design and develop the application Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used PHP to write dynamically generated pages quickly and performed Python on LINUX for execution Developed file cleaners using Python libraries and made it clean and worked on MVC architecture using PHP Python as controller Software Engineer Movado Paramus NJ January 2013 to April 2015 Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites and Implemented SOAPRESTful web services in JSON format Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format and Developed user interface using CSS PHP HTML JavaScript and jQuery Worked on several python packages like Matplotlib Pillow Numpy SQL Alchemy and sockets Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ReactJS and NodeJS and REST based API and worked on Extensive use of version controlling systems like GIT and SVN Redesign and maintain existing internal web application using HTML CSS JavaScript and jQuery React JS Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection and migrated applications to the AWS cloud Integrated RedisCache with the Djangorestframework for reading the data faster and Implemented RESTful WebServices for sending and receiving the data between multiple systems Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT and Developed multithreaded standalone applications using Python and PHP Created PHPMySQL backend for data entry from Flash and Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Developing python programs by using boto3 to implement security by using AWS Cognito service Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Education Bachelors Skills Javascript Jquery Git Android CSS MYSQL PHP python 6 years django 6 years flask 6 years mysql 6 years sql 6 years nosql 6 years HTML 5 6 years angularjs 6 years aws 6 years api 6 years numpy 6 years pandas 6 years matplotlib 6 years ajax 6 years scipy 6 years docker 6 years maven 6 years CICD 6 years jenkins 6 years spark 6 years reactjs 6 years nodejs 6 years cassandra 6 years mongodb 6 years mvc 6 years ASP",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "Python",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Columbus",
        "OH",
        "Software",
        "Developer",
        "Professional",
        "years",
        "experience",
        "software",
        "application",
        "experience",
        "design",
        "development",
        "deployment",
        "customer",
        "support",
        "experience",
        "Service",
        "architecture",
        "experience",
        "operations",
        "CRUD",
        "operations",
        "queries",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "MongoDB",
        "experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "Experience",
        "APIs",
        "Django",
        "REST",
        "Framework",
        "Rectangular",
        "party",
        "AngularJS",
        "service",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Experience",
        "data",
        "architecture",
        "data",
        "ingestion",
        "pipeline",
        "design",
        "Hadoop",
        "information",
        "architecture",
        "data",
        "data",
        "mining",
        "machine",
        "learning",
        "data",
        "processing",
        "frameworks",
        "Hands",
        "experience",
        "Build",
        "Automation",
        "tool",
        "Maven",
        "version",
        "control",
        "tools",
        "Git",
        "GitHub",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "Front",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "Working",
        "Experience",
        "Python",
        "packages",
        "NumPy",
        "SQL",
        "Alchemy",
        "data",
        "software",
        "Matplotlib",
        "scipy",
        "UNIX",
        "shell",
        "scripts",
        "bash",
        "Experience",
        "Web",
        "Application",
        "Development",
        "hands",
        "experience",
        "PythonDjango",
        "Flask",
        "SQL",
        "Alchemy",
        "SQLite",
        "JavaScript",
        "jQuery",
        "HTML5CSS3",
        "Bootstrap",
        "JSONAJAX",
        "Experience",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "databases",
        "MongoDB",
        "Cassandra",
        "Proficient",
        "structures",
        "data",
        "range",
        "data",
        "science",
        "programming",
        "languages",
        "data",
        "tools",
        "R",
        "Python",
        "Spark",
        "SQL",
        "Scikit",
        "Learn",
        "Hadoop",
        "MapReduce",
        "Experience",
        "Pythons",
        "modules",
        "NumPy",
        "Matplot",
        "data",
        "creation",
        "histograms",
        "experience",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "experience",
        "data",
        "Bigdata",
        "Integration",
        "Analytics",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "Kafka",
        "Storm",
        "Experience",
        "Reactjs",
        "UIs",
        "Oneway",
        "data",
        "DOM",
        "JSX",
        "React",
        "concepts",
        "experience",
        "APIs",
        "Web",
        "Services",
        "PHP",
        "Python",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Architecture",
        "serverside",
        "application",
        "Django",
        "WAMP",
        "Windows",
        "Apache",
        "MySQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "PythonPHP",
        "Architecture",
        "Expertise",
        "software",
        "development",
        "environments",
        "machine",
        "algorithms",
        "frameworks",
        "TensorFlow",
        "Computational",
        "Recurring",
        "Neural",
        "Network",
        "involvement",
        "python",
        "softwares",
        "tools",
        "libraries",
        "Numpy",
        "SciPy",
        "Pyside",
        "Pythontwitter",
        "Pickle",
        "MySQL",
        "software",
        "development",
        "process",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Pinterest",
        "San",
        "Francisco",
        "CA",
        "March",
        "Present",
        "tasks",
        "Designing",
        "Developing",
        "system",
        "Python",
        "Shell",
        "Scripts",
        "Perl",
        "Oracle",
        "Grid",
        "Patching",
        "Upgrade",
        "Migration",
        "rollback",
        "Python",
        "data",
        "analytics",
        "data",
        "data",
        "Pandas",
        "Matplotlib",
        "NumPy",
        "SciPy",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Worked",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "strings",
        "React",
        "JS",
        "components",
        "Redux",
        "Forms",
        "Events",
        "Animations",
        "Router",
        "Generated",
        "REST",
        "API",
        "Flask",
        "Django",
        "Frame",
        "work",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Windows",
        "MacOS",
        "Designed",
        "source",
        "AI",
        "Pytorch",
        "TensorFlow",
        "Scikitlearn",
        "Apache",
        "Open",
        "Source",
        "Kafka",
        "Storm",
        "Spark",
        "NLP",
        "ML",
        "Algorithms",
        "experience",
        "design",
        "implementation",
        "models",
        "models",
        "enterprise",
        "data",
        "model",
        "metadata",
        "solution",
        "data",
        "life",
        "cycle",
        "management",
        "Big",
        "Data",
        "environments",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "PySpark",
        "Created",
        "Unix",
        "shell",
        "Perl",
        "utilities",
        "data",
        "manipulation",
        "amount",
        "cloud",
        "data",
        "storage",
        "faces",
        "person",
        "Image",
        "data",
        "storage",
        "features",
        "Numpy",
        "PIL",
        "matplotlib",
        "Pandas",
        "Scikit",
        "Libraries",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "APIs",
        "Python",
        "Flask",
        "SQL",
        "Alchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "UNIX",
        "shell",
        "scripts",
        "sessions",
        "testing",
        "process",
        "ETL",
        "hosts",
        "day",
        "day",
        "activities",
        "user",
        "accounts",
        "file",
        "permissions",
        "users",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "states",
        "stores",
        "actions",
        "redux",
        "Spark",
        "performance",
        "optimization",
        "algorithms",
        "Hadoop",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "Spark",
        "YARN",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "MongoDB",
        "PythonDjango",
        "web",
        "application",
        "PostgreSql",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "Matplotlib",
        "TensorFlow",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "Deployed",
        "Application",
        "AWS",
        "EC2",
        "Standard",
        "Deployment",
        "Techniques",
        "Worked",
        "Amazon",
        "web",
        "services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tool",
        "chef",
        "Python",
        "Developer",
        "Eli",
        "Lilly",
        "San",
        "Diego",
        "CA",
        "December",
        "February",
        "San",
        "Diego",
        "CA",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "batch",
        "files",
        "SAS",
        "programs",
        "UNIX",
        "shell",
        "scripts",
        "Pandas",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Scikitlearn",
        "Python",
        "machine",
        "algorithms",
        "machine",
        "learning",
        "algorithms",
        "linear",
        "regression",
        "multivariate",
        "regression",
        "Bayes",
        "Random",
        "Forests",
        "Kmeans",
        "KNN",
        "data",
        "analysis",
        "integration",
        "methodologies",
        "client",
        "web",
        "portals",
        "software",
        "infrastructure",
        "APIs",
        "vendor",
        "frameworks",
        "shell",
        "scripting",
        "scripts",
        "command",
        "files",
        "directories",
        "shell",
        "commands",
        "Postgre",
        "SQL",
        "data",
        "warehousing",
        "programs",
        "Tableau",
        "dashboardvisualization",
        "tool",
        "sets",
        "data",
        "intelligence",
        "analysis",
        "Hadoop",
        "architecture",
        "daemons",
        "Hadoop",
        "NameNode",
        "Data",
        "Node",
        "Job",
        "Tracker",
        "Task",
        "Tracker",
        "Resource",
        "Manager",
        "crossbrowserplatform",
        "ReactJs",
        "NodeJS",
        "jQuery",
        "AJAX",
        "HTML5CSS3",
        "design",
        "specs",
        "page",
        "layout",
        "code",
        "standards",
        "UI",
        "scratch",
        "ReactJs",
        "code",
        "libraries",
        "analytics",
        "Numpy",
        "SciPy",
        "Pygal",
        "visualization",
        "data",
        "Scrapy",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "PHP",
        "Code",
        "code",
        "Python",
        "form",
        "validation",
        "user",
        "ES6",
        "ReactJS",
        "Reactrouter",
        "JSX",
        "Babel",
        "React",
        "bootstrap",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "REST",
        "Web",
        "services",
        "business",
        "methods",
        "services",
        "project",
        "data",
        "analysis",
        "packages",
        "NumPy",
        "Matplotlib",
        "Pillow",
        "Scikit",
        "Learn",
        "Pandas",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Engineer",
        "Dropbox",
        "New",
        "York",
        "NY",
        "May",
        "June",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "Reactjs",
        "compilation",
        "components",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "Performed",
        "Automation",
        "deployment",
        "Conductor",
        "application",
        "AWS",
        "highend",
        "AWS",
        "components",
        "Developed",
        "app",
        "python",
        "PHP",
        "performance",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "Postgre",
        "SQL",
        "clientside",
        "Interface",
        "React",
        "JS",
        "REST",
        "API",
        "Django",
        "data",
        "NoSQL",
        "database",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "Database",
        "APIs",
        "database",
        "workflows",
        "Python",
        "scripts",
        "UNIX",
        "shell",
        "scripting",
        "development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "PHP",
        "language",
        "lamp",
        "server",
        "page",
        "Pandas",
        "Statistical",
        "Analysis",
        "application",
        "Numpy",
        "math",
        "functionalities",
        "PythonDjango",
        "MVC",
        "framework",
        "application",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "PHP",
        "pages",
        "Python",
        "LINUX",
        "execution",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Software",
        "Engineer",
        "Movado",
        "Paramus",
        "NJ",
        "January",
        "April",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "web",
        "services",
        "format",
        "development",
        "RESTful",
        "Web",
        "Services",
        "data",
        "interface",
        "format",
        "user",
        "interface",
        "CSS",
        "PHP",
        "HTML",
        "JavaScript",
        "jQuery",
        "python",
        "packages",
        "Matplotlib",
        "Pillow",
        "Numpy",
        "SQL",
        "Alchemy",
        "sockets",
        "search",
        "stash",
        "Kibana",
        "ELK",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "function",
        "CRUD",
        "applications",
        "MERN",
        "stack",
        "MongoDB",
        "ReactJS",
        "NodeJS",
        "REST",
        "API",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "Redesign",
        "web",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "React",
        "JS",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "applications",
        "AWS",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "WebServices",
        "data",
        "systems",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "Developed",
        "applications",
        "Python",
        "PHP",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Consumed",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Angular",
        "Working",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "programs",
        "boto3",
        "security",
        "AWS",
        "Cognito",
        "service",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Elasticsearch",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "Education",
        "Bachelors",
        "Skills",
        "Javascript",
        "Jquery",
        "Git",
        "Android",
        "CSS",
        "MYSQL",
        "PHP",
        "years",
        "django",
        "years",
        "flask",
        "years",
        "mysql",
        "years",
        "years",
        "nosql",
        "years",
        "HTML",
        "years",
        "angularjs",
        "years",
        "aws",
        "years",
        "api",
        "years",
        "years",
        "years",
        "matplotlib",
        "years",
        "years",
        "years",
        "docker",
        "years",
        "years",
        "CICD",
        "years",
        "jenkins",
        "years",
        "spark",
        "years",
        "reactjs",
        "years",
        "years",
        "cassandra",
        "years",
        "mongodb",
        "years",
        "mvc",
        "years",
        "ASP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:12:47.442566",
    "resume_data": "Sr Python Developer Sr Python span lDeveloperspan Sr Python Developer Columbus OH Software Developer Professional having more than 6 years of experience in building software application and programming Strong experience in design development and deployment and customer support and experience in Service oriented architecture Good experience in performing operations such as CRUD operations and writing complex queries with Oracle MS SQL Server and MongoDB and experience in developing web services WSDL SOAP and REST and consuming web services with python 23 programming language Experience in developing RESTful APIs using Django REST Framework consumed via Rectangular a 3rd party AngularJS service and Knowledge about setting up Python REST API Frame work using Django Experience with the data architecture including data ingestion pipeline design Hadoop information architecture data modeling data mining machine learning and advanced data processing frameworks Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front and Familiar with JSON based REST Web services and Amazon Web services Working Experience on various Python 20 and 30 packages such as NumPy SQL Alchemy big data software Matplotlib and scipy and Experienced in developing UNIX shell scripts and bash scripting Experience in Web Application Development hands on experience of PythonDjango Flask SQL Alchemy SQLite JavaScript jQuery HTML5CSS3 Bootstrap and JSONAJAX Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Cassandra Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Experience in Pythons modules NumPy Matplot for generating complex graphical data the creation of histograms and experience in working with serverside technologies including databases Restful API and MVC design patterns Experience with Django and Flask a highlevel Python Web framework and experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in Reactjs for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts and strong experience writing APIs and Web Services in PHP and Python Experience in developing web applications by following Model View Control MVC Architecture using serverside application Django and experienced with WAMP Windows Apache MySQL and PythonPHP and LAMP Linux Apache and PythonPHP Architecture Expertise in software development environments with machine learning algorithms and deep learning frameworks such as TensorFlow scikitlearn Computational and Recurring Neural Network Skillful involvement in creating in python by developing softwares utilizing new tools libraries utilized Numpy SciPy Pyside Pythontwitter matplotlib Pickle MySQL to improve software development process Experienced with full software development life cycle SDLC architecting scalable platforms objectoriented programming database design and agile methodologies Authorized to work in the US for any employer Work Experience Sr Python Developer Pinterest San Francisco CA March 2018 to Present Involved in tasks Designing Developing and building a system using Python Shell Scripts Perl to automate Oracle patching Grid Patching Upgrade Migration rollback Used Python for data analytics data wrangling and extracting data using Pandas Matplotlib NumPy and SciPy Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration and Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Worked with React JS components Redux Forms Events Animations and Router and Generated REST API using Flask Django Frame work and Worked on various Operating Systems like UNIX Linux Windows and MacOS Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Demonstrated experience in design and implementation of Statistical models Predictive models enterprise data model metadata solution and data life cycle management in both RDBMS Big Data environments Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark and Created Unix shell and Perl utilities for testing data parsing and manipulation Dealt with large amount of cloud data storage to Identify faces of same person from Image data storage and faces with similar features using Numpy PIL matplotlib Pandas OpenCV and Scikit learn Libraries Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest and worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Worked on virtual and physical LinuxUNIX hosts and involved in day to day administrative activities such as maintaining user accounts and providing advanced file permissions to specific users Used ReactJS to create Controllers to handle events triggered by clients and send request to server and Maintained states in the stores and dispatched the actions using redux Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Worked on PythonDjango based web application PostgreSql DB and integrations with 3rd party email messaging storage services and worked on Python OpenStack APIs and used Numpy for Numerical analysis Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib TensorFlow Jupyter Notebook and Anaconda Deployed Application using AWS EC2 Standard Deployment Techniques and Worked on Amazon web services AWS infrastructure with automation and configuration management tool such as chef Python Developer Eli Lilly San Diego CA December 2016 to February 2018 San Diego CA Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer and Worked with batch files and ran SAS programs using UNIX shell scripts Used Pandas NumPy seaborn SciPy Matplotlib Scikitlearn in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression multivariate regression naive Bayes Random Forests Kmeans KNN for data analysis Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Worked and used shell scripting to make it easy to create scripts command and work with files directories and other shell commands Utilized Postgre SQL data warehousing programs Tableau and other dashboardvisualization tool sets for data intelligence and analysis and worked with Hadoop architecture and the daemons of Hadoop including NameNode Data Node Job Tracker Task Tracker and Resource Manager Developed crossbrowserplatform with ReactJs NodeJS jQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Built and maintained code libraries to support analytics using Numpy and SciPy and used Pygal and plotly for visualization of the data retrieved using Scrapy Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package and Engaged in understanding PHP Code and rebuild the code in Python Implemented clientside form validation to validate the user inputs before passing to backend using ES6 and ReactJS and Worked with Reactrouter JSX Babel and React bootstrap Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations and Worked with team of developers on Python applications for RISK management Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote Python modules to view and connect the Apache Cassandra instance and Involved in develop the REST Web services to expose the business methods to external services in the project Illustrated data analysis with python packages such as NumPy Matplotlib Pillow Scikit Learn and Pandas Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Python Engineer Dropbox New York NY May 2015 to June 2016 Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Used Reactjs for templating for faster compilation and developing reusable components and developed tools using Python Shell scripting XML to automate some of the menial tasks Worked on containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed Automation of the deployment of the Conductor application on AWS using highend AWS architectural components and Developed multithreaded standalone app in python and PHP to view performance Automated the existing scripts for performance calculations using NumPy SciPy Matplotlib and pandas Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL and Implemented clientside Interface using React JS Developed the REST API using Django for fetching the data from NoSQL MongoDB database Maintained the continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format and Used PHP language on lamp server to develop page Used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities and Used PythonDjango MVC framework to design and develop the application Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used PHP to write dynamically generated pages quickly and performed Python on LINUX for execution Developed file cleaners using Python libraries and made it clean and worked on MVC architecture using PHP Python as controller Software Engineer Movado Paramus NJ January 2013 to April 2015 Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites and Implemented SOAPRESTful web services in JSON format Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format and Developed user interface using CSS PHP HTML JavaScript and jQuery Worked on several python packages like Matplotlib Pillow Numpy SQL Alchemy and sockets Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Worked on developing CRUD applications using MERN stack MongoDB ReactJS and NodeJS and REST based API and worked on Extensive use of version controlling systems like GIT and SVN Redesign and maintain existing internal web application using HTML CSS JavaScript and jQuery React JS Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection and migrated applications to the AWS cloud Integrated RedisCache with the Djangorestframework for reading the data faster and Implemented RESTful WebServices for sending and receiving the data between multiple systems Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT and Developed multithreaded standalone applications using Python and PHP Created PHPMySQL backend for data entry from Flash and Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Developing python programs by using boto3 to implement security by using AWS Cognito service Build the Silent Circle Management System SCMC in Elasticsearch Python and NodeJS while integrating with infrastructure services Education Bachelors Skills Javascript Jquery Git Android CSS MYSQL PHP python 6 years django 6 years flask 6 years mysql 6 years sql 6 years nosql 6 years HTML 5 6 years angularjs 6 years aws 6 years api 6 years numpy 6 years pandas 6 years matplotlib 6 years ajax 6 years scipy 6 years docker 6 years maven 6 years CICD 6 years jenkins 6 years spark 6 years reactjs 6 years nodejs 6 years cassandra 6 years mongodb 6 years mvc 6 years ASP",
    "unique_id": "0ea3a9b0-acd0-4a06-ad0b-f1a224330ea3"
}