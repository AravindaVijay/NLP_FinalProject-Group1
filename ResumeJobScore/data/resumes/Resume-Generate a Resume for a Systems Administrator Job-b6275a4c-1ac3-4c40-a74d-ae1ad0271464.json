{
    "clean_data": "Full Stack Java Developer Full Stack Java span lDeveloperspan Full Stack Java Developer NJ Advance Media West Chester PA Full stack Java developer with 5 years of experience developing applications for various companies operating within the marketing insurance medical billing news and logistics industry Experienced with a number of relational database management systems such as MSSQL Server MySQL and PostgreSQL as well as NoSQL databases such as MongoDB Wellversed in configuration of Spring server side applications through the use of XML ie SOAP POM WEB Hibernate Persistence etc properties file and Spring annotations Extensive comprehension of Hibernate ORM as far as configuration POJO SessionFactory Session creation querying etc As well as the Java Persistence API JPA including configuration of entity  DataSource EntityManagerFactory and Transaction Manager Handson experience designing and developing HTTP communication pathways through RESTful services on the server side with Spring Boot RestController Fully competent in Java ObjectOriented Programming concepts such as Polymorphism Inheritance Encapsulation Abstraction Interface and MultiThreading Proficient in Java 2 Enterprise Edition software development methodology such as JDBC Hibernate Servlets JSP JSTL and Exception Handling to create server generated datadriven dynamic applications Skillful in creating Spring Spring MVC and Spring Boot web applications and REST APIs Up to date with Spring Aspect Oriented Programming AOP methodology to allow for more modular code through experience with Join points Advice Pointcuts Target Object Aspect Interceptor and AOP Proxy Effective at configuring and utilizing Spring Security to secure applications and generate JSON Web Token to communicate with authorized requests from client Exposed to a number of different technologies for software development such as NodeJS and Rails Excellent grasp of ES6Functional JavaScript and Modern TypeScript Adept at modern Angular SPA development through the use of Services Models Directives TwoWay DataBinding EventBinding Interpolation Dependency Injection Template forms Reactive forms Routing and Routing Guard Experienced with RxJS Observables for Data Streaming Subscribing Error Handling and HTTP Efficient at integrating and implementing NgRx for state management through the use of Actions Reducers Effects Stores and Action Creators Knowledgeable of Twitter BootStrap Framework in order to develop responsive applications Proficient in the use of code editing testing and debugging technologies such as Visual Studio Code Eclipse Postman Junit Jasmine and Karma in order to produce quality applications Solid grasp of AGILE methodologies Scrum practices and team communication Well versed with project management and version control tools such as Github Jira and Trello Work Experience Full Stack Java Developer NJ Advance Media Iselin NJ July 2018 to Present Description NJ Advance Media is a datadriven marketing firm and local news provider that primarily deals with modern publishing practices and realtime reporting Our application is an internal Customer Relationship Management CRM System for the marketing department The modules I was mainly responsible for working on were lead management complaints tracking as well as the follow ups directory Responsibilities Collaborated with Scrum team through daily standup and sprint planning meetings in adherence to Agile Methodology and Principles Employed Azure Data Studio to perform queries and monitor any updates to MSSQL DataBase Implemented Test Driven Development on server side through Unit Testing with Junit thereby assuring quality of operations and data structures Worked with Maven and XML to load dependencies and perform necessary Spring application configuration Used Hibernate 5 and JPA Annotations to perform Object Relational Mapping and establish relationship between entity classes Built and managed multiple layers of data processing in Spring from Entity DAO Service and finally to the Controller class Parsed through Multipart File data in Spring Rest Controller with RequestParam Annotation BufferedReader and InputStreamReader to read validate and submit file data to database Secured application through configuration of Spring Security and custom HTTPJWT Filters Crafted authentication pathway by using Bcrypt JWT and developing authenticated REST APIs Adapted custom models and queries in application through integration of JPACrud Repository Hibernate HQL and Spring Query Annotation Performed RoleBased Authorization by developing validation in a number of REST APIs to assure only eligible users can access specific data or perform certain operations Performed http request testing with Postman to ensure integrity of REST APIs Implemented Angular JWT Interceptor to clone request with JWT in header if user is authenticated Safe guarded routes in my modules from unauthorized access through Angular Routing Guard Utilized RxJS BehaviorSubject in order to stream value of current user to multiple components from a single execution path Communicated with REST API through Angular HttpClientModule Streamed client directory array of objects through use of Observables and output data to Component Template view through PropertyBinding with Attribute and Structural Directives Implemented Pagination through TwoWay Data Binding by using Map Operator in Pipe Method to limit data output on table per page Used Angular OnInit Lifecycle Method in order to add Validations to form input fields upon Component load Combined Bootstrap 4 CSS3 Flexbox and Variables to create customizable and compelling UI with Alerts Toasts and Modals to interact and provide feedback to the user Environment Java JavaScript TypeScript ES6 MSSQL Azure Data Studio Hibernate 5 JPA Spring Security Spring Boot Spring AOP REST Services Maven Apache Tomcat 9 HTML5 CSS3 Angular 67 NPM Bootstrap 4 Font Awesome 475 Junit Jasmine Karma Postman Visual Studio Code GitGithub Full Stack Engineer Corporate Synergies Camden NJ January 2018 to July 2018 Description Corporate Synergies is a national insurance employee benefits brokerage and consultancy firm which delivers methods of analyzing and controlling cost risk complaints administrative burdens and benefits This application is a claims management software system designed for the insurance department I was responsible for developing the claims reporting and policy administration compliance modules Responsibilities Utilized MySQL WorkBench as a client side tool to connect to AWS MySQL RDS Instance as well as to visualize inventory and purchasing list Developed integral model representations of data through Spring MVCHibernate Entity classes Performed configuration of Data Source EntityManagerFactory and Transaction Manager Beans along with a properties file in order to connect to database Employed Java Collections such as Arraylist Collections and LinkedHashMap in order to manipulate contain and pass around data Succinctly queried database through the use of the JPA Repository interface the Simple Repository class and the Query Spring Annotation to allow for custom query solutions Decoupled business logic from routes and Http Requests through development of Spring Service Allowed for greater Code Reusability by integrating Spring Boot AOP Maven Dependency Developed multiple Angular Services such as for Authentication and inventory retrieval to communicate and request specific data from server Used Error Interceptor to perform response status Authentication Error Handling Communicated information and operations between Component Container and Component Template through PropertyBinding of various class fields and EventBinding with ngSubmit and Click events Utilized Angular Structural Directives ngFor and ngIf in order to reduce code repetition and conditionally update view layer based on available data Combined Modern ES6 Javascript Functional Programming and Angular TwoWay DataBinding to performing filter of inventory table list Incorporated Observables Subject BehaviorSubject Pipes and Reactive Operators provided by RxJS Library into application in order to handle responses from the server and update Angular Component Templates with streamable data Applied NgRx Reducers in Services and Component in order to update global state in NgRx Store Protected application from security breaches and unauthorized access through Form Validation Implemented Test Driven Development of the client side through Unit and EndtoEnd Testing with Jasmine and Karma Worked with Font Awesome CSS3 and Bootstrap 4 to develop engaging and intuitive UI Used Jira as a means of keeping up with project requirements and visualize progression Employed GIT to perform version control as well as develop features without disturbing central project timeline Technology Environment Java JavaScript TypeScript ES6 MySQL MySQL Workbench Hibernate 5 JPA Spring MVC Spring Security Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 5 RXJS NgRx NPM Bootstrap 4 Font Awesome 47 Junit Karma Postman Brackets JEdit Eclipse GitGithub Full Stack Web Developer Millennium Medical Billing Inc Westwood NJ January 2017 to January 2018 Description Millenium Medical Billing is a billing company that specializes in services designed to increase revenue ensure predictable cash flow and improve billing efficiency within the medical and healthcare industry The application a human resource information software HIRS system was intended for internal users in the Human Resources department The modules I was responsible for were personnel tracking payroll and employee selfservice Responsibilities Employed SQL Server Management Studio order to access and perform advanced and ACIDStandard Transactions on MSSQL Database Implemented REST Services with Spring MVC to communicate with Angular Client Worked with JSON and JSON serialization libraries such as Jackson Maven Dependency Library as a means of data transfer Integrated Hibernate 4 ORM to create simple and effective database queries Created Spring Entity DAO Service and Controllers in order to perform operations and manipulate data going to and from DataBase Used Java IO Library classes such as File BufferedWriter InputStream in order to develop files that can be accessed and downloaded from Angular Client Designed custom Java Exceptions to handle missing data or in proper request from client side Provided modularity and decoupling through use of Spring AOP Secured user data through implementation of Spring security and JWT generation Worked with Angular Directives Component Attribute and Structural in order to allow communication and information flow between Containers and Templates Assured route security with Angular Routing Guard functionality Employed Angular Reactive Forms Module and OnInit Lifecycle Method to add validation and initial values to payroll form control fields Validated quality of Angular Service HTTP Request and Container Logic through testing with Jasmine and Karma Maintained code consistency standards across team members by following TSLinting standards Used Git for version control Technology Environment Java JavaScript TypeScript ES6 MSSQL SQL Server Management Studio Hibernate 45 Spring MVC Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 2 Bootstrap 3 Font Awesome 47 Junit Jasmine Karma Postman Visual Studio Brackets Eclipse GitGithub Full Stack Developer Hudson News Company Bronx NY August 2015 to January 2017 Description Hudson News Company is a wholesale news company that primarily specializes in aggregating and distributing books and magazines to retailers This application is an inventory management system used to track and record inventory and supply data I was responsible for developing the invoicing procurement and resource management modules Responsibilities Engaged in daily standup meetings to update Scrum Team on activity updates and difficulties Implemented configuration for  Data Source SessionFactory and Transaction Manager Worked with XML in order to install the proper application dependencies and configure application appropriately Created model representation of MSSQL DataBase Tables through development of POJO classes Performed Spring Security configuration in order to secure application data from attack Used Junit testing in order to verify output of data was equivalent to expectations Developed Spring Controllers to handle request from client and direct to appropriate View Layer Template with available data Used JQuery and JavaScript ES5 in order to perform client side calculation and search functionality JQuery and AJAX were used in conjunction to serve up content dynamically on client and create a dynamic and engaging Single Page Application Employed JSP in view as a means of performing java logic and send data from controller to Semantic HTML5 Forms Tables Navbar Sections Articles and Asides Applied Bootstrap grid and UI components as a means of creating a modern well structured UI Used CSS3 features flexbox and variables in order to create a unique and customizable UIUX Technology Environment JavaJ2EE JavaScript ES5 MSSQL Hibernate 4  J2EE Spring MVC Spring Security Java Servlet Pages JSP Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Axios Bootstrap 3 Junit Visual Studio Code Eclipse Git Software Developer Rusco Direct Logistics Bohemia NY May 2014 to July 2015 Description Rusco Direct Logistics is a trucking and logistics company which specializes in fullservice trucking warehousing and logistics analysis for manufacturers and distributors This application is a logistics software solution I was responsible for the indoor positioning tracking todo tasks tracking and customer information portal modules Responsibilities Worked with AGILE team as a means of assessing project details and progress Connected application to MySQL database through JDBC configuration in order to display persistence data to view layer Implemented custom SQL queries in order to effectively manipulate data from database Worked on a team that primarily used J2EE for application development Employed expertise with Java to create Java Servlets to contain application business logic and communicate between Model and View layers as part of MVC Design Pattern Provided data from Servlets to application view through JSP in order to present dynamic content to clients Created in Servlets and JSP to handle complex form and persistence logic Integrated JSTL in order to utilize more advanced and elegant JSP features on client side Implemented Bootstrap 3 Grid to add responsiveness to application Applied Bootstrap UI components and Font Awesome icons to application view Utilized CSS3 and JQuery in combination to design interactive and engaging user interface Worked with GIT for project version control Technology Environment JavaJ2EE JavaScript ES5 MySQL MySQL Workbench JDBC J2EE Java Servlets Java Servlet Pages JSP JSTL Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Bootstrap 3 Font Awesome Junit Eclipse Git Education Applied Mathematics Statistics Biochemistry SUNY Stony Brook University Stony Brook NY Skills VISUAL STUDIO API Git GUI HTML",
    "entities": [
        "Alerts Toasts and Modals",
        "AJAX",
        "Applied Bootstrap UI",
        "Human Resources",
        "Validations",
        "Component",
        "Responsibilities Engaged",
        "HTTP",
        "JSON",
        "Description Millenium Medical Billing",
        "Twitter BootStrap Framework",
        "NgRx Store Protected",
        "Agile Methodology",
        "XML",
        "Description Hudson News Company",
        "Description Rusco Direct Logistics",
        "Incorporated Observables Subject BehaviorSubject Pipes and Reactive Operators",
        "Angular Routing Guard",
        "Jackson Maven Dependency",
        "EventBinding",
        "Attribute and Structural Directives Implemented Pagination",
        "Angular Component Templates",
        "Developed",
        "WorkBench",
        "Angular Client Designed",
        "Hibernate ORM",
        "HIRS",
        "Servlets",
        "Modern TypeScript Adept",
        "Communicated",
        "MultiThreading Proficient",
        "Spring Security",
        "JSP",
        "Flexbox",
        "Built",
        "Polymorphism Inheritance Encapsulation Abstraction Interface",
        "MVC",
        "Simple Repository",
        "GIT",
        "the Query Spring Annotation",
        "Angular Routing Guard Utilized RxJS BehaviorSubject",
        "Angular Client Worked",
        "Created in",
        "UIUX Technology Environment JavaJ2EE JavaScript ES5",
        "POJO",
        "Created",
        "Component Container",
        "Implemented",
        "Integrated Hibernate 4 ORM",
        "Responsibilities Employed SQL Server Management Studio",
        "Java IO Library",
        "Present Description NJ",
        "Responsibilities Utilized",
        "Single Page Application Employed JSP",
        "Arraylist Collections",
        "SQL",
        "RequestParam Annotation",
        "Responsibilities Worked",
        "JPACrud Repository Hibernate HQL",
        "Component Template",
        "Data Source EntityManagerFactory",
        "Postman",
        "Customer Relationship Management CRM System",
        "RxJS Library",
        "JDBC",
        "Hibernate 5",
        "Multipart File",
        "Employed Angular Reactive Forms Module",
        "Semantic HTML5 Forms",
        "Visual Studio",
        "EndtoEnd Testing",
        "MVC Design Pattern Provided",
        "Applied Mathematics Statistics Biochemistry",
        "Entity DAO Service",
        "InputStreamReader",
        "Spring MVCHibernate Entity",
        "Maven",
        "Spring Query Annotation Performed",
        "Performed",
        "JWT",
        "Implemented Bootstrap 3 Grid",
        "Spring Aspect Oriented Programming AOP",
        "RxJS Observables for Data Streaming Subscribing Error Handling",
        "UI",
        "Performed Spring Security",
        "Spring Boot RestController Fully",
        "OnInit Lifecycle Method",
        "Angular Service",
        "Advice Pointcuts Target Object Aspect Interceptor",
        "Form Validation Implemented Test Driven Development",
        "SQL Server Management Studio Hibernate",
        "Created Spring Entity DAO Service",
        "Spring AOP Secured",
        "JDBC Hibernate Servlets JSP JSTL",
        "REST",
        "Model",
        "NoSQL",
        "TSLinting",
        "Stack Developer Hudson News Company Bronx",
        "Java ObjectOriented Programming",
        "JQuery",
        "MSSQL DataBase Tables"
    ],
    "experience": "Experience Full Stack Java Developer NJ Advance Media Iselin NJ July 2018 to Present Description NJ Advance Media is a datadriven marketing firm and local news provider that primarily deals with modern publishing practices and realtime reporting Our application is an internal Customer Relationship Management CRM System for the marketing department The modules I was mainly responsible for working on were lead management complaints tracking as well as the follow ups directory Responsibilities Collaborated with Scrum team through daily standup and sprint planning meetings in adherence to Agile Methodology and Principles Employed Azure Data Studio to perform queries and monitor any updates to MSSQL DataBase Implemented Test Driven Development on server side through Unit Testing with Junit thereby assuring quality of operations and data structures Worked with Maven and XML to load dependencies and perform necessary Spring application configuration Used Hibernate 5 and JPA Annotations to perform Object Relational Mapping and establish relationship between entity classes Built and managed multiple layers of data processing in Spring from Entity DAO Service and finally to the Controller class Parsed through Multipart File data in Spring Rest Controller with RequestParam Annotation BufferedReader and InputStreamReader to read validate and submit file data to database Secured application through configuration of Spring Security and custom HTTPJWT Filters Crafted authentication pathway by using Bcrypt JWT and developing authenticated REST APIs Adapted custom models and queries in application through integration of JPACrud Repository Hibernate HQL and Spring Query Annotation Performed RoleBased Authorization by developing validation in a number of REST APIs to assure only eligible users can access specific data or perform certain operations Performed http request testing with Postman to ensure integrity of REST APIs Implemented Angular JWT Interceptor to clone request with JWT in header if user is authenticated Safe guarded routes in my modules from unauthorized access through Angular Routing Guard Utilized RxJS BehaviorSubject in order to stream value of current user to multiple components from a single execution path Communicated with REST API through Angular HttpClientModule Streamed client directory array of objects through use of Observables and output data to Component Template view through PropertyBinding with Attribute and Structural Directives Implemented Pagination through TwoWay Data Binding by using Map Operator in Pipe Method to limit data output on table per page Used Angular OnInit Lifecycle Method in order to add Validations to form input fields upon Component load Combined Bootstrap 4 CSS3 Flexbox and Variables to create customizable and compelling UI with Alerts Toasts and Modals to interact and provide feedback to the user Environment Java JavaScript TypeScript ES6 MSSQL Azure Data Studio Hibernate 5 JPA Spring Security Spring Boot Spring AOP REST Services Maven Apache Tomcat 9 HTML5 CSS3 Angular 67 NPM Bootstrap 4 Font Awesome 475 Junit Jasmine Karma Postman Visual Studio Code GitGithub Full Stack Engineer Corporate Synergies Camden NJ January 2018 to July 2018 Description Corporate Synergies is a national insurance employee benefits brokerage and consultancy firm which delivers methods of analyzing and controlling cost risk complaints administrative burdens and benefits This application is a claims management software system designed for the insurance department I was responsible for developing the claims reporting and policy administration compliance modules Responsibilities Utilized MySQL WorkBench as a client side tool to connect to AWS MySQL RDS Instance as well as to visualize inventory and purchasing list Developed integral model representations of data through Spring MVCHibernate Entity classes Performed configuration of Data Source EntityManagerFactory and Transaction Manager Beans along with a properties file in order to connect to database Employed Java Collections such as Arraylist Collections and LinkedHashMap in order to manipulate contain and pass around data Succinctly queried database through the use of the JPA Repository interface the Simple Repository class and the Query Spring Annotation to allow for custom query solutions Decoupled business logic from routes and Http Requests through development of Spring Service Allowed for greater Code Reusability by integrating Spring Boot AOP Maven Dependency Developed multiple Angular Services such as for Authentication and inventory retrieval to communicate and request specific data from server Used Error Interceptor to perform response status Authentication Error Handling Communicated information and operations between Component Container and Component Template through PropertyBinding of various class fields and EventBinding with ngSubmit and Click events Utilized Angular Structural Directives ngFor and ngIf in order to reduce code repetition and conditionally update view layer based on available data Combined Modern ES6 Javascript Functional Programming and Angular TwoWay DataBinding to performing filter of inventory table list Incorporated Observables Subject BehaviorSubject Pipes and Reactive Operators provided by RxJS Library into application in order to handle responses from the server and update Angular Component Templates with streamable data Applied NgRx Reducers in Services and Component in order to update global state in NgRx Store Protected application from security breaches and unauthorized access through Form Validation Implemented Test Driven Development of the client side through Unit and EndtoEnd Testing with Jasmine and Karma Worked with Font Awesome CSS3 and Bootstrap 4 to develop engaging and intuitive UI Used Jira as a means of keeping up with project requirements and visualize progression Employed GIT to perform version control as well as develop features without disturbing central project timeline Technology Environment Java JavaScript TypeScript ES6 MySQL MySQL Workbench Hibernate 5 JPA Spring MVC Spring Security Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 5 RXJS NgRx NPM Bootstrap 4 Font Awesome 47 Junit Karma Postman Brackets JEdit Eclipse GitGithub Full Stack Web Developer Millennium Medical Billing Inc Westwood NJ January 2017 to January 2018 Description Millenium Medical Billing is a billing company that specializes in services designed to increase revenue ensure predictable cash flow and improve billing efficiency within the medical and healthcare industry The application a human resource information software HIRS system was intended for internal users in the Human Resources department The modules I was responsible for were personnel tracking payroll and employee selfservice Responsibilities Employed SQL Server Management Studio order to access and perform advanced and ACIDStandard Transactions on MSSQL Database Implemented REST Services with Spring MVC to communicate with Angular Client Worked with JSON and JSON serialization libraries such as Jackson Maven Dependency Library as a means of data transfer Integrated Hibernate 4 ORM to create simple and effective database queries Created Spring Entity DAO Service and Controllers in order to perform operations and manipulate data going to and from DataBase Used Java IO Library classes such as File BufferedWriter InputStream in order to develop files that can be accessed and downloaded from Angular Client Designed custom Java Exceptions to handle missing data or in proper request from client side Provided modularity and decoupling through use of Spring AOP Secured user data through implementation of Spring security and JWT generation Worked with Angular Directives Component Attribute and Structural in order to allow communication and information flow between Containers and Templates Assured route security with Angular Routing Guard functionality Employed Angular Reactive Forms Module and OnInit Lifecycle Method to add validation and initial values to payroll form control fields Validated quality of Angular Service HTTP Request and Container Logic through testing with Jasmine and Karma Maintained code consistency standards across team members by following TSLinting standards Used Git for version control Technology Environment Java JavaScript TypeScript ES6 MSSQL SQL Server Management Studio Hibernate 45 Spring MVC Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 2 Bootstrap 3 Font Awesome 47 Junit Jasmine Karma Postman Visual Studio Brackets Eclipse GitGithub Full Stack Developer Hudson News Company Bronx NY August 2015 to January 2017 Description Hudson News Company is a wholesale news company that primarily specializes in aggregating and distributing books and magazines to retailers This application is an inventory management system used to track and record inventory and supply data I was responsible for developing the invoicing procurement and resource management modules Responsibilities Engaged in daily standup meetings to update Scrum Team on activity updates and difficulties Implemented configuration for   Data Source SessionFactory and Transaction Manager Worked with XML in order to install the proper application dependencies and configure application appropriately Created model representation of MSSQL DataBase Tables through development of POJO classes Performed Spring Security configuration in order to secure application data from attack Used Junit testing in order to verify output of data was equivalent to expectations Developed Spring Controllers to handle request from client and direct to appropriate View Layer Template with available data Used JQuery and JavaScript ES5 in order to perform client side calculation and search functionality JQuery and AJAX were used in conjunction to serve up content dynamically on client and create a dynamic and engaging Single Page Application Employed JSP in view as a means of performing java logic and send data from controller to Semantic HTML5 Forms Tables Navbar Sections Articles and Asides Applied Bootstrap grid and UI components as a means of creating a modern well structured UI Used CSS3 features flexbox and variables in order to create a unique and customizable UIUX Technology Environment JavaJ2EE JavaScript ES5 MSSQL Hibernate 4   J2EE Spring MVC Spring Security Java Servlet Pages JSP Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Axios Bootstrap 3 Junit Visual Studio Code Eclipse Git Software Developer Rusco Direct Logistics Bohemia NY May 2014 to July 2015 Description Rusco Direct Logistics is a trucking and logistics company which specializes in fullservice trucking warehousing and logistics analysis for manufacturers and distributors This application is a logistics software solution I was responsible for the indoor positioning tracking todo tasks tracking and customer information portal modules Responsibilities Worked with AGILE team as a means of assessing project details and progress Connected application to MySQL database through JDBC configuration in order to display persistence data to view layer Implemented custom SQL queries in order to effectively manipulate data from database Worked on a team that primarily used J2EE for application development Employed expertise with Java to create Java Servlets to contain application business logic and communicate between Model and View layers as part of MVC Design Pattern Provided data from Servlets to application view through JSP in order to present dynamic content to clients Created in Servlets and JSP to handle complex form and persistence logic Integrated JSTL in order to utilize more advanced and elegant JSP features on client side Implemented Bootstrap 3 Grid to add responsiveness to application Applied Bootstrap UI components and Font Awesome icons to application view Utilized CSS3 and JQuery in combination to design interactive and engaging user interface Worked with GIT for project version control Technology Environment JavaJ2EE JavaScript ES5 MySQL MySQL Workbench JDBC J2EE Java Servlets Java Servlet Pages JSP JSTL Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Bootstrap 3 Font Awesome Junit Eclipse Git Education Applied Mathematics Statistics Biochemistry SUNY Stony Brook University Stony Brook NY Skills VISUAL STUDIO API Git GUI HTML",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "Java",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "NJ",
        "Advance",
        "Media",
        "West",
        "Chester",
        "PA",
        "stack",
        "Java",
        "developer",
        "years",
        "experience",
        "applications",
        "companies",
        "marketing",
        "insurance",
        "billing",
        "news",
        "logistics",
        "industry",
        "number",
        "database",
        "management",
        "systems",
        "MSSQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "NoSQL",
        "MongoDB",
        "configuration",
        "Spring",
        "server",
        "side",
        "applications",
        "use",
        "XML",
        "SOAP",
        "POM",
        "WEB",
        "Hibernate",
        "Persistence",
        "properties",
        "file",
        "Spring",
        "annotations",
        "comprehension",
        "Hibernate",
        "ORM",
        "configuration",
        "POJO",
        "SessionFactory",
        "Session",
        "creation",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "configuration",
        "entity",
        "DataSource",
        "EntityManagerFactory",
        "Transaction",
        "Manager",
        "Handson",
        "HTTP",
        "communication",
        "pathways",
        "services",
        "server",
        "side",
        "Spring",
        "Boot",
        "RestController",
        "Java",
        "ObjectOriented",
        "Programming",
        "concepts",
        "Polymorphism",
        "Inheritance",
        "Encapsulation",
        "Abstraction",
        "Interface",
        "MultiThreading",
        "Proficient",
        "Java",
        "Enterprise",
        "Edition",
        "software",
        "development",
        "methodology",
        "JDBC",
        "Hibernate",
        "Servlets",
        "JSP",
        "JSTL",
        "Exception",
        "Handling",
        "server",
        "applications",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "web",
        "applications",
        "REST",
        "APIs",
        "date",
        "Spring",
        "Aspect",
        "Oriented",
        "Programming",
        "AOP",
        "methodology",
        "code",
        "experience",
        "Join",
        "points",
        "Advice",
        "Pointcuts",
        "Target",
        "Object",
        "Aspect",
        "Interceptor",
        "AOP",
        "Proxy",
        "Effective",
        "Spring",
        "Security",
        "applications",
        "JSON",
        "Web",
        "Token",
        "requests",
        "client",
        "number",
        "technologies",
        "software",
        "development",
        "NodeJS",
        "Rails",
        "grasp",
        "JavaScript",
        "Modern",
        "TypeScript",
        "Adept",
        "Angular",
        "SPA",
        "development",
        "use",
        "Services",
        "Models",
        "Directives",
        "TwoWay",
        "DataBinding",
        "EventBinding",
        "Interpolation",
        "Dependency",
        "Injection",
        "Template",
        "Reactive",
        "forms",
        "Routing",
        "Routing",
        "Guard",
        "RxJS",
        "Observables",
        "Data",
        "Streaming",
        "Subscribing",
        "Error",
        "Handling",
        "HTTP",
        "Efficient",
        "NgRx",
        "state",
        "management",
        "use",
        "Actions",
        "Reducers",
        "Effects",
        "Stores",
        "Action",
        "Creators",
        "Knowledgeable",
        "Twitter",
        "BootStrap",
        "Framework",
        "order",
        "applications",
        "use",
        "code",
        "editing",
        "testing",
        "technologies",
        "Visual",
        "Studio",
        "Code",
        "Eclipse",
        "Postman",
        "Junit",
        "Jasmine",
        "Karma",
        "order",
        "quality",
        "applications",
        "grasp",
        "methodologies",
        "Scrum",
        "practices",
        "team",
        "communication",
        "project",
        "management",
        "version",
        "control",
        "tools",
        "Github",
        "Jira",
        "Trello",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "NJ",
        "Advance",
        "Media",
        "Iselin",
        "NJ",
        "July",
        "Present",
        "Description",
        "NJ",
        "Advance",
        "Media",
        "marketing",
        "firm",
        "news",
        "provider",
        "publishing",
        "practices",
        "application",
        "Customer",
        "Relationship",
        "Management",
        "CRM",
        "System",
        "marketing",
        "department",
        "modules",
        "management",
        "complaints",
        "follow",
        "ups",
        "directory",
        "Responsibilities",
        "Scrum",
        "team",
        "standup",
        "sprint",
        "planning",
        "meetings",
        "adherence",
        "Agile",
        "Methodology",
        "Principles",
        "Employed",
        "Azure",
        "Data",
        "Studio",
        "queries",
        "updates",
        "MSSQL",
        "DataBase",
        "Test",
        "Driven",
        "Development",
        "server",
        "side",
        "Unit",
        "Testing",
        "Junit",
        "quality",
        "operations",
        "data",
        "structures",
        "Maven",
        "XML",
        "dependencies",
        "Spring",
        "application",
        "configuration",
        "Hibernate",
        "JPA",
        "Annotations",
        "Object",
        "Relational",
        "Mapping",
        "relationship",
        "entity",
        "classes",
        "layers",
        "data",
        "processing",
        "Spring",
        "Entity",
        "DAO",
        "Service",
        "Controller",
        "class",
        "Multipart",
        "File",
        "data",
        "Spring",
        "Rest",
        "Controller",
        "RequestParam",
        "Annotation",
        "BufferedReader",
        "validate",
        "file",
        "data",
        "application",
        "configuration",
        "Spring",
        "Security",
        "custom",
        "HTTPJWT",
        "Filters",
        "authentication",
        "Bcrypt",
        "JWT",
        "REST",
        "APIs",
        "custom",
        "models",
        "queries",
        "application",
        "integration",
        "JPACrud",
        "Repository",
        "Hibernate",
        "HQL",
        "Spring",
        "Query",
        "Annotation",
        "Performed",
        "RoleBased",
        "Authorization",
        "validation",
        "number",
        "REST",
        "APIs",
        "users",
        "data",
        "operations",
        "http",
        "request",
        "testing",
        "Postman",
        "integrity",
        "REST",
        "APIs",
        "Angular",
        "JWT",
        "Interceptor",
        "request",
        "JWT",
        "header",
        "user",
        "routes",
        "modules",
        "access",
        "Angular",
        "Routing",
        "Guard",
        "RxJS",
        "BehaviorSubject",
        "order",
        "value",
        "user",
        "components",
        "execution",
        "path",
        "Communicated",
        "REST",
        "API",
        "Angular",
        "HttpClientModule",
        "Streamed",
        "client",
        "directory",
        "array",
        "objects",
        "use",
        "Observables",
        "output",
        "data",
        "Component",
        "Template",
        "view",
        "PropertyBinding",
        "Attribute",
        "Structural",
        "Directives",
        "Pagination",
        "TwoWay",
        "Data",
        "Binding",
        "Map",
        "Operator",
        "Pipe",
        "Method",
        "data",
        "output",
        "table",
        "page",
        "Angular",
        "OnInit",
        "Lifecycle",
        "Method",
        "order",
        "Validations",
        "input",
        "fields",
        "Component",
        "load",
        "Combined",
        "Bootstrap",
        "CSS3",
        "Flexbox",
        "Variables",
        "UI",
        "Alerts",
        "Toasts",
        "Modals",
        "feedback",
        "user",
        "Environment",
        "Java",
        "JavaScript",
        "TypeScript",
        "ES6",
        "MSSQL",
        "Azure",
        "Data",
        "Studio",
        "Hibernate",
        "JPA",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "AOP",
        "REST",
        "Services",
        "Maven",
        "Apache",
        "Tomcat",
        "HTML5",
        "CSS3",
        "Angular",
        "NPM",
        "Bootstrap",
        "Font",
        "Awesome",
        "Junit",
        "Jasmine",
        "Karma",
        "Postman",
        "Visual",
        "Studio",
        "Code",
        "GitGithub",
        "Stack",
        "Engineer",
        "Corporate",
        "Synergies",
        "Camden",
        "NJ",
        "January",
        "July",
        "Description",
        "Corporate",
        "Synergies",
        "insurance",
        "employee",
        "brokerage",
        "consultancy",
        "firm",
        "methods",
        "cost",
        "risk",
        "burdens",
        "application",
        "claims",
        "management",
        "software",
        "system",
        "insurance",
        "department",
        "claims",
        "reporting",
        "policy",
        "administration",
        "compliance",
        "modules",
        "Responsibilities",
        "MySQL",
        "WorkBench",
        "client",
        "side",
        "tool",
        "AWS",
        "MySQL",
        "RDS",
        "Instance",
        "inventory",
        "purchasing",
        "list",
        "model",
        "representations",
        "data",
        "Spring",
        "MVCHibernate",
        "Entity",
        "classes",
        "configuration",
        "Data",
        "Source",
        "EntityManagerFactory",
        "Transaction",
        "Manager",
        "Beans",
        "properties",
        "file",
        "order",
        "Employed",
        "Java",
        "Collections",
        "Arraylist",
        "Collections",
        "LinkedHashMap",
        "order",
        "data",
        "database",
        "use",
        "JPA",
        "Repository",
        "Simple",
        "Repository",
        "class",
        "Query",
        "Spring",
        "Annotation",
        "custom",
        "query",
        "solutions",
        "business",
        "logic",
        "routes",
        "Http",
        "Requests",
        "development",
        "Spring",
        "Service",
        "Code",
        "Reusability",
        "Spring",
        "Boot",
        "AOP",
        "Maven",
        "Dependency",
        "Angular",
        "Services",
        "Authentication",
        "inventory",
        "retrieval",
        "data",
        "server",
        "Used",
        "Error",
        "Interceptor",
        "response",
        "status",
        "Authentication",
        "Error",
        "Communicated",
        "information",
        "operations",
        "Component",
        "Container",
        "Component",
        "Template",
        "PropertyBinding",
        "class",
        "fields",
        "EventBinding",
        "ngSubmit",
        "events",
        "Angular",
        "Structural",
        "Directives",
        "ngFor",
        "ngIf",
        "order",
        "code",
        "repetition",
        "view",
        "layer",
        "data",
        "Combined",
        "Modern",
        "ES6",
        "Javascript",
        "Functional",
        "Programming",
        "Angular",
        "TwoWay",
        "DataBinding",
        "filter",
        "inventory",
        "table",
        "list",
        "Incorporated",
        "Observables",
        "Subject",
        "BehaviorSubject",
        "Pipes",
        "Reactive",
        "Operators",
        "RxJS",
        "Library",
        "application",
        "order",
        "responses",
        "server",
        "Angular",
        "Component",
        "Templates",
        "data",
        "NgRx",
        "Reducers",
        "Services",
        "Component",
        "order",
        "state",
        "NgRx",
        "Store",
        "application",
        "security",
        "breaches",
        "access",
        "Form",
        "Validation",
        "Test",
        "Driven",
        "Development",
        "client",
        "side",
        "Unit",
        "EndtoEnd",
        "Jasmine",
        "Karma",
        "Font",
        "Awesome",
        "CSS3",
        "Bootstrap",
        "UI",
        "Jira",
        "means",
        "project",
        "requirements",
        "visualize",
        "progression",
        "Employed",
        "GIT",
        "version",
        "control",
        "features",
        "project",
        "timeline",
        "Technology",
        "Environment",
        "Java",
        "JavaScript",
        "TypeScript",
        "ES6",
        "MySQL",
        "MySQL",
        "Workbench",
        "Hibernate",
        "JPA",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "REST",
        "Services",
        "Maven",
        "Tomcat",
        "HTML5",
        "CSS3",
        "Angular",
        "RXJS",
        "NgRx",
        "NPM",
        "Bootstrap",
        "Font",
        "Awesome",
        "Junit",
        "Karma",
        "Postman",
        "Brackets",
        "JEdit",
        "Eclipse",
        "GitGithub",
        "Full",
        "Stack",
        "Web",
        "Developer",
        "Millennium",
        "Medical",
        "Billing",
        "Inc",
        "Westwood",
        "NJ",
        "January",
        "January",
        "Description",
        "Millenium",
        "Medical",
        "Billing",
        "billing",
        "company",
        "services",
        "revenue",
        "cash",
        "flow",
        "billing",
        "efficiency",
        "healthcare",
        "industry",
        "application",
        "resource",
        "information",
        "software",
        "HIRS",
        "system",
        "users",
        "Human",
        "Resources",
        "department",
        "modules",
        "personnel",
        "tracking",
        "payroll",
        "employee",
        "selfservice",
        "Responsibilities",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "order",
        "ACIDStandard",
        "Transactions",
        "MSSQL",
        "Database",
        "REST",
        "Services",
        "Spring",
        "MVC",
        "Angular",
        "Client",
        "serialization",
        "libraries",
        "Jackson",
        "Maven",
        "Dependency",
        "Library",
        "means",
        "data",
        "transfer",
        "Integrated",
        "Hibernate",
        "ORM",
        "database",
        "Created",
        "Spring",
        "Entity",
        "DAO",
        "Service",
        "Controllers",
        "order",
        "operations",
        "manipulate",
        "data",
        "DataBase",
        "Java",
        "IO",
        "Library",
        "classes",
        "File",
        "BufferedWriter",
        "InputStream",
        "order",
        "files",
        "Angular",
        "Client",
        "custom",
        "Java",
        "Exceptions",
        "data",
        "request",
        "client",
        "side",
        "modularity",
        "use",
        "Spring",
        "AOP",
        "Secured",
        "user",
        "data",
        "implementation",
        "Spring",
        "security",
        "JWT",
        "generation",
        "Angular",
        "Directives",
        "Component",
        "Attribute",
        "Structural",
        "order",
        "communication",
        "information",
        "flow",
        "Containers",
        "Templates",
        "Assured",
        "route",
        "security",
        "Angular",
        "Routing",
        "Guard",
        "functionality",
        "Employed",
        "Angular",
        "Reactive",
        "Forms",
        "Module",
        "OnInit",
        "Lifecycle",
        "Method",
        "validation",
        "values",
        "form",
        "control",
        "quality",
        "Angular",
        "Service",
        "HTTP",
        "Request",
        "Container",
        "Logic",
        "testing",
        "Jasmine",
        "Karma",
        "code",
        "consistency",
        "standards",
        "team",
        "members",
        "TSLinting",
        "standards",
        "Git",
        "version",
        "control",
        "Technology",
        "Environment",
        "Java",
        "JavaScript",
        "TypeScript",
        "ES6",
        "MSSQL",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "REST",
        "Services",
        "Maven",
        "Tomcat",
        "HTML5",
        "CSS3",
        "Angular",
        "Bootstrap",
        "Font",
        "Awesome",
        "Junit",
        "Jasmine",
        "Karma",
        "Postman",
        "Visual",
        "Studio",
        "Brackets",
        "Eclipse",
        "GitGithub",
        "Stack",
        "Developer",
        "Hudson",
        "News",
        "Company",
        "Bronx",
        "NY",
        "August",
        "January",
        "Description",
        "Hudson",
        "News",
        "Company",
        "news",
        "company",
        "books",
        "magazines",
        "retailers",
        "application",
        "inventory",
        "management",
        "system",
        "record",
        "inventory",
        "supply",
        "data",
        "invoicing",
        "procurement",
        "resource",
        "management",
        "modules",
        "Responsibilities",
        "standup",
        "meetings",
        "Scrum",
        "Team",
        "activity",
        "updates",
        "difficulties",
        "configuration",
        "Data",
        "Source",
        "SessionFactory",
        "Transaction",
        "Manager",
        "XML",
        "order",
        "application",
        "dependencies",
        "configure",
        "application",
        "model",
        "representation",
        "MSSQL",
        "DataBase",
        "Tables",
        "development",
        "POJO",
        "classes",
        "Performed",
        "Spring",
        "Security",
        "configuration",
        "order",
        "application",
        "data",
        "attack",
        "Junit",
        "testing",
        "order",
        "output",
        "data",
        "expectations",
        "Developed",
        "Spring",
        "Controllers",
        "request",
        "client",
        "View",
        "Layer",
        "Template",
        "data",
        "JQuery",
        "JavaScript",
        "ES5",
        "order",
        "client",
        "side",
        "calculation",
        "search",
        "functionality",
        "JQuery",
        "AJAX",
        "conjunction",
        "content",
        "client",
        "Single",
        "Page",
        "Application",
        "JSP",
        "view",
        "means",
        "logic",
        "data",
        "controller",
        "Semantic",
        "HTML5",
        "Forms",
        "Tables",
        "Navbar",
        "Sections",
        "Articles",
        "Asides",
        "Applied",
        "Bootstrap",
        "grid",
        "UI",
        "components",
        "means",
        "UI",
        "CSS3",
        "features",
        "flexbox",
        "variables",
        "order",
        "UIUX",
        "Technology",
        "Environment",
        "JavaJ2EE",
        "JavaScript",
        "ES5",
        "MSSQL",
        "Hibernate",
        "J2EE",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Java",
        "Servlet",
        "Pages",
        "JSP",
        "Maven",
        "Tomcat",
        "HTML5",
        "CSS3",
        "JQuery",
        "AJAX",
        "Axios",
        "Bootstrap",
        "Junit",
        "Visual",
        "Studio",
        "Code",
        "Eclipse",
        "Git",
        "Software",
        "Developer",
        "Rusco",
        "Direct",
        "Logistics",
        "Bohemia",
        "NY",
        "May",
        "July",
        "Description",
        "Rusco",
        "Direct",
        "Logistics",
        "trucking",
        "logistics",
        "company",
        "fullservice",
        "trucking",
        "warehousing",
        "logistics",
        "analysis",
        "manufacturers",
        "distributors",
        "application",
        "logistics",
        "software",
        "solution",
        "positioning",
        "todo",
        "tasks",
        "tracking",
        "customer",
        "information",
        "modules",
        "Responsibilities",
        "AGILE",
        "team",
        "means",
        "project",
        "details",
        "application",
        "MySQL",
        "database",
        "JDBC",
        "configuration",
        "order",
        "persistence",
        "data",
        "layer",
        "custom",
        "SQL",
        "order",
        "data",
        "database",
        "team",
        "J2EE",
        "application",
        "development",
        "expertise",
        "Java",
        "Java",
        "Servlets",
        "application",
        "business",
        "logic",
        "Model",
        "View",
        "layers",
        "part",
        "MVC",
        "Design",
        "Pattern",
        "data",
        "Servlets",
        "application",
        "view",
        "JSP",
        "order",
        "content",
        "clients",
        "Servlets",
        "JSP",
        "form",
        "persistence",
        "logic",
        "Integrated",
        "JSTL",
        "order",
        "JSP",
        "features",
        "client",
        "side",
        "Bootstrap",
        "Grid",
        "responsiveness",
        "Applied",
        "Bootstrap",
        "UI",
        "components",
        "Font",
        "Awesome",
        "icons",
        "application",
        "view",
        "CSS3",
        "JQuery",
        "combination",
        "user",
        "interface",
        "GIT",
        "project",
        "version",
        "control",
        "Technology",
        "Environment",
        "JavaJ2EE",
        "JavaScript",
        "ES5",
        "MySQL",
        "MySQL",
        "Workbench",
        "JDBC",
        "J2EE",
        "Java",
        "Servlets",
        "Java",
        "Servlet",
        "Pages",
        "JSP",
        "JSTL",
        "Maven",
        "Tomcat",
        "HTML5",
        "CSS3",
        "JQuery",
        "AJAX",
        "Bootstrap",
        "Font",
        "Awesome",
        "Junit",
        "Eclipse",
        "Git",
        "Education",
        "Applied",
        "Mathematics",
        "Statistics",
        "Biochemistry",
        "SUNY",
        "Stony",
        "Brook",
        "University",
        "Stony",
        "Brook",
        "NY",
        "Skills",
        "VISUAL",
        "STUDIO",
        "API",
        "Git",
        "GUI",
        "HTML"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:41:06.336602",
    "resume_data": "Full Stack Java Developer Full Stack Java span lDeveloperspan Full Stack Java Developer NJ Advance Media West Chester PA Full stack Java developer with 5 years of experience developing applications for various companies operating within the marketing insurance medical billing news and logistics industry Experienced with a number of relational database management systems such as MSSQL Server MySQL and PostgreSQL as well as NoSQL databases such as MongoDB Wellversed in configuration of Spring server side applications through the use of XML ie SOAP POM WEB Hibernate Persistence etc properties file and Spring annotations Extensive comprehension of Hibernate ORM as far as configuration POJO SessionFactory Session creation querying etc As well as the Java Persistence API JPA including configuration of entity HikariCP DataSource EntityManagerFactory and Transaction Manager Handson experience designing and developing HTTP communication pathways through RESTful services on the server side with Spring Boot RestController Fully competent in Java ObjectOriented Programming concepts such as Polymorphism Inheritance Encapsulation Abstraction Interface and MultiThreading Proficient in Java 2 Enterprise Edition software development methodology such as JDBC Hibernate Servlets JSP JSTL and Exception Handling to create server generated datadriven dynamic applications Skillful in creating Spring Spring MVC and Spring Boot web applications and REST APIs Up to date with Spring Aspect Oriented Programming AOP methodology to allow for more modular code through experience with Join points Advice Pointcuts Target Object Aspect Interceptor and AOP Proxy Effective at configuring and utilizing Spring Security to secure applications and generate JSON Web Token to communicate with authorized requests from client Exposed to a number of different technologies for software development such as NodeJS and Rails Excellent grasp of ES6Functional JavaScript and Modern TypeScript Adept at modern Angular SPA development through the use of Services Models Directives TwoWay DataBinding EventBinding Interpolation Dependency Injection Template forms Reactive forms Routing and Routing Guard Experienced with RxJS Observables for Data Streaming Subscribing Error Handling and HTTP Efficient at integrating and implementing NgRx for state management through the use of Actions Reducers Effects Stores and Action Creators Knowledgeable of Twitter BootStrap Framework in order to develop responsive applications Proficient in the use of code editing testing and debugging technologies such as Visual Studio Code Eclipse Postman Junit Jasmine and Karma in order to produce quality applications Solid grasp of AGILE methodologies Scrum practices and team communication Well versed with project management and version control tools such as Github Jira and Trello Work Experience Full Stack Java Developer NJ Advance Media Iselin NJ July 2018 to Present Description NJ Advance Media is a datadriven marketing firm and local news provider that primarily deals with modern publishing practices and realtime reporting Our application is an internal Customer Relationship Management CRM System for the marketing department The modules I was mainly responsible for working on were lead management complaints tracking as well as the follow ups directory Responsibilities Collaborated with Scrum team through daily standup and sprint planning meetings in adherence to Agile Methodology and Principles Employed Azure Data Studio to perform queries and monitor any updates to MSSQL DataBase Implemented Test Driven Development on server side through Unit Testing with Junit thereby assuring quality of operations and data structures Worked with Maven and XML to load dependencies and perform necessary Spring application configuration Used Hibernate 5 and JPA Annotations to perform Object Relational Mapping and establish relationship between entity classes Built and managed multiple layers of data processing in Spring from Entity DAO Service and finally to the Controller class Parsed through Multipart File data in Spring Rest Controller with RequestParam Annotation BufferedReader and InputStreamReader to read validate and submit file data to database Secured application through configuration of Spring Security and custom HTTPJWT Filters Crafted authentication pathway by using Bcrypt JWT and developing authenticated REST APIs Adapted custom models and queries in application through integration of JPACrud Repository Hibernate HQL and Spring Query Annotation Performed RoleBased Authorization by developing validation in a number of REST APIs to assure only eligible users can access specific data or perform certain operations Performed http request testing with Postman to ensure integrity of REST APIs Implemented Angular JWT Interceptor to clone request with JWT in header if user is authenticated Safe guarded routes in my modules from unauthorized access through Angular Routing Guard Utilized RxJS BehaviorSubject in order to stream value of current user to multiple components from a single execution path Communicated with REST API through Angular HttpClientModule Streamed client directory array of objects through use of Observables and output data to Component Template view through PropertyBinding with Attribute and Structural Directives Implemented Pagination through TwoWay Data Binding by using Map Operator in Pipe Method to limit data output on table per page Used Angular OnInit Lifecycle Method in order to add Validations to form input fields upon Component load Combined Bootstrap 4 CSS3 Flexbox and Variables to create customizable and compelling UI with Alerts Toasts and Modals to interact and provide feedback to the user Environment Java JavaScript TypeScript ES6 MSSQL Azure Data Studio Hibernate 5 JPA Spring Security Spring Boot Spring AOP REST Services Maven Apache Tomcat 9 HTML5 CSS3 Angular 67 NPM Bootstrap 4 Font Awesome 475 Junit Jasmine Karma Postman Visual Studio Code GitGithub Full Stack Engineer Corporate Synergies Camden NJ January 2018 to July 2018 Description Corporate Synergies is a national insurance employee benefits brokerage and consultancy firm which delivers methods of analyzing and controlling cost risk complaints administrative burdens and benefits This application is a claims management software system designed for the insurance department I was responsible for developing the claims reporting and policy administration compliance modules Responsibilities Utilized MySQL WorkBench as a client side tool to connect to AWS MySQL RDS Instance as well as to visualize inventory and purchasing list Developed integral model representations of data through Spring MVCHibernate Entity classes Performed configuration of Data Source EntityManagerFactory and Transaction Manager Beans along with a properties file in order to connect to database Employed Java Collections such as Arraylist Collections and LinkedHashMap in order to manipulate contain and pass around data Succinctly queried database through the use of the JPA Repository interface the Simple Repository class and the Query Spring Annotation to allow for custom query solutions Decoupled business logic from routes and Http Requests through development of Spring Service Allowed for greater Code Reusability by integrating Spring Boot AOP Maven Dependency Developed multiple Angular Services such as for Authentication and inventory retrieval to communicate and request specific data from server Used Error Interceptor to perform response status Authentication Error Handling Communicated information and operations between Component Container and Component Template through PropertyBinding of various class fields and EventBinding with ngSubmit and Click events Utilized Angular Structural Directives ngFor and ngIf in order to reduce code repetition and conditionally update view layer based on available data Combined Modern ES6 Javascript Functional Programming and Angular TwoWay DataBinding to performing filter of inventory table list Incorporated Observables Subject BehaviorSubject Pipes and Reactive Operators provided by RxJS Library into application in order to handle responses from the server and update Angular Component Templates with streamable data Applied NgRx Reducers in Services and Component in order to update global state in NgRx Store Protected application from security breaches and unauthorized access through Form Validation Implemented Test Driven Development of the client side through Unit and EndtoEnd Testing with Jasmine and Karma Worked with Font Awesome CSS3 and Bootstrap 4 to develop engaging and intuitive UI Used Jira as a means of keeping up with project requirements and visualize progression Employed GIT to perform version control as well as develop features without disturbing central project timeline Technology Environment Java JavaScript TypeScript ES6 MySQL MySQL Workbench Hibernate 5 JPA Spring MVC Spring Security Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 5 RXJS NgRx NPM Bootstrap 4 Font Awesome 47 Junit Karma Postman Brackets JEdit Eclipse GitGithub Full Stack Web Developer Millennium Medical Billing Inc Westwood NJ January 2017 to January 2018 Description Millenium Medical Billing is a billing company that specializes in services designed to increase revenue ensure predictable cash flow and improve billing efficiency within the medical and healthcare industry The application a human resource information software HIRS system was intended for internal users in the Human Resources department The modules I was responsible for were personnel tracking payroll and employee selfservice Responsibilities Employed SQL Server Management Studio order to access and perform advanced and ACIDStandard Transactions on MSSQL Database Implemented REST Services with Spring MVC to communicate with Angular Client Worked with JSON and JSON serialization libraries such as Jackson Maven Dependency Library as a means of data transfer Integrated Hibernate 4 ORM to create simple and effective database queries Created Spring Entity DAO Service and Controllers in order to perform operations and manipulate data going to and from DataBase Used Java IO Library classes such as File BufferedWriter InputStream in order to develop files that can be accessed and downloaded from Angular Client Designed custom Java Exceptions to handle missing data or in proper request from client side Provided modularity and decoupling through use of Spring AOP Secured user data through implementation of Spring security and JWT generation Worked with Angular Directives Component Attribute and Structural in order to allow communication and information flow between Containers and Templates Assured route security with Angular Routing Guard functionality Employed Angular Reactive Forms Module and OnInit Lifecycle Method to add validation and initial values to payroll form control fields Validated quality of Angular Service HTTP Request and Container Logic through testing with Jasmine and Karma Maintained code consistency standards across team members by following TSLinting standards Used Git for version control Technology Environment Java JavaScript TypeScript ES6 MSSQL SQL Server Management Studio Hibernate 45 Spring MVC Spring AOP REST Services Maven Tomcat 7 HTML5 CSS3 Angular 2 Bootstrap 3 Font Awesome 47 Junit Jasmine Karma Postman Visual Studio Brackets Eclipse GitGithub Full Stack Developer Hudson News Company Bronx NY August 2015 to January 2017 Description Hudson News Company is a wholesale news company that primarily specializes in aggregating and distributing books and magazines to retailers This application is an inventory management system used to track and record inventory and supply data I was responsible for developing the invoicing procurement and resource management modules Responsibilities Engaged in daily standup meetings to update Scrum Team on activity updates and difficulties Implemented configuration for HikariCP Data Source SessionFactory and Transaction Manager Worked with XML in order to install the proper application dependencies and configure application appropriately Created model representation of MSSQL DataBase Tables through development of POJO classes Performed Spring Security configuration in order to secure application data from attack Used Junit testing in order to verify output of data was equivalent to expectations Developed Spring Controllers to handle request from client and direct to appropriate View Layer Template with available data Used JQuery and JavaScript ES5 in order to perform client side calculation and search functionality JQuery and AJAX were used in conjunction to serve up content dynamically on client and create a dynamic and engaging Single Page Application Employed JSP in view as a means of performing java logic and send data from controller to Semantic HTML5 Forms Tables Navbar Sections Articles and Asides Applied Bootstrap grid and UI components as a means of creating a modern well structured UI Used CSS3 features flexbox and variables in order to create a unique and customizable UIUX Technology Environment JavaJ2EE JavaScript ES5 MSSQL Hibernate 4 HikariCP J2EE Spring MVC Spring Security Java Servlet Pages JSP Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Axios Bootstrap 3 Junit Visual Studio Code Eclipse Git Software Developer Rusco Direct Logistics Bohemia NY May 2014 to July 2015 Description Rusco Direct Logistics is a trucking and logistics company which specializes in fullservice trucking warehousing and logistics analysis for manufacturers and distributors This application is a logistics software solution I was responsible for the indoor positioning tracking todo tasks tracking and customer information portal modules Responsibilities Worked with AGILE team as a means of assessing project details and progress Connected application to MySQL database through JDBC configuration in order to display persistence data to view layer Implemented custom SQL queries in order to effectively manipulate data from database Worked on a team that primarily used J2EE for application development Employed expertise with Java to create Java Servlets to contain application business logic and communicate between Model and View layers as part of MVC Design Pattern Provided data from Servlets to application view through JSP in order to present dynamic content to clients Created in Servlets and JSP to handle complex form and persistence logic Integrated JSTL in order to utilize more advanced and elegant JSP features on client side Implemented Bootstrap 3 Grid to add responsiveness to application Applied Bootstrap UI components and Font Awesome icons to application view Utilized CSS3 and JQuery in combination to design interactive and engaging user interface Worked with GIT for project version control Technology Environment JavaJ2EE JavaScript ES5 MySQL MySQL Workbench JDBC J2EE Java Servlets Java Servlet Pages JSP JSTL Maven Tomcat 7 HTML5 CSS3 JQuery 2 AJAX Bootstrap 3 Font Awesome Junit Eclipse Git Education Applied Mathematics Statistics Biochemistry SUNY Stony Brook University Stony Brook NY Skills VISUAL STUDIO API Git GUI HTML",
    "unique_id": "b6275a4c-1ac3-4c40-a74d-ae1ad0271464"
}