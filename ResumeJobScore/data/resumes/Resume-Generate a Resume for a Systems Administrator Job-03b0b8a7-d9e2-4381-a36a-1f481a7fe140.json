{
    "clean_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Techsparq Raleigh NC Around 8 years of IT Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Extended Testing framework by adding some helper classes and methods Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Work Experience Sr Python Developer Techsparq Portland OR October 2018 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote Python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Dell Austin TX September 2016 to October 2018 Responsibilities Developed and designed email marketing campaigns using HTML JavaScript and CSS Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Having Good Experience in Object Oriented Concepts OOPS with C and Python Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Worked on Continuous Integration CI Gradle Maven Ant Jenkins Git Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and python Developed webbased applications using python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using python Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using python Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Worked in agile environment and developed CICD Continuous Integration and Continuous Deployment pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from python MySQL connector and MySQL database package Using pythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO database access Djangocms plugins Bootstrap Agile Eclipse Weblogic GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Fairfax VA August 2014 to September 2016 Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Worked on MVC architecture using PHP Python as controller Worked on packages like socket REST API Django Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Designed and created backend data access modules using PLSQL stored procedures Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Wrote REST APIs as part of developing webbased applications using Django REST framework Responsible for debugging the project monitored on JIRA Used Django Database API to access database objects Worked with Level two support team DBAs and infrastructure team to improve the efficiency and capacity of our system Utilized Punit the Python unit test framework for all Python applications Creating unit testregression test framework for workingnew code Risk analysis for potential points of failure database communication points and file system errors Extensive use of version controlling systems like GIT and SVN Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Associated with working cloud computing platforms like open stack Environment Python Django Flask PHP C HTML CSS jQuery AJAX XHTML AngularJS JavaScript XML GitHub Flash MYSQL PLSQL Python Developer Celgene NY July 2011 to August 2014 Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Implemented REST API for web client mobile client desktop clients Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction EnvironmentStack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL",
    "entities": [
        "Object Oriented Programming",
        "Spark Context",
        "Informatica",
        "Media",
        "UNIX",
        "the User Interface",
        "REST Calls Worked",
        "Developed Spark",
        "Interfacing",
        "LINUX Experienced",
        "Djangos MVT",
        "Integrity Developed",
        "LAMP Linux",
        "IBM",
        "PHP Python",
        "Spark Actions",
        "Hadoop",
        "XML",
        "SOAP",
        "DHTML",
        "csv",
        "Ant Jenkins Git Excellent",
        "Amazon",
        "Cloudera Hadoop",
        "AJAX Developed",
        "Work Experience Sr Python Developer Techsparq Portland",
        "Developed",
        "Amazon AWS S3",
        "Bash",
        "CSS Bootstrap",
        "Python REST API Frame",
        "Development and Enhancement Projects Extensive",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "NC",
        "System Requirements",
        "HTML JavaScript",
        "Python Unit",
        "CSS Good",
        "Object Oriented Concepts",
        "Angular JS Custom Directives Validation",
        "SVN Actively",
        "User Defined Function Developed",
        "AGILE",
        "Linux",
        "Classification",
        "python Developed Test Cases using Easy Mock",
        "Shell Scripting",
        "RDS",
        "Spark Implemented",
        "Views",
        "the Web Services Used SOAP UI",
        "AWS Chef",
        "Angular JS",
        "MVC",
        "Spark",
        "SQL PHP",
        "Validate",
        "GIT",
        "CICD Continuous Integration",
        "IBM WebSphere Application Deployment",
        "HTML CSS JavaScript",
        "Present Responsibilities Designed",
        "Apple Push Notification Servers Implemented REST API",
        "HTML",
        "Oracle MySQL DB2 Having",
        "Bootstrap",
        "jQuery Developed UI",
        "Anaconda",
        "Model View Control",
        "MultiThreading Exception Handling",
        "Pandas",
        "Python Integrated Development Environments",
        "SQLite",
        "ETL",
        "Continuous Deployment",
        "Application Server",
        "JAVA",
        "Terraform Used Spark API",
        "Jira GitHub Team City",
        "JavaScript",
        "UI",
        "SDLC Requirement Analysis Design Development and Testing",
        "Created Business Logic",
        "Transformation and Actions",
        "jQuery",
        "Data",
        "the Complete Software Development Life Cycle",
        "NoSQL",
        "Djangocms"
    ],
    "experience": "Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Extended Testing framework by adding some helper classes and methods Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Work Experience Sr Python Developer Techsparq Portland OR October 2018 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote Python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Dell Austin TX September 2016 to October 2018 Responsibilities Developed and designed email marketing campaigns using HTML JavaScript and CSS Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Having Good Experience in Object Oriented Concepts OOPS with C and Python Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Worked on Continuous Integration CI Gradle Maven Ant Jenkins Git Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and python Developed webbased applications using python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using python Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using python Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Worked in agile environment and developed CICD Continuous Integration and Continuous Deployment pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from python MySQL connector and MySQL database package Using pythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO database access Djangocms plugins Bootstrap Agile Eclipse Weblogic GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Fairfax VA August 2014 to September 2016 Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Worked on MVC architecture using PHP Python as controller Worked on packages like socket REST API Django Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Designed and created backend data access modules using PLSQL stored procedures Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Wrote REST APIs as part of developing webbased applications using Django REST framework Responsible for debugging the project monitored on JIRA Used Django Database API to access database objects Worked with Level two support team DBAs and infrastructure team to improve the efficiency and capacity of our system Utilized Punit the Python unit test framework for all Python applications Creating unit testregression test framework for workingnew code Risk analysis for potential points of failure database communication points and file system errors Extensive use of version controlling systems like GIT and SVN Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Associated with working cloud computing platforms like open stack Environment Python Django Flask PHP C HTML CSS jQuery AJAX XHTML AngularJS JavaScript XML GitHub Flash MYSQL PLSQL Python Developer Celgene NY July 2011 to August 2014 Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Implemented REST API for web client mobile client desktop clients Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction EnvironmentStack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Srspan",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Techsparq",
        "Raleigh",
        "NC",
        "years",
        "IT",
        "Experience",
        "testing",
        "standalone",
        "enterprise",
        "application",
        "software",
        "Python",
        "domains",
        "experience",
        "Python",
        "expertise",
        "tools",
        "developments",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "Jasy",
        "Scipy",
        "matplotlib",
        "Pickle",
        "PySide",
        "Pythontwitter",
        "networks",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "com",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "Basic",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "knowledge",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Worked",
        "DevOps",
        "methodologies",
        "infrastructure",
        "automation",
        "tools",
        "AWS",
        "Chef",
        "Terraform",
        "Used",
        "Spark",
        "API",
        "Cloudera",
        "Hadoop",
        "YARN",
        "analytics",
        "data",
        "Spark",
        "performance",
        "optimization",
        "algorithms",
        "Hadoop",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "Spark",
        "YARN",
        "ETL",
        "transformations",
        "tables",
        "Informatica",
        "mappings",
        "Good",
        "Experience",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "Sound",
        "experience",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Extended",
        "Testing",
        "framework",
        "helper",
        "classes",
        "methods",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "DB2",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "net",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Data",
        "analytics",
        "data",
        "Excel",
        "data",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "LINUX",
        "Shell",
        "Scripting",
        "UNIX",
        "commands",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Techsparq",
        "Portland",
        "October",
        "Present",
        "Responsibilities",
        "User",
        "Interface",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JSON",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "Integrity",
        "merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "Defined",
        "Function",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "Matplotlib",
        "Statsmodels",
        "Gensim",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "jQuery",
        "data",
        "manipulation",
        "data",
        "queries",
        "lists",
        "references",
        "databases",
        "analysis",
        "Perl",
        "web",
        "automation",
        "web",
        "chat",
        "box",
        "customers",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "Automation",
        "framework",
        "database",
        "testing",
        "AutoEasy",
        "Responsible",
        "web",
        "application",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Spark",
        "Actions",
        "Transformations",
        "RDDs",
        "HDFS",
        "Spark",
        "scripts",
        "Scala",
        "IDEs",
        "business",
        "requirement",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "Python",
        "data",
        "warehousing",
        "application",
        "jobs",
        "SLAs",
        "application",
        "operations",
        "Business",
        "requirements",
        "Complete",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Environment",
        "Python",
        "PyQt",
        "PyQuery",
        "Agile",
        "SDLC",
        "MVC",
        "HTML5",
        "CSS3",
        "DOM",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "Windows",
        "PostgreSQL",
        "Numpy",
        "SQLAlchemy",
        "Python",
        "Developer",
        "Dell",
        "Austin",
        "TX",
        "September",
        "October",
        "Responsibilities",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "JavaScript",
        "CSS",
        "knowledge",
        "phases",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Development",
        "Enhancement",
        "Projects",
        "experience",
        "web",
        "applications",
        "LAMP",
        "Linux",
        "Apache",
        "MY",
        "SQL",
        "PHP",
        "Experience",
        "Object",
        "Concepts",
        "C",
        "Python",
        "Working",
        "Python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "Continuous",
        "Integration",
        "CI",
        "Gradle",
        "Maven",
        "Ant",
        "Jenkins",
        "Git",
        "Excellent",
        "Experience",
        "Code",
        "Refactoring",
        "Udeploy",
        "ability",
        "JavaScript",
        "knowledge",
        "IBM",
        "WebSphere",
        "Application",
        "Deployment",
        "maintenance",
        "application",
        "Application",
        "Server",
        "clusters",
        "concept",
        "IBM",
        "Tivoli",
        "Monitoring",
        "Develop",
        "test",
        "deploy",
        "application",
        "UI",
        "team",
        "application",
        "JAVA",
        "Developed",
        "applications",
        "python",
        "Django",
        "PHP",
        "Flask",
        "Webapp2",
        "Angularjs",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "Developed",
        "UI",
        "screens",
        "JS",
        "Custom",
        "Directives",
        "Validation",
        "Promises",
        "Developed",
        "Angular",
        "Controllers",
        "Services",
        "Filters",
        "HTML",
        "templates",
        "Angular",
        "Directive",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "csv",
        "files",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "python",
        "Developed",
        "Test",
        "Cases",
        "Easy",
        "Mock",
        "POSTMAN",
        "REST",
        "Calls",
        "environment",
        "CICD",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "pipeline",
        "Jira",
        "GitHub",
        "Team",
        "City",
        "Pypi",
        "Docker",
        "Hub",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Expert",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "Wrote",
        "MySQL",
        "database",
        "python",
        "MySQL",
        "connector",
        "MySQL",
        "database",
        "package",
        "pythonDjango",
        "HTML",
        "CSS",
        "Sass",
        "JavaScript",
        "SQL",
        "PostgreSQL",
        "software",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "MongoDB",
        "Linux",
        "Javascript",
        "JQuery",
        "AJAX",
        "JSON",
        "Sublime",
        "Text",
        "Jira",
        "Git",
        "Djangocms",
        "SSO",
        "database",
        "access",
        "Djangocms",
        "plugins",
        "Bootstrap",
        "Agile",
        "Eclipse",
        "Weblogic",
        "GitHub",
        "Junit",
        "Agile",
        "UML",
        "JSP",
        "Xml",
        "SOA",
        "Sr",
        "Python",
        "Developer",
        "Fairfax",
        "VA",
        "August",
        "September",
        "Responsibilities",
        "User",
        "Interface",
        "project",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "views",
        "templates",
        "Djangos",
        "MVT",
        "model",
        "view",
        "template",
        "website",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "data",
        "access",
        "modules",
        "procedures",
        "Design",
        "custom",
        "Bash",
        "scripts",
        "data",
        "flow",
        "PostgreSQL",
        "database",
        "Wrote",
        "REST",
        "APIs",
        "part",
        "applications",
        "Django",
        "REST",
        "framework",
        "project",
        "JIRA",
        "Django",
        "Database",
        "API",
        "access",
        "database",
        "Level",
        "support",
        "team",
        "DBAs",
        "infrastructure",
        "team",
        "efficiency",
        "capacity",
        "system",
        "Punit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "Risk",
        "analysis",
        "points",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "ETL",
        "tasks",
        "data",
        "servers",
        "results",
        "inclusion",
        "software",
        "product",
        "machine",
        "solutions",
        "Python",
        "millions",
        "Twitter",
        "users",
        "data",
        "product",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "form",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "time",
        "series",
        "data",
        "data",
        "manipulation",
        "Pandas",
        "library",
        "Analysis",
        "R",
        "Studio",
        "Automating",
        "Email",
        "Process",
        "files",
        "Perl",
        "Scripting",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "pages",
        "JS",
        "jquery",
        "pages",
        "Interfacing",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Used",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "Python",
        "stack",
        "APIs",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "db",
        "package",
        "Associated",
        "cloud",
        "computing",
        "platforms",
        "stack",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "PHP",
        "C",
        "HTML",
        "CSS",
        "jQuery",
        "AJAX",
        "JavaScript",
        "XML",
        "GitHub",
        "Flash",
        "MYSQL",
        "PLSQL",
        "Python",
        "Developer",
        "Celgene",
        "NY",
        "July",
        "August",
        "Responsibilities",
        "System",
        "Requirements",
        "User",
        "requirements",
        "business",
        "design",
        "document",
        "End",
        "End",
        "implementation",
        "project",
        "project",
        "architecture",
        "diagram",
        "engineering",
        "specification",
        "OOA",
        "OOD",
        "Rational",
        "Rose",
        "Enterprise",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Collaboration",
        "Sequence",
        "Diagrams",
        "State",
        "Diagrams",
        "Data",
        "Modeling",
        "application",
        "logic",
        "Python",
        "Java",
        "script",
        "Java",
        "JMS",
        "Mailing",
        "plans",
        "Google",
        "Push",
        "Notifications",
        "Server",
        "Apple",
        "Push",
        "Notification",
        "Servers",
        "REST",
        "API",
        "web",
        "client",
        "client",
        "desktop",
        "clients",
        "data",
        "Python",
        "scripts",
        "PLSQL",
        "packages",
        "Java",
        "application",
        "Media",
        "management",
        "Debugging",
        "testing",
        "applications",
        "tuning",
        "performance",
        "maintenance",
        "support",
        "production",
        "environment",
        "collections",
        "Python",
        "user",
        "objects",
        "build",
        "deployment",
        "process",
        "application",
        "setup",
        "user",
        "experience",
        "integration",
        "system",
        "products",
        "Deployment",
        "application",
        "Web",
        "logic",
        "testing",
        "development",
        "team",
        "Validate",
        "test",
        "content",
        "IOS",
        "Android",
        "emulators",
        "Consumed",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "design",
        "document",
        "SOAP",
        "rule",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "service",
        "JIRA",
        "project",
        "application",
        "changes",
        "accordance",
        "client",
        "requirement",
        "client",
        "interaction",
        "EnvironmentStack",
        "Python",
        "Open",
        "Tok",
        "Custom",
        "Scheduler",
        "Js",
        "JQuery",
        "JavaScript",
        "Html",
        "Css",
        "Bootstrap",
        "Version",
        "Control",
        "Git",
        "Database",
        "MySQL"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:29:19.349371",
    "resume_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Techsparq Raleigh NC Around 8 years of IT Experience in designing developing testing and implementing of various standalone and clientserver architecturebased enterprise application software in Python on different domains Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pythontwitter Pandas dataframe networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Good knowledge on front end frame works like CSS Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Worked DevOps methodologies and cloud infrastructure automation tools like AWS Chef by using Terraform Used Spark API over Cloudera Hadoop YARN to perform analytics on data Exploring with the Spark improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Used all major ETL transformations to load the tables through Informatica mappings Good Experience with Django a highlevel Python Web framework Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django Extended Testing framework by adding some helper classes and methods Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Work Experience Sr Python Developer Techsparq Portland OR October 2018 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote Python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Dell Austin TX September 2016 to October 2018 Responsibilities Developed and designed email marketing campaigns using HTML JavaScript and CSS Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Having Good Experience in Object Oriented Concepts OOPS with C and Python Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Worked on Continuous Integration CI Gradle Maven Ant Jenkins Git Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and python Developed webbased applications using python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using python Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using python Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Worked in agile environment and developed CICD Continuous Integration and Continuous Deployment pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from python MySQL connector and MySQL database package Using pythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python Django Web Framework HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO database access Djangocms plugins Bootstrap Agile Eclipse Weblogic GitHub Junit Agile UML JSP Xml SOA Sr Python Developer Fairfax VA August 2014 to September 2016 Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Worked on MVC architecture using PHP Python as controller Worked on packages like socket REST API Django Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Designed and created backend data access modules using PLSQL stored procedures Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Wrote REST APIs as part of developing webbased applications using Django REST framework Responsible for debugging the project monitored on JIRA Used Django Database API to access database objects Worked with Level two support team DBAs and infrastructure team to improve the efficiency and capacity of our system Utilized Punit the Python unit test framework for all Python applications Creating unit testregression test framework for workingnew code Risk analysis for potential points of failure database communication points and file system errors Extensive use of version controlling systems like GIT and SVN Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Associated with working cloud computing platforms like open stack Environment Python Django Flask PHP C HTML CSS jQuery AJAX XHTML AngularJS JavaScript XML GitHub Flash MYSQL PLSQL Python Developer Celgene NY July 2011 to August 2014 Responsibilities Involved in writing System Requirements based on the User requirements and business walk through Involved in developing the design document Involved in End to End implementation of the project Involved in creating the project architecture diagram Involved in preparing engineering specification with OOA and OOD Used Rational Rose Enterprise to develop Use Case diagrams Class diagrams Collaboration Sequence Diagrams State Diagrams and Data Modeling Developed application logic using Python Java script Java Used JMS for updating Mailing plans and tracking them Worked with Google Push Notifications Server and Apple Push Notification Servers Implemented REST API for web client mobile client desktop clients Extracted and loaded data using Python scripts and PLSQL packages Supported Java application for Media portal management Debugging and testing of the applications fine tuning performance Provided maintenance support in production environment Skilled in using collections in Python for manipulating and looping through different user defined objects Creating the automated build and deployment process for application reengineering setup for better user experience and leading up to building a continuous integration system for all our products Deployment of application on Web logic 81 for testing and development team Validate test content in IOS Android and windows emulators Consumed Web Services using SOAP for getting data from the external interface in the XML format Involved in preparing technical design document Used Connect SOAP rule to fetch the Web Services Used SOAP UI to test the external service Used JIRA for project tacking Involved in testing the application Making changes in accordance with client requirement and client interaction EnvironmentStack Python Open Tok Custom Scheduler Js JQuery JavaScript Html Css Bootstrap Version Control Git Database MySQL",
    "unique_id": "03b0b8a7-d9e2-4381-a36a-1f481a7fe140"
}