{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Client United Health Group Minneapolis MN 4years of experience in WebApplication Development as a senior Python Developer in analytical programming using python with skills in analysis design development testing and deploying software applications Experience in all phases of Software Development Life Cycle SDLCWaterfall agile Process across various workflows Requirement study Analysis Design Coding Testing Deployment and Maintenance in Web ClientServer application development Hands on experience on various python libraries to speed up development libraries used Beautiful Soup SciPy Matplotlib python twitter Pandas data frame network urllib2 MySQL NOSQL  for database connectivity JSON libraries Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular24 Experience in working with various Python Integrated Development PyCharm Atom Spyder Eclipse Visual Studio Code Notepad and Sublime Text Experience in Automation scripts by using Selenium and Win Runner also used Test DirectorHP ALM to manage the entire Automation testing process Experience in performing Data driven testing to validate the components displayed on the website using Selenium Experience with DNSDHCPWINS Standardizations and Implementation Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML XHTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django PHP Good experience in developing web applications implementing MVT architecture using Django Flask Webapp2 web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in application development using python MongoDB Flask HTML5 CSS JavaScript jQuery MySQL PostgreSQL and SQLite Made Django webbased apps for Insurance premium calculations Handson experience on fetching the live stream data from DB2 to HDFS using SparkStreaming and Apache Kafka Experience in real time data from various data sources through Kafka data pipelines and applied various transformations to normalize the data stored in HDFS Data Lake Expertise with different tools in Hadoop Environment including Pig Hive HDFS MapReduce Sqoop Spark Kafka Yarn Oozie and Zookeeper Deeply involved in writing complex SparkScala scripts Spark context Cassandra SQL context used multiple APIs methods which support data frames RDDs Cassandra table joins and finally writesave the data  to Cassandra database Knowledge on integrating different ecosystems like Kafka Spark HDFS Hands on experience with continuous integration and automation using Jenkins Experience in using XML SOAP REST web Service for inter operable software applications Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Good experience in Shell Scripting Oracle RDBMS SQL Server UNIX and Linux Hands on experience with bug tracking tools JIRA and Bugzilla Extensively used containerization and immutable infrastructure Docker has been core to this experience along with Kubernetes Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MSSQL Server Expertise in OOAD Technologies developing Use Cases Activity diagrams Sequence Diagrams and Class Diagrams using case tools like UMLVisual Studio Good experience in working with Amazon Web Services AWS like AWS EC2 S3 VPC SES ELB EBS RDS Glacier DynamoapiDB etc Extensively used Hibernate Framework for data handling Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy SQL Alchemy Work Experience Python Developer Client United Health Group Minneapolis MN January 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Developed JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Involved in working with Webservices backend development using Python Flask Django Deployed Django web application in Apache webserver and Carpathias cloud operations Involved in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Worked on Restful web services using Python REST API Framework Used python decorators generator list comprehensions list JSON cache pandas and NumPy for building python functions for processing of data Involved in designing and deploying multitude applications utilizing almost all the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Familiar with MongoDB write concern to avoid loss of data during system failures Developed rich user interface using CSS HTML XHTML AJAX JavaScript and jQuery Created a Python based GUI application For Freight Tracking and processing Written Python Scripts to parse XML documents and load the data in database Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout Done scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Rewritten existing Java C application in Python Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Created database using MySQL wrote several queries to extract data from database Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Utilized Python Libraries like Boto3 numPY for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created SOAP web services and SOAP handlers to store the SOAP messages Performed pytest and unit test on them Extracted XML code from script for testing Deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Connected Flex from Backend Controller using different API services Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Deployed production site using Apache Servers with mod Python and AWS Created many reports using xlrtxlwt python packages and reportlab2733 Used JSON and SimpleJSON modules of python to call webservices Thorough understanding of ObjectOriented Methodology Unified Modeling Language UML and Design Patterns and experience on design tools Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Implemented SOA based web services designed and built SOAP web service interface Python Developer Client Essex Bank Richmond VA March 2016 to January 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Having experience in Agile Methodologies Scrum stories and sprints experience in Python Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Used Django the Python unit framework for all Python applications Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Involved in develop the REST Web services to expose the business methods to external services in the project Worked on front end frame works like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Created a Git repository and added the project to GitHub Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Experience in tuning and debugging Spark application and using spark optimization techniques Documented the problems and progress of project most accurately Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Worked on several python packages like Numpy PySide Scipy wxPython PyTables etc Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Professional Experience Python Developer Client Well Fargo San Francisco CA January 2015 to March 2016 Responsibilities Analysis and Design of applications Developed and tested many features for dashboard using Python Django and JavaScript Worked with millions of database records daily finding common errors and bad data patterns and fixing them Designed and developed ETL APIs which will automate the data mining in different database sources ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL  package Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Setting up databases in AWS using RDS and configuring instance backups to S3 bucket Work closely with development teams to integrate their projects into the production AWS environment and ensure their ongoing support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that are main source of data for both customers and internal customer service team Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Contributed source code in Golang to developing an automation framework for AWS CFN Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Taken part in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more RESTful and threadsafe Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Designed RESTful XML web service for handling AJAX requests Created project designs utilizing MVC architecture components Education Bachelors Skills Visual studio Amazon web services Application server C Django Docker Git Gradle Html Javascript Nodejs Jenkins Python Flask Matplotlib Numpy Pandas Database Sql server Mysql Jquery CSS Android PHP ASP",
    "entities": [
        "CSS HTML JavaScript",
        "AJAX",
        "ExportedImported",
        "OOAD Technologies",
        "GUI",
        "MN",
        "SparkStreaming",
        "SQL Server Management Studio Maintained",
        "UNIX",
        "Sublime Text",
        "JS Bootstrap",
        "GitHub Nexus",
        "Chef and Ansible Experience",
        "Created Terraform",
        "Present Responsibilities Involved",
        "Modeling Language UML",
        "WebApplication Development",
        "Python Integrated Development PyCharm Atom Spyder",
        "Amazon Web Services AWS",
        "Panda",
        "Build Automation",
        "Design Development and Deployment Testing and Implementation",
        "Model View Control MVC",
        "Kubernetes Proficient",
        "XML",
        "SOAP",
        "jQuery Created",
        "NOSQL",
        "OOPS Multithreading Garbage Collections and Collection",
        "Oracle MSSQL Server Expertise",
        "Implemented Terraform",
        "Responsibilities Analysis and Design",
        "SparkScala",
        "Amazon",
        "OpenSource Chef",
        "GIT Successfully Migrated the Django",
        "Hibernate Framework",
        "Hadoop Environment",
        "CSS HTML XHTML AJAX JavaScript",
        "Software Developed JavaJ2ee",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "Pig Hive HDFS MapReduce Sqoop",
        "San Francisco",
        "Git",
        "Created Git",
        "GitHub Good",
        "Python REST API Framework",
        "DjangoREST",
        "Linux",
        "Minneapolis",
        "Hibernate XML",
        "HDFS Data Lake Expertise",
        "HTML CSS jQuery",
        "Firebug Experienced",
        "AngularJs Utilized Python Libraries like Boto3 numPY",
        "Docker",
        "RDS",
        "Created a Git",
        "Refactored",
        "MVC",
        "Spark",
        "GIT",
        "PHP Rewritten",
        "Shell Scripting Oracle",
        "GitHub Worked",
        "API",
        "ALM",
        "PDF",
        "Created",
        "AWS",
        "Spark Core Spark",
        "DNSDHCPWINS Standardizations and Implementation Extensive",
        "Software Development Life Cycle SDLCWaterfall agile Process",
        "jQuery Wrote Python",
        "Developed Micro",
        "Python Developer",
        "UMLVisual Studio Good",
        "HTML",
        "SQL",
        "GitHub",
        "Sublime Text Professional Experience",
        "Bootstrap",
        "AWS Created",
        "lPythonspan",
        "SSH",
        "SQL Alchemy",
        "Python Developer Client Essex Bank",
        "Development Life Cycle SDLC",
        "Handson",
        "Python Created SOAP",
        "Golang",
        "Pandas",
        "Python Integrated Development Environments",
        "SQLite",
        "ETL",
        "CRUD",
        "Python Flask Django Deployed Django",
        "Maven",
        "Performed",
        "Connected Flex",
        "JavaScript",
        "Selenium",
        "SQL Queries Stored",
        "View Sets",
        "CSS",
        "Carpathias",
        "ASPNET",
        "Data",
        "REST",
        "ObjectOriented Methodology Unified",
        "TDD",
        "Python Developed",
        "Node"
    ],
    "experience": "Experience in all phases of Software Development Life Cycle SDLCWaterfall agile Process across various workflows Requirement study Analysis Design Coding Testing Deployment and Maintenance in Web ClientServer application development Hands on experience on various python libraries to speed up development libraries used Beautiful Soup SciPy Matplotlib python twitter Pandas data frame network urllib2 MySQL NOSQL   for database connectivity JSON libraries Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular24 Experience in working with various Python Integrated Development PyCharm Atom Spyder Eclipse Visual Studio Code Notepad and Sublime Text Experience in Automation scripts by using Selenium and Win Runner also used Test DirectorHP ALM to manage the entire Automation testing process Experience in performing Data driven testing to validate the components displayed on the website using Selenium Experience with DNSDHCPWINS Standardizations and Implementation Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML XHTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django PHP Good experience in developing web applications implementing MVT architecture using Django Flask Webapp2 web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in application development using python MongoDB Flask HTML5 CSS JavaScript jQuery MySQL PostgreSQL and SQLite Made Django webbased apps for Insurance premium calculations Handson experience on fetching the live stream data from DB2 to HDFS using SparkStreaming and Apache Kafka Experience in real time data from various data sources through Kafka data pipelines and applied various transformations to normalize the data stored in HDFS Data Lake Expertise with different tools in Hadoop Environment including Pig Hive HDFS MapReduce Sqoop Spark Kafka Yarn Oozie and Zookeeper Deeply involved in writing complex SparkScala scripts Spark context Cassandra SQL context used multiple APIs methods which support data frames RDDs Cassandra table joins and finally writesave the data   to Cassandra database Knowledge on integrating different ecosystems like Kafka Spark HDFS Hands on experience with continuous integration and automation using Jenkins Experience in using XML SOAP REST web Service for inter operable software applications Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Good experience in Shell Scripting Oracle RDBMS SQL Server UNIX and Linux Hands on experience with bug tracking tools JIRA and Bugzilla Extensively used containerization and immutable infrastructure Docker has been core to this experience along with Kubernetes Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MSSQL Server Expertise in OOAD Technologies developing Use Cases Activity diagrams Sequence Diagrams and Class Diagrams using case tools like UMLVisual Studio Good experience in working with Amazon Web Services AWS like AWS EC2 S3 VPC SES ELB EBS RDS Glacier DynamoapiDB etc Extensively used Hibernate Framework for data handling Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy SQL Alchemy Work Experience Python Developer Client United Health Group Minneapolis MN January 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Developed JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Involved in working with Webservices backend development using Python Flask Django Deployed Django web application in Apache webserver and Carpathias cloud operations Involved in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Worked on Restful web services using Python REST API Framework Used python decorators generator list comprehensions list JSON cache pandas and NumPy for building python functions for processing of data Involved in designing and deploying multitude applications utilizing almost all the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Familiar with MongoDB write concern to avoid loss of data during system failures Developed rich user interface using CSS HTML XHTML AJAX JavaScript and jQuery Created a Python based GUI application For Freight Tracking and processing Written Python Scripts to parse XML documents and load the data in database Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout Done scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Rewritten existing Java C application in Python Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Created database using MySQL wrote several queries to extract data from database Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Utilized Python Libraries like Boto3 numPY for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created SOAP web services and SOAP handlers to store the SOAP messages Performed pytest and unit test on them Extracted XML code from script for testing Deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Connected Flex from Backend Controller using different API services Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Deployed production site using Apache Servers with mod Python and AWS Created many reports using xlrtxlwt python packages and reportlab2733 Used JSON and SimpleJSON modules of python to call webservices Thorough understanding of ObjectOriented Methodology Unified Modeling Language UML and Design Patterns and experience on design tools Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Implemented SOA based web services designed and built SOAP web service interface Python Developer Client Essex Bank Richmond VA March 2016 to January 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Having experience in Agile Methodologies Scrum stories and sprints experience in Python Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Used Django the Python unit framework for all Python applications Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Involved in develop the REST Web services to expose the business methods to external services in the project Worked on front end frame works like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Created a Git repository and added the project to GitHub Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Experience in tuning and debugging Spark application and using spark optimization techniques Documented the problems and progress of project most accurately Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Worked on several python packages like Numpy PySide Scipy wxPython PyTables etc Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Professional Experience Python Developer Client Well Fargo San Francisco CA January 2015 to March 2016 Responsibilities Analysis and Design of applications Developed and tested many features for dashboard using Python Django and JavaScript Worked with millions of database records daily finding common errors and bad data patterns and fixing them Designed and developed ETL APIs which will automate the data mining in different database sources ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL   package Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Setting up databases in AWS using RDS and configuring instance backups to S3 bucket Work closely with development teams to integrate their projects into the production AWS environment and ensure their ongoing support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that are main source of data for both customers and internal customer service team Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Contributed source code in Golang to developing an automation framework for AWS CFN Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Taken part in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more RESTful and threadsafe Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Designed RESTful XML web service for handling AJAX requests Created project designs utilizing MVC architecture components Education Bachelors Skills Visual studio Amazon web services Application server C Django Docker Git Gradle Html Javascript Nodejs Jenkins Python Flask Matplotlib Numpy Pandas Database Sql server Mysql Jquery CSS Android PHP ASP",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Client",
        "United",
        "Health",
        "Group",
        "Minneapolis",
        "MN",
        "experience",
        "WebApplication",
        "Development",
        "Python",
        "Developer",
        "programming",
        "python",
        "skills",
        "analysis",
        "design",
        "development",
        "testing",
        "software",
        "applications",
        "Experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLCWaterfall",
        "Process",
        "workflows",
        "Requirement",
        "study",
        "Analysis",
        "Design",
        "Coding",
        "Testing",
        "Deployment",
        "Maintenance",
        "Web",
        "ClientServer",
        "application",
        "development",
        "Hands",
        "experience",
        "python",
        "libraries",
        "development",
        "libraries",
        "Beautiful",
        "Soup",
        "SciPy",
        "Matplotlib",
        "twitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "NOSQL",
        "database",
        "connectivity",
        "JSON",
        "experience",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "JavaScript",
        "frameworks",
        "ReactJS",
        "Angular24",
        "Experience",
        "Python",
        "Integrated",
        "Development",
        "PyCharm",
        "Atom",
        "Spyder",
        "Eclipse",
        "Visual",
        "Studio",
        "Code",
        "Notepad",
        "Sublime",
        "Text",
        "Experience",
        "Automation",
        "scripts",
        "Selenium",
        "Win",
        "Runner",
        "Test",
        "ALM",
        "Automation",
        "testing",
        "process",
        "Experience",
        "Data",
        "testing",
        "components",
        "website",
        "Selenium",
        "Experience",
        "DNSDHCPWINS",
        "Standardizations",
        "Implementation",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "XHTML",
        "Angular",
        "JS",
        "Bootstrap",
        "JS",
        "Node",
        "JS",
        "CSS",
        "JavaScript",
        "AJAX",
        "JSP",
        "JDBC",
        "XML",
        "XSLT",
        "Python",
        "Django",
        "PHP",
        "experience",
        "web",
        "applications",
        "MVT",
        "architecture",
        "Django",
        "Flask",
        "Webapp2",
        "web",
        "application",
        "frameworks",
        "understanding",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "Experience",
        "application",
        "development",
        "python",
        "MongoDB",
        "Flask",
        "HTML5",
        "CSS",
        "JavaScript",
        "jQuery",
        "MySQL",
        "PostgreSQL",
        "SQLite",
        "Django",
        "apps",
        "Insurance",
        "premium",
        "calculations",
        "Handson",
        "experience",
        "stream",
        "data",
        "DB2",
        "HDFS",
        "SparkStreaming",
        "Apache",
        "Kafka",
        "Experience",
        "time",
        "data",
        "data",
        "sources",
        "Kafka",
        "data",
        "pipelines",
        "transformations",
        "data",
        "HDFS",
        "Data",
        "Lake",
        "Expertise",
        "tools",
        "Hadoop",
        "Environment",
        "Pig",
        "Hive",
        "HDFS",
        "MapReduce",
        "Sqoop",
        "Spark",
        "Kafka",
        "Yarn",
        "Oozie",
        "Zookeeper",
        "SparkScala",
        "Spark",
        "context",
        "Cassandra",
        "SQL",
        "context",
        "APIs",
        "methods",
        "data",
        "RDDs",
        "Cassandra",
        "table",
        "data",
        "Cassandra",
        "database",
        "Knowledge",
        "ecosystems",
        "Kafka",
        "Spark",
        "HDFS",
        "Hands",
        "experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "XML",
        "SOAP",
        "REST",
        "web",
        "Service",
        "inter",
        "software",
        "applications",
        "Hands",
        "experience",
        "Build",
        "Automation",
        "tool",
        "Maven",
        "version",
        "control",
        "tools",
        "Git",
        "GitHub",
        "experience",
        "Shell",
        "Scripting",
        "Oracle",
        "RDBMS",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "containerization",
        "infrastructure",
        "Docker",
        "experience",
        "Kubernetes",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MSSQL",
        "Server",
        "Expertise",
        "OOAD",
        "Technologies",
        "Use",
        "Cases",
        "Activity",
        "diagrams",
        "Sequence",
        "Diagrams",
        "Class",
        "Diagrams",
        "case",
        "tools",
        "UMLVisual",
        "Studio",
        "Good",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "EC2",
        "S3",
        "VPC",
        "SES",
        "ELB",
        "EBS",
        "RDS",
        "Glacier",
        "Hibernate",
        "Framework",
        "data",
        "Experience",
        "python",
        "libraries",
        "soup",
        "NumPy",
        "matplotlib",
        "SciPy",
        "SQL",
        "Alchemy",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Client",
        "United",
        "Health",
        "Group",
        "Minneapolis",
        "MN",
        "January",
        "Present",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "applications",
        "Hibernate",
        "XML",
        "Android",
        "XSLT",
        "Basic",
        "ASPnet",
        "applications",
        "Core",
        "Java",
        "concepts",
        "Multithreading",
        "Garbage",
        "Collections",
        "Collection",
        "frontend",
        "modules",
        "python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Webservices",
        "development",
        "Python",
        "Flask",
        "Django",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "Carpathias",
        "cloud",
        "operations",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Restful",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "python",
        "decorators",
        "generator",
        "list",
        "comprehensions",
        "JSON",
        "cache",
        "pandas",
        "NumPy",
        "python",
        "functions",
        "processing",
        "data",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Automated",
        "Regular",
        "AWS",
        "tasks",
        "snapshots",
        "creation",
        "Python",
        "scripts",
        "servers",
        "Ubuntu",
        "Linux",
        "Windows",
        "AWS",
        "EC2",
        "OpenSource",
        "Chef",
        "server",
        "Familiar",
        "write",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "user",
        "interface",
        "CSS",
        "HTML",
        "XHTML",
        "AJAX",
        "JavaScript",
        "jQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "Written",
        "Python",
        "Scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Bootstrap",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "ASPNET",
        "C",
        "Flask",
        "Python",
        "PHP",
        "Rewritten",
        "Java",
        "C",
        "application",
        "Python",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Experience",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Created",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "AngularJs",
        "Python",
        "Libraries",
        "numPY",
        "AWS",
        "Pandas",
        "library",
        "Analysis",
        "Angularjs",
        "client",
        "application",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "Created",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "handlers",
        "SOAP",
        "messages",
        "unit",
        "test",
        "XML",
        "code",
        "script",
        "testing",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Git",
        "repository",
        "GitHub",
        "project",
        "Connected",
        "Flex",
        "Backend",
        "Controller",
        "API",
        "services",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "production",
        "site",
        "Apache",
        "Servers",
        "mod",
        "Python",
        "AWS",
        "reports",
        "xlrtxlwt",
        "python",
        "packages",
        "reportlab2733",
        "JSON",
        "modules",
        "python",
        "webservices",
        "understanding",
        "ObjectOriented",
        "Methodology",
        "Unified",
        "Modeling",
        "Language",
        "UML",
        "Design",
        "Patterns",
        "experience",
        "design",
        "tools",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "Experienced",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "SOA",
        "web",
        "services",
        "SOAP",
        "web",
        "service",
        "interface",
        "Python",
        "Developer",
        "Client",
        "Essex",
        "Bank",
        "Richmond",
        "VA",
        "March",
        "January",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Hands",
        "experience",
        "Spark",
        "Core",
        "Spark",
        "SQL",
        "Data",
        "FramesData",
        "API",
        "Django",
        "Python",
        "unit",
        "framework",
        "Python",
        "applications",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "REST",
        "Web",
        "services",
        "business",
        "methods",
        "services",
        "project",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "requirement",
        "gathering",
        "architect",
        "modeling",
        "Git",
        "repository",
        "project",
        "GitHub",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Experience",
        "Spark",
        "application",
        "spark",
        "optimization",
        "techniques",
        "problems",
        "progress",
        "project",
        "frontend",
        "modules",
        "python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "python",
        "packages",
        "Numpy",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "Professional",
        "Experience",
        "Python",
        "Developer",
        "Client",
        "Fargo",
        "San",
        "Francisco",
        "CA",
        "January",
        "March",
        "Responsibilities",
        "Analysis",
        "Design",
        "applications",
        "features",
        "dashboard",
        "Python",
        "Django",
        "JavaScript",
        "millions",
        "database",
        "records",
        "errors",
        "data",
        "patterns",
        "ETL",
        "APIs",
        "data",
        "mining",
        "database",
        "sources",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "users",
        "manuals",
        "documentation",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "databases",
        "AWS",
        "RDS",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Work",
        "development",
        "teams",
        "projects",
        "production",
        "AWS",
        "environment",
        "support",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Lang",
        "servers",
        "Developed",
        "Micro",
        "services",
        "Go",
        "language",
        "test",
        "cases",
        "Contributed",
        "source",
        "code",
        "Golang",
        "automation",
        "framework",
        "AWS",
        "CFN",
        "PDF",
        "reports",
        "Golang",
        "XML",
        "documents",
        "customers",
        "end",
        "month",
        "language",
        "support",
        "part",
        "life",
        "cycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Delivery",
        "Pipeline",
        "Jenkins",
        "GitHub",
        "Docker",
        "container",
        "Docker",
        "highlevel",
        "API",
        "containers",
        "isolation",
        "creation",
        "Docker",
        "container",
        "images",
        "images",
        "Docker",
        "repository",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "project",
        "threadsafe",
        "Developed",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "project",
        "designs",
        "MVC",
        "architecture",
        "components",
        "Education",
        "Bachelors",
        "Skills",
        "Visual",
        "studio",
        "Amazon",
        "web",
        "services",
        "Application",
        "server",
        "C",
        "Django",
        "Docker",
        "Git",
        "Gradle",
        "Html",
        "Javascript",
        "Nodejs",
        "Jenkins",
        "Python",
        "Flask",
        "Matplotlib",
        "Numpy",
        "Pandas",
        "Database",
        "Sql",
        "server",
        "Mysql",
        "Jquery",
        "CSS",
        "Android",
        "PHP",
        "ASP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:11:50.518896",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Client United Health Group Minneapolis MN 4years of experience in WebApplication Development as a senior Python Developer in analytical programming using python with skills in analysis design development testing and deploying software applications Experience in all phases of Software Development Life Cycle SDLCWaterfall agile Process across various workflows Requirement study Analysis Design Coding Testing Deployment and Maintenance in Web ClientServer application development Hands on experience on various python libraries to speed up development libraries used Beautiful Soup SciPy Matplotlib python twitter Pandas data frame network urllib2 MySQL NOSQL dB for database connectivity JSON libraries Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular24 Experience in working with various Python Integrated Development PyCharm Atom Spyder Eclipse Visual Studio Code Notepad and Sublime Text Experience in Automation scripts by using Selenium and Win Runner also used Test DirectorHP ALM to manage the entire Automation testing process Experience in performing Data driven testing to validate the components displayed on the website using Selenium Experience with DNSDHCPWINS Standardizations and Implementation Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML XHTML Angular JS Bootstrap underscore JS Node JS CSS JavaScript AJAX JSP JDBC XML XSLT Python Django PHP Good experience in developing web applications implementing MVT architecture using Django Flask Webapp2 web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in application development using python MongoDB Flask HTML5 CSS JavaScript jQuery MySQL PostgreSQL and SQLite Made Django webbased apps for Insurance premium calculations Handson experience on fetching the live stream data from DB2 to HDFS using SparkStreaming and Apache Kafka Experience in real time data from various data sources through Kafka data pipelines and applied various transformations to normalize the data stored in HDFS Data Lake Expertise with different tools in Hadoop Environment including Pig Hive HDFS MapReduce Sqoop Spark Kafka Yarn Oozie and Zookeeper Deeply involved in writing complex SparkScala scripts Spark context Cassandra SQL context used multiple APIs methods which support data frames RDDs Cassandra table joins and finally writesave the data framesRDDs to Cassandra database Knowledge on integrating different ecosystems like Kafka Spark HDFS Hands on experience with continuous integration and automation using Jenkins Experience in using XML SOAP REST web Service for inter operable software applications Hands on experience with Build Automation tool like Maven and version control tools such as Git and GitHub Good experience in Shell Scripting Oracle RDBMS SQL Server UNIX and Linux Hands on experience with bug tracking tools JIRA and Bugzilla Extensively used containerization and immutable infrastructure Docker has been core to this experience along with Kubernetes Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MSSQL Server Expertise in OOAD Technologies developing Use Cases Activity diagrams Sequence Diagrams and Class Diagrams using case tools like UMLVisual Studio Good experience in working with Amazon Web Services AWS like AWS EC2 S3 VPC SES ELB EBS RDS Glacier DynamoapiDB etc Extensively used Hibernate Framework for data handling Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy SQL Alchemy Work Experience Python Developer Client United Health Group Minneapolis MN January 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Developed JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Involved in working with Webservices backend development using Python Flask Django Deployed Django web application in Apache webserver and Carpathias cloud operations Involved in developing views and templates with Python and Django view controller and templating language to create a userfriendly website interface Worked on Restful web services using Python REST API Framework Used python decorators generator list comprehensions list JSON cache pandas and NumPy for building python functions for processing of data Involved in designing and deploying multitude applications utilizing almost all the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Familiar with MongoDB write concern to avoid loss of data during system failures Developed rich user interface using CSS HTML XHTML AJAX JavaScript and jQuery Created a Python based GUI application For Freight Tracking and processing Written Python Scripts to parse XML documents and load the data in database Experienced with Bootstrap as a mechanism to manage and organize the HTML page layout Done scalable databasedriven web application development using a variety of frameworks ASPNET on C Flask on Python and PHP Rewritten existing Java C application in Python Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Created database using MySQL wrote several queries to extract data from database Consumed external APIs and wrote RESTful API using Django REST Framework and AngularJs Utilized Python Libraries like Boto3 numPY for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created SOAP web services and SOAP handlers to store the SOAP messages Performed pytest and unit test on them Extracted XML code from script for testing Deployed the project into Jenkins using GIT version control system Created Git repository and added to GitHub project Connected Flex from Backend Controller using different API services Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Deployed production site using Apache Servers with mod Python and AWS Created many reports using xlrtxlwt python packages and reportlab2733 Used JSON and SimpleJSON modules of python to call webservices Thorough understanding of ObjectOriented Methodology Unified Modeling Language UML and Design Patterns and experience on design tools Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Implemented SOA based web services designed and built SOAP web service interface Python Developer Client Essex Bank Richmond VA March 2016 to January 2018 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Having experience in Agile Methodologies Scrum stories and sprints experience in Python Developed user interface using CSS HTML JavaScript and jQuery Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Hands on experience with Spark Core Spark SQL and Data FramesData SetsRDD API Used Django the Python unit framework for all Python applications Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Involved in develop the REST Web services to expose the business methods to external services in the project Worked on front end frame works like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Created a Git repository and added the project to GitHub Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Experience in tuning and debugging Spark application and using spark optimization techniques Documented the problems and progress of project most accurately Developed entire frontend and backend modules using python on Django Web Framework with GIT Successfully Migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Worked on several python packages like Numpy PySide Scipy wxPython PyTables etc Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Professional Experience Python Developer Client Well Fargo San Francisco CA January 2015 to March 2016 Responsibilities Analysis and Design of applications Developed and tested many features for dashboard using Python Django and JavaScript Worked with millions of database records daily finding common errors and bad data patterns and fixing them Designed and developed ETL APIs which will automate the data mining in different database sources ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL dB package Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Setting up databases in AWS using RDS and configuring instance backups to S3 bucket Work closely with development teams to integrate their projects into the production AWS environment and ensure their ongoing support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that are main source of data for both customers and internal customer service team Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Contributed source code in Golang to developing an automation framework for AWS CFN Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Taken part in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented a continuous Delivery Pipeline with Jenkins and GitHub to build a new Docker container automatically Used Docker to implement a highlevel API to provide lightweight containers that run processes isolation and worked on creation of customized Docker container images tagged and pushed the images to the Docker repository Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more RESTful and threadsafe Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Designed RESTful XML web service for handling AJAX requests Created project designs utilizing MVC architecture components Education Bachelors Skills Visual studio Amazon web services Application server C Django Docker Git Gradle Html Javascript Nodejs Jenkins Python Flask Matplotlib Numpy Pandas Database Sql server Mysql Jquery CSS Android PHP ASP",
    "unique_id": "ab6a446b-1d34-4811-89d2-6e5e1ec9907b"
}