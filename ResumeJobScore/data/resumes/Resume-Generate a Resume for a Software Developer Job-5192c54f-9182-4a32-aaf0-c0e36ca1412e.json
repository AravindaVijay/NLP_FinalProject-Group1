{
    "clean_data": "Senior Angular 6 NodeJS Developer Senior Angular 6 amp NodeJS span lDeveloperspan Senior Angular 6 NodeJS Developer Variable Assign Technology LLC Work Experience Senior Angular 6 NodeJS Developer Variable Assign Technology LLC June 2017 to Present Senior full stack NodeJS developer with Angular 6 Angular Material on the frontend The Backend consist of an StrongLoop The frontend app involved acquiring business requirement documents BRDs from the product owner With the BRDs I turned them into test driven documents TDDs which greatly helped and assisted development and domain knowledge for my developer Also consuming the google analytics api to generate reactdashboard reports for an already existing implementation Senior Angular 5 Python Developer September 2016 to June 2017 Senior full stack Python developer with Angular 5 Nunjucks HTML5 frontend The Backend consist of a secure and reliable Python Flask api which includes authentication logging caching and debugging Handled logouts and prevent abuse with JWT blacklisting Clear conception of different layers of web servers FlaskRest efficient development simplifying storage with FlaskSQLAlchemy FlaskJWTExtended and FlaskTesting extensions Senior React NodeJS Developer May 2015 to September 2016 Senior full stack NodeJS developer with an React Redux Thunk 150 and Typescript front end Backend consist of Express to configure and boot the app along with a HAPI REST API Worked on the Lenovo Cloud Management Tool project which is a C REST API with a GUI interface to display account information Senior React NodeJS Developer March 2014 to June 2015 Senior full stack developer converting custom Java based CMS into Angular React Flux 15 and HAPI application Developed Go API with the revel framework with Ginkgo development at the forefront driving the Test Driven Development process Heavy web analytics implementation with Google tag manager Creating custom events and monitoring the library of events Also consuming the google analytics api to generate reactdashboard reports Education Computer Programming Wake Tech Community College Raleigh NC US September 2008 to September 2010 Computer Programming Queensborough Community College Queens NY US September 2007 to September 2008 Computer Science eArmy University March 2001 to March 2004 Skills API 2 years REDUX 1 year REST 2 years HTML5 Less than 1 year AUTHENTICATION Less than 1 year Additional Information Skills Presentation HTML5 CSS3 LESS SASS STYLUS Bootstrap Foundation Selectors Gradients Media Queries Transforms Animations Angular Material Theme Section 508 web accessibility guidelines Local Storage Session Storage Font Awesome IcoMoon Building Custom Icon Fonts Web App Dev AngularJS 15 6 Component Architecture ReactJS Redux Angular Redux Advanced JavaScript ES6 JS Class Design Patterns Commonjs AMD ES6 Modules Unit and Integration Testing Jest and Enzyme Enyzme Adapter React Enyzme to JSON Mocha Jasmine Qunit Sinonjs Protractor Lab Chart Libs D3js Highchartjs Prototypejs Meteorjs Web Analytics Adobe Analytics Tools WebTrends Optimost SiteCatalyst AngularJS Analytic Modules Google Tag Manager NodeJS Server Side Development Express Hapi Loopback Initial routing and setting view engine Passed application settings to configure the boot process REST Api Development Testing and Validation with JOI within HAPI Implemented user authentication through node modules Hapi authentication and JSONwebtoken Seed data stored in MySQL instance Integration with Amazon Web Services API and Redis App deployed on AWS AMI instance with NGINX plus Custom build and deploy scripts required due to specific custom application requirements Hoek utility and functional methods along with Lodash Node Testing Module Sinon JOI Lab Isolated test with Stubs Spies and Fake timing Implemented within routes for validation Implemented as test utility for all projects GO Managing Simple Values Functional Complex Type and Collections Developing proper program flow Structuring GO code within the app REST API Revel Gin Gorilla Test Framework Gingko ORM Framework Bongo Gorm GoPG Database DB Abstraction Layer Bookshelf Knex Sequelize Bookshelf ORM implemented in Hapi Routes Knex for raw sql queries and used primarily to seed the db Sequelize table definitions and db migrations DB Tools SQLite SQL Developer MySQL Workbench MySQL MSSQL MariaDB MongoDB Couchbase DB Build Tools Source Control Gulp Grunt Webpack Angular CLI Git GitHub BitBucket Phabricator Jenkins Ant Maven Gradle Visual Studio Code Eclipse IntelliJ Netbeans JIRA TFS ASANA AWS DevOps Continuous Integration Continuous Delivery CI CD Jenkins GitGitHub AWS CodePipeline and AWS CodeCommit AWS CodeDeploy Management Tools Security AWS CloudFormation I generally provision AWS resources such as EC2 OpsWorks Route 53 VPC security groups ELBs RDS S3 Autoscaling IAM etc using a JSON template Also Ive committed these templates to source control with the rest of the software system assets AWS OpsWorks AWS Support AWS CloudTrail AWS CLI AWS SDK Janitor Monkey NetflixOSS New Relic AWS CloudTrail Cloudability Storage Content Delivery Amazon Simple Storage Service S3 S3 is where all files get stored We typically provision S3 usage and configuration using CloudFormation We also use S3 serverside encryption to encrypt certain files at rest Amazon CloudFront CloudFront is a contentdelivery network for increasing the performance of web applications We configure CloudFront usage in CloudFormation Database Networking AWS ElastiCache Amazon RDS Amazon DynamoDB Amazon VPC Amazon Route 53",
    "entities": [
        "Bootstrap Foundation",
        "CloudFormation Database Networking AWS",
        "Developer Variable Assign Technology",
        "Angular React Flux 15",
        "HAPI Implemented",
        "Backend",
        "GUI",
        "Computer Programming Queensborough Community College Queens",
        "US",
        "SiteCatalyst",
        "NGINX",
        "FlaskRest",
        "Server Side Development Express",
        "NC",
        "JWT",
        "Enzyme Enyzme Adapter React Enyzme to JSON Mocha Jasmine Qunit Sinonjs",
        "CodePipeline",
        "OpsWorks Route",
        "Amazon CloudFront CloudFront",
        "Hapi",
        "JSONwebtoken Seed",
        "AMI",
        "AWS CodeCommit AWS CodeDeploy Management Tools Security AWS",
        "CloudFront",
        "Component Architecture",
        "HAPI",
        "Education Computer Programming Wake Tech Community College",
        "Google",
        "CMS",
        "Amazon Web Services API",
        "Raleigh",
        "Stubs Spies and Fake",
        "Amazon Route",
        "node",
        "JOI",
        "Express",
        "OpsWorks AWS Support AWS CloudTrail AWS CLI AWS",
        "New Relic AWS CloudTrail Cloudability Storage Content Delivery Amazon Simple Storage Service",
        "the Test Driven Development",
        "the Lenovo Cloud Management Tool",
        "React Redux Thunk 150",
        "Amazon VPC",
        "Hoek",
        "Developer Variable Assign Technology LLC Work",
        "CloudFormation",
        "ElastiCache"
    ],
    "experience": "Experience Senior Angular 6 NodeJS Developer Variable Assign Technology LLC June 2017 to Present Senior full stack NodeJS developer with Angular 6 Angular Material on the frontend The Backend consist of an StrongLoop The frontend app involved acquiring business requirement documents BRDs from the product owner With the BRDs I turned them into test driven documents TDDs which greatly helped and assisted development and domain knowledge for my developer Also consuming the google analytics api to generate reactdashboard reports for an already existing implementation Senior Angular 5 Python Developer September 2016 to June 2017 Senior full stack Python developer with Angular 5 Nunjucks HTML5 frontend The Backend consist of a secure and reliable Python Flask api which includes authentication logging caching and debugging Handled logouts and prevent abuse with JWT blacklisting Clear conception of different layers of web servers FlaskRest efficient development simplifying storage with FlaskSQLAlchemy FlaskJWTExtended and FlaskTesting extensions Senior React NodeJS Developer May 2015 to September 2016 Senior full stack NodeJS developer with an React Redux Thunk 150 and Typescript front end Backend consist of Express to configure and boot the app along with a HAPI REST API Worked on the Lenovo Cloud Management Tool project which is a C REST API with a GUI interface to display account information Senior React NodeJS Developer March 2014 to June 2015 Senior full stack developer converting custom Java based CMS into Angular React Flux 15 and HAPI application Developed Go API with the revel framework with Ginkgo development at the forefront driving the Test Driven Development process Heavy web analytics implementation with Google tag manager Creating custom events and monitoring the library of events Also consuming the google analytics api to generate reactdashboard reports Education Computer Programming Wake Tech Community College Raleigh NC US September 2008 to September 2010 Computer Programming Queensborough Community College Queens NY US September 2007 to September 2008 Computer Science eArmy University March 2001 to March 2004 Skills API 2 years REDUX 1 year REST 2 years HTML5 Less than 1 year AUTHENTICATION Less than 1 year Additional Information Skills Presentation HTML5 CSS3 LESS SASS STYLUS Bootstrap Foundation Selectors Gradients Media Queries Transforms Animations Angular Material Theme Section 508 web accessibility guidelines Local Storage Session Storage Font Awesome IcoMoon Building Custom Icon Fonts Web App Dev AngularJS 15 6 Component Architecture ReactJS Redux Angular Redux Advanced JavaScript ES6 JS Class Design Patterns Commonjs AMD ES6 Modules Unit and Integration Testing Jest and Enzyme Enyzme Adapter React Enyzme to JSON Mocha Jasmine Qunit Sinonjs Protractor Lab Chart Libs D3js Highchartjs Prototypejs Meteorjs Web Analytics Adobe Analytics Tools WebTrends Optimost SiteCatalyst AngularJS Analytic Modules Google Tag Manager NodeJS Server Side Development Express Hapi Loopback Initial routing and setting view engine Passed application settings to configure the boot process REST Api Development Testing and Validation with JOI within HAPI Implemented user authentication through node modules Hapi authentication and JSONwebtoken Seed data stored in MySQL instance Integration with Amazon Web Services API and Redis App deployed on AWS AMI instance with NGINX plus Custom build and deploy scripts required due to specific custom application requirements Hoek utility and functional methods along with Lodash Node Testing Module Sinon JOI Lab Isolated test with Stubs Spies and Fake timing Implemented within routes for validation Implemented as test utility for all projects GO Managing Simple Values Functional Complex Type and Collections Developing proper program flow Structuring GO code within the app REST API Revel Gin Gorilla Test Framework Gingko ORM Framework Bongo Gorm GoPG Database DB Abstraction Layer Bookshelf Knex Sequelize Bookshelf ORM implemented in Hapi Routes Knex for raw sql queries and used primarily to seed the db Sequelize table definitions and db migrations DB Tools SQLite SQL Developer MySQL Workbench MySQL MSSQL MariaDB MongoDB Couchbase DB Build Tools Source Control Gulp Grunt Webpack Angular CLI Git GitHub BitBucket Phabricator Jenkins Ant Maven Gradle Visual Studio Code Eclipse IntelliJ Netbeans JIRA TFS ASANA AWS DevOps Continuous Integration Continuous Delivery CI CD Jenkins GitGitHub AWS CodePipeline and AWS CodeCommit AWS CodeDeploy Management Tools Security AWS CloudFormation I generally provision AWS resources such as EC2 OpsWorks Route 53 VPC security groups ELBs RDS S3 Autoscaling IAM etc using a JSON template Also I ve committed these templates to source control with the rest of the software system assets AWS OpsWorks AWS Support AWS CloudTrail AWS CLI AWS SDK Janitor Monkey NetflixOSS New Relic AWS CloudTrail Cloudability Storage Content Delivery Amazon Simple Storage Service S3 S3 is where all files get stored We typically provision S3 usage and configuration using CloudFormation We also use S3 serverside encryption to encrypt certain files at rest Amazon CloudFront CloudFront is a contentdelivery network for increasing the performance of web applications We configure CloudFront usage in CloudFormation Database Networking AWS ElastiCache Amazon RDS Amazon DynamoDB Amazon VPC Amazon Route 53",
    "extracted_keywords": [
        "Senior",
        "Angular",
        "NodeJS",
        "Developer",
        "Senior",
        "Angular",
        "amp",
        "NodeJS",
        "span",
        "lDeveloperspan",
        "Senior",
        "Angular",
        "NodeJS",
        "Developer",
        "Variable",
        "Assign",
        "Technology",
        "LLC",
        "Work",
        "Experience",
        "Senior",
        "Angular",
        "NodeJS",
        "Developer",
        "Variable",
        "Assign",
        "Technology",
        "LLC",
        "June",
        "Present",
        "Senior",
        "stack",
        "NodeJS",
        "developer",
        "Angular",
        "Angular",
        "Material",
        "frontend",
        "Backend",
        "consist",
        "StrongLoop",
        "frontend",
        "app",
        "business",
        "requirement",
        "BRDs",
        "product",
        "owner",
        "BRDs",
        "test",
        "documents",
        "TDDs",
        "development",
        "domain",
        "knowledge",
        "developer",
        "google",
        "analytics",
        "reports",
        "implementation",
        "Senior",
        "Angular",
        "Python",
        "Developer",
        "September",
        "June",
        "Senior",
        "stack",
        "Python",
        "developer",
        "Angular",
        "Nunjucks",
        "HTML5",
        "Backend",
        "consist",
        "Python",
        "Flask",
        "api",
        "authentication",
        "logouts",
        "abuse",
        "JWT",
        "Clear",
        "conception",
        "layers",
        "web",
        "servers",
        "FlaskRest",
        "development",
        "storage",
        "FlaskSQLAlchemy",
        "FlaskJWTExtended",
        "FlaskTesting",
        "Senior",
        "React",
        "NodeJS",
        "Developer",
        "May",
        "September",
        "Senior",
        "stack",
        "NodeJS",
        "developer",
        "React",
        "Redux",
        "Thunk",
        "Typescript",
        "end",
        "Backend",
        "consist",
        "Express",
        "configure",
        "app",
        "HAPI",
        "REST",
        "API",
        "Lenovo",
        "Cloud",
        "Management",
        "Tool",
        "project",
        "C",
        "REST",
        "API",
        "GUI",
        "interface",
        "account",
        "information",
        "Senior",
        "React",
        "NodeJS",
        "Developer",
        "March",
        "June",
        "Senior",
        "stack",
        "developer",
        "custom",
        "Java",
        "CMS",
        "Angular",
        "React",
        "Flux",
        "HAPI",
        "application",
        "Developed",
        "Go",
        "API",
        "revel",
        "framework",
        "Ginkgo",
        "development",
        "forefront",
        "Test",
        "Driven",
        "Development",
        "process",
        "Heavy",
        "web",
        "analytics",
        "implementation",
        "Google",
        "tag",
        "manager",
        "custom",
        "events",
        "library",
        "events",
        "google",
        "analytics",
        "reactdashboard",
        "Education",
        "Computer",
        "Programming",
        "Wake",
        "Tech",
        "Community",
        "College",
        "Raleigh",
        "NC",
        "US",
        "September",
        "September",
        "Computer",
        "Programming",
        "Queensborough",
        "Community",
        "College",
        "Queens",
        "NY",
        "US",
        "September",
        "September",
        "Computer",
        "Science",
        "eArmy",
        "University",
        "March",
        "March",
        "Skills",
        "API",
        "years",
        "REDUX",
        "year",
        "REST",
        "years",
        "HTML5",
        "year",
        "AUTHENTICATION",
        "year",
        "Additional",
        "Information",
        "Skills",
        "Presentation",
        "HTML5",
        "SASS",
        "STYLUS",
        "Bootstrap",
        "Foundation",
        "Selectors",
        "Gradients",
        "Media",
        "Queries",
        "Animations",
        "Angular",
        "Material",
        "Theme",
        "Section",
        "web",
        "accessibility",
        "Local",
        "Storage",
        "Session",
        "Storage",
        "Font",
        "Awesome",
        "IcoMoon",
        "Building",
        "Custom",
        "Icon",
        "Fonts",
        "Web",
        "App",
        "Dev",
        "AngularJS",
        "Component",
        "Architecture",
        "ReactJS",
        "Redux",
        "Angular",
        "Redux",
        "Advanced",
        "JavaScript",
        "ES6",
        "JS",
        "Class",
        "Design",
        "Patterns",
        "Commonjs",
        "AMD",
        "ES6",
        "Modules",
        "Unit",
        "Integration",
        "Testing",
        "Jest",
        "Enzyme",
        "Enyzme",
        "Adapter",
        "React",
        "Enyzme",
        "JSON",
        "Mocha",
        "Jasmine",
        "Qunit",
        "Sinonjs",
        "Protractor",
        "Lab",
        "Chart",
        "Libs",
        "Highchartjs",
        "Prototypejs",
        "Meteorjs",
        "Web",
        "Analytics",
        "Adobe",
        "Analytics",
        "Tools",
        "WebTrends",
        "Optimost",
        "SiteCatalyst",
        "Analytic",
        "Modules",
        "Google",
        "Tag",
        "Manager",
        "NodeJS",
        "Server",
        "Side",
        "Development",
        "Express",
        "Hapi",
        "Loopback",
        "Initial",
        "routing",
        "view",
        "engine",
        "application",
        "settings",
        "boot",
        "process",
        "REST",
        "Api",
        "Development",
        "Testing",
        "Validation",
        "JOI",
        "HAPI",
        "user",
        "authentication",
        "node",
        "modules",
        "Hapi",
        "authentication",
        "JSONwebtoken",
        "Seed",
        "data",
        "MySQL",
        "instance",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "API",
        "Redis",
        "App",
        "AWS",
        "AMI",
        "instance",
        "NGINX",
        "Custom",
        "build",
        "scripts",
        "custom",
        "application",
        "requirements",
        "Hoek",
        "utility",
        "methods",
        "Lodash",
        "Node",
        "Testing",
        "Module",
        "Sinon",
        "JOI",
        "Lab",
        "test",
        "Stubs",
        "Spies",
        "timing",
        "routes",
        "validation",
        "test",
        "utility",
        "projects",
        "GO",
        "Simple",
        "Values",
        "Functional",
        "Complex",
        "Type",
        "Collections",
        "program",
        "flow",
        "Structuring",
        "GO",
        "code",
        "app",
        "REST",
        "API",
        "Revel",
        "Gin",
        "Gorilla",
        "Test",
        "Framework",
        "Gingko",
        "ORM",
        "Framework",
        "Bongo",
        "Gorm",
        "GoPG",
        "Database",
        "DB",
        "Abstraction",
        "Layer",
        "Bookshelf",
        "Knex",
        "Sequelize",
        "Bookshelf",
        "ORM",
        "Hapi",
        "Routes",
        "Knex",
        "queries",
        "db",
        "Sequelize",
        "table",
        "definitions",
        "db",
        "migrations",
        "DB",
        "Tools",
        "SQLite",
        "SQL",
        "Developer",
        "MySQL",
        "Workbench",
        "MySQL",
        "MSSQL",
        "DB",
        "Build",
        "Tools",
        "Source",
        "Control",
        "Gulp",
        "Grunt",
        "Webpack",
        "Angular",
        "CLI",
        "Git",
        "GitHub",
        "BitBucket",
        "Phabricator",
        "Jenkins",
        "Ant",
        "Maven",
        "Gradle",
        "Visual",
        "Studio",
        "Code",
        "Eclipse",
        "IntelliJ",
        "Netbeans",
        "JIRA",
        "TFS",
        "ASANA",
        "AWS",
        "DevOps",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "CI",
        "CD",
        "Jenkins",
        "GitGitHub",
        "AWS",
        "CodePipeline",
        "AWS",
        "CodeCommit",
        "AWS",
        "CodeDeploy",
        "Management",
        "Tools",
        "Security",
        "AWS",
        "CloudFormation",
        "AWS",
        "resources",
        "EC2",
        "OpsWorks",
        "Route",
        "VPC",
        "security",
        "groups",
        "RDS",
        "S3",
        "Autoscaling",
        "IAM",
        "JSON",
        "template",
        "templates",
        "source",
        "control",
        "rest",
        "software",
        "system",
        "assets",
        "AWS",
        "OpsWorks",
        "AWS",
        "Support",
        "AWS",
        "CloudTrail",
        "AWS",
        "CLI",
        "AWS",
        "SDK",
        "Janitor",
        "Monkey",
        "New",
        "Relic",
        "AWS",
        "CloudTrail",
        "Cloudability",
        "Storage",
        "Content",
        "Delivery",
        "Amazon",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "S3",
        "files",
        "S3",
        "usage",
        "configuration",
        "CloudFormation",
        "S3",
        "serverside",
        "encryption",
        "files",
        "rest",
        "Amazon",
        "CloudFront",
        "CloudFront",
        "contentdelivery",
        "network",
        "performance",
        "web",
        "applications",
        "CloudFront",
        "usage",
        "CloudFormation",
        "Database",
        "Networking",
        "AWS",
        "ElastiCache",
        "Amazon",
        "RDS",
        "Amazon",
        "Amazon",
        "VPC",
        "Amazon",
        "Route"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:14:30.120857",
    "resume_data": "Senior Angular 6 NodeJS Developer Senior Angular 6 amp NodeJS span lDeveloperspan Senior Angular 6 NodeJS Developer Variable Assign Technology LLC Work Experience Senior Angular 6 NodeJS Developer Variable Assign Technology LLC June 2017 to Present Senior full stack NodeJS developer with Angular 6 Angular Material on the frontend The Backend consist of an StrongLoop The frontend app involved acquiring business requirement documents BRDs from the product owner With the BRDs I turned them into test driven documents TDDs which greatly helped and assisted development and domain knowledge for my developer Also consuming the google analytics api to generate reactdashboard reports for an already existing implementation Senior Angular 5 Python Developer September 2016 to June 2017 Senior full stack Python developer with Angular 5 Nunjucks HTML5 frontend The Backend consist of a secure and reliable Python Flask api which includes authentication logging caching and debugging Handled logouts and prevent abuse with JWT blacklisting Clear conception of different layers of web servers FlaskRest efficient development simplifying storage with FlaskSQLAlchemy FlaskJWTExtended and FlaskTesting extensions Senior React NodeJS Developer May 2015 to September 2016 Senior full stack NodeJS developer with an React Redux Thunk 150 and Typescript front end Backend consist of Express to configure and boot the app along with a HAPI REST API Worked on the Lenovo Cloud Management Tool project which is a C REST API with a GUI interface to display account information Senior React NodeJS Developer March 2014 to June 2015 Senior full stack developer converting custom Java based CMS into Angular React Flux 15 and HAPI application Developed Go API with the revel framework with Ginkgo development at the forefront driving the Test Driven Development process Heavy web analytics implementation with Google tag manager Creating custom events and monitoring the library of events Also consuming the google analytics api to generate reactdashboard reports Education Computer Programming Wake Tech Community College Raleigh NC US September 2008 to September 2010 Computer Programming Queensborough Community College Queens NY US September 2007 to September 2008 Computer Science eArmy University March 2001 to March 2004 Skills API 2 years REDUX 1 year REST 2 years HTML5 Less than 1 year AUTHENTICATION Less than 1 year Additional Information Skills Presentation HTML5 CSS3 LESS SASS STYLUS Bootstrap Foundation Selectors Gradients Media Queries Transforms Animations Angular Material Theme Section 508 web accessibility guidelines Local Storage Session Storage Font Awesome IcoMoon Building Custom Icon Fonts Web App Dev AngularJS 15 6 Component Architecture ReactJS Redux Angular Redux Advanced JavaScript ES6 JS Class Design Patterns Commonjs AMD ES6 Modules Unit and Integration Testing Jest and Enzyme Enyzme Adapter React Enyzme to JSON Mocha Jasmine Qunit Sinonjs Protractor Lab Chart Libs D3js Highchartjs Prototypejs Meteorjs Web Analytics Adobe Analytics Tools WebTrends Optimost SiteCatalyst AngularJS Analytic Modules Google Tag Manager NodeJS Server Side Development Express Hapi Loopback Initial routing and setting view engine Passed application settings to configure the boot process REST Api Development Testing and Validation with JOI within HAPI Implemented user authentication through node modules Hapi authentication and JSONwebtoken Seed data stored in MySQL instance Integration with Amazon Web Services API and Redis App deployed on AWS AMI instance with NGINX plus Custom build and deploy scripts required due to specific custom application requirements Hoek utility and functional methods along with Lodash Node Testing Module Sinon JOI Lab Isolated test with Stubs Spies and Fake timing Implemented within routes for validation Implemented as test utility for all projects GO Managing Simple Values Functional Complex Type and Collections Developing proper program flow Structuring GO code within the app REST API Revel Gin Gorilla Test Framework Gingko ORM Framework Bongo Gorm GoPG Database DB Abstraction Layer Bookshelf Knex Sequelize Bookshelf ORM implemented in Hapi Routes Knex for raw sql queries and used primarily to seed the db Sequelize table definitions and db migrations DB Tools SQLite SQL Developer MySQL Workbench MySQL MSSQL MariaDB MongoDB Couchbase DB Build Tools Source Control Gulp Grunt Webpack Angular CLI Git GitHub BitBucket Phabricator Jenkins Ant Maven Gradle Visual Studio Code Eclipse IntelliJ Netbeans JIRA TFS ASANA AWS DevOps Continuous Integration Continuous Delivery CI CD Jenkins GitGitHub AWS CodePipeline and AWS CodeCommit AWS CodeDeploy Management Tools Security AWS CloudFormation I generally provision AWS resources such as EC2 OpsWorks Route 53 VPC security groups ELBs RDS S3 Autoscaling IAM etc using a JSON template Also Ive committed these templates to source control with the rest of the software system assets AWS OpsWorks AWS Support AWS CloudTrail AWS CLI AWS SDK Janitor Monkey NetflixOSS New Relic AWS CloudTrail Cloudability Storage Content Delivery Amazon Simple Storage Service S3 S3 is where all files get stored We typically provision S3 usage and configuration using CloudFormation We also use S3 serverside encryption to encrypt certain files at rest Amazon CloudFront CloudFront is a contentdelivery network for increasing the performance of web applications We configure CloudFront usage in CloudFormation Database Networking AWS ElastiCache Amazon RDS Amazon DynamoDB Amazon VPC Amazon Route 53",
    "unique_id": "5192c54f-9182-4a32-aaf0-c0e36ca1412e"
}