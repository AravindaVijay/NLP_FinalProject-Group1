{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Hertz Dallas TX 8 years of experience as a WebApplication Developer and objectoriented programming OOP coding with Python Django C Extensive knowledge in Python Java MySQL Oracle Unix Linux and in Object oriented Design and Programming concepts Developed dynamic frontend and backend applications using Python Flask Frameworks Experienced in working with various Python IDEs using PyCharm Spyder NetBeans PyStudio PyScripter Eric Wing IDE and PyDev Good experience of software development in Python libraries used libraries Beautiful Soup PySpark NumPy SciPy Matplotlib asyncio pythontwitter Pandas data frame network urllib2 MySQL for database connectivity and IDEs sublime text Spyder PyCharm pytest Eclipse emacs Develop ECommerce application using HTML CSS JavaScript ReactJS SQL Python and Flask Worked with MVW frameworks like Django Angular JS HTML CSS XML Java Script jQuery and JSON Developed unit tests for Django and Flask applications Researched JavaScript frameworks to replace frontend of a Flask application and began implementing a React solution Cognitive about designing deploying and operating highly available scalable and fault tolerant systems using Amazon Web Services AWS Highly skilled in deployment data security and troubleshooting of the applications using AWS services Experienced in implementing Organization DevOps strategy in various operating environments of Linux and windows servers along with cloud strategies of Amazon Web Services Proficient in writing Cloud Formation Templates CFT in YAML and JSON format to build the AWS services with the paradigm of Infrastructure as a Code Knowledge on Extraction Transformation and Loading techniques with python integration Gained experience in deploying applications on to their respective environments using Elastic Beanstalk Experienced with eventdriven and scheduled AWS Lambda functions to trigger various AWS resources Driven to architect Big Data solutions on multiple platforms using data analytics Extensive knowledge in PHP MySQL NoSQL UNIX and Linux Experience with Design code debug operations reporting data analysis and web applications utilizing Python Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Created internal diagnostic tools using Golang and AngularJS in order to assist with customer issues Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed responsive web product features using React JS SASS on Golang with REST Built enterprise wide DNS historical data trending analysis tools in Go Golang Languages with REST API for user queries as microservice Building a Command line tool to interact with RESTful API using in Golang Worked on MultiTier distributed Enterprise applications and data processing automation using Python Expertise in ObjectOriented design and coding and experience in analyzing and handling large database using Oracle Relational Data Architecture Basic Knowledge on JSON based REST Web services and Amazon Web services Experienced in web applications development using Django Python Flask Python DOJO jQuery while using HTMLCSSJS for serverside rendered applications Experience of software development with Python and various libraries of Python Pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Skillful experience in Python by developing softwares using new tools libraries used libraries Beautiful Soup NumPy SciPy PySide Pythontwitter matplotlib Pickle Pandas dataframe urllib2 MySQL dB for database connectivity to improvise software development process Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Good experience in using Shell scripting for automation by following Python PEP Exposure on Microsoft Azure Cloud platform Expertise in AWS Resources like EC2 S3 EBS VPC ELB AMI SNS RDS IAM Route 53 Auto scaling Cloud Formation Cloud Watch Security Groups Working experience with cloud infrastructure of AWS Amazon Web Services and computing AMI virtual machines on Elastic Compute Cloud EC2 Have experience with AWS LAMBDA which runs the code with response of events Hands on experience with version control tools such as SVN JIRA GitHub and GitLab Developed Webbased applications using python Amazon Web Services jQuery CSS and Model View control frameworks like Django Flask and JavaScript Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Knowledge of automation technology such as Chef Ansible and Puppet Authorized to work in the US for any employer Work Experience Sr Python Developer Hertz Estero FL June 2017 to Present RESPONSIBILITIES Managed datasets using data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Design Implementation of pricing module average swaps basis swaps swaptions and capsfloors on commodity futures in C Developed C Trade Capture and processing application which is a single unified platform for booking and tracking Credit derivatives like CDSI Single Name CDS and Index Tranches etc using networksocket programming and multithreading concepts Developed embedded C real time SCA compliant QT software objects Experience working on a wide range of microcontrollersmicroprocessors such as 8051 8086 ARM PIC on Embedded devices Experience in developing C services using web services architecture SOAP WSDL and XML Development of realtime multitasking systems using Python and created data access modules in Python Designed and developed components using Python with Django framework and Implemented code in Python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Rewrote existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript jQuery and implement CSS for better appearance and feel Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Experience in Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Used the boto3 module in Python to interface with Amazon Web Services AWS like DynamoDB which is a NoSQL database service that provides fast and predictable performance with seamless scalability Also used python scripts for security purposes AWS IAM AWS lambda functions and deploying the applications through elastic beanstalk Used GO lang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 WSDL NetBeans JBOSS Coherence ClearCase Selenium Water Fall Model UML JSP Sr Python Developer Caterpillar Mossville IL February 2016 to April 2017 RESPONSIBILITIES Participated in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Developed in C Web services REST JSON in Windows and Linux environments Developed highly efficient algorithms in C through both pairprogramming and independent work The algorithms improved inventory management benchmarks 18 percent Developed fullstack web applications using Flask Python Reactjs SQL HTMLCSS and JavaScript Included in the geolocation Python NumPy Matplotlib SciPy and Pandas packages created a web scraping application in Flask to perform dataset manipulation for data wrangling Incrementally refactored Flask server endpoints to provide JSON data through REST API to Reactjs components Developed web applications and RESTful web services and APIs using Python Django Developed entire frontend and backend modules using Python on Django Web Framework with GIT Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Managed Linux and Windows virtual servers on AWS EC2 using Chef Server Configured and monitored distributed and multiplatform servers using chef Experience in core AWS services S3 EC2 ELB EBS Route53 VPC Auto scaling etc and deployment services Elastic Beanstalk Lambda OpsWorks and Cloud Formation and security practices IAM CloudWatch and Cloud trail Experience with AWS S3 services creating buckets configuring buckets with permissions logging and versioning and tagging of S3 buckets Creating IAM roles that allows access to IAM APIs to use it in the Lambda function as an execution role through the permissions policy associated with the role Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Experience with Django a highlevel Python Web framework Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Developing Python Framework using Django to perform scan software unit monitoring Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Environment Java Django Flask XML MySQL Linux Shell Scripting Mongo dB SQL Python 33  Cassandra JavaScript PyCharm GIT Linux Shell Scripting RESTful Docker Jenkins JIRA jQuery MySQL AWS PYTHON DEVELOPER Boston Scientific San Jose CA August 2013 to December 2015 RESPONSIBILITIES Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Worked on Python OpenStack APIs and used NumPy for Numerical analysis Worked on real time in memory distributed systems Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested Pythonbased web applications interacting with MySQL Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Strong Socket programming experience in Python and also implemented complex networking operations like race route SMTP mail server and web server Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Developed entire frontend and backend modules using Python on Django Web Framework Implemented Performance tuning and improved the Performance of Stored Procedures and SQL Queries Installed and configured builder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text PyCharm Jira GIT pybuilder unit test Firebug Web Services  XML JSON Ajax PYTHON DEVELOPER All State Insurance Northbrook IL December 2011 to July 2013 RESPONSIBILITIES Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Working in team of developers to build and deploy Flask Linux and AWS Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Wrote Maven scripts for compiling building packaging and deploying the WAR file Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Expertise in creating and developing applications for android operating system using Android Studio Eclipse IDE SQLite Java XML Android SDK and ADT plugin Worked on Angular JS to augment browser applications with MVC capability Environment Python Angular jQuery JavaScript AJAX HTMLXHTML XML MySQL server TSQL GIT Reports RESTful Linux JSON AJAX Sowftware Developer NetCloudTek San Jose CA June 2010 to August 2011 NetCloudTek is dedicated to maintaining professional excellence trust respect and integrity in all aspects of real estate operations The aim of Utility Management System UMS was designed to provide the accounting equivalent of a comprehensive inventory control property management logistics management and meter management for an electric utility The project was to enhance the usability of utility invoice system by implementing AngularJS single page application It gives the Account Specialist the ability to quickly enter the Utility Invoices Roles and Responsibilities Responsible for creating pages using HTML5 CSS3 Bootstrap JavaScript and AngularJ Implement functionality such as Searching Filtering Sorting Categories Validating using AngularJS framework Created Single Page Application SPA using AngularJS 14 Implemented AngularJS Services to bind the data and provide access to the data on the server Used AngularJS filters for search sorting pagination and custom filters Designed a Web application using Web API with AngularJS and populated data using ADONET entity framework and Used Entity Framework to model and manage data from SQL Server Created AngularJS Routing to connect different controller to the view which allows the singlepage application For better design user experience used Bootstrap for Modal popups Alerts etc Used Angular nggrid ngrepeat for showing Tabular Database Developed form validation with AngularJS valid and data validation Created Tables Stored Procedures Views for different data operation on the database using SQL server Environment HTML5 CSS3 AngularJS JavaScript Ajax Web API Sql Server XML Visual Studio 2012 SQL Server 2012 IIS 70 Education Bachelors Bachelors Skills DJANGO 6 years JAVASCRIPT 7 years XML 7 years DATABASE 7 years SQL 7 years Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion JenkinsHudson Jira TFS Confluence Clear Case GIT GitHub Operating Systems UNIX Linux Solaris Windows DOS VMware Python Web Frameworks Django Pyramid Flask web2Py Database Postgre SQL SQL Server MYSQL and Oracle Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Methodologies Agile Scrum Waterfall Delivery tools Saltstack Chef Puppet",
    "entities": [
        "Infrastructure",
        "ADT",
        "Created Single Page Application",
        "Linux JSON AJAX Sowftware Developer",
        "AWS Resources",
        "Driven",
        "Work Experience Sr Python Developer",
        "AMI",
        "Oracle Application Servers",
        "Working",
        "Created Tables Stored Procedures Views",
        "Amazon Web Services AWS Highly",
        "GIT Developed",
        "Building a Command",
        "Amazon Web Services AWS",
        "Panda",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "SOAP",
        "Utility Management System UMS",
        "QT",
        "Chef Ansible",
        "Sublime Text PyCharm Eclipse",
        "C Developed C Trade Capture",
        "Software Development Life Cycle SDLC",
        "Shell",
        "LAMP",
        "TX",
        "Amazon",
        "YAML",
        "Credit",
        "VMware vSphere",
        "Flask Python Reactjs",
        "SNS Placed",
        "Python",
        "Developed",
        "Oracle Relational",
        "AWS S3",
        "REST API to Reactjs components",
        "Amazon Web Services jQuery CSS",
        "Windows",
        "CDSI Single Name CDS",
        "ELB EBS Route53 VPC",
        "XML Development",
        "Firebug Web Services",
        "Oracle Relational Data Architecture Basic Knowledge on JSON",
        "PythonPHP",
        "San Jose",
        "Linux",
        "Developed Unit Integration",
        "Puppet Authorized",
        "Flask",
        "SQL Queries Installed",
        "SQL Queries",
        "Organization DevOps",
        "Amazon Web Services Proficient",
        "CLI",
        "SQLbased",
        "MVC",
        "Django Curl XML JSON",
        "GIT",
        "Additional Information Technical Skills Languages C C",
        "Django Implemented Business",
        "Golang Worked on MultiTier",
        "API",
        "HTML CSS JavaScript",
        "US",
        "AWS Amazon Web Services",
        "GitLab Developed",
        "AWS",
        "WAMP Windows Apache",
        "NetBeans Good",
        "Python Django C Extensive",
        "the Performance of Stored Procedures",
        "SCA",
        "SQL Wrote",
        "Restful Webservices",
        "AWS Deployed",
        "ELB",
        "HTML",
        "Go Golang Languages",
        "Chef Server Configured",
        "tomcat55 IIS Development",
        "SQL",
        "JBoss IBM",
        "Bootstrap",
        "lPythonspan",
        "Python Flask Frameworks Experienced",
        "WebApplication Developer",
        "JavaScript Included",
        "Amazon Web Services AWS Cloud",
        "Big Data",
        "MVW",
        "Bootstrap for Modal",
        "Wrote",
        "PythonPHP Architecture Created",
        "Golang",
        "Pandas",
        "FL",
        "Maven",
        "Firebug Used JIRA",
        "Data Layer and Search",
        "REST APIs Involved",
        "Microsoft",
        "Python Pythontwitter Pandas Data",
        "SMTP",
        "SQL Server Created",
        "SVN",
        "the Business requirements Involved",
        "CSS",
        "REST",
        "AWS Security",
        "HTMLCSSJS",
        "PHP",
        "NoSQL",
        "NoSQL UNIX",
        "PythonFlask",
        "Sprint",
        "DNS"
    ],
    "experience": "Experience with Design code debug operations reporting data analysis and web applications utilizing Python Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Created internal diagnostic tools using Golang and AngularJS in order to assist with customer issues Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed responsive web product features using React JS SASS on Golang with REST Built enterprise wide DNS historical data trending analysis tools in Go Golang Languages with REST API for user queries as microservice Building a Command line tool to interact with RESTful API using in Golang Worked on MultiTier distributed Enterprise applications and data processing automation using Python Expertise in ObjectOriented design and coding and experience in analyzing and handling large database using Oracle Relational Data Architecture Basic Knowledge on JSON based REST Web services and Amazon Web services Experienced in web applications development using Django Python Flask Python DOJO jQuery while using HTMLCSSJS for serverside rendered applications Experience of software development with Python and various libraries of Python Pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Skillful experience in Python by developing softwares using new tools libraries used libraries Beautiful Soup NumPy SciPy PySide Pythontwitter matplotlib Pickle Pandas dataframe urllib2 MySQL dB for database connectivity to improvise software development process Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Good experience in using Shell scripting for automation by following Python PEP Exposure on Microsoft Azure Cloud platform Expertise in AWS Resources like EC2 S3 EBS VPC ELB AMI SNS RDS IAM Route 53 Auto scaling Cloud Formation Cloud Watch Security Groups Working experience with cloud infrastructure of AWS Amazon Web Services and computing AMI virtual machines on Elastic Compute Cloud EC2 Have experience with AWS LAMBDA which runs the code with response of events Hands on experience with version control tools such as SVN JIRA GitHub and GitLab Developed Webbased applications using python Amazon Web Services jQuery CSS and Model View control frameworks like Django Flask and JavaScript Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Knowledge of automation technology such as Chef Ansible and Puppet Authorized to work in the US for any employer Work Experience Sr Python Developer Hertz Estero FL June 2017 to Present RESPONSIBILITIES Managed datasets using data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Design Implementation of pricing module average swaps basis swaps swaptions and capsfloors on commodity futures in C Developed C Trade Capture and processing application which is a single unified platform for booking and tracking Credit derivatives like CDSI Single Name CDS and Index Tranches etc using networksocket programming and multithreading concepts Developed embedded C real time SCA compliant QT software objects Experience working on a wide range of microcontrollersmicroprocessors such as 8051 8086 ARM PIC on Embedded devices Experience in developing C services using web services architecture SOAP WSDL and XML Development of realtime multitasking systems using Python and created data access modules in Python Designed and developed components using Python with Django framework and Implemented code in Python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Rewrote existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript jQuery and implement CSS for better appearance and feel Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Experience in Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Used the boto3 module in Python to interface with Amazon Web Services AWS like DynamoDB which is a NoSQL database service that provides fast and predictable performance with seamless scalability Also used python scripts for security purposes AWS IAM AWS lambda functions and deploying the applications through elastic beanstalk Used GO lang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 WSDL NetBeans JBOSS Coherence ClearCase Selenium Water Fall Model UML JSP Sr Python Developer Caterpillar Mossville IL February 2016 to April 2017 RESPONSIBILITIES Participated in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Developed in C Web services REST JSON in Windows and Linux environments Developed highly efficient algorithms in C through both pairprogramming and independent work The algorithms improved inventory management benchmarks 18 percent Developed fullstack web applications using Flask Python Reactjs SQL HTMLCSS and JavaScript Included in the geolocation Python NumPy Matplotlib SciPy and Pandas packages created a web scraping application in Flask to perform dataset manipulation for data wrangling Incrementally refactored Flask server endpoints to provide JSON data through REST API to Reactjs components Developed web applications and RESTful web services and APIs using Python Django Developed entire frontend and backend modules using Python on Django Web Framework with GIT Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Managed Linux and Windows virtual servers on AWS EC2 using Chef Server Configured and monitored distributed and multiplatform servers using chef Experience in core AWS services S3 EC2 ELB EBS Route53 VPC Auto scaling etc and deployment services Elastic Beanstalk Lambda OpsWorks and Cloud Formation and security practices IAM CloudWatch and Cloud trail Experience with AWS S3 services creating buckets configuring buckets with permissions logging and versioning and tagging of S3 buckets Creating IAM roles that allows access to IAM APIs to use it in the Lambda function as an execution role through the permissions policy associated with the role Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Experience with Django a highlevel Python Web framework Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Developing Python Framework using Django to perform scan software unit monitoring Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Environment Java Django Flask XML MySQL Linux Shell Scripting Mongo dB SQL Python 33   Cassandra JavaScript PyCharm GIT Linux Shell Scripting RESTful Docker Jenkins JIRA jQuery MySQL AWS PYTHON DEVELOPER Boston Scientific San Jose CA August 2013 to December 2015 RESPONSIBILITIES Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Worked on Python OpenStack APIs and used NumPy for Numerical analysis Worked on real time in memory distributed systems Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested Pythonbased web applications interacting with MySQL Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Strong Socket programming experience in Python and also implemented complex networking operations like race route SMTP mail server and web server Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Developed entire frontend and backend modules using Python on Django Web Framework Implemented Performance tuning and improved the Performance of Stored Procedures and SQL Queries Installed and configured builder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text PyCharm Jira GIT pybuilder unit test Firebug Web Services   XML JSON Ajax PYTHON DEVELOPER All State Insurance Northbrook IL December 2011 to July 2013 RESPONSIBILITIES Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Working in team of developers to build and deploy Flask Linux and AWS Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Wrote Maven scripts for compiling building packaging and deploying the WAR file Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Expertise in creating and developing applications for android operating system using Android Studio Eclipse IDE SQLite Java XML Android SDK and ADT plugin Worked on Angular JS to augment browser applications with MVC capability Environment Python Angular jQuery JavaScript AJAX HTMLXHTML XML MySQL server TSQL GIT Reports RESTful Linux JSON AJAX Sowftware Developer NetCloudTek San Jose CA June 2010 to August 2011 NetCloudTek is dedicated to maintaining professional excellence trust respect and integrity in all aspects of real estate operations The aim of Utility Management System UMS was designed to provide the accounting equivalent of a comprehensive inventory control property management logistics management and meter management for an electric utility The project was to enhance the usability of utility invoice system by implementing AngularJS single page application It gives the Account Specialist the ability to quickly enter the Utility Invoices Roles and Responsibilities Responsible for creating pages using HTML5 CSS3 Bootstrap JavaScript and AngularJ Implement functionality such as Searching Filtering Sorting Categories Validating using AngularJS framework Created Single Page Application SPA using AngularJS 14 Implemented AngularJS Services to bind the data and provide access to the data on the server Used AngularJS filters for search sorting pagination and custom filters Designed a Web application using Web API with AngularJS and populated data using ADONET entity framework and Used Entity Framework to model and manage data from SQL Server Created AngularJS Routing to connect different controller to the view which allows the singlepage application For better design user experience used Bootstrap for Modal popups Alerts etc Used Angular nggrid ngrepeat for showing Tabular Database Developed form validation with AngularJS valid and data validation Created Tables Stored Procedures Views for different data operation on the database using SQL server Environment HTML5 CSS3 AngularJS JavaScript Ajax Web API Sql Server XML Visual Studio 2012 SQL Server 2012 IIS 70 Education Bachelors Bachelors Skills DJANGO 6 years JAVASCRIPT 7 years XML 7 years DATABASE 7 years SQL 7 years Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion JenkinsHudson Jira TFS Confluence Clear Case GIT GitHub Operating Systems UNIX Linux Solaris Windows DOS VMware Python Web Frameworks Django Pyramid Flask web2Py Database Postgre SQL SQL Server MYSQL and Oracle Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Methodologies Agile Scrum Waterfall Delivery tools Saltstack Chef Puppet",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Hertz",
        "Dallas",
        "TX",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "OOP",
        "Python",
        "Django",
        "C",
        "knowledge",
        "Python",
        "Java",
        "MySQL",
        "Oracle",
        "Unix",
        "Linux",
        "Object",
        "Design",
        "Programming",
        "concepts",
        "frontend",
        "applications",
        "Python",
        "Flask",
        "Frameworks",
        "Python",
        "IDEs",
        "PyCharm",
        "Spyder",
        "NetBeans",
        "PyStudio",
        "PyScripter",
        "Eric",
        "Wing",
        "IDE",
        "PyDev",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "PySpark",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "asyncio",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "Eclipse",
        "Develop",
        "ECommerce",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "ReactJS",
        "SQL",
        "Python",
        "Flask",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "HTML",
        "CSS",
        "XML",
        "Java",
        "Script",
        "jQuery",
        "unit",
        "tests",
        "Django",
        "Flask",
        "JavaScript",
        "frameworks",
        "frontend",
        "Flask",
        "application",
        "React",
        "solution",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "deployment",
        "data",
        "security",
        "troubleshooting",
        "applications",
        "AWS",
        "services",
        "Organization",
        "DevOps",
        "strategy",
        "operating",
        "environments",
        "Linux",
        "servers",
        "strategies",
        "Amazon",
        "Web",
        "Services",
        "Proficient",
        "Cloud",
        "Formation",
        "CFT",
        "YAML",
        "format",
        "AWS",
        "services",
        "paradigm",
        "Infrastructure",
        "Code",
        "Knowledge",
        "Extraction",
        "Transformation",
        "Loading",
        "techniques",
        "integration",
        "experience",
        "applications",
        "environments",
        "Elastic",
        "Beanstalk",
        "AWS",
        "Lambda",
        "functions",
        "AWS",
        "resources",
        "Data",
        "solutions",
        "platforms",
        "data",
        "analytics",
        "knowledge",
        "PHP",
        "MySQL",
        "NoSQL",
        "UNIX",
        "Linux",
        "Experience",
        "Design",
        "code",
        "debug",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "tools",
        "Golang",
        "AngularJS",
        "order",
        "customer",
        "issues",
        "Golang",
        "Java",
        "REST",
        "service",
        "AngularJS",
        "user",
        "interface",
        "web",
        "product",
        "features",
        "React",
        "JS",
        "SASS",
        "Golang",
        "REST",
        "enterprise",
        "DNS",
        "data",
        "analysis",
        "tools",
        "Go",
        "Golang",
        "Languages",
        "REST",
        "API",
        "user",
        "queries",
        "microservice",
        "Command",
        "line",
        "tool",
        "API",
        "Golang",
        "Worked",
        "MultiTier",
        "Enterprise",
        "applications",
        "data",
        "processing",
        "automation",
        "Python",
        "Expertise",
        "ObjectOriented",
        "design",
        "coding",
        "experience",
        "database",
        "Oracle",
        "Relational",
        "Data",
        "Architecture",
        "Basic",
        "Knowledge",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Python",
        "Pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "MySQL",
        "database",
        "connectivity",
        "expression",
        "File",
        "IO",
        "experience",
        "Python",
        "softwares",
        "tools",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "PySide",
        "Pythontwitter",
        "Pickle",
        "Pandas",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "improvise",
        "software",
        "development",
        "process",
        "Python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "experience",
        "Shell",
        "scripting",
        "automation",
        "Python",
        "PEP",
        "Exposure",
        "Microsoft",
        "Azure",
        "Cloud",
        "platform",
        "Expertise",
        "AWS",
        "Resources",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "AMI",
        "SNS",
        "RDS",
        "IAM",
        "Route",
        "Auto",
        "Cloud",
        "Formation",
        "Cloud",
        "Watch",
        "Security",
        "Groups",
        "Working",
        "experience",
        "infrastructure",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "AMI",
        "machines",
        "Elastic",
        "Compute",
        "Cloud",
        "EC2",
        "experience",
        "AWS",
        "LAMBDA",
        "code",
        "response",
        "events",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "JIRA",
        "GitHub",
        "GitLab",
        "applications",
        "python",
        "Amazon",
        "Web",
        "Services",
        "jQuery",
        "CSS",
        "Model",
        "View",
        "control",
        "frameworks",
        "Django",
        "Flask",
        "JavaScript",
        "Agile",
        "Methodologies",
        "SCRUM",
        "process",
        "Sprint",
        "planning",
        "backlog",
        "Daily",
        "Standups",
        "Code",
        "review",
        "Knowledge",
        "automation",
        "technology",
        "Chef",
        "Ansible",
        "Puppet",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Hertz",
        "Estero",
        "FL",
        "June",
        "RESPONSIBILITIES",
        "datasets",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Design",
        "Implementation",
        "pricing",
        "module",
        "swaps",
        "basis",
        "swaps",
        "swaptions",
        "capsfloors",
        "commodity",
        "futures",
        "C",
        "C",
        "Trade",
        "Capture",
        "processing",
        "application",
        "platform",
        "booking",
        "Credit",
        "derivatives",
        "CDSI",
        "Single",
        "Name",
        "CDS",
        "Index",
        "Tranches",
        "programming",
        "multithreading",
        "concepts",
        "C",
        "time",
        "SCA",
        "QT",
        "software",
        "Experience",
        "range",
        "microcontrollersmicroprocessors",
        "ARM",
        "PIC",
        "devices",
        "Experience",
        "C",
        "services",
        "web",
        "services",
        "architecture",
        "SOAP",
        "WSDL",
        "XML",
        "Development",
        "systems",
        "Python",
        "data",
        "access",
        "modules",
        "Python",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "Python",
        "manipulate",
        "data",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "Rewrote",
        "PythonFlask",
        "module",
        "format",
        "data",
        "script",
        "python",
        "REST",
        "APIs",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "jQuery",
        "CSS",
        "appearance",
        "Configuration",
        "Management",
        "Microservices",
        "Kubernetes",
        "Docker",
        "Ansible",
        "Worked",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "Python",
        "scripting",
        "library",
        "AWS",
        "Security",
        "audit",
        "AWS",
        "Lambda",
        "AWS",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "EBS",
        "S3",
        "VPC",
        "Cloud",
        "Watch",
        "Elastic",
        "Load",
        "Balancer",
        "module",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "DynamoDB",
        "NoSQL",
        "database",
        "service",
        "performance",
        "scalability",
        "scripts",
        "security",
        "purposes",
        "AWS",
        "IAM",
        "AWS",
        "lambda",
        "functions",
        "applications",
        "beanstalk",
        "GO",
        "lang",
        "scripts",
        "file",
        "S3",
        "GO",
        "serverless",
        "application",
        "AWS",
        "lambda",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "JSON",
        "jQuery",
        "MySQL",
        "TOAD",
        "SQL",
        "DB2",
        "WSDL",
        "NetBeans",
        "JBOSS",
        "Coherence",
        "ClearCase",
        "Selenium",
        "Water",
        "Fall",
        "Model",
        "UML",
        "JSP",
        "Sr",
        "Python",
        "Developer",
        "Caterpillar",
        "Mossville",
        "IL",
        "February",
        "April",
        "RESPONSIBILITIES",
        "requirement",
        "gathering",
        "analysis",
        "phase",
        "project",
        "business",
        "requirements",
        "workshopsmeetings",
        "business",
        "users",
        "C",
        "Web",
        "services",
        "JSON",
        "Windows",
        "Linux",
        "environments",
        "algorithms",
        "C",
        "work",
        "algorithms",
        "inventory",
        "management",
        "percent",
        "fullstack",
        "web",
        "applications",
        "Flask",
        "Python",
        "Reactjs",
        "SQL",
        "HTMLCSS",
        "JavaScript",
        "geolocation",
        "Python",
        "NumPy",
        "Matplotlib",
        "SciPy",
        "Pandas",
        "packages",
        "web",
        "scraping",
        "application",
        "Flask",
        "manipulation",
        "data",
        "Flask",
        "server",
        "endpoints",
        "data",
        "REST",
        "API",
        "Reactjs",
        "components",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Django",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "backup",
        "recovery",
        "engine",
        "VM",
        "backuprecovery",
        "VMware",
        "vSphere",
        "APIs",
        "Golang",
        "programming",
        "language",
        "RabbitMQ",
        "Message",
        "bus",
        "communication",
        "interface",
        "Managed",
        "Linux",
        "Windows",
        "servers",
        "AWS",
        "EC2",
        "Chef",
        "Server",
        "Configured",
        "servers",
        "chef",
        "Experience",
        "core",
        "AWS",
        "services",
        "S3",
        "EC2",
        "ELB",
        "EBS",
        "Route53",
        "VPC",
        "Auto",
        "scaling",
        "deployment",
        "services",
        "Elastic",
        "Beanstalk",
        "Lambda",
        "OpsWorks",
        "Cloud",
        "Formation",
        "security",
        "practices",
        "IAM",
        "CloudWatch",
        "Cloud",
        "trail",
        "Experience",
        "AWS",
        "S3",
        "services",
        "buckets",
        "buckets",
        "permissions",
        "versioning",
        "tagging",
        "S3",
        "buckets",
        "IAM",
        "roles",
        "access",
        "IAM",
        "APIs",
        "Lambda",
        "function",
        "execution",
        "role",
        "permissions",
        "policy",
        "role",
        "AWS",
        "lambda",
        "servers",
        "code",
        "S3",
        "SNS",
        "Placed",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Experience",
        "Django",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "Shell",
        "script",
        "Python",
        "Framework",
        "Django",
        "software",
        "unit",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "Python",
        "PHP",
        "unit",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "Mongo",
        "DB",
        "Used",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Environment",
        "Java",
        "Django",
        "Flask",
        "XML",
        "MySQL",
        "Linux",
        "Shell",
        "Scripting",
        "Mongo",
        "SQL",
        "Python",
        "Cassandra",
        "JavaScript",
        "PyCharm",
        "GIT",
        "Linux",
        "Shell",
        "Scripting",
        "RESTful",
        "Docker",
        "Jenkins",
        "JIRA",
        "jQuery",
        "MySQL",
        "AWS",
        "PYTHON",
        "DEVELOPER",
        "Boston",
        "Scientific",
        "San",
        "Jose",
        "CA",
        "August",
        "December",
        "RESPONSIBILITIES",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "client",
        "endusers",
        "requirements",
        "sessions",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "HTML",
        "Python",
        "framework",
        "Django",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "time",
        "memory",
        "systems",
        "transactions",
        "persistence",
        "layers",
        "data",
        "application",
        "functionalities",
        "Django",
        "PostgreSQL",
        "Developed",
        "Application",
        "XML",
        "Restful",
        "Webservices",
        "consumer",
        "side",
        "JavaScript",
        "AngularJS",
        "integration",
        "database",
        "systems",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Developed",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "web",
        "applications",
        "MySQL",
        "Wrote",
        "MapReduce",
        "code",
        "data",
        "data",
        "Hive",
        "tables",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Strong",
        "Socket",
        "programming",
        "experience",
        "Python",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "SQL",
        "Queries",
        "Installed",
        "builder",
        "application",
        "builds",
        "customer",
        "TLSSSL",
        "Apache",
        "Web",
        "Server",
        "configurations",
        "staff",
        "implementations",
        "issuesconcerns",
        "changes",
        "Ansible",
        "Responsible",
        "web",
        "application",
        "programming",
        "company",
        "product",
        "management",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "MySQL",
        "JavaScript",
        "jQuery",
        "Sublime",
        "Text",
        "PyCharm",
        "Jira",
        "GIT",
        "pybuilder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "XML",
        "PYTHON",
        "DEVELOPER",
        "State",
        "Insurance",
        "Northbrook",
        "IL",
        "December",
        "July",
        "RESPONSIBILITIES",
        "Business",
        "requirements",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Python",
        "scripts",
        "vulnerabilities",
        "SQL",
        "Queries",
        "SQL",
        "injection",
        "permission",
        "checks",
        "performance",
        "analysis",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "team",
        "developers",
        "Flask",
        "Linux",
        "AWS",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "CLI",
        "AWS",
        "services",
        "SHELLBash",
        "Developed",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "web",
        "services",
        "database",
        "calls",
        "inserts",
        "updates",
        "Developed",
        "Unit",
        "Integration",
        "Performance",
        "Test",
        "Cases",
        "Junit",
        "Selenium",
        "Rational",
        "Function",
        "Tester",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "datasets",
        "Panda",
        "data",
        "frames",
        "SQL",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Wrote",
        "Maven",
        "building",
        "packaging",
        "WAR",
        "file",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "Expertise",
        "applications",
        "operating",
        "system",
        "Android",
        "Studio",
        "Eclipse",
        "IDE",
        "SQLite",
        "Java",
        "XML",
        "Android",
        "SDK",
        "ADT",
        "Worked",
        "JS",
        "browser",
        "applications",
        "MVC",
        "capability",
        "Environment",
        "Python",
        "Angular",
        "jQuery",
        "JavaScript",
        "AJAX",
        "HTMLXHTML",
        "XML",
        "MySQL",
        "server",
        "TSQL",
        "GIT",
        "Reports",
        "Linux",
        "JSON",
        "AJAX",
        "Sowftware",
        "Developer",
        "NetCloudTek",
        "San",
        "Jose",
        "CA",
        "June",
        "August",
        "NetCloudTek",
        "excellence",
        "trust",
        "respect",
        "integrity",
        "aspects",
        "estate",
        "operations",
        "aim",
        "Utility",
        "Management",
        "System",
        "UMS",
        "accounting",
        "equivalent",
        "inventory",
        "control",
        "property",
        "management",
        "logistics",
        "management",
        "meter",
        "management",
        "utility",
        "project",
        "usability",
        "utility",
        "invoice",
        "system",
        "page",
        "application",
        "Account",
        "Specialist",
        "ability",
        "Utility",
        "Invoices",
        "Roles",
        "Responsibilities",
        "pages",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "functionality",
        "Searching",
        "Filtering",
        "Sorting",
        "Categories",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "AngularJS",
        "Services",
        "data",
        "access",
        "data",
        "server",
        "filters",
        "search",
        "pagination",
        "custom",
        "filters",
        "Web",
        "application",
        "Web",
        "API",
        "AngularJS",
        "data",
        "ADONET",
        "entity",
        "framework",
        "Used",
        "Entity",
        "Framework",
        "data",
        "SQL",
        "Server",
        "controller",
        "view",
        "singlepage",
        "application",
        "design",
        "user",
        "experience",
        "Bootstrap",
        "Modal",
        "popups",
        "Alerts",
        "ngrepeat",
        "Tabular",
        "Database",
        "form",
        "validation",
        "data",
        "validation",
        "Created",
        "Tables",
        "Stored",
        "Procedures",
        "Views",
        "data",
        "operation",
        "database",
        "SQL",
        "server",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Ajax",
        "Web",
        "API",
        "Sql",
        "Server",
        "XML",
        "Visual",
        "Studio",
        "SQL",
        "Server",
        "IIS",
        "Education",
        "Bachelors",
        "Bachelors",
        "Skills",
        "DJANGO",
        "years",
        "JAVASCRIPT",
        "years",
        "XML",
        "years",
        "DATABASE",
        "years",
        "SQL",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "C",
        "C",
        "Python",
        "JavaScript",
        "PHP",
        "XML",
        "SQL",
        "SCM",
        "Tools",
        "Subversion",
        "JenkinsHudson",
        "Jira",
        "TFS",
        "Confluence",
        "Clear",
        "Case",
        "GIT",
        "GitHub",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Solaris",
        "Windows",
        "DOS",
        "VMware",
        "Python",
        "Web",
        "Frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "web2Py",
        "Database",
        "Postgre",
        "SQL",
        "SQL",
        "Server",
        "MYSQL",
        "Oracle",
        "Application",
        "Servers",
        "Web",
        "logic",
        "JBoss",
        "IBM",
        "WebSphere",
        "Apache",
        "tomcat55",
        "IIS",
        "Development",
        "IDE",
        "PyCharm",
        "Pydev",
        "Eclipse",
        "Vim",
        "MS",
        "Visio",
        "Sublime",
        "Text",
        "Notepad",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Delivery",
        "tools",
        "Saltstack",
        "Chef",
        "Puppet"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:31:09.248051",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Hertz Dallas TX 8 years of experience as a WebApplication Developer and objectoriented programming OOP coding with Python Django C Extensive knowledge in Python Java MySQL Oracle Unix Linux and in Object oriented Design and Programming concepts Developed dynamic frontend and backend applications using Python Flask Frameworks Experienced in working with various Python IDEs using PyCharm Spyder NetBeans PyStudio PyScripter Eric Wing IDE and PyDev Good experience of software development in Python libraries used libraries Beautiful Soup PySpark NumPy SciPy Matplotlib asyncio pythontwitter Pandas data frame network urllib2 MySQL for database connectivity and IDEs sublime text Spyder PyCharm pytest Eclipse emacs Develop ECommerce application using HTML CSS JavaScript ReactJS SQL Python and Flask Worked with MVW frameworks like Django Angular JS HTML CSS XML Java Script jQuery and JSON Developed unit tests for Django and Flask applications Researched JavaScript frameworks to replace frontend of a Flask application and began implementing a React solution Cognitive about designing deploying and operating highly available scalable and fault tolerant systems using Amazon Web Services AWS Highly skilled in deployment data security and troubleshooting of the applications using AWS services Experienced in implementing Organization DevOps strategy in various operating environments of Linux and windows servers along with cloud strategies of Amazon Web Services Proficient in writing Cloud Formation Templates CFT in YAML and JSON format to build the AWS services with the paradigm of Infrastructure as a Code Knowledge on Extraction Transformation and Loading techniques with python integration Gained experience in deploying applications on to their respective environments using Elastic Beanstalk Experienced with eventdriven and scheduled AWS Lambda functions to trigger various AWS resources Driven to architect Big Data solutions on multiple platforms using data analytics Extensive knowledge in PHP MySQL NoSQL UNIX and Linux Experience with Design code debug operations reporting data analysis and web applications utilizing Python Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Created internal diagnostic tools using Golang and AngularJS in order to assist with customer issues Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed responsive web product features using React JS SASS on Golang with REST Built enterprise wide DNS historical data trending analysis tools in Go Golang Languages with REST API for user queries as microservice Building a Command line tool to interact with RESTful API using in Golang Worked on MultiTier distributed Enterprise applications and data processing automation using Python Expertise in ObjectOriented design and coding and experience in analyzing and handling large database using Oracle Relational Data Architecture Basic Knowledge on JSON based REST Web services and Amazon Web services Experienced in web applications development using Django Python Flask Python DOJO jQuery while using HTMLCSSJS for serverside rendered applications Experience of software development with Python and various libraries of Python Pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Skillful experience in Python by developing softwares using new tools libraries used libraries Beautiful Soup NumPy SciPy PySide Pythontwitter matplotlib Pickle Pandas dataframe urllib2 MySQL dB for database connectivity to improvise software development process Working with backend Python automation CI pipelines Docker and cloud provisioningautomation Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Good experience in using Shell scripting for automation by following Python PEP Exposure on Microsoft Azure Cloud platform Expertise in AWS Resources like EC2 S3 EBS VPC ELB AMI SNS RDS IAM Route 53 Auto scaling Cloud Formation Cloud Watch Security Groups Working experience with cloud infrastructure of AWS Amazon Web Services and computing AMI virtual machines on Elastic Compute Cloud EC2 Have experience with AWS LAMBDA which runs the code with response of events Hands on experience with version control tools such as SVN JIRA GitHub and GitLab Developed Webbased applications using python Amazon Web Services jQuery CSS and Model View control frameworks like Django Flask and JavaScript Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Knowledge of automation technology such as Chef Ansible and Puppet Authorized to work in the US for any employer Work Experience Sr Python Developer Hertz Estero FL June 2017 to Present RESPONSIBILITIES Managed datasets using data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Design Implementation of pricing module average swaps basis swaps swaptions and capsfloors on commodity futures in C Developed C Trade Capture and processing application which is a single unified platform for booking and tracking Credit derivatives like CDSI Single Name CDS and Index Tranches etc using networksocket programming and multithreading concepts Developed embedded C real time SCA compliant QT software objects Experience working on a wide range of microcontrollersmicroprocessors such as 8051 8086 ARM PIC on Embedded devices Experience in developing C services using web services architecture SOAP WSDL and XML Development of realtime multitasking systems using Python and created data access modules in Python Designed and developed components using Python with Django framework and Implemented code in Python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Rewrote existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript jQuery and implement CSS for better appearance and feel Built complete Configuration Management for the Microservices using Kubernetes Docker and Ansible Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developing the Python automated scripting using Boto3 library for AWS Security audit and reporting using AWS Lambda for multiple AWS Accounts Experience in Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Used the boto3 module in Python to interface with Amazon Web Services AWS like DynamoDB which is a NoSQL database service that provides fast and predictable performance with seamless scalability Also used python scripts for security purposes AWS IAM AWS lambda functions and deploying the applications through elastic beanstalk Used GO lang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 WSDL NetBeans JBOSS Coherence ClearCase Selenium Water Fall Model UML JSP Sr Python Developer Caterpillar Mossville IL February 2016 to April 2017 RESPONSIBILITIES Participated in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Developed in C Web services REST JSON in Windows and Linux environments Developed highly efficient algorithms in C through both pairprogramming and independent work The algorithms improved inventory management benchmarks 18 percent Developed fullstack web applications using Flask Python Reactjs SQL HTMLCSS and JavaScript Included in the geolocation Python NumPy Matplotlib SciPy and Pandas packages created a web scraping application in Flask to perform dataset manipulation for data wrangling Incrementally refactored Flask server endpoints to provide JSON data through REST API to Reactjs components Developed web applications and RESTful web services and APIs using Python Django Developed entire frontend and backend modules using Python on Django Web Framework with GIT Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Managed Linux and Windows virtual servers on AWS EC2 using Chef Server Configured and monitored distributed and multiplatform servers using chef Experience in core AWS services S3 EC2 ELB EBS Route53 VPC Auto scaling etc and deployment services Elastic Beanstalk Lambda OpsWorks and Cloud Formation and security practices IAM CloudWatch and Cloud trail Experience with AWS S3 services creating buckets configuring buckets with permissions logging and versioning and tagging of S3 buckets Creating IAM roles that allows access to IAM APIs to use it in the Lambda function as an execution role through the permissions policy associated with the role Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Experience with Django a highlevel Python Web framework Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Developing Python Framework using Django to perform scan software unit monitoring Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and Python libraries Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Environment Java Django Flask XML MySQL Linux Shell Scripting Mongo dB SQL Python 33 HTML5CSS Cassandra JavaScript PyCharm GIT Linux Shell Scripting RESTful Docker Jenkins JIRA jQuery MySQL AWS PYTHON DEVELOPER Boston Scientific San Jose CA August 2013 to December 2015 RESPONSIBILITIES Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Worked on Python OpenStack APIs and used NumPy for Numerical analysis Worked on real time in memory distributed systems Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested Pythonbased web applications interacting with MySQL Wrote MapReduce code to make unstructured data into semi structured data and loaded into Hive tables Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Strong Socket programming experience in Python and also implemented complex networking operations like race route SMTP mail server and web server Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Developed entire frontend and backend modules using Python on Django Web Framework Implemented Performance tuning and improved the Performance of Stored Procedures and SQL Queries Installed and configured builder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax PYTHON DEVELOPER All State Insurance Northbrook IL December 2011 to July 2013 RESPONSIBILITIES Involved in reviewing and understanding the Business requirements Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Working in team of developers to build and deploy Flask Linux and AWS Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Developed remote integration with third party platforms by using RESTful web services Developed web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Improved code reuse and performance by making effective use of various design patterns Managed large datasets using Panda data frames and SQL Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Wrote Maven scripts for compiling building packaging and deploying the WAR file Deployed the project into Heroku using GIT version control system Developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Expertise in creating and developing applications for android operating system using Android Studio Eclipse IDE SQLite Java XML Android SDK and ADT plugin Worked on Angular JS to augment browser applications with MVC capability Environment Python Angular jQuery JavaScript AJAX HTMLXHTML XML MySQL server TSQL GIT Reports RESTful Linux JSON AJAX Sowftware Developer NetCloudTek San Jose CA June 2010 to August 2011 NetCloudTek is dedicated to maintaining professional excellence trust respect and integrity in all aspects of real estate operations The aim of Utility Management System UMS was designed to provide the accounting equivalent of a comprehensive inventory control property management logistics management and meter management for an electric utility The project was to enhance the usability of utility invoice system by implementing AngularJS single page application It gives the Account Specialist the ability to quickly enter the Utility Invoices Roles and Responsibilities Responsible for creating pages using HTML5 CSS3 Bootstrap JavaScript and AngularJ Implement functionality such as Searching Filtering Sorting Categories Validating using AngularJS framework Created Single Page Application SPA using AngularJS 14 Implemented AngularJS Services to bind the data and provide access to the data on the server Used AngularJS filters for search sorting pagination and custom filters Designed a Web application using Web API with AngularJS and populated data using ADONET entity framework and Used Entity Framework to model and manage data from SQL Server Created AngularJS Routing to connect different controller to the view which allows the singlepage application For better design user experience used Bootstrap for Modal popups Alerts etc Used Angular nggrid ngrepeat for showing Tabular Database Developed form validation with AngularJS valid and data validation Created Tables Stored Procedures Views for different data operation on the database using SQL server Environment HTML5 CSS3 AngularJS JavaScript Ajax Web API Sql Server XML Visual Studio 2012 SQL Server 2012 IIS 70 Education Bachelors Bachelors Skills DJANGO 6 years JAVASCRIPT 7 years XML 7 years DATABASE 7 years SQL 7 years Additional Information Technical Skills Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion JenkinsHudson Jira TFS Confluence Clear Case GIT GitHub Operating Systems UNIX Linux Solaris Windows DOS VMware Python Web Frameworks Django Pyramid Flask web2Py Database Postgre SQL SQL Server MYSQL and Oracle Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Methodologies Agile Scrum Waterfall Delivery tools Saltstack Chef Puppet",
    "unique_id": "e694447b-6f6c-4880-bda5-c1d6253b5560"
}