{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Capitalone Richmond VA Over 7 years of experience as an Application developer software development and design using Python Django XML HTML DHTML C Oracle PLSQL and Postgres Thorough understanding of providing specifications using Waterfall and Agile Software methodology to modeling systems and business processes Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and Kanban methodologies Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Cognitive about designing deploying and operating highly available scalable and faulttolerant systems using Amazon Web Services AWS Provide Highly available and durable data by using S3 data store versioning and life cycle policy Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and MAMP Mac Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django and Flask Jinja Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS JQuery and JavaScript Experienced in developing REST and SOAP Web Services with Python programming language Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience with Spark Streaming Spark SQL Excellent communication Teamwork interpersonal and presentation skills fast learner and organized selfstarter Work Experience Python Developer Capitalone Richmond VA July 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loans banking and savings accounts Capital One is ranked 10th on the list of largest banks in the United States by assets Online Brokerage provides users with the tools to track and manage their portfolios online 247 To integrate diverse trading work flows for fixed income business and provide a consolidated trading application interface to business users Responsibilities Worked with a team of developers on Python applications for D4 CARD management Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Working on CLIPS Credit Line Increase Program Worked on Databricks for data analysis purposes Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Analyzed The SQL scripts and design the solution to implement using PySpark Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Worked on PySpark and Pandas data frames and used those data frames for analysis extraction and manipulation of data Wrote python PyPi packages and used those packages at run time by pulling it from artifactory Working knowledge of Amazons Elastic Cloud ComputeEC2 infrastructure for computational tasks and Simple Storage Service S3 as Storage mechanism Working on s3 buckets to sorting the data and by using the SecurityTokenScriptsSTS Wrote the unit test cases for the modules and integrating the test for models Used PyLint to maintain the code quality Integrating the test cases using the Jenkins for continuous IntegrationCI and continuous deploymentCD Used Docker container for end to end testing locally Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Used JIRA to assign track report and audit issues This project also included the documentation and testing of the new sql code to ensure 100 accurate data compared to the existing reports Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Flagstar Bank Troy MI March 2016 to June 2018 Description Flagstars Loan Origination System LOS is a web application for brokers and borrowers to enter the origination details of a mortgage loan in a standard 1003 format After the loan is originated it goes through several phases of the loan life cycle ie Processing Underwriting Closing Funding and PostClosing After the initial origination only the internal users will have access to the rest of the application This is a Python based web application built primarily using Spring Spring MVC Hibernate JPA jQuery Angular JS Bootstrap and JavaScript Responsibilities The system is a full micro services architecture written in Python utilizing distributed message passing via Kafka with JSON as data exchange formats Created 6 micro services that has the capability to transfer the input files to machine readable format and pass through respective payment channels Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Did fullpage caching well using Varnish and could handle massive traffic without breaking a sweat Experienced in taking advantage of Nginx in combination with Apache by using it as a reverse proxy Supported development of Web portals completed Database Modelling in PostgreSQL front end support in HTMLCSS JQuery Debugging the application and following messages in log files to figure out the error if existing Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Involved in analyzing the problems using transaction breakdown network monitoring and resource monitoring to find the performance bottleneck Maintained and monitored frameworks like Django flask Developed monitoring application which captures the error related data and store it in database Involved in scrubbing project which updates the existing data with hashed values Reverse engineer and reimplement legacy backend software into Python with minimal downtime Work closely with project leads to learn about the Azure services environment deployment and integration with tooling Used GitHub as a version control Worked on UNIX environment Optimized system performance and managed the API lifecycle Performed unit testing Worked closely with leads in implementation exposure on service based SOA RESTful technologies Strong experience in developing Microservices using Drop wizard Spring Boot Lagom Work experience with Java Frameworks like Spring Hibernate Environment Python Drop wizard Spring Boot Lagom Kafka JSON GitHub LINUX Django Flask Varnish Nginx SOA Teradata RESTCI CD Python Developer Pearl Insurance Peoria Heights IL December 2014 to February 2016 Description Pearl Insurance Association is a federation of health insurance organizations and companies providing health Dental Vision insurance in the United States The project is to build an interaction between Frontend user friendly customer UI and backend frequent data analysis to keep track of user responses customer Feedback and allowances and generate various kinds of reports Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed user interface using CSS PHP HTML JavaScript and JQueryCI CDData Center Used Ansible to configure and manage the infrastructure Wrote Python modules to extractload asset data from the MySQL source database Designed and developed UseCases Classes and Object Diagrams using UML Rational Rose for Object Oriented Design techniques Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used PyUnit the Python unit test framework for all Python applications Involved in developing the REST Web services to expose the business methods to external services in the project Worked on front end frameworks like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Automation Ansible and Deploying on AWS environment Coded test programs and evaluated existing engineering processes Created a Git repository and added the project to GitHub Having experience in Agile Methodologies Scrum stories and sprints experience in Python Collaborated with internal teams and external teams to solve the issues and giving feedback Documented the problems and progress of project most accurately Worked together with team during testing of data warehouses Environment Python Django HTML5CSS MySQL REST Web Services JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA GIT AWS Python developer CMC Hyderabad Telangana May 2012 to November 2014 Description CMC Limited is an information technology services consulting and software company Responsible for Business Development Solution Design and Managing Service partners Lead Generation Proposal Development and Develop BOM SOW on Site Meeting BOM Managing POCs and Training Delivery Market Intelligence Customer Acquisition developing new products and solutions Development using PythonDjango HTMLCSS JavaScript Database modelling using PostgreSQL Responsibilities Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Created modern REST APIs from existing information assets Manage a technician that oversees automation and carries out daily tasks Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Environment Python Kafka JSON GitHub LINUX Education Bachelors",
    "entities": [
        "Capital One",
        "HTMLCSS JQuery Debugging",
        "UNIX",
        "JS Bootstrap",
        "Working",
        "Frontend",
        "Description CMC Limited",
        "Python Collaborated",
        "the SecurityTokenScriptsSTS Wrote",
        "XML",
        "PyUnit",
        "Maintained",
        "Responsibilities Created",
        "Feedback",
        "Spark Streaming Spark",
        "Amazon",
        "UNIXLinux",
        "CARD",
        "Python",
        "Developed",
        "PythonPHP Architecture Experienced",
        "Simple Storage Service S3",
        "CSS Bootstrap",
        "Python Experienced",
        "Spark for Data Analysis",
        "Puppet",
        "Kanban",
        "Git",
        "Waterfall",
        "HTML CSS JQuery",
        "Firebug Web Services",
        "GitHub Having",
        "PythonPHP",
        "CSS PHP",
        "SOA",
        "API RESTful Web Service",
        "Database Modelling",
        "UML Rational Rose for Object Oriented Design",
        "Bash Implemented",
        "Created a Git",
        "MVC",
        "Flask SQL Alchemy",
        "Spark",
        "GIT",
        "API",
        "Created",
        "PyLint",
        "Working on CLIPS Credit Line Increase Program Worked on Databricks",
        "WAMP Windows Apache",
        "PostClosing",
        "Coded",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PyCharm",
        "Responsibilities Responsible",
        "Amazon Web Services AWS Provide Highly",
        "SQL",
        "GitHub",
        "Python Developer Pearl Insurance",
        "lPythonspan",
        "Nginx",
        "Artifactory Experienced",
        "Administrators",
        "S3",
        "the United States",
        "Present Description Capital One Financial Corporation",
        "Pandas",
        "JavaScript",
        "Processing Underwriting Closing Funding",
        "UI",
        "MAMP Mac Apache",
        "UseCases Classes and Object Diagrams",
        "PySpark Wrote",
        "Responsible for Business Development Solution Design and Managing Service",
        "Dental Vision",
        "Description Pearl Insurance Association",
        "REST",
        "Drop",
        "Review Board",
        "Application",
        "PyTest",
        "Integration"
    ],
    "experience": "Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and MAMP Mac Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django and Flask Jinja Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS JQuery and JavaScript Experienced in developing REST and SOAP Web Services with Python programming language Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience with Spark Streaming Spark SQL Excellent communication Teamwork interpersonal and presentation skills fast learner and organized selfstarter Work Experience Python Developer Capitalone Richmond VA July 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loans banking and savings accounts Capital One is ranked 10th on the list of largest banks in the United States by assets Online Brokerage provides users with the tools to track and manage their portfolios online 247 To integrate diverse trading work flows for fixed income business and provide a consolidated trading application interface to business users Responsibilities Worked with a team of developers on Python applications for D4 CARD management Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Working on CLIPS Credit Line Increase Program Worked on Databricks for data analysis purposes Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Analyzed The SQL scripts and design the solution to implement using PySpark Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Worked on PySpark and Pandas data frames and used those data frames for analysis extraction and manipulation of data Wrote python PyPi packages and used those packages at run time by pulling it from artifactory Working knowledge of Amazons Elastic Cloud ComputeEC2 infrastructure for computational tasks and Simple Storage Service S3 as Storage mechanism Working on s3 buckets to sorting the data and by using the SecurityTokenScriptsSTS Wrote the unit test cases for the modules and integrating the test for models Used PyLint to maintain the code quality Integrating the test cases using the Jenkins for continuous IntegrationCI and continuous deploymentCD Used Docker container for end to end testing locally Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Used JIRA to assign track report and audit issues This project also included the documentation and testing of the new sql code to ensure 100 accurate data compared to the existing reports Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Flagstar Bank Troy MI March 2016 to June 2018 Description Flagstars Loan Origination System LOS is a web application for brokers and borrowers to enter the origination details of a mortgage loan in a standard 1003 format After the loan is originated it goes through several phases of the loan life cycle ie Processing Underwriting Closing Funding and PostClosing After the initial origination only the internal users will have access to the rest of the application This is a Python based web application built primarily using Spring Spring MVC Hibernate JPA jQuery Angular JS Bootstrap and JavaScript Responsibilities The system is a full micro services architecture written in Python utilizing distributed message passing via Kafka with JSON as data exchange formats Created 6 micro services that has the capability to transfer the input files to machine readable format and pass through respective payment channels Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Did fullpage caching well using Varnish and could handle massive traffic without breaking a sweat Experienced in taking advantage of Nginx in combination with Apache by using it as a reverse proxy Supported development of Web portals completed Database Modelling in PostgreSQL front end support in HTMLCSS JQuery Debugging the application and following messages in log files to figure out the error if existing Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Involved in analyzing the problems using transaction breakdown network monitoring and resource monitoring to find the performance bottleneck Maintained and monitored frameworks like Django flask Developed monitoring application which captures the error related data and store it in database Involved in scrubbing project which updates the existing data with hashed values Reverse engineer and reimplement legacy backend software into Python with minimal downtime Work closely with project leads to learn about the Azure services environment deployment and integration with tooling Used GitHub as a version control Worked on UNIX environment Optimized system performance and managed the API lifecycle Performed unit testing Worked closely with leads in implementation exposure on service based SOA RESTful technologies Strong experience in developing Microservices using Drop wizard Spring Boot Lagom Work experience with Java Frameworks like Spring Hibernate Environment Python Drop wizard Spring Boot Lagom Kafka JSON GitHub LINUX Django Flask Varnish Nginx SOA Teradata RESTCI CD Python Developer Pearl Insurance Peoria Heights IL December 2014 to February 2016 Description Pearl Insurance Association is a federation of health insurance organizations and companies providing health Dental Vision insurance in the United States The project is to build an interaction between Frontend user friendly customer UI and backend frequent data analysis to keep track of user responses customer Feedback and allowances and generate various kinds of reports Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed user interface using CSS PHP HTML JavaScript and JQueryCI CDData Center Used Ansible to configure and manage the infrastructure Wrote Python modules to extractload asset data from the MySQL source database Designed and developed UseCases Classes and Object Diagrams using UML Rational Rose for Object Oriented Design techniques Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used PyUnit the Python unit test framework for all Python applications Involved in developing the REST Web services to expose the business methods to external services in the project Worked on front end frameworks like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Automation Ansible and Deploying on AWS environment Coded test programs and evaluated existing engineering processes Created a Git repository and added the project to GitHub Having experience in Agile Methodologies Scrum stories and sprints experience in Python Collaborated with internal teams and external teams to solve the issues and giving feedback Documented the problems and progress of project most accurately Worked together with team during testing of data warehouses Environment Python Django HTML5CSS MySQL REST Web Services JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA GIT AWS Python developer CMC Hyderabad Telangana May 2012 to November 2014 Description CMC Limited is an information technology services consulting and software company Responsible for Business Development Solution Design and Managing Service partners Lead Generation Proposal Development and Develop BOM SOW on Site Meeting BOM Managing POCs and Training Delivery Market Intelligence Customer Acquisition developing new products and solutions Development using PythonDjango HTMLCSS JavaScript Database modelling using PostgreSQL Responsibilities Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Created modern REST APIs from existing information assets Manage a technician that oversees automation and carries out daily tasks Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Environment Python Kafka JSON GitHub LINUX Education Bachelors",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Capitalone",
        "Richmond",
        "VA",
        "years",
        "experience",
        "Application",
        "developer",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "XML",
        "HTML",
        "DHTML",
        "C",
        "Oracle",
        "PLSQL",
        "Postgres",
        "understanding",
        "specifications",
        "Waterfall",
        "Agile",
        "Software",
        "methodology",
        "modeling",
        "systems",
        "business",
        "processes",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "Kanban",
        "methodologies",
        "SQL",
        "Numpy",
        "Pandas",
        "Spark",
        "Data",
        "Analysis",
        "Model",
        "Cognitive",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "data",
        "S3",
        "data",
        "store",
        "versioning",
        "life",
        "cycle",
        "policy",
        "Experience",
        "project",
        "JIRAAgile",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "MAMP",
        "Mac",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experienced",
        "UNIXLinux",
        "environments",
        "PyPi",
        "packages",
        "packages",
        "time",
        "Artifactory",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Jinja",
        "testing",
        "applications",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "applications",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Sublime",
        "Text",
        "PyCharm",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MongoDB",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Developed",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "code",
        "PyTest",
        "Unittest",
        "Experience",
        "Spark",
        "Streaming",
        "Spark",
        "SQL",
        "Excellent",
        "communication",
        "Teamwork",
        "presentation",
        "skills",
        "learner",
        "selfstarter",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Capitalone",
        "Richmond",
        "VA",
        "July",
        "Present",
        "Description",
        "Capital",
        "One",
        "Financial",
        "Corporation",
        "bank",
        "company",
        "credit",
        "cards",
        "auto",
        "loans",
        "banking",
        "savings",
        "Capital",
        "One",
        "list",
        "banks",
        "United",
        "States",
        "assets",
        "Online",
        "Brokerage",
        "users",
        "tools",
        "portfolios",
        "trading",
        "work",
        "income",
        "business",
        "trading",
        "application",
        "interface",
        "business",
        "users",
        "Responsibilities",
        "team",
        "developers",
        "Python",
        "applications",
        "D4",
        "CARD",
        "management",
        "Participate",
        "requirement",
        "gathering",
        "analysis",
        "phase",
        "project",
        "business",
        "requirements",
        "workshopsmeetings",
        "business",
        "users",
        "CLIPS",
        "Credit",
        "Line",
        "Increase",
        "Program",
        "Databricks",
        "data",
        "analysis",
        "purposes",
        "Parquet",
        "CSV",
        "files",
        "S3",
        "business",
        "logic",
        "output",
        "S3",
        "Pandas",
        "PySpark",
        "SQL",
        "scripts",
        "solution",
        "PySpark",
        "Wrote",
        "shell",
        "scripts",
        "Spark",
        "configuration",
        "files",
        "S3",
        "time",
        "PySpark",
        "Pandas",
        "data",
        "frames",
        "data",
        "frames",
        "analysis",
        "extraction",
        "manipulation",
        "data",
        "Wrote",
        "python",
        "PyPi",
        "packages",
        "packages",
        "time",
        "Working",
        "knowledge",
        "Amazons",
        "Elastic",
        "Cloud",
        "ComputeEC2",
        "infrastructure",
        "tasks",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Storage",
        "mechanism",
        "s3",
        "buckets",
        "data",
        "SecurityTokenScriptsSTS",
        "unit",
        "test",
        "cases",
        "modules",
        "test",
        "models",
        "PyLint",
        "code",
        "quality",
        "test",
        "cases",
        "Jenkins",
        "IntegrationCI",
        "deploymentCD",
        "Docker",
        "container",
        "end",
        "end",
        "web",
        "application",
        "programming",
        "company",
        "product",
        "management",
        "JIRA",
        "track",
        "report",
        "audit",
        "issues",
        "project",
        "documentation",
        "testing",
        "sql",
        "code",
        "data",
        "reports",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "MySQL",
        "JavaScript",
        "jQuery",
        "Sublime",
        "Text",
        "Atom",
        "PyCharm",
        "Jira",
        "GIT",
        "pybuilder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "HTML5CSS",
        "XML",
        "Python",
        "Developer",
        "Flagstar",
        "Bank",
        "Troy",
        "MI",
        "March",
        "June",
        "Description",
        "Flagstars",
        "Loan",
        "Origination",
        "System",
        "LOS",
        "web",
        "application",
        "brokers",
        "borrowers",
        "origination",
        "details",
        "mortgage",
        "loan",
        "format",
        "loan",
        "phases",
        "loan",
        "life",
        "cycle",
        "Processing",
        "Underwriting",
        "Closing",
        "Funding",
        "PostClosing",
        "origination",
        "users",
        "access",
        "rest",
        "application",
        "Python",
        "web",
        "application",
        "Spring",
        "Spring",
        "MVC",
        "Hibernate",
        "JPA",
        "jQuery",
        "Angular",
        "JS",
        "Bootstrap",
        "JavaScript",
        "Responsibilities",
        "system",
        "services",
        "architecture",
        "Python",
        "message",
        "Kafka",
        "JSON",
        "data",
        "exchange",
        "formats",
        "micro",
        "services",
        "capability",
        "input",
        "files",
        "format",
        "payment",
        "channels",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "REST",
        "API",
        "calls",
        "Varnish",
        "traffic",
        "sweat",
        "advantage",
        "Nginx",
        "combination",
        "Apache",
        "proxy",
        "development",
        "Web",
        "portals",
        "Database",
        "Modelling",
        "PostgreSQL",
        "end",
        "support",
        "HTMLCSS",
        "JQuery",
        "application",
        "messages",
        "log",
        "files",
        "error",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "problems",
        "transaction",
        "breakdown",
        "network",
        "monitoring",
        "resource",
        "monitoring",
        "performance",
        "bottleneck",
        "frameworks",
        "Django",
        "monitoring",
        "application",
        "error",
        "data",
        "database",
        "scrubbing",
        "project",
        "data",
        "values",
        "engineer",
        "legacy",
        "software",
        "Python",
        "downtime",
        "Work",
        "project",
        "Azure",
        "services",
        "environment",
        "deployment",
        "integration",
        "tooling",
        "GitHub",
        "version",
        "control",
        "UNIX",
        "environment",
        "system",
        "performance",
        "API",
        "lifecycle",
        "Performed",
        "unit",
        "testing",
        "leads",
        "implementation",
        "exposure",
        "service",
        "SOA",
        "RESTful",
        "technologies",
        "experience",
        "Microservices",
        "Drop",
        "wizard",
        "Spring",
        "Boot",
        "Lagom",
        "Work",
        "experience",
        "Java",
        "Frameworks",
        "Spring",
        "Hibernate",
        "Environment",
        "Python",
        "Drop",
        "wizard",
        "Spring",
        "Boot",
        "Lagom",
        "Kafka",
        "GitHub",
        "LINUX",
        "Django",
        "Flask",
        "Varnish",
        "Nginx",
        "SOA",
        "Teradata",
        "RESTCI",
        "CD",
        "Python",
        "Developer",
        "Pearl",
        "Insurance",
        "Peoria",
        "Heights",
        "IL",
        "December",
        "February",
        "Description",
        "Pearl",
        "Insurance",
        "Association",
        "federation",
        "health",
        "insurance",
        "organizations",
        "companies",
        "health",
        "Dental",
        "Vision",
        "insurance",
        "United",
        "States",
        "project",
        "interaction",
        "Frontend",
        "user",
        "customer",
        "UI",
        "data",
        "analysis",
        "track",
        "user",
        "responses",
        "customer",
        "Feedback",
        "allowances",
        "kinds",
        "reports",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Developed",
        "user",
        "interface",
        "CSS",
        "PHP",
        "HTML",
        "JavaScript",
        "JQueryCI",
        "CDData",
        "Center",
        "Ansible",
        "infrastructure",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "UseCases",
        "Classes",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "Design",
        "techniques",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "REST",
        "Web",
        "services",
        "business",
        "methods",
        "services",
        "project",
        "end",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "requirement",
        "gathering",
        "architect",
        "Developed",
        "software",
        "tools",
        "clients",
        "customers",
        "organization",
        "Automation",
        "Ansible",
        "Deploying",
        "AWS",
        "environment",
        "test",
        "programs",
        "engineering",
        "processes",
        "Git",
        "repository",
        "project",
        "GitHub",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "Collaborated",
        "teams",
        "teams",
        "issues",
        "feedback",
        "problems",
        "progress",
        "project",
        "team",
        "testing",
        "data",
        "warehouses",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MySQL",
        "REST",
        "Web",
        "Services",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "GitHub",
        "JIRA",
        "GIT",
        "Python",
        "developer",
        "CMC",
        "Hyderabad",
        "Telangana",
        "May",
        "November",
        "Description",
        "CMC",
        "Limited",
        "information",
        "technology",
        "services",
        "consulting",
        "software",
        "company",
        "Business",
        "Development",
        "Solution",
        "Design",
        "Managing",
        "Service",
        "partners",
        "Lead",
        "Generation",
        "Proposal",
        "Development",
        "Develop",
        "BOM",
        "SOW",
        "Site",
        "Meeting",
        "BOM",
        "POCs",
        "Training",
        "Delivery",
        "Market",
        "Intelligence",
        "Customer",
        "Acquisition",
        "products",
        "solutions",
        "Development",
        "PythonDjango",
        "HTMLCSS",
        "JavaScript",
        "Database",
        "PostgreSQL",
        "Responsibilities",
        "test",
        "tool",
        "integration",
        "support",
        "development",
        "sites",
        "world",
        "code",
        "turnaround",
        "time",
        "hours",
        "hour",
        "build",
        "process",
        "builds",
        "day",
        "turnaround",
        "time",
        "code",
        "changes",
        "code",
        "release",
        "process",
        "time",
        "code",
        "releases",
        "hours",
        "hour",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "review",
        "process",
        "integration",
        "automation",
        "Review",
        "Board",
        "Gerrit",
        "need",
        "hour",
        "week",
        "approval",
        "meeting",
        "web",
        "tool",
        "integration",
        "system",
        "release",
        "managers",
        "changes",
        "role",
        "department",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "Coverity",
        "mail",
        "script",
        "code",
        "defects",
        "data",
        "component",
        "report",
        "defects",
        "code",
        "base",
        "REST",
        "APIs",
        "information",
        "assets",
        "technician",
        "automation",
        "tasks",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "Environment",
        "Python",
        "Kafka",
        "GitHub",
        "LINUX",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:43:46.067920",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Capitalone Richmond VA Over 7 years of experience as an Application developer software development and design using Python Django XML HTML DHTML C Oracle PLSQL and Postgres Thorough understanding of providing specifications using Waterfall and Agile Software methodology to modeling systems and business processes Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and Kanban methodologies Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Cognitive about designing deploying and operating highly available scalable and faulttolerant systems using Amazon Web Services AWS Provide Highly available and durable data by using S3 data store versioning and life cycle policy Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and MAMP Mac Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django and Flask Jinja Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS JQuery and JavaScript Experienced in developing REST and SOAP Web Services with Python programming language Worked on various applications using python integrated IDEs like Eclipse IntelliJ Sublime Text and PyCharm Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unittest Experience with Spark Streaming Spark SQL Excellent communication Teamwork interpersonal and presentation skills fast learner and organized selfstarter Work Experience Python Developer Capitalone Richmond VA July 2018 to Present Description Capital One Financial Corporation is a bank holding company specializing in credit cards auto loans banking and savings accounts Capital One is ranked 10th on the list of largest banks in the United States by assets Online Brokerage provides users with the tools to track and manage their portfolios online 247 To integrate diverse trading work flows for fixed income business and provide a consolidated trading application interface to business users Responsibilities Worked with a team of developers on Python applications for D4 CARD management Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Working on CLIPS Credit Line Increase Program Worked on Databricks for data analysis purposes Read the Parquet and CSV files from S3 after applying the business logic and upload the output back to S3 using Pandas and PySpark Analyzed The SQL scripts and design the solution to implement using PySpark Wrote shell scripts for setting up Spark configuration for reading files from S3 at run time Worked on PySpark and Pandas data frames and used those data frames for analysis extraction and manipulation of data Wrote python PyPi packages and used those packages at run time by pulling it from artifactory Working knowledge of Amazons Elastic Cloud ComputeEC2 infrastructure for computational tasks and Simple Storage Service S3 as Storage mechanism Working on s3 buckets to sorting the data and by using the SecurityTokenScriptsSTS Wrote the unit test cases for the modules and integrating the test for models Used PyLint to maintain the code quality Integrating the test cases using the Jenkins for continuous IntegrationCI and continuous deploymentCD Used Docker container for end to end testing locally Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Used JIRA to assign track report and audit issues This project also included the documentation and testing of the new sql code to ensure 100 accurate data compared to the existing reports Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Flagstar Bank Troy MI March 2016 to June 2018 Description Flagstars Loan Origination System LOS is a web application for brokers and borrowers to enter the origination details of a mortgage loan in a standard 1003 format After the loan is originated it goes through several phases of the loan life cycle ie Processing Underwriting Closing Funding and PostClosing After the initial origination only the internal users will have access to the rest of the application This is a Python based web application built primarily using Spring Spring MVC Hibernate JPA jQuery Angular JS Bootstrap and JavaScript Responsibilities The system is a full micro services architecture written in Python utilizing distributed message passing via Kafka with JSON as data exchange formats Created 6 micro services that has the capability to transfer the input files to machine readable format and pass through respective payment channels Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and REST API calls Did fullpage caching well using Varnish and could handle massive traffic without breaking a sweat Experienced in taking advantage of Nginx in combination with Apache by using it as a reverse proxy Supported development of Web portals completed Database Modelling in PostgreSQL front end support in HTMLCSS JQuery Debugging the application and following messages in log files to figure out the error if existing Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Involved in analyzing the problems using transaction breakdown network monitoring and resource monitoring to find the performance bottleneck Maintained and monitored frameworks like Django flask Developed monitoring application which captures the error related data and store it in database Involved in scrubbing project which updates the existing data with hashed values Reverse engineer and reimplement legacy backend software into Python with minimal downtime Work closely with project leads to learn about the Azure services environment deployment and integration with tooling Used GitHub as a version control Worked on UNIX environment Optimized system performance and managed the API lifecycle Performed unit testing Worked closely with leads in implementation exposure on service based SOA RESTful technologies Strong experience in developing Microservices using Drop wizard Spring Boot Lagom Work experience with Java Frameworks like Spring Hibernate Environment Python Drop wizard Spring Boot Lagom Kafka JSON GitHub LINUX Django Flask Varnish Nginx SOA Teradata RESTCI CD Python Developer Pearl Insurance Peoria Heights IL December 2014 to February 2016 Description Pearl Insurance Association is a federation of health insurance organizations and companies providing health Dental Vision insurance in the United States The project is to build an interaction between Frontend user friendly customer UI and backend frequent data analysis to keep track of user responses customer Feedback and allowances and generate various kinds of reports Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed user interface using CSS PHP HTML JavaScript and JQueryCI CDData Center Used Ansible to configure and manage the infrastructure Wrote Python modules to extractload asset data from the MySQL source database Designed and developed UseCases Classes and Object Diagrams using UML Rational Rose for Object Oriented Design techniques Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used PyUnit the Python unit test framework for all Python applications Involved in developing the REST Web services to expose the business methods to external services in the project Worked on front end frameworks like CSS Bootstrap for development of Web application Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Automation Ansible and Deploying on AWS environment Coded test programs and evaluated existing engineering processes Created a Git repository and added the project to GitHub Having experience in Agile Methodologies Scrum stories and sprints experience in Python Collaborated with internal teams and external teams to solve the issues and giving feedback Documented the problems and progress of project most accurately Worked together with team during testing of data warehouses Environment Python Django HTML5CSS MySQL REST Web Services JavaScript Eclipse Linux Shell Scripting JQuery GitHub JIRA GIT AWS Python developer CMC Hyderabad Telangana May 2012 to November 2014 Description CMC Limited is an information technology services consulting and software company Responsible for Business Development Solution Design and Managing Service partners Lead Generation Proposal Development and Develop BOM SOW on Site Meeting BOM Managing POCs and Training Delivery Market Intelligence Customer Acquisition developing new products and solutions Development using PythonDjango HTMLCSS JavaScript Database modelling using PostgreSQL Responsibilities Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Created modern REST APIs from existing information assets Manage a technician that oversees automation and carries out daily tasks Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Environment Python Kafka JSON GitHub LINUX Education Bachelors",
    "unique_id": "3f93ba4e-8c8a-422e-9015-b1c546eb0daf"
}