{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Skytap 7 years of experience as a Python Developer with a deep understanding of technology trends with expertise in the core of complex technologies Solid experience in analysis design and development testing implementation and maintenance of various web applications using Python and Django Hands on Experience with the implementation of Python libraries NumPy SciPy PyTables SQL Alchemy Matplotlib Pandas Beautiful Soup and urllib in various tasks Experience in Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many Python bug fixes Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Experienced in installing configuring modifying testing and deploying applications with Apache NGINX Hands on Experience in building RESTful APIs architecting complex systems with batch and realtime workloads monitoring and instrumenting production systems Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Good amount of experience in handling errorsexceptions and debugging issues in large scale applications Experience in utilizing SAS Procedures Macros and other SAS application for data extraction data cleansing data loading and reporting Experience in Designing and development of web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Experience on Web development using HTML CSS JavaScript jQuery Angular JS AJAX XML and JSON by following W3C standards Authorized to work in the US for any employer Work Experience Python Developer Skytap Seattle WA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Implemented monitoring and established best practices around using Elasticsearch and used AWS Lambda to run code without managing servers Worked on Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Leveraged AWS S3 to store huge amounts of application audit log and also developed tools using Python Shell scripting XML to automate some of the menial tasks Contributed source code in Golang to developing an automation framework for AWS CFN Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML CSS and JavaScripts Created Business Logic using Python to create Planning and Tracking functions and developed multithreaded standalone applications using Python and PHP Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Worked in team of Architects and Developers to build and deploy Python Flask Peewee on Linux server hosted on AWS Worked on creating Relational Database stored objects like Functions Stored Procedures Packages Triggers and Sequences Environment Python Django Golang Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Altegrity Nashville TN August 2016 to February 2017 Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application frontend using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frameworks Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Participate in the design build and deployment of NoSQL implementations like MongoDB and added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on the creation of custom Docker container images tagging and pushing the images and developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Worked with RDBMS like Oracle and MySQL databases to query and read data and created backend database TSQL stored procedures and Jasper Reports Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from the proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of an application with Ansible automation engine Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to the web application Logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python Hadoop Django HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI VuGen Docker Oracle Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer TMobile Dallas TX July 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects and worked in Test driven development with Behave in Python Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing and done code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms and developed API modularizing existing python module with the help of pyYAML libraries and improved performance by using more modularized approach and using more inbuilt methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Used Django APIs for database access and built application logic using python Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using python Flask and implemented monitoring and established best practices around using elastic search Environment Python Django Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer Infosys Hyderabad Telangana August 2011 to June 2014 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Skills Python Django Javascript Flask Java",
    "entities": [
        "QNX Real Time Operating SystemRTOS",
        "PHP Performed",
        "GUI",
        "Designing",
        "HTML AJAX CSS",
        "Agile Software Methodology",
        "Interfacing",
        "Object Diagrams",
        "Python Developer Infosys Hyderabad",
        "JavaScripts Created Business Logic",
        "Amazon Web Services AWS",
        "XML",
        "Telangana",
        "JIRA",
        "Shell",
        "Used Embedded Coder",
        "TX",
        "Amazon AWS S3",
        "Developed",
        "Present Responsibilities Responsible",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Test Driven DevelopmentTDD",
        "Django Websites Created",
        "HTML5",
        "Flask",
        "Collaborated",
        "SQL Queries",
        "Flask Pandas Extensive",
        "Django Flask Sanic PyUnit",
        "RDS",
        "XML SOAP web Service",
        "Views",
        "CLI",
        "PyQt",
        "PythonTornado",
        "MVC",
        "PythonDjango",
        "HTML CSS",
        "API",
        "US",
        "AWS Worked",
        "Work Experience Python Developer Skytap Seattle",
        "Team Wrote",
        "Created",
        "Oracle",
        "Bugzilla Collaborate",
        "SAS",
        "Performed Unit",
        "HTML CSS JavaScript jQuery Angular",
        "SQL",
        "Provided GUI",
        "GitHub",
        "lPythonspan",
        "Database Administration",
        "Python Created Data",
        "SQL Python",
        "Oracle SQLite PostgreSQL MySQL DB2",
        "Integration Testing GUI",
        "Product Management and User Experience",
        "Golang",
        "UML Rational Rose for Object",
        "Performed",
        "the Inquiry Tool",
        "Djangos",
        "UI",
        "Apache NGINX",
        "Amazon Cloud Leveraged AWS S3",
        "Relational Database",
        "PHP",
        "NoSQL",
        "Selenium Python",
        "HTMLCSSjQuery",
        "EBS",
        "PyTest",
        "JQuery",
        "Lambada Redshift Excellent",
        "Asset Department"
    ],
    "experience": "Experience with the implementation of Python libraries NumPy SciPy PyTables SQL Alchemy Matplotlib Pandas Beautiful Soup and urllib in various tasks Experience in Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many Python bug fixes Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Experienced in installing configuring modifying testing and deploying applications with Apache NGINX Hands on Experience in building RESTful APIs architecting complex systems with batch and realtime workloads monitoring and instrumenting production systems Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Good amount of experience in handling errorsexceptions and debugging issues in large scale applications Experience in utilizing SAS Procedures Macros and other SAS application for data extraction data cleansing data loading and reporting Experience in Designing and development of web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Experience on Web development using HTML CSS JavaScript jQuery Angular JS AJAX XML and JSON by following W3C standards Authorized to work in the US for any employer Work Experience Python Developer Skytap Seattle WA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Implemented monitoring and established best practices around using Elasticsearch and used AWS Lambda to run code without managing servers Worked on Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Leveraged AWS S3 to store huge amounts of application audit log and also developed tools using Python Shell scripting XML to automate some of the menial tasks Contributed source code in Golang to developing an automation framework for AWS CFN Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML CSS and JavaScripts Created Business Logic using Python to create Planning and Tracking functions and developed multithreaded standalone applications using Python and PHP Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Worked in team of Architects and Developers to build and deploy Python Flask Peewee on Linux server hosted on AWS Worked on creating Relational Database stored objects like Functions Stored Procedures Packages Triggers and Sequences Environment Python Django Golang Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Altegrity Nashville TN August 2016 to February 2017 Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application frontend using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frameworks Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Participate in the design build and deployment of NoSQL implementations like MongoDB and added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on the creation of custom Docker container images tagging and pushing the images and developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Worked with RDBMS like Oracle and MySQL databases to query and read data and created backend database TSQL stored procedures and Jasper Reports Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from the proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of an application with Ansible automation engine Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to the web application Logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python Hadoop Django HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI VuGen Docker Oracle Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer TMobile Dallas TX July 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects and worked in Test driven development with Behave in Python Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing and done code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms and developed API modularizing existing python module with the help of pyYAML libraries and improved performance by using more modularized approach and using more inbuilt methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Used Django APIs for database access and built application logic using python Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using python Flask and implemented monitoring and established best practices around using elastic search Environment Python Django Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer Infosys Hyderabad Telangana August 2011 to June 2014 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Skills Python Django Javascript Flask Java",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Skytap",
        "years",
        "experience",
        "Python",
        "Developer",
        "understanding",
        "technology",
        "trends",
        "expertise",
        "core",
        "technologies",
        "experience",
        "analysis",
        "design",
        "development",
        "testing",
        "implementation",
        "maintenance",
        "web",
        "applications",
        "Python",
        "Django",
        "Hands",
        "Experience",
        "implementation",
        "Python",
        "NumPy",
        "SciPy",
        "PyTables",
        "SQL",
        "Alchemy",
        "Matplotlib",
        "Pandas",
        "Beautiful",
        "Soup",
        "tasks",
        "Experience",
        "Cloud",
        "Computing",
        "EC2",
        "RDS",
        "S3",
        "Glacier",
        "SQS",
        "SNS",
        "Cloud",
        "Formation",
        "VPC",
        "IAM",
        "Route",
        "EBS",
        "DynamoDB",
        "Lambada",
        "Redshift",
        "Excellent",
        "Experience",
        "knowledge",
        "XML",
        "SOAP",
        "web",
        "Service",
        "inter",
        "software",
        "applications",
        "Experience",
        "python",
        "code",
        "shell",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "design",
        "architecture",
        "development",
        "testing",
        "Experience",
        "Database",
        "Administration",
        "development",
        "design",
        "maintenance",
        "production",
        "support",
        "databases",
        "business",
        "applications",
        "server",
        "setup",
        "MySQL",
        "Server",
        "installation",
        "upgrade",
        "migration",
        "testing",
        "applications",
        "Apache",
        "NGINX",
        "Hands",
        "Experience",
        "APIs",
        "systems",
        "batch",
        "workloads",
        "production",
        "systems",
        "Experience",
        "List",
        "Comprehensions",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Good",
        "amount",
        "experience",
        "errorsexceptions",
        "issues",
        "scale",
        "applications",
        "Experience",
        "SAS",
        "Procedures",
        "Macros",
        "SAS",
        "application",
        "data",
        "extraction",
        "data",
        "data",
        "loading",
        "Experience",
        "Designing",
        "development",
        "web",
        "crawler",
        "python",
        "framework",
        "RabbitMQ",
        "server",
        "micro",
        "services",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Experience",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "databases",
        "MongoDB",
        "Cassandra",
        "Experience",
        "Web",
        "development",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "AJAX",
        "XML",
        "JSON",
        "W3C",
        "standards",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Skytap",
        "Seattle",
        "WA",
        "March",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "CLI",
        "AWS",
        "services",
        "SHELLBash",
        "monitoring",
        "practices",
        "Elasticsearch",
        "AWS",
        "Lambda",
        "code",
        "servers",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Leveraged",
        "AWS",
        "S3",
        "amounts",
        "application",
        "audit",
        "log",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Contributed",
        "source",
        "code",
        "Golang",
        "automation",
        "framework",
        "AWS",
        "CFN",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "CSS",
        "JavaScripts",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "applications",
        "Python",
        "PHP",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "graphs",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "server",
        "AWS",
        "Relational",
        "Database",
        "objects",
        "Functions",
        "Stored",
        "Procedures",
        "Packages",
        "Triggers",
        "Sequences",
        "Environment",
        "Python",
        "Django",
        "Golang",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Altegrity",
        "Nashville",
        "TN",
        "August",
        "February",
        "Responsibilities",
        "project",
        "life",
        "cycle",
        "design",
        "development",
        "implementation",
        "verification",
        "validation",
        "application",
        "frontend",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Django",
        "framework",
        "Python",
        "frameworks",
        "Django",
        "Flask",
        "Sanic",
        "PyUnit",
        "libraries",
        "applications",
        "MVC",
        "architecture",
        "Pyramid",
        "Zope",
        "frameworks",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "High",
        "Charts",
        "matplotlib",
        "data",
        "visualization",
        "sales",
        "tracking",
        "progress",
        "trends",
        "web",
        "applications",
        "employee",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Django",
        "Participate",
        "design",
        "build",
        "deployment",
        "NoSQL",
        "implementations",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "web",
        "traffic",
        "APIs",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "Team",
        "Wrote",
        "PLSQL",
        "Stored",
        "Procedures",
        "database",
        "Packages",
        "table",
        "feature",
        "webpages",
        "type",
        "data",
        "types",
        "use",
        "JavaScript",
        "Python",
        "XML",
        "SOAP",
        "requestresponse",
        "handlers",
        "accounts",
        "trades",
        "security",
        "updates",
        "RDBMS",
        "Oracle",
        "MySQL",
        "data",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Python",
        "scripts",
        "vulnerabilities",
        "SQL",
        "Queries",
        "SQL",
        "injection",
        "permission",
        "checks",
        "performance",
        "analysis",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "integration",
        "Jenkins",
        "deployment",
        "application",
        "automation",
        "engine",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "testing",
        "PyTest",
        "web",
        "application",
        "testing",
        "Selenium",
        "Python",
        "bindings",
        "Embedded",
        "Coder",
        "models",
        "model",
        "source",
        "code",
        "QNX",
        "Real",
        "Time",
        "mode",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "user",
        "stories",
        "acceptance",
        "criteria",
        "JIRA",
        "features",
        "output",
        "requirements",
        "formats",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Collaborate",
        "Product",
        "Management",
        "User",
        "Experience",
        "experts",
        "product",
        "definition",
        "schedule",
        "scope",
        "decisions",
        "Environment",
        "Python",
        "Hadoop",
        "Django",
        "HTML5",
        "CSS",
        "Bootstrap",
        "jQuery",
        "JSON",
        "JavaScript",
        "PostgreSQL",
        "TSQL",
        "MongoDB",
        "SoapUI",
        "VuGen",
        "Docker",
        "Oracle",
        "Charles",
        "Web",
        "Debugging",
        "Ansible",
        "MySQL",
        "Google",
        "Cloud",
        "Amazon",
        "S3",
        "Bugzilla",
        "JIRA",
        "Python",
        "Developer",
        "TMobile",
        "Dallas",
        "TX",
        "July",
        "June",
        "Responsibilities",
        "Python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "email",
        "marketing",
        "campaigns",
        "forms",
        "data",
        "database",
        "Django",
        "Framework",
        "collections",
        "Python",
        "objects",
        "Test",
        "development",
        "Behave",
        "Python",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "login",
        "module",
        "user",
        "registration",
        "products",
        "order",
        "order",
        "performance",
        "data",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Web",
        "application",
        "testing",
        "code",
        "review",
        "GitHub",
        "testing",
        "fixing",
        "bugs",
        "modifications",
        "research",
        "platforms",
        "API",
        "module",
        "help",
        "pyYAML",
        "libraries",
        "performance",
        "approach",
        "methods",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Performed",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "libraries",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Wrote",
        "unit",
        "test",
        "cases",
        "testing",
        "tools",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "views",
        "templates",
        "python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "BIG",
        "DATA",
        "JavaScript",
        "frontend",
        "modules",
        "python",
        "Django",
        "Web",
        "Framework",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "data",
        "management",
        "system",
        "MySQL",
        "Django",
        "APIs",
        "database",
        "access",
        "application",
        "logic",
        "python",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "backend",
        "client",
        "web",
        "application",
        "python",
        "information",
        "XML",
        "files",
        "Expertise",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "XSD",
        "XSLT",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Cassandra",
        "schema",
        "APIs",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "python",
        "Flask",
        "monitoring",
        "practices",
        "search",
        "Environment",
        "Python",
        "Django",
        "Behave",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "Bootstrap",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Perl",
        "Cassandra",
        "Azure",
        "Automation",
        "cloud",
        "services",
        "Python",
        "Developer",
        "Infosys",
        "Hyderabad",
        "Telangana",
        "August",
        "June",
        "Responsibilities",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Design",
        "test",
        "deploy",
        "website",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "function",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "JQuery",
        "Java",
        "script",
        "manipulation",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "SVN",
        "CSS",
        "AJAX",
        "Bugzilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Education",
        "Bachelors",
        "Skills",
        "Python",
        "Django",
        "Javascript",
        "Flask",
        "Java"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:41:10.738221",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Skytap 7 years of experience as a Python Developer with a deep understanding of technology trends with expertise in the core of complex technologies Solid experience in analysis design and development testing implementation and maintenance of various web applications using Python and Django Hands on Experience with the implementation of Python libraries NumPy SciPy PyTables SQL Alchemy Matplotlib Pandas Beautiful Soup and urllib in various tasks Experience in Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many Python bug fixes Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Experienced in installing configuring modifying testing and deploying applications with Apache NGINX Hands on Experience in building RESTful APIs architecting complex systems with batch and realtime workloads monitoring and instrumenting production systems Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Good amount of experience in handling errorsexceptions and debugging issues in large scale applications Experience in utilizing SAS Procedures Macros and other SAS application for data extraction data cleansing data loading and reporting Experience in Designing and development of web crawler in python using Scrappy framework and using RabbitMQ as a messaging server between the micro services Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB and Cassandra Experience on Web development using HTML CSS JavaScript jQuery Angular JS AJAX XML and JSON by following W3C standards Authorized to work in the US for any employer Work Experience Python Developer Skytap Seattle WA March 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Deployed and monitored scalable infrastructure on Amazon Web Services AWS and also used AWS CLI to control various AWS services over SHELLBash Implemented monitoring and established best practices around using Elasticsearch and used AWS Lambda to run code without managing servers Worked on Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Leveraged AWS S3 to store huge amounts of application audit log and also developed tools using Python Shell scripting XML to automate some of the menial tasks Contributed source code in Golang to developing an automation framework for AWS CFN Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML CSS and JavaScripts Created Business Logic using Python to create Planning and Tracking functions and developed multithreaded standalone applications using Python and PHP Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Worked in team of Architects and Developers to build and deploy Python Flask Peewee on Linux server hosted on AWS Worked on creating Relational Database stored objects like Functions Stored Procedures Packages Triggers and Sequences Environment Python Django Golang Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Altegrity Nashville TN August 2016 to February 2017 Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application frontend using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frameworks Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Participate in the design build and deployment of NoSQL implementations like MongoDB and added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on the creation of custom Docker container images tagging and pushing the images and developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Worked with RDBMS like Oracle and MySQL databases to query and read data and created backend database TSQL stored procedures and Jasper Reports Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from the proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of an application with Ansible automation engine Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to the web application Logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python Hadoop Django HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI VuGen Docker Oracle Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer TMobile Dallas TX July 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects and worked in Test driven development with Behave in Python Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Worked on Unit testing Integration testing and Web application testing and done code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms and developed API modularizing existing python module with the help of pyYAML libraries and improved performance by using more modularized approach and using more inbuilt methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Developed entire frontend and backend modules using python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Used Django APIs for database access and built application logic using python Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data Angularjs is used to build efficient backend for client web application Used python to extract information from XML files Expertise in Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using python Flask and implemented monitoring and established best practices around using elastic search Environment Python Django Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services Python Developer Infosys Hyderabad Telangana August 2011 to June 2014 Responsibilities Work with team of developers on python applications for RISK management Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined function I have also used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Used JQuery for all clientside Java script manipulation Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django Education Bachelors Skills Python Django Javascript Flask Java",
    "unique_id": "82f7cd32-e8ec-4931-8f4b-729d446a496c"
}